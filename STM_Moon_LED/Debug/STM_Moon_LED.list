
STM_Moon_LED.elf:     file format elf32-littlearm

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .isr_vector   00000194  08000000  08000000  00010000  2**0
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  1 .text         0002063c  080001a0  080001a0  000101a0  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .rodata       00009820  080207e0  080207e0  000307e0  2**3
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  3 .ARM.extab    00000000  0802a000  0802a000  00040074  2**0
                  CONTENTS
  4 .ARM          00000008  0802a000  0802a000  0003a000  2**2
                  CONTENTS, ALLOC, LOAD, READONLY, DATA
  5 .preinit_array 00000000  0802a008  0802a008  00040074  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  6 .init_array   00000004  0802a008  0802a008  0003a008  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  7 .fini_array   00000004  0802a00c  0802a00c  0003a00c  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  8 .data         00000074  20000000  0802a010  00040000  2**2
                  CONTENTS, ALLOC, LOAD, DATA
  9 .bss          0000016c  20000074  0802a084  00040074  2**2
                  ALLOC
 10 ._user_heap_stack 00000600  200001e0  0802a084  000401e0  2**0
                  ALLOC
 11 .ARM.attributes 00000030  00000000  00000000  00040074  2**0
                  CONTENTS, READONLY
 12 .debug_info   000125de  00000000  00000000  000400a4  2**0
                  CONTENTS, READONLY, DEBUGGING
 13 .debug_abbrev 00002942  00000000  00000000  00052682  2**0
                  CONTENTS, READONLY, DEBUGGING
 14 .debug_aranges 00001008  00000000  00000000  00054fc8  2**3
                  CONTENTS, READONLY, DEBUGGING
 15 .debug_ranges 00000ee0  00000000  00000000  00055fd0  2**3
                  CONTENTS, READONLY, DEBUGGING
 16 .debug_macro  00003cc1  00000000  00000000  00056eb0  2**0
                  CONTENTS, READONLY, DEBUGGING
 17 .debug_line   0000fb71  00000000  00000000  0005ab71  2**0
                  CONTENTS, READONLY, DEBUGGING
 18 .debug_str    0008fc1d  00000000  00000000  0006a6e2  2**0
                  CONTENTS, READONLY, DEBUGGING
 19 .comment      0000007b  00000000  00000000  000fa2ff  2**0
                  CONTENTS, READONLY
 20 .debug_frame  00004954  00000000  00000000  000fa37c  2**2
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

080001a0 <__do_global_dtors_aux>:
 80001a0:	b510      	push	{r4, lr}
 80001a2:	4c05      	ldr	r4, [pc, #20]	; (80001b8 <__do_global_dtors_aux+0x18>)
 80001a4:	7823      	ldrb	r3, [r4, #0]
 80001a6:	b933      	cbnz	r3, 80001b6 <__do_global_dtors_aux+0x16>
 80001a8:	4b04      	ldr	r3, [pc, #16]	; (80001bc <__do_global_dtors_aux+0x1c>)
 80001aa:	b113      	cbz	r3, 80001b2 <__do_global_dtors_aux+0x12>
 80001ac:	4804      	ldr	r0, [pc, #16]	; (80001c0 <__do_global_dtors_aux+0x20>)
 80001ae:	f3af 8000 	nop.w
 80001b2:	2301      	movs	r3, #1
 80001b4:	7023      	strb	r3, [r4, #0]
 80001b6:	bd10      	pop	{r4, pc}
 80001b8:	20000074 	.word	0x20000074
 80001bc:	00000000 	.word	0x00000000
 80001c0:	080207c4 	.word	0x080207c4

080001c4 <frame_dummy>:
 80001c4:	b508      	push	{r3, lr}
 80001c6:	4b03      	ldr	r3, [pc, #12]	; (80001d4 <frame_dummy+0x10>)
 80001c8:	b11b      	cbz	r3, 80001d2 <frame_dummy+0xe>
 80001ca:	4903      	ldr	r1, [pc, #12]	; (80001d8 <frame_dummy+0x14>)
 80001cc:	4803      	ldr	r0, [pc, #12]	; (80001dc <frame_dummy+0x18>)
 80001ce:	f3af 8000 	nop.w
 80001d2:	bd08      	pop	{r3, pc}
 80001d4:	00000000 	.word	0x00000000
 80001d8:	20000078 	.word	0x20000078
 80001dc:	080207c4 	.word	0x080207c4

080001e0 <strlen>:
 80001e0:	4603      	mov	r3, r0
 80001e2:	f813 2b01 	ldrb.w	r2, [r3], #1
 80001e6:	2a00      	cmp	r2, #0
 80001e8:	d1fb      	bne.n	80001e2 <strlen+0x2>
 80001ea:	1a18      	subs	r0, r3, r0
 80001ec:	3801      	subs	r0, #1
 80001ee:	4770      	bx	lr

080001f0 <memchr>:
 80001f0:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 80001f4:	2a10      	cmp	r2, #16
 80001f6:	db2b      	blt.n	8000250 <memchr+0x60>
 80001f8:	f010 0f07 	tst.w	r0, #7
 80001fc:	d008      	beq.n	8000210 <memchr+0x20>
 80001fe:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000202:	3a01      	subs	r2, #1
 8000204:	428b      	cmp	r3, r1
 8000206:	d02d      	beq.n	8000264 <memchr+0x74>
 8000208:	f010 0f07 	tst.w	r0, #7
 800020c:	b342      	cbz	r2, 8000260 <memchr+0x70>
 800020e:	d1f6      	bne.n	80001fe <memchr+0xe>
 8000210:	b4f0      	push	{r4, r5, r6, r7}
 8000212:	ea41 2101 	orr.w	r1, r1, r1, lsl #8
 8000216:	ea41 4101 	orr.w	r1, r1, r1, lsl #16
 800021a:	f022 0407 	bic.w	r4, r2, #7
 800021e:	f07f 0700 	mvns.w	r7, #0
 8000222:	2300      	movs	r3, #0
 8000224:	e8f0 5602 	ldrd	r5, r6, [r0], #8
 8000228:	3c08      	subs	r4, #8
 800022a:	ea85 0501 	eor.w	r5, r5, r1
 800022e:	ea86 0601 	eor.w	r6, r6, r1
 8000232:	fa85 f547 	uadd8	r5, r5, r7
 8000236:	faa3 f587 	sel	r5, r3, r7
 800023a:	fa86 f647 	uadd8	r6, r6, r7
 800023e:	faa5 f687 	sel	r6, r5, r7
 8000242:	b98e      	cbnz	r6, 8000268 <memchr+0x78>
 8000244:	d1ee      	bne.n	8000224 <memchr+0x34>
 8000246:	bcf0      	pop	{r4, r5, r6, r7}
 8000248:	f001 01ff 	and.w	r1, r1, #255	; 0xff
 800024c:	f002 0207 	and.w	r2, r2, #7
 8000250:	b132      	cbz	r2, 8000260 <memchr+0x70>
 8000252:	f810 3b01 	ldrb.w	r3, [r0], #1
 8000256:	3a01      	subs	r2, #1
 8000258:	ea83 0301 	eor.w	r3, r3, r1
 800025c:	b113      	cbz	r3, 8000264 <memchr+0x74>
 800025e:	d1f8      	bne.n	8000252 <memchr+0x62>
 8000260:	2000      	movs	r0, #0
 8000262:	4770      	bx	lr
 8000264:	3801      	subs	r0, #1
 8000266:	4770      	bx	lr
 8000268:	2d00      	cmp	r5, #0
 800026a:	bf06      	itte	eq
 800026c:	4635      	moveq	r5, r6
 800026e:	3803      	subeq	r0, #3
 8000270:	3807      	subne	r0, #7
 8000272:	f015 0f01 	tst.w	r5, #1
 8000276:	d107      	bne.n	8000288 <memchr+0x98>
 8000278:	3001      	adds	r0, #1
 800027a:	f415 7f80 	tst.w	r5, #256	; 0x100
 800027e:	bf02      	ittt	eq
 8000280:	3001      	addeq	r0, #1
 8000282:	f415 3fc0 	tsteq.w	r5, #98304	; 0x18000
 8000286:	3001      	addeq	r0, #1
 8000288:	bcf0      	pop	{r4, r5, r6, r7}
 800028a:	3801      	subs	r0, #1
 800028c:	4770      	bx	lr
 800028e:	bf00      	nop

08000290 <__aeabi_drsub>:
 8000290:	f081 4100 	eor.w	r1, r1, #2147483648	; 0x80000000
 8000294:	e002      	b.n	800029c <__adddf3>
 8000296:	bf00      	nop

08000298 <__aeabi_dsub>:
 8000298:	f083 4300 	eor.w	r3, r3, #2147483648	; 0x80000000

0800029c <__adddf3>:
 800029c:	b530      	push	{r4, r5, lr}
 800029e:	ea4f 0441 	mov.w	r4, r1, lsl #1
 80002a2:	ea4f 0543 	mov.w	r5, r3, lsl #1
 80002a6:	ea94 0f05 	teq	r4, r5
 80002aa:	bf08      	it	eq
 80002ac:	ea90 0f02 	teqeq	r0, r2
 80002b0:	bf1f      	itttt	ne
 80002b2:	ea54 0c00 	orrsne.w	ip, r4, r0
 80002b6:	ea55 0c02 	orrsne.w	ip, r5, r2
 80002ba:	ea7f 5c64 	mvnsne.w	ip, r4, asr #21
 80002be:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 80002c2:	f000 80e2 	beq.w	800048a <__adddf3+0x1ee>
 80002c6:	ea4f 5454 	mov.w	r4, r4, lsr #21
 80002ca:	ebd4 5555 	rsbs	r5, r4, r5, lsr #21
 80002ce:	bfb8      	it	lt
 80002d0:	426d      	neglt	r5, r5
 80002d2:	dd0c      	ble.n	80002ee <__adddf3+0x52>
 80002d4:	442c      	add	r4, r5
 80002d6:	ea80 0202 	eor.w	r2, r0, r2
 80002da:	ea81 0303 	eor.w	r3, r1, r3
 80002de:	ea82 0000 	eor.w	r0, r2, r0
 80002e2:	ea83 0101 	eor.w	r1, r3, r1
 80002e6:	ea80 0202 	eor.w	r2, r0, r2
 80002ea:	ea81 0303 	eor.w	r3, r1, r3
 80002ee:	2d36      	cmp	r5, #54	; 0x36
 80002f0:	bf88      	it	hi
 80002f2:	bd30      	pophi	{r4, r5, pc}
 80002f4:	f011 4f00 	tst.w	r1, #2147483648	; 0x80000000
 80002f8:	ea4f 3101 	mov.w	r1, r1, lsl #12
 80002fc:	f44f 1c80 	mov.w	ip, #1048576	; 0x100000
 8000300:	ea4c 3111 	orr.w	r1, ip, r1, lsr #12
 8000304:	d002      	beq.n	800030c <__adddf3+0x70>
 8000306:	4240      	negs	r0, r0
 8000308:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 800030c:	f013 4f00 	tst.w	r3, #2147483648	; 0x80000000
 8000310:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000314:	ea4c 3313 	orr.w	r3, ip, r3, lsr #12
 8000318:	d002      	beq.n	8000320 <__adddf3+0x84>
 800031a:	4252      	negs	r2, r2
 800031c:	eb63 0343 	sbc.w	r3, r3, r3, lsl #1
 8000320:	ea94 0f05 	teq	r4, r5
 8000324:	f000 80a7 	beq.w	8000476 <__adddf3+0x1da>
 8000328:	f1a4 0401 	sub.w	r4, r4, #1
 800032c:	f1d5 0e20 	rsbs	lr, r5, #32
 8000330:	db0d      	blt.n	800034e <__adddf3+0xb2>
 8000332:	fa02 fc0e 	lsl.w	ip, r2, lr
 8000336:	fa22 f205 	lsr.w	r2, r2, r5
 800033a:	1880      	adds	r0, r0, r2
 800033c:	f141 0100 	adc.w	r1, r1, #0
 8000340:	fa03 f20e 	lsl.w	r2, r3, lr
 8000344:	1880      	adds	r0, r0, r2
 8000346:	fa43 f305 	asr.w	r3, r3, r5
 800034a:	4159      	adcs	r1, r3
 800034c:	e00e      	b.n	800036c <__adddf3+0xd0>
 800034e:	f1a5 0520 	sub.w	r5, r5, #32
 8000352:	f10e 0e20 	add.w	lr, lr, #32
 8000356:	2a01      	cmp	r2, #1
 8000358:	fa03 fc0e 	lsl.w	ip, r3, lr
 800035c:	bf28      	it	cs
 800035e:	f04c 0c02 	orrcs.w	ip, ip, #2
 8000362:	fa43 f305 	asr.w	r3, r3, r5
 8000366:	18c0      	adds	r0, r0, r3
 8000368:	eb51 71e3 	adcs.w	r1, r1, r3, asr #31
 800036c:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000370:	d507      	bpl.n	8000382 <__adddf3+0xe6>
 8000372:	f04f 0e00 	mov.w	lr, #0
 8000376:	f1dc 0c00 	rsbs	ip, ip, #0
 800037a:	eb7e 0000 	sbcs.w	r0, lr, r0
 800037e:	eb6e 0101 	sbc.w	r1, lr, r1
 8000382:	f5b1 1f80 	cmp.w	r1, #1048576	; 0x100000
 8000386:	d31b      	bcc.n	80003c0 <__adddf3+0x124>
 8000388:	f5b1 1f00 	cmp.w	r1, #2097152	; 0x200000
 800038c:	d30c      	bcc.n	80003a8 <__adddf3+0x10c>
 800038e:	0849      	lsrs	r1, r1, #1
 8000390:	ea5f 0030 	movs.w	r0, r0, rrx
 8000394:	ea4f 0c3c 	mov.w	ip, ip, rrx
 8000398:	f104 0401 	add.w	r4, r4, #1
 800039c:	ea4f 5244 	mov.w	r2, r4, lsl #21
 80003a0:	f512 0f80 	cmn.w	r2, #4194304	; 0x400000
 80003a4:	f080 809a 	bcs.w	80004dc <__adddf3+0x240>
 80003a8:	f1bc 4f00 	cmp.w	ip, #2147483648	; 0x80000000
 80003ac:	bf08      	it	eq
 80003ae:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 80003b2:	f150 0000 	adcs.w	r0, r0, #0
 80003b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80003ba:	ea41 0105 	orr.w	r1, r1, r5
 80003be:	bd30      	pop	{r4, r5, pc}
 80003c0:	ea5f 0c4c 	movs.w	ip, ip, lsl #1
 80003c4:	4140      	adcs	r0, r0
 80003c6:	eb41 0101 	adc.w	r1, r1, r1
 80003ca:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80003ce:	f1a4 0401 	sub.w	r4, r4, #1
 80003d2:	d1e9      	bne.n	80003a8 <__adddf3+0x10c>
 80003d4:	f091 0f00 	teq	r1, #0
 80003d8:	bf04      	itt	eq
 80003da:	4601      	moveq	r1, r0
 80003dc:	2000      	moveq	r0, #0
 80003de:	fab1 f381 	clz	r3, r1
 80003e2:	bf08      	it	eq
 80003e4:	3320      	addeq	r3, #32
 80003e6:	f1a3 030b 	sub.w	r3, r3, #11
 80003ea:	f1b3 0220 	subs.w	r2, r3, #32
 80003ee:	da0c      	bge.n	800040a <__adddf3+0x16e>
 80003f0:	320c      	adds	r2, #12
 80003f2:	dd08      	ble.n	8000406 <__adddf3+0x16a>
 80003f4:	f102 0c14 	add.w	ip, r2, #20
 80003f8:	f1c2 020c 	rsb	r2, r2, #12
 80003fc:	fa01 f00c 	lsl.w	r0, r1, ip
 8000400:	fa21 f102 	lsr.w	r1, r1, r2
 8000404:	e00c      	b.n	8000420 <__adddf3+0x184>
 8000406:	f102 0214 	add.w	r2, r2, #20
 800040a:	bfd8      	it	le
 800040c:	f1c2 0c20 	rsble	ip, r2, #32
 8000410:	fa01 f102 	lsl.w	r1, r1, r2
 8000414:	fa20 fc0c 	lsr.w	ip, r0, ip
 8000418:	bfdc      	itt	le
 800041a:	ea41 010c 	orrle.w	r1, r1, ip
 800041e:	4090      	lslle	r0, r2
 8000420:	1ae4      	subs	r4, r4, r3
 8000422:	bfa2      	ittt	ge
 8000424:	eb01 5104 	addge.w	r1, r1, r4, lsl #20
 8000428:	4329      	orrge	r1, r5
 800042a:	bd30      	popge	{r4, r5, pc}
 800042c:	ea6f 0404 	mvn.w	r4, r4
 8000430:	3c1f      	subs	r4, #31
 8000432:	da1c      	bge.n	800046e <__adddf3+0x1d2>
 8000434:	340c      	adds	r4, #12
 8000436:	dc0e      	bgt.n	8000456 <__adddf3+0x1ba>
 8000438:	f104 0414 	add.w	r4, r4, #20
 800043c:	f1c4 0220 	rsb	r2, r4, #32
 8000440:	fa20 f004 	lsr.w	r0, r0, r4
 8000444:	fa01 f302 	lsl.w	r3, r1, r2
 8000448:	ea40 0003 	orr.w	r0, r0, r3
 800044c:	fa21 f304 	lsr.w	r3, r1, r4
 8000450:	ea45 0103 	orr.w	r1, r5, r3
 8000454:	bd30      	pop	{r4, r5, pc}
 8000456:	f1c4 040c 	rsb	r4, r4, #12
 800045a:	f1c4 0220 	rsb	r2, r4, #32
 800045e:	fa20 f002 	lsr.w	r0, r0, r2
 8000462:	fa01 f304 	lsl.w	r3, r1, r4
 8000466:	ea40 0003 	orr.w	r0, r0, r3
 800046a:	4629      	mov	r1, r5
 800046c:	bd30      	pop	{r4, r5, pc}
 800046e:	fa21 f004 	lsr.w	r0, r1, r4
 8000472:	4629      	mov	r1, r5
 8000474:	bd30      	pop	{r4, r5, pc}
 8000476:	f094 0f00 	teq	r4, #0
 800047a:	f483 1380 	eor.w	r3, r3, #1048576	; 0x100000
 800047e:	bf06      	itte	eq
 8000480:	f481 1180 	eoreq.w	r1, r1, #1048576	; 0x100000
 8000484:	3401      	addeq	r4, #1
 8000486:	3d01      	subne	r5, #1
 8000488:	e74e      	b.n	8000328 <__adddf3+0x8c>
 800048a:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 800048e:	bf18      	it	ne
 8000490:	ea7f 5c65 	mvnsne.w	ip, r5, asr #21
 8000494:	d029      	beq.n	80004ea <__adddf3+0x24e>
 8000496:	ea94 0f05 	teq	r4, r5
 800049a:	bf08      	it	eq
 800049c:	ea90 0f02 	teqeq	r0, r2
 80004a0:	d005      	beq.n	80004ae <__adddf3+0x212>
 80004a2:	ea54 0c00 	orrs.w	ip, r4, r0
 80004a6:	bf04      	itt	eq
 80004a8:	4619      	moveq	r1, r3
 80004aa:	4610      	moveq	r0, r2
 80004ac:	bd30      	pop	{r4, r5, pc}
 80004ae:	ea91 0f03 	teq	r1, r3
 80004b2:	bf1e      	ittt	ne
 80004b4:	2100      	movne	r1, #0
 80004b6:	2000      	movne	r0, #0
 80004b8:	bd30      	popne	{r4, r5, pc}
 80004ba:	ea5f 5c54 	movs.w	ip, r4, lsr #21
 80004be:	d105      	bne.n	80004cc <__adddf3+0x230>
 80004c0:	0040      	lsls	r0, r0, #1
 80004c2:	4149      	adcs	r1, r1
 80004c4:	bf28      	it	cs
 80004c6:	f041 4100 	orrcs.w	r1, r1, #2147483648	; 0x80000000
 80004ca:	bd30      	pop	{r4, r5, pc}
 80004cc:	f514 0480 	adds.w	r4, r4, #4194304	; 0x400000
 80004d0:	bf3c      	itt	cc
 80004d2:	f501 1180 	addcc.w	r1, r1, #1048576	; 0x100000
 80004d6:	bd30      	popcc	{r4, r5, pc}
 80004d8:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 80004dc:	f045 41fe 	orr.w	r1, r5, #2130706432	; 0x7f000000
 80004e0:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 80004e4:	f04f 0000 	mov.w	r0, #0
 80004e8:	bd30      	pop	{r4, r5, pc}
 80004ea:	ea7f 5c64 	mvns.w	ip, r4, asr #21
 80004ee:	bf1a      	itte	ne
 80004f0:	4619      	movne	r1, r3
 80004f2:	4610      	movne	r0, r2
 80004f4:	ea7f 5c65 	mvnseq.w	ip, r5, asr #21
 80004f8:	bf1c      	itt	ne
 80004fa:	460b      	movne	r3, r1
 80004fc:	4602      	movne	r2, r0
 80004fe:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 8000502:	bf06      	itte	eq
 8000504:	ea52 3503 	orrseq.w	r5, r2, r3, lsl #12
 8000508:	ea91 0f03 	teqeq	r1, r3
 800050c:	f441 2100 	orrne.w	r1, r1, #524288	; 0x80000
 8000510:	bd30      	pop	{r4, r5, pc}
 8000512:	bf00      	nop

08000514 <__aeabi_ui2d>:
 8000514:	f090 0f00 	teq	r0, #0
 8000518:	bf04      	itt	eq
 800051a:	2100      	moveq	r1, #0
 800051c:	4770      	bxeq	lr
 800051e:	b530      	push	{r4, r5, lr}
 8000520:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000524:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000528:	f04f 0500 	mov.w	r5, #0
 800052c:	f04f 0100 	mov.w	r1, #0
 8000530:	e750      	b.n	80003d4 <__adddf3+0x138>
 8000532:	bf00      	nop

08000534 <__aeabi_i2d>:
 8000534:	f090 0f00 	teq	r0, #0
 8000538:	bf04      	itt	eq
 800053a:	2100      	moveq	r1, #0
 800053c:	4770      	bxeq	lr
 800053e:	b530      	push	{r4, r5, lr}
 8000540:	f44f 6480 	mov.w	r4, #1024	; 0x400
 8000544:	f104 0432 	add.w	r4, r4, #50	; 0x32
 8000548:	f010 4500 	ands.w	r5, r0, #2147483648	; 0x80000000
 800054c:	bf48      	it	mi
 800054e:	4240      	negmi	r0, r0
 8000550:	f04f 0100 	mov.w	r1, #0
 8000554:	e73e      	b.n	80003d4 <__adddf3+0x138>
 8000556:	bf00      	nop

08000558 <__aeabi_f2d>:
 8000558:	0042      	lsls	r2, r0, #1
 800055a:	ea4f 01e2 	mov.w	r1, r2, asr #3
 800055e:	ea4f 0131 	mov.w	r1, r1, rrx
 8000562:	ea4f 7002 	mov.w	r0, r2, lsl #28
 8000566:	bf1f      	itttt	ne
 8000568:	f012 437f 	andsne.w	r3, r2, #4278190080	; 0xff000000
 800056c:	f093 4f7f 	teqne	r3, #4278190080	; 0xff000000
 8000570:	f081 5160 	eorne.w	r1, r1, #939524096	; 0x38000000
 8000574:	4770      	bxne	lr
 8000576:	f032 427f 	bics.w	r2, r2, #4278190080	; 0xff000000
 800057a:	bf08      	it	eq
 800057c:	4770      	bxeq	lr
 800057e:	f093 4f7f 	teq	r3, #4278190080	; 0xff000000
 8000582:	bf04      	itt	eq
 8000584:	f441 2100 	orreq.w	r1, r1, #524288	; 0x80000
 8000588:	4770      	bxeq	lr
 800058a:	b530      	push	{r4, r5, lr}
 800058c:	f44f 7460 	mov.w	r4, #896	; 0x380
 8000590:	f001 4500 	and.w	r5, r1, #2147483648	; 0x80000000
 8000594:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000598:	e71c      	b.n	80003d4 <__adddf3+0x138>
 800059a:	bf00      	nop

0800059c <__aeabi_ul2d>:
 800059c:	ea50 0201 	orrs.w	r2, r0, r1
 80005a0:	bf08      	it	eq
 80005a2:	4770      	bxeq	lr
 80005a4:	b530      	push	{r4, r5, lr}
 80005a6:	f04f 0500 	mov.w	r5, #0
 80005aa:	e00a      	b.n	80005c2 <__aeabi_l2d+0x16>

080005ac <__aeabi_l2d>:
 80005ac:	ea50 0201 	orrs.w	r2, r0, r1
 80005b0:	bf08      	it	eq
 80005b2:	4770      	bxeq	lr
 80005b4:	b530      	push	{r4, r5, lr}
 80005b6:	f011 4500 	ands.w	r5, r1, #2147483648	; 0x80000000
 80005ba:	d502      	bpl.n	80005c2 <__aeabi_l2d+0x16>
 80005bc:	4240      	negs	r0, r0
 80005be:	eb61 0141 	sbc.w	r1, r1, r1, lsl #1
 80005c2:	f44f 6480 	mov.w	r4, #1024	; 0x400
 80005c6:	f104 0432 	add.w	r4, r4, #50	; 0x32
 80005ca:	ea5f 5c91 	movs.w	ip, r1, lsr #22
 80005ce:	f43f aed8 	beq.w	8000382 <__adddf3+0xe6>
 80005d2:	f04f 0203 	mov.w	r2, #3
 80005d6:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005da:	bf18      	it	ne
 80005dc:	3203      	addne	r2, #3
 80005de:	ea5f 0cdc 	movs.w	ip, ip, lsr #3
 80005e2:	bf18      	it	ne
 80005e4:	3203      	addne	r2, #3
 80005e6:	eb02 02dc 	add.w	r2, r2, ip, lsr #3
 80005ea:	f1c2 0320 	rsb	r3, r2, #32
 80005ee:	fa00 fc03 	lsl.w	ip, r0, r3
 80005f2:	fa20 f002 	lsr.w	r0, r0, r2
 80005f6:	fa01 fe03 	lsl.w	lr, r1, r3
 80005fa:	ea40 000e 	orr.w	r0, r0, lr
 80005fe:	fa21 f102 	lsr.w	r1, r1, r2
 8000602:	4414      	add	r4, r2
 8000604:	e6bd      	b.n	8000382 <__adddf3+0xe6>
 8000606:	bf00      	nop

08000608 <__aeabi_dmul>:
 8000608:	b570      	push	{r4, r5, r6, lr}
 800060a:	f04f 0cff 	mov.w	ip, #255	; 0xff
 800060e:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000612:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 8000616:	bf1d      	ittte	ne
 8000618:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 800061c:	ea94 0f0c 	teqne	r4, ip
 8000620:	ea95 0f0c 	teqne	r5, ip
 8000624:	f000 f8de 	bleq	80007e4 <__aeabi_dmul+0x1dc>
 8000628:	442c      	add	r4, r5
 800062a:	ea81 0603 	eor.w	r6, r1, r3
 800062e:	ea21 514c 	bic.w	r1, r1, ip, lsl #21
 8000632:	ea23 534c 	bic.w	r3, r3, ip, lsl #21
 8000636:	ea50 3501 	orrs.w	r5, r0, r1, lsl #12
 800063a:	bf18      	it	ne
 800063c:	ea52 3503 	orrsne.w	r5, r2, r3, lsl #12
 8000640:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 8000644:	f443 1380 	orr.w	r3, r3, #1048576	; 0x100000
 8000648:	d038      	beq.n	80006bc <__aeabi_dmul+0xb4>
 800064a:	fba0 ce02 	umull	ip, lr, r0, r2
 800064e:	f04f 0500 	mov.w	r5, #0
 8000652:	fbe1 e502 	umlal	lr, r5, r1, r2
 8000656:	f006 4200 	and.w	r2, r6, #2147483648	; 0x80000000
 800065a:	fbe0 e503 	umlal	lr, r5, r0, r3
 800065e:	f04f 0600 	mov.w	r6, #0
 8000662:	fbe1 5603 	umlal	r5, r6, r1, r3
 8000666:	f09c 0f00 	teq	ip, #0
 800066a:	bf18      	it	ne
 800066c:	f04e 0e01 	orrne.w	lr, lr, #1
 8000670:	f1a4 04ff 	sub.w	r4, r4, #255	; 0xff
 8000674:	f5b6 7f00 	cmp.w	r6, #512	; 0x200
 8000678:	f564 7440 	sbc.w	r4, r4, #768	; 0x300
 800067c:	d204      	bcs.n	8000688 <__aeabi_dmul+0x80>
 800067e:	ea5f 0e4e 	movs.w	lr, lr, lsl #1
 8000682:	416d      	adcs	r5, r5
 8000684:	eb46 0606 	adc.w	r6, r6, r6
 8000688:	ea42 21c6 	orr.w	r1, r2, r6, lsl #11
 800068c:	ea41 5155 	orr.w	r1, r1, r5, lsr #21
 8000690:	ea4f 20c5 	mov.w	r0, r5, lsl #11
 8000694:	ea40 505e 	orr.w	r0, r0, lr, lsr #21
 8000698:	ea4f 2ece 	mov.w	lr, lr, lsl #11
 800069c:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 80006a0:	bf88      	it	hi
 80006a2:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 80006a6:	d81e      	bhi.n	80006e6 <__aeabi_dmul+0xde>
 80006a8:	f1be 4f00 	cmp.w	lr, #2147483648	; 0x80000000
 80006ac:	bf08      	it	eq
 80006ae:	ea5f 0e50 	movseq.w	lr, r0, lsr #1
 80006b2:	f150 0000 	adcs.w	r0, r0, #0
 80006b6:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 80006ba:	bd70      	pop	{r4, r5, r6, pc}
 80006bc:	f006 4600 	and.w	r6, r6, #2147483648	; 0x80000000
 80006c0:	ea46 0101 	orr.w	r1, r6, r1
 80006c4:	ea40 0002 	orr.w	r0, r0, r2
 80006c8:	ea81 0103 	eor.w	r1, r1, r3
 80006cc:	ebb4 045c 	subs.w	r4, r4, ip, lsr #1
 80006d0:	bfc2      	ittt	gt
 80006d2:	ebd4 050c 	rsbsgt	r5, r4, ip
 80006d6:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80006da:	bd70      	popgt	{r4, r5, r6, pc}
 80006dc:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80006e0:	f04f 0e00 	mov.w	lr, #0
 80006e4:	3c01      	subs	r4, #1
 80006e6:	f300 80ab 	bgt.w	8000840 <__aeabi_dmul+0x238>
 80006ea:	f114 0f36 	cmn.w	r4, #54	; 0x36
 80006ee:	bfde      	ittt	le
 80006f0:	2000      	movle	r0, #0
 80006f2:	f001 4100 	andle.w	r1, r1, #2147483648	; 0x80000000
 80006f6:	bd70      	pople	{r4, r5, r6, pc}
 80006f8:	f1c4 0400 	rsb	r4, r4, #0
 80006fc:	3c20      	subs	r4, #32
 80006fe:	da35      	bge.n	800076c <__aeabi_dmul+0x164>
 8000700:	340c      	adds	r4, #12
 8000702:	dc1b      	bgt.n	800073c <__aeabi_dmul+0x134>
 8000704:	f104 0414 	add.w	r4, r4, #20
 8000708:	f1c4 0520 	rsb	r5, r4, #32
 800070c:	fa00 f305 	lsl.w	r3, r0, r5
 8000710:	fa20 f004 	lsr.w	r0, r0, r4
 8000714:	fa01 f205 	lsl.w	r2, r1, r5
 8000718:	ea40 0002 	orr.w	r0, r0, r2
 800071c:	f001 4200 	and.w	r2, r1, #2147483648	; 0x80000000
 8000720:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 8000724:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 8000728:	fa21 f604 	lsr.w	r6, r1, r4
 800072c:	eb42 0106 	adc.w	r1, r2, r6
 8000730:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000734:	bf08      	it	eq
 8000736:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800073a:	bd70      	pop	{r4, r5, r6, pc}
 800073c:	f1c4 040c 	rsb	r4, r4, #12
 8000740:	f1c4 0520 	rsb	r5, r4, #32
 8000744:	fa00 f304 	lsl.w	r3, r0, r4
 8000748:	fa20 f005 	lsr.w	r0, r0, r5
 800074c:	fa01 f204 	lsl.w	r2, r1, r4
 8000750:	ea40 0002 	orr.w	r0, r0, r2
 8000754:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000758:	eb10 70d3 	adds.w	r0, r0, r3, lsr #31
 800075c:	f141 0100 	adc.w	r1, r1, #0
 8000760:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 8000764:	bf08      	it	eq
 8000766:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 800076a:	bd70      	pop	{r4, r5, r6, pc}
 800076c:	f1c4 0520 	rsb	r5, r4, #32
 8000770:	fa00 f205 	lsl.w	r2, r0, r5
 8000774:	ea4e 0e02 	orr.w	lr, lr, r2
 8000778:	fa20 f304 	lsr.w	r3, r0, r4
 800077c:	fa01 f205 	lsl.w	r2, r1, r5
 8000780:	ea43 0302 	orr.w	r3, r3, r2
 8000784:	fa21 f004 	lsr.w	r0, r1, r4
 8000788:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 800078c:	fa21 f204 	lsr.w	r2, r1, r4
 8000790:	ea20 0002 	bic.w	r0, r0, r2
 8000794:	eb00 70d3 	add.w	r0, r0, r3, lsr #31
 8000798:	ea5e 0e43 	orrs.w	lr, lr, r3, lsl #1
 800079c:	bf08      	it	eq
 800079e:	ea20 70d3 	biceq.w	r0, r0, r3, lsr #31
 80007a2:	bd70      	pop	{r4, r5, r6, pc}
 80007a4:	f094 0f00 	teq	r4, #0
 80007a8:	d10f      	bne.n	80007ca <__aeabi_dmul+0x1c2>
 80007aa:	f001 4600 	and.w	r6, r1, #2147483648	; 0x80000000
 80007ae:	0040      	lsls	r0, r0, #1
 80007b0:	eb41 0101 	adc.w	r1, r1, r1
 80007b4:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 80007b8:	bf08      	it	eq
 80007ba:	3c01      	subeq	r4, #1
 80007bc:	d0f7      	beq.n	80007ae <__aeabi_dmul+0x1a6>
 80007be:	ea41 0106 	orr.w	r1, r1, r6
 80007c2:	f095 0f00 	teq	r5, #0
 80007c6:	bf18      	it	ne
 80007c8:	4770      	bxne	lr
 80007ca:	f003 4600 	and.w	r6, r3, #2147483648	; 0x80000000
 80007ce:	0052      	lsls	r2, r2, #1
 80007d0:	eb43 0303 	adc.w	r3, r3, r3
 80007d4:	f413 1f80 	tst.w	r3, #1048576	; 0x100000
 80007d8:	bf08      	it	eq
 80007da:	3d01      	subeq	r5, #1
 80007dc:	d0f7      	beq.n	80007ce <__aeabi_dmul+0x1c6>
 80007de:	ea43 0306 	orr.w	r3, r3, r6
 80007e2:	4770      	bx	lr
 80007e4:	ea94 0f0c 	teq	r4, ip
 80007e8:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80007ec:	bf18      	it	ne
 80007ee:	ea95 0f0c 	teqne	r5, ip
 80007f2:	d00c      	beq.n	800080e <__aeabi_dmul+0x206>
 80007f4:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 80007f8:	bf18      	it	ne
 80007fa:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 80007fe:	d1d1      	bne.n	80007a4 <__aeabi_dmul+0x19c>
 8000800:	ea81 0103 	eor.w	r1, r1, r3
 8000804:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000808:	f04f 0000 	mov.w	r0, #0
 800080c:	bd70      	pop	{r4, r5, r6, pc}
 800080e:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000812:	bf06      	itte	eq
 8000814:	4610      	moveq	r0, r2
 8000816:	4619      	moveq	r1, r3
 8000818:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 800081c:	d019      	beq.n	8000852 <__aeabi_dmul+0x24a>
 800081e:	ea94 0f0c 	teq	r4, ip
 8000822:	d102      	bne.n	800082a <__aeabi_dmul+0x222>
 8000824:	ea50 3601 	orrs.w	r6, r0, r1, lsl #12
 8000828:	d113      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800082a:	ea95 0f0c 	teq	r5, ip
 800082e:	d105      	bne.n	800083c <__aeabi_dmul+0x234>
 8000830:	ea52 3603 	orrs.w	r6, r2, r3, lsl #12
 8000834:	bf1c      	itt	ne
 8000836:	4610      	movne	r0, r2
 8000838:	4619      	movne	r1, r3
 800083a:	d10a      	bne.n	8000852 <__aeabi_dmul+0x24a>
 800083c:	ea81 0103 	eor.w	r1, r1, r3
 8000840:	f001 4100 	and.w	r1, r1, #2147483648	; 0x80000000
 8000844:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000848:	f441 0170 	orr.w	r1, r1, #15728640	; 0xf00000
 800084c:	f04f 0000 	mov.w	r0, #0
 8000850:	bd70      	pop	{r4, r5, r6, pc}
 8000852:	f041 41fe 	orr.w	r1, r1, #2130706432	; 0x7f000000
 8000856:	f441 0178 	orr.w	r1, r1, #16252928	; 0xf80000
 800085a:	bd70      	pop	{r4, r5, r6, pc}

0800085c <__aeabi_ddiv>:
 800085c:	b570      	push	{r4, r5, r6, lr}
 800085e:	f04f 0cff 	mov.w	ip, #255	; 0xff
 8000862:	f44c 6ce0 	orr.w	ip, ip, #1792	; 0x700
 8000866:	ea1c 5411 	ands.w	r4, ip, r1, lsr #20
 800086a:	bf1d      	ittte	ne
 800086c:	ea1c 5513 	andsne.w	r5, ip, r3, lsr #20
 8000870:	ea94 0f0c 	teqne	r4, ip
 8000874:	ea95 0f0c 	teqne	r5, ip
 8000878:	f000 f8a7 	bleq	80009ca <__aeabi_ddiv+0x16e>
 800087c:	eba4 0405 	sub.w	r4, r4, r5
 8000880:	ea81 0e03 	eor.w	lr, r1, r3
 8000884:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000888:	ea4f 3101 	mov.w	r1, r1, lsl #12
 800088c:	f000 8088 	beq.w	80009a0 <__aeabi_ddiv+0x144>
 8000890:	ea4f 3303 	mov.w	r3, r3, lsl #12
 8000894:	f04f 5580 	mov.w	r5, #268435456	; 0x10000000
 8000898:	ea45 1313 	orr.w	r3, r5, r3, lsr #4
 800089c:	ea43 6312 	orr.w	r3, r3, r2, lsr #24
 80008a0:	ea4f 2202 	mov.w	r2, r2, lsl #8
 80008a4:	ea45 1511 	orr.w	r5, r5, r1, lsr #4
 80008a8:	ea45 6510 	orr.w	r5, r5, r0, lsr #24
 80008ac:	ea4f 2600 	mov.w	r6, r0, lsl #8
 80008b0:	f00e 4100 	and.w	r1, lr, #2147483648	; 0x80000000
 80008b4:	429d      	cmp	r5, r3
 80008b6:	bf08      	it	eq
 80008b8:	4296      	cmpeq	r6, r2
 80008ba:	f144 04fd 	adc.w	r4, r4, #253	; 0xfd
 80008be:	f504 7440 	add.w	r4, r4, #768	; 0x300
 80008c2:	d202      	bcs.n	80008ca <__aeabi_ddiv+0x6e>
 80008c4:	085b      	lsrs	r3, r3, #1
 80008c6:	ea4f 0232 	mov.w	r2, r2, rrx
 80008ca:	1ab6      	subs	r6, r6, r2
 80008cc:	eb65 0503 	sbc.w	r5, r5, r3
 80008d0:	085b      	lsrs	r3, r3, #1
 80008d2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008d6:	f44f 1080 	mov.w	r0, #1048576	; 0x100000
 80008da:	f44f 2c00 	mov.w	ip, #524288	; 0x80000
 80008de:	ebb6 0e02 	subs.w	lr, r6, r2
 80008e2:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008e6:	bf22      	ittt	cs
 80008e8:	1ab6      	subcs	r6, r6, r2
 80008ea:	4675      	movcs	r5, lr
 80008ec:	ea40 000c 	orrcs.w	r0, r0, ip
 80008f0:	085b      	lsrs	r3, r3, #1
 80008f2:	ea4f 0232 	mov.w	r2, r2, rrx
 80008f6:	ebb6 0e02 	subs.w	lr, r6, r2
 80008fa:	eb75 0e03 	sbcs.w	lr, r5, r3
 80008fe:	bf22      	ittt	cs
 8000900:	1ab6      	subcs	r6, r6, r2
 8000902:	4675      	movcs	r5, lr
 8000904:	ea40 005c 	orrcs.w	r0, r0, ip, lsr #1
 8000908:	085b      	lsrs	r3, r3, #1
 800090a:	ea4f 0232 	mov.w	r2, r2, rrx
 800090e:	ebb6 0e02 	subs.w	lr, r6, r2
 8000912:	eb75 0e03 	sbcs.w	lr, r5, r3
 8000916:	bf22      	ittt	cs
 8000918:	1ab6      	subcs	r6, r6, r2
 800091a:	4675      	movcs	r5, lr
 800091c:	ea40 009c 	orrcs.w	r0, r0, ip, lsr #2
 8000920:	085b      	lsrs	r3, r3, #1
 8000922:	ea4f 0232 	mov.w	r2, r2, rrx
 8000926:	ebb6 0e02 	subs.w	lr, r6, r2
 800092a:	eb75 0e03 	sbcs.w	lr, r5, r3
 800092e:	bf22      	ittt	cs
 8000930:	1ab6      	subcs	r6, r6, r2
 8000932:	4675      	movcs	r5, lr
 8000934:	ea40 00dc 	orrcs.w	r0, r0, ip, lsr #3
 8000938:	ea55 0e06 	orrs.w	lr, r5, r6
 800093c:	d018      	beq.n	8000970 <__aeabi_ddiv+0x114>
 800093e:	ea4f 1505 	mov.w	r5, r5, lsl #4
 8000942:	ea45 7516 	orr.w	r5, r5, r6, lsr #28
 8000946:	ea4f 1606 	mov.w	r6, r6, lsl #4
 800094a:	ea4f 03c3 	mov.w	r3, r3, lsl #3
 800094e:	ea43 7352 	orr.w	r3, r3, r2, lsr #29
 8000952:	ea4f 02c2 	mov.w	r2, r2, lsl #3
 8000956:	ea5f 1c1c 	movs.w	ip, ip, lsr #4
 800095a:	d1c0      	bne.n	80008de <__aeabi_ddiv+0x82>
 800095c:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000960:	d10b      	bne.n	800097a <__aeabi_ddiv+0x11e>
 8000962:	ea41 0100 	orr.w	r1, r1, r0
 8000966:	f04f 0000 	mov.w	r0, #0
 800096a:	f04f 4c00 	mov.w	ip, #2147483648	; 0x80000000
 800096e:	e7b6      	b.n	80008de <__aeabi_ddiv+0x82>
 8000970:	f411 1f80 	tst.w	r1, #1048576	; 0x100000
 8000974:	bf04      	itt	eq
 8000976:	4301      	orreq	r1, r0
 8000978:	2000      	moveq	r0, #0
 800097a:	f1b4 0cfd 	subs.w	ip, r4, #253	; 0xfd
 800097e:	bf88      	it	hi
 8000980:	f5bc 6fe0 	cmphi.w	ip, #1792	; 0x700
 8000984:	f63f aeaf 	bhi.w	80006e6 <__aeabi_dmul+0xde>
 8000988:	ebb5 0c03 	subs.w	ip, r5, r3
 800098c:	bf04      	itt	eq
 800098e:	ebb6 0c02 	subseq.w	ip, r6, r2
 8000992:	ea5f 0c50 	movseq.w	ip, r0, lsr #1
 8000996:	f150 0000 	adcs.w	r0, r0, #0
 800099a:	eb41 5104 	adc.w	r1, r1, r4, lsl #20
 800099e:	bd70      	pop	{r4, r5, r6, pc}
 80009a0:	f00e 4e00 	and.w	lr, lr, #2147483648	; 0x80000000
 80009a4:	ea4e 3111 	orr.w	r1, lr, r1, lsr #12
 80009a8:	eb14 045c 	adds.w	r4, r4, ip, lsr #1
 80009ac:	bfc2      	ittt	gt
 80009ae:	ebd4 050c 	rsbsgt	r5, r4, ip
 80009b2:	ea41 5104 	orrgt.w	r1, r1, r4, lsl #20
 80009b6:	bd70      	popgt	{r4, r5, r6, pc}
 80009b8:	f441 1180 	orr.w	r1, r1, #1048576	; 0x100000
 80009bc:	f04f 0e00 	mov.w	lr, #0
 80009c0:	3c01      	subs	r4, #1
 80009c2:	e690      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009c4:	ea45 0e06 	orr.w	lr, r5, r6
 80009c8:	e68d      	b.n	80006e6 <__aeabi_dmul+0xde>
 80009ca:	ea0c 5513 	and.w	r5, ip, r3, lsr #20
 80009ce:	ea94 0f0c 	teq	r4, ip
 80009d2:	bf08      	it	eq
 80009d4:	ea95 0f0c 	teqeq	r5, ip
 80009d8:	f43f af3b 	beq.w	8000852 <__aeabi_dmul+0x24a>
 80009dc:	ea94 0f0c 	teq	r4, ip
 80009e0:	d10a      	bne.n	80009f8 <__aeabi_ddiv+0x19c>
 80009e2:	ea50 3401 	orrs.w	r4, r0, r1, lsl #12
 80009e6:	f47f af34 	bne.w	8000852 <__aeabi_dmul+0x24a>
 80009ea:	ea95 0f0c 	teq	r5, ip
 80009ee:	f47f af25 	bne.w	800083c <__aeabi_dmul+0x234>
 80009f2:	4610      	mov	r0, r2
 80009f4:	4619      	mov	r1, r3
 80009f6:	e72c      	b.n	8000852 <__aeabi_dmul+0x24a>
 80009f8:	ea95 0f0c 	teq	r5, ip
 80009fc:	d106      	bne.n	8000a0c <__aeabi_ddiv+0x1b0>
 80009fe:	ea52 3503 	orrs.w	r5, r2, r3, lsl #12
 8000a02:	f43f aefd 	beq.w	8000800 <__aeabi_dmul+0x1f8>
 8000a06:	4610      	mov	r0, r2
 8000a08:	4619      	mov	r1, r3
 8000a0a:	e722      	b.n	8000852 <__aeabi_dmul+0x24a>
 8000a0c:	ea50 0641 	orrs.w	r6, r0, r1, lsl #1
 8000a10:	bf18      	it	ne
 8000a12:	ea52 0643 	orrsne.w	r6, r2, r3, lsl #1
 8000a16:	f47f aec5 	bne.w	80007a4 <__aeabi_dmul+0x19c>
 8000a1a:	ea50 0441 	orrs.w	r4, r0, r1, lsl #1
 8000a1e:	f47f af0d 	bne.w	800083c <__aeabi_dmul+0x234>
 8000a22:	ea52 0543 	orrs.w	r5, r2, r3, lsl #1
 8000a26:	f47f aeeb 	bne.w	8000800 <__aeabi_dmul+0x1f8>
 8000a2a:	e712      	b.n	8000852 <__aeabi_dmul+0x24a>

08000a2c <__gedf2>:
 8000a2c:	f04f 3cff 	mov.w	ip, #4294967295
 8000a30:	e006      	b.n	8000a40 <__cmpdf2+0x4>
 8000a32:	bf00      	nop

08000a34 <__ledf2>:
 8000a34:	f04f 0c01 	mov.w	ip, #1
 8000a38:	e002      	b.n	8000a40 <__cmpdf2+0x4>
 8000a3a:	bf00      	nop

08000a3c <__cmpdf2>:
 8000a3c:	f04f 0c01 	mov.w	ip, #1
 8000a40:	f84d cd04 	str.w	ip, [sp, #-4]!
 8000a44:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a48:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000a50:	bf18      	it	ne
 8000a52:	ea7f 5c6c 	mvnsne.w	ip, ip, asr #21
 8000a56:	d01b      	beq.n	8000a90 <__cmpdf2+0x54>
 8000a58:	b001      	add	sp, #4
 8000a5a:	ea50 0c41 	orrs.w	ip, r0, r1, lsl #1
 8000a5e:	bf0c      	ite	eq
 8000a60:	ea52 0c43 	orrseq.w	ip, r2, r3, lsl #1
 8000a64:	ea91 0f03 	teqne	r1, r3
 8000a68:	bf02      	ittt	eq
 8000a6a:	ea90 0f02 	teqeq	r0, r2
 8000a6e:	2000      	moveq	r0, #0
 8000a70:	4770      	bxeq	lr
 8000a72:	f110 0f00 	cmn.w	r0, #0
 8000a76:	ea91 0f03 	teq	r1, r3
 8000a7a:	bf58      	it	pl
 8000a7c:	4299      	cmppl	r1, r3
 8000a7e:	bf08      	it	eq
 8000a80:	4290      	cmpeq	r0, r2
 8000a82:	bf2c      	ite	cs
 8000a84:	17d8      	asrcs	r0, r3, #31
 8000a86:	ea6f 70e3 	mvncc.w	r0, r3, asr #31
 8000a8a:	f040 0001 	orr.w	r0, r0, #1
 8000a8e:	4770      	bx	lr
 8000a90:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000a94:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000a98:	d102      	bne.n	8000aa0 <__cmpdf2+0x64>
 8000a9a:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000a9e:	d107      	bne.n	8000ab0 <__cmpdf2+0x74>
 8000aa0:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000aa4:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000aa8:	d1d6      	bne.n	8000a58 <__cmpdf2+0x1c>
 8000aaa:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000aae:	d0d3      	beq.n	8000a58 <__cmpdf2+0x1c>
 8000ab0:	f85d 0b04 	ldr.w	r0, [sp], #4
 8000ab4:	4770      	bx	lr
 8000ab6:	bf00      	nop

08000ab8 <__aeabi_cdrcmple>:
 8000ab8:	4684      	mov	ip, r0
 8000aba:	4610      	mov	r0, r2
 8000abc:	4662      	mov	r2, ip
 8000abe:	468c      	mov	ip, r1
 8000ac0:	4619      	mov	r1, r3
 8000ac2:	4663      	mov	r3, ip
 8000ac4:	e000      	b.n	8000ac8 <__aeabi_cdcmpeq>
 8000ac6:	bf00      	nop

08000ac8 <__aeabi_cdcmpeq>:
 8000ac8:	b501      	push	{r0, lr}
 8000aca:	f7ff ffb7 	bl	8000a3c <__cmpdf2>
 8000ace:	2800      	cmp	r0, #0
 8000ad0:	bf48      	it	mi
 8000ad2:	f110 0f00 	cmnmi.w	r0, #0
 8000ad6:	bd01      	pop	{r0, pc}

08000ad8 <__aeabi_dcmpeq>:
 8000ad8:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000adc:	f7ff fff4 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000ae0:	bf0c      	ite	eq
 8000ae2:	2001      	moveq	r0, #1
 8000ae4:	2000      	movne	r0, #0
 8000ae6:	f85d fb08 	ldr.w	pc, [sp], #8
 8000aea:	bf00      	nop

08000aec <__aeabi_dcmplt>:
 8000aec:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000af0:	f7ff ffea 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000af4:	bf34      	ite	cc
 8000af6:	2001      	movcc	r0, #1
 8000af8:	2000      	movcs	r0, #0
 8000afa:	f85d fb08 	ldr.w	pc, [sp], #8
 8000afe:	bf00      	nop

08000b00 <__aeabi_dcmple>:
 8000b00:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b04:	f7ff ffe0 	bl	8000ac8 <__aeabi_cdcmpeq>
 8000b08:	bf94      	ite	ls
 8000b0a:	2001      	movls	r0, #1
 8000b0c:	2000      	movhi	r0, #0
 8000b0e:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b12:	bf00      	nop

08000b14 <__aeabi_dcmpge>:
 8000b14:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b18:	f7ff ffce 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b1c:	bf94      	ite	ls
 8000b1e:	2001      	movls	r0, #1
 8000b20:	2000      	movhi	r0, #0
 8000b22:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b26:	bf00      	nop

08000b28 <__aeabi_dcmpgt>:
 8000b28:	f84d ed08 	str.w	lr, [sp, #-8]!
 8000b2c:	f7ff ffc4 	bl	8000ab8 <__aeabi_cdrcmple>
 8000b30:	bf34      	ite	cc
 8000b32:	2001      	movcc	r0, #1
 8000b34:	2000      	movcs	r0, #0
 8000b36:	f85d fb08 	ldr.w	pc, [sp], #8
 8000b3a:	bf00      	nop

08000b3c <__aeabi_dcmpun>:
 8000b3c:	ea4f 0c41 	mov.w	ip, r1, lsl #1
 8000b40:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b44:	d102      	bne.n	8000b4c <__aeabi_dcmpun+0x10>
 8000b46:	ea50 3c01 	orrs.w	ip, r0, r1, lsl #12
 8000b4a:	d10a      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b4c:	ea4f 0c43 	mov.w	ip, r3, lsl #1
 8000b50:	ea7f 5c6c 	mvns.w	ip, ip, asr #21
 8000b54:	d102      	bne.n	8000b5c <__aeabi_dcmpun+0x20>
 8000b56:	ea52 3c03 	orrs.w	ip, r2, r3, lsl #12
 8000b5a:	d102      	bne.n	8000b62 <__aeabi_dcmpun+0x26>
 8000b5c:	f04f 0000 	mov.w	r0, #0
 8000b60:	4770      	bx	lr
 8000b62:	f04f 0001 	mov.w	r0, #1
 8000b66:	4770      	bx	lr

08000b68 <__aeabi_d2uiz>:
 8000b68:	004a      	lsls	r2, r1, #1
 8000b6a:	d211      	bcs.n	8000b90 <__aeabi_d2uiz+0x28>
 8000b6c:	f512 1200 	adds.w	r2, r2, #2097152	; 0x200000
 8000b70:	d211      	bcs.n	8000b96 <__aeabi_d2uiz+0x2e>
 8000b72:	d50d      	bpl.n	8000b90 <__aeabi_d2uiz+0x28>
 8000b74:	f46f 7378 	mvn.w	r3, #992	; 0x3e0
 8000b78:	ebb3 5262 	subs.w	r2, r3, r2, asr #21
 8000b7c:	d40e      	bmi.n	8000b9c <__aeabi_d2uiz+0x34>
 8000b7e:	ea4f 23c1 	mov.w	r3, r1, lsl #11
 8000b82:	f043 4300 	orr.w	r3, r3, #2147483648	; 0x80000000
 8000b86:	ea43 5350 	orr.w	r3, r3, r0, lsr #21
 8000b8a:	fa23 f002 	lsr.w	r0, r3, r2
 8000b8e:	4770      	bx	lr
 8000b90:	f04f 0000 	mov.w	r0, #0
 8000b94:	4770      	bx	lr
 8000b96:	ea50 3001 	orrs.w	r0, r0, r1, lsl #12
 8000b9a:	d102      	bne.n	8000ba2 <__aeabi_d2uiz+0x3a>
 8000b9c:	f04f 30ff 	mov.w	r0, #4294967295
 8000ba0:	4770      	bx	lr
 8000ba2:	f04f 0000 	mov.w	r0, #0
 8000ba6:	4770      	bx	lr

08000ba8 <__aeabi_uldivmod>:
 8000ba8:	b953      	cbnz	r3, 8000bc0 <__aeabi_uldivmod+0x18>
 8000baa:	b94a      	cbnz	r2, 8000bc0 <__aeabi_uldivmod+0x18>
 8000bac:	2900      	cmp	r1, #0
 8000bae:	bf08      	it	eq
 8000bb0:	2800      	cmpeq	r0, #0
 8000bb2:	bf1c      	itt	ne
 8000bb4:	f04f 31ff 	movne.w	r1, #4294967295
 8000bb8:	f04f 30ff 	movne.w	r0, #4294967295
 8000bbc:	f000 b972 	b.w	8000ea4 <__aeabi_idiv0>
 8000bc0:	f1ad 0c08 	sub.w	ip, sp, #8
 8000bc4:	e96d ce04 	strd	ip, lr, [sp, #-16]!
 8000bc8:	f000 f806 	bl	8000bd8 <__udivmoddi4>
 8000bcc:	f8dd e004 	ldr.w	lr, [sp, #4]
 8000bd0:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8000bd4:	b004      	add	sp, #16
 8000bd6:	4770      	bx	lr

08000bd8 <__udivmoddi4>:
 8000bd8:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 8000bdc:	9e08      	ldr	r6, [sp, #32]
 8000bde:	4604      	mov	r4, r0
 8000be0:	4688      	mov	r8, r1
 8000be2:	2b00      	cmp	r3, #0
 8000be4:	d14b      	bne.n	8000c7e <__udivmoddi4+0xa6>
 8000be6:	428a      	cmp	r2, r1
 8000be8:	4615      	mov	r5, r2
 8000bea:	d967      	bls.n	8000cbc <__udivmoddi4+0xe4>
 8000bec:	fab2 f282 	clz	r2, r2
 8000bf0:	b14a      	cbz	r2, 8000c06 <__udivmoddi4+0x2e>
 8000bf2:	f1c2 0720 	rsb	r7, r2, #32
 8000bf6:	fa01 f302 	lsl.w	r3, r1, r2
 8000bfa:	fa20 f707 	lsr.w	r7, r0, r7
 8000bfe:	4095      	lsls	r5, r2
 8000c00:	ea47 0803 	orr.w	r8, r7, r3
 8000c04:	4094      	lsls	r4, r2
 8000c06:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000c0a:	0c23      	lsrs	r3, r4, #16
 8000c0c:	fbb8 f7fe 	udiv	r7, r8, lr
 8000c10:	fa1f fc85 	uxth.w	ip, r5
 8000c14:	fb0e 8817 	mls	r8, lr, r7, r8
 8000c18:	ea43 4308 	orr.w	r3, r3, r8, lsl #16
 8000c1c:	fb07 f10c 	mul.w	r1, r7, ip
 8000c20:	4299      	cmp	r1, r3
 8000c22:	d909      	bls.n	8000c38 <__udivmoddi4+0x60>
 8000c24:	18eb      	adds	r3, r5, r3
 8000c26:	f107 30ff 	add.w	r0, r7, #4294967295
 8000c2a:	f080 811b 	bcs.w	8000e64 <__udivmoddi4+0x28c>
 8000c2e:	4299      	cmp	r1, r3
 8000c30:	f240 8118 	bls.w	8000e64 <__udivmoddi4+0x28c>
 8000c34:	3f02      	subs	r7, #2
 8000c36:	442b      	add	r3, r5
 8000c38:	1a5b      	subs	r3, r3, r1
 8000c3a:	b2a4      	uxth	r4, r4
 8000c3c:	fbb3 f0fe 	udiv	r0, r3, lr
 8000c40:	fb0e 3310 	mls	r3, lr, r0, r3
 8000c44:	ea44 4403 	orr.w	r4, r4, r3, lsl #16
 8000c48:	fb00 fc0c 	mul.w	ip, r0, ip
 8000c4c:	45a4      	cmp	ip, r4
 8000c4e:	d909      	bls.n	8000c64 <__udivmoddi4+0x8c>
 8000c50:	192c      	adds	r4, r5, r4
 8000c52:	f100 33ff 	add.w	r3, r0, #4294967295
 8000c56:	f080 8107 	bcs.w	8000e68 <__udivmoddi4+0x290>
 8000c5a:	45a4      	cmp	ip, r4
 8000c5c:	f240 8104 	bls.w	8000e68 <__udivmoddi4+0x290>
 8000c60:	3802      	subs	r0, #2
 8000c62:	442c      	add	r4, r5
 8000c64:	ea40 4007 	orr.w	r0, r0, r7, lsl #16
 8000c68:	eba4 040c 	sub.w	r4, r4, ip
 8000c6c:	2700      	movs	r7, #0
 8000c6e:	b11e      	cbz	r6, 8000c78 <__udivmoddi4+0xa0>
 8000c70:	40d4      	lsrs	r4, r2
 8000c72:	2300      	movs	r3, #0
 8000c74:	e9c6 4300 	strd	r4, r3, [r6]
 8000c78:	4639      	mov	r1, r7
 8000c7a:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c7e:	428b      	cmp	r3, r1
 8000c80:	d909      	bls.n	8000c96 <__udivmoddi4+0xbe>
 8000c82:	2e00      	cmp	r6, #0
 8000c84:	f000 80eb 	beq.w	8000e5e <__udivmoddi4+0x286>
 8000c88:	2700      	movs	r7, #0
 8000c8a:	e9c6 0100 	strd	r0, r1, [r6]
 8000c8e:	4638      	mov	r0, r7
 8000c90:	4639      	mov	r1, r7
 8000c92:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 8000c96:	fab3 f783 	clz	r7, r3
 8000c9a:	2f00      	cmp	r7, #0
 8000c9c:	d147      	bne.n	8000d2e <__udivmoddi4+0x156>
 8000c9e:	428b      	cmp	r3, r1
 8000ca0:	d302      	bcc.n	8000ca8 <__udivmoddi4+0xd0>
 8000ca2:	4282      	cmp	r2, r0
 8000ca4:	f200 80fa 	bhi.w	8000e9c <__udivmoddi4+0x2c4>
 8000ca8:	1a84      	subs	r4, r0, r2
 8000caa:	eb61 0303 	sbc.w	r3, r1, r3
 8000cae:	2001      	movs	r0, #1
 8000cb0:	4698      	mov	r8, r3
 8000cb2:	2e00      	cmp	r6, #0
 8000cb4:	d0e0      	beq.n	8000c78 <__udivmoddi4+0xa0>
 8000cb6:	e9c6 4800 	strd	r4, r8, [r6]
 8000cba:	e7dd      	b.n	8000c78 <__udivmoddi4+0xa0>
 8000cbc:	b902      	cbnz	r2, 8000cc0 <__udivmoddi4+0xe8>
 8000cbe:	deff      	udf	#255	; 0xff
 8000cc0:	fab2 f282 	clz	r2, r2
 8000cc4:	2a00      	cmp	r2, #0
 8000cc6:	f040 808f 	bne.w	8000de8 <__udivmoddi4+0x210>
 8000cca:	1b49      	subs	r1, r1, r5
 8000ccc:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000cd0:	fa1f f885 	uxth.w	r8, r5
 8000cd4:	2701      	movs	r7, #1
 8000cd6:	fbb1 fcfe 	udiv	ip, r1, lr
 8000cda:	0c23      	lsrs	r3, r4, #16
 8000cdc:	fb0e 111c 	mls	r1, lr, ip, r1
 8000ce0:	ea43 4301 	orr.w	r3, r3, r1, lsl #16
 8000ce4:	fb08 f10c 	mul.w	r1, r8, ip
 8000ce8:	4299      	cmp	r1, r3
 8000cea:	d907      	bls.n	8000cfc <__udivmoddi4+0x124>
 8000cec:	18eb      	adds	r3, r5, r3
 8000cee:	f10c 30ff 	add.w	r0, ip, #4294967295
 8000cf2:	d202      	bcs.n	8000cfa <__udivmoddi4+0x122>
 8000cf4:	4299      	cmp	r1, r3
 8000cf6:	f200 80cd 	bhi.w	8000e94 <__udivmoddi4+0x2bc>
 8000cfa:	4684      	mov	ip, r0
 8000cfc:	1a59      	subs	r1, r3, r1
 8000cfe:	b2a3      	uxth	r3, r4
 8000d00:	fbb1 f0fe 	udiv	r0, r1, lr
 8000d04:	fb0e 1410 	mls	r4, lr, r0, r1
 8000d08:	ea43 4404 	orr.w	r4, r3, r4, lsl #16
 8000d0c:	fb08 f800 	mul.w	r8, r8, r0
 8000d10:	45a0      	cmp	r8, r4
 8000d12:	d907      	bls.n	8000d24 <__udivmoddi4+0x14c>
 8000d14:	192c      	adds	r4, r5, r4
 8000d16:	f100 33ff 	add.w	r3, r0, #4294967295
 8000d1a:	d202      	bcs.n	8000d22 <__udivmoddi4+0x14a>
 8000d1c:	45a0      	cmp	r8, r4
 8000d1e:	f200 80b6 	bhi.w	8000e8e <__udivmoddi4+0x2b6>
 8000d22:	4618      	mov	r0, r3
 8000d24:	eba4 0408 	sub.w	r4, r4, r8
 8000d28:	ea40 400c 	orr.w	r0, r0, ip, lsl #16
 8000d2c:	e79f      	b.n	8000c6e <__udivmoddi4+0x96>
 8000d2e:	f1c7 0c20 	rsb	ip, r7, #32
 8000d32:	40bb      	lsls	r3, r7
 8000d34:	fa22 fe0c 	lsr.w	lr, r2, ip
 8000d38:	ea4e 0e03 	orr.w	lr, lr, r3
 8000d3c:	fa01 f407 	lsl.w	r4, r1, r7
 8000d40:	fa20 f50c 	lsr.w	r5, r0, ip
 8000d44:	fa21 f30c 	lsr.w	r3, r1, ip
 8000d48:	ea4f 481e 	mov.w	r8, lr, lsr #16
 8000d4c:	4325      	orrs	r5, r4
 8000d4e:	fbb3 f9f8 	udiv	r9, r3, r8
 8000d52:	0c2c      	lsrs	r4, r5, #16
 8000d54:	fb08 3319 	mls	r3, r8, r9, r3
 8000d58:	fa1f fa8e 	uxth.w	sl, lr
 8000d5c:	ea44 4303 	orr.w	r3, r4, r3, lsl #16
 8000d60:	fb09 f40a 	mul.w	r4, r9, sl
 8000d64:	429c      	cmp	r4, r3
 8000d66:	fa02 f207 	lsl.w	r2, r2, r7
 8000d6a:	fa00 f107 	lsl.w	r1, r0, r7
 8000d6e:	d90b      	bls.n	8000d88 <__udivmoddi4+0x1b0>
 8000d70:	eb1e 0303 	adds.w	r3, lr, r3
 8000d74:	f109 30ff 	add.w	r0, r9, #4294967295
 8000d78:	f080 8087 	bcs.w	8000e8a <__udivmoddi4+0x2b2>
 8000d7c:	429c      	cmp	r4, r3
 8000d7e:	f240 8084 	bls.w	8000e8a <__udivmoddi4+0x2b2>
 8000d82:	f1a9 0902 	sub.w	r9, r9, #2
 8000d86:	4473      	add	r3, lr
 8000d88:	1b1b      	subs	r3, r3, r4
 8000d8a:	b2ad      	uxth	r5, r5
 8000d8c:	fbb3 f0f8 	udiv	r0, r3, r8
 8000d90:	fb08 3310 	mls	r3, r8, r0, r3
 8000d94:	ea45 4403 	orr.w	r4, r5, r3, lsl #16
 8000d98:	fb00 fa0a 	mul.w	sl, r0, sl
 8000d9c:	45a2      	cmp	sl, r4
 8000d9e:	d908      	bls.n	8000db2 <__udivmoddi4+0x1da>
 8000da0:	eb1e 0404 	adds.w	r4, lr, r4
 8000da4:	f100 33ff 	add.w	r3, r0, #4294967295
 8000da8:	d26b      	bcs.n	8000e82 <__udivmoddi4+0x2aa>
 8000daa:	45a2      	cmp	sl, r4
 8000dac:	d969      	bls.n	8000e82 <__udivmoddi4+0x2aa>
 8000dae:	3802      	subs	r0, #2
 8000db0:	4474      	add	r4, lr
 8000db2:	ea40 4009 	orr.w	r0, r0, r9, lsl #16
 8000db6:	fba0 8902 	umull	r8, r9, r0, r2
 8000dba:	eba4 040a 	sub.w	r4, r4, sl
 8000dbe:	454c      	cmp	r4, r9
 8000dc0:	46c2      	mov	sl, r8
 8000dc2:	464b      	mov	r3, r9
 8000dc4:	d354      	bcc.n	8000e70 <__udivmoddi4+0x298>
 8000dc6:	d051      	beq.n	8000e6c <__udivmoddi4+0x294>
 8000dc8:	2e00      	cmp	r6, #0
 8000dca:	d069      	beq.n	8000ea0 <__udivmoddi4+0x2c8>
 8000dcc:	ebb1 050a 	subs.w	r5, r1, sl
 8000dd0:	eb64 0403 	sbc.w	r4, r4, r3
 8000dd4:	fa04 fc0c 	lsl.w	ip, r4, ip
 8000dd8:	40fd      	lsrs	r5, r7
 8000dda:	40fc      	lsrs	r4, r7
 8000ddc:	ea4c 0505 	orr.w	r5, ip, r5
 8000de0:	e9c6 5400 	strd	r5, r4, [r6]
 8000de4:	2700      	movs	r7, #0
 8000de6:	e747      	b.n	8000c78 <__udivmoddi4+0xa0>
 8000de8:	f1c2 0320 	rsb	r3, r2, #32
 8000dec:	fa20 f703 	lsr.w	r7, r0, r3
 8000df0:	4095      	lsls	r5, r2
 8000df2:	fa01 f002 	lsl.w	r0, r1, r2
 8000df6:	fa21 f303 	lsr.w	r3, r1, r3
 8000dfa:	ea4f 4e15 	mov.w	lr, r5, lsr #16
 8000dfe:	4338      	orrs	r0, r7
 8000e00:	0c01      	lsrs	r1, r0, #16
 8000e02:	fbb3 f7fe 	udiv	r7, r3, lr
 8000e06:	fa1f f885 	uxth.w	r8, r5
 8000e0a:	fb0e 3317 	mls	r3, lr, r7, r3
 8000e0e:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e12:	fb07 f308 	mul.w	r3, r7, r8
 8000e16:	428b      	cmp	r3, r1
 8000e18:	fa04 f402 	lsl.w	r4, r4, r2
 8000e1c:	d907      	bls.n	8000e2e <__udivmoddi4+0x256>
 8000e1e:	1869      	adds	r1, r5, r1
 8000e20:	f107 3cff 	add.w	ip, r7, #4294967295
 8000e24:	d22f      	bcs.n	8000e86 <__udivmoddi4+0x2ae>
 8000e26:	428b      	cmp	r3, r1
 8000e28:	d92d      	bls.n	8000e86 <__udivmoddi4+0x2ae>
 8000e2a:	3f02      	subs	r7, #2
 8000e2c:	4429      	add	r1, r5
 8000e2e:	1acb      	subs	r3, r1, r3
 8000e30:	b281      	uxth	r1, r0
 8000e32:	fbb3 f0fe 	udiv	r0, r3, lr
 8000e36:	fb0e 3310 	mls	r3, lr, r0, r3
 8000e3a:	ea41 4103 	orr.w	r1, r1, r3, lsl #16
 8000e3e:	fb00 f308 	mul.w	r3, r0, r8
 8000e42:	428b      	cmp	r3, r1
 8000e44:	d907      	bls.n	8000e56 <__udivmoddi4+0x27e>
 8000e46:	1869      	adds	r1, r5, r1
 8000e48:	f100 3cff 	add.w	ip, r0, #4294967295
 8000e4c:	d217      	bcs.n	8000e7e <__udivmoddi4+0x2a6>
 8000e4e:	428b      	cmp	r3, r1
 8000e50:	d915      	bls.n	8000e7e <__udivmoddi4+0x2a6>
 8000e52:	3802      	subs	r0, #2
 8000e54:	4429      	add	r1, r5
 8000e56:	1ac9      	subs	r1, r1, r3
 8000e58:	ea40 4707 	orr.w	r7, r0, r7, lsl #16
 8000e5c:	e73b      	b.n	8000cd6 <__udivmoddi4+0xfe>
 8000e5e:	4637      	mov	r7, r6
 8000e60:	4630      	mov	r0, r6
 8000e62:	e709      	b.n	8000c78 <__udivmoddi4+0xa0>
 8000e64:	4607      	mov	r7, r0
 8000e66:	e6e7      	b.n	8000c38 <__udivmoddi4+0x60>
 8000e68:	4618      	mov	r0, r3
 8000e6a:	e6fb      	b.n	8000c64 <__udivmoddi4+0x8c>
 8000e6c:	4541      	cmp	r1, r8
 8000e6e:	d2ab      	bcs.n	8000dc8 <__udivmoddi4+0x1f0>
 8000e70:	ebb8 0a02 	subs.w	sl, r8, r2
 8000e74:	eb69 020e 	sbc.w	r2, r9, lr
 8000e78:	3801      	subs	r0, #1
 8000e7a:	4613      	mov	r3, r2
 8000e7c:	e7a4      	b.n	8000dc8 <__udivmoddi4+0x1f0>
 8000e7e:	4660      	mov	r0, ip
 8000e80:	e7e9      	b.n	8000e56 <__udivmoddi4+0x27e>
 8000e82:	4618      	mov	r0, r3
 8000e84:	e795      	b.n	8000db2 <__udivmoddi4+0x1da>
 8000e86:	4667      	mov	r7, ip
 8000e88:	e7d1      	b.n	8000e2e <__udivmoddi4+0x256>
 8000e8a:	4681      	mov	r9, r0
 8000e8c:	e77c      	b.n	8000d88 <__udivmoddi4+0x1b0>
 8000e8e:	3802      	subs	r0, #2
 8000e90:	442c      	add	r4, r5
 8000e92:	e747      	b.n	8000d24 <__udivmoddi4+0x14c>
 8000e94:	f1ac 0c02 	sub.w	ip, ip, #2
 8000e98:	442b      	add	r3, r5
 8000e9a:	e72f      	b.n	8000cfc <__udivmoddi4+0x124>
 8000e9c:	4638      	mov	r0, r7
 8000e9e:	e708      	b.n	8000cb2 <__udivmoddi4+0xda>
 8000ea0:	4637      	mov	r7, r6
 8000ea2:	e6e9      	b.n	8000c78 <__udivmoddi4+0xa0>

08000ea4 <__aeabi_idiv0>:
 8000ea4:	4770      	bx	lr
 8000ea6:	bf00      	nop

08000ea8 <createProblem>:
            break;
        default : break;
    }
}
*/
void createProblem(struct Problem* p, int id){
 8000ea8:	b5f0      	push	{r4, r5, r6, r7, lr}
 8000eaa:	b083      	sub	sp, #12
 8000eac:	af00      	add	r7, sp, #0
 8000eae:	6078      	str	r0, [r7, #4]
 8000eb0:	6039      	str	r1, [r7, #0]
	switch(id){
 8000eb2:	683b      	ldr	r3, [r7, #0]
 8000eb4:	f240 3226 	movw	r2, #806	; 0x326
 8000eb8:	4293      	cmp	r3, r2
 8000eba:	f219 853a 	bhi.w	801a932 <createProblem+0x19a8a>
 8000ebe:	a101      	add	r1, pc, #4	; (adr r1, 8000ec4 <createProblem+0x1c>)
 8000ec0:	f851 f023 	ldr.w	pc, [r1, r3, lsl #2]
 8000ec4:	08001b61 	.word	0x08001b61
 8000ec8:	08001bdd 	.word	0x08001bdd
 8000ecc:	080051f9 	.word	0x080051f9
 8000ed0:	08008903 	.word	0x08008903
 8000ed4:	0800c089 	.word	0x0800c089
 8000ed8:	0800f675 	.word	0x0800f675
 8000edc:	08012d67 	.word	0x08012d67
 8000ee0:	08016429 	.word	0x08016429
 8000ee4:	08019b59 	.word	0x08019b59
 8000ee8:	0801a3e5 	.word	0x0801a3e5
 8000eec:	08001c4d 	.word	0x08001c4d
 8000ef0:	0800214b 	.word	0x0800214b
 8000ef4:	080026dd 	.word	0x080026dd
 8000ef8:	08002c61 	.word	0x08002c61
 8000efc:	08003183 	.word	0x08003183
 8000f00:	08003717 	.word	0x08003717
 8000f04:	08003cd1 	.word	0x08003cd1
 8000f08:	080041df 	.word	0x080041df
 8000f0c:	0800476b 	.word	0x0800476b
 8000f10:	08004c85 	.word	0x08004c85
 8000f14:	08005269 	.word	0x08005269
 8000f18:	08005805 	.word	0x08005805
 8000f1c:	08005d25 	.word	0x08005d25
 8000f20:	080062a3 	.word	0x080062a3
 8000f24:	080067bd 	.word	0x080067bd
 8000f28:	08006d71 	.word	0x08006d71
 8000f2c:	0800732d 	.word	0x0800732d
 8000f30:	08007875 	.word	0x08007875
 8000f34:	08007e7f 	.word	0x08007e7f
 8000f38:	0800840d 	.word	0x0800840d
 8000f3c:	08008977 	.word	0x08008977
 8000f40:	08008f45 	.word	0x08008f45
 8000f44:	080094f9 	.word	0x080094f9
 8000f48:	08009a0f 	.word	0x08009a0f
 8000f4c:	08009fbd 	.word	0x08009fbd
 8000f50:	0800a587 	.word	0x0800a587
 8000f54:	0800aab7 	.word	0x0800aab7
 8000f58:	0800b059 	.word	0x0800b059
 8000f5c:	0800b565 	.word	0x0800b565
 8000f60:	0800baf1 	.word	0x0800baf1
 8000f64:	0800c0ed 	.word	0x0800c0ed
 8000f68:	0800c611 	.word	0x0800c611
 8000f6c:	0800cb8b 	.word	0x0800cb8b
 8000f70:	0800d105 	.word	0x0800d105
 8000f74:	0800d60b 	.word	0x0800d60b
 8000f78:	0800db9f 	.word	0x0800db9f
 8000f7c:	0800e0b7 	.word	0x0800e0b7
 8000f80:	0800e65b 	.word	0x0800e65b
 8000f84:	0800eb81 	.word	0x0800eb81
 8000f88:	0800f107 	.word	0x0800f107
 8000f8c:	0800f6e9 	.word	0x0800f6e9
 8000f90:	0800fbc7 	.word	0x0800fbc7
 8000f94:	08010167 	.word	0x08010167
 8000f98:	08010715 	.word	0x08010715
 8000f9c:	08010c39 	.word	0x08010c39
 8000fa0:	080111df 	.word	0x080111df
 8000fa4:	080116e1 	.word	0x080116e1
 8000fa8:	08011ca9 	.word	0x08011ca9
 8000fac:	08012255 	.word	0x08012255
 8000fb0:	080127fd 	.word	0x080127fd
 8000fb4:	08012ddb 	.word	0x08012ddb
 8000fb8:	0801333f 	.word	0x0801333f
 8000fbc:	080138cd 	.word	0x080138cd
 8000fc0:	08013dc5 	.word	0x08013dc5
 8000fc4:	08014397 	.word	0x08014397
 8000fc8:	080148b3 	.word	0x080148b3
 8000fcc:	08014e6b 	.word	0x08014e6b
 8000fd0:	080153f5 	.word	0x080153f5
 8000fd4:	0801590d 	.word	0x0801590d
 8000fd8:	08015ee1 	.word	0x08015ee1
 8000fdc:	0801650d 	.word	0x0801650d
 8000fe0:	08016a27 	.word	0x08016a27
 8000fe4:	08016fc9 	.word	0x08016fc9
 8000fe8:	08017509 	.word	0x08017509
 8000fec:	08017a8d 	.word	0x08017a8d
 8000ff0:	08018035 	.word	0x08018035
 8000ff4:	0801853d 	.word	0x0801853d
 8000ff8:	08018b0b 	.word	0x08018b0b
 8000ffc:	08019047 	.word	0x08019047
 8001000:	080195c5 	.word	0x080195c5
 8001004:	08019bcf 	.word	0x08019bcf
 8001008:	08019fa7 	.word	0x08019fa7
 800100c:	0801a011 	.word	0x0801a011
 8001010:	0801a081 	.word	0x0801a081
 8001014:	0801a0e5 	.word	0x0801a0e5
 8001018:	0801a1c1 	.word	0x0801a1c1
 800101c:	0801a22f 	.word	0x0801a22f
 8001020:	0801a295 	.word	0x0801a295
 8001024:	0801a307 	.word	0x0801a307
 8001028:	0801a375 	.word	0x0801a375
 800102c:	0801a445 	.word	0x0801a445
 8001030:	0801a52d 	.word	0x0801a52d
 8001034:	0801a597 	.word	0x0801a597
 8001038:	0801a5ff 	.word	0x0801a5ff
 800103c:	0801a66d 	.word	0x0801a66d
 8001040:	0801a6d5 	.word	0x0801a6d5
 8001044:	0801a735 	.word	0x0801a735
 8001048:	0801a791 	.word	0x0801a791
 800104c:	0801a86d 	.word	0x0801a86d
 8001050:	0801a8cb 	.word	0x0801a8cb
 8001054:	08001cb5 	.word	0x08001cb5
 8001058:	08001d1f 	.word	0x08001d1f
 800105c:	08001d7d 	.word	0x08001d7d
 8001060:	08001de7 	.word	0x08001de7
 8001064:	08001edd 	.word	0x08001edd
 8001068:	08001f47 	.word	0x08001f47
 800106c:	08001fb5 	.word	0x08001fb5
 8001070:	08002013 	.word	0x08002013
 8001074:	08002079 	.word	0x08002079
 8001078:	080020df 	.word	0x080020df
 800107c:	08002231 	.word	0x08002231
 8001080:	0800229d 	.word	0x0800229d
 8001084:	08002311 	.word	0x08002311
 8001088:	08002375 	.word	0x08002375
 800108c:	080023df 	.word	0x080023df
 8001090:	0800244f 	.word	0x0800244f
 8001094:	080024c3 	.word	0x080024c3
 8001098:	080025b1 	.word	0x080025b1
 800109c:	08002617 	.word	0x08002617
 80010a0:	0800267b 	.word	0x0800267b
 80010a4:	0800274f 	.word	0x0800274f
 80010a8:	080027b1 	.word	0x080027b1
 80010ac:	08002815 	.word	0x08002815
 80010b0:	080028f1 	.word	0x080028f1
 80010b4:	08002959 	.word	0x08002959
 80010b8:	080029cb 	.word	0x080029cb
 80010bc:	08002a39 	.word	0x08002a39
 80010c0:	08002a8f 	.word	0x08002a8f
 80010c4:	08002b05 	.word	0x08002b05
 80010c8:	08002b7b 	.word	0x08002b7b
 80010cc:	08002cd1 	.word	0x08002cd1
 80010d0:	08002d39 	.word	0x08002d39
 80010d4:	08002da5 	.word	0x08002da5
 80010d8:	08002e17 	.word	0x08002e17
 80010dc:	08002e8b 	.word	0x08002e8b
 80010e0:	08002ef9 	.word	0x08002ef9
 80010e4:	08002fd9 	.word	0x08002fd9
 80010e8:	0800303b 	.word	0x0800303b
 80010ec:	080030a7 	.word	0x080030a7
 80010f0:	0800310f 	.word	0x0800310f
 80010f4:	080031e1 	.word	0x080031e1
 80010f8:	0800324d 	.word	0x0800324d
 80010fc:	08003335 	.word	0x08003335
 8001100:	0800339f 	.word	0x0800339f
 8001104:	08003409 	.word	0x08003409
 8001108:	0800347f 	.word	0x0800347f
 800110c:	080034e9 	.word	0x080034e9
 8001110:	08003557 	.word	0x08003557
 8001114:	08003641 	.word	0x08003641
 8001118:	080036b3 	.word	0x080036b3
 800111c:	08003793 	.word	0x08003793
 8001120:	080037f7 	.word	0x080037f7
 8001124:	08003861 	.word	0x08003861
 8001128:	080038d1 	.word	0x080038d1
 800112c:	080039c5 	.word	0x080039c5
 8001130:	08003a3b 	.word	0x08003a3b
 8001134:	08003ad1 	.word	0x08003ad1
 8001138:	08003b3d 	.word	0x08003b3d
 800113c:	08003ba1 	.word	0x08003ba1
 8001140:	08003bfd 	.word	0x08003bfd
 8001144:	08003d63 	.word	0x08003d63
 8001148:	08003dcd 	.word	0x08003dcd
 800114c:	08003e2f 	.word	0x08003e2f
 8001150:	08003e8d 	.word	0x08003e8d
 8001154:	08003ef5 	.word	0x08003ef5
 8001158:	08003f5b 	.word	0x08003f5b
 800115c:	0800403d 	.word	0x0800403d
 8001160:	080040a3 	.word	0x080040a3
 8001164:	0800410b 	.word	0x0800410b
 8001168:	08004173 	.word	0x08004173
 800116c:	08004255 	.word	0x08004255
 8001170:	080042b1 	.word	0x080042b1
 8001174:	08004399 	.word	0x08004399
 8001178:	08004403 	.word	0x08004403
 800117c:	08004479 	.word	0x08004479
 8001180:	080044db 	.word	0x080044db
 8001184:	08004545 	.word	0x08004545
 8001188:	080045af 	.word	0x080045af
 800118c:	08004619 	.word	0x08004619
 8001190:	080046f1 	.word	0x080046f1
 8001194:	080047df 	.word	0x080047df
 8001198:	0800484b 	.word	0x0800484b
 800119c:	080048a5 	.word	0x080048a5
 80011a0:	0800491b 	.word	0x0800491b
 80011a4:	0800498f 	.word	0x0800498f
 80011a8:	08004a79 	.word	0x08004a79
 80011ac:	08004adb 	.word	0x08004adb
 80011b0:	08004b49 	.word	0x08004b49
 80011b4:	08004bb5 	.word	0x08004bb5
 80011b8:	08004c1b 	.word	0x08004c1b
 80011bc:	08004cef 	.word	0x08004cef
 80011c0:	08004dc5 	.word	0x08004dc5
 80011c4:	08004e39 	.word	0x08004e39
 80011c8:	08004ea1 	.word	0x08004ea1
 80011cc:	08004f07 	.word	0x08004f07
 80011d0:	08004f73 	.word	0x08004f73
 80011d4:	08004fdb 	.word	0x08004fdb
 80011d8:	08005045 	.word	0x08005045
 80011dc:	08005131 	.word	0x08005131
 80011e0:	0800518b 	.word	0x0800518b
 80011e4:	080052d3 	.word	0x080052d3
 80011e8:	08005345 	.word	0x08005345
 80011ec:	080053a3 	.word	0x080053a3
 80011f0:	08005489 	.word	0x08005489
 80011f4:	080054eb 	.word	0x080054eb
 80011f8:	08005567 	.word	0x08005567
 80011fc:	080055cd 	.word	0x080055cd
 8001200:	0800564d 	.word	0x0800564d
 8001204:	080056bd 	.word	0x080056bd
 8001208:	08005727 	.word	0x08005727
 800120c:	08005877 	.word	0x08005877
 8001210:	080058e1 	.word	0x080058e1
 8001214:	08005949 	.word	0x08005949
 8001218:	080059c7 	.word	0x080059c7
 800121c:	08005a47 	.word	0x08005a47
 8001220:	08005b11 	.word	0x08005b11
 8001224:	08005b7f 	.word	0x08005b7f
 8001228:	08005bf3 	.word	0x08005bf3
 800122c:	08005c51 	.word	0x08005c51
 8001230:	08005cb9 	.word	0x08005cb9
 8001234:	08005d7b 	.word	0x08005d7b
 8001238:	08005e4d 	.word	0x08005e4d
 800123c:	08005ecd 	.word	0x08005ecd
 8001240:	08005f3f 	.word	0x08005f3f
 8001244:	08005fa3 	.word	0x08005fa3
 8001248:	08006003 	.word	0x08006003
 800124c:	08006067 	.word	0x08006067
 8001250:	080060d7 	.word	0x080060d7
 8001254:	080061c1 	.word	0x080061c1
 8001258:	0800623f 	.word	0x0800623f
 800125c:	0800630b 	.word	0x0800630b
 8001260:	0800637b 	.word	0x0800637b
 8001264:	080063e3 	.word	0x080063e3
 8001268:	0800644f 	.word	0x0800644f
 800126c:	08006541 	.word	0x08006541
 8001270:	080065a9 	.word	0x080065a9
 8001274:	08006615 	.word	0x08006615
 8001278:	0800667d 	.word	0x0800667d
 800127c:	080066e3 	.word	0x080066e3
 8001280:	08006749 	.word	0x08006749
 8001284:	08006891 	.word	0x08006891
 8001288:	080068ff 	.word	0x080068ff
 800128c:	0800698d 	.word	0x0800698d
 8001290:	080069f3 	.word	0x080069f3
 8001294:	08006a5b 	.word	0x08006a5b
 8001298:	08006ac1 	.word	0x08006ac1
 800129c:	08006b31 	.word	0x08006b31
 80012a0:	08006c21 	.word	0x08006c21
 80012a4:	08006c97 	.word	0x08006c97
 80012a8:	08006cff 	.word	0x08006cff
 80012ac:	08006dd1 	.word	0x08006dd1
 80012b0:	08006e47 	.word	0x08006e47
 80012b4:	08006eb7 	.word	0x08006eb7
 80012b8:	08006fa5 	.word	0x08006fa5
 80012bc:	08007025 	.word	0x08007025
 80012c0:	08007093 	.word	0x08007093
 80012c4:	08007113 	.word	0x08007113
 80012c8:	08007185 	.word	0x08007185
 80012cc:	080071ef 	.word	0x080071ef
 80012d0:	080072c5 	.word	0x080072c5
 80012d4:	08007397 	.word	0x08007397
 80012d8:	08007411 	.word	0x08007411
 80012dc:	08007485 	.word	0x08007485
 80012e0:	080074f5 	.word	0x080074f5
 80012e4:	0800755b 	.word	0x0800755b
 80012e8:	08007651 	.word	0x08007651
 80012ec:	080076c3 	.word	0x080076c3
 80012f0:	0800772f 	.word	0x0800772f
 80012f4:	08007797 	.word	0x08007797
 80012f8:	0800780b 	.word	0x0800780b
 80012fc:	080078f1 	.word	0x080078f1
 8001300:	080079c9 	.word	0x080079c9
 8001304:	08007a39 	.word	0x08007a39
 8001308:	08007aab 	.word	0x08007aab
 800130c:	08007b27 	.word	0x08007b27
 8001310:	08007b9d 	.word	0x08007b9d
 8001314:	08007c01 	.word	0x08007c01
 8001318:	08007d05 	.word	0x08007d05
 800131c:	08007d95 	.word	0x08007d95
 8001320:	08007e01 	.word	0x08007e01
 8001324:	08007edf 	.word	0x08007edf
 8001328:	08007f3f 	.word	0x08007f3f
 800132c:	08007fab 	.word	0x08007fab
 8001330:	08008085 	.word	0x08008085
 8001334:	080080ef 	.word	0x080080ef
 8001338:	08008161 	.word	0x08008161
 800133c:	080081cf 	.word	0x080081cf
 8001340:	08008243 	.word	0x08008243
 8001344:	080082b5 	.word	0x080082b5
 8001348:	0800832b 	.word	0x0800832b
 800134c:	08008473 	.word	0x08008473
 8001350:	080084d9 	.word	0x080084d9
 8001354:	08008533 	.word	0x08008533
 8001358:	080085a5 	.word	0x080085a5
 800135c:	0800860d 	.word	0x0800860d
 8001360:	0800867d 	.word	0x0800867d
 8001364:	08008761 	.word	0x08008761
 8001368:	080087c9 	.word	0x080087c9
 800136c:	0800882d 	.word	0x0800882d
 8001370:	0800889d 	.word	0x0800889d
 8001374:	080089e1 	.word	0x080089e1
 8001378:	08008ac5 	.word	0x08008ac5
 800137c:	08008b39 	.word	0x08008b39
 8001380:	08008bbd 	.word	0x08008bbd
 8001384:	08008c2f 	.word	0x08008c2f
 8001388:	08008c97 	.word	0x08008c97
 800138c:	08008d01 	.word	0x08008d01
 8001390:	08008dd9 	.word	0x08008dd9
 8001394:	08008e45 	.word	0x08008e45
 8001398:	08008ebf 	.word	0x08008ebf
 800139c:	08008fab 	.word	0x08008fab
 80013a0:	08009023 	.word	0x08009023
 80013a4:	080090fd 	.word	0x080090fd
 80013a8:	08009165 	.word	0x08009165
 80013ac:	080091cf 	.word	0x080091cf
 80013b0:	08009235 	.word	0x08009235
 80013b4:	0800929f 	.word	0x0800929f
 80013b8:	08009317 	.word	0x08009317
 80013bc:	08009385 	.word	0x08009385
 80013c0:	08009479 	.word	0x08009479
 80013c4:	08009565 	.word	0x08009565
 80013c8:	080095db 	.word	0x080095db
 80013cc:	0800963d 	.word	0x0800963d
 80013d0:	08009697 	.word	0x08009697
 80013d4:	08009705 	.word	0x08009705
 80013d8:	080097ed 	.word	0x080097ed
 80013dc:	08009857 	.word	0x08009857
 80013e0:	080098d3 	.word	0x080098d3
 80013e4:	0800993d 	.word	0x0800993d
 80013e8:	080099ab 	.word	0x080099ab
 80013ec:	08009a7f 	.word	0x08009a7f
 80013f0:	08009b61 	.word	0x08009b61
 80013f4:	08009bd5 	.word	0x08009bd5
 80013f8:	08009c41 	.word	0x08009c41
 80013fc:	08009cb7 	.word	0x08009cb7
 8001400:	08009d2d 	.word	0x08009d2d
 8001404:	08009d97 	.word	0x08009d97
 8001408:	08009e69 	.word	0x08009e69
 800140c:	08009ed5 	.word	0x08009ed5
 8001410:	08009f53 	.word	0x08009f53
 8001414:	0800a02b 	.word	0x0800a02b
 8001418:	0800a095 	.word	0x0800a095
 800141c:	0800a103 	.word	0x0800a103
 8001420:	0800a1f1 	.word	0x0800a1f1
 8001424:	0800a279 	.word	0x0800a279
 8001428:	0800a2ed 	.word	0x0800a2ed
 800142c:	0800a36d 	.word	0x0800a36d
 8001430:	0800a3dd 	.word	0x0800a3dd
 8001434:	0800a453 	.word	0x0800a453
 8001438:	0800a51d 	.word	0x0800a51d
 800143c:	0800a5e3 	.word	0x0800a5e3
 8001440:	0800a653 	.word	0x0800a653
 8001444:	0800a6d5 	.word	0x0800a6d5
 8001448:	0800a745 	.word	0x0800a745
 800144c:	0800a7b5 	.word	0x0800a7b5
 8001450:	0800a89d 	.word	0x0800a89d
 8001454:	0800a907 	.word	0x0800a907
 8001458:	0800a973 	.word	0x0800a973
 800145c:	0800a9db 	.word	0x0800a9db
 8001460:	0800aa49 	.word	0x0800aa49
 8001464:	0800ab21 	.word	0x0800ab21
 8001468:	0800ac05 	.word	0x0800ac05
 800146c:	0800ac6b 	.word	0x0800ac6b
 8001470:	0800acdb 	.word	0x0800acdb
 8001474:	0800ad4b 	.word	0x0800ad4b
 8001478:	0800adb9 	.word	0x0800adb9
 800147c:	0800ae25 	.word	0x0800ae25
 8001480:	0800ae85 	.word	0x0800ae85
 8001484:	0800af75 	.word	0x0800af75
 8001488:	0800afe3 	.word	0x0800afe3
 800148c:	0800b0c9 	.word	0x0800b0c9
 8001490:	0800b13b 	.word	0x0800b13b
 8001494:	0800b1a7 	.word	0x0800b1a7
 8001498:	0800b21b 	.word	0x0800b21b
 800149c:	0800b2f9 	.word	0x0800b2f9
 80014a0:	0800b35f 	.word	0x0800b35f
 80014a4:	0800b3c3 	.word	0x0800b3c3
 80014a8:	0800b431 	.word	0x0800b431
 80014ac:	0800b497 	.word	0x0800b497
 80014b0:	0800b501 	.word	0x0800b501
 80014b4:	0800b649 	.word	0x0800b649
 80014b8:	0800b6b9 	.word	0x0800b6b9
 80014bc:	0800b721 	.word	0x0800b721
 80014c0:	0800b787 	.word	0x0800b787
 80014c4:	0800b7f5 	.word	0x0800b7f5
 80014c8:	0800b859 	.word	0x0800b859
 80014cc:	0800b8cf 	.word	0x0800b8cf
 80014d0:	0800b9b1 	.word	0x0800b9b1
 80014d4:	0800ba15 	.word	0x0800ba15
 80014d8:	0800ba87 	.word	0x0800ba87
 80014dc:	0800bb4d 	.word	0x0800bb4d
 80014e0:	0800bbad 	.word	0x0800bbad
 80014e4:	0800bc1d 	.word	0x0800bc1d
 80014e8:	0800bd05 	.word	0x0800bd05
 80014ec:	0800bd7d 	.word	0x0800bd7d
 80014f0:	0800bdf1 	.word	0x0800bdf1
 80014f4:	0800be61 	.word	0x0800be61
 80014f8:	0800becb 	.word	0x0800becb
 80014fc:	0800bf45 	.word	0x0800bf45
 8001500:	0800bfab 	.word	0x0800bfab
 8001504:	0800c157 	.word	0x0800c157
 8001508:	0800c1bb 	.word	0x0800c1bb
 800150c:	0800c221 	.word	0x0800c221
 8001510:	0800c293 	.word	0x0800c293
 8001514:	0800c2ff 	.word	0x0800c2ff
 8001518:	0800c3dd 	.word	0x0800c3dd
 800151c:	0800c44b 	.word	0x0800c44b
 8001520:	0800c4b7 	.word	0x0800c4b7
 8001524:	0800c527 	.word	0x0800c527
 8001528:	0800c5a3 	.word	0x0800c5a3
 800152c:	0800c685 	.word	0x0800c685
 8001530:	0800c761 	.word	0x0800c761
 8001534:	0800c7cf 	.word	0x0800c7cf
 8001538:	0800c83d 	.word	0x0800c83d
 800153c:	0800c8b1 	.word	0x0800c8b1
 8001540:	0800c91b 	.word	0x0800c91b
 8001544:	0800c981 	.word	0x0800c981
 8001548:	0800c9e3 	.word	0x0800c9e3
 800154c:	0800cacd 	.word	0x0800cacd
 8001550:	0800cb27 	.word	0x0800cb27
 8001554:	0800cbeb 	.word	0x0800cbeb
 8001558:	0800cc4b 	.word	0x0800cc4b
 800155c:	0800ccb5 	.word	0x0800ccb5
 8001560:	0800cd13 	.word	0x0800cd13
 8001564:	0800cdf1 	.word	0x0800cdf1
 8001568:	0800ce59 	.word	0x0800ce59
 800156c:	0800ceed 	.word	0x0800ceed
 8001570:	0800cf57 	.word	0x0800cf57
 8001574:	0800cfc1 	.word	0x0800cfc1
 8001578:	0800d03b 	.word	0x0800d03b
 800157c:	0800d163 	.word	0x0800d163
 8001580:	0800d1cd 	.word	0x0800d1cd
 8001584:	0800d233 	.word	0x0800d233
 8001588:	0800d295 	.word	0x0800d295
 800158c:	0800d2f3 	.word	0x0800d2f3
 8001590:	0800d36f 	.word	0x0800d36f
 8001594:	0800d459 	.word	0x0800d459
 8001598:	0800d4cf 	.word	0x0800d4cf
 800159c:	0800d53d 	.word	0x0800d53d
 80015a0:	0800d5ab 	.word	0x0800d5ab
 80015a4:	0800d671 	.word	0x0800d671
 80015a8:	0800d6cf 	.word	0x0800d6cf
 80015ac:	0800d7bd 	.word	0x0800d7bd
 80015b0:	0800d831 	.word	0x0800d831
 80015b4:	0800d89d 	.word	0x0800d89d
 80015b8:	0800d8fd 	.word	0x0800d8fd
 80015bc:	0800d96b 	.word	0x0800d96b
 80015c0:	0800d9e3 	.word	0x0800d9e3
 80015c4:	0800da4b 	.word	0x0800da4b
 80015c8:	0800db39 	.word	0x0800db39
 80015cc:	0800dc0f 	.word	0x0800dc0f
 80015d0:	0800dc71 	.word	0x0800dc71
 80015d4:	0800dcd9 	.word	0x0800dcd9
 80015d8:	0800dd41 	.word	0x0800dd41
 80015dc:	0800dd9f 	.word	0x0800dd9f
 80015e0:	0800de91 	.word	0x0800de91
 80015e4:	0800def5 	.word	0x0800def5
 80015e8:	0800df7b 	.word	0x0800df7b
 80015ec:	0800dfd9 	.word	0x0800dfd9
 80015f0:	0800e045 	.word	0x0800e045
 80015f4:	0800e129 	.word	0x0800e129
 80015f8:	0800e211 	.word	0x0800e211
 80015fc:	0800e279 	.word	0x0800e279
 8001600:	0800e2e5 	.word	0x0800e2e5
 8001604:	0800e351 	.word	0x0800e351
 8001608:	0800e3bd 	.word	0x0800e3bd
 800160c:	0800e431 	.word	0x0800e431
 8001610:	0800e4a7 	.word	0x0800e4a7
 8001614:	0800e585 	.word	0x0800e585
 8001618:	0800e5f5 	.word	0x0800e5f5
 800161c:	0800e6c5 	.word	0x0800e6c5
 8001620:	0800e73d 	.word	0x0800e73d
 8001624:	0800e7a7 	.word	0x0800e7a7
 8001628:	0800e813 	.word	0x0800e813
 800162c:	0800e905 	.word	0x0800e905
 8001630:	0800e97f 	.word	0x0800e97f
 8001634:	0800e9e1 	.word	0x0800e9e1
 8001638:	0800ea3f 	.word	0x0800ea3f
 800163c:	0800eaaf 	.word	0x0800eaaf
 8001640:	0800eb19 	.word	0x0800eb19
 8001644:	0800ec75 	.word	0x0800ec75
 8001648:	0800ece1 	.word	0x0800ece1
 800164c:	0800ed47 	.word	0x0800ed47
 8001650:	0800edad 	.word	0x0800edad
 8001654:	0800ee11 	.word	0x0800ee11
 8001658:	0800ee7f 	.word	0x0800ee7f
 800165c:	0800eee9 	.word	0x0800eee9
 8001660:	0800efc9 	.word	0x0800efc9
 8001664:	0800f033 	.word	0x0800f033
 8001668:	0800f09d 	.word	0x0800f09d
 800166c:	0800f177 	.word	0x0800f177
 8001670:	0800f1e7 	.word	0x0800f1e7
 8001674:	0800f24d 	.word	0x0800f24d
 8001678:	0800f32d 	.word	0x0800f32d
 800167c:	0800f38d 	.word	0x0800f38d
 8001680:	0800f3fb 	.word	0x0800f3fb
 8001684:	0800f467 	.word	0x0800f467
 8001688:	0800f4c7 	.word	0x0800f4c7
 800168c:	0800f527 	.word	0x0800f527
 8001690:	0800f58d 	.word	0x0800f58d
 8001694:	0800f753 	.word	0x0800f753
 8001698:	0800f7b9 	.word	0x0800f7b9
 800169c:	0800f823 	.word	0x0800f823
 80016a0:	0800f88b 	.word	0x0800f88b
 80016a4:	0800f8f5 	.word	0x0800f8f5
 80016a8:	0800f9c9 	.word	0x0800f9c9
 80016ac:	0800fa25 	.word	0x0800fa25
 80016b0:	0800fa93 	.word	0x0800fa93
 80016b4:	0800fafd 	.word	0x0800fafd
 80016b8:	0800fb5d 	.word	0x0800fb5d
 80016bc:	0800fc3d 	.word	0x0800fc3d
 80016c0:	0800fd39 	.word	0x0800fd39
 80016c4:	0800fda5 	.word	0x0800fda5
 80016c8:	0800fe0f 	.word	0x0800fe0f
 80016cc:	0800fe83 	.word	0x0800fe83
 80016d0:	0800fed5 	.word	0x0800fed5
 80016d4:	0800ff35 	.word	0x0800ff35
 80016d8:	0800ff99 	.word	0x0800ff99
 80016dc:	0801008d 	.word	0x0801008d
 80016e0:	080100fd 	.word	0x080100fd
 80016e4:	080101c7 	.word	0x080101c7
 80016e8:	08010239 	.word	0x08010239
 80016ec:	080102a7 	.word	0x080102a7
 80016f0:	0801031f 	.word	0x0801031f
 80016f4:	08010401 	.word	0x08010401
 80016f8:	08010483 	.word	0x08010483
 80016fc:	080104fb 	.word	0x080104fb
 8001700:	0801055f 	.word	0x0801055f
 8001704:	080105c1 	.word	0x080105c1
 8001708:	0801062f 	.word	0x0801062f
 800170c:	08010781 	.word	0x08010781
 8001710:	080107f1 	.word	0x080107f1
 8001714:	08010859 	.word	0x08010859
 8001718:	080108c7 	.word	0x080108c7
 800171c:	08010933 	.word	0x08010933
 8001720:	0801099d 	.word	0x0801099d
 8001724:	08010a8d 	.word	0x08010a8d
 8001728:	08010af5 	.word	0x08010af5
 800172c:	08010b5b 	.word	0x08010b5b
 8001730:	08010bd3 	.word	0x08010bd3
 8001734:	08010c99 	.word	0x08010c99
 8001738:	08010d01 	.word	0x08010d01
 800173c:	08010de1 	.word	0x08010de1
 8001740:	08010e45 	.word	0x08010e45
 8001744:	08010ebf 	.word	0x08010ebf
 8001748:	08010f3d 	.word	0x08010f3d
 800174c:	08010fbb 	.word	0x08010fbb
 8001750:	08011027 	.word	0x08011027
 8001754:	08011105 	.word	0x08011105
 8001758:	08011173 	.word	0x08011173
 800175c:	0801124f 	.word	0x0801124f
 8001760:	080112b9 	.word	0x080112b9
 8001764:	0801131d 	.word	0x0801131d
 8001768:	08011383 	.word	0x08011383
 800176c:	08011461 	.word	0x08011461
 8001770:	080114d5 	.word	0x080114d5
 8001774:	0801153d 	.word	0x0801153d
 8001778:	080115af 	.word	0x080115af
 800177c:	0801161d 	.word	0x0801161d
 8001780:	0801167f 	.word	0x0801167f
 8001784:	080117c1 	.word	0x080117c1
 8001788:	08011831 	.word	0x08011831
 800178c:	080118a9 	.word	0x080118a9
 8001790:	0801191f 	.word	0x0801191f
 8001794:	0801198d 	.word	0x0801198d
 8001798:	080119fd 	.word	0x080119fd
 800179c:	08011ae5 	.word	0x08011ae5
 80017a0:	08011b5f 	.word	0x08011b5f
 80017a4:	08011bcf 	.word	0x08011bcf
 80017a8:	08011c3d 	.word	0x08011c3d
 80017ac:	08011d07 	.word	0x08011d07
 80017b0:	08011dd9 	.word	0x08011dd9
 80017b4:	08011e65 	.word	0x08011e65
 80017b8:	08011ed5 	.word	0x08011ed5
 80017bc:	08011f47 	.word	0x08011f47
 80017c0:	08011fc3 	.word	0x08011fc3
 80017c4:	08012031 	.word	0x08012031
 80017c8:	0801211d 	.word	0x0801211d
 80017cc:	08012185 	.word	0x08012185
 80017d0:	080121e9 	.word	0x080121e9
 80017d4:	080122c3 	.word	0x080122c3
 80017d8:	08012333 	.word	0x08012333
 80017dc:	08012397 	.word	0x08012397
 80017e0:	08012485 	.word	0x08012485
 80017e4:	080124f7 	.word	0x080124f7
 80017e8:	0801255f 	.word	0x0801255f
 80017ec:	080125d9 	.word	0x080125d9
 80017f0:	08012643 	.word	0x08012643
 80017f4:	080126a7 	.word	0x080126a7
 80017f8:	0801270d 	.word	0x0801270d
 80017fc:	08012867 	.word	0x08012867
 8001800:	080128eb 	.word	0x080128eb
 8001804:	08012973 	.word	0x08012973
 8001808:	080129f7 	.word	0x080129f7
 800180c:	08012a6d 	.word	0x08012a6d
 8001810:	08012b3d 	.word	0x08012b3d
 8001814:	08012bb3 	.word	0x08012bb3
 8001818:	08012c21 	.word	0x08012c21
 800181c:	08012c87 	.word	0x08012c87
 8001820:	08012cf5 	.word	0x08012cf5
 8001824:	08012eb5 	.word	0x08012eb5
 8001828:	08012f1b 	.word	0x08012f1b
 800182c:	08012f85 	.word	0x08012f85
 8001830:	08012fed 	.word	0x08012fed
 8001834:	08013067 	.word	0x08013067
 8001838:	080130cd 	.word	0x080130cd
 800183c:	08013133 	.word	0x08013133
 8001840:	08013205 	.word	0x08013205
 8001844:	0801325f 	.word	0x0801325f
 8001848:	080132c9 	.word	0x080132c9
 800184c:	080133af 	.word	0x080133af
 8001850:	08013421 	.word	0x08013421
 8001854:	08013483 	.word	0x08013483
 8001858:	0801356d 	.word	0x0801356d
 800185c:	080135e1 	.word	0x080135e1
 8001860:	0801363f 	.word	0x0801363f
 8001864:	08013699 	.word	0x08013699
 8001868:	080136fd 	.word	0x080136fd
 800186c:	0801376b 	.word	0x0801376b
 8001870:	080137dd 	.word	0x080137dd
 8001874:	08013939 	.word	0x08013939
 8001878:	080139af 	.word	0x080139af
 800187c:	08013a11 	.word	0x08013a11
 8001880:	08013a77 	.word	0x08013a77
 8001884:	08013adb 	.word	0x08013adb
 8001888:	08013b41 	.word	0x08013b41
 800188c:	08013c19 	.word	0x08013c19
 8001890:	08013c7b 	.word	0x08013c7b
 8001894:	08013cef 	.word	0x08013cef
 8001898:	08013d5b 	.word	0x08013d5b
 800189c:	08013e29 	.word	0x08013e29
 80018a0:	08013ea3 	.word	0x08013ea3
 80018a4:	08013f91 	.word	0x08013f91
 80018a8:	08014005 	.word	0x08014005
 80018ac:	08014069 	.word	0x08014069
 80018b0:	080140d1 	.word	0x080140d1
 80018b4:	08014135 	.word	0x08014135
 80018b8:	080141bd 	.word	0x080141bd
 80018bc:	0801422b 	.word	0x0801422b
 80018c0:	0801431d 	.word	0x0801431d
 80018c4:	08014407 	.word	0x08014407
 80018c8:	08014473 	.word	0x08014473
 80018cc:	080144db 	.word	0x080144db
 80018d0:	08014535 	.word	0x08014535
 80018d4:	080145a1 	.word	0x080145a1
 80018d8:	08014695 	.word	0x08014695
 80018dc:	080146f9 	.word	0x080146f9
 80018e0:	08014763 	.word	0x08014763
 80018e4:	080147c7 	.word	0x080147c7
 80018e8:	08014833 	.word	0x08014833
 80018ec:	0801491d 	.word	0x0801491d
 80018f0:	08014a0d 	.word	0x08014a0d
 80018f4:	08014a7d 	.word	0x08014a7d
 80018f8:	08014ae3 	.word	0x08014ae3
 80018fc:	08014b53 	.word	0x08014b53
 8001900:	08014bc9 	.word	0x08014bc9
 8001904:	08014c31 	.word	0x08014c31
 8001908:	08014d29 	.word	0x08014d29
 800190c:	08014d97 	.word	0x08014d97
 8001910:	08014e05 	.word	0x08014e05
 8001914:	08014ec7 	.word	0x08014ec7
 8001918:	08014f3b 	.word	0x08014f3b
 800191c:	08014fa1 	.word	0x08014fa1
 8001920:	08015089 	.word	0x08015089
 8001924:	08015101 	.word	0x08015101
 8001928:	08015175 	.word	0x08015175
 800192c:	080151d5 	.word	0x080151d5
 8001930:	08015243 	.word	0x08015243
 8001934:	080152a7 	.word	0x080152a7
 8001938:	08015307 	.word	0x08015307
 800193c:	08015463 	.word	0x08015463
 8001940:	080154cb 	.word	0x080154cb
 8001944:	08015535 	.word	0x08015535
 8001948:	080155a5 	.word	0x080155a5
 800194c:	08015611 	.word	0x08015611
 8001950:	08015671 	.word	0x08015671
 8001954:	08015761 	.word	0x08015761
 8001958:	080157d3 	.word	0x080157d3
 800195c:	08015843 	.word	0x08015843
 8001960:	080158a7 	.word	0x080158a7
 8001964:	0801598f 	.word	0x0801598f
 8001968:	080159f5 	.word	0x080159f5
 800196c:	08015ae5 	.word	0x08015ae5
 8001970:	08015b45 	.word	0x08015b45
 8001974:	08015bb1 	.word	0x08015bb1
 8001978:	08015c1f 	.word	0x08015c1f
 800197c:	08015c93 	.word	0x08015c93
 8001980:	08015d11 	.word	0x08015d11
 8001984:	08015d81 	.word	0x08015d81
 8001988:	08015e6d 	.word	0x08015e6d
 800198c:	08015f51 	.word	0x08015f51
 8001990:	08015fc7 	.word	0x08015fc7
 8001994:	08016043 	.word	0x08016043
 8001998:	080160af 	.word	0x080160af
 800199c:	08016189 	.word	0x08016189
 80019a0:	080161f3 	.word	0x080161f3
 80019a4:	08016261 	.word	0x08016261
 80019a8:	080162dd 	.word	0x080162dd
 80019ac:	0801634d 	.word	0x0801634d
 80019b0:	080163bd 	.word	0x080163bd
 80019b4:	08016575 	.word	0x08016575
 80019b8:	080165eb 	.word	0x080165eb
 80019bc:	08016657 	.word	0x08016657
 80019c0:	080166bb 	.word	0x080166bb
 80019c4:	08016723 	.word	0x08016723
 80019c8:	08016785 	.word	0x08016785
 80019cc:	08016865 	.word	0x08016865
 80019d0:	080168d1 	.word	0x080168d1
 80019d4:	0801693d 	.word	0x0801693d
 80019d8:	080169a3 	.word	0x080169a3
 80019dc:	08016a8f 	.word	0x08016a8f
 80019e0:	08016af5 	.word	0x08016af5
 80019e4:	08016bd5 	.word	0x08016bd5
 80019e8:	08016c45 	.word	0x08016c45
 80019ec:	08016cbd 	.word	0x08016cbd
 80019f0:	08016d27 	.word	0x08016d27
 80019f4:	08016d9b 	.word	0x08016d9b
 80019f8:	08016dfb 	.word	0x08016dfb
 80019fc:	08016e69 	.word	0x08016e69
 8001a00:	08016f5d 	.word	0x08016f5d
 8001a04:	08017031 	.word	0x08017031
 8001a08:	080170af 	.word	0x080170af
 8001a0c:	08017117 	.word	0x08017117
 8001a10:	08017187 	.word	0x08017187
 8001a14:	080171f7 	.word	0x080171f7
 8001a18:	080172e1 	.word	0x080172e1
 8001a1c:	0801734b 	.word	0x0801734b
 8001a20:	080173c1 	.word	0x080173c1
 8001a24:	08017431 	.word	0x08017431
 8001a28:	080174a3 	.word	0x080174a3
 8001a2c:	080175f1 	.word	0x080175f1
 8001a30:	0801766b 	.word	0x0801766b
 8001a34:	080176d3 	.word	0x080176d3
 8001a38:	08017735 	.word	0x08017735
 8001a3c:	080177ab 	.word	0x080177ab
 8001a40:	08017809 	.word	0x08017809
 8001a44:	08017869 	.word	0x08017869
 8001a48:	08017955 	.word	0x08017955
 8001a4c:	080179b7 	.word	0x080179b7
 8001a50:	08017a29 	.word	0x08017a29
 8001a54:	08017af5 	.word	0x08017af5
 8001a58:	08017b69 	.word	0x08017b69
 8001a5c:	08017bdd 	.word	0x08017bdd
 8001a60:	08017cbd 	.word	0x08017cbd
 8001a64:	08017d29 	.word	0x08017d29
 8001a68:	08017d91 	.word	0x08017d91
 8001a6c:	08017dfd 	.word	0x08017dfd
 8001a70:	08017e61 	.word	0x08017e61
 8001a74:	08017ecf 	.word	0x08017ecf
 8001a78:	08017f4b 	.word	0x08017f4b
 8001a7c:	0801809b 	.word	0x0801809b
 8001a80:	08018109 	.word	0x08018109
 8001a84:	08018173 	.word	0x08018173
 8001a88:	080181d5 	.word	0x080181d5
 8001a8c:	08018243 	.word	0x08018243
 8001a90:	080182ad 	.word	0x080182ad
 8001a94:	08018391 	.word	0x08018391
 8001a98:	080183f9 	.word	0x080183f9
 8001a9c:	0801845d 	.word	0x0801845d
 8001aa0:	080184c9 	.word	0x080184c9
 8001aa4:	080185a1 	.word	0x080185a1
 8001aa8:	08018619 	.word	0x08018619
 8001aac:	08018709 	.word	0x08018709
 8001ab0:	08018781 	.word	0x08018781
 8001ab4:	080187e7 	.word	0x080187e7
 8001ab8:	0801884d 	.word	0x0801884d
 8001abc:	080188b9 	.word	0x080188b9
 8001ac0:	08018927 	.word	0x08018927
 8001ac4:	080189a3 	.word	0x080189a3
 8001ac8:	08018a95 	.word	0x08018a95
 8001acc:	08018b71 	.word	0x08018b71
 8001ad0:	08018bdf 	.word	0x08018bdf
 8001ad4:	08018c5d 	.word	0x08018c5d
 8001ad8:	08018cc7 	.word	0x08018cc7
 8001adc:	08018d2d 	.word	0x08018d2d
 8001ae0:	08018e1d 	.word	0x08018e1d
 8001ae4:	08018e99 	.word	0x08018e99
 8001ae8:	08018f07 	.word	0x08018f07
 8001aec:	08018f6f 	.word	0x08018f6f
 8001af0:	08018fd5 	.word	0x08018fd5
 8001af4:	0801912d 	.word	0x0801912d
 8001af8:	0801919d 	.word	0x0801919d
 8001afc:	080191ff 	.word	0x080191ff
 8001b00:	08019269 	.word	0x08019269
 8001b04:	080192d3 	.word	0x080192d3
 8001b08:	08019343 	.word	0x08019343
 8001b0c:	080193b1 	.word	0x080193b1
 8001b10:	08019499 	.word	0x08019499
 8001b14:	080194fd 	.word	0x080194fd
 8001b18:	08019561 	.word	0x08019561
 8001b1c:	0801962b 	.word	0x0801962b
 8001b20:	08019693 	.word	0x08019693
 8001b24:	080196ef 	.word	0x080196ef
 8001b28:	080197d5 	.word	0x080197d5
 8001b2c:	0801984b 	.word	0x0801984b
 8001b30:	080198b7 	.word	0x080198b7
 8001b34:	0801992d 	.word	0x0801992d
 8001b38:	080199a1 	.word	0x080199a1
 8001b3c:	08019a0b 	.word	0x08019a0b
 8001b40:	08019aed 	.word	0x08019aed
 8001b44:	08019c39 	.word	0x08019c39
 8001b48:	08019c95 	.word	0x08019c95
 8001b4c:	08019cfd 	.word	0x08019cfd
 8001b50:	08019d71 	.word	0x08019d71
 8001b54:	08019e5d 	.word	0x08019e5d
 8001b58:	08019ed7 	.word	0x08019ed7
 8001b5c:	08019f47 	.word	0x08019f47
		case 0 :
			strcpy(p->name,"FAR FROM THE MADDING CROWD");
 8001b60:	687b      	ldr	r3, [r7, #4]
 8001b62:	337c      	adds	r3, #124	; 0x7c
 8001b64:	4abc      	ldr	r2, [pc, #752]	; (8001e58 <createProblem+0xfb0>)
 8001b66:	461d      	mov	r5, r3
 8001b68:	4614      	mov	r4, r2
 8001b6a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001b6c:	6028      	str	r0, [r5, #0]
 8001b6e:	6069      	str	r1, [r5, #4]
 8001b70:	60aa      	str	r2, [r5, #8]
 8001b72:	60eb      	str	r3, [r5, #12]
 8001b74:	cc03      	ldmia	r4!, {r0, r1}
 8001b76:	6128      	str	r0, [r5, #16]
 8001b78:	6169      	str	r1, [r5, #20]
 8001b7a:	8823      	ldrh	r3, [r4, #0]
 8001b7c:	78a2      	ldrb	r2, [r4, #2]
 8001b7e:	832b      	strh	r3, [r5, #24]
 8001b80:	4613      	mov	r3, r2
 8001b82:	76ab      	strb	r3, [r5, #26]
			p->moveSize = 7;
 8001b84:	687b      	ldr	r3, [r7, #4]
 8001b86:	2207      	movs	r2, #7
 8001b88:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,C,E,F,C,D,D");
 8001b8a:	687b      	ldr	r3, [r7, #4]
 8001b8c:	3340      	adds	r3, #64	; 0x40
 8001b8e:	4ab3      	ldr	r2, [pc, #716]	; (8001e5c <createProblem+0xfb4>)
 8001b90:	461c      	mov	r4, r3
 8001b92:	4613      	mov	r3, r2
 8001b94:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001b96:	6020      	str	r0, [r4, #0]
 8001b98:	6061      	str	r1, [r4, #4]
 8001b9a:	60a2      	str	r2, [r4, #8]
 8001b9c:	881b      	ldrh	r3, [r3, #0]
 8001b9e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,8,11,13,15,18");
 8001ba0:	687b      	ldr	r3, [r7, #4]
 8001ba2:	3304      	adds	r3, #4
 8001ba4:	4aae      	ldr	r2, [pc, #696]	; (8001e60 <createProblem+0xfb8>)
 8001ba6:	461d      	mov	r5, r3
 8001ba8:	4614      	mov	r4, r2
 8001baa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001bac:	6028      	str	r0, [r5, #0]
 8001bae:	6069      	str	r1, [r5, #4]
 8001bb0:	60aa      	str	r2, [r5, #8]
 8001bb2:	60eb      	str	r3, [r5, #12]
 8001bb4:	8823      	ldrh	r3, [r4, #0]
 8001bb6:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8001bb8:	687b      	ldr	r3, [r7, #4]
 8001bba:	33d8      	adds	r3, #216	; 0xd8
 8001bbc:	4aa9      	ldr	r2, [pc, #676]	; (8001e64 <createProblem+0xfbc>)
 8001bbe:	461c      	mov	r4, r3
 8001bc0:	4613      	mov	r3, r2
 8001bc2:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001bc4:	6020      	str	r0, [r4, #0]
 8001bc6:	6061      	str	r1, [r4, #4]
 8001bc8:	60a2      	str	r2, [r4, #8]
 8001bca:	881b      	ldrh	r3, [r3, #0]
 8001bcc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8001bce:	687b      	ldr	r3, [r7, #4]
 8001bd0:	33cc      	adds	r3, #204	; 0xcc
 8001bd2:	4aa5      	ldr	r2, [pc, #660]	; (8001e68 <createProblem+0xfc0>)
 8001bd4:	6810      	ldr	r0, [r2, #0]
 8001bd6:	6018      	str	r0, [r3, #0]
			break;
 8001bd8:	f018 beac 	b.w	801a934 <createProblem+0x19a8c>
		case 1 :
			strcpy(p->name,"HARD TIMES");
 8001bdc:	687b      	ldr	r3, [r7, #4]
 8001bde:	337c      	adds	r3, #124	; 0x7c
 8001be0:	49a2      	ldr	r1, [pc, #648]	; (8001e6c <createProblem+0xfc4>)
 8001be2:	461a      	mov	r2, r3
 8001be4:	460b      	mov	r3, r1
 8001be6:	cb03      	ldmia	r3!, {r0, r1}
 8001be8:	6010      	str	r0, [r2, #0]
 8001bea:	6051      	str	r1, [r2, #4]
 8001bec:	8819      	ldrh	r1, [r3, #0]
 8001bee:	789b      	ldrb	r3, [r3, #2]
 8001bf0:	8111      	strh	r1, [r2, #8]
 8001bf2:	7293      	strb	r3, [r2, #10]
			p->moveSize = 8;
 8001bf4:	687b      	ldr	r3, [r7, #4]
 8001bf6:	2208      	movs	r2, #8
 8001bf8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,E,E,E,E,G,I,J");
 8001bfa:	687b      	ldr	r3, [r7, #4]
 8001bfc:	3340      	adds	r3, #64	; 0x40
 8001bfe:	4a9c      	ldr	r2, [pc, #624]	; (8001e70 <createProblem+0xfc8>)
 8001c00:	461c      	mov	r4, r3
 8001c02:	4615      	mov	r5, r2
 8001c04:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001c06:	6020      	str	r0, [r4, #0]
 8001c08:	6061      	str	r1, [r4, #4]
 8001c0a:	60a2      	str	r2, [r4, #8]
 8001c0c:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"10,6,8,12,16,4,18,5");
 8001c0e:	687b      	ldr	r3, [r7, #4]
 8001c10:	3304      	adds	r3, #4
 8001c12:	4a98      	ldr	r2, [pc, #608]	; (8001e74 <createProblem+0xfcc>)
 8001c14:	461d      	mov	r5, r3
 8001c16:	4614      	mov	r4, r2
 8001c18:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001c1a:	6028      	str	r0, [r5, #0]
 8001c1c:	6069      	str	r1, [r5, #4]
 8001c1e:	60aa      	str	r2, [r5, #8]
 8001c20:	60eb      	str	r3, [r5, #12]
 8001c22:	6820      	ldr	r0, [r4, #0]
 8001c24:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "d,d,d,d,d,s,e,s");
 8001c26:	687b      	ldr	r3, [r7, #4]
 8001c28:	33d8      	adds	r3, #216	; 0xd8
 8001c2a:	4a93      	ldr	r2, [pc, #588]	; (8001e78 <createProblem+0xfd0>)
 8001c2c:	461c      	mov	r4, r3
 8001c2e:	4615      	mov	r5, r2
 8001c30:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001c32:	6020      	str	r0, [r4, #0]
 8001c34:	6061      	str	r1, [r4, #4]
 8001c36:	60a2      	str	r2, [r4, #8]
 8001c38:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8001c3a:	687b      	ldr	r3, [r7, #4]
 8001c3c:	33cc      	adds	r3, #204	; 0xcc
 8001c3e:	4a8f      	ldr	r2, [pc, #572]	; (8001e7c <createProblem+0xfd4>)
 8001c40:	8811      	ldrh	r1, [r2, #0]
 8001c42:	7892      	ldrb	r2, [r2, #2]
 8001c44:	8019      	strh	r1, [r3, #0]
 8001c46:	709a      	strb	r2, [r3, #2]
			break;
 8001c48:	f018 be74 	b.w	801a934 <createProblem+0x19a8c>
		case 10 :
			strcpy(p->name,"SINGLE DURA");
 8001c4c:	687b      	ldr	r3, [r7, #4]
 8001c4e:	337c      	adds	r3, #124	; 0x7c
 8001c50:	4a8b      	ldr	r2, [pc, #556]	; (8001e80 <createProblem+0xfd8>)
 8001c52:	461c      	mov	r4, r3
 8001c54:	4613      	mov	r3, r2
 8001c56:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001c58:	6020      	str	r0, [r4, #0]
 8001c5a:	6061      	str	r1, [r4, #4]
 8001c5c:	60a2      	str	r2, [r4, #8]
			p->moveSize = 5;
 8001c5e:	687b      	ldr	r3, [r7, #4]
 8001c60:	2205      	movs	r2, #5
 8001c62:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,D,D,A");
 8001c64:	687b      	ldr	r3, [r7, #4]
 8001c66:	3340      	adds	r3, #64	; 0x40
 8001c68:	4986      	ldr	r1, [pc, #536]	; (8001e84 <createProblem+0xfdc>)
 8001c6a:	461a      	mov	r2, r3
 8001c6c:	460b      	mov	r3, r1
 8001c6e:	cb03      	ldmia	r3!, {r0, r1}
 8001c70:	6010      	str	r0, [r2, #0]
 8001c72:	6051      	str	r1, [r2, #4]
 8001c74:	881b      	ldrh	r3, [r3, #0]
 8001c76:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,9,11,15,18");
 8001c78:	687b      	ldr	r3, [r7, #4]
 8001c7a:	3304      	adds	r3, #4
 8001c7c:	4a82      	ldr	r2, [pc, #520]	; (8001e88 <createProblem+0xfe0>)
 8001c7e:	461c      	mov	r4, r3
 8001c80:	4613      	mov	r3, r2
 8001c82:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001c84:	6020      	str	r0, [r4, #0]
 8001c86:	6061      	str	r1, [r4, #4]
 8001c88:	60a2      	str	r2, [r4, #8]
 8001c8a:	781b      	ldrb	r3, [r3, #0]
 8001c8c:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8001c8e:	687b      	ldr	r3, [r7, #4]
 8001c90:	33d8      	adds	r3, #216	; 0xd8
 8001c92:	497e      	ldr	r1, [pc, #504]	; (8001e8c <createProblem+0xfe4>)
 8001c94:	461a      	mov	r2, r3
 8001c96:	460b      	mov	r3, r1
 8001c98:	cb03      	ldmia	r3!, {r0, r1}
 8001c9a:	6010      	str	r0, [r2, #0]
 8001c9c:	6051      	str	r1, [r2, #4]
 8001c9e:	881b      	ldrh	r3, [r3, #0]
 8001ca0:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B");
 8001ca2:	687b      	ldr	r3, [r7, #4]
 8001ca4:	33cc      	adds	r3, #204	; 0xcc
 8001ca6:	4a7a      	ldr	r2, [pc, #488]	; (8001e90 <createProblem+0xfe8>)
 8001ca8:	8811      	ldrh	r1, [r2, #0]
 8001caa:	7892      	ldrb	r2, [r2, #2]
 8001cac:	8019      	strh	r1, [r3, #0]
 8001cae:	709a      	strb	r2, [r3, #2]
			break;
 8001cb0:	f018 be40 	b.w	801a934 <createProblem+0x19a8c>
		case 100 :
			strcpy(p->name,"ACG30");
 8001cb4:	687b      	ldr	r3, [r7, #4]
 8001cb6:	337c      	adds	r3, #124	; 0x7c
 8001cb8:	4a76      	ldr	r2, [pc, #472]	; (8001e94 <createProblem+0xfec>)
 8001cba:	6810      	ldr	r0, [r2, #0]
 8001cbc:	6018      	str	r0, [r3, #0]
 8001cbe:	8892      	ldrh	r2, [r2, #4]
 8001cc0:	809a      	strh	r2, [r3, #4]
			p->moveSize = 8;
 8001cc2:	687b      	ldr	r3, [r7, #4]
 8001cc4:	2208      	movs	r2, #8
 8001cc6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,D,E,F,G,G,I,I");
 8001cc8:	687b      	ldr	r3, [r7, #4]
 8001cca:	3340      	adds	r3, #64	; 0x40
 8001ccc:	4a72      	ldr	r2, [pc, #456]	; (8001e98 <createProblem+0xff0>)
 8001cce:	461c      	mov	r4, r3
 8001cd0:	4615      	mov	r5, r2
 8001cd2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001cd4:	6020      	str	r0, [r4, #0]
 8001cd6:	6061      	str	r1, [r4, #4]
 8001cd8:	60a2      	str	r2, [r4, #8]
 8001cda:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,11,8,11,6,15,14,18");
 8001cdc:	687b      	ldr	r3, [r7, #4]
 8001cde:	3304      	adds	r3, #4
 8001ce0:	4a6e      	ldr	r2, [pc, #440]	; (8001e9c <createProblem+0xff4>)
 8001ce2:	461d      	mov	r5, r3
 8001ce4:	4614      	mov	r4, r2
 8001ce6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001ce8:	6028      	str	r0, [r5, #0]
 8001cea:	6069      	str	r1, [r5, #4]
 8001cec:	60aa      	str	r2, [r5, #8]
 8001cee:	60eb      	str	r3, [r5, #12]
 8001cf0:	6820      	ldr	r0, [r4, #0]
 8001cf2:	6128      	str	r0, [r5, #16]
 8001cf4:	7923      	ldrb	r3, [r4, #4]
 8001cf6:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,s,d,d,e");
 8001cf8:	687b      	ldr	r3, [r7, #4]
 8001cfa:	33d8      	adds	r3, #216	; 0xd8
 8001cfc:	4a68      	ldr	r2, [pc, #416]	; (8001ea0 <createProblem+0xff8>)
 8001cfe:	461c      	mov	r4, r3
 8001d00:	4615      	mov	r5, r2
 8001d02:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001d04:	6020      	str	r0, [r4, #0]
 8001d06:	6061      	str	r1, [r4, #4]
 8001d08:	60a2      	str	r2, [r4, #8]
 8001d0a:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8001d0c:	687b      	ldr	r3, [r7, #4]
 8001d0e:	33cc      	adds	r3, #204	; 0xcc
 8001d10:	4a64      	ldr	r2, [pc, #400]	; (8001ea4 <createProblem+0xffc>)
 8001d12:	8811      	ldrh	r1, [r2, #0]
 8001d14:	7892      	ldrb	r2, [r2, #2]
 8001d16:	8019      	strh	r1, [r3, #0]
 8001d18:	709a      	strb	r2, [r3, #2]
			break;
 8001d1a:	f018 be0b 	b.w	801a934 <createProblem+0x19a8c>
		case 101 :
			strcpy(p->name,"ACG31");
 8001d1e:	687b      	ldr	r3, [r7, #4]
 8001d20:	337c      	adds	r3, #124	; 0x7c
 8001d22:	4a61      	ldr	r2, [pc, #388]	; (8001ea8 <createProblem+0x1000>)
 8001d24:	6810      	ldr	r0, [r2, #0]
 8001d26:	6018      	str	r0, [r3, #0]
 8001d28:	8892      	ldrh	r2, [r2, #4]
 8001d2a:	809a      	strh	r2, [r3, #4]
			p->moveSize = 6;
 8001d2c:	687b      	ldr	r3, [r7, #4]
 8001d2e:	2206      	movs	r2, #6
 8001d30:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,H,C,E,A");
 8001d32:	687b      	ldr	r3, [r7, #4]
 8001d34:	3340      	adds	r3, #64	; 0x40
 8001d36:	4a5d      	ldr	r2, [pc, #372]	; (8001eac <createProblem+0x1004>)
 8001d38:	461c      	mov	r4, r3
 8001d3a:	4613      	mov	r3, r2
 8001d3c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001d3e:	6020      	str	r0, [r4, #0]
 8001d40:	6061      	str	r1, [r4, #4]
 8001d42:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,10,13,13,16,18");
 8001d44:	687b      	ldr	r3, [r7, #4]
 8001d46:	3304      	adds	r3, #4
 8001d48:	4a59      	ldr	r2, [pc, #356]	; (8001eb0 <createProblem+0x1008>)
 8001d4a:	461d      	mov	r5, r3
 8001d4c:	4614      	mov	r4, r2
 8001d4e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001d50:	6028      	str	r0, [r5, #0]
 8001d52:	6069      	str	r1, [r5, #4]
 8001d54:	60aa      	str	r2, [r5, #8]
 8001d56:	60eb      	str	r3, [r5, #12]
 8001d58:	7823      	ldrb	r3, [r4, #0]
 8001d5a:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8001d5c:	687b      	ldr	r3, [r7, #4]
 8001d5e:	33d8      	adds	r3, #216	; 0xd8
 8001d60:	4a54      	ldr	r2, [pc, #336]	; (8001eb4 <createProblem+0x100c>)
 8001d62:	461c      	mov	r4, r3
 8001d64:	4613      	mov	r3, r2
 8001d66:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001d68:	6020      	str	r0, [r4, #0]
 8001d6a:	6061      	str	r1, [r4, #4]
 8001d6c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 8001d6e:	687b      	ldr	r3, [r7, #4]
 8001d70:	33cc      	adds	r3, #204	; 0xcc
 8001d72:	4a51      	ldr	r2, [pc, #324]	; (8001eb8 <createProblem+0x1010>)
 8001d74:	6810      	ldr	r0, [r2, #0]
 8001d76:	6018      	str	r0, [r3, #0]
			break;
 8001d78:	f018 bddc 	b.w	801a934 <createProblem+0x19a8c>
		case 102 :
			strcpy(p->name,"THIS IS NOW...");
 8001d7c:	687b      	ldr	r3, [r7, #4]
 8001d7e:	337c      	adds	r3, #124	; 0x7c
 8001d80:	4a4e      	ldr	r2, [pc, #312]	; (8001ebc <createProblem+0x1014>)
 8001d82:	461c      	mov	r4, r3
 8001d84:	4613      	mov	r3, r2
 8001d86:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001d88:	6020      	str	r0, [r4, #0]
 8001d8a:	6061      	str	r1, [r4, #4]
 8001d8c:	60a2      	str	r2, [r4, #8]
 8001d8e:	881a      	ldrh	r2, [r3, #0]
 8001d90:	789b      	ldrb	r3, [r3, #2]
 8001d92:	81a2      	strh	r2, [r4, #12]
 8001d94:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 6;
 8001d96:	687b      	ldr	r3, [r7, #4]
 8001d98:	2206      	movs	r2, #6
 8001d9a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,I,E,D,B,D");
 8001d9c:	687b      	ldr	r3, [r7, #4]
 8001d9e:	3340      	adds	r3, #64	; 0x40
 8001da0:	4a47      	ldr	r2, [pc, #284]	; (8001ec0 <createProblem+0x1018>)
 8001da2:	461c      	mov	r4, r3
 8001da4:	4613      	mov	r3, r2
 8001da6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001da8:	6020      	str	r0, [r4, #0]
 8001daa:	6061      	str	r1, [r4, #4]
 8001dac:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,10,12,15,15,18");
 8001dae:	687b      	ldr	r3, [r7, #4]
 8001db0:	3304      	adds	r3, #4
 8001db2:	4a44      	ldr	r2, [pc, #272]	; (8001ec4 <createProblem+0x101c>)
 8001db4:	461d      	mov	r5, r3
 8001db6:	4614      	mov	r4, r2
 8001db8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001dba:	6028      	str	r0, [r5, #0]
 8001dbc:	6069      	str	r1, [r5, #4]
 8001dbe:	60aa      	str	r2, [r5, #8]
 8001dc0:	60eb      	str	r3, [r5, #12]
 8001dc2:	7823      	ldrb	r3, [r4, #0]
 8001dc4:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8001dc6:	687b      	ldr	r3, [r7, #4]
 8001dc8:	33d8      	adds	r3, #216	; 0xd8
 8001dca:	4a3a      	ldr	r2, [pc, #232]	; (8001eb4 <createProblem+0x100c>)
 8001dcc:	461c      	mov	r4, r3
 8001dce:	4613      	mov	r3, r2
 8001dd0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001dd2:	6020      	str	r0, [r4, #0]
 8001dd4:	6061      	str	r1, [r4, #4]
 8001dd6:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 8001dd8:	687b      	ldr	r3, [r7, #4]
 8001dda:	33cc      	adds	r3, #204	; 0xcc
 8001ddc:	4a36      	ldr	r2, [pc, #216]	; (8001eb8 <createProblem+0x1010>)
 8001dde:	6810      	ldr	r0, [r2, #0]
 8001de0:	6018      	str	r0, [r3, #0]
			break;
 8001de2:	f018 bda7 	b.w	801a934 <createProblem+0x19a8c>
		case 103 :
			strcpy(p->name,"BATTLE OF THE PUDGE");
 8001de6:	687b      	ldr	r3, [r7, #4]
 8001de8:	337c      	adds	r3, #124	; 0x7c
 8001dea:	4a37      	ldr	r2, [pc, #220]	; (8001ec8 <createProblem+0x1020>)
 8001dec:	461d      	mov	r5, r3
 8001dee:	4614      	mov	r4, r2
 8001df0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001df2:	6028      	str	r0, [r5, #0]
 8001df4:	6069      	str	r1, [r5, #4]
 8001df6:	60aa      	str	r2, [r5, #8]
 8001df8:	60eb      	str	r3, [r5, #12]
 8001dfa:	6820      	ldr	r0, [r4, #0]
 8001dfc:	6128      	str	r0, [r5, #16]
			p->moveSize = 7;
 8001dfe:	687b      	ldr	r3, [r7, #4]
 8001e00:	2207      	movs	r2, #7
 8001e02:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"A,C,D,E,E,H,I");
 8001e04:	687b      	ldr	r3, [r7, #4]
 8001e06:	3340      	adds	r3, #64	; 0x40
 8001e08:	4a30      	ldr	r2, [pc, #192]	; (8001ecc <createProblem+0x1024>)
 8001e0a:	461c      	mov	r4, r3
 8001e0c:	4613      	mov	r3, r2
 8001e0e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001e10:	6020      	str	r0, [r4, #0]
 8001e12:	6061      	str	r1, [r4, #4]
 8001e14:	60a2      	str	r2, [r4, #8]
 8001e16:	881b      	ldrh	r3, [r3, #0]
 8001e18:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"18,5,11,8,16,5,10");
 8001e1a:	687b      	ldr	r3, [r7, #4]
 8001e1c:	3304      	adds	r3, #4
 8001e1e:	4a2c      	ldr	r2, [pc, #176]	; (8001ed0 <createProblem+0x1028>)
 8001e20:	461d      	mov	r5, r3
 8001e22:	4614      	mov	r4, r2
 8001e24:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001e26:	6028      	str	r0, [r5, #0]
 8001e28:	6069      	str	r1, [r5, #4]
 8001e2a:	60aa      	str	r2, [r5, #8]
 8001e2c:	60eb      	str	r3, [r5, #12]
 8001e2e:	8823      	ldrh	r3, [r4, #0]
 8001e30:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "e,s,d,d,d,s,d");
 8001e32:	687b      	ldr	r3, [r7, #4]
 8001e34:	33d8      	adds	r3, #216	; 0xd8
 8001e36:	4a27      	ldr	r2, [pc, #156]	; (8001ed4 <createProblem+0x102c>)
 8001e38:	461c      	mov	r4, r3
 8001e3a:	4613      	mov	r3, r2
 8001e3c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001e3e:	6020      	str	r0, [r4, #0]
 8001e40:	6061      	str	r1, [r4, #4]
 8001e42:	60a2      	str	r2, [r4, #8]
 8001e44:	881b      	ldrh	r3, [r3, #0]
 8001e46:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 8001e48:	687b      	ldr	r3, [r7, #4]
 8001e4a:	33cc      	adds	r3, #204	; 0xcc
 8001e4c:	4a22      	ldr	r2, [pc, #136]	; (8001ed8 <createProblem+0x1030>)
 8001e4e:	6810      	ldr	r0, [r2, #0]
 8001e50:	6018      	str	r0, [r3, #0]
			break;
 8001e52:	f018 bd6f 	b.w	801a934 <createProblem+0x19a8c>
 8001e56:	bf00      	nop
 8001e58:	080207e0 	.word	0x080207e0
 8001e5c:	080207fc 	.word	0x080207fc
 8001e60:	0802080c 	.word	0x0802080c
 8001e64:	08020820 	.word	0x08020820
 8001e68:	08020830 	.word	0x08020830
 8001e6c:	08020834 	.word	0x08020834
 8001e70:	08020840 	.word	0x08020840
 8001e74:	08020850 	.word	0x08020850
 8001e78:	08020864 	.word	0x08020864
 8001e7c:	08020874 	.word	0x08020874
 8001e80:	08020878 	.word	0x08020878
 8001e84:	08020884 	.word	0x08020884
 8001e88:	08020890 	.word	0x08020890
 8001e8c:	080208a0 	.word	0x080208a0
 8001e90:	080208ac 	.word	0x080208ac
 8001e94:	080208b0 	.word	0x080208b0
 8001e98:	080208b8 	.word	0x080208b8
 8001e9c:	080208c8 	.word	0x080208c8
 8001ea0:	080208e0 	.word	0x080208e0
 8001ea4:	080208f0 	.word	0x080208f0
 8001ea8:	080208f4 	.word	0x080208f4
 8001eac:	080208fc 	.word	0x080208fc
 8001eb0:	08020908 	.word	0x08020908
 8001eb4:	0802091c 	.word	0x0802091c
 8001eb8:	08020928 	.word	0x08020928
 8001ebc:	0802092c 	.word	0x0802092c
 8001ec0:	0802093c 	.word	0x0802093c
 8001ec4:	08020948 	.word	0x08020948
 8001ec8:	0802095c 	.word	0x0802095c
 8001ecc:	08020970 	.word	0x08020970
 8001ed0:	08020980 	.word	0x08020980
 8001ed4:	08020994 	.word	0x08020994
 8001ed8:	080209a4 	.word	0x080209a4
		case 104 :
			strcpy(p->name,"ACG37");
 8001edc:	687b      	ldr	r3, [r7, #4]
 8001ede:	337c      	adds	r3, #124	; 0x7c
 8001ee0:	4ab3      	ldr	r2, [pc, #716]	; (80021b0 <createProblem+0x1308>)
 8001ee2:	6810      	ldr	r0, [r2, #0]
 8001ee4:	6018      	str	r0, [r3, #0]
 8001ee6:	8892      	ldrh	r2, [r2, #4]
 8001ee8:	809a      	strh	r2, [r3, #4]
			p->moveSize = 8;
 8001eea:	687b      	ldr	r3, [r7, #4]
 8001eec:	2208      	movs	r2, #8
 8001eee:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,J,I,J,G,C,C,A");
 8001ef0:	687b      	ldr	r3, [r7, #4]
 8001ef2:	3340      	adds	r3, #64	; 0x40
 8001ef4:	4aaf      	ldr	r2, [pc, #700]	; (80021b4 <createProblem+0x130c>)
 8001ef6:	461c      	mov	r4, r3
 8001ef8:	4615      	mov	r5, r2
 8001efa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001efc:	6020      	str	r0, [r4, #0]
 8001efe:	6061      	str	r1, [r4, #4]
 8001f00:	60a2      	str	r2, [r4, #8]
 8001f02:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,7,10,13,14,16,13,18");
 8001f04:	687b      	ldr	r3, [r7, #4]
 8001f06:	3304      	adds	r3, #4
 8001f08:	4aab      	ldr	r2, [pc, #684]	; (80021b8 <createProblem+0x1310>)
 8001f0a:	461d      	mov	r5, r3
 8001f0c:	4614      	mov	r4, r2
 8001f0e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001f10:	6028      	str	r0, [r5, #0]
 8001f12:	6069      	str	r1, [r5, #4]
 8001f14:	60aa      	str	r2, [r5, #8]
 8001f16:	60eb      	str	r3, [r5, #12]
 8001f18:	6820      	ldr	r0, [r4, #0]
 8001f1a:	6128      	str	r0, [r5, #16]
 8001f1c:	88a3      	ldrh	r3, [r4, #4]
 8001f1e:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8001f20:	687b      	ldr	r3, [r7, #4]
 8001f22:	33d8      	adds	r3, #216	; 0xd8
 8001f24:	4aa5      	ldr	r2, [pc, #660]	; (80021bc <createProblem+0x1314>)
 8001f26:	461c      	mov	r4, r3
 8001f28:	4615      	mov	r5, r2
 8001f2a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001f2c:	6020      	str	r0, [r4, #0]
 8001f2e:	6061      	str	r1, [r4, #4]
 8001f30:	60a2      	str	r2, [r4, #8]
 8001f32:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8001f34:	687b      	ldr	r3, [r7, #4]
 8001f36:	33cc      	adds	r3, #204	; 0xcc
 8001f38:	4aa1      	ldr	r2, [pc, #644]	; (80021c0 <createProblem+0x1318>)
 8001f3a:	8811      	ldrh	r1, [r2, #0]
 8001f3c:	7892      	ldrb	r2, [r2, #2]
 8001f3e:	8019      	strh	r1, [r3, #0]
 8001f40:	709a      	strb	r2, [r3, #2]
			break;
 8001f42:	f018 bcf7 	b.w	801a934 <createProblem+0x19a8c>
		case 105 :
			strcpy(p->name,"CAROLYN");
 8001f46:	687b      	ldr	r3, [r7, #4]
 8001f48:	337c      	adds	r3, #124	; 0x7c
 8001f4a:	499e      	ldr	r1, [pc, #632]	; (80021c4 <createProblem+0x131c>)
 8001f4c:	461a      	mov	r2, r3
 8001f4e:	460b      	mov	r3, r1
 8001f50:	cb03      	ldmia	r3!, {r0, r1}
 8001f52:	6010      	str	r0, [r2, #0]
 8001f54:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 8001f56:	687b      	ldr	r3, [r7, #4]
 8001f58:	2207      	movs	r2, #7
 8001f5a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,C,I,G,I");
 8001f5c:	687b      	ldr	r3, [r7, #4]
 8001f5e:	3340      	adds	r3, #64	; 0x40
 8001f60:	4a99      	ldr	r2, [pc, #612]	; (80021c8 <createProblem+0x1320>)
 8001f62:	461c      	mov	r4, r3
 8001f64:	4613      	mov	r3, r2
 8001f66:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001f68:	6020      	str	r0, [r4, #0]
 8001f6a:	6061      	str	r1, [r4, #4]
 8001f6c:	60a2      	str	r2, [r4, #8]
 8001f6e:	881b      	ldrh	r3, [r3, #0]
 8001f70:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,10,13,14,17,18");
 8001f72:	687b      	ldr	r3, [r7, #4]
 8001f74:	3304      	adds	r3, #4
 8001f76:	4a95      	ldr	r2, [pc, #596]	; (80021cc <createProblem+0x1324>)
 8001f78:	461d      	mov	r5, r3
 8001f7a:	4614      	mov	r4, r2
 8001f7c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001f7e:	6028      	str	r0, [r5, #0]
 8001f80:	6069      	str	r1, [r5, #4]
 8001f82:	60aa      	str	r2, [r5, #8]
 8001f84:	60eb      	str	r3, [r5, #12]
 8001f86:	8823      	ldrh	r3, [r4, #0]
 8001f88:	78a2      	ldrb	r2, [r4, #2]
 8001f8a:	822b      	strh	r3, [r5, #16]
 8001f8c:	4613      	mov	r3, r2
 8001f8e:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8001f90:	687b      	ldr	r3, [r7, #4]
 8001f92:	33d8      	adds	r3, #216	; 0xd8
 8001f94:	4a8e      	ldr	r2, [pc, #568]	; (80021d0 <createProblem+0x1328>)
 8001f96:	461c      	mov	r4, r3
 8001f98:	4613      	mov	r3, r2
 8001f9a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8001f9c:	6020      	str	r0, [r4, #0]
 8001f9e:	6061      	str	r1, [r4, #4]
 8001fa0:	60a2      	str	r2, [r4, #8]
 8001fa2:	881b      	ldrh	r3, [r3, #0]
 8001fa4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8001fa6:	687b      	ldr	r3, [r7, #4]
 8001fa8:	33cc      	adds	r3, #204	; 0xcc
 8001faa:	4a8a      	ldr	r2, [pc, #552]	; (80021d4 <createProblem+0x132c>)
 8001fac:	6810      	ldr	r0, [r2, #0]
 8001fae:	6018      	str	r0, [r3, #0]
			break;
 8001fb0:	f018 bcc0 	b.w	801a934 <createProblem+0x19a8c>
		case 106 :
			strcpy(p->name,"AB1");
 8001fb4:	687b      	ldr	r3, [r7, #4]
 8001fb6:	337c      	adds	r3, #124	; 0x7c
 8001fb8:	4a87      	ldr	r2, [pc, #540]	; (80021d8 <createProblem+0x1330>)
 8001fba:	6810      	ldr	r0, [r2, #0]
 8001fbc:	6018      	str	r0, [r3, #0]
			p->moveSize = 8;
 8001fbe:	687b      	ldr	r3, [r7, #4]
 8001fc0:	2208      	movs	r2, #8
 8001fc2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,A,E,A,D,A");
 8001fc4:	687b      	ldr	r3, [r7, #4]
 8001fc6:	3340      	adds	r3, #64	; 0x40
 8001fc8:	4a84      	ldr	r2, [pc, #528]	; (80021dc <createProblem+0x1334>)
 8001fca:	461c      	mov	r4, r3
 8001fcc:	4615      	mov	r5, r2
 8001fce:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001fd0:	6020      	str	r0, [r4, #0]
 8001fd2:	6061      	str	r1, [r4, #4]
 8001fd4:	60a2      	str	r2, [r4, #8]
 8001fd6:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,8,9,12,14,15,18");
 8001fd8:	687b      	ldr	r3, [r7, #4]
 8001fda:	3304      	adds	r3, #4
 8001fdc:	4a80      	ldr	r2, [pc, #512]	; (80021e0 <createProblem+0x1338>)
 8001fde:	461d      	mov	r5, r3
 8001fe0:	4614      	mov	r4, r2
 8001fe2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8001fe4:	6028      	str	r0, [r5, #0]
 8001fe6:	6069      	str	r1, [r5, #4]
 8001fe8:	60aa      	str	r2, [r5, #8]
 8001fea:	60eb      	str	r3, [r5, #12]
 8001fec:	6820      	ldr	r0, [r4, #0]
 8001fee:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8001ff0:	687b      	ldr	r3, [r7, #4]
 8001ff2:	33d8      	adds	r3, #216	; 0xd8
 8001ff4:	4a7b      	ldr	r2, [pc, #492]	; (80021e4 <createProblem+0x133c>)
 8001ff6:	461c      	mov	r4, r3
 8001ff8:	4615      	mov	r5, r2
 8001ffa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8001ffc:	6020      	str	r0, [r4, #0]
 8001ffe:	6061      	str	r1, [r4, #4]
 8002000:	60a2      	str	r2, [r4, #8]
 8002002:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8002004:	687b      	ldr	r3, [r7, #4]
 8002006:	33cc      	adds	r3, #204	; 0xcc
 8002008:	4a72      	ldr	r2, [pc, #456]	; (80021d4 <createProblem+0x132c>)
 800200a:	6810      	ldr	r0, [r2, #0]
 800200c:	6018      	str	r0, [r3, #0]
			break;
 800200e:	f018 bc91 	b.w	801a934 <createProblem+0x19a8c>
		case 107 :
			strcpy(p->name,"ACG43");
 8002012:	687b      	ldr	r3, [r7, #4]
 8002014:	337c      	adds	r3, #124	; 0x7c
 8002016:	4a74      	ldr	r2, [pc, #464]	; (80021e8 <createProblem+0x1340>)
 8002018:	6810      	ldr	r0, [r2, #0]
 800201a:	6018      	str	r0, [r3, #0]
 800201c:	8892      	ldrh	r2, [r2, #4]
 800201e:	809a      	strh	r2, [r3, #4]
			p->moveSize = 8;
 8002020:	687b      	ldr	r3, [r7, #4]
 8002022:	2208      	movs	r2, #8
 8002024:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,D,E,A,A,B,D");
 8002026:	687b      	ldr	r3, [r7, #4]
 8002028:	3340      	adds	r3, #64	; 0x40
 800202a:	4a70      	ldr	r2, [pc, #448]	; (80021ec <createProblem+0x1344>)
 800202c:	461c      	mov	r4, r3
 800202e:	4615      	mov	r5, r2
 8002030:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002032:	6020      	str	r0, [r4, #0]
 8002034:	6061      	str	r1, [r4, #4]
 8002036:	60a2      	str	r2, [r4, #8]
 8002038:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,10,11,14,14,9,6,18");
 800203a:	687b      	ldr	r3, [r7, #4]
 800203c:	3304      	adds	r3, #4
 800203e:	4a6c      	ldr	r2, [pc, #432]	; (80021f0 <createProblem+0x1348>)
 8002040:	461d      	mov	r5, r3
 8002042:	4614      	mov	r4, r2
 8002044:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002046:	6028      	str	r0, [r5, #0]
 8002048:	6069      	str	r1, [r5, #4]
 800204a:	60aa      	str	r2, [r5, #8]
 800204c:	60eb      	str	r3, [r5, #12]
 800204e:	6820      	ldr	r0, [r4, #0]
 8002050:	6128      	str	r0, [r5, #16]
 8002052:	7923      	ldrb	r3, [r4, #4]
 8002054:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8002056:	687b      	ldr	r3, [r7, #4]
 8002058:	33d8      	adds	r3, #216	; 0xd8
 800205a:	4a58      	ldr	r2, [pc, #352]	; (80021bc <createProblem+0x1314>)
 800205c:	461c      	mov	r4, r3
 800205e:	4615      	mov	r5, r2
 8002060:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002062:	6020      	str	r0, [r4, #0]
 8002064:	6061      	str	r1, [r4, #4]
 8002066:	60a2      	str	r2, [r4, #8]
 8002068:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 800206a:	687b      	ldr	r3, [r7, #4]
 800206c:	33cc      	adds	r3, #204	; 0xcc
 800206e:	4a61      	ldr	r2, [pc, #388]	; (80021f4 <createProblem+0x134c>)
 8002070:	6810      	ldr	r0, [r2, #0]
 8002072:	6018      	str	r0, [r3, #0]
			break;
 8002074:	f018 bc5e 	b.w	801a934 <createProblem+0x19a8c>
		case 108 :
			strcpy(p->name,"LIP GRIP");
 8002078:	687b      	ldr	r3, [r7, #4]
 800207a:	337c      	adds	r3, #124	; 0x7c
 800207c:	495e      	ldr	r1, [pc, #376]	; (80021f8 <createProblem+0x1350>)
 800207e:	461a      	mov	r2, r3
 8002080:	460b      	mov	r3, r1
 8002082:	cb03      	ldmia	r3!, {r0, r1}
 8002084:	6010      	str	r0, [r2, #0]
 8002086:	6051      	str	r1, [r2, #4]
 8002088:	781b      	ldrb	r3, [r3, #0]
 800208a:	7213      	strb	r3, [r2, #8]
			p->moveSize = 6;
 800208c:	687b      	ldr	r3, [r7, #4]
 800208e:	2206      	movs	r2, #6
 8002090:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,K,H,K,I");
 8002092:	687b      	ldr	r3, [r7, #4]
 8002094:	3340      	adds	r3, #64	; 0x40
 8002096:	4a59      	ldr	r2, [pc, #356]	; (80021fc <createProblem+0x1354>)
 8002098:	461c      	mov	r4, r3
 800209a:	4613      	mov	r3, r2
 800209c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800209e:	6020      	str	r0, [r4, #0]
 80020a0:	6061      	str	r1, [r4, #4]
 80020a2:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,4,9,13,14,18");
 80020a4:	687b      	ldr	r3, [r7, #4]
 80020a6:	3304      	adds	r3, #4
 80020a8:	4a55      	ldr	r2, [pc, #340]	; (8002200 <createProblem+0x1358>)
 80020aa:	461c      	mov	r4, r3
 80020ac:	4613      	mov	r3, r2
 80020ae:	cb07      	ldmia	r3!, {r0, r1, r2}
 80020b0:	6020      	str	r0, [r4, #0]
 80020b2:	6061      	str	r1, [r4, #4]
 80020b4:	60a2      	str	r2, [r4, #8]
 80020b6:	881a      	ldrh	r2, [r3, #0]
 80020b8:	789b      	ldrb	r3, [r3, #2]
 80020ba:	81a2      	strh	r2, [r4, #12]
 80020bc:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80020be:	687b      	ldr	r3, [r7, #4]
 80020c0:	33d8      	adds	r3, #216	; 0xd8
 80020c2:	4a50      	ldr	r2, [pc, #320]	; (8002204 <createProblem+0x135c>)
 80020c4:	461c      	mov	r4, r3
 80020c6:	4613      	mov	r3, r2
 80020c8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80020ca:	6020      	str	r0, [r4, #0]
 80020cc:	6061      	str	r1, [r4, #4]
 80020ce:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 80020d0:	687b      	ldr	r3, [r7, #4]
 80020d2:	33cc      	adds	r3, #204	; 0xcc
 80020d4:	4a4c      	ldr	r2, [pc, #304]	; (8002208 <createProblem+0x1360>)
 80020d6:	6810      	ldr	r0, [r2, #0]
 80020d8:	6018      	str	r0, [r3, #0]
			break;
 80020da:	f018 bc2b 	b.w	801a934 <createProblem+0x19a8c>
		case 109 :
			strcpy(p->name,"COLPA DEL NONNO");
 80020de:	687b      	ldr	r3, [r7, #4]
 80020e0:	337c      	adds	r3, #124	; 0x7c
 80020e2:	4a4a      	ldr	r2, [pc, #296]	; (800220c <createProblem+0x1364>)
 80020e4:	461c      	mov	r4, r3
 80020e6:	4615      	mov	r5, r2
 80020e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80020ea:	6020      	str	r0, [r4, #0]
 80020ec:	6061      	str	r1, [r4, #4]
 80020ee:	60a2      	str	r2, [r4, #8]
 80020f0:	60e3      	str	r3, [r4, #12]
			p->moveSize = 7;
 80020f2:	687b      	ldr	r3, [r7, #4]
 80020f4:	2207      	movs	r2, #7
 80020f6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,C,E,B,E,B,D");
 80020f8:	687b      	ldr	r3, [r7, #4]
 80020fa:	3340      	adds	r3, #64	; 0x40
 80020fc:	4a44      	ldr	r2, [pc, #272]	; (8002210 <createProblem+0x1368>)
 80020fe:	461c      	mov	r4, r3
 8002100:	4613      	mov	r3, r2
 8002102:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002104:	6020      	str	r0, [r4, #0]
 8002106:	6061      	str	r1, [r4, #4]
 8002108:	60a2      	str	r2, [r4, #8]
 800210a:	881b      	ldrh	r3, [r3, #0]
 800210c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,9,10,14,15,18");
 800210e:	687b      	ldr	r3, [r7, #4]
 8002110:	3304      	adds	r3, #4
 8002112:	4a40      	ldr	r2, [pc, #256]	; (8002214 <createProblem+0x136c>)
 8002114:	461d      	mov	r5, r3
 8002116:	4614      	mov	r4, r2
 8002118:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800211a:	6028      	str	r0, [r5, #0]
 800211c:	6069      	str	r1, [r5, #4]
 800211e:	60aa      	str	r2, [r5, #8]
 8002120:	60eb      	str	r3, [r5, #12]
 8002122:	8823      	ldrh	r3, [r4, #0]
 8002124:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8002126:	687b      	ldr	r3, [r7, #4]
 8002128:	33d8      	adds	r3, #216	; 0xd8
 800212a:	4a3b      	ldr	r2, [pc, #236]	; (8002218 <createProblem+0x1370>)
 800212c:	461c      	mov	r4, r3
 800212e:	4613      	mov	r3, r2
 8002130:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002132:	6020      	str	r0, [r4, #0]
 8002134:	6061      	str	r1, [r4, #4]
 8002136:	60a2      	str	r2, [r4, #8]
 8002138:	881b      	ldrh	r3, [r3, #0]
 800213a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800213c:	687b      	ldr	r3, [r7, #4]
 800213e:	33cc      	adds	r3, #204	; 0xcc
 8002140:	4a24      	ldr	r2, [pc, #144]	; (80021d4 <createProblem+0x132c>)
 8002142:	6810      	ldr	r0, [r2, #0]
 8002144:	6018      	str	r0, [r3, #0]
			break;
 8002146:	f018 bbf5 	b.w	801a934 <createProblem+0x19a8c>
		case 11 :
			strcpy(p->name,"HAN DUO");
 800214a:	687b      	ldr	r3, [r7, #4]
 800214c:	337c      	adds	r3, #124	; 0x7c
 800214e:	4933      	ldr	r1, [pc, #204]	; (800221c <createProblem+0x1374>)
 8002150:	461a      	mov	r2, r3
 8002152:	460b      	mov	r3, r1
 8002154:	cb03      	ldmia	r3!, {r0, r1}
 8002156:	6010      	str	r0, [r2, #0]
 8002158:	6051      	str	r1, [r2, #4]
			p->moveSize = 5;
 800215a:	687b      	ldr	r3, [r7, #4]
 800215c:	2205      	movs	r2, #5
 800215e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,F,E,H,I");
 8002160:	687b      	ldr	r3, [r7, #4]
 8002162:	3340      	adds	r3, #64	; 0x40
 8002164:	492e      	ldr	r1, [pc, #184]	; (8002220 <createProblem+0x1378>)
 8002166:	461a      	mov	r2, r3
 8002168:	460b      	mov	r3, r1
 800216a:	cb03      	ldmia	r3!, {r0, r1}
 800216c:	6010      	str	r0, [r2, #0]
 800216e:	6051      	str	r1, [r2, #4]
 8002170:	881b      	ldrh	r3, [r3, #0]
 8002172:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,11,14,13,18");
 8002174:	687b      	ldr	r3, [r7, #4]
 8002176:	3304      	adds	r3, #4
 8002178:	4a2a      	ldr	r2, [pc, #168]	; (8002224 <createProblem+0x137c>)
 800217a:	461c      	mov	r4, r3
 800217c:	4613      	mov	r3, r2
 800217e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002180:	6020      	str	r0, [r4, #0]
 8002182:	6061      	str	r1, [r4, #4]
 8002184:	60a2      	str	r2, [r4, #8]
 8002186:	881b      	ldrh	r3, [r3, #0]
 8002188:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800218a:	687b      	ldr	r3, [r7, #4]
 800218c:	33d8      	adds	r3, #216	; 0xd8
 800218e:	4926      	ldr	r1, [pc, #152]	; (8002228 <createProblem+0x1380>)
 8002190:	461a      	mov	r2, r3
 8002192:	460b      	mov	r3, r1
 8002194:	cb03      	ldmia	r3!, {r0, r1}
 8002196:	6010      	str	r0, [r2, #0]
 8002198:	6051      	str	r1, [r2, #4]
 800219a:	881b      	ldrh	r3, [r3, #0]
 800219c:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7C");
 800219e:	687b      	ldr	r3, [r7, #4]
 80021a0:	33cc      	adds	r3, #204	; 0xcc
 80021a2:	4a22      	ldr	r2, [pc, #136]	; (800222c <createProblem+0x1384>)
 80021a4:	8811      	ldrh	r1, [r2, #0]
 80021a6:	7892      	ldrb	r2, [r2, #2]
 80021a8:	8019      	strh	r1, [r3, #0]
 80021aa:	709a      	strb	r2, [r3, #2]
			break;
 80021ac:	f018 bbc2 	b.w	801a934 <createProblem+0x19a8c>
 80021b0:	080209a8 	.word	0x080209a8
 80021b4:	080209b0 	.word	0x080209b0
 80021b8:	080209c0 	.word	0x080209c0
 80021bc:	080209d8 	.word	0x080209d8
 80021c0:	08020874 	.word	0x08020874
 80021c4:	080209e8 	.word	0x080209e8
 80021c8:	080209f0 	.word	0x080209f0
 80021cc:	08020a00 	.word	0x08020a00
 80021d0:	08020a14 	.word	0x08020a14
 80021d4:	08020830 	.word	0x08020830
 80021d8:	08020a24 	.word	0x08020a24
 80021dc:	08020a28 	.word	0x08020a28
 80021e0:	08020a38 	.word	0x08020a38
 80021e4:	08020a4c 	.word	0x08020a4c
 80021e8:	08020a5c 	.word	0x08020a5c
 80021ec:	08020a64 	.word	0x08020a64
 80021f0:	08020a74 	.word	0x08020a74
 80021f4:	08020928 	.word	0x08020928
 80021f8:	08020a8c 	.word	0x08020a8c
 80021fc:	08020a98 	.word	0x08020a98
 8002200:	08020aa4 	.word	0x08020aa4
 8002204:	0802091c 	.word	0x0802091c
 8002208:	080209a4 	.word	0x080209a4
 800220c:	08020ab4 	.word	0x08020ab4
 8002210:	08020ac4 	.word	0x08020ac4
 8002214:	08020ad4 	.word	0x08020ad4
 8002218:	08020820 	.word	0x08020820
 800221c:	08020ae8 	.word	0x08020ae8
 8002220:	08020af0 	.word	0x08020af0
 8002224:	08020afc 	.word	0x08020afc
 8002228:	080208a0 	.word	0x080208a0
 800222c:	08020b0c 	.word	0x08020b0c
		case 110 :
			strcpy(p->name,"GS VR #1");
 8002230:	687b      	ldr	r3, [r7, #4]
 8002232:	337c      	adds	r3, #124	; 0x7c
 8002234:	49c0      	ldr	r1, [pc, #768]	; (8002538 <createProblem+0x1690>)
 8002236:	461a      	mov	r2, r3
 8002238:	460b      	mov	r3, r1
 800223a:	cb03      	ldmia	r3!, {r0, r1}
 800223c:	6010      	str	r0, [r2, #0]
 800223e:	6051      	str	r1, [r2, #4]
 8002240:	781b      	ldrb	r3, [r3, #0]
 8002242:	7213      	strb	r3, [r2, #8]
			p->moveSize = 8;
 8002244:	687b      	ldr	r3, [r7, #4]
 8002246:	2208      	movs	r2, #8
 8002248:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,B,E,C,E,D");
 800224a:	687b      	ldr	r3, [r7, #4]
 800224c:	3340      	adds	r3, #64	; 0x40
 800224e:	4abb      	ldr	r2, [pc, #748]	; (800253c <createProblem+0x1694>)
 8002250:	461c      	mov	r4, r3
 8002252:	4615      	mov	r5, r2
 8002254:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002256:	6020      	str	r0, [r4, #0]
 8002258:	6061      	str	r1, [r4, #4]
 800225a:	60a2      	str	r2, [r4, #8]
 800225c:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,8,10,12,13,16,18");
 800225e:	687b      	ldr	r3, [r7, #4]
 8002260:	3304      	adds	r3, #4
 8002262:	4ab7      	ldr	r2, [pc, #732]	; (8002540 <createProblem+0x1698>)
 8002264:	461d      	mov	r5, r3
 8002266:	4614      	mov	r4, r2
 8002268:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800226a:	6028      	str	r0, [r5, #0]
 800226c:	6069      	str	r1, [r5, #4]
 800226e:	60aa      	str	r2, [r5, #8]
 8002270:	60eb      	str	r3, [r5, #12]
 8002272:	6820      	ldr	r0, [r4, #0]
 8002274:	6128      	str	r0, [r5, #16]
 8002276:	7923      	ldrb	r3, [r4, #4]
 8002278:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800227a:	687b      	ldr	r3, [r7, #4]
 800227c:	33d8      	adds	r3, #216	; 0xd8
 800227e:	4ab1      	ldr	r2, [pc, #708]	; (8002544 <createProblem+0x169c>)
 8002280:	461c      	mov	r4, r3
 8002282:	4615      	mov	r5, r2
 8002284:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002286:	6020      	str	r0, [r4, #0]
 8002288:	6061      	str	r1, [r4, #4]
 800228a:	60a2      	str	r2, [r4, #8]
 800228c:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800228e:	687b      	ldr	r3, [r7, #4]
 8002290:	33cc      	adds	r3, #204	; 0xcc
 8002292:	4aad      	ldr	r2, [pc, #692]	; (8002548 <createProblem+0x16a0>)
 8002294:	6810      	ldr	r0, [r2, #0]
 8002296:	6018      	str	r0, [r3, #0]
			break;
 8002298:	f018 bb4c 	b.w	801a934 <createProblem+0x19a8c>
		case 111 :
			strcpy(p->name,"ACG46");
 800229c:	687b      	ldr	r3, [r7, #4]
 800229e:	337c      	adds	r3, #124	; 0x7c
 80022a0:	4aaa      	ldr	r2, [pc, #680]	; (800254c <createProblem+0x16a4>)
 80022a2:	6810      	ldr	r0, [r2, #0]
 80022a4:	6018      	str	r0, [r3, #0]
 80022a6:	8892      	ldrh	r2, [r2, #4]
 80022a8:	809a      	strh	r2, [r3, #4]
			p->moveSize = 10;
 80022aa:	687b      	ldr	r3, [r7, #4]
 80022ac:	220a      	movs	r2, #10
 80022ae:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,A,B,G,F,I,E,I,D");
 80022b0:	687b      	ldr	r3, [r7, #4]
 80022b2:	3340      	adds	r3, #64	; 0x40
 80022b4:	4aa6      	ldr	r2, [pc, #664]	; (8002550 <createProblem+0x16a8>)
 80022b6:	461d      	mov	r5, r3
 80022b8:	4614      	mov	r4, r2
 80022ba:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80022bc:	6028      	str	r0, [r5, #0]
 80022be:	6069      	str	r1, [r5, #4]
 80022c0:	60aa      	str	r2, [r5, #8]
 80022c2:	60eb      	str	r3, [r5, #12]
 80022c4:	6820      	ldr	r0, [r4, #0]
 80022c6:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"5,6,9,10,10,13,14,16,7,18");
 80022c8:	687b      	ldr	r3, [r7, #4]
 80022ca:	3304      	adds	r3, #4
 80022cc:	4aa1      	ldr	r2, [pc, #644]	; (8002554 <createProblem+0x16ac>)
 80022ce:	461d      	mov	r5, r3
 80022d0:	4614      	mov	r4, r2
 80022d2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80022d4:	6028      	str	r0, [r5, #0]
 80022d6:	6069      	str	r1, [r5, #4]
 80022d8:	60aa      	str	r2, [r5, #8]
 80022da:	60eb      	str	r3, [r5, #12]
 80022dc:	cc03      	ldmia	r4!, {r0, r1}
 80022de:	6128      	str	r0, [r5, #16]
 80022e0:	6169      	str	r1, [r5, #20]
 80022e2:	8823      	ldrh	r3, [r4, #0]
 80022e4:	832b      	strh	r3, [r5, #24]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,e");
 80022e6:	687b      	ldr	r3, [r7, #4]
 80022e8:	33d8      	adds	r3, #216	; 0xd8
 80022ea:	4a9b      	ldr	r2, [pc, #620]	; (8002558 <createProblem+0x16b0>)
 80022ec:	461d      	mov	r5, r3
 80022ee:	4614      	mov	r4, r2
 80022f0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80022f2:	6028      	str	r0, [r5, #0]
 80022f4:	6069      	str	r1, [r5, #4]
 80022f6:	60aa      	str	r2, [r5, #8]
 80022f8:	60eb      	str	r3, [r5, #12]
 80022fa:	6820      	ldr	r0, [r4, #0]
 80022fc:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "6C");
 80022fe:	687b      	ldr	r3, [r7, #4]
 8002300:	33cc      	adds	r3, #204	; 0xcc
 8002302:	4a96      	ldr	r2, [pc, #600]	; (800255c <createProblem+0x16b4>)
 8002304:	8811      	ldrh	r1, [r2, #0]
 8002306:	7892      	ldrb	r2, [r2, #2]
 8002308:	8019      	strh	r1, [r3, #0]
 800230a:	709a      	strb	r2, [r3, #2]
			break;
 800230c:	f018 bb12 	b.w	801a934 <createProblem+0x19a8c>
		case 112 :
			strcpy(p->name,"UNKNOWN");
 8002310:	687b      	ldr	r3, [r7, #4]
 8002312:	337c      	adds	r3, #124	; 0x7c
 8002314:	4992      	ldr	r1, [pc, #584]	; (8002560 <createProblem+0x16b8>)
 8002316:	461a      	mov	r2, r3
 8002318:	460b      	mov	r3, r1
 800231a:	cb03      	ldmia	r3!, {r0, r1}
 800231c:	6010      	str	r0, [r2, #0]
 800231e:	6051      	str	r1, [r2, #4]
			p->moveSize = 8;
 8002320:	687b      	ldr	r3, [r7, #4]
 8002322:	2208      	movs	r2, #8
 8002324:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,H,J,E,I,D,I");
 8002326:	687b      	ldr	r3, [r7, #4]
 8002328:	3340      	adds	r3, #64	; 0x40
 800232a:	4a8e      	ldr	r2, [pc, #568]	; (8002564 <createProblem+0x16bc>)
 800232c:	461c      	mov	r4, r3
 800232e:	4615      	mov	r5, r2
 8002330:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002332:	6020      	str	r0, [r4, #0]
 8002334:	6061      	str	r1, [r4, #4]
 8002336:	60a2      	str	r2, [r4, #8]
 8002338:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,8,7,12,15,18,18");
 800233a:	687b      	ldr	r3, [r7, #4]
 800233c:	3304      	adds	r3, #4
 800233e:	4a8a      	ldr	r2, [pc, #552]	; (8002568 <createProblem+0x16c0>)
 8002340:	461d      	mov	r5, r3
 8002342:	4614      	mov	r4, r2
 8002344:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002346:	6028      	str	r0, [r5, #0]
 8002348:	6069      	str	r1, [r5, #4]
 800234a:	60aa      	str	r2, [r5, #8]
 800234c:	60eb      	str	r3, [r5, #12]
 800234e:	6820      	ldr	r0, [r4, #0]
 8002350:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e,e");
 8002352:	687b      	ldr	r3, [r7, #4]
 8002354:	33d8      	adds	r3, #216	; 0xd8
 8002356:	4a85      	ldr	r2, [pc, #532]	; (800256c <createProblem+0x16c4>)
 8002358:	461c      	mov	r4, r3
 800235a:	4615      	mov	r5, r2
 800235c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800235e:	6020      	str	r0, [r4, #0]
 8002360:	6061      	str	r1, [r4, #4]
 8002362:	60a2      	str	r2, [r4, #8]
 8002364:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8002366:	687b      	ldr	r3, [r7, #4]
 8002368:	33cc      	adds	r3, #204	; 0xcc
 800236a:	4a81      	ldr	r2, [pc, #516]	; (8002570 <createProblem+0x16c8>)
 800236c:	6810      	ldr	r0, [r2, #0]
 800236e:	6018      	str	r0, [r3, #0]
			break;
 8002370:	f018 bae0 	b.w	801a934 <createProblem+0x19a8c>
		case 113 :
			strcpy(p->name,"ROCK LOBSTER");
 8002374:	687b      	ldr	r3, [r7, #4]
 8002376:	337c      	adds	r3, #124	; 0x7c
 8002378:	4a7e      	ldr	r2, [pc, #504]	; (8002574 <createProblem+0x16cc>)
 800237a:	461c      	mov	r4, r3
 800237c:	4613      	mov	r3, r2
 800237e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002380:	6020      	str	r0, [r4, #0]
 8002382:	6061      	str	r1, [r4, #4]
 8002384:	60a2      	str	r2, [r4, #8]
 8002386:	781b      	ldrb	r3, [r3, #0]
 8002388:	7323      	strb	r3, [r4, #12]
			p->moveSize = 8;
 800238a:	687b      	ldr	r3, [r7, #4]
 800238c:	2208      	movs	r2, #8
 800238e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,E,E,A,E,A,E,I");
 8002390:	687b      	ldr	r3, [r7, #4]
 8002392:	3340      	adds	r3, #64	; 0x40
 8002394:	4a78      	ldr	r2, [pc, #480]	; (8002578 <createProblem+0x16d0>)
 8002396:	461c      	mov	r4, r3
 8002398:	4615      	mov	r5, r2
 800239a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800239c:	6020      	str	r0, [r4, #0]
 800239e:	6061      	str	r1, [r4, #4]
 80023a0:	60a2      	str	r2, [r4, #8]
 80023a2:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,9,12,14,16,18");
 80023a4:	687b      	ldr	r3, [r7, #4]
 80023a6:	3304      	adds	r3, #4
 80023a8:	4a74      	ldr	r2, [pc, #464]	; (800257c <createProblem+0x16d4>)
 80023aa:	461d      	mov	r5, r3
 80023ac:	4614      	mov	r4, r2
 80023ae:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80023b0:	6028      	str	r0, [r5, #0]
 80023b2:	6069      	str	r1, [r5, #4]
 80023b4:	60aa      	str	r2, [r5, #8]
 80023b6:	60eb      	str	r3, [r5, #12]
 80023b8:	6820      	ldr	r0, [r4, #0]
 80023ba:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 80023bc:	687b      	ldr	r3, [r7, #4]
 80023be:	33d8      	adds	r3, #216	; 0xd8
 80023c0:	4a60      	ldr	r2, [pc, #384]	; (8002544 <createProblem+0x169c>)
 80023c2:	461c      	mov	r4, r3
 80023c4:	4615      	mov	r5, r2
 80023c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80023c8:	6020      	str	r0, [r4, #0]
 80023ca:	6061      	str	r1, [r4, #4]
 80023cc:	60a2      	str	r2, [r4, #8]
 80023ce:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 80023d0:	687b      	ldr	r3, [r7, #4]
 80023d2:	33cc      	adds	r3, #204	; 0xcc
 80023d4:	4a66      	ldr	r2, [pc, #408]	; (8002570 <createProblem+0x16c8>)
 80023d6:	6810      	ldr	r0, [r2, #0]
 80023d8:	6018      	str	r0, [r3, #0]
			break;
 80023da:	f018 baab 	b.w	801a934 <createProblem+0x19a8c>
		case 114 :
			strcpy(p->name,"ACG48");
 80023de:	687b      	ldr	r3, [r7, #4]
 80023e0:	337c      	adds	r3, #124	; 0x7c
 80023e2:	4a67      	ldr	r2, [pc, #412]	; (8002580 <createProblem+0x16d8>)
 80023e4:	6810      	ldr	r0, [r2, #0]
 80023e6:	6018      	str	r0, [r3, #0]
 80023e8:	8892      	ldrh	r2, [r2, #4]
 80023ea:	809a      	strh	r2, [r3, #4]
			p->moveSize = 7;
 80023ec:	687b      	ldr	r3, [r7, #4]
 80023ee:	2207      	movs	r2, #7
 80023f0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,K,H,F,B,D,A");
 80023f2:	687b      	ldr	r3, [r7, #4]
 80023f4:	3340      	adds	r3, #64	; 0x40
 80023f6:	4a63      	ldr	r2, [pc, #396]	; (8002584 <createProblem+0x16dc>)
 80023f8:	461c      	mov	r4, r3
 80023fa:	4613      	mov	r3, r2
 80023fc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80023fe:	6020      	str	r0, [r4, #0]
 8002400:	6061      	str	r1, [r4, #4]
 8002402:	60a2      	str	r2, [r4, #8]
 8002404:	881b      	ldrh	r3, [r3, #0]
 8002406:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,10,11,12,15,18");
 8002408:	687b      	ldr	r3, [r7, #4]
 800240a:	3304      	adds	r3, #4
 800240c:	4a5e      	ldr	r2, [pc, #376]	; (8002588 <createProblem+0x16e0>)
 800240e:	461d      	mov	r5, r3
 8002410:	4614      	mov	r4, r2
 8002412:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002414:	6028      	str	r0, [r5, #0]
 8002416:	6069      	str	r1, [r5, #4]
 8002418:	60aa      	str	r2, [r5, #8]
 800241a:	60eb      	str	r3, [r5, #12]
 800241c:	8823      	ldrh	r3, [r4, #0]
 800241e:	78a2      	ldrb	r2, [r4, #2]
 8002420:	822b      	strh	r3, [r5, #16]
 8002422:	4613      	mov	r3, r2
 8002424:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8002426:	687b      	ldr	r3, [r7, #4]
 8002428:	33d8      	adds	r3, #216	; 0xd8
 800242a:	4a58      	ldr	r2, [pc, #352]	; (800258c <createProblem+0x16e4>)
 800242c:	461c      	mov	r4, r3
 800242e:	4613      	mov	r3, r2
 8002430:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002432:	6020      	str	r0, [r4, #0]
 8002434:	6061      	str	r1, [r4, #4]
 8002436:	60a2      	str	r2, [r4, #8]
 8002438:	881b      	ldrh	r3, [r3, #0]
 800243a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 800243c:	687b      	ldr	r3, [r7, #4]
 800243e:	33cc      	adds	r3, #204	; 0xcc
 8002440:	4a53      	ldr	r2, [pc, #332]	; (8002590 <createProblem+0x16e8>)
 8002442:	8811      	ldrh	r1, [r2, #0]
 8002444:	7892      	ldrb	r2, [r2, #2]
 8002446:	8019      	strh	r1, [r3, #0]
 8002448:	709a      	strb	r2, [r3, #2]
			break;
 800244a:	f018 ba73 	b.w	801a934 <createProblem+0x19a8c>
		case 115 :
			strcpy(p->name,"SNIFFING DOG");
 800244e:	687b      	ldr	r3, [r7, #4]
 8002450:	337c      	adds	r3, #124	; 0x7c
 8002452:	4a50      	ldr	r2, [pc, #320]	; (8002594 <createProblem+0x16ec>)
 8002454:	461c      	mov	r4, r3
 8002456:	4613      	mov	r3, r2
 8002458:	cb07      	ldmia	r3!, {r0, r1, r2}
 800245a:	6020      	str	r0, [r4, #0]
 800245c:	6061      	str	r1, [r4, #4]
 800245e:	60a2      	str	r2, [r4, #8]
 8002460:	781b      	ldrb	r3, [r3, #0]
 8002462:	7323      	strb	r3, [r4, #12]
			p->moveSize = 7;
 8002464:	687b      	ldr	r3, [r7, #4]
 8002466:	2207      	movs	r2, #7
 8002468:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,J,I,J,I,J,I");
 800246a:	687b      	ldr	r3, [r7, #4]
 800246c:	3340      	adds	r3, #64	; 0x40
 800246e:	4a4a      	ldr	r2, [pc, #296]	; (8002598 <createProblem+0x16f0>)
 8002470:	461c      	mov	r4, r3
 8002472:	4613      	mov	r3, r2
 8002474:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002476:	6020      	str	r0, [r4, #0]
 8002478:	6061      	str	r1, [r4, #4]
 800247a:	60a2      	str	r2, [r4, #8]
 800247c:	881b      	ldrh	r3, [r3, #0]
 800247e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,7,10,13,15,16,18");
 8002480:	687b      	ldr	r3, [r7, #4]
 8002482:	3304      	adds	r3, #4
 8002484:	4a45      	ldr	r2, [pc, #276]	; (800259c <createProblem+0x16f4>)
 8002486:	461d      	mov	r5, r3
 8002488:	4614      	mov	r4, r2
 800248a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800248c:	6028      	str	r0, [r5, #0]
 800248e:	6069      	str	r1, [r5, #4]
 8002490:	60aa      	str	r2, [r5, #8]
 8002492:	60eb      	str	r3, [r5, #12]
 8002494:	8823      	ldrh	r3, [r4, #0]
 8002496:	78a2      	ldrb	r2, [r4, #2]
 8002498:	822b      	strh	r3, [r5, #16]
 800249a:	4613      	mov	r3, r2
 800249c:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800249e:	687b      	ldr	r3, [r7, #4]
 80024a0:	33d8      	adds	r3, #216	; 0xd8
 80024a2:	4a3a      	ldr	r2, [pc, #232]	; (800258c <createProblem+0x16e4>)
 80024a4:	461c      	mov	r4, r3
 80024a6:	4613      	mov	r3, r2
 80024a8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80024aa:	6020      	str	r0, [r4, #0]
 80024ac:	6061      	str	r1, [r4, #4]
 80024ae:	60a2      	str	r2, [r4, #8]
 80024b0:	881b      	ldrh	r3, [r3, #0]
 80024b2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80024b4:	687b      	ldr	r3, [r7, #4]
 80024b6:	33cc      	adds	r3, #204	; 0xcc
 80024b8:	4a23      	ldr	r2, [pc, #140]	; (8002548 <createProblem+0x16a0>)
 80024ba:	6810      	ldr	r0, [r2, #0]
 80024bc:	6018      	str	r0, [r3, #0]
			break;
 80024be:	f018 ba39 	b.w	801a934 <createProblem+0x19a8c>
		case 116 :
			strcpy(p->name,"FUNKED JAM");
 80024c2:	687b      	ldr	r3, [r7, #4]
 80024c4:	337c      	adds	r3, #124	; 0x7c
 80024c6:	4936      	ldr	r1, [pc, #216]	; (80025a0 <createProblem+0x16f8>)
 80024c8:	461a      	mov	r2, r3
 80024ca:	460b      	mov	r3, r1
 80024cc:	cb03      	ldmia	r3!, {r0, r1}
 80024ce:	6010      	str	r0, [r2, #0]
 80024d0:	6051      	str	r1, [r2, #4]
 80024d2:	8819      	ldrh	r1, [r3, #0]
 80024d4:	789b      	ldrb	r3, [r3, #2]
 80024d6:	8111      	strh	r1, [r2, #8]
 80024d8:	7293      	strb	r3, [r2, #10]
			p->moveSize = 8;
 80024da:	687b      	ldr	r3, [r7, #4]
 80024dc:	2208      	movs	r2, #8
 80024de:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,C,D,B,G,H,C,D");
 80024e0:	687b      	ldr	r3, [r7, #4]
 80024e2:	3340      	adds	r3, #64	; 0x40
 80024e4:	4a2f      	ldr	r2, [pc, #188]	; (80025a4 <createProblem+0x16fc>)
 80024e6:	461c      	mov	r4, r3
 80024e8:	4615      	mov	r5, r2
 80024ea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80024ec:	6020      	str	r0, [r4, #0]
 80024ee:	6061      	str	r1, [r4, #4]
 80024f0:	60a2      	str	r2, [r4, #8]
 80024f2:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,7,10,10,13,16,18");
 80024f4:	687b      	ldr	r3, [r7, #4]
 80024f6:	3304      	adds	r3, #4
 80024f8:	4a2b      	ldr	r2, [pc, #172]	; (80025a8 <createProblem+0x1700>)
 80024fa:	461d      	mov	r5, r3
 80024fc:	4614      	mov	r4, r2
 80024fe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002500:	6028      	str	r0, [r5, #0]
 8002502:	6069      	str	r1, [r5, #4]
 8002504:	60aa      	str	r2, [r5, #8]
 8002506:	60eb      	str	r3, [r5, #12]
 8002508:	6820      	ldr	r0, [r4, #0]
 800250a:	6128      	str	r0, [r5, #16]
 800250c:	7923      	ldrb	r3, [r4, #4]
 800250e:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8002510:	687b      	ldr	r3, [r7, #4]
 8002512:	33d8      	adds	r3, #216	; 0xd8
 8002514:	4a0b      	ldr	r2, [pc, #44]	; (8002544 <createProblem+0x169c>)
 8002516:	461c      	mov	r4, r3
 8002518:	4615      	mov	r5, r2
 800251a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800251c:	6020      	str	r0, [r4, #0]
 800251e:	6061      	str	r1, [r4, #4]
 8002520:	60a2      	str	r2, [r4, #8]
 8002522:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "8A");
 8002524:	687b      	ldr	r3, [r7, #4]
 8002526:	33cc      	adds	r3, #204	; 0xcc
 8002528:	4a20      	ldr	r2, [pc, #128]	; (80025ac <createProblem+0x1704>)
 800252a:	8811      	ldrh	r1, [r2, #0]
 800252c:	7892      	ldrb	r2, [r2, #2]
 800252e:	8019      	strh	r1, [r3, #0]
 8002530:	709a      	strb	r2, [r3, #2]
			break;
 8002532:	f018 b9ff 	b.w	801a934 <createProblem+0x19a8c>
 8002536:	bf00      	nop
 8002538:	08020b10 	.word	0x08020b10
 800253c:	08020b1c 	.word	0x08020b1c
 8002540:	08020b2c 	.word	0x08020b2c
 8002544:	08020a4c 	.word	0x08020a4c
 8002548:	08020830 	.word	0x08020830
 800254c:	08020b44 	.word	0x08020b44
 8002550:	08020b4c 	.word	0x08020b4c
 8002554:	08020b60 	.word	0x08020b60
 8002558:	08020b7c 	.word	0x08020b7c
 800255c:	080208f0 	.word	0x080208f0
 8002560:	08020b90 	.word	0x08020b90
 8002564:	08020b98 	.word	0x08020b98
 8002568:	08020ba8 	.word	0x08020ba8
 800256c:	08020bbc 	.word	0x08020bbc
 8002570:	08020928 	.word	0x08020928
 8002574:	08020bcc 	.word	0x08020bcc
 8002578:	08020bdc 	.word	0x08020bdc
 800257c:	08020bec 	.word	0x08020bec
 8002580:	08020c00 	.word	0x08020c00
 8002584:	08020c08 	.word	0x08020c08
 8002588:	08020c18 	.word	0x08020c18
 800258c:	08020a14 	.word	0x08020a14
 8002590:	08020874 	.word	0x08020874
 8002594:	08020c2c 	.word	0x08020c2c
 8002598:	08020c3c 	.word	0x08020c3c
 800259c:	08020c4c 	.word	0x08020c4c
 80025a0:	08020c60 	.word	0x08020c60
 80025a4:	08020c6c 	.word	0x08020c6c
 80025a8:	08020c7c 	.word	0x08020c7c
 80025ac:	08020c94 	.word	0x08020c94
		case 117 :
			strcpy(p->name,"ACG49");
 80025b0:	687b      	ldr	r3, [r7, #4]
 80025b2:	337c      	adds	r3, #124	; 0x7c
 80025b4:	4ab0      	ldr	r2, [pc, #704]	; (8002878 <createProblem+0x19d0>)
 80025b6:	6810      	ldr	r0, [r2, #0]
 80025b8:	6018      	str	r0, [r3, #0]
 80025ba:	8892      	ldrh	r2, [r2, #4]
 80025bc:	809a      	strh	r2, [r3, #4]
			p->moveSize = 8;
 80025be:	687b      	ldr	r3, [r7, #4]
 80025c0:	2208      	movs	r2, #8
 80025c2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,D,E,I,D,B,I");
 80025c4:	687b      	ldr	r3, [r7, #4]
 80025c6:	3340      	adds	r3, #64	; 0x40
 80025c8:	4aac      	ldr	r2, [pc, #688]	; (800287c <createProblem+0x19d4>)
 80025ca:	461c      	mov	r4, r3
 80025cc:	4615      	mov	r5, r2
 80025ce:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80025d0:	6020      	str	r0, [r4, #0]
 80025d2:	6061      	str	r1, [r4, #4]
 80025d4:	60a2      	str	r2, [r4, #8]
 80025d6:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,15,16,10,11,6,18");
 80025d8:	687b      	ldr	r3, [r7, #4]
 80025da:	3304      	adds	r3, #4
 80025dc:	4aa8      	ldr	r2, [pc, #672]	; (8002880 <createProblem+0x19d8>)
 80025de:	461d      	mov	r5, r3
 80025e0:	4614      	mov	r4, r2
 80025e2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80025e4:	6028      	str	r0, [r5, #0]
 80025e6:	6069      	str	r1, [r5, #4]
 80025e8:	60aa      	str	r2, [r5, #8]
 80025ea:	60eb      	str	r3, [r5, #12]
 80025ec:	6820      	ldr	r0, [r4, #0]
 80025ee:	6128      	str	r0, [r5, #16]
 80025f0:	7923      	ldrb	r3, [r4, #4]
 80025f2:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 80025f4:	687b      	ldr	r3, [r7, #4]
 80025f6:	33d8      	adds	r3, #216	; 0xd8
 80025f8:	4aa2      	ldr	r2, [pc, #648]	; (8002884 <createProblem+0x19dc>)
 80025fa:	461c      	mov	r4, r3
 80025fc:	4615      	mov	r5, r2
 80025fe:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002600:	6020      	str	r0, [r4, #0]
 8002602:	6061      	str	r1, [r4, #4]
 8002604:	60a2      	str	r2, [r4, #8]
 8002606:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8002608:	687b      	ldr	r3, [r7, #4]
 800260a:	33cc      	adds	r3, #204	; 0xcc
 800260c:	4a9e      	ldr	r2, [pc, #632]	; (8002888 <createProblem+0x19e0>)
 800260e:	6810      	ldr	r0, [r2, #0]
 8002610:	6018      	str	r0, [r3, #0]
			break;
 8002612:	f018 b98f 	b.w	801a934 <createProblem+0x19a8c>
		case 118 :
			strcpy(p->name,"KEEP IT TIGHT, YO");
 8002616:	687b      	ldr	r3, [r7, #4]
 8002618:	337c      	adds	r3, #124	; 0x7c
 800261a:	4a9c      	ldr	r2, [pc, #624]	; (800288c <createProblem+0x19e4>)
 800261c:	461d      	mov	r5, r3
 800261e:	4614      	mov	r4, r2
 8002620:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002622:	6028      	str	r0, [r5, #0]
 8002624:	6069      	str	r1, [r5, #4]
 8002626:	60aa      	str	r2, [r5, #8]
 8002628:	60eb      	str	r3, [r5, #12]
 800262a:	8823      	ldrh	r3, [r4, #0]
 800262c:	822b      	strh	r3, [r5, #16]
			p->moveSize = 6;
 800262e:	687b      	ldr	r3, [r7, #4]
 8002630:	2206      	movs	r2, #6
 8002632:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,G,F,G,D");
 8002634:	687b      	ldr	r3, [r7, #4]
 8002636:	3340      	adds	r3, #64	; 0x40
 8002638:	4a95      	ldr	r2, [pc, #596]	; (8002890 <createProblem+0x19e8>)
 800263a:	461c      	mov	r4, r3
 800263c:	4613      	mov	r3, r2
 800263e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002640:	6020      	str	r0, [r4, #0]
 8002642:	6061      	str	r1, [r4, #4]
 8002644:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,10,13,15,18");
 8002646:	687b      	ldr	r3, [r7, #4]
 8002648:	3304      	adds	r3, #4
 800264a:	4a92      	ldr	r2, [pc, #584]	; (8002894 <createProblem+0x19ec>)
 800264c:	461c      	mov	r4, r3
 800264e:	4615      	mov	r5, r2
 8002650:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002652:	6020      	str	r0, [r4, #0]
 8002654:	6061      	str	r1, [r4, #4]
 8002656:	60a2      	str	r2, [r4, #8]
 8002658:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800265a:	687b      	ldr	r3, [r7, #4]
 800265c:	33d8      	adds	r3, #216	; 0xd8
 800265e:	4a8e      	ldr	r2, [pc, #568]	; (8002898 <createProblem+0x19f0>)
 8002660:	461c      	mov	r4, r3
 8002662:	4613      	mov	r3, r2
 8002664:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002666:	6020      	str	r0, [r4, #0]
 8002668:	6061      	str	r1, [r4, #4]
 800266a:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 800266c:	687b      	ldr	r3, [r7, #4]
 800266e:	33cc      	adds	r3, #204	; 0xcc
 8002670:	4a8a      	ldr	r2, [pc, #552]	; (800289c <createProblem+0x19f4>)
 8002672:	6810      	ldr	r0, [r2, #0]
 8002674:	6018      	str	r0, [r3, #0]
			break;
 8002676:	f018 b95d 	b.w	801a934 <createProblem+0x19a8c>
		case 119 :
			strcpy(p->name,"SAREVOK");
 800267a:	687b      	ldr	r3, [r7, #4]
 800267c:	337c      	adds	r3, #124	; 0x7c
 800267e:	4988      	ldr	r1, [pc, #544]	; (80028a0 <createProblem+0x19f8>)
 8002680:	461a      	mov	r2, r3
 8002682:	460b      	mov	r3, r1
 8002684:	cb03      	ldmia	r3!, {r0, r1}
 8002686:	6010      	str	r0, [r2, #0]
 8002688:	6051      	str	r1, [r2, #4]
			p->moveSize = 5;
 800268a:	687b      	ldr	r3, [r7, #4]
 800268c:	2205      	movs	r2, #5
 800268e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,I,G,I");
 8002690:	687b      	ldr	r3, [r7, #4]
 8002692:	3340      	adds	r3, #64	; 0x40
 8002694:	4983      	ldr	r1, [pc, #524]	; (80028a4 <createProblem+0x19fc>)
 8002696:	461a      	mov	r2, r3
 8002698:	460b      	mov	r3, r1
 800269a:	cb03      	ldmia	r3!, {r0, r1}
 800269c:	6010      	str	r0, [r2, #0]
 800269e:	6051      	str	r1, [r2, #4]
 80026a0:	881b      	ldrh	r3, [r3, #0]
 80026a2:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,9,14,18");
 80026a4:	687b      	ldr	r3, [r7, #4]
 80026a6:	3304      	adds	r3, #4
 80026a8:	4a7f      	ldr	r2, [pc, #508]	; (80028a8 <createProblem+0x1a00>)
 80026aa:	461c      	mov	r4, r3
 80026ac:	4613      	mov	r3, r2
 80026ae:	cb07      	ldmia	r3!, {r0, r1, r2}
 80026b0:	6020      	str	r0, [r4, #0]
 80026b2:	6061      	str	r1, [r4, #4]
 80026b4:	60a2      	str	r2, [r4, #8]
			strcpy(p->startFinish, "s,d,d,d,e");
 80026b6:	687b      	ldr	r3, [r7, #4]
 80026b8:	33d8      	adds	r3, #216	; 0xd8
 80026ba:	497c      	ldr	r1, [pc, #496]	; (80028ac <createProblem+0x1a04>)
 80026bc:	461a      	mov	r2, r3
 80026be:	460b      	mov	r3, r1
 80026c0:	cb03      	ldmia	r3!, {r0, r1}
 80026c2:	6010      	str	r0, [r2, #0]
 80026c4:	6051      	str	r1, [r2, #4]
 80026c6:	881b      	ldrh	r3, [r3, #0]
 80026c8:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7C");
 80026ca:	687b      	ldr	r3, [r7, #4]
 80026cc:	33cc      	adds	r3, #204	; 0xcc
 80026ce:	4a78      	ldr	r2, [pc, #480]	; (80028b0 <createProblem+0x1a08>)
 80026d0:	8811      	ldrh	r1, [r2, #0]
 80026d2:	7892      	ldrb	r2, [r2, #2]
 80026d4:	8019      	strh	r1, [r3, #0]
 80026d6:	709a      	strb	r2, [r3, #2]
			break;
 80026d8:	f018 b92c 	b.w	801a934 <createProblem+0x19a8c>
		case 12 :
			strcpy(p->name,"TODD, DARK AND HANDSOME");
 80026dc:	687b      	ldr	r3, [r7, #4]
 80026de:	337c      	adds	r3, #124	; 0x7c
 80026e0:	4a74      	ldr	r2, [pc, #464]	; (80028b4 <createProblem+0x1a0c>)
 80026e2:	461d      	mov	r5, r3
 80026e4:	4614      	mov	r4, r2
 80026e6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80026e8:	6028      	str	r0, [r5, #0]
 80026ea:	6069      	str	r1, [r5, #4]
 80026ec:	60aa      	str	r2, [r5, #8]
 80026ee:	60eb      	str	r3, [r5, #12]
 80026f0:	cc03      	ldmia	r4!, {r0, r1}
 80026f2:	6128      	str	r0, [r5, #16]
 80026f4:	6169      	str	r1, [r5, #20]
			p->moveSize = 8;
 80026f6:	687b      	ldr	r3, [r7, #4]
 80026f8:	2208      	movs	r2, #8
 80026fa:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,H,C,C,H,G,I");
 80026fc:	687b      	ldr	r3, [r7, #4]
 80026fe:	3340      	adds	r3, #64	; 0x40
 8002700:	4a6d      	ldr	r2, [pc, #436]	; (80028b8 <createProblem+0x1a10>)
 8002702:	461c      	mov	r4, r3
 8002704:	4615      	mov	r5, r2
 8002706:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002708:	6020      	str	r0, [r4, #0]
 800270a:	6061      	str	r1, [r4, #4]
 800270c:	60a2      	str	r2, [r4, #8]
 800270e:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,8,8,13,16,17,18");
 8002710:	687b      	ldr	r3, [r7, #4]
 8002712:	3304      	adds	r3, #4
 8002714:	4a69      	ldr	r2, [pc, #420]	; (80028bc <createProblem+0x1a14>)
 8002716:	461d      	mov	r5, r3
 8002718:	4614      	mov	r4, r2
 800271a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800271c:	6028      	str	r0, [r5, #0]
 800271e:	6069      	str	r1, [r5, #4]
 8002720:	60aa      	str	r2, [r5, #8]
 8002722:	60eb      	str	r3, [r5, #12]
 8002724:	6820      	ldr	r0, [r4, #0]
 8002726:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8002728:	687b      	ldr	r3, [r7, #4]
 800272a:	33d8      	adds	r3, #216	; 0xd8
 800272c:	4a55      	ldr	r2, [pc, #340]	; (8002884 <createProblem+0x19dc>)
 800272e:	461c      	mov	r4, r3
 8002730:	4615      	mov	r5, r2
 8002732:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002734:	6020      	str	r0, [r4, #0]
 8002736:	6061      	str	r1, [r4, #4]
 8002738:	60a2      	str	r2, [r4, #8]
 800273a:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7C");
 800273c:	687b      	ldr	r3, [r7, #4]
 800273e:	33cc      	adds	r3, #204	; 0xcc
 8002740:	4a5b      	ldr	r2, [pc, #364]	; (80028b0 <createProblem+0x1a08>)
 8002742:	8811      	ldrh	r1, [r2, #0]
 8002744:	7892      	ldrb	r2, [r2, #2]
 8002746:	8019      	strh	r1, [r3, #0]
 8002748:	709a      	strb	r2, [r3, #2]
			break;
 800274a:	f018 b8f3 	b.w	801a934 <createProblem+0x19a8c>
		case 120 :
			strcpy(p->name,"AB3");
 800274e:	687b      	ldr	r3, [r7, #4]
 8002750:	337c      	adds	r3, #124	; 0x7c
 8002752:	4a5b      	ldr	r2, [pc, #364]	; (80028c0 <createProblem+0x1a18>)
 8002754:	6810      	ldr	r0, [r2, #0]
 8002756:	6018      	str	r0, [r3, #0]
			p->moveSize = 8;
 8002758:	687b      	ldr	r3, [r7, #4]
 800275a:	2208      	movs	r2, #8
 800275c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,E,H,F,G,E,I");
 800275e:	687b      	ldr	r3, [r7, #4]
 8002760:	3340      	adds	r3, #64	; 0x40
 8002762:	4a58      	ldr	r2, [pc, #352]	; (80028c4 <createProblem+0x1a1c>)
 8002764:	461c      	mov	r4, r3
 8002766:	4615      	mov	r5, r2
 8002768:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800276a:	6020      	str	r0, [r4, #0]
 800276c:	6061      	str	r1, [r4, #4]
 800276e:	60a2      	str	r2, [r4, #8]
 8002770:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,10,13,14,16,18");
 8002772:	687b      	ldr	r3, [r7, #4]
 8002774:	3304      	adds	r3, #4
 8002776:	4a54      	ldr	r2, [pc, #336]	; (80028c8 <createProblem+0x1a20>)
 8002778:	461d      	mov	r5, r3
 800277a:	4614      	mov	r4, r2
 800277c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800277e:	6028      	str	r0, [r5, #0]
 8002780:	6069      	str	r1, [r5, #4]
 8002782:	60aa      	str	r2, [r5, #8]
 8002784:	60eb      	str	r3, [r5, #12]
 8002786:	6820      	ldr	r0, [r4, #0]
 8002788:	6128      	str	r0, [r5, #16]
 800278a:	7923      	ldrb	r3, [r4, #4]
 800278c:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800278e:	687b      	ldr	r3, [r7, #4]
 8002790:	33d8      	adds	r3, #216	; 0xd8
 8002792:	4a3c      	ldr	r2, [pc, #240]	; (8002884 <createProblem+0x19dc>)
 8002794:	461c      	mov	r4, r3
 8002796:	4615      	mov	r5, r2
 8002798:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800279a:	6020      	str	r0, [r4, #0]
 800279c:	6061      	str	r1, [r4, #4]
 800279e:	60a2      	str	r2, [r4, #8]
 80027a0:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80027a2:	687b      	ldr	r3, [r7, #4]
 80027a4:	33cc      	adds	r3, #204	; 0xcc
 80027a6:	4a49      	ldr	r2, [pc, #292]	; (80028cc <createProblem+0x1a24>)
 80027a8:	6810      	ldr	r0, [r2, #0]
 80027aa:	6018      	str	r0, [r3, #0]
			break;
 80027ac:	f018 b8c2 	b.w	801a934 <createProblem+0x19a8c>
		case 121 :
			strcpy(p->name,"ZEUS");
 80027b0:	687b      	ldr	r3, [r7, #4]
 80027b2:	337c      	adds	r3, #124	; 0x7c
 80027b4:	4a46      	ldr	r2, [pc, #280]	; (80028d0 <createProblem+0x1a28>)
 80027b6:	6810      	ldr	r0, [r2, #0]
 80027b8:	6018      	str	r0, [r3, #0]
 80027ba:	7912      	ldrb	r2, [r2, #4]
 80027bc:	711a      	strb	r2, [r3, #4]
			p->moveSize = 5;
 80027be:	687b      	ldr	r3, [r7, #4]
 80027c0:	2205      	movs	r2, #5
 80027c2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,B,D,D");
 80027c4:	687b      	ldr	r3, [r7, #4]
 80027c6:	3340      	adds	r3, #64	; 0x40
 80027c8:	4942      	ldr	r1, [pc, #264]	; (80028d4 <createProblem+0x1a2c>)
 80027ca:	461a      	mov	r2, r3
 80027cc:	460b      	mov	r3, r1
 80027ce:	cb03      	ldmia	r3!, {r0, r1}
 80027d0:	6010      	str	r0, [r2, #0]
 80027d2:	6051      	str	r1, [r2, #4]
 80027d4:	881b      	ldrh	r3, [r3, #0]
 80027d6:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,10,10,15,18");
 80027d8:	687b      	ldr	r3, [r7, #4]
 80027da:	3304      	adds	r3, #4
 80027dc:	4a3e      	ldr	r2, [pc, #248]	; (80028d8 <createProblem+0x1a30>)
 80027de:	461c      	mov	r4, r3
 80027e0:	4613      	mov	r3, r2
 80027e2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80027e4:	6020      	str	r0, [r4, #0]
 80027e6:	6061      	str	r1, [r4, #4]
 80027e8:	60a2      	str	r2, [r4, #8]
 80027ea:	881b      	ldrh	r3, [r3, #0]
 80027ec:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 80027ee:	687b      	ldr	r3, [r7, #4]
 80027f0:	33d8      	adds	r3, #216	; 0xd8
 80027f2:	492e      	ldr	r1, [pc, #184]	; (80028ac <createProblem+0x1a04>)
 80027f4:	461a      	mov	r2, r3
 80027f6:	460b      	mov	r3, r1
 80027f8:	cb03      	ldmia	r3!, {r0, r1}
 80027fa:	6010      	str	r0, [r2, #0]
 80027fc:	6051      	str	r1, [r2, #4]
 80027fe:	881b      	ldrh	r3, [r3, #0]
 8002800:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C");
 8002802:	687b      	ldr	r3, [r7, #4]
 8002804:	33cc      	adds	r3, #204	; 0xcc
 8002806:	4a35      	ldr	r2, [pc, #212]	; (80028dc <createProblem+0x1a34>)
 8002808:	8811      	ldrh	r1, [r2, #0]
 800280a:	7892      	ldrb	r2, [r2, #2]
 800280c:	8019      	strh	r1, [r3, #0]
 800280e:	709a      	strb	r2, [r3, #2]
			break;
 8002810:	f018 b890 	b.w	801a934 <createProblem+0x19a8c>
		case 122 :
			strcpy(p->name,"LACERQUA");
 8002814:	687b      	ldr	r3, [r7, #4]
 8002816:	337c      	adds	r3, #124	; 0x7c
 8002818:	4931      	ldr	r1, [pc, #196]	; (80028e0 <createProblem+0x1a38>)
 800281a:	461a      	mov	r2, r3
 800281c:	460b      	mov	r3, r1
 800281e:	cb03      	ldmia	r3!, {r0, r1}
 8002820:	6010      	str	r0, [r2, #0]
 8002822:	6051      	str	r1, [r2, #4]
 8002824:	781b      	ldrb	r3, [r3, #0]
 8002826:	7213      	strb	r3, [r2, #8]
			p->moveSize = 5;
 8002828:	687b      	ldr	r3, [r7, #4]
 800282a:	2205      	movs	r2, #5
 800282c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,G,D");
 800282e:	687b      	ldr	r3, [r7, #4]
 8002830:	3340      	adds	r3, #64	; 0x40
 8002832:	492c      	ldr	r1, [pc, #176]	; (80028e4 <createProblem+0x1a3c>)
 8002834:	461a      	mov	r2, r3
 8002836:	460b      	mov	r3, r1
 8002838:	cb03      	ldmia	r3!, {r0, r1}
 800283a:	6010      	str	r0, [r2, #0]
 800283c:	6051      	str	r1, [r2, #4]
 800283e:	881b      	ldrh	r3, [r3, #0]
 8002840:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,8,9,14,18");
 8002842:	687b      	ldr	r3, [r7, #4]
 8002844:	3304      	adds	r3, #4
 8002846:	4a28      	ldr	r2, [pc, #160]	; (80028e8 <createProblem+0x1a40>)
 8002848:	461c      	mov	r4, r3
 800284a:	4613      	mov	r3, r2
 800284c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800284e:	6020      	str	r0, [r4, #0]
 8002850:	6061      	str	r1, [r4, #4]
 8002852:	60a2      	str	r2, [r4, #8]
			strcpy(p->startFinish, "s,d,d,d,e");
 8002854:	687b      	ldr	r3, [r7, #4]
 8002856:	33d8      	adds	r3, #216	; 0xd8
 8002858:	4914      	ldr	r1, [pc, #80]	; (80028ac <createProblem+0x1a04>)
 800285a:	461a      	mov	r2, r3
 800285c:	460b      	mov	r3, r1
 800285e:	cb03      	ldmia	r3!, {r0, r1}
 8002860:	6010      	str	r0, [r2, #0]
 8002862:	6051      	str	r1, [r2, #4]
 8002864:	881b      	ldrh	r3, [r3, #0]
 8002866:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 8002868:	687b      	ldr	r3, [r7, #4]
 800286a:	33cc      	adds	r3, #204	; 0xcc
 800286c:	4a1f      	ldr	r2, [pc, #124]	; (80028ec <createProblem+0x1a44>)
 800286e:	6810      	ldr	r0, [r2, #0]
 8002870:	6018      	str	r0, [r3, #0]
			break;
 8002872:	f018 b85f 	b.w	801a934 <createProblem+0x19a8c>
 8002876:	bf00      	nop
 8002878:	08020c98 	.word	0x08020c98
 800287c:	08020ca0 	.word	0x08020ca0
 8002880:	08020cb0 	.word	0x08020cb0
 8002884:	08020a4c 	.word	0x08020a4c
 8002888:	08020928 	.word	0x08020928
 800288c:	08020cc8 	.word	0x08020cc8
 8002890:	08020cdc 	.word	0x08020cdc
 8002894:	08020ce8 	.word	0x08020ce8
 8002898:	0802091c 	.word	0x0802091c
 800289c:	080209a4 	.word	0x080209a4
 80028a0:	08020cf8 	.word	0x08020cf8
 80028a4:	08020d00 	.word	0x08020d00
 80028a8:	08020d0c 	.word	0x08020d0c
 80028ac:	080208a0 	.word	0x080208a0
 80028b0:	08020b0c 	.word	0x08020b0c
 80028b4:	08020d18 	.word	0x08020d18
 80028b8:	08020d30 	.word	0x08020d30
 80028bc:	08020d40 	.word	0x08020d40
 80028c0:	08020d54 	.word	0x08020d54
 80028c4:	08020d58 	.word	0x08020d58
 80028c8:	08020d68 	.word	0x08020d68
 80028cc:	08020830 	.word	0x08020830
 80028d0:	08020d80 	.word	0x08020d80
 80028d4:	08020d88 	.word	0x08020d88
 80028d8:	08020d94 	.word	0x08020d94
 80028dc:	080208f0 	.word	0x080208f0
 80028e0:	08020da4 	.word	0x08020da4
 80028e4:	08020db0 	.word	0x08020db0
 80028e8:	08020dbc 	.word	0x08020dbc
 80028ec:	08020dc8 	.word	0x08020dc8
		case 123 :
			strcpy(p->name,"AB4");
 80028f0:	687b      	ldr	r3, [r7, #4]
 80028f2:	337c      	adds	r3, #124	; 0x7c
 80028f4:	4abb      	ldr	r2, [pc, #748]	; (8002be4 <createProblem+0x1d3c>)
 80028f6:	6810      	ldr	r0, [r2, #0]
 80028f8:	6018      	str	r0, [r3, #0]
			p->moveSize = 9;
 80028fa:	687b      	ldr	r3, [r7, #4]
 80028fc:	2209      	movs	r2, #9
 80028fe:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,E,F,F,I,I,K,I");
 8002900:	687b      	ldr	r3, [r7, #4]
 8002902:	3340      	adds	r3, #64	; 0x40
 8002904:	4ab8      	ldr	r2, [pc, #736]	; (8002be8 <createProblem+0x1d40>)
 8002906:	461d      	mov	r5, r3
 8002908:	4614      	mov	r4, r2
 800290a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800290c:	6028      	str	r0, [r5, #0]
 800290e:	6069      	str	r1, [r5, #4]
 8002910:	60aa      	str	r2, [r5, #8]
 8002912:	60eb      	str	r3, [r5, #12]
 8002914:	8823      	ldrh	r3, [r4, #0]
 8002916:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,6,8,11,13,14,15,16,18");
 8002918:	687b      	ldr	r3, [r7, #4]
 800291a:	3304      	adds	r3, #4
 800291c:	4ab3      	ldr	r2, [pc, #716]	; (8002bec <createProblem+0x1d44>)
 800291e:	461d      	mov	r5, r3
 8002920:	4614      	mov	r4, r2
 8002922:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002924:	6028      	str	r0, [r5, #0]
 8002926:	6069      	str	r1, [r5, #4]
 8002928:	60aa      	str	r2, [r5, #8]
 800292a:	60eb      	str	r3, [r5, #12]
 800292c:	cc03      	ldmia	r4!, {r0, r1}
 800292e:	6128      	str	r0, [r5, #16]
 8002930:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8002932:	687b      	ldr	r3, [r7, #4]
 8002934:	33d8      	adds	r3, #216	; 0xd8
 8002936:	4aae      	ldr	r2, [pc, #696]	; (8002bf0 <createProblem+0x1d48>)
 8002938:	461d      	mov	r5, r3
 800293a:	4614      	mov	r4, r2
 800293c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800293e:	6028      	str	r0, [r5, #0]
 8002940:	6069      	str	r1, [r5, #4]
 8002942:	60aa      	str	r2, [r5, #8]
 8002944:	60eb      	str	r3, [r5, #12]
 8002946:	8823      	ldrh	r3, [r4, #0]
 8002948:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 800294a:	687b      	ldr	r3, [r7, #4]
 800294c:	33cc      	adds	r3, #204	; 0xcc
 800294e:	4aa9      	ldr	r2, [pc, #676]	; (8002bf4 <createProblem+0x1d4c>)
 8002950:	6810      	ldr	r0, [r2, #0]
 8002952:	6018      	str	r0, [r3, #0]
			break;
 8002954:	f017 bfee 	b.w	801a934 <createProblem+0x19a8c>
		case 124 :
			strcpy(p->name,"LOUDREIGN");
 8002958:	687b      	ldr	r3, [r7, #4]
 800295a:	337c      	adds	r3, #124	; 0x7c
 800295c:	49a6      	ldr	r1, [pc, #664]	; (8002bf8 <createProblem+0x1d50>)
 800295e:	461a      	mov	r2, r3
 8002960:	460b      	mov	r3, r1
 8002962:	cb03      	ldmia	r3!, {r0, r1}
 8002964:	6010      	str	r0, [r2, #0]
 8002966:	6051      	str	r1, [r2, #4]
 8002968:	881b      	ldrh	r3, [r3, #0]
 800296a:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 800296c:	687b      	ldr	r3, [r7, #4]
 800296e:	2207      	movs	r2, #7
 8002970:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,I,J,E,E,A");
 8002972:	687b      	ldr	r3, [r7, #4]
 8002974:	3340      	adds	r3, #64	; 0x40
 8002976:	4aa1      	ldr	r2, [pc, #644]	; (8002bfc <createProblem+0x1d54>)
 8002978:	461c      	mov	r4, r3
 800297a:	4613      	mov	r3, r2
 800297c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800297e:	6020      	str	r0, [r4, #0]
 8002980:	6061      	str	r1, [r4, #4]
 8002982:	60a2      	str	r2, [r4, #8]
 8002984:	881b      	ldrh	r3, [r3, #0]
 8002986:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,10,12,14,16,18");
 8002988:	687b      	ldr	r3, [r7, #4]
 800298a:	3304      	adds	r3, #4
 800298c:	4a9c      	ldr	r2, [pc, #624]	; (8002c00 <createProblem+0x1d58>)
 800298e:	461d      	mov	r5, r3
 8002990:	4614      	mov	r4, r2
 8002992:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002994:	6028      	str	r0, [r5, #0]
 8002996:	6069      	str	r1, [r5, #4]
 8002998:	60aa      	str	r2, [r5, #8]
 800299a:	60eb      	str	r3, [r5, #12]
 800299c:	8823      	ldrh	r3, [r4, #0]
 800299e:	78a2      	ldrb	r2, [r4, #2]
 80029a0:	822b      	strh	r3, [r5, #16]
 80029a2:	4613      	mov	r3, r2
 80029a4:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80029a6:	687b      	ldr	r3, [r7, #4]
 80029a8:	33d8      	adds	r3, #216	; 0xd8
 80029aa:	4a96      	ldr	r2, [pc, #600]	; (8002c04 <createProblem+0x1d5c>)
 80029ac:	461c      	mov	r4, r3
 80029ae:	4613      	mov	r3, r2
 80029b0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80029b2:	6020      	str	r0, [r4, #0]
 80029b4:	6061      	str	r1, [r4, #4]
 80029b6:	60a2      	str	r2, [r4, #8]
 80029b8:	881b      	ldrh	r3, [r3, #0]
 80029ba:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80029bc:	687b      	ldr	r3, [r7, #4]
 80029be:	33cc      	adds	r3, #204	; 0xcc
 80029c0:	4a8c      	ldr	r2, [pc, #560]	; (8002bf4 <createProblem+0x1d4c>)
 80029c2:	6810      	ldr	r0, [r2, #0]
 80029c4:	6018      	str	r0, [r3, #0]
			break;
 80029c6:	f017 bfb5 	b.w	801a934 <createProblem+0x19a8c>
		case 125 :
			strcpy(p->name,"ON OUR HEEL");
 80029ca:	687b      	ldr	r3, [r7, #4]
 80029cc:	337c      	adds	r3, #124	; 0x7c
 80029ce:	4a8e      	ldr	r2, [pc, #568]	; (8002c08 <createProblem+0x1d60>)
 80029d0:	461c      	mov	r4, r3
 80029d2:	4613      	mov	r3, r2
 80029d4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80029d6:	6020      	str	r0, [r4, #0]
 80029d8:	6061      	str	r1, [r4, #4]
 80029da:	60a2      	str	r2, [r4, #8]
			p->moveSize = 7;
 80029dc:	687b      	ldr	r3, [r7, #4]
 80029de:	2207      	movs	r2, #7
 80029e0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,K,H,C,E,D");
 80029e2:	687b      	ldr	r3, [r7, #4]
 80029e4:	3340      	adds	r3, #64	; 0x40
 80029e6:	4a89      	ldr	r2, [pc, #548]	; (8002c0c <createProblem+0x1d64>)
 80029e8:	461c      	mov	r4, r3
 80029ea:	4613      	mov	r3, r2
 80029ec:	cb07      	ldmia	r3!, {r0, r1, r2}
 80029ee:	6020      	str	r0, [r4, #0]
 80029f0:	6061      	str	r1, [r4, #4]
 80029f2:	60a2      	str	r2, [r4, #8]
 80029f4:	881b      	ldrh	r3, [r3, #0]
 80029f6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,10,13,16,18");
 80029f8:	687b      	ldr	r3, [r7, #4]
 80029fa:	3304      	adds	r3, #4
 80029fc:	4a84      	ldr	r2, [pc, #528]	; (8002c10 <createProblem+0x1d68>)
 80029fe:	461d      	mov	r5, r3
 8002a00:	4614      	mov	r4, r2
 8002a02:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002a04:	6028      	str	r0, [r5, #0]
 8002a06:	6069      	str	r1, [r5, #4]
 8002a08:	60aa      	str	r2, [r5, #8]
 8002a0a:	60eb      	str	r3, [r5, #12]
 8002a0c:	8823      	ldrh	r3, [r4, #0]
 8002a0e:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8002a10:	687b      	ldr	r3, [r7, #4]
 8002a12:	33d8      	adds	r3, #216	; 0xd8
 8002a14:	4a7f      	ldr	r2, [pc, #508]	; (8002c14 <createProblem+0x1d6c>)
 8002a16:	461c      	mov	r4, r3
 8002a18:	4613      	mov	r3, r2
 8002a1a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002a1c:	6020      	str	r0, [r4, #0]
 8002a1e:	6061      	str	r1, [r4, #4]
 8002a20:	60a2      	str	r2, [r4, #8]
 8002a22:	881b      	ldrh	r3, [r3, #0]
 8002a24:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8002a26:	687b      	ldr	r3, [r7, #4]
 8002a28:	33cc      	adds	r3, #204	; 0xcc
 8002a2a:	4a7b      	ldr	r2, [pc, #492]	; (8002c18 <createProblem+0x1d70>)
 8002a2c:	8811      	ldrh	r1, [r2, #0]
 8002a2e:	7892      	ldrb	r2, [r2, #2]
 8002a30:	8019      	strh	r1, [r3, #0]
 8002a32:	709a      	strb	r2, [r3, #2]
			break;
 8002a34:	f017 bf7e 	b.w	801a934 <createProblem+0x19a8c>
		case 126 :
			strcpy(p->name,"SUC");
 8002a38:	687b      	ldr	r3, [r7, #4]
 8002a3a:	337c      	adds	r3, #124	; 0x7c
 8002a3c:	4a77      	ldr	r2, [pc, #476]	; (8002c1c <createProblem+0x1d74>)
 8002a3e:	6810      	ldr	r0, [r2, #0]
 8002a40:	6018      	str	r0, [r3, #0]
			p->moveSize = 6;
 8002a42:	687b      	ldr	r3, [r7, #4]
 8002a44:	2206      	movs	r2, #6
 8002a46:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,J,F,B,G,I");
 8002a48:	687b      	ldr	r3, [r7, #4]
 8002a4a:	3340      	adds	r3, #64	; 0x40
 8002a4c:	4a74      	ldr	r2, [pc, #464]	; (8002c20 <createProblem+0x1d78>)
 8002a4e:	461c      	mov	r4, r3
 8002a50:	4613      	mov	r3, r2
 8002a52:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002a54:	6020      	str	r0, [r4, #0]
 8002a56:	6061      	str	r1, [r4, #4]
 8002a58:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,11,15,17,18");
 8002a5a:	687b      	ldr	r3, [r7, #4]
 8002a5c:	3304      	adds	r3, #4
 8002a5e:	4a71      	ldr	r2, [pc, #452]	; (8002c24 <createProblem+0x1d7c>)
 8002a60:	461c      	mov	r4, r3
 8002a62:	4615      	mov	r5, r2
 8002a64:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002a66:	6020      	str	r0, [r4, #0]
 8002a68:	6061      	str	r1, [r4, #4]
 8002a6a:	60a2      	str	r2, [r4, #8]
 8002a6c:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8002a6e:	687b      	ldr	r3, [r7, #4]
 8002a70:	33d8      	adds	r3, #216	; 0xd8
 8002a72:	4a6d      	ldr	r2, [pc, #436]	; (8002c28 <createProblem+0x1d80>)
 8002a74:	461c      	mov	r4, r3
 8002a76:	4613      	mov	r3, r2
 8002a78:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002a7a:	6020      	str	r0, [r4, #0]
 8002a7c:	6061      	str	r1, [r4, #4]
 8002a7e:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8002a80:	687b      	ldr	r3, [r7, #4]
 8002a82:	33cc      	adds	r3, #204	; 0xcc
 8002a84:	4a69      	ldr	r2, [pc, #420]	; (8002c2c <createProblem+0x1d84>)
 8002a86:	6810      	ldr	r0, [r2, #0]
 8002a88:	6018      	str	r0, [r3, #0]
			break;
 8002a8a:	f017 bf53 	b.w	801a934 <createProblem+0x19a8c>
		case 127 :
			strcpy(p->name,"MARK'S FAVORITE PROBLEM");
 8002a8e:	687b      	ldr	r3, [r7, #4]
 8002a90:	337c      	adds	r3, #124	; 0x7c
 8002a92:	4a67      	ldr	r2, [pc, #412]	; (8002c30 <createProblem+0x1d88>)
 8002a94:	461d      	mov	r5, r3
 8002a96:	4614      	mov	r4, r2
 8002a98:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002a9a:	6028      	str	r0, [r5, #0]
 8002a9c:	6069      	str	r1, [r5, #4]
 8002a9e:	60aa      	str	r2, [r5, #8]
 8002aa0:	60eb      	str	r3, [r5, #12]
 8002aa2:	cc03      	ldmia	r4!, {r0, r1}
 8002aa4:	6128      	str	r0, [r5, #16]
 8002aa6:	6169      	str	r1, [r5, #20]
			p->moveSize = 7;
 8002aa8:	687b      	ldr	r3, [r7, #4]
 8002aaa:	2207      	movs	r2, #7
 8002aac:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"A,C,D,E,F,F,G");
 8002aae:	687b      	ldr	r3, [r7, #4]
 8002ab0:	3340      	adds	r3, #64	; 0x40
 8002ab2:	4a60      	ldr	r2, [pc, #384]	; (8002c34 <createProblem+0x1d8c>)
 8002ab4:	461c      	mov	r4, r3
 8002ab6:	4613      	mov	r3, r2
 8002ab8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002aba:	6020      	str	r0, [r4, #0]
 8002abc:	6061      	str	r1, [r4, #4]
 8002abe:	60a2      	str	r2, [r4, #8]
 8002ac0:	881b      	ldrh	r3, [r3, #0]
 8002ac2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"9,5,18,6,13,11,15");
 8002ac4:	687b      	ldr	r3, [r7, #4]
 8002ac6:	3304      	adds	r3, #4
 8002ac8:	4a5b      	ldr	r2, [pc, #364]	; (8002c38 <createProblem+0x1d90>)
 8002aca:	461d      	mov	r5, r3
 8002acc:	4614      	mov	r4, r2
 8002ace:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002ad0:	6028      	str	r0, [r5, #0]
 8002ad2:	6069      	str	r1, [r5, #4]
 8002ad4:	60aa      	str	r2, [r5, #8]
 8002ad6:	60eb      	str	r3, [r5, #12]
 8002ad8:	8823      	ldrh	r3, [r4, #0]
 8002ada:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "d,s,e,s,d,d,d");
 8002adc:	687b      	ldr	r3, [r7, #4]
 8002ade:	33d8      	adds	r3, #216	; 0xd8
 8002ae0:	4a56      	ldr	r2, [pc, #344]	; (8002c3c <createProblem+0x1d94>)
 8002ae2:	461c      	mov	r4, r3
 8002ae4:	4613      	mov	r3, r2
 8002ae6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002ae8:	6020      	str	r0, [r4, #0]
 8002aea:	6061      	str	r1, [r4, #4]
 8002aec:	60a2      	str	r2, [r4, #8]
 8002aee:	881b      	ldrh	r3, [r3, #0]
 8002af0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B");
 8002af2:	687b      	ldr	r3, [r7, #4]
 8002af4:	33cc      	adds	r3, #204	; 0xcc
 8002af6:	4a52      	ldr	r2, [pc, #328]	; (8002c40 <createProblem+0x1d98>)
 8002af8:	8811      	ldrh	r1, [r2, #0]
 8002afa:	7892      	ldrb	r2, [r2, #2]
 8002afc:	8019      	strh	r1, [r3, #0]
 8002afe:	709a      	strb	r2, [r3, #2]
			break;
 8002b00:	f017 bf18 	b.w	801a934 <createProblem+0x19a8c>
		case 128 :
			strcpy(p->name,"SCHWERE LEITER");
 8002b04:	687b      	ldr	r3, [r7, #4]
 8002b06:	337c      	adds	r3, #124	; 0x7c
 8002b08:	4a4e      	ldr	r2, [pc, #312]	; (8002c44 <createProblem+0x1d9c>)
 8002b0a:	461c      	mov	r4, r3
 8002b0c:	4613      	mov	r3, r2
 8002b0e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002b10:	6020      	str	r0, [r4, #0]
 8002b12:	6061      	str	r1, [r4, #4]
 8002b14:	60a2      	str	r2, [r4, #8]
 8002b16:	881a      	ldrh	r2, [r3, #0]
 8002b18:	789b      	ldrb	r3, [r3, #2]
 8002b1a:	81a2      	strh	r2, [r4, #12]
 8002b1c:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 7;
 8002b1e:	687b      	ldr	r3, [r7, #4]
 8002b20:	2207      	movs	r2, #7
 8002b22:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,E,E,E,E,E,D");
 8002b24:	687b      	ldr	r3, [r7, #4]
 8002b26:	3340      	adds	r3, #64	; 0x40
 8002b28:	4a47      	ldr	r2, [pc, #284]	; (8002c48 <createProblem+0x1da0>)
 8002b2a:	461c      	mov	r4, r3
 8002b2c:	4613      	mov	r3, r2
 8002b2e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002b30:	6020      	str	r0, [r4, #0]
 8002b32:	6061      	str	r1, [r4, #4]
 8002b34:	60a2      	str	r2, [r4, #8]
 8002b36:	881b      	ldrh	r3, [r3, #0]
 8002b38:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,8,9,12,14,16,18");
 8002b3a:	687b      	ldr	r3, [r7, #4]
 8002b3c:	3304      	adds	r3, #4
 8002b3e:	4a43      	ldr	r2, [pc, #268]	; (8002c4c <createProblem+0x1da4>)
 8002b40:	461d      	mov	r5, r3
 8002b42:	4614      	mov	r4, r2
 8002b44:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002b46:	6028      	str	r0, [r5, #0]
 8002b48:	6069      	str	r1, [r5, #4]
 8002b4a:	60aa      	str	r2, [r5, #8]
 8002b4c:	60eb      	str	r3, [r5, #12]
 8002b4e:	8823      	ldrh	r3, [r4, #0]
 8002b50:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8002b52:	687b      	ldr	r3, [r7, #4]
 8002b54:	33d8      	adds	r3, #216	; 0xd8
 8002b56:	4a2b      	ldr	r2, [pc, #172]	; (8002c04 <createProblem+0x1d5c>)
 8002b58:	461c      	mov	r4, r3
 8002b5a:	4613      	mov	r3, r2
 8002b5c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002b5e:	6020      	str	r0, [r4, #0]
 8002b60:	6061      	str	r1, [r4, #4]
 8002b62:	60a2      	str	r2, [r4, #8]
 8002b64:	881b      	ldrh	r3, [r3, #0]
 8002b66:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8002b68:	687b      	ldr	r3, [r7, #4]
 8002b6a:	33cc      	adds	r3, #204	; 0xcc
 8002b6c:	4a38      	ldr	r2, [pc, #224]	; (8002c50 <createProblem+0x1da8>)
 8002b6e:	8811      	ldrh	r1, [r2, #0]
 8002b70:	7892      	ldrb	r2, [r2, #2]
 8002b72:	8019      	strh	r1, [r3, #0]
 8002b74:	709a      	strb	r2, [r3, #2]
			break;
 8002b76:	f017 bedd 	b.w	801a934 <createProblem+0x19a8c>
		case 129 :
			strcpy(p->name,"TAMAS DYNOMITE");
 8002b7a:	687b      	ldr	r3, [r7, #4]
 8002b7c:	337c      	adds	r3, #124	; 0x7c
 8002b7e:	4a35      	ldr	r2, [pc, #212]	; (8002c54 <createProblem+0x1dac>)
 8002b80:	461c      	mov	r4, r3
 8002b82:	4613      	mov	r3, r2
 8002b84:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002b86:	6020      	str	r0, [r4, #0]
 8002b88:	6061      	str	r1, [r4, #4]
 8002b8a:	60a2      	str	r2, [r4, #8]
 8002b8c:	881a      	ldrh	r2, [r3, #0]
 8002b8e:	789b      	ldrb	r3, [r3, #2]
 8002b90:	81a2      	strh	r2, [r4, #12]
 8002b92:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 6;
 8002b94:	687b      	ldr	r3, [r7, #4]
 8002b96:	2206      	movs	r2, #6
 8002b98:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,C,D,D");
 8002b9a:	687b      	ldr	r3, [r7, #4]
 8002b9c:	3340      	adds	r3, #64	; 0x40
 8002b9e:	4a2e      	ldr	r2, [pc, #184]	; (8002c58 <createProblem+0x1db0>)
 8002ba0:	461c      	mov	r4, r3
 8002ba2:	4613      	mov	r3, r2
 8002ba4:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002ba6:	6020      	str	r0, [r4, #0]
 8002ba8:	6061      	str	r1, [r4, #4]
 8002baa:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,5,10,13,15,18");
 8002bac:	687b      	ldr	r3, [r7, #4]
 8002bae:	3304      	adds	r3, #4
 8002bb0:	4a2a      	ldr	r2, [pc, #168]	; (8002c5c <createProblem+0x1db4>)
 8002bb2:	461c      	mov	r4, r3
 8002bb4:	4615      	mov	r5, r2
 8002bb6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002bb8:	6020      	str	r0, [r4, #0]
 8002bba:	6061      	str	r1, [r4, #4]
 8002bbc:	60a2      	str	r2, [r4, #8]
 8002bbe:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8002bc0:	687b      	ldr	r3, [r7, #4]
 8002bc2:	33d8      	adds	r3, #216	; 0xd8
 8002bc4:	4a18      	ldr	r2, [pc, #96]	; (8002c28 <createProblem+0x1d80>)
 8002bc6:	461c      	mov	r4, r3
 8002bc8:	4613      	mov	r3, r2
 8002bca:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002bcc:	6020      	str	r0, [r4, #0]
 8002bce:	6061      	str	r1, [r4, #4]
 8002bd0:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 8002bd2:	687b      	ldr	r3, [r7, #4]
 8002bd4:	33cc      	adds	r3, #204	; 0xcc
 8002bd6:	4a10      	ldr	r2, [pc, #64]	; (8002c18 <createProblem+0x1d70>)
 8002bd8:	8811      	ldrh	r1, [r2, #0]
 8002bda:	7892      	ldrb	r2, [r2, #2]
 8002bdc:	8019      	strh	r1, [r3, #0]
 8002bde:	709a      	strb	r2, [r3, #2]
			break;
 8002be0:	f017 bea8 	b.w	801a934 <createProblem+0x19a8c>
 8002be4:	08020dcc 	.word	0x08020dcc
 8002be8:	08020dd0 	.word	0x08020dd0
 8002bec:	08020de4 	.word	0x08020de4
 8002bf0:	08020dfc 	.word	0x08020dfc
 8002bf4:	08020830 	.word	0x08020830
 8002bf8:	08020e10 	.word	0x08020e10
 8002bfc:	08020e1c 	.word	0x08020e1c
 8002c00:	08020e2c 	.word	0x08020e2c
 8002c04:	08020a14 	.word	0x08020a14
 8002c08:	08020e40 	.word	0x08020e40
 8002c0c:	08020e4c 	.word	0x08020e4c
 8002c10:	08020e5c 	.word	0x08020e5c
 8002c14:	08020820 	.word	0x08020820
 8002c18:	080208f0 	.word	0x080208f0
 8002c1c:	08020e70 	.word	0x08020e70
 8002c20:	08020e74 	.word	0x08020e74
 8002c24:	08020e80 	.word	0x08020e80
 8002c28:	08020e90 	.word	0x08020e90
 8002c2c:	080209a4 	.word	0x080209a4
 8002c30:	08020e9c 	.word	0x08020e9c
 8002c34:	08020eb4 	.word	0x08020eb4
 8002c38:	08020ec4 	.word	0x08020ec4
 8002c3c:	08020ed8 	.word	0x08020ed8
 8002c40:	080208ac 	.word	0x080208ac
 8002c44:	08020ee8 	.word	0x08020ee8
 8002c48:	08020ef8 	.word	0x08020ef8
 8002c4c:	08020f08 	.word	0x08020f08
 8002c50:	08020874 	.word	0x08020874
 8002c54:	08020f1c 	.word	0x08020f1c
 8002c58:	08020f2c 	.word	0x08020f2c
 8002c5c:	08020f38 	.word	0x08020f38
		case 13 :
			strcpy(p->name,"E-Z CHEESE");
 8002c60:	687b      	ldr	r3, [r7, #4]
 8002c62:	337c      	adds	r3, #124	; 0x7c
 8002c64:	49be      	ldr	r1, [pc, #760]	; (8002f60 <createProblem+0x20b8>)
 8002c66:	461a      	mov	r2, r3
 8002c68:	460b      	mov	r3, r1
 8002c6a:	cb03      	ldmia	r3!, {r0, r1}
 8002c6c:	6010      	str	r0, [r2, #0]
 8002c6e:	6051      	str	r1, [r2, #4]
 8002c70:	8819      	ldrh	r1, [r3, #0]
 8002c72:	789b      	ldrb	r3, [r3, #2]
 8002c74:	8111      	strh	r1, [r2, #8]
 8002c76:	7293      	strb	r3, [r2, #10]
			p->moveSize = 8;
 8002c78:	687b      	ldr	r3, [r7, #4]
 8002c7a:	2208      	movs	r2, #8
 8002c7c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,H,J,G,H,D");
 8002c7e:	687b      	ldr	r3, [r7, #4]
 8002c80:	3340      	adds	r3, #64	; 0x40
 8002c82:	4ab8      	ldr	r2, [pc, #736]	; (8002f64 <createProblem+0x20bc>)
 8002c84:	461c      	mov	r4, r3
 8002c86:	4615      	mov	r5, r2
 8002c88:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002c8a:	6020      	str	r0, [r4, #0]
 8002c8c:	6061      	str	r1, [r4, #4]
 8002c8e:	60a2      	str	r2, [r4, #8]
 8002c90:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,10,12,13,15,16,18");
 8002c92:	687b      	ldr	r3, [r7, #4]
 8002c94:	3304      	adds	r3, #4
 8002c96:	4ab4      	ldr	r2, [pc, #720]	; (8002f68 <createProblem+0x20c0>)
 8002c98:	461d      	mov	r5, r3
 8002c9a:	4614      	mov	r4, r2
 8002c9c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002c9e:	6028      	str	r0, [r5, #0]
 8002ca0:	6069      	str	r1, [r5, #4]
 8002ca2:	60aa      	str	r2, [r5, #8]
 8002ca4:	60eb      	str	r3, [r5, #12]
 8002ca6:	6820      	ldr	r0, [r4, #0]
 8002ca8:	6128      	str	r0, [r5, #16]
 8002caa:	88a3      	ldrh	r3, [r4, #4]
 8002cac:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8002cae:	687b      	ldr	r3, [r7, #4]
 8002cb0:	33d8      	adds	r3, #216	; 0xd8
 8002cb2:	4aae      	ldr	r2, [pc, #696]	; (8002f6c <createProblem+0x20c4>)
 8002cb4:	461c      	mov	r4, r3
 8002cb6:	4615      	mov	r5, r2
 8002cb8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002cba:	6020      	str	r0, [r4, #0]
 8002cbc:	6061      	str	r1, [r4, #4]
 8002cbe:	60a2      	str	r2, [r4, #8]
 8002cc0:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8002cc2:	687b      	ldr	r3, [r7, #4]
 8002cc4:	33cc      	adds	r3, #204	; 0xcc
 8002cc6:	4aaa      	ldr	r2, [pc, #680]	; (8002f70 <createProblem+0x20c8>)
 8002cc8:	6810      	ldr	r0, [r2, #0]
 8002cca:	6018      	str	r0, [r3, #0]
			break;
 8002ccc:	f017 be32 	b.w	801a934 <createProblem+0x19a8c>
		case 130 :
			strcpy(p->name,"GRAYLING");
 8002cd0:	687b      	ldr	r3, [r7, #4]
 8002cd2:	337c      	adds	r3, #124	; 0x7c
 8002cd4:	49a7      	ldr	r1, [pc, #668]	; (8002f74 <createProblem+0x20cc>)
 8002cd6:	461a      	mov	r2, r3
 8002cd8:	460b      	mov	r3, r1
 8002cda:	cb03      	ldmia	r3!, {r0, r1}
 8002cdc:	6010      	str	r0, [r2, #0]
 8002cde:	6051      	str	r1, [r2, #4]
 8002ce0:	781b      	ldrb	r3, [r3, #0]
 8002ce2:	7213      	strb	r3, [r2, #8]
			p->moveSize = 8;
 8002ce4:	687b      	ldr	r3, [r7, #4]
 8002ce6:	2208      	movs	r2, #8
 8002ce8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,H,G,F,E,D,D");
 8002cea:	687b      	ldr	r3, [r7, #4]
 8002cec:	3340      	adds	r3, #64	; 0x40
 8002cee:	4aa2      	ldr	r2, [pc, #648]	; (8002f78 <createProblem+0x20d0>)
 8002cf0:	461c      	mov	r4, r3
 8002cf2:	4615      	mov	r5, r2
 8002cf4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002cf6:	6020      	str	r0, [r4, #0]
 8002cf8:	6061      	str	r1, [r4, #4]
 8002cfa:	60a2      	str	r2, [r4, #8]
 8002cfc:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,7,8,9,11,12,15,18");
 8002cfe:	687b      	ldr	r3, [r7, #4]
 8002d00:	3304      	adds	r3, #4
 8002d02:	4a9e      	ldr	r2, [pc, #632]	; (8002f7c <createProblem+0x20d4>)
 8002d04:	461d      	mov	r5, r3
 8002d06:	4614      	mov	r4, r2
 8002d08:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002d0a:	6028      	str	r0, [r5, #0]
 8002d0c:	6069      	str	r1, [r5, #4]
 8002d0e:	60aa      	str	r2, [r5, #8]
 8002d10:	60eb      	str	r3, [r5, #12]
 8002d12:	6820      	ldr	r0, [r4, #0]
 8002d14:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8002d16:	687b      	ldr	r3, [r7, #4]
 8002d18:	33d8      	adds	r3, #216	; 0xd8
 8002d1a:	4a94      	ldr	r2, [pc, #592]	; (8002f6c <createProblem+0x20c4>)
 8002d1c:	461c      	mov	r4, r3
 8002d1e:	4615      	mov	r5, r2
 8002d20:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002d22:	6020      	str	r0, [r4, #0]
 8002d24:	6061      	str	r1, [r4, #4]
 8002d26:	60a2      	str	r2, [r4, #8]
 8002d28:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8002d2a:	687b      	ldr	r3, [r7, #4]
 8002d2c:	33cc      	adds	r3, #204	; 0xcc
 8002d2e:	4a94      	ldr	r2, [pc, #592]	; (8002f80 <createProblem+0x20d8>)
 8002d30:	6810      	ldr	r0, [r2, #0]
 8002d32:	6018      	str	r0, [r3, #0]
			break;
 8002d34:	f017 bdfe 	b.w	801a934 <createProblem+0x19a8c>
		case 131 :
			strcpy(p->name,"HAMPUS NEDERLAG");
 8002d38:	687b      	ldr	r3, [r7, #4]
 8002d3a:	337c      	adds	r3, #124	; 0x7c
 8002d3c:	4a91      	ldr	r2, [pc, #580]	; (8002f84 <createProblem+0x20dc>)
 8002d3e:	461c      	mov	r4, r3
 8002d40:	4615      	mov	r5, r2
 8002d42:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002d44:	6020      	str	r0, [r4, #0]
 8002d46:	6061      	str	r1, [r4, #4]
 8002d48:	60a2      	str	r2, [r4, #8]
 8002d4a:	60e3      	str	r3, [r4, #12]
			p->moveSize = 7;
 8002d4c:	687b      	ldr	r3, [r7, #4]
 8002d4e:	2207      	movs	r2, #7
 8002d50:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,E,G,D,E,B,D");
 8002d52:	687b      	ldr	r3, [r7, #4]
 8002d54:	3340      	adds	r3, #64	; 0x40
 8002d56:	4a8c      	ldr	r2, [pc, #560]	; (8002f88 <createProblem+0x20e0>)
 8002d58:	461c      	mov	r4, r3
 8002d5a:	4613      	mov	r3, r2
 8002d5c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002d5e:	6020      	str	r0, [r4, #0]
 8002d60:	6061      	str	r1, [r4, #4]
 8002d62:	60a2      	str	r2, [r4, #8]
 8002d64:	881b      	ldrh	r3, [r3, #0]
 8002d66:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,11,12,15,18");
 8002d68:	687b      	ldr	r3, [r7, #4]
 8002d6a:	3304      	adds	r3, #4
 8002d6c:	4a87      	ldr	r2, [pc, #540]	; (8002f8c <createProblem+0x20e4>)
 8002d6e:	461d      	mov	r5, r3
 8002d70:	4614      	mov	r4, r2
 8002d72:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002d74:	6028      	str	r0, [r5, #0]
 8002d76:	6069      	str	r1, [r5, #4]
 8002d78:	60aa      	str	r2, [r5, #8]
 8002d7a:	60eb      	str	r3, [r5, #12]
 8002d7c:	8823      	ldrh	r3, [r4, #0]
 8002d7e:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8002d80:	687b      	ldr	r3, [r7, #4]
 8002d82:	33d8      	adds	r3, #216	; 0xd8
 8002d84:	4a82      	ldr	r2, [pc, #520]	; (8002f90 <createProblem+0x20e8>)
 8002d86:	461c      	mov	r4, r3
 8002d88:	4613      	mov	r3, r2
 8002d8a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002d8c:	6020      	str	r0, [r4, #0]
 8002d8e:	6061      	str	r1, [r4, #4]
 8002d90:	60a2      	str	r2, [r4, #8]
 8002d92:	881b      	ldrh	r3, [r3, #0]
 8002d94:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8002d96:	687b      	ldr	r3, [r7, #4]
 8002d98:	33cc      	adds	r3, #204	; 0xcc
 8002d9a:	4a75      	ldr	r2, [pc, #468]	; (8002f70 <createProblem+0x20c8>)
 8002d9c:	6810      	ldr	r0, [r2, #0]
 8002d9e:	6018      	str	r0, [r3, #0]
			break;
 8002da0:	f017 bdc8 	b.w	801a934 <createProblem+0x19a8c>
		case 132 :
			strcpy(p->name,"NITERÓI 01");
 8002da4:	687b      	ldr	r3, [r7, #4]
 8002da6:	337c      	adds	r3, #124	; 0x7c
 8002da8:	4a7a      	ldr	r2, [pc, #488]	; (8002f94 <createProblem+0x20ec>)
 8002daa:	461c      	mov	r4, r3
 8002dac:	4613      	mov	r3, r2
 8002dae:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002db0:	6020      	str	r0, [r4, #0]
 8002db2:	6061      	str	r1, [r4, #4]
 8002db4:	60a2      	str	r2, [r4, #8]
			p->moveSize = 9;
 8002db6:	687b      	ldr	r3, [r7, #4]
 8002db8:	2209      	movs	r2, #9
 8002dba:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,D,C,E,D,G,G,I");
 8002dbc:	687b      	ldr	r3, [r7, #4]
 8002dbe:	3340      	adds	r3, #64	; 0x40
 8002dc0:	4a75      	ldr	r2, [pc, #468]	; (8002f98 <createProblem+0x20f0>)
 8002dc2:	461d      	mov	r5, r3
 8002dc4:	4614      	mov	r4, r2
 8002dc6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002dc8:	6028      	str	r0, [r5, #0]
 8002dca:	6069      	str	r1, [r5, #4]
 8002dcc:	60aa      	str	r2, [r5, #8]
 8002dce:	60eb      	str	r3, [r5, #12]
 8002dd0:	8823      	ldrh	r3, [r4, #0]
 8002dd2:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,6,7,8,9,11,14,15,18");
 8002dd4:	687b      	ldr	r3, [r7, #4]
 8002dd6:	3304      	adds	r3, #4
 8002dd8:	4a70      	ldr	r2, [pc, #448]	; (8002f9c <createProblem+0x20f4>)
 8002dda:	461d      	mov	r5, r3
 8002ddc:	4614      	mov	r4, r2
 8002dde:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002de0:	6028      	str	r0, [r5, #0]
 8002de2:	6069      	str	r1, [r5, #4]
 8002de4:	60aa      	str	r2, [r5, #8]
 8002de6:	60eb      	str	r3, [r5, #12]
 8002de8:	6820      	ldr	r0, [r4, #0]
 8002dea:	6128      	str	r0, [r5, #16]
 8002dec:	88a3      	ldrh	r3, [r4, #4]
 8002dee:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8002df0:	687b      	ldr	r3, [r7, #4]
 8002df2:	33d8      	adds	r3, #216	; 0xd8
 8002df4:	4a6a      	ldr	r2, [pc, #424]	; (8002fa0 <createProblem+0x20f8>)
 8002df6:	461d      	mov	r5, r3
 8002df8:	4614      	mov	r4, r2
 8002dfa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002dfc:	6028      	str	r0, [r5, #0]
 8002dfe:	6069      	str	r1, [r5, #4]
 8002e00:	60aa      	str	r2, [r5, #8]
 8002e02:	60eb      	str	r3, [r5, #12]
 8002e04:	8823      	ldrh	r3, [r4, #0]
 8002e06:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6C+");
 8002e08:	687b      	ldr	r3, [r7, #4]
 8002e0a:	33cc      	adds	r3, #204	; 0xcc
 8002e0c:	4a5c      	ldr	r2, [pc, #368]	; (8002f80 <createProblem+0x20d8>)
 8002e0e:	6810      	ldr	r0, [r2, #0]
 8002e10:	6018      	str	r0, [r3, #0]
			break;
 8002e12:	f017 bd8f 	b.w	801a934 <createProblem+0x19a8c>
		case 133 :
			strcpy(p->name,"CEPPODE...");
 8002e16:	687b      	ldr	r3, [r7, #4]
 8002e18:	337c      	adds	r3, #124	; 0x7c
 8002e1a:	4962      	ldr	r1, [pc, #392]	; (8002fa4 <createProblem+0x20fc>)
 8002e1c:	461a      	mov	r2, r3
 8002e1e:	460b      	mov	r3, r1
 8002e20:	cb03      	ldmia	r3!, {r0, r1}
 8002e22:	6010      	str	r0, [r2, #0]
 8002e24:	6051      	str	r1, [r2, #4]
 8002e26:	8819      	ldrh	r1, [r3, #0]
 8002e28:	789b      	ldrb	r3, [r3, #2]
 8002e2a:	8111      	strh	r1, [r2, #8]
 8002e2c:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 8002e2e:	687b      	ldr	r3, [r7, #4]
 8002e30:	2207      	movs	r2, #7
 8002e32:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,H,H,E,H,D,D");
 8002e34:	687b      	ldr	r3, [r7, #4]
 8002e36:	3340      	adds	r3, #64	; 0x40
 8002e38:	4a5b      	ldr	r2, [pc, #364]	; (8002fa8 <createProblem+0x2100>)
 8002e3a:	461c      	mov	r4, r3
 8002e3c:	4613      	mov	r3, r2
 8002e3e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002e40:	6020      	str	r0, [r4, #0]
 8002e42:	6061      	str	r1, [r4, #4]
 8002e44:	60a2      	str	r2, [r4, #8]
 8002e46:	881b      	ldrh	r3, [r3, #0]
 8002e48:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,8,9,12,15,18");
 8002e4a:	687b      	ldr	r3, [r7, #4]
 8002e4c:	3304      	adds	r3, #4
 8002e4e:	4a57      	ldr	r2, [pc, #348]	; (8002fac <createProblem+0x2104>)
 8002e50:	461d      	mov	r5, r3
 8002e52:	4614      	mov	r4, r2
 8002e54:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002e56:	6028      	str	r0, [r5, #0]
 8002e58:	6069      	str	r1, [r5, #4]
 8002e5a:	60aa      	str	r2, [r5, #8]
 8002e5c:	60eb      	str	r3, [r5, #12]
 8002e5e:	7823      	ldrb	r3, [r4, #0]
 8002e60:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8002e62:	687b      	ldr	r3, [r7, #4]
 8002e64:	33d8      	adds	r3, #216	; 0xd8
 8002e66:	4a4a      	ldr	r2, [pc, #296]	; (8002f90 <createProblem+0x20e8>)
 8002e68:	461c      	mov	r4, r3
 8002e6a:	4613      	mov	r3, r2
 8002e6c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002e6e:	6020      	str	r0, [r4, #0]
 8002e70:	6061      	str	r1, [r4, #4]
 8002e72:	60a2      	str	r2, [r4, #8]
 8002e74:	881b      	ldrh	r3, [r3, #0]
 8002e76:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8002e78:	687b      	ldr	r3, [r7, #4]
 8002e7a:	33cc      	adds	r3, #204	; 0xcc
 8002e7c:	4a4c      	ldr	r2, [pc, #304]	; (8002fb0 <createProblem+0x2108>)
 8002e7e:	8811      	ldrh	r1, [r2, #0]
 8002e80:	7892      	ldrb	r2, [r2, #2]
 8002e82:	8019      	strh	r1, [r3, #0]
 8002e84:	709a      	strb	r2, [r3, #2]
			break;
 8002e86:	f017 bd55 	b.w	801a934 <createProblem+0x19a8c>
		case 134 :
			strcpy(p->name,"JAGUAR SHARK");
 8002e8a:	687b      	ldr	r3, [r7, #4]
 8002e8c:	337c      	adds	r3, #124	; 0x7c
 8002e8e:	4a49      	ldr	r2, [pc, #292]	; (8002fb4 <createProblem+0x210c>)
 8002e90:	461c      	mov	r4, r3
 8002e92:	4613      	mov	r3, r2
 8002e94:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002e96:	6020      	str	r0, [r4, #0]
 8002e98:	6061      	str	r1, [r4, #4]
 8002e9a:	60a2      	str	r2, [r4, #8]
 8002e9c:	781b      	ldrb	r3, [r3, #0]
 8002e9e:	7323      	strb	r3, [r4, #12]
			p->moveSize = 7;
 8002ea0:	687b      	ldr	r3, [r7, #4]
 8002ea2:	2207      	movs	r2, #7
 8002ea4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,C,D,E,I");
 8002ea6:	687b      	ldr	r3, [r7, #4]
 8002ea8:	3340      	adds	r3, #64	; 0x40
 8002eaa:	4a43      	ldr	r2, [pc, #268]	; (8002fb8 <createProblem+0x2110>)
 8002eac:	461c      	mov	r4, r3
 8002eae:	4613      	mov	r3, r2
 8002eb0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002eb2:	6020      	str	r0, [r4, #0]
 8002eb4:	6061      	str	r1, [r4, #4]
 8002eb6:	60a2      	str	r2, [r4, #8]
 8002eb8:	881b      	ldrh	r3, [r3, #0]
 8002eba:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,10,12,13,15,16,18");
 8002ebc:	687b      	ldr	r3, [r7, #4]
 8002ebe:	3304      	adds	r3, #4
 8002ec0:	4a3e      	ldr	r2, [pc, #248]	; (8002fbc <createProblem+0x2114>)
 8002ec2:	461d      	mov	r5, r3
 8002ec4:	4614      	mov	r4, r2
 8002ec6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8002ec8:	6028      	str	r0, [r5, #0]
 8002eca:	6069      	str	r1, [r5, #4]
 8002ecc:	60aa      	str	r2, [r5, #8]
 8002ece:	60eb      	str	r3, [r5, #12]
 8002ed0:	6820      	ldr	r0, [r4, #0]
 8002ed2:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8002ed4:	687b      	ldr	r3, [r7, #4]
 8002ed6:	33d8      	adds	r3, #216	; 0xd8
 8002ed8:	4a39      	ldr	r2, [pc, #228]	; (8002fc0 <createProblem+0x2118>)
 8002eda:	461c      	mov	r4, r3
 8002edc:	4613      	mov	r3, r2
 8002ede:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002ee0:	6020      	str	r0, [r4, #0]
 8002ee2:	6061      	str	r1, [r4, #4]
 8002ee4:	60a2      	str	r2, [r4, #8]
 8002ee6:	881b      	ldrh	r3, [r3, #0]
 8002ee8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 8002eea:	687b      	ldr	r3, [r7, #4]
 8002eec:	33cc      	adds	r3, #204	; 0xcc
 8002eee:	4a35      	ldr	r2, [pc, #212]	; (8002fc4 <createProblem+0x211c>)
 8002ef0:	6810      	ldr	r0, [r2, #0]
 8002ef2:	6018      	str	r0, [r3, #0]
			break;
 8002ef4:	f017 bd1e 	b.w	801a934 <createProblem+0x19a8c>
		case 135 :
			strcpy(p->name,"CRAYON PONYFISH");
 8002ef8:	687b      	ldr	r3, [r7, #4]
 8002efa:	337c      	adds	r3, #124	; 0x7c
 8002efc:	4a32      	ldr	r2, [pc, #200]	; (8002fc8 <createProblem+0x2120>)
 8002efe:	461c      	mov	r4, r3
 8002f00:	4615      	mov	r5, r2
 8002f02:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8002f04:	6020      	str	r0, [r4, #0]
 8002f06:	6061      	str	r1, [r4, #4]
 8002f08:	60a2      	str	r2, [r4, #8]
 8002f0a:	60e3      	str	r3, [r4, #12]
			p->moveSize = 5;
 8002f0c:	687b      	ldr	r3, [r7, #4]
 8002f0e:	2205      	movs	r2, #5
 8002f10:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,C,I,D");
 8002f12:	687b      	ldr	r3, [r7, #4]
 8002f14:	3340      	adds	r3, #64	; 0x40
 8002f16:	492d      	ldr	r1, [pc, #180]	; (8002fcc <createProblem+0x2124>)
 8002f18:	461a      	mov	r2, r3
 8002f1a:	460b      	mov	r3, r1
 8002f1c:	cb03      	ldmia	r3!, {r0, r1}
 8002f1e:	6010      	str	r0, [r2, #0]
 8002f20:	6051      	str	r1, [r2, #4]
 8002f22:	881b      	ldrh	r3, [r3, #0]
 8002f24:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,13,14,18");
 8002f26:	687b      	ldr	r3, [r7, #4]
 8002f28:	3304      	adds	r3, #4
 8002f2a:	4a29      	ldr	r2, [pc, #164]	; (8002fd0 <createProblem+0x2128>)
 8002f2c:	461c      	mov	r4, r3
 8002f2e:	4613      	mov	r3, r2
 8002f30:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002f32:	6020      	str	r0, [r4, #0]
 8002f34:	6061      	str	r1, [r4, #4]
 8002f36:	60a2      	str	r2, [r4, #8]
 8002f38:	881b      	ldrh	r3, [r3, #0]
 8002f3a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8002f3c:	687b      	ldr	r3, [r7, #4]
 8002f3e:	33d8      	adds	r3, #216	; 0xd8
 8002f40:	4924      	ldr	r1, [pc, #144]	; (8002fd4 <createProblem+0x212c>)
 8002f42:	461a      	mov	r2, r3
 8002f44:	460b      	mov	r3, r1
 8002f46:	cb03      	ldmia	r3!, {r0, r1}
 8002f48:	6010      	str	r0, [r2, #0]
 8002f4a:	6051      	str	r1, [r2, #4]
 8002f4c:	881b      	ldrh	r3, [r3, #0]
 8002f4e:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 8002f50:	687b      	ldr	r3, [r7, #4]
 8002f52:	33cc      	adds	r3, #204	; 0xcc
 8002f54:	4a1b      	ldr	r2, [pc, #108]	; (8002fc4 <createProblem+0x211c>)
 8002f56:	6810      	ldr	r0, [r2, #0]
 8002f58:	6018      	str	r0, [r3, #0]
			break;
 8002f5a:	f017 bceb 	b.w	801a934 <createProblem+0x19a8c>
 8002f5e:	bf00      	nop
 8002f60:	08020f48 	.word	0x08020f48
 8002f64:	08020f54 	.word	0x08020f54
 8002f68:	08020f64 	.word	0x08020f64
 8002f6c:	080209d8 	.word	0x080209d8
 8002f70:	08020830 	.word	0x08020830
 8002f74:	08020f7c 	.word	0x08020f7c
 8002f78:	08020f88 	.word	0x08020f88
 8002f7c:	08020f98 	.word	0x08020f98
 8002f80:	08020928 	.word	0x08020928
 8002f84:	08020fac 	.word	0x08020fac
 8002f88:	08020fbc 	.word	0x08020fbc
 8002f8c:	08020fcc 	.word	0x08020fcc
 8002f90:	08020820 	.word	0x08020820
 8002f94:	08020fe0 	.word	0x08020fe0
 8002f98:	08020fec 	.word	0x08020fec
 8002f9c:	08021000 	.word	0x08021000
 8002fa0:	08020dfc 	.word	0x08020dfc
 8002fa4:	08021018 	.word	0x08021018
 8002fa8:	08021024 	.word	0x08021024
 8002fac:	08021034 	.word	0x08021034
 8002fb0:	08020874 	.word	0x08020874
 8002fb4:	08021048 	.word	0x08021048
 8002fb8:	08021058 	.word	0x08021058
 8002fbc:	08021068 	.word	0x08021068
 8002fc0:	08020a14 	.word	0x08020a14
 8002fc4:	080209a4 	.word	0x080209a4
 8002fc8:	0802107c 	.word	0x0802107c
 8002fcc:	0802108c 	.word	0x0802108c
 8002fd0:	08021098 	.word	0x08021098
 8002fd4:	080208a0 	.word	0x080208a0
		case 136 :
			strcpy(p->name,"ROCK N LOCK");
 8002fd8:	687b      	ldr	r3, [r7, #4]
 8002fda:	337c      	adds	r3, #124	; 0x7c
 8002fdc:	4ab6      	ldr	r2, [pc, #728]	; (80032b8 <createProblem+0x2410>)
 8002fde:	461c      	mov	r4, r3
 8002fe0:	4613      	mov	r3, r2
 8002fe2:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002fe4:	6020      	str	r0, [r4, #0]
 8002fe6:	6061      	str	r1, [r4, #4]
 8002fe8:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 8002fea:	687b      	ldr	r3, [r7, #4]
 8002fec:	2206      	movs	r2, #6
 8002fee:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,I,G,I");
 8002ff0:	687b      	ldr	r3, [r7, #4]
 8002ff2:	3340      	adds	r3, #64	; 0x40
 8002ff4:	4ab1      	ldr	r2, [pc, #708]	; (80032bc <createProblem+0x2414>)
 8002ff6:	461c      	mov	r4, r3
 8002ff8:	4613      	mov	r3, r2
 8002ffa:	cb07      	ldmia	r3!, {r0, r1, r2}
 8002ffc:	6020      	str	r0, [r4, #0]
 8002ffe:	6061      	str	r1, [r4, #4]
 8003000:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,7,10,14,17,18");
 8003002:	687b      	ldr	r3, [r7, #4]
 8003004:	3304      	adds	r3, #4
 8003006:	4aae      	ldr	r2, [pc, #696]	; (80032c0 <createProblem+0x2418>)
 8003008:	461c      	mov	r4, r3
 800300a:	4615      	mov	r5, r2
 800300c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800300e:	6020      	str	r0, [r4, #0]
 8003010:	6061      	str	r1, [r4, #4]
 8003012:	60a2      	str	r2, [r4, #8]
 8003014:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8003016:	687b      	ldr	r3, [r7, #4]
 8003018:	33d8      	adds	r3, #216	; 0xd8
 800301a:	4aaa      	ldr	r2, [pc, #680]	; (80032c4 <createProblem+0x241c>)
 800301c:	461c      	mov	r4, r3
 800301e:	4613      	mov	r3, r2
 8003020:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003022:	6020      	str	r0, [r4, #0]
 8003024:	6061      	str	r1, [r4, #4]
 8003026:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 8003028:	687b      	ldr	r3, [r7, #4]
 800302a:	33cc      	adds	r3, #204	; 0xcc
 800302c:	4aa6      	ldr	r2, [pc, #664]	; (80032c8 <createProblem+0x2420>)
 800302e:	8811      	ldrh	r1, [r2, #0]
 8003030:	7892      	ldrb	r2, [r2, #2]
 8003032:	8019      	strh	r1, [r3, #0]
 8003034:	709a      	strb	r2, [r3, #2]
			break;
 8003036:	f017 bc7d 	b.w	801a934 <createProblem+0x19a8c>
		case 137 :
			strcpy(p->name,"IL MANFRUITO");
 800303a:	687b      	ldr	r3, [r7, #4]
 800303c:	337c      	adds	r3, #124	; 0x7c
 800303e:	4aa3      	ldr	r2, [pc, #652]	; (80032cc <createProblem+0x2424>)
 8003040:	461c      	mov	r4, r3
 8003042:	4613      	mov	r3, r2
 8003044:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003046:	6020      	str	r0, [r4, #0]
 8003048:	6061      	str	r1, [r4, #4]
 800304a:	60a2      	str	r2, [r4, #8]
 800304c:	781b      	ldrb	r3, [r3, #0]
 800304e:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 8003050:	687b      	ldr	r3, [r7, #4]
 8003052:	2206      	movs	r2, #6
 8003054:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"A,E,E,F,G,G");
 8003056:	687b      	ldr	r3, [r7, #4]
 8003058:	3340      	adds	r3, #64	; 0x40
 800305a:	4a9d      	ldr	r2, [pc, #628]	; (80032d0 <createProblem+0x2428>)
 800305c:	461c      	mov	r4, r3
 800305e:	4613      	mov	r3, r2
 8003060:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003062:	6020      	str	r0, [r4, #0]
 8003064:	6061      	str	r1, [r4, #4]
 8003066:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"18,6,9,13,4,17");
 8003068:	687b      	ldr	r3, [r7, #4]
 800306a:	3304      	adds	r3, #4
 800306c:	4a99      	ldr	r2, [pc, #612]	; (80032d4 <createProblem+0x242c>)
 800306e:	461c      	mov	r4, r3
 8003070:	4613      	mov	r3, r2
 8003072:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003074:	6020      	str	r0, [r4, #0]
 8003076:	6061      	str	r1, [r4, #4]
 8003078:	60a2      	str	r2, [r4, #8]
 800307a:	881a      	ldrh	r2, [r3, #0]
 800307c:	789b      	ldrb	r3, [r3, #2]
 800307e:	81a2      	strh	r2, [r4, #12]
 8003080:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "e,s,d,d,s,d");
 8003082:	687b      	ldr	r3, [r7, #4]
 8003084:	33d8      	adds	r3, #216	; 0xd8
 8003086:	4a94      	ldr	r2, [pc, #592]	; (80032d8 <createProblem+0x2430>)
 8003088:	461c      	mov	r4, r3
 800308a:	4613      	mov	r3, r2
 800308c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800308e:	6020      	str	r0, [r4, #0]
 8003090:	6061      	str	r1, [r4, #4]
 8003092:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7C");
 8003094:	687b      	ldr	r3, [r7, #4]
 8003096:	33cc      	adds	r3, #204	; 0xcc
 8003098:	4a90      	ldr	r2, [pc, #576]	; (80032dc <createProblem+0x2434>)
 800309a:	8811      	ldrh	r1, [r2, #0]
 800309c:	7892      	ldrb	r2, [r2, #2]
 800309e:	8019      	strh	r1, [r3, #0]
 80030a0:	709a      	strb	r2, [r3, #2]
			break;
 80030a2:	f017 bc47 	b.w	801a934 <createProblem+0x19a8c>
		case 138 :
			strcpy(p->name,"JAGUAR SHARK HARD");
 80030a6:	687b      	ldr	r3, [r7, #4]
 80030a8:	337c      	adds	r3, #124	; 0x7c
 80030aa:	4a8d      	ldr	r2, [pc, #564]	; (80032e0 <createProblem+0x2438>)
 80030ac:	461d      	mov	r5, r3
 80030ae:	4614      	mov	r4, r2
 80030b0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80030b2:	6028      	str	r0, [r5, #0]
 80030b4:	6069      	str	r1, [r5, #4]
 80030b6:	60aa      	str	r2, [r5, #8]
 80030b8:	60eb      	str	r3, [r5, #12]
 80030ba:	8823      	ldrh	r3, [r4, #0]
 80030bc:	822b      	strh	r3, [r5, #16]
			p->moveSize = 6;
 80030be:	687b      	ldr	r3, [r7, #4]
 80030c0:	2206      	movs	r2, #6
 80030c2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,C,E,I");
 80030c4:	687b      	ldr	r3, [r7, #4]
 80030c6:	3340      	adds	r3, #64	; 0x40
 80030c8:	4a86      	ldr	r2, [pc, #536]	; (80032e4 <createProblem+0x243c>)
 80030ca:	461c      	mov	r4, r3
 80030cc:	4613      	mov	r3, r2
 80030ce:	cb07      	ldmia	r3!, {r0, r1, r2}
 80030d0:	6020      	str	r0, [r4, #0]
 80030d2:	6061      	str	r1, [r4, #4]
 80030d4:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,10,12,13,16,18");
 80030d6:	687b      	ldr	r3, [r7, #4]
 80030d8:	3304      	adds	r3, #4
 80030da:	4a83      	ldr	r2, [pc, #524]	; (80032e8 <createProblem+0x2440>)
 80030dc:	461d      	mov	r5, r3
 80030de:	4614      	mov	r4, r2
 80030e0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80030e2:	6028      	str	r0, [r5, #0]
 80030e4:	6069      	str	r1, [r5, #4]
 80030e6:	60aa      	str	r2, [r5, #8]
 80030e8:	60eb      	str	r3, [r5, #12]
 80030ea:	7823      	ldrb	r3, [r4, #0]
 80030ec:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80030ee:	687b      	ldr	r3, [r7, #4]
 80030f0:	33d8      	adds	r3, #216	; 0xd8
 80030f2:	4a74      	ldr	r2, [pc, #464]	; (80032c4 <createProblem+0x241c>)
 80030f4:	461c      	mov	r4, r3
 80030f6:	4613      	mov	r3, r2
 80030f8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80030fa:	6020      	str	r0, [r4, #0]
 80030fc:	6061      	str	r1, [r4, #4]
 80030fe:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 8003100:	687b      	ldr	r3, [r7, #4]
 8003102:	33cc      	adds	r3, #204	; 0xcc
 8003104:	4a79      	ldr	r2, [pc, #484]	; (80032ec <createProblem+0x2444>)
 8003106:	6810      	ldr	r0, [r2, #0]
 8003108:	6018      	str	r0, [r3, #0]
			break;
 800310a:	f017 bc13 	b.w	801a934 <createProblem+0x19a8c>
		case 139 :
			strcpy(p->name,"BP");
 800310e:	687b      	ldr	r3, [r7, #4]
 8003110:	337c      	adds	r3, #124	; 0x7c
 8003112:	4a77      	ldr	r2, [pc, #476]	; (80032f0 <createProblem+0x2448>)
 8003114:	8811      	ldrh	r1, [r2, #0]
 8003116:	7892      	ldrb	r2, [r2, #2]
 8003118:	8019      	strh	r1, [r3, #0]
 800311a:	709a      	strb	r2, [r3, #2]
			p->moveSize = 9;
 800311c:	687b      	ldr	r3, [r7, #4]
 800311e:	2209      	movs	r2, #9
 8003120:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,E,E,I,H,J,H,I");
 8003122:	687b      	ldr	r3, [r7, #4]
 8003124:	3340      	adds	r3, #64	; 0x40
 8003126:	4a73      	ldr	r2, [pc, #460]	; (80032f4 <createProblem+0x244c>)
 8003128:	461d      	mov	r5, r3
 800312a:	4614      	mov	r4, r2
 800312c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800312e:	6028      	str	r0, [r5, #0]
 8003130:	6069      	str	r1, [r5, #4]
 8003132:	60aa      	str	r2, [r5, #8]
 8003134:	60eb      	str	r3, [r5, #12]
 8003136:	8823      	ldrh	r3, [r4, #0]
 8003138:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,6,9,8,10,12,13,16,18");
 800313a:	687b      	ldr	r3, [r7, #4]
 800313c:	3304      	adds	r3, #4
 800313e:	4a6e      	ldr	r2, [pc, #440]	; (80032f8 <createProblem+0x2450>)
 8003140:	461c      	mov	r4, r3
 8003142:	4615      	mov	r5, r2
 8003144:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003146:	6020      	str	r0, [r4, #0]
 8003148:	6061      	str	r1, [r4, #4]
 800314a:	60a2      	str	r2, [r4, #8]
 800314c:	60e3      	str	r3, [r4, #12]
 800314e:	6828      	ldr	r0, [r5, #0]
 8003150:	6120      	str	r0, [r4, #16]
 8003152:	88ab      	ldrh	r3, [r5, #4]
 8003154:	79aa      	ldrb	r2, [r5, #6]
 8003156:	82a3      	strh	r3, [r4, #20]
 8003158:	4613      	mov	r3, r2
 800315a:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 800315c:	687b      	ldr	r3, [r7, #4]
 800315e:	33d8      	adds	r3, #216	; 0xd8
 8003160:	4a66      	ldr	r2, [pc, #408]	; (80032fc <createProblem+0x2454>)
 8003162:	461d      	mov	r5, r3
 8003164:	4614      	mov	r4, r2
 8003166:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003168:	6028      	str	r0, [r5, #0]
 800316a:	6069      	str	r1, [r5, #4]
 800316c:	60aa      	str	r2, [r5, #8]
 800316e:	60eb      	str	r3, [r5, #12]
 8003170:	8823      	ldrh	r3, [r4, #0]
 8003172:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8003174:	687b      	ldr	r3, [r7, #4]
 8003176:	33cc      	adds	r3, #204	; 0xcc
 8003178:	4a61      	ldr	r2, [pc, #388]	; (8003300 <createProblem+0x2458>)
 800317a:	6810      	ldr	r0, [r2, #0]
 800317c:	6018      	str	r0, [r3, #0]
			break;
 800317e:	f017 bbd9 	b.w	801a934 <createProblem+0x19a8c>
		case 14 :
			strcpy(p->name,"SNAGGLEPUSS");
 8003182:	687b      	ldr	r3, [r7, #4]
 8003184:	337c      	adds	r3, #124	; 0x7c
 8003186:	4a5f      	ldr	r2, [pc, #380]	; (8003304 <createProblem+0x245c>)
 8003188:	461c      	mov	r4, r3
 800318a:	4613      	mov	r3, r2
 800318c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800318e:	6020      	str	r0, [r4, #0]
 8003190:	6061      	str	r1, [r4, #4]
 8003192:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 8003194:	687b      	ldr	r3, [r7, #4]
 8003196:	2206      	movs	r2, #6
 8003198:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,K,H,I,H,I");
 800319a:	687b      	ldr	r3, [r7, #4]
 800319c:	3340      	adds	r3, #64	; 0x40
 800319e:	4a5a      	ldr	r2, [pc, #360]	; (8003308 <createProblem+0x2460>)
 80031a0:	461c      	mov	r4, r3
 80031a2:	4613      	mov	r3, r2
 80031a4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80031a6:	6020      	str	r0, [r4, #0]
 80031a8:	6061      	str	r1, [r4, #4]
 80031aa:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,12,14,16,18");
 80031ac:	687b      	ldr	r3, [r7, #4]
 80031ae:	3304      	adds	r3, #4
 80031b0:	4a56      	ldr	r2, [pc, #344]	; (800330c <createProblem+0x2464>)
 80031b2:	461c      	mov	r4, r3
 80031b4:	4615      	mov	r5, r2
 80031b6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80031b8:	6020      	str	r0, [r4, #0]
 80031ba:	6061      	str	r1, [r4, #4]
 80031bc:	60a2      	str	r2, [r4, #8]
 80031be:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80031c0:	687b      	ldr	r3, [r7, #4]
 80031c2:	33d8      	adds	r3, #216	; 0xd8
 80031c4:	4a3f      	ldr	r2, [pc, #252]	; (80032c4 <createProblem+0x241c>)
 80031c6:	461c      	mov	r4, r3
 80031c8:	4613      	mov	r3, r2
 80031ca:	cb07      	ldmia	r3!, {r0, r1, r2}
 80031cc:	6020      	str	r0, [r4, #0]
 80031ce:	6061      	str	r1, [r4, #4]
 80031d0:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 80031d2:	687b      	ldr	r3, [r7, #4]
 80031d4:	33cc      	adds	r3, #204	; 0xcc
 80031d6:	4a4a      	ldr	r2, [pc, #296]	; (8003300 <createProblem+0x2458>)
 80031d8:	6810      	ldr	r0, [r2, #0]
 80031da:	6018      	str	r0, [r3, #0]
			break;
 80031dc:	f017 bbaa 	b.w	801a934 <createProblem+0x19a8c>
		case 140 :
			strcpy(p->name,"LAGO NERO");
 80031e0:	687b      	ldr	r3, [r7, #4]
 80031e2:	337c      	adds	r3, #124	; 0x7c
 80031e4:	494a      	ldr	r1, [pc, #296]	; (8003310 <createProblem+0x2468>)
 80031e6:	461a      	mov	r2, r3
 80031e8:	460b      	mov	r3, r1
 80031ea:	cb03      	ldmia	r3!, {r0, r1}
 80031ec:	6010      	str	r0, [r2, #0]
 80031ee:	6051      	str	r1, [r2, #4]
 80031f0:	881b      	ldrh	r3, [r3, #0]
 80031f2:	8113      	strh	r3, [r2, #8]
			p->moveSize = 8;
 80031f4:	687b      	ldr	r3, [r7, #4]
 80031f6:	2208      	movs	r2, #8
 80031f8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,F,C,D,E,D");
 80031fa:	687b      	ldr	r3, [r7, #4]
 80031fc:	3340      	adds	r3, #64	; 0x40
 80031fe:	4a45      	ldr	r2, [pc, #276]	; (8003314 <createProblem+0x246c>)
 8003200:	461c      	mov	r4, r3
 8003202:	4615      	mov	r5, r2
 8003204:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003206:	6020      	str	r0, [r4, #0]
 8003208:	6061      	str	r1, [r4, #4]
 800320a:	60a2      	str	r2, [r4, #8]
 800320c:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,8,11,13,15,16,18");
 800320e:	687b      	ldr	r3, [r7, #4]
 8003210:	3304      	adds	r3, #4
 8003212:	4a41      	ldr	r2, [pc, #260]	; (8003318 <createProblem+0x2470>)
 8003214:	461d      	mov	r5, r3
 8003216:	4614      	mov	r4, r2
 8003218:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800321a:	6028      	str	r0, [r5, #0]
 800321c:	6069      	str	r1, [r5, #4]
 800321e:	60aa      	str	r2, [r5, #8]
 8003220:	60eb      	str	r3, [r5, #12]
 8003222:	6820      	ldr	r0, [r4, #0]
 8003224:	6128      	str	r0, [r5, #16]
 8003226:	7923      	ldrb	r3, [r4, #4]
 8003228:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800322a:	687b      	ldr	r3, [r7, #4]
 800322c:	33d8      	adds	r3, #216	; 0xd8
 800322e:	4a3b      	ldr	r2, [pc, #236]	; (800331c <createProblem+0x2474>)
 8003230:	461c      	mov	r4, r3
 8003232:	4615      	mov	r5, r2
 8003234:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003236:	6020      	str	r0, [r4, #0]
 8003238:	6061      	str	r1, [r4, #4]
 800323a:	60a2      	str	r2, [r4, #8]
 800323c:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800323e:	687b      	ldr	r3, [r7, #4]
 8003240:	33cc      	adds	r3, #204	; 0xcc
 8003242:	4a2f      	ldr	r2, [pc, #188]	; (8003300 <createProblem+0x2458>)
 8003244:	6810      	ldr	r0, [r2, #0]
 8003246:	6018      	str	r0, [r3, #0]
			break;
 8003248:	f017 bb74 	b.w	801a934 <createProblem+0x19a8c>
		case 141 :
			strcpy(p->name,"ACG56");
 800324c:	687b      	ldr	r3, [r7, #4]
 800324e:	337c      	adds	r3, #124	; 0x7c
 8003250:	4a33      	ldr	r2, [pc, #204]	; (8003320 <createProblem+0x2478>)
 8003252:	6810      	ldr	r0, [r2, #0]
 8003254:	6018      	str	r0, [r3, #0]
 8003256:	8892      	ldrh	r2, [r2, #4]
 8003258:	809a      	strh	r2, [r3, #4]
			p->moveSize = 7;
 800325a:	687b      	ldr	r3, [r7, #4]
 800325c:	2207      	movs	r2, #7
 800325e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,H,E,C,B,A");
 8003260:	687b      	ldr	r3, [r7, #4]
 8003262:	3340      	adds	r3, #64	; 0x40
 8003264:	4a2f      	ldr	r2, [pc, #188]	; (8003324 <createProblem+0x247c>)
 8003266:	461c      	mov	r4, r3
 8003268:	4613      	mov	r3, r2
 800326a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800326c:	6020      	str	r0, [r4, #0]
 800326e:	6061      	str	r1, [r4, #4]
 8003270:	60a2      	str	r2, [r4, #8]
 8003272:	881b      	ldrh	r3, [r3, #0]
 8003274:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,10,13,16,16,10,18");
 8003276:	687b      	ldr	r3, [r7, #4]
 8003278:	3304      	adds	r3, #4
 800327a:	4a2b      	ldr	r2, [pc, #172]	; (8003328 <createProblem+0x2480>)
 800327c:	461d      	mov	r5, r3
 800327e:	4614      	mov	r4, r2
 8003280:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003282:	6028      	str	r0, [r5, #0]
 8003284:	6069      	str	r1, [r5, #4]
 8003286:	60aa      	str	r2, [r5, #8]
 8003288:	60eb      	str	r3, [r5, #12]
 800328a:	6820      	ldr	r0, [r4, #0]
 800328c:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800328e:	687b      	ldr	r3, [r7, #4]
 8003290:	33d8      	adds	r3, #216	; 0xd8
 8003292:	4a26      	ldr	r2, [pc, #152]	; (800332c <createProblem+0x2484>)
 8003294:	461c      	mov	r4, r3
 8003296:	4613      	mov	r3, r2
 8003298:	cb07      	ldmia	r3!, {r0, r1, r2}
 800329a:	6020      	str	r0, [r4, #0]
 800329c:	6061      	str	r1, [r4, #4]
 800329e:	60a2      	str	r2, [r4, #8]
 80032a0:	881b      	ldrh	r3, [r3, #0]
 80032a2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 80032a4:	687b      	ldr	r3, [r7, #4]
 80032a6:	33cc      	adds	r3, #204	; 0xcc
 80032a8:	4a21      	ldr	r2, [pc, #132]	; (8003330 <createProblem+0x2488>)
 80032aa:	8811      	ldrh	r1, [r2, #0]
 80032ac:	7892      	ldrb	r2, [r2, #2]
 80032ae:	8019      	strh	r1, [r3, #0]
 80032b0:	709a      	strb	r2, [r3, #2]
			break;
 80032b2:	f017 bb3f 	b.w	801a934 <createProblem+0x19a8c>
 80032b6:	bf00      	nop
 80032b8:	080210a8 	.word	0x080210a8
 80032bc:	080210b4 	.word	0x080210b4
 80032c0:	080210c0 	.word	0x080210c0
 80032c4:	0802091c 	.word	0x0802091c
 80032c8:	080208f0 	.word	0x080208f0
 80032cc:	080210d0 	.word	0x080210d0
 80032d0:	080210e0 	.word	0x080210e0
 80032d4:	080210ec 	.word	0x080210ec
 80032d8:	080210fc 	.word	0x080210fc
 80032dc:	08020b0c 	.word	0x08020b0c
 80032e0:	08021108 	.word	0x08021108
 80032e4:	0802111c 	.word	0x0802111c
 80032e8:	08021128 	.word	0x08021128
 80032ec:	08020dc8 	.word	0x08020dc8
 80032f0:	0802113c 	.word	0x0802113c
 80032f4:	08021140 	.word	0x08021140
 80032f8:	08021154 	.word	0x08021154
 80032fc:	08020dfc 	.word	0x08020dfc
 8003300:	08020830 	.word	0x08020830
 8003304:	0802116c 	.word	0x0802116c
 8003308:	08021178 	.word	0x08021178
 800330c:	08021184 	.word	0x08021184
 8003310:	08021194 	.word	0x08021194
 8003314:	080211a0 	.word	0x080211a0
 8003318:	080211b0 	.word	0x080211b0
 800331c:	08020a4c 	.word	0x08020a4c
 8003320:	080211c8 	.word	0x080211c8
 8003324:	080211d0 	.word	0x080211d0
 8003328:	080211e0 	.word	0x080211e0
 800332c:	08020a14 	.word	0x08020a14
 8003330:	08020874 	.word	0x08020874
		case 142 :
			strcpy(p->name,"ACG59");
 8003334:	687b      	ldr	r3, [r7, #4]
 8003336:	337c      	adds	r3, #124	; 0x7c
 8003338:	4aa6      	ldr	r2, [pc, #664]	; (80035d4 <createProblem+0x272c>)
 800333a:	6810      	ldr	r0, [r2, #0]
 800333c:	6018      	str	r0, [r3, #0]
 800333e:	8892      	ldrh	r2, [r2, #4]
 8003340:	809a      	strh	r2, [r3, #4]
			p->moveSize = 8;
 8003342:	687b      	ldr	r3, [r7, #4]
 8003344:	2208      	movs	r2, #8
 8003346:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,C,E,B,D,E,F,I");
 8003348:	687b      	ldr	r3, [r7, #4]
 800334a:	3340      	adds	r3, #64	; 0x40
 800334c:	4aa2      	ldr	r2, [pc, #648]	; (80035d8 <createProblem+0x2730>)
 800334e:	461c      	mov	r4, r3
 8003350:	4615      	mov	r5, r2
 8003352:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003354:	6020      	str	r0, [r4, #0]
 8003356:	6061      	str	r1, [r4, #4]
 8003358:	60a2      	str	r2, [r4, #8]
 800335a:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,8,10,15,16,11,18");
 800335c:	687b      	ldr	r3, [r7, #4]
 800335e:	3304      	adds	r3, #4
 8003360:	4a9e      	ldr	r2, [pc, #632]	; (80035dc <createProblem+0x2734>)
 8003362:	461d      	mov	r5, r3
 8003364:	4614      	mov	r4, r2
 8003366:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003368:	6028      	str	r0, [r5, #0]
 800336a:	6069      	str	r1, [r5, #4]
 800336c:	60aa      	str	r2, [r5, #8]
 800336e:	60eb      	str	r3, [r5, #12]
 8003370:	6820      	ldr	r0, [r4, #0]
 8003372:	6128      	str	r0, [r5, #16]
 8003374:	7923      	ldrb	r3, [r4, #4]
 8003376:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8003378:	687b      	ldr	r3, [r7, #4]
 800337a:	33d8      	adds	r3, #216	; 0xd8
 800337c:	4a98      	ldr	r2, [pc, #608]	; (80035e0 <createProblem+0x2738>)
 800337e:	461c      	mov	r4, r3
 8003380:	4615      	mov	r5, r2
 8003382:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003384:	6020      	str	r0, [r4, #0]
 8003386:	6061      	str	r1, [r4, #4]
 8003388:	60a2      	str	r2, [r4, #8]
 800338a:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 800338c:	687b      	ldr	r3, [r7, #4]
 800338e:	33cc      	adds	r3, #204	; 0xcc
 8003390:	4a94      	ldr	r2, [pc, #592]	; (80035e4 <createProblem+0x273c>)
 8003392:	8811      	ldrh	r1, [r2, #0]
 8003394:	7892      	ldrb	r2, [r2, #2]
 8003396:	8019      	strh	r1, [r3, #0]
 8003398:	709a      	strb	r2, [r3, #2]
			break;
 800339a:	f017 bacb 	b.w	801a934 <createProblem+0x19a8c>
		case 143 :
			strcpy(p->name,"DIAGONALE");
 800339e:	687b      	ldr	r3, [r7, #4]
 80033a0:	337c      	adds	r3, #124	; 0x7c
 80033a2:	4991      	ldr	r1, [pc, #580]	; (80035e8 <createProblem+0x2740>)
 80033a4:	461a      	mov	r2, r3
 80033a6:	460b      	mov	r3, r1
 80033a8:	cb03      	ldmia	r3!, {r0, r1}
 80033aa:	6010      	str	r0, [r2, #0]
 80033ac:	6051      	str	r1, [r2, #4]
 80033ae:	881b      	ldrh	r3, [r3, #0]
 80033b0:	8113      	strh	r3, [r2, #8]
			p->moveSize = 5;
 80033b2:	687b      	ldr	r3, [r7, #4]
 80033b4:	2205      	movs	r2, #5
 80033b6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,F,D,A");
 80033b8:	687b      	ldr	r3, [r7, #4]
 80033ba:	3340      	adds	r3, #64	; 0x40
 80033bc:	498b      	ldr	r1, [pc, #556]	; (80035ec <createProblem+0x2744>)
 80033be:	461a      	mov	r2, r3
 80033c0:	460b      	mov	r3, r1
 80033c2:	cb03      	ldmia	r3!, {r0, r1}
 80033c4:	6010      	str	r0, [r2, #0]
 80033c6:	6051      	str	r1, [r2, #4]
 80033c8:	881b      	ldrh	r3, [r3, #0]
 80033ca:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,8,11,15,18");
 80033cc:	687b      	ldr	r3, [r7, #4]
 80033ce:	3304      	adds	r3, #4
 80033d0:	4a87      	ldr	r2, [pc, #540]	; (80035f0 <createProblem+0x2748>)
 80033d2:	461c      	mov	r4, r3
 80033d4:	4613      	mov	r3, r2
 80033d6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80033d8:	6020      	str	r0, [r4, #0]
 80033da:	6061      	str	r1, [r4, #4]
 80033dc:	60a2      	str	r2, [r4, #8]
 80033de:	781b      	ldrb	r3, [r3, #0]
 80033e0:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 80033e2:	687b      	ldr	r3, [r7, #4]
 80033e4:	33d8      	adds	r3, #216	; 0xd8
 80033e6:	4983      	ldr	r1, [pc, #524]	; (80035f4 <createProblem+0x274c>)
 80033e8:	461a      	mov	r2, r3
 80033ea:	460b      	mov	r3, r1
 80033ec:	cb03      	ldmia	r3!, {r0, r1}
 80033ee:	6010      	str	r0, [r2, #0]
 80033f0:	6051      	str	r1, [r2, #4]
 80033f2:	881b      	ldrh	r3, [r3, #0]
 80033f4:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B");
 80033f6:	687b      	ldr	r3, [r7, #4]
 80033f8:	33cc      	adds	r3, #204	; 0xcc
 80033fa:	4a7f      	ldr	r2, [pc, #508]	; (80035f8 <createProblem+0x2750>)
 80033fc:	8811      	ldrh	r1, [r2, #0]
 80033fe:	7892      	ldrb	r2, [r2, #2]
 8003400:	8019      	strh	r1, [r3, #0]
 8003402:	709a      	strb	r2, [r3, #2]
			break;
 8003404:	f017 ba96 	b.w	801a934 <createProblem+0x19a8c>
		case 144 :
			strcpy(p->name,"HOLD THE SWING");
 8003408:	687b      	ldr	r3, [r7, #4]
 800340a:	337c      	adds	r3, #124	; 0x7c
 800340c:	4a7b      	ldr	r2, [pc, #492]	; (80035fc <createProblem+0x2754>)
 800340e:	461c      	mov	r4, r3
 8003410:	4613      	mov	r3, r2
 8003412:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003414:	6020      	str	r0, [r4, #0]
 8003416:	6061      	str	r1, [r4, #4]
 8003418:	60a2      	str	r2, [r4, #8]
 800341a:	881a      	ldrh	r2, [r3, #0]
 800341c:	789b      	ldrb	r3, [r3, #2]
 800341e:	81a2      	strh	r2, [r4, #12]
 8003420:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 7;
 8003422:	687b      	ldr	r3, [r7, #4]
 8003424:	2207      	movs	r2, #7
 8003426:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,G,E,I,E,I");
 8003428:	687b      	ldr	r3, [r7, #4]
 800342a:	3340      	adds	r3, #64	; 0x40
 800342c:	4a74      	ldr	r2, [pc, #464]	; (8003600 <createProblem+0x2758>)
 800342e:	461c      	mov	r4, r3
 8003430:	4613      	mov	r3, r2
 8003432:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003434:	6020      	str	r0, [r4, #0]
 8003436:	6061      	str	r1, [r4, #4]
 8003438:	60a2      	str	r2, [r4, #8]
 800343a:	881b      	ldrh	r3, [r3, #0]
 800343c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,12,14,14,18");
 800343e:	687b      	ldr	r3, [r7, #4]
 8003440:	3304      	adds	r3, #4
 8003442:	4a70      	ldr	r2, [pc, #448]	; (8003604 <createProblem+0x275c>)
 8003444:	461d      	mov	r5, r3
 8003446:	4614      	mov	r4, r2
 8003448:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800344a:	6028      	str	r0, [r5, #0]
 800344c:	6069      	str	r1, [r5, #4]
 800344e:	60aa      	str	r2, [r5, #8]
 8003450:	60eb      	str	r3, [r5, #12]
 8003452:	8823      	ldrh	r3, [r4, #0]
 8003454:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8003456:	687b      	ldr	r3, [r7, #4]
 8003458:	33d8      	adds	r3, #216	; 0xd8
 800345a:	4a6b      	ldr	r2, [pc, #428]	; (8003608 <createProblem+0x2760>)
 800345c:	461c      	mov	r4, r3
 800345e:	4613      	mov	r3, r2
 8003460:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003462:	6020      	str	r0, [r4, #0]
 8003464:	6061      	str	r1, [r4, #4]
 8003466:	60a2      	str	r2, [r4, #8]
 8003468:	881b      	ldrh	r3, [r3, #0]
 800346a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 800346c:	687b      	ldr	r3, [r7, #4]
 800346e:	33cc      	adds	r3, #204	; 0xcc
 8003470:	4a5c      	ldr	r2, [pc, #368]	; (80035e4 <createProblem+0x273c>)
 8003472:	8811      	ldrh	r1, [r2, #0]
 8003474:	7892      	ldrb	r2, [r2, #2]
 8003476:	8019      	strh	r1, [r3, #0]
 8003478:	709a      	strb	r2, [r3, #2]
			break;
 800347a:	f017 ba5b 	b.w	801a934 <createProblem+0x19a8c>
		case 145 :
			strcpy(p->name,"AF EASY ONE");
 800347e:	687b      	ldr	r3, [r7, #4]
 8003480:	337c      	adds	r3, #124	; 0x7c
 8003482:	4a62      	ldr	r2, [pc, #392]	; (800360c <createProblem+0x2764>)
 8003484:	461c      	mov	r4, r3
 8003486:	4613      	mov	r3, r2
 8003488:	cb07      	ldmia	r3!, {r0, r1, r2}
 800348a:	6020      	str	r0, [r4, #0]
 800348c:	6061      	str	r1, [r4, #4]
 800348e:	60a2      	str	r2, [r4, #8]
			p->moveSize = 8;
 8003490:	687b      	ldr	r3, [r7, #4]
 8003492:	2208      	movs	r2, #8
 8003494:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,J,K,H,J,G,K,I");
 8003496:	687b      	ldr	r3, [r7, #4]
 8003498:	3340      	adds	r3, #64	; 0x40
 800349a:	4a5d      	ldr	r2, [pc, #372]	; (8003610 <createProblem+0x2768>)
 800349c:	461c      	mov	r4, r3
 800349e:	4615      	mov	r5, r2
 80034a0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80034a2:	6020      	str	r0, [r4, #0]
 80034a4:	6061      	str	r1, [r4, #4]
 80034a6:	60a2      	str	r2, [r4, #8]
 80034a8:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,7,9,10,12,14,16,18");
 80034aa:	687b      	ldr	r3, [r7, #4]
 80034ac:	3304      	adds	r3, #4
 80034ae:	4a59      	ldr	r2, [pc, #356]	; (8003614 <createProblem+0x276c>)
 80034b0:	461d      	mov	r5, r3
 80034b2:	4614      	mov	r4, r2
 80034b4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80034b6:	6028      	str	r0, [r5, #0]
 80034b8:	6069      	str	r1, [r5, #4]
 80034ba:	60aa      	str	r2, [r5, #8]
 80034bc:	60eb      	str	r3, [r5, #12]
 80034be:	6820      	ldr	r0, [r4, #0]
 80034c0:	6128      	str	r0, [r5, #16]
 80034c2:	7923      	ldrb	r3, [r4, #4]
 80034c4:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 80034c6:	687b      	ldr	r3, [r7, #4]
 80034c8:	33d8      	adds	r3, #216	; 0xd8
 80034ca:	4a53      	ldr	r2, [pc, #332]	; (8003618 <createProblem+0x2770>)
 80034cc:	461c      	mov	r4, r3
 80034ce:	4615      	mov	r5, r2
 80034d0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80034d2:	6020      	str	r0, [r4, #0]
 80034d4:	6061      	str	r1, [r4, #4]
 80034d6:	60a2      	str	r2, [r4, #8]
 80034d8:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80034da:	687b      	ldr	r3, [r7, #4]
 80034dc:	33cc      	adds	r3, #204	; 0xcc
 80034de:	4a4f      	ldr	r2, [pc, #316]	; (800361c <createProblem+0x2774>)
 80034e0:	6810      	ldr	r0, [r2, #0]
 80034e2:	6018      	str	r0, [r3, #0]
			break;
 80034e4:	f017 ba26 	b.w	801a934 <createProblem+0x19a8c>
		case 146 :
			strcpy(p->name,"AF EASY FOUR");
 80034e8:	687b      	ldr	r3, [r7, #4]
 80034ea:	337c      	adds	r3, #124	; 0x7c
 80034ec:	4a4c      	ldr	r2, [pc, #304]	; (8003620 <createProblem+0x2778>)
 80034ee:	461c      	mov	r4, r3
 80034f0:	4613      	mov	r3, r2
 80034f2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80034f4:	6020      	str	r0, [r4, #0]
 80034f6:	6061      	str	r1, [r4, #4]
 80034f8:	60a2      	str	r2, [r4, #8]
 80034fa:	781b      	ldrb	r3, [r3, #0]
 80034fc:	7323      	strb	r3, [r4, #12]
			p->moveSize = 8;
 80034fe:	687b      	ldr	r3, [r7, #4]
 8003500:	2208      	movs	r2, #8
 8003502:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,H,F,I,G,I");
 8003504:	687b      	ldr	r3, [r7, #4]
 8003506:	3340      	adds	r3, #64	; 0x40
 8003508:	4a46      	ldr	r2, [pc, #280]	; (8003624 <createProblem+0x277c>)
 800350a:	461c      	mov	r4, r3
 800350c:	4615      	mov	r5, r2
 800350e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003510:	6020      	str	r0, [r4, #0]
 8003512:	6061      	str	r1, [r4, #4]
 8003514:	60a2      	str	r2, [r4, #8]
 8003516:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,8,10,13,14,15,18");
 8003518:	687b      	ldr	r3, [r7, #4]
 800351a:	3304      	adds	r3, #4
 800351c:	4a42      	ldr	r2, [pc, #264]	; (8003628 <createProblem+0x2780>)
 800351e:	461d      	mov	r5, r3
 8003520:	4614      	mov	r4, r2
 8003522:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003524:	6028      	str	r0, [r5, #0]
 8003526:	6069      	str	r1, [r5, #4]
 8003528:	60aa      	str	r2, [r5, #8]
 800352a:	60eb      	str	r3, [r5, #12]
 800352c:	6820      	ldr	r0, [r4, #0]
 800352e:	6128      	str	r0, [r5, #16]
 8003530:	7923      	ldrb	r3, [r4, #4]
 8003532:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8003534:	687b      	ldr	r3, [r7, #4]
 8003536:	33d8      	adds	r3, #216	; 0xd8
 8003538:	4a37      	ldr	r2, [pc, #220]	; (8003618 <createProblem+0x2770>)
 800353a:	461c      	mov	r4, r3
 800353c:	4615      	mov	r5, r2
 800353e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003540:	6020      	str	r0, [r4, #0]
 8003542:	6061      	str	r1, [r4, #4]
 8003544:	60a2      	str	r2, [r4, #8]
 8003546:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8003548:	687b      	ldr	r3, [r7, #4]
 800354a:	33cc      	adds	r3, #204	; 0xcc
 800354c:	4a33      	ldr	r2, [pc, #204]	; (800361c <createProblem+0x2774>)
 800354e:	6810      	ldr	r0, [r2, #0]
 8003550:	6018      	str	r0, [r3, #0]
			break;
 8003552:	f017 b9ef 	b.w	801a934 <createProblem+0x19a8c>
		case 147 :
			strcpy(p->name,"AF CHRISTMAS TUBERCULOSIS");
 8003556:	687b      	ldr	r3, [r7, #4]
 8003558:	337c      	adds	r3, #124	; 0x7c
 800355a:	4a34      	ldr	r2, [pc, #208]	; (800362c <createProblem+0x2784>)
 800355c:	461d      	mov	r5, r3
 800355e:	4614      	mov	r4, r2
 8003560:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003562:	6028      	str	r0, [r5, #0]
 8003564:	6069      	str	r1, [r5, #4]
 8003566:	60aa      	str	r2, [r5, #8]
 8003568:	60eb      	str	r3, [r5, #12]
 800356a:	cc03      	ldmia	r4!, {r0, r1}
 800356c:	6128      	str	r0, [r5, #16]
 800356e:	6169      	str	r1, [r5, #20]
 8003570:	8823      	ldrh	r3, [r4, #0]
 8003572:	832b      	strh	r3, [r5, #24]
			p->moveSize = 7;
 8003574:	687b      	ldr	r3, [r7, #4]
 8003576:	2207      	movs	r2, #7
 8003578:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,F,I,I,I");
 800357a:	687b      	ldr	r3, [r7, #4]
 800357c:	3340      	adds	r3, #64	; 0x40
 800357e:	4a2c      	ldr	r2, [pc, #176]	; (8003630 <createProblem+0x2788>)
 8003580:	461c      	mov	r4, r3
 8003582:	4613      	mov	r3, r2
 8003584:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003586:	6020      	str	r0, [r4, #0]
 8003588:	6061      	str	r1, [r4, #4]
 800358a:	60a2      	str	r2, [r4, #8]
 800358c:	881b      	ldrh	r3, [r3, #0]
 800358e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,7,10,11,14,15,18");
 8003590:	687b      	ldr	r3, [r7, #4]
 8003592:	3304      	adds	r3, #4
 8003594:	4a27      	ldr	r2, [pc, #156]	; (8003634 <createProblem+0x278c>)
 8003596:	461d      	mov	r5, r3
 8003598:	4614      	mov	r4, r2
 800359a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800359c:	6028      	str	r0, [r5, #0]
 800359e:	6069      	str	r1, [r5, #4]
 80035a0:	60aa      	str	r2, [r5, #8]
 80035a2:	60eb      	str	r3, [r5, #12]
 80035a4:	8823      	ldrh	r3, [r4, #0]
 80035a6:	78a2      	ldrb	r2, [r4, #2]
 80035a8:	822b      	strh	r3, [r5, #16]
 80035aa:	4613      	mov	r3, r2
 80035ac:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80035ae:	687b      	ldr	r3, [r7, #4]
 80035b0:	33d8      	adds	r3, #216	; 0xd8
 80035b2:	4a21      	ldr	r2, [pc, #132]	; (8003638 <createProblem+0x2790>)
 80035b4:	461c      	mov	r4, r3
 80035b6:	4613      	mov	r3, r2
 80035b8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80035ba:	6020      	str	r0, [r4, #0]
 80035bc:	6061      	str	r1, [r4, #4]
 80035be:	60a2      	str	r2, [r4, #8]
 80035c0:	881b      	ldrh	r3, [r3, #0]
 80035c2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 80035c4:	687b      	ldr	r3, [r7, #4]
 80035c6:	33cc      	adds	r3, #204	; 0xcc
 80035c8:	4a1c      	ldr	r2, [pc, #112]	; (800363c <createProblem+0x2794>)
 80035ca:	6810      	ldr	r0, [r2, #0]
 80035cc:	6018      	str	r0, [r3, #0]
			break;
 80035ce:	f017 b9b1 	b.w	801a934 <createProblem+0x19a8c>
 80035d2:	bf00      	nop
 80035d4:	080211f4 	.word	0x080211f4
 80035d8:	080211fc 	.word	0x080211fc
 80035dc:	0802120c 	.word	0x0802120c
 80035e0:	08020a4c 	.word	0x08020a4c
 80035e4:	080208f0 	.word	0x080208f0
 80035e8:	08021224 	.word	0x08021224
 80035ec:	08021230 	.word	0x08021230
 80035f0:	0802123c 	.word	0x0802123c
 80035f4:	080208a0 	.word	0x080208a0
 80035f8:	080208ac 	.word	0x080208ac
 80035fc:	0802124c 	.word	0x0802124c
 8003600:	0802125c 	.word	0x0802125c
 8003604:	0802126c 	.word	0x0802126c
 8003608:	08020820 	.word	0x08020820
 800360c:	08021280 	.word	0x08021280
 8003610:	0802128c 	.word	0x0802128c
 8003614:	0802129c 	.word	0x0802129c
 8003618:	080209d8 	.word	0x080209d8
 800361c:	08020830 	.word	0x08020830
 8003620:	080212b4 	.word	0x080212b4
 8003624:	080212c4 	.word	0x080212c4
 8003628:	080212d4 	.word	0x080212d4
 800362c:	080212ec 	.word	0x080212ec
 8003630:	08021308 	.word	0x08021308
 8003634:	08021318 	.word	0x08021318
 8003638:	08020a14 	.word	0x08020a14
 800363c:	08020928 	.word	0x08020928
		case 148 :
			strcpy(p->name,"THE REAL DEAL");
 8003640:	687b      	ldr	r3, [r7, #4]
 8003642:	337c      	adds	r3, #124	; 0x7c
 8003644:	4abf      	ldr	r2, [pc, #764]	; (8003944 <createProblem+0x2a9c>)
 8003646:	461c      	mov	r4, r3
 8003648:	4613      	mov	r3, r2
 800364a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800364c:	6020      	str	r0, [r4, #0]
 800364e:	6061      	str	r1, [r4, #4]
 8003650:	60a2      	str	r2, [r4, #8]
 8003652:	881b      	ldrh	r3, [r3, #0]
 8003654:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 8;
 8003656:	687b      	ldr	r3, [r7, #4]
 8003658:	2208      	movs	r2, #8
 800365a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,D,I,H,I,E,B,A");
 800365c:	687b      	ldr	r3, [r7, #4]
 800365e:	3340      	adds	r3, #64	; 0x40
 8003660:	4ab9      	ldr	r2, [pc, #740]	; (8003948 <createProblem+0x2aa0>)
 8003662:	461c      	mov	r4, r3
 8003664:	4615      	mov	r5, r2
 8003666:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003668:	6020      	str	r0, [r4, #0]
 800366a:	6061      	str	r1, [r4, #4]
 800366c:	60a2      	str	r2, [r4, #8]
 800366e:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,7,7,12,15,14,12,18");
 8003670:	687b      	ldr	r3, [r7, #4]
 8003672:	3304      	adds	r3, #4
 8003674:	4ab5      	ldr	r2, [pc, #724]	; (800394c <createProblem+0x2aa4>)
 8003676:	461d      	mov	r5, r3
 8003678:	4614      	mov	r4, r2
 800367a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800367c:	6028      	str	r0, [r5, #0]
 800367e:	6069      	str	r1, [r5, #4]
 8003680:	60aa      	str	r2, [r5, #8]
 8003682:	60eb      	str	r3, [r5, #12]
 8003684:	6820      	ldr	r0, [r4, #0]
 8003686:	6128      	str	r0, [r5, #16]
 8003688:	7923      	ldrb	r3, [r4, #4]
 800368a:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 800368c:	687b      	ldr	r3, [r7, #4]
 800368e:	33d8      	adds	r3, #216	; 0xd8
 8003690:	4aaf      	ldr	r2, [pc, #700]	; (8003950 <createProblem+0x2aa8>)
 8003692:	461c      	mov	r4, r3
 8003694:	4615      	mov	r5, r2
 8003696:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003698:	6020      	str	r0, [r4, #0]
 800369a:	6061      	str	r1, [r4, #4]
 800369c:	60a2      	str	r2, [r4, #8]
 800369e:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "8A");
 80036a0:	687b      	ldr	r3, [r7, #4]
 80036a2:	33cc      	adds	r3, #204	; 0xcc
 80036a4:	4aab      	ldr	r2, [pc, #684]	; (8003954 <createProblem+0x2aac>)
 80036a6:	8811      	ldrh	r1, [r2, #0]
 80036a8:	7892      	ldrb	r2, [r2, #2]
 80036aa:	8019      	strh	r1, [r3, #0]
 80036ac:	709a      	strb	r2, [r3, #2]
			break;
 80036ae:	f017 b941 	b.w	801a934 <createProblem+0x19a8c>
		case 149 :
			strcpy(p->name,"TIRARONCHIE");
 80036b2:	687b      	ldr	r3, [r7, #4]
 80036b4:	337c      	adds	r3, #124	; 0x7c
 80036b6:	4aa8      	ldr	r2, [pc, #672]	; (8003958 <createProblem+0x2ab0>)
 80036b8:	461c      	mov	r4, r3
 80036ba:	4613      	mov	r3, r2
 80036bc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80036be:	6020      	str	r0, [r4, #0]
 80036c0:	6061      	str	r1, [r4, #4]
 80036c2:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 80036c4:	687b      	ldr	r3, [r7, #4]
 80036c6:	2206      	movs	r2, #6
 80036c8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,I,H,H,D");
 80036ca:	687b      	ldr	r3, [r7, #4]
 80036cc:	3340      	adds	r3, #64	; 0x40
 80036ce:	4aa3      	ldr	r2, [pc, #652]	; (800395c <createProblem+0x2ab4>)
 80036d0:	461c      	mov	r4, r3
 80036d2:	4613      	mov	r3, r2
 80036d4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80036d6:	6020      	str	r0, [r4, #0]
 80036d8:	6061      	str	r1, [r4, #4]
 80036da:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,9,12,16,18");
 80036dc:	687b      	ldr	r3, [r7, #4]
 80036de:	3304      	adds	r3, #4
 80036e0:	4a9f      	ldr	r2, [pc, #636]	; (8003960 <createProblem+0x2ab8>)
 80036e2:	461c      	mov	r4, r3
 80036e4:	4613      	mov	r3, r2
 80036e6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80036e8:	6020      	str	r0, [r4, #0]
 80036ea:	6061      	str	r1, [r4, #4]
 80036ec:	60a2      	str	r2, [r4, #8]
 80036ee:	881a      	ldrh	r2, [r3, #0]
 80036f0:	789b      	ldrb	r3, [r3, #2]
 80036f2:	81a2      	strh	r2, [r4, #12]
 80036f4:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 80036f6:	687b      	ldr	r3, [r7, #4]
 80036f8:	33d8      	adds	r3, #216	; 0xd8
 80036fa:	4a9a      	ldr	r2, [pc, #616]	; (8003964 <createProblem+0x2abc>)
 80036fc:	461c      	mov	r4, r3
 80036fe:	4613      	mov	r3, r2
 8003700:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003702:	6020      	str	r0, [r4, #0]
 8003704:	6061      	str	r1, [r4, #4]
 8003706:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8003708:	687b      	ldr	r3, [r7, #4]
 800370a:	33cc      	adds	r3, #204	; 0xcc
 800370c:	4a96      	ldr	r2, [pc, #600]	; (8003968 <createProblem+0x2ac0>)
 800370e:	6810      	ldr	r0, [r2, #0]
 8003710:	6018      	str	r0, [r3, #0]
			break;
 8003712:	f017 b90f 	b.w	801a934 <createProblem+0x19a8c>
		case 15 :
			strcpy(p->name,"SHAKEN NOT STIRRED");
 8003716:	687b      	ldr	r3, [r7, #4]
 8003718:	337c      	adds	r3, #124	; 0x7c
 800371a:	4a94      	ldr	r2, [pc, #592]	; (800396c <createProblem+0x2ac4>)
 800371c:	461d      	mov	r5, r3
 800371e:	4614      	mov	r4, r2
 8003720:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003722:	6028      	str	r0, [r5, #0]
 8003724:	6069      	str	r1, [r5, #4]
 8003726:	60aa      	str	r2, [r5, #8]
 8003728:	60eb      	str	r3, [r5, #12]
 800372a:	8823      	ldrh	r3, [r4, #0]
 800372c:	78a2      	ldrb	r2, [r4, #2]
 800372e:	822b      	strh	r3, [r5, #16]
 8003730:	4613      	mov	r3, r2
 8003732:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 7;
 8003734:	687b      	ldr	r3, [r7, #4]
 8003736:	2207      	movs	r2, #7
 8003738:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,H,F,E,A,D,A");
 800373a:	687b      	ldr	r3, [r7, #4]
 800373c:	3340      	adds	r3, #64	; 0x40
 800373e:	4a8c      	ldr	r2, [pc, #560]	; (8003970 <createProblem+0x2ac8>)
 8003740:	461c      	mov	r4, r3
 8003742:	4613      	mov	r3, r2
 8003744:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003746:	6020      	str	r0, [r4, #0]
 8003748:	6061      	str	r1, [r4, #4]
 800374a:	60a2      	str	r2, [r4, #8]
 800374c:	881b      	ldrh	r3, [r3, #0]
 800374e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,11,12,14,15,18");
 8003750:	687b      	ldr	r3, [r7, #4]
 8003752:	3304      	adds	r3, #4
 8003754:	4a87      	ldr	r2, [pc, #540]	; (8003974 <createProblem+0x2acc>)
 8003756:	461d      	mov	r5, r3
 8003758:	4614      	mov	r4, r2
 800375a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800375c:	6028      	str	r0, [r5, #0]
 800375e:	6069      	str	r1, [r5, #4]
 8003760:	60aa      	str	r2, [r5, #8]
 8003762:	60eb      	str	r3, [r5, #12]
 8003764:	8823      	ldrh	r3, [r4, #0]
 8003766:	78a2      	ldrb	r2, [r4, #2]
 8003768:	822b      	strh	r3, [r5, #16]
 800376a:	4613      	mov	r3, r2
 800376c:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800376e:	687b      	ldr	r3, [r7, #4]
 8003770:	33d8      	adds	r3, #216	; 0xd8
 8003772:	4a81      	ldr	r2, [pc, #516]	; (8003978 <createProblem+0x2ad0>)
 8003774:	461c      	mov	r4, r3
 8003776:	4613      	mov	r3, r2
 8003778:	cb07      	ldmia	r3!, {r0, r1, r2}
 800377a:	6020      	str	r0, [r4, #0]
 800377c:	6061      	str	r1, [r4, #4]
 800377e:	60a2      	str	r2, [r4, #8]
 8003780:	881b      	ldrh	r3, [r3, #0]
 8003782:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8003784:	687b      	ldr	r3, [r7, #4]
 8003786:	33cc      	adds	r3, #204	; 0xcc
 8003788:	4a7c      	ldr	r2, [pc, #496]	; (800397c <createProblem+0x2ad4>)
 800378a:	6810      	ldr	r0, [r2, #0]
 800378c:	6018      	str	r0, [r3, #0]
			break;
 800378e:	f017 b8d1 	b.w	801a934 <createProblem+0x19a8c>
		case 150 :
			strcpy(p->name,"EASY PINCH");
 8003792:	687b      	ldr	r3, [r7, #4]
 8003794:	337c      	adds	r3, #124	; 0x7c
 8003796:	497a      	ldr	r1, [pc, #488]	; (8003980 <createProblem+0x2ad8>)
 8003798:	461a      	mov	r2, r3
 800379a:	460b      	mov	r3, r1
 800379c:	cb03      	ldmia	r3!, {r0, r1}
 800379e:	6010      	str	r0, [r2, #0]
 80037a0:	6051      	str	r1, [r2, #4]
 80037a2:	8819      	ldrh	r1, [r3, #0]
 80037a4:	789b      	ldrb	r3, [r3, #2]
 80037a6:	8111      	strh	r1, [r2, #8]
 80037a8:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 80037aa:	687b      	ldr	r3, [r7, #4]
 80037ac:	2206      	movs	r2, #6
 80037ae:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,D,G,F,E,I");
 80037b0:	687b      	ldr	r3, [r7, #4]
 80037b2:	3340      	adds	r3, #64	; 0x40
 80037b4:	4a73      	ldr	r2, [pc, #460]	; (8003984 <createProblem+0x2adc>)
 80037b6:	461c      	mov	r4, r3
 80037b8:	4613      	mov	r3, r2
 80037ba:	cb07      	ldmia	r3!, {r0, r1, r2}
 80037bc:	6020      	str	r0, [r4, #0]
 80037be:	6061      	str	r1, [r4, #4]
 80037c0:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,7,10,13,14,18");
 80037c2:	687b      	ldr	r3, [r7, #4]
 80037c4:	3304      	adds	r3, #4
 80037c6:	4a70      	ldr	r2, [pc, #448]	; (8003988 <createProblem+0x2ae0>)
 80037c8:	461c      	mov	r4, r3
 80037ca:	4615      	mov	r5, r2
 80037cc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80037ce:	6020      	str	r0, [r4, #0]
 80037d0:	6061      	str	r1, [r4, #4]
 80037d2:	60a2      	str	r2, [r4, #8]
 80037d4:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80037d6:	687b      	ldr	r3, [r7, #4]
 80037d8:	33d8      	adds	r3, #216	; 0xd8
 80037da:	4a6c      	ldr	r2, [pc, #432]	; (800398c <createProblem+0x2ae4>)
 80037dc:	461c      	mov	r4, r3
 80037de:	4613      	mov	r3, r2
 80037e0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80037e2:	6020      	str	r0, [r4, #0]
 80037e4:	6061      	str	r1, [r4, #4]
 80037e6:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 80037e8:	687b      	ldr	r3, [r7, #4]
 80037ea:	33cc      	adds	r3, #204	; 0xcc
 80037ec:	4a5e      	ldr	r2, [pc, #376]	; (8003968 <createProblem+0x2ac0>)
 80037ee:	6810      	ldr	r0, [r2, #0]
 80037f0:	6018      	str	r0, [r3, #0]
			break;
 80037f2:	f017 b89f 	b.w	801a934 <createProblem+0x19a8c>
		case 151 :
			strcpy(p->name,"HER COMES THE QUEEN");
 80037f6:	687b      	ldr	r3, [r7, #4]
 80037f8:	337c      	adds	r3, #124	; 0x7c
 80037fa:	4a65      	ldr	r2, [pc, #404]	; (8003990 <createProblem+0x2ae8>)
 80037fc:	461d      	mov	r5, r3
 80037fe:	4614      	mov	r4, r2
 8003800:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003802:	6028      	str	r0, [r5, #0]
 8003804:	6069      	str	r1, [r5, #4]
 8003806:	60aa      	str	r2, [r5, #8]
 8003808:	60eb      	str	r3, [r5, #12]
 800380a:	6820      	ldr	r0, [r4, #0]
 800380c:	6128      	str	r0, [r5, #16]
			p->moveSize = 5;
 800380e:	687b      	ldr	r3, [r7, #4]
 8003810:	2205      	movs	r2, #5
 8003812:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,F,A,D");
 8003814:	687b      	ldr	r3, [r7, #4]
 8003816:	3340      	adds	r3, #64	; 0x40
 8003818:	495e      	ldr	r1, [pc, #376]	; (8003994 <createProblem+0x2aec>)
 800381a:	461a      	mov	r2, r3
 800381c:	460b      	mov	r3, r1
 800381e:	cb03      	ldmia	r3!, {r0, r1}
 8003820:	6010      	str	r0, [r2, #0]
 8003822:	6051      	str	r1, [r2, #4]
 8003824:	881b      	ldrh	r3, [r3, #0]
 8003826:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,11,14,18");
 8003828:	687b      	ldr	r3, [r7, #4]
 800382a:	3304      	adds	r3, #4
 800382c:	4a5a      	ldr	r2, [pc, #360]	; (8003998 <createProblem+0x2af0>)
 800382e:	461c      	mov	r4, r3
 8003830:	4613      	mov	r3, r2
 8003832:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003834:	6020      	str	r0, [r4, #0]
 8003836:	6061      	str	r1, [r4, #4]
 8003838:	60a2      	str	r2, [r4, #8]
 800383a:	781b      	ldrb	r3, [r3, #0]
 800383c:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800383e:	687b      	ldr	r3, [r7, #4]
 8003840:	33d8      	adds	r3, #216	; 0xd8
 8003842:	4956      	ldr	r1, [pc, #344]	; (800399c <createProblem+0x2af4>)
 8003844:	461a      	mov	r2, r3
 8003846:	460b      	mov	r3, r1
 8003848:	cb03      	ldmia	r3!, {r0, r1}
 800384a:	6010      	str	r0, [r2, #0]
 800384c:	6051      	str	r1, [r2, #4]
 800384e:	881b      	ldrh	r3, [r3, #0]
 8003850:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C+");
 8003852:	687b      	ldr	r3, [r7, #4]
 8003854:	33cc      	adds	r3, #204	; 0xcc
 8003856:	4a52      	ldr	r2, [pc, #328]	; (80039a0 <createProblem+0x2af8>)
 8003858:	6810      	ldr	r0, [r2, #0]
 800385a:	6018      	str	r0, [r3, #0]
			break;
 800385c:	f017 b86a 	b.w	801a934 <createProblem+0x19a8c>
		case 152 :
			strcpy(p->name,"THE WING");
 8003860:	687b      	ldr	r3, [r7, #4]
 8003862:	337c      	adds	r3, #124	; 0x7c
 8003864:	494f      	ldr	r1, [pc, #316]	; (80039a4 <createProblem+0x2afc>)
 8003866:	461a      	mov	r2, r3
 8003868:	460b      	mov	r3, r1
 800386a:	cb03      	ldmia	r3!, {r0, r1}
 800386c:	6010      	str	r0, [r2, #0]
 800386e:	6051      	str	r1, [r2, #4]
 8003870:	781b      	ldrb	r3, [r3, #0]
 8003872:	7213      	strb	r3, [r2, #8]
			p->moveSize = 7;
 8003874:	687b      	ldr	r3, [r7, #4]
 8003876:	2207      	movs	r2, #7
 8003878:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,C,F,D,D,D");
 800387a:	687b      	ldr	r3, [r7, #4]
 800387c:	3340      	adds	r3, #64	; 0x40
 800387e:	4a4a      	ldr	r2, [pc, #296]	; (80039a8 <createProblem+0x2b00>)
 8003880:	461c      	mov	r4, r3
 8003882:	4613      	mov	r3, r2
 8003884:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003886:	6020      	str	r0, [r4, #0]
 8003888:	6061      	str	r1, [r4, #4]
 800388a:	60a2      	str	r2, [r4, #8]
 800388c:	881b      	ldrh	r3, [r3, #0]
 800388e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,11,11,15,18");
 8003890:	687b      	ldr	r3, [r7, #4]
 8003892:	3304      	adds	r3, #4
 8003894:	4a45      	ldr	r2, [pc, #276]	; (80039ac <createProblem+0x2b04>)
 8003896:	461d      	mov	r5, r3
 8003898:	4614      	mov	r4, r2
 800389a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800389c:	6028      	str	r0, [r5, #0]
 800389e:	6069      	str	r1, [r5, #4]
 80038a0:	60aa      	str	r2, [r5, #8]
 80038a2:	60eb      	str	r3, [r5, #12]
 80038a4:	8823      	ldrh	r3, [r4, #0]
 80038a6:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 80038a8:	687b      	ldr	r3, [r7, #4]
 80038aa:	33d8      	adds	r3, #216	; 0xd8
 80038ac:	4a40      	ldr	r2, [pc, #256]	; (80039b0 <createProblem+0x2b08>)
 80038ae:	461c      	mov	r4, r3
 80038b0:	4613      	mov	r3, r2
 80038b2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80038b4:	6020      	str	r0, [r4, #0]
 80038b6:	6061      	str	r1, [r4, #4]
 80038b8:	60a2      	str	r2, [r4, #8]
 80038ba:	881b      	ldrh	r3, [r3, #0]
 80038bc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 80038be:	687b      	ldr	r3, [r7, #4]
 80038c0:	33cc      	adds	r3, #204	; 0xcc
 80038c2:	4a3c      	ldr	r2, [pc, #240]	; (80039b4 <createProblem+0x2b0c>)
 80038c4:	8811      	ldrh	r1, [r2, #0]
 80038c6:	7892      	ldrb	r2, [r2, #2]
 80038c8:	8019      	strh	r1, [r3, #0]
 80038ca:	709a      	strb	r2, [r3, #2]
			break;
 80038cc:	f017 b832 	b.w	801a934 <createProblem+0x19a8c>
		case 153 :
			strcpy(p->name,"TB SAGA");
 80038d0:	687b      	ldr	r3, [r7, #4]
 80038d2:	337c      	adds	r3, #124	; 0x7c
 80038d4:	4938      	ldr	r1, [pc, #224]	; (80039b8 <createProblem+0x2b10>)
 80038d6:	461a      	mov	r2, r3
 80038d8:	460b      	mov	r3, r1
 80038da:	cb03      	ldmia	r3!, {r0, r1}
 80038dc:	6010      	str	r0, [r2, #0]
 80038de:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 80038e0:	687b      	ldr	r3, [r7, #4]
 80038e2:	2207      	movs	r2, #7
 80038e4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,J,G,H,D");
 80038e6:	687b      	ldr	r3, [r7, #4]
 80038e8:	3340      	adds	r3, #64	; 0x40
 80038ea:	4a34      	ldr	r2, [pc, #208]	; (80039bc <createProblem+0x2b14>)
 80038ec:	461c      	mov	r4, r3
 80038ee:	4613      	mov	r3, r2
 80038f0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80038f2:	6020      	str	r0, [r4, #0]
 80038f4:	6061      	str	r1, [r4, #4]
 80038f6:	60a2      	str	r2, [r4, #8]
 80038f8:	881b      	ldrh	r3, [r3, #0]
 80038fa:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,10,13,15,16,18");
 80038fc:	687b      	ldr	r3, [r7, #4]
 80038fe:	3304      	adds	r3, #4
 8003900:	4a2f      	ldr	r2, [pc, #188]	; (80039c0 <createProblem+0x2b18>)
 8003902:	461d      	mov	r5, r3
 8003904:	4614      	mov	r4, r2
 8003906:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003908:	6028      	str	r0, [r5, #0]
 800390a:	6069      	str	r1, [r5, #4]
 800390c:	60aa      	str	r2, [r5, #8]
 800390e:	60eb      	str	r3, [r5, #12]
 8003910:	8823      	ldrh	r3, [r4, #0]
 8003912:	78a2      	ldrb	r2, [r4, #2]
 8003914:	822b      	strh	r3, [r5, #16]
 8003916:	4613      	mov	r3, r2
 8003918:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800391a:	687b      	ldr	r3, [r7, #4]
 800391c:	33d8      	adds	r3, #216	; 0xd8
 800391e:	4a16      	ldr	r2, [pc, #88]	; (8003978 <createProblem+0x2ad0>)
 8003920:	461c      	mov	r4, r3
 8003922:	4613      	mov	r3, r2
 8003924:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003926:	6020      	str	r0, [r4, #0]
 8003928:	6061      	str	r1, [r4, #4]
 800392a:	60a2      	str	r2, [r4, #8]
 800392c:	881b      	ldrh	r3, [r3, #0]
 800392e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8003930:	687b      	ldr	r3, [r7, #4]
 8003932:	33cc      	adds	r3, #204	; 0xcc
 8003934:	4a1f      	ldr	r2, [pc, #124]	; (80039b4 <createProblem+0x2b0c>)
 8003936:	8811      	ldrh	r1, [r2, #0]
 8003938:	7892      	ldrb	r2, [r2, #2]
 800393a:	8019      	strh	r1, [r3, #0]
 800393c:	709a      	strb	r2, [r3, #2]
			break;
 800393e:	f016 bff9 	b.w	801a934 <createProblem+0x19a8c>
 8003942:	bf00      	nop
 8003944:	0802132c 	.word	0x0802132c
 8003948:	0802133c 	.word	0x0802133c
 800394c:	0802134c 	.word	0x0802134c
 8003950:	080209d8 	.word	0x080209d8
 8003954:	08020c94 	.word	0x08020c94
 8003958:	08021364 	.word	0x08021364
 800395c:	08021370 	.word	0x08021370
 8003960:	0802137c 	.word	0x0802137c
 8003964:	08020e90 	.word	0x08020e90
 8003968:	080209a4 	.word	0x080209a4
 800396c:	0802138c 	.word	0x0802138c
 8003970:	080213a0 	.word	0x080213a0
 8003974:	080213b0 	.word	0x080213b0
 8003978:	08020a14 	.word	0x08020a14
 800397c:	08020830 	.word	0x08020830
 8003980:	080213c4 	.word	0x080213c4
 8003984:	080213d0 	.word	0x080213d0
 8003988:	080213dc 	.word	0x080213dc
 800398c:	0802091c 	.word	0x0802091c
 8003990:	080213ec 	.word	0x080213ec
 8003994:	08021400 	.word	0x08021400
 8003998:	0802140c 	.word	0x0802140c
 800399c:	080208a0 	.word	0x080208a0
 80039a0:	08020928 	.word	0x08020928
 80039a4:	0802141c 	.word	0x0802141c
 80039a8:	08021428 	.word	0x08021428
 80039ac:	08021438 	.word	0x08021438
 80039b0:	08020820 	.word	0x08020820
 80039b4:	080208f0 	.word	0x080208f0
 80039b8:	0802144c 	.word	0x0802144c
 80039bc:	08021454 	.word	0x08021454
 80039c0:	08021464 	.word	0x08021464
		case 154 :
			strcpy(p->name,"OLDENBOAD4");
 80039c4:	687b      	ldr	r3, [r7, #4]
 80039c6:	337c      	adds	r3, #124	; 0x7c
 80039c8:	49a5      	ldr	r1, [pc, #660]	; (8003c60 <createProblem+0x2db8>)
 80039ca:	461a      	mov	r2, r3
 80039cc:	460b      	mov	r3, r1
 80039ce:	cb03      	ldmia	r3!, {r0, r1}
 80039d0:	6010      	str	r0, [r2, #0]
 80039d2:	6051      	str	r1, [r2, #4]
 80039d4:	8819      	ldrh	r1, [r3, #0]
 80039d6:	789b      	ldrb	r3, [r3, #2]
 80039d8:	8111      	strh	r1, [r2, #8]
 80039da:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 80039dc:	687b      	ldr	r3, [r7, #4]
 80039de:	2207      	movs	r2, #7
 80039e0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,F,C,E,H,D");
 80039e2:	687b      	ldr	r3, [r7, #4]
 80039e4:	3340      	adds	r3, #64	; 0x40
 80039e6:	4a9f      	ldr	r2, [pc, #636]	; (8003c64 <createProblem+0x2dbc>)
 80039e8:	461c      	mov	r4, r3
 80039ea:	4613      	mov	r3, r2
 80039ec:	cb07      	ldmia	r3!, {r0, r1, r2}
 80039ee:	6020      	str	r0, [r4, #0]
 80039f0:	6061      	str	r1, [r4, #4]
 80039f2:	60a2      	str	r2, [r4, #8]
 80039f4:	881b      	ldrh	r3, [r3, #0]
 80039f6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,11,13,16,10,18");
 80039f8:	687b      	ldr	r3, [r7, #4]
 80039fa:	3304      	adds	r3, #4
 80039fc:	4a9a      	ldr	r2, [pc, #616]	; (8003c68 <createProblem+0x2dc0>)
 80039fe:	461d      	mov	r5, r3
 8003a00:	4614      	mov	r4, r2
 8003a02:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003a04:	6028      	str	r0, [r5, #0]
 8003a06:	6069      	str	r1, [r5, #4]
 8003a08:	60aa      	str	r2, [r5, #8]
 8003a0a:	60eb      	str	r3, [r5, #12]
 8003a0c:	8823      	ldrh	r3, [r4, #0]
 8003a0e:	78a2      	ldrb	r2, [r4, #2]
 8003a10:	822b      	strh	r3, [r5, #16]
 8003a12:	4613      	mov	r3, r2
 8003a14:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8003a16:	687b      	ldr	r3, [r7, #4]
 8003a18:	33d8      	adds	r3, #216	; 0xd8
 8003a1a:	4a94      	ldr	r2, [pc, #592]	; (8003c6c <createProblem+0x2dc4>)
 8003a1c:	461c      	mov	r4, r3
 8003a1e:	4613      	mov	r3, r2
 8003a20:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003a22:	6020      	str	r0, [r4, #0]
 8003a24:	6061      	str	r1, [r4, #4]
 8003a26:	60a2      	str	r2, [r4, #8]
 8003a28:	881b      	ldrh	r3, [r3, #0]
 8003a2a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8003a2c:	687b      	ldr	r3, [r7, #4]
 8003a2e:	33cc      	adds	r3, #204	; 0xcc
 8003a30:	4a8f      	ldr	r2, [pc, #572]	; (8003c70 <createProblem+0x2dc8>)
 8003a32:	6810      	ldr	r0, [r2, #0]
 8003a34:	6018      	str	r0, [r3, #0]
			break;
 8003a36:	f016 bf7d 	b.w	801a934 <createProblem+0x19a8c>
		case 155 :
			strcpy(p->name,"ENDUROV6");
 8003a3a:	687b      	ldr	r3, [r7, #4]
 8003a3c:	337c      	adds	r3, #124	; 0x7c
 8003a3e:	498d      	ldr	r1, [pc, #564]	; (8003c74 <createProblem+0x2dcc>)
 8003a40:	461a      	mov	r2, r3
 8003a42:	460b      	mov	r3, r1
 8003a44:	cb03      	ldmia	r3!, {r0, r1}
 8003a46:	6010      	str	r0, [r2, #0]
 8003a48:	6051      	str	r1, [r2, #4]
 8003a4a:	781b      	ldrb	r3, [r3, #0]
 8003a4c:	7213      	strb	r3, [r2, #8]
			p->moveSize = 13;
 8003a4e:	687b      	ldr	r3, [r7, #4]
 8003a50:	220d      	movs	r2, #13
 8003a52:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,J,H,G,F,A,D,E,G,C,B,E,I");
 8003a54:	687b      	ldr	r3, [r7, #4]
 8003a56:	3340      	adds	r3, #64	; 0x40
 8003a58:	4a87      	ldr	r2, [pc, #540]	; (8003c78 <createProblem+0x2dd0>)
 8003a5a:	461d      	mov	r5, r3
 8003a5c:	4614      	mov	r4, r2
 8003a5e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003a60:	6028      	str	r0, [r5, #0]
 8003a62:	6069      	str	r1, [r5, #4]
 8003a64:	60aa      	str	r2, [r5, #8]
 8003a66:	60eb      	str	r3, [r5, #12]
 8003a68:	cc03      	ldmia	r4!, {r0, r1}
 8003a6a:	6128      	str	r0, [r5, #16]
 8003a6c:	6169      	str	r1, [r5, #20]
 8003a6e:	8823      	ldrh	r3, [r4, #0]
 8003a70:	832b      	strh	r3, [r5, #24]
			strcpy(p->moveNumbers,"5,7,8,9,11,14,15,16,17,5,10,8,18");
 8003a72:	687b      	ldr	r3, [r7, #4]
 8003a74:	3304      	adds	r3, #4
 8003a76:	4a81      	ldr	r2, [pc, #516]	; (8003c7c <createProblem+0x2dd4>)
 8003a78:	4614      	mov	r4, r2
 8003a7a:	469c      	mov	ip, r3
 8003a7c:	f104 0e20 	add.w	lr, r4, #32
 8003a80:	4665      	mov	r5, ip
 8003a82:	4626      	mov	r6, r4
 8003a84:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8003a86:	6028      	str	r0, [r5, #0]
 8003a88:	6069      	str	r1, [r5, #4]
 8003a8a:	60aa      	str	r2, [r5, #8]
 8003a8c:	60eb      	str	r3, [r5, #12]
 8003a8e:	3410      	adds	r4, #16
 8003a90:	f10c 0c10 	add.w	ip, ip, #16
 8003a94:	4574      	cmp	r4, lr
 8003a96:	d1f3      	bne.n	8003a80 <createProblem+0x2bd8>
 8003a98:	4663      	mov	r3, ip
 8003a9a:	4622      	mov	r2, r4
 8003a9c:	7812      	ldrb	r2, [r2, #0]
 8003a9e:	701a      	strb	r2, [r3, #0]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,d,d,d,d,d,e");
 8003aa0:	687b      	ldr	r3, [r7, #4]
 8003aa2:	33d8      	adds	r3, #216	; 0xd8
 8003aa4:	4a76      	ldr	r2, [pc, #472]	; (8003c80 <createProblem+0x2dd8>)
 8003aa6:	461d      	mov	r5, r3
 8003aa8:	4614      	mov	r4, r2
 8003aaa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003aac:	6028      	str	r0, [r5, #0]
 8003aae:	6069      	str	r1, [r5, #4]
 8003ab0:	60aa      	str	r2, [r5, #8]
 8003ab2:	60eb      	str	r3, [r5, #12]
 8003ab4:	cc03      	ldmia	r4!, {r0, r1}
 8003ab6:	6128      	str	r0, [r5, #16]
 8003ab8:	6169      	str	r1, [r5, #20]
 8003aba:	8823      	ldrh	r3, [r4, #0]
 8003abc:	832b      	strh	r3, [r5, #24]
			strcpy(p->grade, "7A");
 8003abe:	687b      	ldr	r3, [r7, #4]
 8003ac0:	33cc      	adds	r3, #204	; 0xcc
 8003ac2:	4a70      	ldr	r2, [pc, #448]	; (8003c84 <createProblem+0x2ddc>)
 8003ac4:	8811      	ldrh	r1, [r2, #0]
 8003ac6:	7892      	ldrb	r2, [r2, #2]
 8003ac8:	8019      	strh	r1, [r3, #0]
 8003aca:	709a      	strb	r2, [r3, #2]
			break;
 8003acc:	f016 bf32 	b.w	801a934 <createProblem+0x19a8c>
		case 156 :
			strcpy(p->name,"VARIATION 2 6B+");
 8003ad0:	687b      	ldr	r3, [r7, #4]
 8003ad2:	337c      	adds	r3, #124	; 0x7c
 8003ad4:	4a6c      	ldr	r2, [pc, #432]	; (8003c88 <createProblem+0x2de0>)
 8003ad6:	461c      	mov	r4, r3
 8003ad8:	4615      	mov	r5, r2
 8003ada:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003adc:	6020      	str	r0, [r4, #0]
 8003ade:	6061      	str	r1, [r4, #4]
 8003ae0:	60a2      	str	r2, [r4, #8]
 8003ae2:	60e3      	str	r3, [r4, #12]
			p->moveSize = 7;
 8003ae4:	687b      	ldr	r3, [r7, #4]
 8003ae6:	2207      	movs	r2, #7
 8003ae8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,E,B,C,A,A");
 8003aea:	687b      	ldr	r3, [r7, #4]
 8003aec:	3340      	adds	r3, #64	; 0x40
 8003aee:	4a67      	ldr	r2, [pc, #412]	; (8003c8c <createProblem+0x2de4>)
 8003af0:	461c      	mov	r4, r3
 8003af2:	4613      	mov	r3, r2
 8003af4:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003af6:	6020      	str	r0, [r4, #0]
 8003af8:	6061      	str	r1, [r4, #4]
 8003afa:	60a2      	str	r2, [r4, #8]
 8003afc:	881b      	ldrh	r3, [r3, #0]
 8003afe:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,6,8,10,13,14,18");
 8003b00:	687b      	ldr	r3, [r7, #4]
 8003b02:	3304      	adds	r3, #4
 8003b04:	4a62      	ldr	r2, [pc, #392]	; (8003c90 <createProblem+0x2de8>)
 8003b06:	461d      	mov	r5, r3
 8003b08:	4614      	mov	r4, r2
 8003b0a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003b0c:	6028      	str	r0, [r5, #0]
 8003b0e:	6069      	str	r1, [r5, #4]
 8003b10:	60aa      	str	r2, [r5, #8]
 8003b12:	60eb      	str	r3, [r5, #12]
 8003b14:	8823      	ldrh	r3, [r4, #0]
 8003b16:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8003b18:	687b      	ldr	r3, [r7, #4]
 8003b1a:	33d8      	adds	r3, #216	; 0xd8
 8003b1c:	4a53      	ldr	r2, [pc, #332]	; (8003c6c <createProblem+0x2dc4>)
 8003b1e:	461c      	mov	r4, r3
 8003b20:	4613      	mov	r3, r2
 8003b22:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003b24:	6020      	str	r0, [r4, #0]
 8003b26:	6061      	str	r1, [r4, #4]
 8003b28:	60a2      	str	r2, [r4, #8]
 8003b2a:	881b      	ldrh	r3, [r3, #0]
 8003b2c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8003b2e:	687b      	ldr	r3, [r7, #4]
 8003b30:	33cc      	adds	r3, #204	; 0xcc
 8003b32:	4a58      	ldr	r2, [pc, #352]	; (8003c94 <createProblem+0x2dec>)
 8003b34:	6810      	ldr	r0, [r2, #0]
 8003b36:	6018      	str	r0, [r3, #0]
			break;
 8003b38:	f016 befc 	b.w	801a934 <createProblem+0x19a8c>
		case 157 :
			strcpy(p->name,"GO BIG");
 8003b3c:	687b      	ldr	r3, [r7, #4]
 8003b3e:	337c      	adds	r3, #124	; 0x7c
 8003b40:	4a55      	ldr	r2, [pc, #340]	; (8003c98 <createProblem+0x2df0>)
 8003b42:	6810      	ldr	r0, [r2, #0]
 8003b44:	6018      	str	r0, [r3, #0]
 8003b46:	8891      	ldrh	r1, [r2, #4]
 8003b48:	7992      	ldrb	r2, [r2, #6]
 8003b4a:	8099      	strh	r1, [r3, #4]
 8003b4c:	719a      	strb	r2, [r3, #6]
			p->moveSize = 5;
 8003b4e:	687b      	ldr	r3, [r7, #4]
 8003b50:	2205      	movs	r2, #5
 8003b52:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,K,G,A,A");
 8003b54:	687b      	ldr	r3, [r7, #4]
 8003b56:	3340      	adds	r3, #64	; 0x40
 8003b58:	4950      	ldr	r1, [pc, #320]	; (8003c9c <createProblem+0x2df4>)
 8003b5a:	461a      	mov	r2, r3
 8003b5c:	460b      	mov	r3, r1
 8003b5e:	cb03      	ldmia	r3!, {r0, r1}
 8003b60:	6010      	str	r0, [r2, #0]
 8003b62:	6051      	str	r1, [r2, #4]
 8003b64:	881b      	ldrh	r3, [r3, #0]
 8003b66:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,9,14,14,18");
 8003b68:	687b      	ldr	r3, [r7, #4]
 8003b6a:	3304      	adds	r3, #4
 8003b6c:	4a4c      	ldr	r2, [pc, #304]	; (8003ca0 <createProblem+0x2df8>)
 8003b6e:	461c      	mov	r4, r3
 8003b70:	4613      	mov	r3, r2
 8003b72:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003b74:	6020      	str	r0, [r4, #0]
 8003b76:	6061      	str	r1, [r4, #4]
 8003b78:	60a2      	str	r2, [r4, #8]
 8003b7a:	781b      	ldrb	r3, [r3, #0]
 8003b7c:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8003b7e:	687b      	ldr	r3, [r7, #4]
 8003b80:	33d8      	adds	r3, #216	; 0xd8
 8003b82:	4948      	ldr	r1, [pc, #288]	; (8003ca4 <createProblem+0x2dfc>)
 8003b84:	461a      	mov	r2, r3
 8003b86:	460b      	mov	r3, r1
 8003b88:	cb03      	ldmia	r3!, {r0, r1}
 8003b8a:	6010      	str	r0, [r2, #0]
 8003b8c:	6051      	str	r1, [r2, #4]
 8003b8e:	881b      	ldrh	r3, [r3, #0]
 8003b90:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 8003b92:	687b      	ldr	r3, [r7, #4]
 8003b94:	33cc      	adds	r3, #204	; 0xcc
 8003b96:	4a44      	ldr	r2, [pc, #272]	; (8003ca8 <createProblem+0x2e00>)
 8003b98:	6810      	ldr	r0, [r2, #0]
 8003b9a:	6018      	str	r0, [r3, #0]
			break;
 8003b9c:	f016 beca 	b.w	801a934 <createProblem+0x19a8c>
		case 158 :
			strcpy(p->name,"OFD");
 8003ba0:	687b      	ldr	r3, [r7, #4]
 8003ba2:	337c      	adds	r3, #124	; 0x7c
 8003ba4:	4a41      	ldr	r2, [pc, #260]	; (8003cac <createProblem+0x2e04>)
 8003ba6:	6810      	ldr	r0, [r2, #0]
 8003ba8:	6018      	str	r0, [r3, #0]
			p->moveSize = 6;
 8003baa:	687b      	ldr	r3, [r7, #4]
 8003bac:	2206      	movs	r2, #6
 8003bae:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,E,E,I,I");
 8003bb0:	687b      	ldr	r3, [r7, #4]
 8003bb2:	3340      	adds	r3, #64	; 0x40
 8003bb4:	4a3e      	ldr	r2, [pc, #248]	; (8003cb0 <createProblem+0x2e08>)
 8003bb6:	461c      	mov	r4, r3
 8003bb8:	4613      	mov	r3, r2
 8003bba:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003bbc:	6020      	str	r0, [r4, #0]
 8003bbe:	6061      	str	r1, [r4, #4]
 8003bc0:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,9,12,14,18");
 8003bc2:	687b      	ldr	r3, [r7, #4]
 8003bc4:	3304      	adds	r3, #4
 8003bc6:	4a3b      	ldr	r2, [pc, #236]	; (8003cb4 <createProblem+0x2e0c>)
 8003bc8:	461c      	mov	r4, r3
 8003bca:	4613      	mov	r3, r2
 8003bcc:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003bce:	6020      	str	r0, [r4, #0]
 8003bd0:	6061      	str	r1, [r4, #4]
 8003bd2:	60a2      	str	r2, [r4, #8]
 8003bd4:	881a      	ldrh	r2, [r3, #0]
 8003bd6:	789b      	ldrb	r3, [r3, #2]
 8003bd8:	81a2      	strh	r2, [r4, #12]
 8003bda:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8003bdc:	687b      	ldr	r3, [r7, #4]
 8003bde:	33d8      	adds	r3, #216	; 0xd8
 8003be0:	4a35      	ldr	r2, [pc, #212]	; (8003cb8 <createProblem+0x2e10>)
 8003be2:	461c      	mov	r4, r3
 8003be4:	4613      	mov	r3, r2
 8003be6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003be8:	6020      	str	r0, [r4, #0]
 8003bea:	6061      	str	r1, [r4, #4]
 8003bec:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8003bee:	687b      	ldr	r3, [r7, #4]
 8003bf0:	33cc      	adds	r3, #204	; 0xcc
 8003bf2:	4a32      	ldr	r2, [pc, #200]	; (8003cbc <createProblem+0x2e14>)
 8003bf4:	6810      	ldr	r0, [r2, #0]
 8003bf6:	6018      	str	r0, [r3, #0]
			break;
 8003bf8:	f016 be9c 	b.w	801a934 <createProblem+0x19a8c>
		case 159 :
			strcpy(p->name,"YEEEEAHHH");
 8003bfc:	687b      	ldr	r3, [r7, #4]
 8003bfe:	337c      	adds	r3, #124	; 0x7c
 8003c00:	492f      	ldr	r1, [pc, #188]	; (8003cc0 <createProblem+0x2e18>)
 8003c02:	461a      	mov	r2, r3
 8003c04:	460b      	mov	r3, r1
 8003c06:	cb03      	ldmia	r3!, {r0, r1}
 8003c08:	6010      	str	r0, [r2, #0]
 8003c0a:	6051      	str	r1, [r2, #4]
 8003c0c:	881b      	ldrh	r3, [r3, #0]
 8003c0e:	8113      	strh	r3, [r2, #8]
			p->moveSize = 4;
 8003c10:	687b      	ldr	r3, [r7, #4]
 8003c12:	2204      	movs	r2, #4
 8003c14:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,I,G,I");
 8003c16:	687b      	ldr	r3, [r7, #4]
 8003c18:	3340      	adds	r3, #64	; 0x40
 8003c1a:	492a      	ldr	r1, [pc, #168]	; (8003cc4 <createProblem+0x2e1c>)
 8003c1c:	461a      	mov	r2, r3
 8003c1e:	460b      	mov	r3, r1
 8003c20:	cb03      	ldmia	r3!, {r0, r1}
 8003c22:	6010      	str	r0, [r2, #0]
 8003c24:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"4,10,14,18");
 8003c26:	687b      	ldr	r3, [r7, #4]
 8003c28:	3304      	adds	r3, #4
 8003c2a:	4927      	ldr	r1, [pc, #156]	; (8003cc8 <createProblem+0x2e20>)
 8003c2c:	461a      	mov	r2, r3
 8003c2e:	460b      	mov	r3, r1
 8003c30:	cb03      	ldmia	r3!, {r0, r1}
 8003c32:	6010      	str	r0, [r2, #0]
 8003c34:	6051      	str	r1, [r2, #4]
 8003c36:	8819      	ldrh	r1, [r3, #0]
 8003c38:	789b      	ldrb	r3, [r3, #2]
 8003c3a:	8111      	strh	r1, [r2, #8]
 8003c3c:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 8003c3e:	687b      	ldr	r3, [r7, #4]
 8003c40:	33d8      	adds	r3, #216	; 0xd8
 8003c42:	4922      	ldr	r1, [pc, #136]	; (8003ccc <createProblem+0x2e24>)
 8003c44:	461a      	mov	r2, r3
 8003c46:	460b      	mov	r3, r1
 8003c48:	cb03      	ldmia	r3!, {r0, r1}
 8003c4a:	6010      	str	r0, [r2, #0]
 8003c4c:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7A");
 8003c4e:	687b      	ldr	r3, [r7, #4]
 8003c50:	33cc      	adds	r3, #204	; 0xcc
 8003c52:	4a0c      	ldr	r2, [pc, #48]	; (8003c84 <createProblem+0x2ddc>)
 8003c54:	8811      	ldrh	r1, [r2, #0]
 8003c56:	7892      	ldrb	r2, [r2, #2]
 8003c58:	8019      	strh	r1, [r3, #0]
 8003c5a:	709a      	strb	r2, [r3, #2]
			break;
 8003c5c:	f016 be6a 	b.w	801a934 <createProblem+0x19a8c>
 8003c60:	08021478 	.word	0x08021478
 8003c64:	08021484 	.word	0x08021484
 8003c68:	08021494 	.word	0x08021494
 8003c6c:	08020820 	.word	0x08020820
 8003c70:	08020928 	.word	0x08020928
 8003c74:	080214a8 	.word	0x080214a8
 8003c78:	080214b4 	.word	0x080214b4
 8003c7c:	080214d0 	.word	0x080214d0
 8003c80:	080214f4 	.word	0x080214f4
 8003c84:	08020874 	.word	0x08020874
 8003c88:	08021510 	.word	0x08021510
 8003c8c:	08021520 	.word	0x08021520
 8003c90:	08021530 	.word	0x08021530
 8003c94:	08020830 	.word	0x08020830
 8003c98:	08021544 	.word	0x08021544
 8003c9c:	0802154c 	.word	0x0802154c
 8003ca0:	08021558 	.word	0x08021558
 8003ca4:	080208a0 	.word	0x080208a0
 8003ca8:	08020dc8 	.word	0x08020dc8
 8003cac:	08021568 	.word	0x08021568
 8003cb0:	0802156c 	.word	0x0802156c
 8003cb4:	08021578 	.word	0x08021578
 8003cb8:	0802091c 	.word	0x0802091c
 8003cbc:	080209a4 	.word	0x080209a4
 8003cc0:	08021588 	.word	0x08021588
 8003cc4:	08021594 	.word	0x08021594
 8003cc8:	0802159c 	.word	0x0802159c
 8003ccc:	080215a8 	.word	0x080215a8
		case 16 :
			strcpy(p->name,"SALAD DAYS");
 8003cd0:	687b      	ldr	r3, [r7, #4]
 8003cd2:	337c      	adds	r3, #124	; 0x7c
 8003cd4:	49bb      	ldr	r1, [pc, #748]	; (8003fc4 <createProblem+0x311c>)
 8003cd6:	461a      	mov	r2, r3
 8003cd8:	460b      	mov	r3, r1
 8003cda:	cb03      	ldmia	r3!, {r0, r1}
 8003cdc:	6010      	str	r0, [r2, #0]
 8003cde:	6051      	str	r1, [r2, #4]
 8003ce0:	8819      	ldrh	r1, [r3, #0]
 8003ce2:	789b      	ldrb	r3, [r3, #2]
 8003ce4:	8111      	strh	r1, [r2, #8]
 8003ce6:	7293      	strb	r3, [r2, #10]
			p->moveSize = 12;
 8003ce8:	687b      	ldr	r3, [r7, #4]
 8003cea:	220c      	movs	r2, #12
 8003cec:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,E,I,H,K,B,D,H,G,G,A");
 8003cee:	687b      	ldr	r3, [r7, #4]
 8003cf0:	3340      	adds	r3, #64	; 0x40
 8003cf2:	4ab5      	ldr	r2, [pc, #724]	; (8003fc8 <createProblem+0x3120>)
 8003cf4:	461d      	mov	r5, r3
 8003cf6:	4614      	mov	r4, r2
 8003cf8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003cfa:	6028      	str	r0, [r5, #0]
 8003cfc:	6069      	str	r1, [r5, #4]
 8003cfe:	60aa      	str	r2, [r5, #8]
 8003d00:	60eb      	str	r3, [r5, #12]
 8003d02:	cc03      	ldmia	r4!, {r0, r1}
 8003d04:	6128      	str	r0, [r5, #16]
 8003d06:	6169      	str	r1, [r5, #20]
			strcpy(p->moveNumbers,"5,6,8,10,12,14,15,15,16,17,17,18");
 8003d08:	687b      	ldr	r3, [r7, #4]
 8003d0a:	3304      	adds	r3, #4
 8003d0c:	4aaf      	ldr	r2, [pc, #700]	; (8003fcc <createProblem+0x3124>)
 8003d0e:	4614      	mov	r4, r2
 8003d10:	469c      	mov	ip, r3
 8003d12:	f104 0e20 	add.w	lr, r4, #32
 8003d16:	4665      	mov	r5, ip
 8003d18:	4626      	mov	r6, r4
 8003d1a:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8003d1c:	6028      	str	r0, [r5, #0]
 8003d1e:	6069      	str	r1, [r5, #4]
 8003d20:	60aa      	str	r2, [r5, #8]
 8003d22:	60eb      	str	r3, [r5, #12]
 8003d24:	3410      	adds	r4, #16
 8003d26:	f10c 0c10 	add.w	ip, ip, #16
 8003d2a:	4574      	cmp	r4, lr
 8003d2c:	d1f3      	bne.n	8003d16 <createProblem+0x2e6e>
 8003d2e:	4663      	mov	r3, ip
 8003d30:	4622      	mov	r2, r4
 8003d32:	7812      	ldrb	r2, [r2, #0]
 8003d34:	701a      	strb	r2, [r3, #0]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,d,d,e");
 8003d36:	687b      	ldr	r3, [r7, #4]
 8003d38:	33d8      	adds	r3, #216	; 0xd8
 8003d3a:	4aa5      	ldr	r2, [pc, #660]	; (8003fd0 <createProblem+0x3128>)
 8003d3c:	461d      	mov	r5, r3
 8003d3e:	4614      	mov	r4, r2
 8003d40:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003d42:	6028      	str	r0, [r5, #0]
 8003d44:	6069      	str	r1, [r5, #4]
 8003d46:	60aa      	str	r2, [r5, #8]
 8003d48:	60eb      	str	r3, [r5, #12]
 8003d4a:	cc03      	ldmia	r4!, {r0, r1}
 8003d4c:	6128      	str	r0, [r5, #16]
 8003d4e:	6169      	str	r1, [r5, #20]
			strcpy(p->grade, "7A");
 8003d50:	687b      	ldr	r3, [r7, #4]
 8003d52:	33cc      	adds	r3, #204	; 0xcc
 8003d54:	4a9f      	ldr	r2, [pc, #636]	; (8003fd4 <createProblem+0x312c>)
 8003d56:	8811      	ldrh	r1, [r2, #0]
 8003d58:	7892      	ldrb	r2, [r2, #2]
 8003d5a:	8019      	strh	r1, [r3, #0]
 8003d5c:	709a      	strb	r2, [r3, #2]
			break;
 8003d5e:	f016 bde9 	b.w	801a934 <createProblem+0x19a8c>
		case 160 :
			strcpy(p->name,"FRENCH INDUCED COMA");
 8003d62:	687b      	ldr	r3, [r7, #4]
 8003d64:	337c      	adds	r3, #124	; 0x7c
 8003d66:	4a9c      	ldr	r2, [pc, #624]	; (8003fd8 <createProblem+0x3130>)
 8003d68:	461d      	mov	r5, r3
 8003d6a:	4614      	mov	r4, r2
 8003d6c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003d6e:	6028      	str	r0, [r5, #0]
 8003d70:	6069      	str	r1, [r5, #4]
 8003d72:	60aa      	str	r2, [r5, #8]
 8003d74:	60eb      	str	r3, [r5, #12]
 8003d76:	6820      	ldr	r0, [r4, #0]
 8003d78:	6128      	str	r0, [r5, #16]
			p->moveSize = 5;
 8003d7a:	687b      	ldr	r3, [r7, #4]
 8003d7c:	2205      	movs	r2, #5
 8003d7e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,D,D,A");
 8003d80:	687b      	ldr	r3, [r7, #4]
 8003d82:	3340      	adds	r3, #64	; 0x40
 8003d84:	4995      	ldr	r1, [pc, #596]	; (8003fdc <createProblem+0x3134>)
 8003d86:	461a      	mov	r2, r3
 8003d88:	460b      	mov	r3, r1
 8003d8a:	cb03      	ldmia	r3!, {r0, r1}
 8003d8c:	6010      	str	r0, [r2, #0]
 8003d8e:	6051      	str	r1, [r2, #4]
 8003d90:	881b      	ldrh	r3, [r3, #0]
 8003d92:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,10,11,15,18");
 8003d94:	687b      	ldr	r3, [r7, #4]
 8003d96:	3304      	adds	r3, #4
 8003d98:	4a91      	ldr	r2, [pc, #580]	; (8003fe0 <createProblem+0x3138>)
 8003d9a:	461c      	mov	r4, r3
 8003d9c:	4613      	mov	r3, r2
 8003d9e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003da0:	6020      	str	r0, [r4, #0]
 8003da2:	6061      	str	r1, [r4, #4]
 8003da4:	60a2      	str	r2, [r4, #8]
 8003da6:	881b      	ldrh	r3, [r3, #0]
 8003da8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8003daa:	687b      	ldr	r3, [r7, #4]
 8003dac:	33d8      	adds	r3, #216	; 0xd8
 8003dae:	498d      	ldr	r1, [pc, #564]	; (8003fe4 <createProblem+0x313c>)
 8003db0:	461a      	mov	r2, r3
 8003db2:	460b      	mov	r3, r1
 8003db4:	cb03      	ldmia	r3!, {r0, r1}
 8003db6:	6010      	str	r0, [r2, #0]
 8003db8:	6051      	str	r1, [r2, #4]
 8003dba:	881b      	ldrh	r3, [r3, #0]
 8003dbc:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6B+");
 8003dbe:	687b      	ldr	r3, [r7, #4]
 8003dc0:	33cc      	adds	r3, #204	; 0xcc
 8003dc2:	4a89      	ldr	r2, [pc, #548]	; (8003fe8 <createProblem+0x3140>)
 8003dc4:	6810      	ldr	r0, [r2, #0]
 8003dc6:	6018      	str	r0, [r3, #0]
			break;
 8003dc8:	f016 bdb4 	b.w	801a934 <createProblem+0x19a8c>
		case 161 :
			strcpy(p->name,"HIEROGRIPIC");
 8003dcc:	687b      	ldr	r3, [r7, #4]
 8003dce:	337c      	adds	r3, #124	; 0x7c
 8003dd0:	4a86      	ldr	r2, [pc, #536]	; (8003fec <createProblem+0x3144>)
 8003dd2:	461c      	mov	r4, r3
 8003dd4:	4613      	mov	r3, r2
 8003dd6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003dd8:	6020      	str	r0, [r4, #0]
 8003dda:	6061      	str	r1, [r4, #4]
 8003ddc:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 8003dde:	687b      	ldr	r3, [r7, #4]
 8003de0:	2206      	movs	r2, #6
 8003de2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,F,C,A,A");
 8003de4:	687b      	ldr	r3, [r7, #4]
 8003de6:	3340      	adds	r3, #64	; 0x40
 8003de8:	4a81      	ldr	r2, [pc, #516]	; (8003ff0 <createProblem+0x3148>)
 8003dea:	461c      	mov	r4, r3
 8003dec:	4613      	mov	r3, r2
 8003dee:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003df0:	6020      	str	r0, [r4, #0]
 8003df2:	6061      	str	r1, [r4, #4]
 8003df4:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,11,13,14,18");
 8003df6:	687b      	ldr	r3, [r7, #4]
 8003df8:	3304      	adds	r3, #4
 8003dfa:	4a7e      	ldr	r2, [pc, #504]	; (8003ff4 <createProblem+0x314c>)
 8003dfc:	461c      	mov	r4, r3
 8003dfe:	4615      	mov	r5, r2
 8003e00:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003e02:	6020      	str	r0, [r4, #0]
 8003e04:	6061      	str	r1, [r4, #4]
 8003e06:	60a2      	str	r2, [r4, #8]
 8003e08:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8003e0a:	687b      	ldr	r3, [r7, #4]
 8003e0c:	33d8      	adds	r3, #216	; 0xd8
 8003e0e:	4a7a      	ldr	r2, [pc, #488]	; (8003ff8 <createProblem+0x3150>)
 8003e10:	461c      	mov	r4, r3
 8003e12:	4613      	mov	r3, r2
 8003e14:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003e16:	6020      	str	r0, [r4, #0]
 8003e18:	6061      	str	r1, [r4, #4]
 8003e1a:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8003e1c:	687b      	ldr	r3, [r7, #4]
 8003e1e:	33cc      	adds	r3, #204	; 0xcc
 8003e20:	4a6c      	ldr	r2, [pc, #432]	; (8003fd4 <createProblem+0x312c>)
 8003e22:	8811      	ldrh	r1, [r2, #0]
 8003e24:	7892      	ldrb	r2, [r2, #2]
 8003e26:	8019      	strh	r1, [r3, #0]
 8003e28:	709a      	strb	r2, [r3, #2]
			break;
 8003e2a:	f016 bd83 	b.w	801a934 <createProblem+0x19a8c>
		case 162 :
			strcpy(p->name,"WLF46");
 8003e2e:	687b      	ldr	r3, [r7, #4]
 8003e30:	337c      	adds	r3, #124	; 0x7c
 8003e32:	4a72      	ldr	r2, [pc, #456]	; (8003ffc <createProblem+0x3154>)
 8003e34:	6810      	ldr	r0, [r2, #0]
 8003e36:	6018      	str	r0, [r3, #0]
 8003e38:	8892      	ldrh	r2, [r2, #4]
 8003e3a:	809a      	strh	r2, [r3, #4]
			p->moveSize = 6;
 8003e3c:	687b      	ldr	r3, [r7, #4]
 8003e3e:	2206      	movs	r2, #6
 8003e40:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,I,H,G,I");
 8003e42:	687b      	ldr	r3, [r7, #4]
 8003e44:	3340      	adds	r3, #64	; 0x40
 8003e46:	4a6e      	ldr	r2, [pc, #440]	; (8004000 <createProblem+0x3158>)
 8003e48:	461c      	mov	r4, r3
 8003e4a:	4613      	mov	r3, r2
 8003e4c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003e4e:	6020      	str	r0, [r4, #0]
 8003e50:	6061      	str	r1, [r4, #4]
 8003e52:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,7,10,13,17,18");
 8003e54:	687b      	ldr	r3, [r7, #4]
 8003e56:	3304      	adds	r3, #4
 8003e58:	4a6a      	ldr	r2, [pc, #424]	; (8004004 <createProblem+0x315c>)
 8003e5a:	461c      	mov	r4, r3
 8003e5c:	4615      	mov	r5, r2
 8003e5e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003e60:	6020      	str	r0, [r4, #0]
 8003e62:	6061      	str	r1, [r4, #4]
 8003e64:	60a2      	str	r2, [r4, #8]
 8003e66:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8003e68:	687b      	ldr	r3, [r7, #4]
 8003e6a:	33d8      	adds	r3, #216	; 0xd8
 8003e6c:	4a66      	ldr	r2, [pc, #408]	; (8004008 <createProblem+0x3160>)
 8003e6e:	461c      	mov	r4, r3
 8003e70:	4613      	mov	r3, r2
 8003e72:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003e74:	6020      	str	r0, [r4, #0]
 8003e76:	6061      	str	r1, [r4, #4]
 8003e78:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8003e7a:	687b      	ldr	r3, [r7, #4]
 8003e7c:	33cc      	adds	r3, #204	; 0xcc
 8003e7e:	4a55      	ldr	r2, [pc, #340]	; (8003fd4 <createProblem+0x312c>)
 8003e80:	8811      	ldrh	r1, [r2, #0]
 8003e82:	7892      	ldrb	r2, [r2, #2]
 8003e84:	8019      	strh	r1, [r3, #0]
 8003e86:	709a      	strb	r2, [r3, #2]
			break;
 8003e88:	f016 bd54 	b.w	801a934 <createProblem+0x19a8c>
		case 163 :
			strcpy(p->name,"POCKETLAND");
 8003e8c:	687b      	ldr	r3, [r7, #4]
 8003e8e:	337c      	adds	r3, #124	; 0x7c
 8003e90:	495e      	ldr	r1, [pc, #376]	; (800400c <createProblem+0x3164>)
 8003e92:	461a      	mov	r2, r3
 8003e94:	460b      	mov	r3, r1
 8003e96:	cb03      	ldmia	r3!, {r0, r1}
 8003e98:	6010      	str	r0, [r2, #0]
 8003e9a:	6051      	str	r1, [r2, #4]
 8003e9c:	8819      	ldrh	r1, [r3, #0]
 8003e9e:	789b      	ldrb	r3, [r3, #2]
 8003ea0:	8111      	strh	r1, [r2, #8]
 8003ea2:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 8003ea4:	687b      	ldr	r3, [r7, #4]
 8003ea6:	2206      	movs	r2, #6
 8003ea8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,G,G,G,A");
 8003eaa:	687b      	ldr	r3, [r7, #4]
 8003eac:	3340      	adds	r3, #64	; 0x40
 8003eae:	4a58      	ldr	r2, [pc, #352]	; (8004010 <createProblem+0x3168>)
 8003eb0:	461c      	mov	r4, r3
 8003eb2:	4613      	mov	r3, r2
 8003eb4:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003eb6:	6020      	str	r0, [r4, #0]
 8003eb8:	6061      	str	r1, [r4, #4]
 8003eba:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,7,10,14,17,18");
 8003ebc:	687b      	ldr	r3, [r7, #4]
 8003ebe:	3304      	adds	r3, #4
 8003ec0:	4a54      	ldr	r2, [pc, #336]	; (8004014 <createProblem+0x316c>)
 8003ec2:	461c      	mov	r4, r3
 8003ec4:	4615      	mov	r5, r2
 8003ec6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003ec8:	6020      	str	r0, [r4, #0]
 8003eca:	6061      	str	r1, [r4, #4]
 8003ecc:	60a2      	str	r2, [r4, #8]
 8003ece:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8003ed0:	687b      	ldr	r3, [r7, #4]
 8003ed2:	33d8      	adds	r3, #216	; 0xd8
 8003ed4:	4a4c      	ldr	r2, [pc, #304]	; (8004008 <createProblem+0x3160>)
 8003ed6:	461c      	mov	r4, r3
 8003ed8:	4613      	mov	r3, r2
 8003eda:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003edc:	6020      	str	r0, [r4, #0]
 8003ede:	6061      	str	r1, [r4, #4]
 8003ee0:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B");
 8003ee2:	687b      	ldr	r3, [r7, #4]
 8003ee4:	33cc      	adds	r3, #204	; 0xcc
 8003ee6:	4a4c      	ldr	r2, [pc, #304]	; (8004018 <createProblem+0x3170>)
 8003ee8:	8811      	ldrh	r1, [r2, #0]
 8003eea:	7892      	ldrb	r2, [r2, #2]
 8003eec:	8019      	strh	r1, [r3, #0]
 8003eee:	709a      	strb	r2, [r3, #2]
			break;
 8003ef0:	f016 bd20 	b.w	801a934 <createProblem+0x19a8c>
		case 164 :
			strcpy(p->name,"POCKETLAND 2");
 8003ef4:	687b      	ldr	r3, [r7, #4]
 8003ef6:	337c      	adds	r3, #124	; 0x7c
 8003ef8:	4a48      	ldr	r2, [pc, #288]	; (800401c <createProblem+0x3174>)
 8003efa:	461c      	mov	r4, r3
 8003efc:	4613      	mov	r3, r2
 8003efe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003f00:	6020      	str	r0, [r4, #0]
 8003f02:	6061      	str	r1, [r4, #4]
 8003f04:	60a2      	str	r2, [r4, #8]
 8003f06:	781b      	ldrb	r3, [r3, #0]
 8003f08:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 8003f0a:	687b      	ldr	r3, [r7, #4]
 8003f0c:	2206      	movs	r2, #6
 8003f0e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,D,G,H,E,I");
 8003f10:	687b      	ldr	r3, [r7, #4]
 8003f12:	3340      	adds	r3, #64	; 0x40
 8003f14:	4a42      	ldr	r2, [pc, #264]	; (8004020 <createProblem+0x3178>)
 8003f16:	461c      	mov	r4, r3
 8003f18:	4613      	mov	r3, r2
 8003f1a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003f1c:	6020      	str	r0, [r4, #0]
 8003f1e:	6061      	str	r1, [r4, #4]
 8003f20:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,7,10,13,16,18");
 8003f22:	687b      	ldr	r3, [r7, #4]
 8003f24:	3304      	adds	r3, #4
 8003f26:	4a3f      	ldr	r2, [pc, #252]	; (8004024 <createProblem+0x317c>)
 8003f28:	461c      	mov	r4, r3
 8003f2a:	4615      	mov	r5, r2
 8003f2c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8003f2e:	6020      	str	r0, [r4, #0]
 8003f30:	6061      	str	r1, [r4, #4]
 8003f32:	60a2      	str	r2, [r4, #8]
 8003f34:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8003f36:	687b      	ldr	r3, [r7, #4]
 8003f38:	33d8      	adds	r3, #216	; 0xd8
 8003f3a:	4a33      	ldr	r2, [pc, #204]	; (8004008 <createProblem+0x3160>)
 8003f3c:	461c      	mov	r4, r3
 8003f3e:	4613      	mov	r3, r2
 8003f40:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003f42:	6020      	str	r0, [r4, #0]
 8003f44:	6061      	str	r1, [r4, #4]
 8003f46:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7C");
 8003f48:	687b      	ldr	r3, [r7, #4]
 8003f4a:	33cc      	adds	r3, #204	; 0xcc
 8003f4c:	4a36      	ldr	r2, [pc, #216]	; (8004028 <createProblem+0x3180>)
 8003f4e:	8811      	ldrh	r1, [r2, #0]
 8003f50:	7892      	ldrb	r2, [r2, #2]
 8003f52:	8019      	strh	r1, [r3, #0]
 8003f54:	709a      	strb	r2, [r3, #2]
			break;
 8003f56:	f016 bced 	b.w	801a934 <createProblem+0x19a8c>
		case 165 :
			strcpy(p->name,"FIRST WORLD PROBLEM");
 8003f5a:	687b      	ldr	r3, [r7, #4]
 8003f5c:	337c      	adds	r3, #124	; 0x7c
 8003f5e:	4a33      	ldr	r2, [pc, #204]	; (800402c <createProblem+0x3184>)
 8003f60:	461d      	mov	r5, r3
 8003f62:	4614      	mov	r4, r2
 8003f64:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8003f66:	6028      	str	r0, [r5, #0]
 8003f68:	6069      	str	r1, [r5, #4]
 8003f6a:	60aa      	str	r2, [r5, #8]
 8003f6c:	60eb      	str	r3, [r5, #12]
 8003f6e:	6820      	ldr	r0, [r4, #0]
 8003f70:	6128      	str	r0, [r5, #16]
			p->moveSize = 6;
 8003f72:	687b      	ldr	r3, [r7, #4]
 8003f74:	2206      	movs	r2, #6
 8003f76:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,E,C,E,C,D");
 8003f78:	687b      	ldr	r3, [r7, #4]
 8003f7a:	3340      	adds	r3, #64	; 0x40
 8003f7c:	4a2c      	ldr	r2, [pc, #176]	; (8004030 <createProblem+0x3188>)
 8003f7e:	461c      	mov	r4, r3
 8003f80:	4613      	mov	r3, r2
 8003f82:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003f84:	6020      	str	r0, [r4, #0]
 8003f86:	6061      	str	r1, [r4, #4]
 8003f88:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,9,8,14,13,18");
 8003f8a:	687b      	ldr	r3, [r7, #4]
 8003f8c:	3304      	adds	r3, #4
 8003f8e:	4a29      	ldr	r2, [pc, #164]	; (8004034 <createProblem+0x318c>)
 8003f90:	461c      	mov	r4, r3
 8003f92:	4613      	mov	r3, r2
 8003f94:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003f96:	6020      	str	r0, [r4, #0]
 8003f98:	6061      	str	r1, [r4, #4]
 8003f9a:	60a2      	str	r2, [r4, #8]
 8003f9c:	881a      	ldrh	r2, [r3, #0]
 8003f9e:	789b      	ldrb	r3, [r3, #2]
 8003fa0:	81a2      	strh	r2, [r4, #12]
 8003fa2:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8003fa4:	687b      	ldr	r3, [r7, #4]
 8003fa6:	33d8      	adds	r3, #216	; 0xd8
 8003fa8:	4a17      	ldr	r2, [pc, #92]	; (8004008 <createProblem+0x3160>)
 8003faa:	461c      	mov	r4, r3
 8003fac:	4613      	mov	r3, r2
 8003fae:	cb07      	ldmia	r3!, {r0, r1, r2}
 8003fb0:	6020      	str	r0, [r4, #0]
 8003fb2:	6061      	str	r1, [r4, #4]
 8003fb4:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 8003fb6:	687b      	ldr	r3, [r7, #4]
 8003fb8:	33cc      	adds	r3, #204	; 0xcc
 8003fba:	4a1f      	ldr	r2, [pc, #124]	; (8004038 <createProblem+0x3190>)
 8003fbc:	6810      	ldr	r0, [r2, #0]
 8003fbe:	6018      	str	r0, [r3, #0]
			break;
 8003fc0:	f016 bcb8 	b.w	801a934 <createProblem+0x19a8c>
 8003fc4:	080215b0 	.word	0x080215b0
 8003fc8:	080215bc 	.word	0x080215bc
 8003fcc:	080215d4 	.word	0x080215d4
 8003fd0:	080215f8 	.word	0x080215f8
 8003fd4:	08020874 	.word	0x08020874
 8003fd8:	08021610 	.word	0x08021610
 8003fdc:	08021624 	.word	0x08021624
 8003fe0:	08021630 	.word	0x08021630
 8003fe4:	080208a0 	.word	0x080208a0
 8003fe8:	08020830 	.word	0x08020830
 8003fec:	08021640 	.word	0x08021640
 8003ff0:	0802164c 	.word	0x0802164c
 8003ff4:	08021658 	.word	0x08021658
 8003ff8:	08020e90 	.word	0x08020e90
 8003ffc:	08021668 	.word	0x08021668
 8004000:	08021670 	.word	0x08021670
 8004004:	0802167c 	.word	0x0802167c
 8004008:	0802091c 	.word	0x0802091c
 800400c:	0802168c 	.word	0x0802168c
 8004010:	08021698 	.word	0x08021698
 8004014:	080210c0 	.word	0x080210c0
 8004018:	080208ac 	.word	0x080208ac
 800401c:	080216a4 	.word	0x080216a4
 8004020:	080216b4 	.word	0x080216b4
 8004024:	080216c0 	.word	0x080216c0
 8004028:	08020b0c 	.word	0x08020b0c
 800402c:	080216d0 	.word	0x080216d0
 8004030:	080216e4 	.word	0x080216e4
 8004034:	080216f0 	.word	0x080216f0
 8004038:	08020928 	.word	0x08020928
		case 166 :
			strcpy(p->name,"GAMBERO");
 800403c:	687b      	ldr	r3, [r7, #4]
 800403e:	337c      	adds	r3, #124	; 0x7c
 8004040:	49b8      	ldr	r1, [pc, #736]	; (8004324 <createProblem+0x347c>)
 8004042:	461a      	mov	r2, r3
 8004044:	460b      	mov	r3, r1
 8004046:	cb03      	ldmia	r3!, {r0, r1}
 8004048:	6010      	str	r0, [r2, #0]
 800404a:	6051      	str	r1, [r2, #4]
			p->moveSize = 6;
 800404c:	687b      	ldr	r3, [r7, #4]
 800404e:	2206      	movs	r2, #6
 8004050:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,E,B,E,A");
 8004052:	687b      	ldr	r3, [r7, #4]
 8004054:	3340      	adds	r3, #64	; 0x40
 8004056:	4ab4      	ldr	r2, [pc, #720]	; (8004328 <createProblem+0x3480>)
 8004058:	461c      	mov	r4, r3
 800405a:	4613      	mov	r3, r2
 800405c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800405e:	6020      	str	r0, [r4, #0]
 8004060:	6061      	str	r1, [r4, #4]
 8004062:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,9,12,14,18");
 8004064:	687b      	ldr	r3, [r7, #4]
 8004066:	3304      	adds	r3, #4
 8004068:	4ab0      	ldr	r2, [pc, #704]	; (800432c <createProblem+0x3484>)
 800406a:	461c      	mov	r4, r3
 800406c:	4613      	mov	r3, r2
 800406e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004070:	6020      	str	r0, [r4, #0]
 8004072:	6061      	str	r1, [r4, #4]
 8004074:	60a2      	str	r2, [r4, #8]
 8004076:	881a      	ldrh	r2, [r3, #0]
 8004078:	789b      	ldrb	r3, [r3, #2]
 800407a:	81a2      	strh	r2, [r4, #12]
 800407c:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800407e:	687b      	ldr	r3, [r7, #4]
 8004080:	33d8      	adds	r3, #216	; 0xd8
 8004082:	4aab      	ldr	r2, [pc, #684]	; (8004330 <createProblem+0x3488>)
 8004084:	461c      	mov	r4, r3
 8004086:	4613      	mov	r3, r2
 8004088:	cb07      	ldmia	r3!, {r0, r1, r2}
 800408a:	6020      	str	r0, [r4, #0]
 800408c:	6061      	str	r1, [r4, #4]
 800408e:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7C");
 8004090:	687b      	ldr	r3, [r7, #4]
 8004092:	33cc      	adds	r3, #204	; 0xcc
 8004094:	4aa7      	ldr	r2, [pc, #668]	; (8004334 <createProblem+0x348c>)
 8004096:	8811      	ldrh	r1, [r2, #0]
 8004098:	7892      	ldrb	r2, [r2, #2]
 800409a:	8019      	strh	r1, [r3, #0]
 800409c:	709a      	strb	r2, [r3, #2]
			break;
 800409e:	f016 bc49 	b.w	801a934 <createProblem+0x19a8c>
		case 167 :
			strcpy(p->name,"ROCKET");
 80040a2:	687b      	ldr	r3, [r7, #4]
 80040a4:	337c      	adds	r3, #124	; 0x7c
 80040a6:	4aa4      	ldr	r2, [pc, #656]	; (8004338 <createProblem+0x3490>)
 80040a8:	6810      	ldr	r0, [r2, #0]
 80040aa:	6018      	str	r0, [r3, #0]
 80040ac:	8891      	ldrh	r1, [r2, #4]
 80040ae:	7992      	ldrb	r2, [r2, #6]
 80040b0:	8099      	strh	r1, [r3, #4]
 80040b2:	719a      	strb	r2, [r3, #6]
			p->moveSize = 5;
 80040b4:	687b      	ldr	r3, [r7, #4]
 80040b6:	2205      	movs	r2, #5
 80040b8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,E,H,F,I");
 80040ba:	687b      	ldr	r3, [r7, #4]
 80040bc:	3340      	adds	r3, #64	; 0x40
 80040be:	499f      	ldr	r1, [pc, #636]	; (800433c <createProblem+0x3494>)
 80040c0:	461a      	mov	r2, r3
 80040c2:	460b      	mov	r3, r1
 80040c4:	cb03      	ldmia	r3!, {r0, r1}
 80040c6:	6010      	str	r0, [r2, #0]
 80040c8:	6051      	str	r1, [r2, #4]
 80040ca:	881b      	ldrh	r3, [r3, #0]
 80040cc:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,6,10,13,18");
 80040ce:	687b      	ldr	r3, [r7, #4]
 80040d0:	3304      	adds	r3, #4
 80040d2:	4a9b      	ldr	r2, [pc, #620]	; (8004340 <createProblem+0x3498>)
 80040d4:	461c      	mov	r4, r3
 80040d6:	4613      	mov	r3, r2
 80040d8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80040da:	6020      	str	r0, [r4, #0]
 80040dc:	6061      	str	r1, [r4, #4]
 80040de:	60a2      	str	r2, [r4, #8]
 80040e0:	781b      	ldrb	r3, [r3, #0]
 80040e2:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,e");
 80040e4:	687b      	ldr	r3, [r7, #4]
 80040e6:	33d8      	adds	r3, #216	; 0xd8
 80040e8:	4996      	ldr	r1, [pc, #600]	; (8004344 <createProblem+0x349c>)
 80040ea:	461a      	mov	r2, r3
 80040ec:	460b      	mov	r3, r1
 80040ee:	cb03      	ldmia	r3!, {r0, r1}
 80040f0:	6010      	str	r0, [r2, #0]
 80040f2:	6051      	str	r1, [r2, #4]
 80040f4:	881b      	ldrh	r3, [r3, #0]
 80040f6:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 80040f8:	687b      	ldr	r3, [r7, #4]
 80040fa:	33cc      	adds	r3, #204	; 0xcc
 80040fc:	4a92      	ldr	r2, [pc, #584]	; (8004348 <createProblem+0x34a0>)
 80040fe:	8811      	ldrh	r1, [r2, #0]
 8004100:	7892      	ldrb	r2, [r2, #2]
 8004102:	8019      	strh	r1, [r3, #0]
 8004104:	709a      	strb	r2, [r3, #2]
			break;
 8004106:	f016 bc15 	b.w	801a934 <createProblem+0x19a8c>
		case 168 :
			strcpy(p->name,"ACG6 PLUS");
 800410a:	687b      	ldr	r3, [r7, #4]
 800410c:	337c      	adds	r3, #124	; 0x7c
 800410e:	498f      	ldr	r1, [pc, #572]	; (800434c <createProblem+0x34a4>)
 8004110:	461a      	mov	r2, r3
 8004112:	460b      	mov	r3, r1
 8004114:	cb03      	ldmia	r3!, {r0, r1}
 8004116:	6010      	str	r0, [r2, #0]
 8004118:	6051      	str	r1, [r2, #4]
 800411a:	881b      	ldrh	r3, [r3, #0]
 800411c:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 800411e:	687b      	ldr	r3, [r7, #4]
 8004120:	2206      	movs	r2, #6
 8004122:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,C,E,C,I");
 8004124:	687b      	ldr	r3, [r7, #4]
 8004126:	3340      	adds	r3, #64	; 0x40
 8004128:	4a89      	ldr	r2, [pc, #548]	; (8004350 <createProblem+0x34a8>)
 800412a:	461c      	mov	r4, r3
 800412c:	4613      	mov	r3, r2
 800412e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004130:	6020      	str	r0, [r4, #0]
 8004132:	6061      	str	r1, [r4, #4]
 8004134:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,10,13,16,16,18");
 8004136:	687b      	ldr	r3, [r7, #4]
 8004138:	3304      	adds	r3, #4
 800413a:	4a86      	ldr	r2, [pc, #536]	; (8004354 <createProblem+0x34ac>)
 800413c:	461d      	mov	r5, r3
 800413e:	4614      	mov	r4, r2
 8004140:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004142:	6028      	str	r0, [r5, #0]
 8004144:	6069      	str	r1, [r5, #4]
 8004146:	60aa      	str	r2, [r5, #8]
 8004148:	60eb      	str	r3, [r5, #12]
 800414a:	7823      	ldrb	r3, [r4, #0]
 800414c:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800414e:	687b      	ldr	r3, [r7, #4]
 8004150:	33d8      	adds	r3, #216	; 0xd8
 8004152:	4a77      	ldr	r2, [pc, #476]	; (8004330 <createProblem+0x3488>)
 8004154:	461c      	mov	r4, r3
 8004156:	4613      	mov	r3, r2
 8004158:	cb07      	ldmia	r3!, {r0, r1, r2}
 800415a:	6020      	str	r0, [r4, #0]
 800415c:	6061      	str	r1, [r4, #4]
 800415e:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8004160:	687b      	ldr	r3, [r7, #4]
 8004162:	33cc      	adds	r3, #204	; 0xcc
 8004164:	4a78      	ldr	r2, [pc, #480]	; (8004348 <createProblem+0x34a0>)
 8004166:	8811      	ldrh	r1, [r2, #0]
 8004168:	7892      	ldrb	r2, [r2, #2]
 800416a:	8019      	strh	r1, [r3, #0]
 800416c:	709a      	strb	r2, [r3, #2]
			break;
 800416e:	f016 bbe1 	b.w	801a934 <createProblem+0x19a8c>
		case 169 :
			strcpy(p->name,"SQUINCHER");
 8004172:	687b      	ldr	r3, [r7, #4]
 8004174:	337c      	adds	r3, #124	; 0x7c
 8004176:	4978      	ldr	r1, [pc, #480]	; (8004358 <createProblem+0x34b0>)
 8004178:	461a      	mov	r2, r3
 800417a:	460b      	mov	r3, r1
 800417c:	cb03      	ldmia	r3!, {r0, r1}
 800417e:	6010      	str	r0, [r2, #0]
 8004180:	6051      	str	r1, [r2, #4]
 8004182:	881b      	ldrh	r3, [r3, #0]
 8004184:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 8004186:	687b      	ldr	r3, [r7, #4]
 8004188:	2207      	movs	r2, #7
 800418a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,G,F,C,D,D");
 800418c:	687b      	ldr	r3, [r7, #4]
 800418e:	3340      	adds	r3, #64	; 0x40
 8004190:	4a72      	ldr	r2, [pc, #456]	; (800435c <createProblem+0x34b4>)
 8004192:	461c      	mov	r4, r3
 8004194:	4613      	mov	r3, r2
 8004196:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004198:	6020      	str	r0, [r4, #0]
 800419a:	6061      	str	r1, [r4, #4]
 800419c:	60a2      	str	r2, [r4, #8]
 800419e:	881b      	ldrh	r3, [r3, #0]
 80041a0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,9,11,13,15,18");
 80041a2:	687b      	ldr	r3, [r7, #4]
 80041a4:	3304      	adds	r3, #4
 80041a6:	4a6e      	ldr	r2, [pc, #440]	; (8004360 <createProblem+0x34b8>)
 80041a8:	461d      	mov	r5, r3
 80041aa:	4614      	mov	r4, r2
 80041ac:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80041ae:	6028      	str	r0, [r5, #0]
 80041b0:	6069      	str	r1, [r5, #4]
 80041b2:	60aa      	str	r2, [r5, #8]
 80041b4:	60eb      	str	r3, [r5, #12]
 80041b6:	8823      	ldrh	r3, [r4, #0]
 80041b8:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80041ba:	687b      	ldr	r3, [r7, #4]
 80041bc:	33d8      	adds	r3, #216	; 0xd8
 80041be:	4a69      	ldr	r2, [pc, #420]	; (8004364 <createProblem+0x34bc>)
 80041c0:	461c      	mov	r4, r3
 80041c2:	4613      	mov	r3, r2
 80041c4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80041c6:	6020      	str	r0, [r4, #0]
 80041c8:	6061      	str	r1, [r4, #4]
 80041ca:	60a2      	str	r2, [r4, #8]
 80041cc:	881b      	ldrh	r3, [r3, #0]
 80041ce:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80041d0:	687b      	ldr	r3, [r7, #4]
 80041d2:	33cc      	adds	r3, #204	; 0xcc
 80041d4:	4a64      	ldr	r2, [pc, #400]	; (8004368 <createProblem+0x34c0>)
 80041d6:	6810      	ldr	r0, [r2, #0]
 80041d8:	6018      	str	r0, [r3, #0]
			break;
 80041da:	f016 bbab 	b.w	801a934 <createProblem+0x19a8c>
		case 17 :
			strcpy(p->name,"THE LADDER");
 80041de:	687b      	ldr	r3, [r7, #4]
 80041e0:	337c      	adds	r3, #124	; 0x7c
 80041e2:	4962      	ldr	r1, [pc, #392]	; (800436c <createProblem+0x34c4>)
 80041e4:	461a      	mov	r2, r3
 80041e6:	460b      	mov	r3, r1
 80041e8:	cb03      	ldmia	r3!, {r0, r1}
 80041ea:	6010      	str	r0, [r2, #0]
 80041ec:	6051      	str	r1, [r2, #4]
 80041ee:	8819      	ldrh	r1, [r3, #0]
 80041f0:	789b      	ldrb	r3, [r3, #2]
 80041f2:	8111      	strh	r1, [r2, #8]
 80041f4:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 80041f6:	687b      	ldr	r3, [r7, #4]
 80041f8:	2207      	movs	r2, #7
 80041fa:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,J,I,J,I,K,I");
 80041fc:	687b      	ldr	r3, [r7, #4]
 80041fe:	3340      	adds	r3, #64	; 0x40
 8004200:	4a5b      	ldr	r2, [pc, #364]	; (8004370 <createProblem+0x34c8>)
 8004202:	461c      	mov	r4, r3
 8004204:	4613      	mov	r3, r2
 8004206:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004208:	6020      	str	r0, [r4, #0]
 800420a:	6061      	str	r1, [r4, #4]
 800420c:	60a2      	str	r2, [r4, #8]
 800420e:	881b      	ldrh	r3, [r3, #0]
 8004210:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,7,10,13,15,16,18");
 8004212:	687b      	ldr	r3, [r7, #4]
 8004214:	3304      	adds	r3, #4
 8004216:	4a57      	ldr	r2, [pc, #348]	; (8004374 <createProblem+0x34cc>)
 8004218:	461d      	mov	r5, r3
 800421a:	4614      	mov	r4, r2
 800421c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800421e:	6028      	str	r0, [r5, #0]
 8004220:	6069      	str	r1, [r5, #4]
 8004222:	60aa      	str	r2, [r5, #8]
 8004224:	60eb      	str	r3, [r5, #12]
 8004226:	8823      	ldrh	r3, [r4, #0]
 8004228:	78a2      	ldrb	r2, [r4, #2]
 800422a:	822b      	strh	r3, [r5, #16]
 800422c:	4613      	mov	r3, r2
 800422e:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8004230:	687b      	ldr	r3, [r7, #4]
 8004232:	33d8      	adds	r3, #216	; 0xd8
 8004234:	4a4b      	ldr	r2, [pc, #300]	; (8004364 <createProblem+0x34bc>)
 8004236:	461c      	mov	r4, r3
 8004238:	4613      	mov	r3, r2
 800423a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800423c:	6020      	str	r0, [r4, #0]
 800423e:	6061      	str	r1, [r4, #4]
 8004240:	60a2      	str	r2, [r4, #8]
 8004242:	881b      	ldrh	r3, [r3, #0]
 8004244:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8004246:	687b      	ldr	r3, [r7, #4]
 8004248:	33cc      	adds	r3, #204	; 0xcc
 800424a:	4a47      	ldr	r2, [pc, #284]	; (8004368 <createProblem+0x34c0>)
 800424c:	6810      	ldr	r0, [r2, #0]
 800424e:	6018      	str	r0, [r3, #0]
			break;
 8004250:	f016 bb70 	b.w	801a934 <createProblem+0x19a8c>
		case 170 :
			strcpy(p->name,"SHRINE1");
 8004254:	687b      	ldr	r3, [r7, #4]
 8004256:	337c      	adds	r3, #124	; 0x7c
 8004258:	4947      	ldr	r1, [pc, #284]	; (8004378 <createProblem+0x34d0>)
 800425a:	461a      	mov	r2, r3
 800425c:	460b      	mov	r3, r1
 800425e:	cb03      	ldmia	r3!, {r0, r1}
 8004260:	6010      	str	r0, [r2, #0]
 8004262:	6051      	str	r1, [r2, #4]
			p->moveSize = 6;
 8004264:	687b      	ldr	r3, [r7, #4]
 8004266:	2206      	movs	r2, #6
 8004268:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,C,F,F,J,I");
 800426a:	687b      	ldr	r3, [r7, #4]
 800426c:	3340      	adds	r3, #64	; 0x40
 800426e:	4a43      	ldr	r2, [pc, #268]	; (800437c <createProblem+0x34d4>)
 8004270:	461c      	mov	r4, r3
 8004272:	4613      	mov	r3, r2
 8004274:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004276:	6020      	str	r0, [r4, #0]
 8004278:	6061      	str	r1, [r4, #4]
 800427a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,11,13,16,18");
 800427c:	687b      	ldr	r3, [r7, #4]
 800427e:	3304      	adds	r3, #4
 8004280:	4a3f      	ldr	r2, [pc, #252]	; (8004380 <createProblem+0x34d8>)
 8004282:	461c      	mov	r4, r3
 8004284:	4615      	mov	r5, r2
 8004286:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004288:	6020      	str	r0, [r4, #0]
 800428a:	6061      	str	r1, [r4, #4]
 800428c:	60a2      	str	r2, [r4, #8]
 800428e:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8004290:	687b      	ldr	r3, [r7, #4]
 8004292:	33d8      	adds	r3, #216	; 0xd8
 8004294:	4a26      	ldr	r2, [pc, #152]	; (8004330 <createProblem+0x3488>)
 8004296:	461c      	mov	r4, r3
 8004298:	4613      	mov	r3, r2
 800429a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800429c:	6020      	str	r0, [r4, #0]
 800429e:	6061      	str	r1, [r4, #4]
 80042a0:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 80042a2:	687b      	ldr	r3, [r7, #4]
 80042a4:	33cc      	adds	r3, #204	; 0xcc
 80042a6:	4a37      	ldr	r2, [pc, #220]	; (8004384 <createProblem+0x34dc>)
 80042a8:	6810      	ldr	r0, [r2, #0]
 80042aa:	6018      	str	r0, [r3, #0]
			break;
 80042ac:	f016 bb42 	b.w	801a934 <createProblem+0x19a8c>
		case 171 :
			strcpy(p->name,"VISUALIZZA STOC......");
 80042b0:	687b      	ldr	r3, [r7, #4]
 80042b2:	337c      	adds	r3, #124	; 0x7c
 80042b4:	4a34      	ldr	r2, [pc, #208]	; (8004388 <createProblem+0x34e0>)
 80042b6:	461d      	mov	r5, r3
 80042b8:	4614      	mov	r4, r2
 80042ba:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80042bc:	6028      	str	r0, [r5, #0]
 80042be:	6069      	str	r1, [r5, #4]
 80042c0:	60aa      	str	r2, [r5, #8]
 80042c2:	60eb      	str	r3, [r5, #12]
 80042c4:	6820      	ldr	r0, [r4, #0]
 80042c6:	6128      	str	r0, [r5, #16]
 80042c8:	88a3      	ldrh	r3, [r4, #4]
 80042ca:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 6;
 80042cc:	687b      	ldr	r3, [r7, #4]
 80042ce:	2206      	movs	r2, #6
 80042d0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,H,F,I");
 80042d2:	687b      	ldr	r3, [r7, #4]
 80042d4:	3340      	adds	r3, #64	; 0x40
 80042d6:	4a2d      	ldr	r2, [pc, #180]	; (800438c <createProblem+0x34e4>)
 80042d8:	461c      	mov	r4, r3
 80042da:	4613      	mov	r3, r2
 80042dc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80042de:	6020      	str	r0, [r4, #0]
 80042e0:	6061      	str	r1, [r4, #4]
 80042e2:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,9,12,13,18");
 80042e4:	687b      	ldr	r3, [r7, #4]
 80042e6:	3304      	adds	r3, #4
 80042e8:	4a29      	ldr	r2, [pc, #164]	; (8004390 <createProblem+0x34e8>)
 80042ea:	461c      	mov	r4, r3
 80042ec:	4613      	mov	r3, r2
 80042ee:	cb07      	ldmia	r3!, {r0, r1, r2}
 80042f0:	6020      	str	r0, [r4, #0]
 80042f2:	6061      	str	r1, [r4, #4]
 80042f4:	60a2      	str	r2, [r4, #8]
 80042f6:	881a      	ldrh	r2, [r3, #0]
 80042f8:	789b      	ldrb	r3, [r3, #2]
 80042fa:	81a2      	strh	r2, [r4, #12]
 80042fc:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80042fe:	687b      	ldr	r3, [r7, #4]
 8004300:	33d8      	adds	r3, #216	; 0xd8
 8004302:	4a0b      	ldr	r2, [pc, #44]	; (8004330 <createProblem+0x3488>)
 8004304:	461c      	mov	r4, r3
 8004306:	4613      	mov	r3, r2
 8004308:	cb07      	ldmia	r3!, {r0, r1, r2}
 800430a:	6020      	str	r0, [r4, #0]
 800430c:	6061      	str	r1, [r4, #4]
 800430e:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B");
 8004310:	687b      	ldr	r3, [r7, #4]
 8004312:	33cc      	adds	r3, #204	; 0xcc
 8004314:	4a1f      	ldr	r2, [pc, #124]	; (8004394 <createProblem+0x34ec>)
 8004316:	8811      	ldrh	r1, [r2, #0]
 8004318:	7892      	ldrb	r2, [r2, #2]
 800431a:	8019      	strh	r1, [r3, #0]
 800431c:	709a      	strb	r2, [r3, #2]
			break;
 800431e:	f016 bb09 	b.w	801a934 <createProblem+0x19a8c>
 8004322:	bf00      	nop
 8004324:	08021700 	.word	0x08021700
 8004328:	08021708 	.word	0x08021708
 800432c:	08021714 	.word	0x08021714
 8004330:	0802091c 	.word	0x0802091c
 8004334:	08020b0c 	.word	0x08020b0c
 8004338:	08021724 	.word	0x08021724
 800433c:	0802172c 	.word	0x0802172c
 8004340:	08021738 	.word	0x08021738
 8004344:	08021748 	.word	0x08021748
 8004348:	08020874 	.word	0x08020874
 800434c:	08021754 	.word	0x08021754
 8004350:	08021760 	.word	0x08021760
 8004354:	0802176c 	.word	0x0802176c
 8004358:	08021780 	.word	0x08021780
 800435c:	0802178c 	.word	0x0802178c
 8004360:	0802179c 	.word	0x0802179c
 8004364:	08020a14 	.word	0x08020a14
 8004368:	08020830 	.word	0x08020830
 800436c:	080217b0 	.word	0x080217b0
 8004370:	080217bc 	.word	0x080217bc
 8004374:	08020c4c 	.word	0x08020c4c
 8004378:	080217cc 	.word	0x080217cc
 800437c:	080217d4 	.word	0x080217d4
 8004380:	080217e0 	.word	0x080217e0
 8004384:	08020dc8 	.word	0x08020dc8
 8004388:	080217f0 	.word	0x080217f0
 800438c:	08021808 	.word	0x08021808
 8004390:	08021814 	.word	0x08021814
 8004394:	080208ac 	.word	0x080208ac
		case 172 :
			strcpy(p->name,"DEATH EATER");
 8004398:	687b      	ldr	r3, [r7, #4]
 800439a:	337c      	adds	r3, #124	; 0x7c
 800439c:	4ab8      	ldr	r2, [pc, #736]	; (8004680 <createProblem+0x37d8>)
 800439e:	461c      	mov	r4, r3
 80043a0:	4613      	mov	r3, r2
 80043a2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80043a4:	6020      	str	r0, [r4, #0]
 80043a6:	6061      	str	r1, [r4, #4]
 80043a8:	60a2      	str	r2, [r4, #8]
			p->moveSize = 7;
 80043aa:	687b      	ldr	r3, [r7, #4]
 80043ac:	2207      	movs	r2, #7
 80043ae:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,I,J,G,I");
 80043b0:	687b      	ldr	r3, [r7, #4]
 80043b2:	3340      	adds	r3, #64	; 0x40
 80043b4:	4ab3      	ldr	r2, [pc, #716]	; (8004684 <createProblem+0x37dc>)
 80043b6:	461c      	mov	r4, r3
 80043b8:	4613      	mov	r3, r2
 80043ba:	cb07      	ldmia	r3!, {r0, r1, r2}
 80043bc:	6020      	str	r0, [r4, #0]
 80043be:	6061      	str	r1, [r4, #4]
 80043c0:	60a2      	str	r2, [r4, #8]
 80043c2:	881b      	ldrh	r3, [r3, #0]
 80043c4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,8,10,13,15,18");
 80043c6:	687b      	ldr	r3, [r7, #4]
 80043c8:	3304      	adds	r3, #4
 80043ca:	4aaf      	ldr	r2, [pc, #700]	; (8004688 <createProblem+0x37e0>)
 80043cc:	461d      	mov	r5, r3
 80043ce:	4614      	mov	r4, r2
 80043d0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80043d2:	6028      	str	r0, [r5, #0]
 80043d4:	6069      	str	r1, [r5, #4]
 80043d6:	60aa      	str	r2, [r5, #8]
 80043d8:	60eb      	str	r3, [r5, #12]
 80043da:	8823      	ldrh	r3, [r4, #0]
 80043dc:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 80043de:	687b      	ldr	r3, [r7, #4]
 80043e0:	33d8      	adds	r3, #216	; 0xd8
 80043e2:	4aaa      	ldr	r2, [pc, #680]	; (800468c <createProblem+0x37e4>)
 80043e4:	461c      	mov	r4, r3
 80043e6:	4613      	mov	r3, r2
 80043e8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80043ea:	6020      	str	r0, [r4, #0]
 80043ec:	6061      	str	r1, [r4, #4]
 80043ee:	60a2      	str	r2, [r4, #8]
 80043f0:	881b      	ldrh	r3, [r3, #0]
 80043f2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80043f4:	687b      	ldr	r3, [r7, #4]
 80043f6:	33cc      	adds	r3, #204	; 0xcc
 80043f8:	4aa5      	ldr	r2, [pc, #660]	; (8004690 <createProblem+0x37e8>)
 80043fa:	6810      	ldr	r0, [r2, #0]
 80043fc:	6018      	str	r0, [r3, #0]
			break;
 80043fe:	f016 ba99 	b.w	801a934 <createProblem+0x19a8c>
		case 173 :
			strcpy(p->name,"ROBERTDS#1");
 8004402:	687b      	ldr	r3, [r7, #4]
 8004404:	337c      	adds	r3, #124	; 0x7c
 8004406:	49a3      	ldr	r1, [pc, #652]	; (8004694 <createProblem+0x37ec>)
 8004408:	461a      	mov	r2, r3
 800440a:	460b      	mov	r3, r1
 800440c:	cb03      	ldmia	r3!, {r0, r1}
 800440e:	6010      	str	r0, [r2, #0]
 8004410:	6051      	str	r1, [r2, #4]
 8004412:	8819      	ldrh	r1, [r3, #0]
 8004414:	789b      	ldrb	r3, [r3, #2]
 8004416:	8111      	strh	r1, [r2, #8]
 8004418:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 800441a:	687b      	ldr	r3, [r7, #4]
 800441c:	2207      	movs	r2, #7
 800441e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,E,B,D,B,D,D");
 8004420:	687b      	ldr	r3, [r7, #4]
 8004422:	3340      	adds	r3, #64	; 0x40
 8004424:	4a9c      	ldr	r2, [pc, #624]	; (8004698 <createProblem+0x37f0>)
 8004426:	461c      	mov	r4, r3
 8004428:	4613      	mov	r3, r2
 800442a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800442c:	6020      	str	r0, [r4, #0]
 800442e:	6061      	str	r1, [r4, #4]
 8004430:	60a2      	str	r2, [r4, #8]
 8004432:	881b      	ldrh	r3, [r3, #0]
 8004434:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,8,10,11,12,15,18");
 8004436:	687b      	ldr	r3, [r7, #4]
 8004438:	3304      	adds	r3, #4
 800443a:	4a98      	ldr	r2, [pc, #608]	; (800469c <createProblem+0x37f4>)
 800443c:	461d      	mov	r5, r3
 800443e:	4614      	mov	r4, r2
 8004440:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004442:	6028      	str	r0, [r5, #0]
 8004444:	6069      	str	r1, [r5, #4]
 8004446:	60aa      	str	r2, [r5, #8]
 8004448:	60eb      	str	r3, [r5, #12]
 800444a:	8823      	ldrh	r3, [r4, #0]
 800444c:	78a2      	ldrb	r2, [r4, #2]
 800444e:	822b      	strh	r3, [r5, #16]
 8004450:	4613      	mov	r3, r2
 8004452:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8004454:	687b      	ldr	r3, [r7, #4]
 8004456:	33d8      	adds	r3, #216	; 0xd8
 8004458:	4a91      	ldr	r2, [pc, #580]	; (80046a0 <createProblem+0x37f8>)
 800445a:	461c      	mov	r4, r3
 800445c:	4613      	mov	r3, r2
 800445e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004460:	6020      	str	r0, [r4, #0]
 8004462:	6061      	str	r1, [r4, #4]
 8004464:	60a2      	str	r2, [r4, #8]
 8004466:	881b      	ldrh	r3, [r3, #0]
 8004468:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800446a:	687b      	ldr	r3, [r7, #4]
 800446c:	33cc      	adds	r3, #204	; 0xcc
 800446e:	4a88      	ldr	r2, [pc, #544]	; (8004690 <createProblem+0x37e8>)
 8004470:	6810      	ldr	r0, [r2, #0]
 8004472:	6018      	str	r0, [r3, #0]
			break;
 8004474:	f016 ba5e 	b.w	801a934 <createProblem+0x19a8c>
		case 174 :
			strcpy(p->name,"ACG68");
 8004478:	687b      	ldr	r3, [r7, #4]
 800447a:	337c      	adds	r3, #124	; 0x7c
 800447c:	4a89      	ldr	r2, [pc, #548]	; (80046a4 <createProblem+0x37fc>)
 800447e:	6810      	ldr	r0, [r2, #0]
 8004480:	6018      	str	r0, [r3, #0]
 8004482:	8892      	ldrh	r2, [r2, #4]
 8004484:	809a      	strh	r2, [r3, #4]
			p->moveSize = 8;
 8004486:	687b      	ldr	r3, [r7, #4]
 8004488:	2208      	movs	r2, #8
 800448a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,E,F,D,B,E,A");
 800448c:	687b      	ldr	r3, [r7, #4]
 800448e:	3340      	adds	r3, #64	; 0x40
 8004490:	4a85      	ldr	r2, [pc, #532]	; (80046a8 <createProblem+0x3800>)
 8004492:	461c      	mov	r4, r3
 8004494:	4615      	mov	r5, r2
 8004496:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004498:	6020      	str	r0, [r4, #0]
 800449a:	6061      	str	r1, [r4, #4]
 800449c:	60a2      	str	r2, [r4, #8]
 800449e:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,11,11,6,16,18");
 80044a0:	687b      	ldr	r3, [r7, #4]
 80044a2:	3304      	adds	r3, #4
 80044a4:	4a81      	ldr	r2, [pc, #516]	; (80046ac <createProblem+0x3804>)
 80044a6:	461d      	mov	r5, r3
 80044a8:	4614      	mov	r4, r2
 80044aa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80044ac:	6028      	str	r0, [r5, #0]
 80044ae:	6069      	str	r1, [r5, #4]
 80044b0:	60aa      	str	r2, [r5, #8]
 80044b2:	60eb      	str	r3, [r5, #12]
 80044b4:	6820      	ldr	r0, [r4, #0]
 80044b6:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 80044b8:	687b      	ldr	r3, [r7, #4]
 80044ba:	33d8      	adds	r3, #216	; 0xd8
 80044bc:	4a7c      	ldr	r2, [pc, #496]	; (80046b0 <createProblem+0x3808>)
 80044be:	461c      	mov	r4, r3
 80044c0:	4615      	mov	r5, r2
 80044c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80044c4:	6020      	str	r0, [r4, #0]
 80044c6:	6061      	str	r1, [r4, #4]
 80044c8:	60a2      	str	r2, [r4, #8]
 80044ca:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 80044cc:	687b      	ldr	r3, [r7, #4]
 80044ce:	33cc      	adds	r3, #204	; 0xcc
 80044d0:	4a78      	ldr	r2, [pc, #480]	; (80046b4 <createProblem+0x380c>)
 80044d2:	6810      	ldr	r0, [r2, #0]
 80044d4:	6018      	str	r0, [r3, #0]
			break;
 80044d6:	f016 ba2d 	b.w	801a934 <createProblem+0x19a8c>
		case 175 :
			strcpy(p->name,"DAS SCHNITZEL ALT");
 80044da:	687b      	ldr	r3, [r7, #4]
 80044dc:	337c      	adds	r3, #124	; 0x7c
 80044de:	4a76      	ldr	r2, [pc, #472]	; (80046b8 <createProblem+0x3810>)
 80044e0:	461d      	mov	r5, r3
 80044e2:	4614      	mov	r4, r2
 80044e4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80044e6:	6028      	str	r0, [r5, #0]
 80044e8:	6069      	str	r1, [r5, #4]
 80044ea:	60aa      	str	r2, [r5, #8]
 80044ec:	60eb      	str	r3, [r5, #12]
 80044ee:	8823      	ldrh	r3, [r4, #0]
 80044f0:	822b      	strh	r3, [r5, #16]
			p->moveSize = 6;
 80044f2:	687b      	ldr	r3, [r7, #4]
 80044f4:	2206      	movs	r2, #6
 80044f6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,I,F,G,D");
 80044f8:	687b      	ldr	r3, [r7, #4]
 80044fa:	3340      	adds	r3, #64	; 0x40
 80044fc:	4a6f      	ldr	r2, [pc, #444]	; (80046bc <createProblem+0x3814>)
 80044fe:	461c      	mov	r4, r3
 8004500:	4613      	mov	r3, r2
 8004502:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004504:	6020      	str	r0, [r4, #0]
 8004506:	6061      	str	r1, [r4, #4]
 8004508:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,9,13,14,18");
 800450a:	687b      	ldr	r3, [r7, #4]
 800450c:	3304      	adds	r3, #4
 800450e:	4a6c      	ldr	r2, [pc, #432]	; (80046c0 <createProblem+0x3818>)
 8004510:	461c      	mov	r4, r3
 8004512:	4613      	mov	r3, r2
 8004514:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004516:	6020      	str	r0, [r4, #0]
 8004518:	6061      	str	r1, [r4, #4]
 800451a:	60a2      	str	r2, [r4, #8]
 800451c:	881a      	ldrh	r2, [r3, #0]
 800451e:	789b      	ldrb	r3, [r3, #2]
 8004520:	81a2      	strh	r2, [r4, #12]
 8004522:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8004524:	687b      	ldr	r3, [r7, #4]
 8004526:	33d8      	adds	r3, #216	; 0xd8
 8004528:	4a66      	ldr	r2, [pc, #408]	; (80046c4 <createProblem+0x381c>)
 800452a:	461c      	mov	r4, r3
 800452c:	4613      	mov	r3, r2
 800452e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004530:	6020      	str	r0, [r4, #0]
 8004532:	6061      	str	r1, [r4, #4]
 8004534:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 8004536:	687b      	ldr	r3, [r7, #4]
 8004538:	33cc      	adds	r3, #204	; 0xcc
 800453a:	4a63      	ldr	r2, [pc, #396]	; (80046c8 <createProblem+0x3820>)
 800453c:	6810      	ldr	r0, [r2, #0]
 800453e:	6018      	str	r0, [r3, #0]
			break;
 8004540:	f016 b9f8 	b.w	801a934 <createProblem+0x19a8c>
		case 176 :
			strcpy(p->name,"MOON SHADOW");
 8004544:	687b      	ldr	r3, [r7, #4]
 8004546:	337c      	adds	r3, #124	; 0x7c
 8004548:	4a60      	ldr	r2, [pc, #384]	; (80046cc <createProblem+0x3824>)
 800454a:	461c      	mov	r4, r3
 800454c:	4613      	mov	r3, r2
 800454e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004550:	6020      	str	r0, [r4, #0]
 8004552:	6061      	str	r1, [r4, #4]
 8004554:	60a2      	str	r2, [r4, #8]
			p->moveSize = 8;
 8004556:	687b      	ldr	r3, [r7, #4]
 8004558:	2208      	movs	r2, #8
 800455a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,C,F,I,D,G,I");
 800455c:	687b      	ldr	r3, [r7, #4]
 800455e:	3340      	adds	r3, #64	; 0x40
 8004560:	4a5b      	ldr	r2, [pc, #364]	; (80046d0 <createProblem+0x3828>)
 8004562:	461c      	mov	r4, r3
 8004564:	4615      	mov	r5, r2
 8004566:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004568:	6020      	str	r0, [r4, #0]
 800456a:	6061      	str	r1, [r4, #4]
 800456c:	60a2      	str	r2, [r4, #8]
 800456e:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,11,14,11,15,18");
 8004570:	687b      	ldr	r3, [r7, #4]
 8004572:	3304      	adds	r3, #4
 8004574:	4a57      	ldr	r2, [pc, #348]	; (80046d4 <createProblem+0x382c>)
 8004576:	461d      	mov	r5, r3
 8004578:	4614      	mov	r4, r2
 800457a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800457c:	6028      	str	r0, [r5, #0]
 800457e:	6069      	str	r1, [r5, #4]
 8004580:	60aa      	str	r2, [r5, #8]
 8004582:	60eb      	str	r3, [r5, #12]
 8004584:	6820      	ldr	r0, [r4, #0]
 8004586:	6128      	str	r0, [r5, #16]
 8004588:	7923      	ldrb	r3, [r4, #4]
 800458a:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800458c:	687b      	ldr	r3, [r7, #4]
 800458e:	33d8      	adds	r3, #216	; 0xd8
 8004590:	4a47      	ldr	r2, [pc, #284]	; (80046b0 <createProblem+0x3808>)
 8004592:	461c      	mov	r4, r3
 8004594:	4615      	mov	r5, r2
 8004596:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004598:	6020      	str	r0, [r4, #0]
 800459a:	6061      	str	r1, [r4, #4]
 800459c:	60a2      	str	r2, [r4, #8]
 800459e:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 80045a0:	687b      	ldr	r3, [r7, #4]
 80045a2:	33cc      	adds	r3, #204	; 0xcc
 80045a4:	4a43      	ldr	r2, [pc, #268]	; (80046b4 <createProblem+0x380c>)
 80045a6:	6810      	ldr	r0, [r2, #0]
 80045a8:	6018      	str	r0, [r3, #0]
			break;
 80045aa:	f016 b9c3 	b.w	801a934 <createProblem+0x19a8c>
		case 177 :
			strcpy(p->name,"TIAMAT");
 80045ae:	687b      	ldr	r3, [r7, #4]
 80045b0:	337c      	adds	r3, #124	; 0x7c
 80045b2:	4a49      	ldr	r2, [pc, #292]	; (80046d8 <createProblem+0x3830>)
 80045b4:	6810      	ldr	r0, [r2, #0]
 80045b6:	6018      	str	r0, [r3, #0]
 80045b8:	8891      	ldrh	r1, [r2, #4]
 80045ba:	7992      	ldrb	r2, [r2, #6]
 80045bc:	8099      	strh	r1, [r3, #4]
 80045be:	719a      	strb	r2, [r3, #6]
			p->moveSize = 7;
 80045c0:	687b      	ldr	r3, [r7, #4]
 80045c2:	2207      	movs	r2, #7
 80045c4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,E,G,E,I,G,I");
 80045c6:	687b      	ldr	r3, [r7, #4]
 80045c8:	3340      	adds	r3, #64	; 0x40
 80045ca:	4a44      	ldr	r2, [pc, #272]	; (80046dc <createProblem+0x3834>)
 80045cc:	461c      	mov	r4, r3
 80045ce:	4613      	mov	r3, r2
 80045d0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80045d2:	6020      	str	r0, [r4, #0]
 80045d4:	6061      	str	r1, [r4, #4]
 80045d6:	60a2      	str	r2, [r4, #8]
 80045d8:	881b      	ldrh	r3, [r3, #0]
 80045da:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,12,14,15,18");
 80045dc:	687b      	ldr	r3, [r7, #4]
 80045de:	3304      	adds	r3, #4
 80045e0:	4a3f      	ldr	r2, [pc, #252]	; (80046e0 <createProblem+0x3838>)
 80045e2:	461d      	mov	r5, r3
 80045e4:	4614      	mov	r4, r2
 80045e6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80045e8:	6028      	str	r0, [r5, #0]
 80045ea:	6069      	str	r1, [r5, #4]
 80045ec:	60aa      	str	r2, [r5, #8]
 80045ee:	60eb      	str	r3, [r5, #12]
 80045f0:	8823      	ldrh	r3, [r4, #0]
 80045f2:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 80045f4:	687b      	ldr	r3, [r7, #4]
 80045f6:	33d8      	adds	r3, #216	; 0xd8
 80045f8:	4a24      	ldr	r2, [pc, #144]	; (800468c <createProblem+0x37e4>)
 80045fa:	461c      	mov	r4, r3
 80045fc:	4613      	mov	r3, r2
 80045fe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004600:	6020      	str	r0, [r4, #0]
 8004602:	6061      	str	r1, [r4, #4]
 8004604:	60a2      	str	r2, [r4, #8]
 8004606:	881b      	ldrh	r3, [r3, #0]
 8004608:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800460a:	687b      	ldr	r3, [r7, #4]
 800460c:	33cc      	adds	r3, #204	; 0xcc
 800460e:	4a20      	ldr	r2, [pc, #128]	; (8004690 <createProblem+0x37e8>)
 8004610:	6810      	ldr	r0, [r2, #0]
 8004612:	6018      	str	r0, [r3, #0]
			break;
 8004614:	f016 b98e 	b.w	801a934 <createProblem+0x19a8c>
		case 178 :
			strcpy(p->name,"NEIL1");
 8004618:	687b      	ldr	r3, [r7, #4]
 800461a:	337c      	adds	r3, #124	; 0x7c
 800461c:	4a31      	ldr	r2, [pc, #196]	; (80046e4 <createProblem+0x383c>)
 800461e:	6810      	ldr	r0, [r2, #0]
 8004620:	6018      	str	r0, [r3, #0]
 8004622:	8892      	ldrh	r2, [r2, #4]
 8004624:	809a      	strh	r2, [r3, #4]
			p->moveSize = 8;
 8004626:	687b      	ldr	r3, [r7, #4]
 8004628:	2208      	movs	r2, #8
 800462a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,C,B,C,D,C,A");
 800462c:	687b      	ldr	r3, [r7, #4]
 800462e:	3340      	adds	r3, #64	; 0x40
 8004630:	4a2d      	ldr	r2, [pc, #180]	; (80046e8 <createProblem+0x3840>)
 8004632:	461c      	mov	r4, r3
 8004634:	4615      	mov	r5, r2
 8004636:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004638:	6020      	str	r0, [r4, #0]
 800463a:	6061      	str	r1, [r4, #4]
 800463c:	60a2      	str	r2, [r4, #8]
 800463e:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,6,8,10,13,11,16,18");
 8004640:	687b      	ldr	r3, [r7, #4]
 8004642:	3304      	adds	r3, #4
 8004644:	4a29      	ldr	r2, [pc, #164]	; (80046ec <createProblem+0x3844>)
 8004646:	461d      	mov	r5, r3
 8004648:	4614      	mov	r4, r2
 800464a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800464c:	6028      	str	r0, [r5, #0]
 800464e:	6069      	str	r1, [r5, #4]
 8004650:	60aa      	str	r2, [r5, #8]
 8004652:	60eb      	str	r3, [r5, #12]
 8004654:	6820      	ldr	r0, [r4, #0]
 8004656:	6128      	str	r0, [r5, #16]
 8004658:	7923      	ldrb	r3, [r4, #4]
 800465a:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800465c:	687b      	ldr	r3, [r7, #4]
 800465e:	33d8      	adds	r3, #216	; 0xd8
 8004660:	4a13      	ldr	r2, [pc, #76]	; (80046b0 <createProblem+0x3808>)
 8004662:	461c      	mov	r4, r3
 8004664:	4615      	mov	r5, r2
 8004666:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004668:	6020      	str	r0, [r4, #0]
 800466a:	6061      	str	r1, [r4, #4]
 800466c:	60a2      	str	r2, [r4, #8]
 800466e:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8004670:	687b      	ldr	r3, [r7, #4]
 8004672:	33cc      	adds	r3, #204	; 0xcc
 8004674:	4a06      	ldr	r2, [pc, #24]	; (8004690 <createProblem+0x37e8>)
 8004676:	6810      	ldr	r0, [r2, #0]
 8004678:	6018      	str	r0, [r3, #0]
			break;
 800467a:	f016 b95b 	b.w	801a934 <createProblem+0x19a8c>
 800467e:	bf00      	nop
 8004680:	08021824 	.word	0x08021824
 8004684:	08021830 	.word	0x08021830
 8004688:	08021840 	.word	0x08021840
 800468c:	08020820 	.word	0x08020820
 8004690:	08020830 	.word	0x08020830
 8004694:	08021854 	.word	0x08021854
 8004698:	08021860 	.word	0x08021860
 800469c:	08021870 	.word	0x08021870
 80046a0:	08020a14 	.word	0x08020a14
 80046a4:	08021884 	.word	0x08021884
 80046a8:	0802188c 	.word	0x0802188c
 80046ac:	0802189c 	.word	0x0802189c
 80046b0:	08020a4c 	.word	0x08020a4c
 80046b4:	08020928 	.word	0x08020928
 80046b8:	080218b0 	.word	0x080218b0
 80046bc:	080218c4 	.word	0x080218c4
 80046c0:	080218d0 	.word	0x080218d0
 80046c4:	08020e90 	.word	0x08020e90
 80046c8:	08020dc8 	.word	0x08020dc8
 80046cc:	080218e0 	.word	0x080218e0
 80046d0:	080218ec 	.word	0x080218ec
 80046d4:	080218fc 	.word	0x080218fc
 80046d8:	08021914 	.word	0x08021914
 80046dc:	0802191c 	.word	0x0802191c
 80046e0:	0802192c 	.word	0x0802192c
 80046e4:	08021940 	.word	0x08021940
 80046e8:	08021948 	.word	0x08021948
 80046ec:	08021958 	.word	0x08021958
		case 179 :
			strcpy(p->name,"サミシクナイト");
 80046f0:	687b      	ldr	r3, [r7, #4]
 80046f2:	337c      	adds	r3, #124	; 0x7c
 80046f4:	4ac1      	ldr	r2, [pc, #772]	; (80049fc <createProblem+0x3b54>)
 80046f6:	461d      	mov	r5, r3
 80046f8:	4614      	mov	r4, r2
 80046fa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80046fc:	6028      	str	r0, [r5, #0]
 80046fe:	6069      	str	r1, [r5, #4]
 8004700:	60aa      	str	r2, [r5, #8]
 8004702:	60eb      	str	r3, [r5, #12]
 8004704:	6820      	ldr	r0, [r4, #0]
 8004706:	6128      	str	r0, [r5, #16]
 8004708:	88a3      	ldrh	r3, [r4, #4]
 800470a:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 9;
 800470c:	687b      	ldr	r3, [r7, #4]
 800470e:	2209      	movs	r2, #9
 8004710:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,G,B,E,C,G,G,I");
 8004712:	687b      	ldr	r3, [r7, #4]
 8004714:	3340      	adds	r3, #64	; 0x40
 8004716:	4aba      	ldr	r2, [pc, #744]	; (8004a00 <createProblem+0x3b58>)
 8004718:	461d      	mov	r5, r3
 800471a:	4614      	mov	r4, r2
 800471c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800471e:	6028      	str	r0, [r5, #0]
 8004720:	6069      	str	r1, [r5, #4]
 8004722:	60aa      	str	r2, [r5, #8]
 8004724:	60eb      	str	r3, [r5, #12]
 8004726:	8823      	ldrh	r3, [r4, #0]
 8004728:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"6,5,9,10,12,13,15,17,18");
 800472a:	687b      	ldr	r3, [r7, #4]
 800472c:	3304      	adds	r3, #4
 800472e:	4ab5      	ldr	r2, [pc, #724]	; (8004a04 <createProblem+0x3b5c>)
 8004730:	461d      	mov	r5, r3
 8004732:	4614      	mov	r4, r2
 8004734:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004736:	6028      	str	r0, [r5, #0]
 8004738:	6069      	str	r1, [r5, #4]
 800473a:	60aa      	str	r2, [r5, #8]
 800473c:	60eb      	str	r3, [r5, #12]
 800473e:	cc03      	ldmia	r4!, {r0, r1}
 8004740:	6128      	str	r0, [r5, #16]
 8004742:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8004744:	687b      	ldr	r3, [r7, #4]
 8004746:	33d8      	adds	r3, #216	; 0xd8
 8004748:	4aaf      	ldr	r2, [pc, #700]	; (8004a08 <createProblem+0x3b60>)
 800474a:	461d      	mov	r5, r3
 800474c:	4614      	mov	r4, r2
 800474e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004750:	6028      	str	r0, [r5, #0]
 8004752:	6069      	str	r1, [r5, #4]
 8004754:	60aa      	str	r2, [r5, #8]
 8004756:	60eb      	str	r3, [r5, #12]
 8004758:	8823      	ldrh	r3, [r4, #0]
 800475a:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 800475c:	687b      	ldr	r3, [r7, #4]
 800475e:	33cc      	adds	r3, #204	; 0xcc
 8004760:	4aaa      	ldr	r2, [pc, #680]	; (8004a0c <createProblem+0x3b64>)
 8004762:	6810      	ldr	r0, [r2, #0]
 8004764:	6018      	str	r0, [r3, #0]
			break;
 8004766:	f016 b8e5 	b.w	801a934 <createProblem+0x19a8c>
		case 18 :
			strcpy(p->name,"CRANKSHAFT");
 800476a:	687b      	ldr	r3, [r7, #4]
 800476c:	337c      	adds	r3, #124	; 0x7c
 800476e:	49a8      	ldr	r1, [pc, #672]	; (8004a10 <createProblem+0x3b68>)
 8004770:	461a      	mov	r2, r3
 8004772:	460b      	mov	r3, r1
 8004774:	cb03      	ldmia	r3!, {r0, r1}
 8004776:	6010      	str	r0, [r2, #0]
 8004778:	6051      	str	r1, [r2, #4]
 800477a:	8819      	ldrh	r1, [r3, #0]
 800477c:	789b      	ldrb	r3, [r3, #2]
 800477e:	8111      	strh	r1, [r2, #8]
 8004780:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 8004782:	687b      	ldr	r3, [r7, #4]
 8004784:	2207      	movs	r2, #7
 8004786:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,H,G,F,E,B,D");
 8004788:	687b      	ldr	r3, [r7, #4]
 800478a:	3340      	adds	r3, #64	; 0x40
 800478c:	4aa1      	ldr	r2, [pc, #644]	; (8004a14 <createProblem+0x3b6c>)
 800478e:	461c      	mov	r4, r3
 8004790:	4613      	mov	r3, r2
 8004792:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004794:	6020      	str	r0, [r4, #0]
 8004796:	6061      	str	r1, [r4, #4]
 8004798:	60a2      	str	r2, [r4, #8]
 800479a:	881b      	ldrh	r3, [r3, #0]
 800479c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,9,11,12,15,18");
 800479e:	687b      	ldr	r3, [r7, #4]
 80047a0:	3304      	adds	r3, #4
 80047a2:	4a9d      	ldr	r2, [pc, #628]	; (8004a18 <createProblem+0x3b70>)
 80047a4:	461d      	mov	r5, r3
 80047a6:	4614      	mov	r4, r2
 80047a8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80047aa:	6028      	str	r0, [r5, #0]
 80047ac:	6069      	str	r1, [r5, #4]
 80047ae:	60aa      	str	r2, [r5, #8]
 80047b0:	60eb      	str	r3, [r5, #12]
 80047b2:	8823      	ldrh	r3, [r4, #0]
 80047b4:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 80047b6:	687b      	ldr	r3, [r7, #4]
 80047b8:	33d8      	adds	r3, #216	; 0xd8
 80047ba:	4a98      	ldr	r2, [pc, #608]	; (8004a1c <createProblem+0x3b74>)
 80047bc:	461c      	mov	r4, r3
 80047be:	4613      	mov	r3, r2
 80047c0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80047c2:	6020      	str	r0, [r4, #0]
 80047c4:	6061      	str	r1, [r4, #4]
 80047c6:	60a2      	str	r2, [r4, #8]
 80047c8:	881b      	ldrh	r3, [r3, #0]
 80047ca:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 80047cc:	687b      	ldr	r3, [r7, #4]
 80047ce:	33cc      	adds	r3, #204	; 0xcc
 80047d0:	4a93      	ldr	r2, [pc, #588]	; (8004a20 <createProblem+0x3b78>)
 80047d2:	8811      	ldrh	r1, [r2, #0]
 80047d4:	7892      	ldrb	r2, [r2, #2]
 80047d6:	8019      	strh	r1, [r3, #0]
 80047d8:	709a      	strb	r2, [r3, #2]
			break;
 80047da:	f016 b8ab 	b.w	801a934 <createProblem+0x19a8c>
		case 180 :
			strcpy(p->name,"FISHIN FOR A COMPLIMENT");
 80047de:	687b      	ldr	r3, [r7, #4]
 80047e0:	337c      	adds	r3, #124	; 0x7c
 80047e2:	4a90      	ldr	r2, [pc, #576]	; (8004a24 <createProblem+0x3b7c>)
 80047e4:	461d      	mov	r5, r3
 80047e6:	4614      	mov	r4, r2
 80047e8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80047ea:	6028      	str	r0, [r5, #0]
 80047ec:	6069      	str	r1, [r5, #4]
 80047ee:	60aa      	str	r2, [r5, #8]
 80047f0:	60eb      	str	r3, [r5, #12]
 80047f2:	cc03      	ldmia	r4!, {r0, r1}
 80047f4:	6128      	str	r0, [r5, #16]
 80047f6:	6169      	str	r1, [r5, #20]
			p->moveSize = 5;
 80047f8:	687b      	ldr	r3, [r7, #4]
 80047fa:	2205      	movs	r2, #5
 80047fc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,C,D");
 80047fe:	687b      	ldr	r3, [r7, #4]
 8004800:	3340      	adds	r3, #64	; 0x40
 8004802:	4989      	ldr	r1, [pc, #548]	; (8004a28 <createProblem+0x3b80>)
 8004804:	461a      	mov	r2, r3
 8004806:	460b      	mov	r3, r1
 8004808:	cb03      	ldmia	r3!, {r0, r1}
 800480a:	6010      	str	r0, [r2, #0]
 800480c:	6051      	str	r1, [r2, #4]
 800480e:	881b      	ldrh	r3, [r3, #0]
 8004810:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,12,13,18");
 8004812:	687b      	ldr	r3, [r7, #4]
 8004814:	3304      	adds	r3, #4
 8004816:	4a85      	ldr	r2, [pc, #532]	; (8004a2c <createProblem+0x3b84>)
 8004818:	461c      	mov	r4, r3
 800481a:	4613      	mov	r3, r2
 800481c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800481e:	6020      	str	r0, [r4, #0]
 8004820:	6061      	str	r1, [r4, #4]
 8004822:	60a2      	str	r2, [r4, #8]
 8004824:	781b      	ldrb	r3, [r3, #0]
 8004826:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8004828:	687b      	ldr	r3, [r7, #4]
 800482a:	33d8      	adds	r3, #216	; 0xd8
 800482c:	4980      	ldr	r1, [pc, #512]	; (8004a30 <createProblem+0x3b88>)
 800482e:	461a      	mov	r2, r3
 8004830:	460b      	mov	r3, r1
 8004832:	cb03      	ldmia	r3!, {r0, r1}
 8004834:	6010      	str	r0, [r2, #0]
 8004836:	6051      	str	r1, [r2, #4]
 8004838:	881b      	ldrh	r3, [r3, #0]
 800483a:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C+");
 800483c:	687b      	ldr	r3, [r7, #4]
 800483e:	33cc      	adds	r3, #204	; 0xcc
 8004840:	4a7c      	ldr	r2, [pc, #496]	; (8004a34 <createProblem+0x3b8c>)
 8004842:	6810      	ldr	r0, [r2, #0]
 8004844:	6018      	str	r0, [r3, #0]
			break;
 8004846:	f016 b875 	b.w	801a934 <createProblem+0x19a8c>
		case 181 :
			strcpy(p->name,"ZLATI");
 800484a:	687b      	ldr	r3, [r7, #4]
 800484c:	337c      	adds	r3, #124	; 0x7c
 800484e:	4a7a      	ldr	r2, [pc, #488]	; (8004a38 <createProblem+0x3b90>)
 8004850:	6810      	ldr	r0, [r2, #0]
 8004852:	6018      	str	r0, [r3, #0]
 8004854:	8892      	ldrh	r2, [r2, #4]
 8004856:	809a      	strh	r2, [r3, #4]
			p->moveSize = 6;
 8004858:	687b      	ldr	r3, [r7, #4]
 800485a:	2206      	movs	r2, #6
 800485c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,H,C,E,D");
 800485e:	687b      	ldr	r3, [r7, #4]
 8004860:	3340      	adds	r3, #64	; 0x40
 8004862:	4a76      	ldr	r2, [pc, #472]	; (8004a3c <createProblem+0x3b94>)
 8004864:	461c      	mov	r4, r3
 8004866:	4613      	mov	r3, r2
 8004868:	cb07      	ldmia	r3!, {r0, r1, r2}
 800486a:	6020      	str	r0, [r4, #0]
 800486c:	6061      	str	r1, [r4, #4]
 800486e:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,10,13,12,18");
 8004870:	687b      	ldr	r3, [r7, #4]
 8004872:	3304      	adds	r3, #4
 8004874:	4a72      	ldr	r2, [pc, #456]	; (8004a40 <createProblem+0x3b98>)
 8004876:	461c      	mov	r4, r3
 8004878:	4615      	mov	r5, r2
 800487a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800487c:	6020      	str	r0, [r4, #0]
 800487e:	6061      	str	r1, [r4, #4]
 8004880:	60a2      	str	r2, [r4, #8]
 8004882:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8004884:	687b      	ldr	r3, [r7, #4]
 8004886:	33d8      	adds	r3, #216	; 0xd8
 8004888:	4a6e      	ldr	r2, [pc, #440]	; (8004a44 <createProblem+0x3b9c>)
 800488a:	461c      	mov	r4, r3
 800488c:	4613      	mov	r3, r2
 800488e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004890:	6020      	str	r0, [r4, #0]
 8004892:	6061      	str	r1, [r4, #4]
 8004894:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 8004896:	687b      	ldr	r3, [r7, #4]
 8004898:	33cc      	adds	r3, #204	; 0xcc
 800489a:	4a66      	ldr	r2, [pc, #408]	; (8004a34 <createProblem+0x3b8c>)
 800489c:	6810      	ldr	r0, [r2, #0]
 800489e:	6018      	str	r0, [r3, #0]
			break;
 80048a0:	f016 b848 	b.w	801a934 <createProblem+0x19a8c>
		case 182 :
			strcpy(p->name,"THE DAILY RATION");
 80048a4:	687b      	ldr	r3, [r7, #4]
 80048a6:	337c      	adds	r3, #124	; 0x7c
 80048a8:	4a67      	ldr	r2, [pc, #412]	; (8004a48 <createProblem+0x3ba0>)
 80048aa:	461d      	mov	r5, r3
 80048ac:	4614      	mov	r4, r2
 80048ae:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80048b0:	6028      	str	r0, [r5, #0]
 80048b2:	6069      	str	r1, [r5, #4]
 80048b4:	60aa      	str	r2, [r5, #8]
 80048b6:	60eb      	str	r3, [r5, #12]
 80048b8:	7823      	ldrb	r3, [r4, #0]
 80048ba:	742b      	strb	r3, [r5, #16]
			p->moveSize = 7;
 80048bc:	687b      	ldr	r3, [r7, #4]
 80048be:	2207      	movs	r2, #7
 80048c0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,K,G,G,H,J,D");
 80048c2:	687b      	ldr	r3, [r7, #4]
 80048c4:	3340      	adds	r3, #64	; 0x40
 80048c6:	4a61      	ldr	r2, [pc, #388]	; (8004a4c <createProblem+0x3ba4>)
 80048c8:	461c      	mov	r4, r3
 80048ca:	4613      	mov	r3, r2
 80048cc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80048ce:	6020      	str	r0, [r4, #0]
 80048d0:	6061      	str	r1, [r4, #4]
 80048d2:	60a2      	str	r2, [r4, #8]
 80048d4:	881b      	ldrh	r3, [r3, #0]
 80048d6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,14,17,15,10,7,18");
 80048d8:	687b      	ldr	r3, [r7, #4]
 80048da:	3304      	adds	r3, #4
 80048dc:	4a5c      	ldr	r2, [pc, #368]	; (8004a50 <createProblem+0x3ba8>)
 80048de:	461d      	mov	r5, r3
 80048e0:	4614      	mov	r4, r2
 80048e2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80048e4:	6028      	str	r0, [r5, #0]
 80048e6:	6069      	str	r1, [r5, #4]
 80048e8:	60aa      	str	r2, [r5, #8]
 80048ea:	60eb      	str	r3, [r5, #12]
 80048ec:	8823      	ldrh	r3, [r4, #0]
 80048ee:	78a2      	ldrb	r2, [r4, #2]
 80048f0:	822b      	strh	r3, [r5, #16]
 80048f2:	4613      	mov	r3, r2
 80048f4:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80048f6:	687b      	ldr	r3, [r7, #4]
 80048f8:	33d8      	adds	r3, #216	; 0xd8
 80048fa:	4a56      	ldr	r2, [pc, #344]	; (8004a54 <createProblem+0x3bac>)
 80048fc:	461c      	mov	r4, r3
 80048fe:	4613      	mov	r3, r2
 8004900:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004902:	6020      	str	r0, [r4, #0]
 8004904:	6061      	str	r1, [r4, #4]
 8004906:	60a2      	str	r2, [r4, #8]
 8004908:	881b      	ldrh	r3, [r3, #0]
 800490a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 800490c:	687b      	ldr	r3, [r7, #4]
 800490e:	33cc      	adds	r3, #204	; 0xcc
 8004910:	4a48      	ldr	r2, [pc, #288]	; (8004a34 <createProblem+0x3b8c>)
 8004912:	6810      	ldr	r0, [r2, #0]
 8004914:	6018      	str	r0, [r3, #0]
			break;
 8004916:	f016 b80d 	b.w	801a934 <createProblem+0x19a8c>
		case 183 :
			strcpy(p->name,"I LOVE ROCK AND ROLL");
 800491a:	687b      	ldr	r3, [r7, #4]
 800491c:	337c      	adds	r3, #124	; 0x7c
 800491e:	4a4e      	ldr	r2, [pc, #312]	; (8004a58 <createProblem+0x3bb0>)
 8004920:	461d      	mov	r5, r3
 8004922:	4614      	mov	r4, r2
 8004924:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004926:	6028      	str	r0, [r5, #0]
 8004928:	6069      	str	r1, [r5, #4]
 800492a:	60aa      	str	r2, [r5, #8]
 800492c:	60eb      	str	r3, [r5, #12]
 800492e:	6820      	ldr	r0, [r4, #0]
 8004930:	6128      	str	r0, [r5, #16]
 8004932:	7923      	ldrb	r3, [r4, #4]
 8004934:	752b      	strb	r3, [r5, #20]
			p->moveSize = 7;
 8004936:	687b      	ldr	r3, [r7, #4]
 8004938:	2207      	movs	r2, #7
 800493a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,E,F,G,I,I,J");
 800493c:	687b      	ldr	r3, [r7, #4]
 800493e:	3340      	adds	r3, #64	; 0x40
 8004940:	4a46      	ldr	r2, [pc, #280]	; (8004a5c <createProblem+0x3bb4>)
 8004942:	461c      	mov	r4, r3
 8004944:	4613      	mov	r3, r2
 8004946:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004948:	6020      	str	r0, [r4, #0]
 800494a:	6061      	str	r1, [r4, #4]
 800494c:	60a2      	str	r2, [r4, #8]
 800494e:	881b      	ldrh	r3, [r3, #0]
 8004950:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"8,16,11,9,14,18,5");
 8004952:	687b      	ldr	r3, [r7, #4]
 8004954:	3304      	adds	r3, #4
 8004956:	4a42      	ldr	r2, [pc, #264]	; (8004a60 <createProblem+0x3bb8>)
 8004958:	461d      	mov	r5, r3
 800495a:	4614      	mov	r4, r2
 800495c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800495e:	6028      	str	r0, [r5, #0]
 8004960:	6069      	str	r1, [r5, #4]
 8004962:	60aa      	str	r2, [r5, #8]
 8004964:	60eb      	str	r3, [r5, #12]
 8004966:	8823      	ldrh	r3, [r4, #0]
 8004968:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "d,d,d,d,d,e,s");
 800496a:	687b      	ldr	r3, [r7, #4]
 800496c:	33d8      	adds	r3, #216	; 0xd8
 800496e:	4a3d      	ldr	r2, [pc, #244]	; (8004a64 <createProblem+0x3bbc>)
 8004970:	461c      	mov	r4, r3
 8004972:	4613      	mov	r3, r2
 8004974:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004976:	6020      	str	r0, [r4, #0]
 8004978:	6061      	str	r1, [r4, #4]
 800497a:	60a2      	str	r2, [r4, #8]
 800497c:	881b      	ldrh	r3, [r3, #0]
 800497e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8004980:	687b      	ldr	r3, [r7, #4]
 8004982:	33cc      	adds	r3, #204	; 0xcc
 8004984:	4a2b      	ldr	r2, [pc, #172]	; (8004a34 <createProblem+0x3b8c>)
 8004986:	6810      	ldr	r0, [r2, #0]
 8004988:	6018      	str	r0, [r3, #0]
			break;
 800498a:	f015 bfd3 	b.w	801a934 <createProblem+0x19a8c>
		case 184 :
			strcpy(p->name,"WPOLOGIM 2");
 800498e:	687b      	ldr	r3, [r7, #4]
 8004990:	337c      	adds	r3, #124	; 0x7c
 8004992:	4935      	ldr	r1, [pc, #212]	; (8004a68 <createProblem+0x3bc0>)
 8004994:	461a      	mov	r2, r3
 8004996:	460b      	mov	r3, r1
 8004998:	cb03      	ldmia	r3!, {r0, r1}
 800499a:	6010      	str	r0, [r2, #0]
 800499c:	6051      	str	r1, [r2, #4]
 800499e:	8819      	ldrh	r1, [r3, #0]
 80049a0:	789b      	ldrb	r3, [r3, #2]
 80049a2:	8111      	strh	r1, [r2, #8]
 80049a4:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 80049a6:	687b      	ldr	r3, [r7, #4]
 80049a8:	2206      	movs	r2, #6
 80049aa:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,I,H,I,D");
 80049ac:	687b      	ldr	r3, [r7, #4]
 80049ae:	3340      	adds	r3, #64	; 0x40
 80049b0:	4a2e      	ldr	r2, [pc, #184]	; (8004a6c <createProblem+0x3bc4>)
 80049b2:	461c      	mov	r4, r3
 80049b4:	4613      	mov	r3, r2
 80049b6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80049b8:	6020      	str	r0, [r4, #0]
 80049ba:	6061      	str	r1, [r4, #4]
 80049bc:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,9,12,15,18");
 80049be:	687b      	ldr	r3, [r7, #4]
 80049c0:	3304      	adds	r3, #4
 80049c2:	4a2b      	ldr	r2, [pc, #172]	; (8004a70 <createProblem+0x3bc8>)
 80049c4:	461c      	mov	r4, r3
 80049c6:	4613      	mov	r3, r2
 80049c8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80049ca:	6020      	str	r0, [r4, #0]
 80049cc:	6061      	str	r1, [r4, #4]
 80049ce:	60a2      	str	r2, [r4, #8]
 80049d0:	881a      	ldrh	r2, [r3, #0]
 80049d2:	789b      	ldrb	r3, [r3, #2]
 80049d4:	81a2      	strh	r2, [r4, #12]
 80049d6:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80049d8:	687b      	ldr	r3, [r7, #4]
 80049da:	33d8      	adds	r3, #216	; 0xd8
 80049dc:	4a19      	ldr	r2, [pc, #100]	; (8004a44 <createProblem+0x3b9c>)
 80049de:	461c      	mov	r4, r3
 80049e0:	4613      	mov	r3, r2
 80049e2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80049e4:	6020      	str	r0, [r4, #0]
 80049e6:	6061      	str	r1, [r4, #4]
 80049e8:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B");
 80049ea:	687b      	ldr	r3, [r7, #4]
 80049ec:	33cc      	adds	r3, #204	; 0xcc
 80049ee:	4a21      	ldr	r2, [pc, #132]	; (8004a74 <createProblem+0x3bcc>)
 80049f0:	8811      	ldrh	r1, [r2, #0]
 80049f2:	7892      	ldrb	r2, [r2, #2]
 80049f4:	8019      	strh	r1, [r3, #0]
 80049f6:	709a      	strb	r2, [r3, #2]
			break;
 80049f8:	f015 bf9c 	b.w	801a934 <createProblem+0x19a8c>
 80049fc:	08021970 	.word	0x08021970
 8004a00:	08021988 	.word	0x08021988
 8004a04:	0802199c 	.word	0x0802199c
 8004a08:	08020dfc 	.word	0x08020dfc
 8004a0c:	08020830 	.word	0x08020830
 8004a10:	080219b4 	.word	0x080219b4
 8004a14:	080219c0 	.word	0x080219c0
 8004a18:	080219d0 	.word	0x080219d0
 8004a1c:	08020820 	.word	0x08020820
 8004a20:	080208f0 	.word	0x080208f0
 8004a24:	080219e4 	.word	0x080219e4
 8004a28:	080219fc 	.word	0x080219fc
 8004a2c:	08021a08 	.word	0x08021a08
 8004a30:	080208a0 	.word	0x080208a0
 8004a34:	08020928 	.word	0x08020928
 8004a38:	08021a18 	.word	0x08021a18
 8004a3c:	08021a20 	.word	0x08021a20
 8004a40:	08021a2c 	.word	0x08021a2c
 8004a44:	0802091c 	.word	0x0802091c
 8004a48:	08021a3c 	.word	0x08021a3c
 8004a4c:	08021a50 	.word	0x08021a50
 8004a50:	08021a60 	.word	0x08021a60
 8004a54:	08020a14 	.word	0x08020a14
 8004a58:	08021a74 	.word	0x08021a74
 8004a5c:	08021a8c 	.word	0x08021a8c
 8004a60:	08021a9c 	.word	0x08021a9c
 8004a64:	08021ab0 	.word	0x08021ab0
 8004a68:	08021ac0 	.word	0x08021ac0
 8004a6c:	08021acc 	.word	0x08021acc
 8004a70:	08021ad8 	.word	0x08021ad8
 8004a74:	080208ac 	.word	0x080208ac
		case 185 :
			strcpy(p->name,"CAPTAIN RILEY");
 8004a78:	687b      	ldr	r3, [r7, #4]
 8004a7a:	337c      	adds	r3, #124	; 0x7c
 8004a7c:	4ab4      	ldr	r2, [pc, #720]	; (8004d50 <createProblem+0x3ea8>)
 8004a7e:	461c      	mov	r4, r3
 8004a80:	4613      	mov	r3, r2
 8004a82:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004a84:	6020      	str	r0, [r4, #0]
 8004a86:	6061      	str	r1, [r4, #4]
 8004a88:	60a2      	str	r2, [r4, #8]
 8004a8a:	881b      	ldrh	r3, [r3, #0]
 8004a8c:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 8004a8e:	687b      	ldr	r3, [r7, #4]
 8004a90:	2206      	movs	r2, #6
 8004a92:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,F,C,E,A");
 8004a94:	687b      	ldr	r3, [r7, #4]
 8004a96:	3340      	adds	r3, #64	; 0x40
 8004a98:	4aae      	ldr	r2, [pc, #696]	; (8004d54 <createProblem+0x3eac>)
 8004a9a:	461c      	mov	r4, r3
 8004a9c:	4613      	mov	r3, r2
 8004a9e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004aa0:	6020      	str	r0, [r4, #0]
 8004aa2:	6061      	str	r1, [r4, #4]
 8004aa4:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,11,13,16,18");
 8004aa6:	687b      	ldr	r3, [r7, #4]
 8004aa8:	3304      	adds	r3, #4
 8004aaa:	4aab      	ldr	r2, [pc, #684]	; (8004d58 <createProblem+0x3eb0>)
 8004aac:	461c      	mov	r4, r3
 8004aae:	4615      	mov	r5, r2
 8004ab0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004ab2:	6020      	str	r0, [r4, #0]
 8004ab4:	6061      	str	r1, [r4, #4]
 8004ab6:	60a2      	str	r2, [r4, #8]
 8004ab8:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8004aba:	687b      	ldr	r3, [r7, #4]
 8004abc:	33d8      	adds	r3, #216	; 0xd8
 8004abe:	4aa7      	ldr	r2, [pc, #668]	; (8004d5c <createProblem+0x3eb4>)
 8004ac0:	461c      	mov	r4, r3
 8004ac2:	4613      	mov	r3, r2
 8004ac4:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004ac6:	6020      	str	r0, [r4, #0]
 8004ac8:	6061      	str	r1, [r4, #4]
 8004aca:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 8004acc:	687b      	ldr	r3, [r7, #4]
 8004ace:	33cc      	adds	r3, #204	; 0xcc
 8004ad0:	4aa3      	ldr	r2, [pc, #652]	; (8004d60 <createProblem+0x3eb8>)
 8004ad2:	6810      	ldr	r0, [r2, #0]
 8004ad4:	6018      	str	r0, [r3, #0]
			break;
 8004ad6:	f015 bf2d 	b.w	801a934 <createProblem+0x19a8c>
		case 186 :
			strcpy(p->name,"BLACK IS BACK");
 8004ada:	687b      	ldr	r3, [r7, #4]
 8004adc:	337c      	adds	r3, #124	; 0x7c
 8004ade:	4aa1      	ldr	r2, [pc, #644]	; (8004d64 <createProblem+0x3ebc>)
 8004ae0:	461c      	mov	r4, r3
 8004ae2:	4613      	mov	r3, r2
 8004ae4:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004ae6:	6020      	str	r0, [r4, #0]
 8004ae8:	6061      	str	r1, [r4, #4]
 8004aea:	60a2      	str	r2, [r4, #8]
 8004aec:	881b      	ldrh	r3, [r3, #0]
 8004aee:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 8004af0:	687b      	ldr	r3, [r7, #4]
 8004af2:	2207      	movs	r2, #7
 8004af4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,G,B,C,I,D");
 8004af6:	687b      	ldr	r3, [r7, #4]
 8004af8:	3340      	adds	r3, #64	; 0x40
 8004afa:	4a9b      	ldr	r2, [pc, #620]	; (8004d68 <createProblem+0x3ec0>)
 8004afc:	461c      	mov	r4, r3
 8004afe:	4613      	mov	r3, r2
 8004b00:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004b02:	6020      	str	r0, [r4, #0]
 8004b04:	6061      	str	r1, [r4, #4]
 8004b06:	60a2      	str	r2, [r4, #8]
 8004b08:	881b      	ldrh	r3, [r3, #0]
 8004b0a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,9,10,13,14,18");
 8004b0c:	687b      	ldr	r3, [r7, #4]
 8004b0e:	3304      	adds	r3, #4
 8004b10:	4a96      	ldr	r2, [pc, #600]	; (8004d6c <createProblem+0x3ec4>)
 8004b12:	461d      	mov	r5, r3
 8004b14:	4614      	mov	r4, r2
 8004b16:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004b18:	6028      	str	r0, [r5, #0]
 8004b1a:	6069      	str	r1, [r5, #4]
 8004b1c:	60aa      	str	r2, [r5, #8]
 8004b1e:	60eb      	str	r3, [r5, #12]
 8004b20:	8823      	ldrh	r3, [r4, #0]
 8004b22:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8004b24:	687b      	ldr	r3, [r7, #4]
 8004b26:	33d8      	adds	r3, #216	; 0xd8
 8004b28:	4a91      	ldr	r2, [pc, #580]	; (8004d70 <createProblem+0x3ec8>)
 8004b2a:	461c      	mov	r4, r3
 8004b2c:	4613      	mov	r3, r2
 8004b2e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004b30:	6020      	str	r0, [r4, #0]
 8004b32:	6061      	str	r1, [r4, #4]
 8004b34:	60a2      	str	r2, [r4, #8]
 8004b36:	881b      	ldrh	r3, [r3, #0]
 8004b38:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8004b3a:	687b      	ldr	r3, [r7, #4]
 8004b3c:	33cc      	adds	r3, #204	; 0xcc
 8004b3e:	4a8d      	ldr	r2, [pc, #564]	; (8004d74 <createProblem+0x3ecc>)
 8004b40:	6810      	ldr	r0, [r2, #0]
 8004b42:	6018      	str	r0, [r3, #0]
			break;
 8004b44:	f015 bef6 	b.w	801a934 <createProblem+0x19a8c>
		case 187 :
			strcpy(p->name,"CALCIUM20");
 8004b48:	687b      	ldr	r3, [r7, #4]
 8004b4a:	337c      	adds	r3, #124	; 0x7c
 8004b4c:	498a      	ldr	r1, [pc, #552]	; (8004d78 <createProblem+0x3ed0>)
 8004b4e:	461a      	mov	r2, r3
 8004b50:	460b      	mov	r3, r1
 8004b52:	cb03      	ldmia	r3!, {r0, r1}
 8004b54:	6010      	str	r0, [r2, #0]
 8004b56:	6051      	str	r1, [r2, #4]
 8004b58:	881b      	ldrh	r3, [r3, #0]
 8004b5a:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 8004b5c:	687b      	ldr	r3, [r7, #4]
 8004b5e:	2207      	movs	r2, #7
 8004b60:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,G,G,B,D,B,D");
 8004b62:	687b      	ldr	r3, [r7, #4]
 8004b64:	3340      	adds	r3, #64	; 0x40
 8004b66:	4a85      	ldr	r2, [pc, #532]	; (8004d7c <createProblem+0x3ed4>)
 8004b68:	461c      	mov	r4, r3
 8004b6a:	4613      	mov	r3, r2
 8004b6c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004b6e:	6020      	str	r0, [r4, #0]
 8004b70:	6061      	str	r1, [r4, #4]
 8004b72:	60a2      	str	r2, [r4, #8]
 8004b74:	881b      	ldrh	r3, [r3, #0]
 8004b76:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,4,9,10,15,15,18");
 8004b78:	687b      	ldr	r3, [r7, #4]
 8004b7a:	3304      	adds	r3, #4
 8004b7c:	4a80      	ldr	r2, [pc, #512]	; (8004d80 <createProblem+0x3ed8>)
 8004b7e:	461d      	mov	r5, r3
 8004b80:	4614      	mov	r4, r2
 8004b82:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004b84:	6028      	str	r0, [r5, #0]
 8004b86:	6069      	str	r1, [r5, #4]
 8004b88:	60aa      	str	r2, [r5, #8]
 8004b8a:	60eb      	str	r3, [r5, #12]
 8004b8c:	8823      	ldrh	r3, [r4, #0]
 8004b8e:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8004b90:	687b      	ldr	r3, [r7, #4]
 8004b92:	33d8      	adds	r3, #216	; 0xd8
 8004b94:	4a7b      	ldr	r2, [pc, #492]	; (8004d84 <createProblem+0x3edc>)
 8004b96:	461c      	mov	r4, r3
 8004b98:	4613      	mov	r3, r2
 8004b9a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004b9c:	6020      	str	r0, [r4, #0]
 8004b9e:	6061      	str	r1, [r4, #4]
 8004ba0:	60a2      	str	r2, [r4, #8]
 8004ba2:	881b      	ldrh	r3, [r3, #0]
 8004ba4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8004ba6:	687b      	ldr	r3, [r7, #4]
 8004ba8:	33cc      	adds	r3, #204	; 0xcc
 8004baa:	4a72      	ldr	r2, [pc, #456]	; (8004d74 <createProblem+0x3ecc>)
 8004bac:	6810      	ldr	r0, [r2, #0]
 8004bae:	6018      	str	r0, [r3, #0]
			break;
 8004bb0:	f015 bec0 	b.w	801a934 <createProblem+0x19a8c>
		case 188 :
			strcpy(p->name,"GOOD LIFE");
 8004bb4:	687b      	ldr	r3, [r7, #4]
 8004bb6:	337c      	adds	r3, #124	; 0x7c
 8004bb8:	4973      	ldr	r1, [pc, #460]	; (8004d88 <createProblem+0x3ee0>)
 8004bba:	461a      	mov	r2, r3
 8004bbc:	460b      	mov	r3, r1
 8004bbe:	cb03      	ldmia	r3!, {r0, r1}
 8004bc0:	6010      	str	r0, [r2, #0]
 8004bc2:	6051      	str	r1, [r2, #4]
 8004bc4:	881b      	ldrh	r3, [r3, #0]
 8004bc6:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 8004bc8:	687b      	ldr	r3, [r7, #4]
 8004bca:	2206      	movs	r2, #6
 8004bcc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,C,D,F,A");
 8004bce:	687b      	ldr	r3, [r7, #4]
 8004bd0:	3340      	adds	r3, #64	; 0x40
 8004bd2:	4a6e      	ldr	r2, [pc, #440]	; (8004d8c <createProblem+0x3ee4>)
 8004bd4:	461c      	mov	r4, r3
 8004bd6:	4613      	mov	r3, r2
 8004bd8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004bda:	6020      	str	r0, [r4, #0]
 8004bdc:	6061      	str	r1, [r4, #4]
 8004bde:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,8,15,11,18");
 8004be0:	687b      	ldr	r3, [r7, #4]
 8004be2:	3304      	adds	r3, #4
 8004be4:	4a6a      	ldr	r2, [pc, #424]	; (8004d90 <createProblem+0x3ee8>)
 8004be6:	461c      	mov	r4, r3
 8004be8:	4613      	mov	r3, r2
 8004bea:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004bec:	6020      	str	r0, [r4, #0]
 8004bee:	6061      	str	r1, [r4, #4]
 8004bf0:	60a2      	str	r2, [r4, #8]
 8004bf2:	881a      	ldrh	r2, [r3, #0]
 8004bf4:	789b      	ldrb	r3, [r3, #2]
 8004bf6:	81a2      	strh	r2, [r4, #12]
 8004bf8:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8004bfa:	687b      	ldr	r3, [r7, #4]
 8004bfc:	33d8      	adds	r3, #216	; 0xd8
 8004bfe:	4a57      	ldr	r2, [pc, #348]	; (8004d5c <createProblem+0x3eb4>)
 8004c00:	461c      	mov	r4, r3
 8004c02:	4613      	mov	r3, r2
 8004c04:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004c06:	6020      	str	r0, [r4, #0]
 8004c08:	6061      	str	r1, [r4, #4]
 8004c0a:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8004c0c:	687b      	ldr	r3, [r7, #4]
 8004c0e:	33cc      	adds	r3, #204	; 0xcc
 8004c10:	4a60      	ldr	r2, [pc, #384]	; (8004d94 <createProblem+0x3eec>)
 8004c12:	6810      	ldr	r0, [r2, #0]
 8004c14:	6018      	str	r0, [r3, #0]
			break;
 8004c16:	f015 be8d 	b.w	801a934 <createProblem+0x19a8c>
		case 189 :
			strcpy(p->name,"BLACK MAGIC");
 8004c1a:	687b      	ldr	r3, [r7, #4]
 8004c1c:	337c      	adds	r3, #124	; 0x7c
 8004c1e:	4a5e      	ldr	r2, [pc, #376]	; (8004d98 <createProblem+0x3ef0>)
 8004c20:	461c      	mov	r4, r3
 8004c22:	4613      	mov	r3, r2
 8004c24:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004c26:	6020      	str	r0, [r4, #0]
 8004c28:	6061      	str	r1, [r4, #4]
 8004c2a:	60a2      	str	r2, [r4, #8]
			p->moveSize = 7;
 8004c2c:	687b      	ldr	r3, [r7, #4]
 8004c2e:	2207      	movs	r2, #7
 8004c30:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,G,C,H,F,H,I");
 8004c32:	687b      	ldr	r3, [r7, #4]
 8004c34:	3340      	adds	r3, #64	; 0x40
 8004c36:	4a59      	ldr	r2, [pc, #356]	; (8004d9c <createProblem+0x3ef4>)
 8004c38:	461c      	mov	r4, r3
 8004c3a:	4613      	mov	r3, r2
 8004c3c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004c3e:	6020      	str	r0, [r4, #0]
 8004c40:	6061      	str	r1, [r4, #4]
 8004c42:	60a2      	str	r2, [r4, #8]
 8004c44:	881b      	ldrh	r3, [r3, #0]
 8004c46:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,4,8,10,13,16,18");
 8004c48:	687b      	ldr	r3, [r7, #4]
 8004c4a:	3304      	adds	r3, #4
 8004c4c:	4a54      	ldr	r2, [pc, #336]	; (8004da0 <createProblem+0x3ef8>)
 8004c4e:	461d      	mov	r5, r3
 8004c50:	4614      	mov	r4, r2
 8004c52:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004c54:	6028      	str	r0, [r5, #0]
 8004c56:	6069      	str	r1, [r5, #4]
 8004c58:	60aa      	str	r2, [r5, #8]
 8004c5a:	60eb      	str	r3, [r5, #12]
 8004c5c:	8823      	ldrh	r3, [r4, #0]
 8004c5e:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8004c60:	687b      	ldr	r3, [r7, #4]
 8004c62:	33d8      	adds	r3, #216	; 0xd8
 8004c64:	4a42      	ldr	r2, [pc, #264]	; (8004d70 <createProblem+0x3ec8>)
 8004c66:	461c      	mov	r4, r3
 8004c68:	4613      	mov	r3, r2
 8004c6a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004c6c:	6020      	str	r0, [r4, #0]
 8004c6e:	6061      	str	r1, [r4, #4]
 8004c70:	60a2      	str	r2, [r4, #8]
 8004c72:	881b      	ldrh	r3, [r3, #0]
 8004c74:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 8004c76:	687b      	ldr	r3, [r7, #4]
 8004c78:	33cc      	adds	r3, #204	; 0xcc
 8004c7a:	4a46      	ldr	r2, [pc, #280]	; (8004d94 <createProblem+0x3eec>)
 8004c7c:	6810      	ldr	r0, [r2, #0]
 8004c7e:	6018      	str	r0, [r3, #0]
			break;
 8004c80:	f015 be58 	b.w	801a934 <createProblem+0x19a8c>
		case 19 :
			strcpy(p->name,"AMIT 1.1");
 8004c84:	687b      	ldr	r3, [r7, #4]
 8004c86:	337c      	adds	r3, #124	; 0x7c
 8004c88:	4946      	ldr	r1, [pc, #280]	; (8004da4 <createProblem+0x3efc>)
 8004c8a:	461a      	mov	r2, r3
 8004c8c:	460b      	mov	r3, r1
 8004c8e:	cb03      	ldmia	r3!, {r0, r1}
 8004c90:	6010      	str	r0, [r2, #0]
 8004c92:	6051      	str	r1, [r2, #4]
 8004c94:	781b      	ldrb	r3, [r3, #0]
 8004c96:	7213      	strb	r3, [r2, #8]
			p->moveSize = 6;
 8004c98:	687b      	ldr	r3, [r7, #4]
 8004c9a:	2206      	movs	r2, #6
 8004c9c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,E,D,D");
 8004c9e:	687b      	ldr	r3, [r7, #4]
 8004ca0:	3340      	adds	r3, #64	; 0x40
 8004ca2:	4a41      	ldr	r2, [pc, #260]	; (8004da8 <createProblem+0x3f00>)
 8004ca4:	461c      	mov	r4, r3
 8004ca6:	4613      	mov	r3, r2
 8004ca8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004caa:	6020      	str	r0, [r4, #0]
 8004cac:	6061      	str	r1, [r4, #4]
 8004cae:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,8,12,15,18");
 8004cb0:	687b      	ldr	r3, [r7, #4]
 8004cb2:	3304      	adds	r3, #4
 8004cb4:	4a3d      	ldr	r2, [pc, #244]	; (8004dac <createProblem+0x3f04>)
 8004cb6:	461c      	mov	r4, r3
 8004cb8:	4613      	mov	r3, r2
 8004cba:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004cbc:	6020      	str	r0, [r4, #0]
 8004cbe:	6061      	str	r1, [r4, #4]
 8004cc0:	60a2      	str	r2, [r4, #8]
 8004cc2:	881a      	ldrh	r2, [r3, #0]
 8004cc4:	789b      	ldrb	r3, [r3, #2]
 8004cc6:	81a2      	strh	r2, [r4, #12]
 8004cc8:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8004cca:	687b      	ldr	r3, [r7, #4]
 8004ccc:	33d8      	adds	r3, #216	; 0xd8
 8004cce:	4a23      	ldr	r2, [pc, #140]	; (8004d5c <createProblem+0x3eb4>)
 8004cd0:	461c      	mov	r4, r3
 8004cd2:	4613      	mov	r3, r2
 8004cd4:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004cd6:	6020      	str	r0, [r4, #0]
 8004cd8:	6061      	str	r1, [r4, #4]
 8004cda:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 8004cdc:	687b      	ldr	r3, [r7, #4]
 8004cde:	33cc      	adds	r3, #204	; 0xcc
 8004ce0:	4a33      	ldr	r2, [pc, #204]	; (8004db0 <createProblem+0x3f08>)
 8004ce2:	8811      	ldrh	r1, [r2, #0]
 8004ce4:	7892      	ldrb	r2, [r2, #2]
 8004ce6:	8019      	strh	r1, [r3, #0]
 8004ce8:	709a      	strb	r2, [r3, #2]
			break;
 8004cea:	f015 be23 	b.w	801a934 <createProblem+0x19a8c>
		case 190 :
			strcpy(p->name,"GORILLA NR.2");
 8004cee:	687b      	ldr	r3, [r7, #4]
 8004cf0:	337c      	adds	r3, #124	; 0x7c
 8004cf2:	4a30      	ldr	r2, [pc, #192]	; (8004db4 <createProblem+0x3f0c>)
 8004cf4:	461c      	mov	r4, r3
 8004cf6:	4613      	mov	r3, r2
 8004cf8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004cfa:	6020      	str	r0, [r4, #0]
 8004cfc:	6061      	str	r1, [r4, #4]
 8004cfe:	60a2      	str	r2, [r4, #8]
 8004d00:	781b      	ldrb	r3, [r3, #0]
 8004d02:	7323      	strb	r3, [r4, #12]
			p->moveSize = 4;
 8004d04:	687b      	ldr	r3, [r7, #4]
 8004d06:	2204      	movs	r2, #4
 8004d08:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,I,G,D");
 8004d0a:	687b      	ldr	r3, [r7, #4]
 8004d0c:	3340      	adds	r3, #64	; 0x40
 8004d0e:	492a      	ldr	r1, [pc, #168]	; (8004db8 <createProblem+0x3f10>)
 8004d10:	461a      	mov	r2, r3
 8004d12:	460b      	mov	r3, r1
 8004d14:	cb03      	ldmia	r3!, {r0, r1}
 8004d16:	6010      	str	r0, [r2, #0]
 8004d18:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"6,10,14,18");
 8004d1a:	687b      	ldr	r3, [r7, #4]
 8004d1c:	3304      	adds	r3, #4
 8004d1e:	4927      	ldr	r1, [pc, #156]	; (8004dbc <createProblem+0x3f14>)
 8004d20:	461a      	mov	r2, r3
 8004d22:	460b      	mov	r3, r1
 8004d24:	cb03      	ldmia	r3!, {r0, r1}
 8004d26:	6010      	str	r0, [r2, #0]
 8004d28:	6051      	str	r1, [r2, #4]
 8004d2a:	8819      	ldrh	r1, [r3, #0]
 8004d2c:	789b      	ldrb	r3, [r3, #2]
 8004d2e:	8111      	strh	r1, [r2, #8]
 8004d30:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 8004d32:	687b      	ldr	r3, [r7, #4]
 8004d34:	33d8      	adds	r3, #216	; 0xd8
 8004d36:	4922      	ldr	r1, [pc, #136]	; (8004dc0 <createProblem+0x3f18>)
 8004d38:	461a      	mov	r2, r3
 8004d3a:	460b      	mov	r3, r1
 8004d3c:	cb03      	ldmia	r3!, {r0, r1}
 8004d3e:	6010      	str	r0, [r2, #0]
 8004d40:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7A+");
 8004d42:	687b      	ldr	r3, [r7, #4]
 8004d44:	33cc      	adds	r3, #204	; 0xcc
 8004d46:	4a13      	ldr	r2, [pc, #76]	; (8004d94 <createProblem+0x3eec>)
 8004d48:	6810      	ldr	r0, [r2, #0]
 8004d4a:	6018      	str	r0, [r3, #0]
			break;
 8004d4c:	f015 bdf2 	b.w	801a934 <createProblem+0x19a8c>
 8004d50:	08021ae8 	.word	0x08021ae8
 8004d54:	08021af8 	.word	0x08021af8
 8004d58:	08021b04 	.word	0x08021b04
 8004d5c:	0802091c 	.word	0x0802091c
 8004d60:	08020830 	.word	0x08020830
 8004d64:	08021b14 	.word	0x08021b14
 8004d68:	08021b24 	.word	0x08021b24
 8004d6c:	08021b34 	.word	0x08021b34
 8004d70:	08020a14 	.word	0x08020a14
 8004d74:	08020928 	.word	0x08020928
 8004d78:	08021b48 	.word	0x08021b48
 8004d7c:	08021b54 	.word	0x08021b54
 8004d80:	08021b64 	.word	0x08021b64
 8004d84:	08020820 	.word	0x08020820
 8004d88:	08021b78 	.word	0x08021b78
 8004d8c:	08021b84 	.word	0x08021b84
 8004d90:	08021b90 	.word	0x08021b90
 8004d94:	080209a4 	.word	0x080209a4
 8004d98:	08021ba0 	.word	0x08021ba0
 8004d9c:	08021bac 	.word	0x08021bac
 8004da0:	08021bbc 	.word	0x08021bbc
 8004da4:	08021bd0 	.word	0x08021bd0
 8004da8:	08021bdc 	.word	0x08021bdc
 8004dac:	08021be8 	.word	0x08021be8
 8004db0:	080208f0 	.word	0x080208f0
 8004db4:	08021bf8 	.word	0x08021bf8
 8004db8:	08021c08 	.word	0x08021c08
 8004dbc:	08021c10 	.word	0x08021c10
 8004dc0:	080215a8 	.word	0x080215a8
		case 191 :
			strcpy(p->name,"BLACK KISS BLACK");
 8004dc4:	687b      	ldr	r3, [r7, #4]
 8004dc6:	337c      	adds	r3, #124	; 0x7c
 8004dc8:	4aba      	ldr	r2, [pc, #744]	; (80050b4 <createProblem+0x420c>)
 8004dca:	461d      	mov	r5, r3
 8004dcc:	4614      	mov	r4, r2
 8004dce:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004dd0:	6028      	str	r0, [r5, #0]
 8004dd2:	6069      	str	r1, [r5, #4]
 8004dd4:	60aa      	str	r2, [r5, #8]
 8004dd6:	60eb      	str	r3, [r5, #12]
 8004dd8:	7823      	ldrb	r3, [r4, #0]
 8004dda:	742b      	strb	r3, [r5, #16]
			p->moveSize = 8;
 8004ddc:	687b      	ldr	r3, [r7, #4]
 8004dde:	2208      	movs	r2, #8
 8004de0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,H,C,G,E,I");
 8004de2:	687b      	ldr	r3, [r7, #4]
 8004de4:	3340      	adds	r3, #64	; 0x40
 8004de6:	4ab4      	ldr	r2, [pc, #720]	; (80050b8 <createProblem+0x4210>)
 8004de8:	461c      	mov	r4, r3
 8004dea:	4615      	mov	r5, r2
 8004dec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004dee:	6020      	str	r0, [r4, #0]
 8004df0:	6061      	str	r1, [r4, #4]
 8004df2:	60a2      	str	r2, [r4, #8]
 8004df4:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,8,10,13,14,16,18");
 8004df6:	687b      	ldr	r3, [r7, #4]
 8004df8:	3304      	adds	r3, #4
 8004dfa:	4ab0      	ldr	r2, [pc, #704]	; (80050bc <createProblem+0x4214>)
 8004dfc:	461d      	mov	r5, r3
 8004dfe:	4614      	mov	r4, r2
 8004e00:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004e02:	6028      	str	r0, [r5, #0]
 8004e04:	6069      	str	r1, [r5, #4]
 8004e06:	60aa      	str	r2, [r5, #8]
 8004e08:	60eb      	str	r3, [r5, #12]
 8004e0a:	6820      	ldr	r0, [r4, #0]
 8004e0c:	6128      	str	r0, [r5, #16]
 8004e0e:	7923      	ldrb	r3, [r4, #4]
 8004e10:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8004e12:	687b      	ldr	r3, [r7, #4]
 8004e14:	33d8      	adds	r3, #216	; 0xd8
 8004e16:	4aaa      	ldr	r2, [pc, #680]	; (80050c0 <createProblem+0x4218>)
 8004e18:	461c      	mov	r4, r3
 8004e1a:	4615      	mov	r5, r2
 8004e1c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004e1e:	6020      	str	r0, [r4, #0]
 8004e20:	6061      	str	r1, [r4, #4]
 8004e22:	60a2      	str	r2, [r4, #8]
 8004e24:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8004e26:	687b      	ldr	r3, [r7, #4]
 8004e28:	33cc      	adds	r3, #204	; 0xcc
 8004e2a:	4aa6      	ldr	r2, [pc, #664]	; (80050c4 <createProblem+0x421c>)
 8004e2c:	8811      	ldrh	r1, [r2, #0]
 8004e2e:	7892      	ldrb	r2, [r2, #2]
 8004e30:	8019      	strh	r1, [r3, #0]
 8004e32:	709a      	strb	r2, [r3, #2]
			break;
 8004e34:	f015 bd7e 	b.w	801a934 <createProblem+0x19a8c>
		case 192 :
			strcpy(p->name,"BLACK CRAPPIE");
 8004e38:	687b      	ldr	r3, [r7, #4]
 8004e3a:	337c      	adds	r3, #124	; 0x7c
 8004e3c:	4aa2      	ldr	r2, [pc, #648]	; (80050c8 <createProblem+0x4220>)
 8004e3e:	461c      	mov	r4, r3
 8004e40:	4613      	mov	r3, r2
 8004e42:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004e44:	6020      	str	r0, [r4, #0]
 8004e46:	6061      	str	r1, [r4, #4]
 8004e48:	60a2      	str	r2, [r4, #8]
 8004e4a:	881b      	ldrh	r3, [r3, #0]
 8004e4c:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 8004e4e:	687b      	ldr	r3, [r7, #4]
 8004e50:	2206      	movs	r2, #6
 8004e52:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,A,E,A,D");
 8004e54:	687b      	ldr	r3, [r7, #4]
 8004e56:	3340      	adds	r3, #64	; 0x40
 8004e58:	4a9c      	ldr	r2, [pc, #624]	; (80050cc <createProblem+0x4224>)
 8004e5a:	461c      	mov	r4, r3
 8004e5c:	4613      	mov	r3, r2
 8004e5e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004e60:	6020      	str	r0, [r4, #0]
 8004e62:	6061      	str	r1, [r4, #4]
 8004e64:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,9,9,12,14,18");
 8004e66:	687b      	ldr	r3, [r7, #4]
 8004e68:	3304      	adds	r3, #4
 8004e6a:	4a99      	ldr	r2, [pc, #612]	; (80050d0 <createProblem+0x4228>)
 8004e6c:	461c      	mov	r4, r3
 8004e6e:	4613      	mov	r3, r2
 8004e70:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004e72:	6020      	str	r0, [r4, #0]
 8004e74:	6061      	str	r1, [r4, #4]
 8004e76:	60a2      	str	r2, [r4, #8]
 8004e78:	881a      	ldrh	r2, [r3, #0]
 8004e7a:	789b      	ldrb	r3, [r3, #2]
 8004e7c:	81a2      	strh	r2, [r4, #12]
 8004e7e:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8004e80:	687b      	ldr	r3, [r7, #4]
 8004e82:	33d8      	adds	r3, #216	; 0xd8
 8004e84:	4a93      	ldr	r2, [pc, #588]	; (80050d4 <createProblem+0x422c>)
 8004e86:	461c      	mov	r4, r3
 8004e88:	4613      	mov	r3, r2
 8004e8a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004e8c:	6020      	str	r0, [r4, #0]
 8004e8e:	6061      	str	r1, [r4, #4]
 8004e90:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 8004e92:	687b      	ldr	r3, [r7, #4]
 8004e94:	33cc      	adds	r3, #204	; 0xcc
 8004e96:	4a90      	ldr	r2, [pc, #576]	; (80050d8 <createProblem+0x4230>)
 8004e98:	6810      	ldr	r0, [r2, #0]
 8004e9a:	6018      	str	r0, [r3, #0]
			break;
 8004e9c:	f015 bd4a 	b.w	801a934 <createProblem+0x19a8c>
		case 193 :
			strcpy(p->name,"JET-BLACK HAIR");
 8004ea0:	687b      	ldr	r3, [r7, #4]
 8004ea2:	337c      	adds	r3, #124	; 0x7c
 8004ea4:	4a8d      	ldr	r2, [pc, #564]	; (80050dc <createProblem+0x4234>)
 8004ea6:	461c      	mov	r4, r3
 8004ea8:	4613      	mov	r3, r2
 8004eaa:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004eac:	6020      	str	r0, [r4, #0]
 8004eae:	6061      	str	r1, [r4, #4]
 8004eb0:	60a2      	str	r2, [r4, #8]
 8004eb2:	881a      	ldrh	r2, [r3, #0]
 8004eb4:	789b      	ldrb	r3, [r3, #2]
 8004eb6:	81a2      	strh	r2, [r4, #12]
 8004eb8:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 6;
 8004eba:	687b      	ldr	r3, [r7, #4]
 8004ebc:	2206      	movs	r2, #6
 8004ebe:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,H,G,D,A");
 8004ec0:	687b      	ldr	r3, [r7, #4]
 8004ec2:	3340      	adds	r3, #64	; 0x40
 8004ec4:	4a86      	ldr	r2, [pc, #536]	; (80050e0 <createProblem+0x4238>)
 8004ec6:	461c      	mov	r4, r3
 8004ec8:	4613      	mov	r3, r2
 8004eca:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004ecc:	6020      	str	r0, [r4, #0]
 8004ece:	6061      	str	r1, [r4, #4]
 8004ed0:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,12,14,15,18");
 8004ed2:	687b      	ldr	r3, [r7, #4]
 8004ed4:	3304      	adds	r3, #4
 8004ed6:	4a83      	ldr	r2, [pc, #524]	; (80050e4 <createProblem+0x423c>)
 8004ed8:	461c      	mov	r4, r3
 8004eda:	4615      	mov	r5, r2
 8004edc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004ede:	6020      	str	r0, [r4, #0]
 8004ee0:	6061      	str	r1, [r4, #4]
 8004ee2:	60a2      	str	r2, [r4, #8]
 8004ee4:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8004ee6:	687b      	ldr	r3, [r7, #4]
 8004ee8:	33d8      	adds	r3, #216	; 0xd8
 8004eea:	4a7a      	ldr	r2, [pc, #488]	; (80050d4 <createProblem+0x422c>)
 8004eec:	461c      	mov	r4, r3
 8004eee:	4613      	mov	r3, r2
 8004ef0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004ef2:	6020      	str	r0, [r4, #0]
 8004ef4:	6061      	str	r1, [r4, #4]
 8004ef6:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 8004ef8:	687b      	ldr	r3, [r7, #4]
 8004efa:	33cc      	adds	r3, #204	; 0xcc
 8004efc:	4a7a      	ldr	r2, [pc, #488]	; (80050e8 <createProblem+0x4240>)
 8004efe:	6810      	ldr	r0, [r2, #0]
 8004f00:	6018      	str	r0, [r3, #0]
			break;
 8004f02:	f015 bd17 	b.w	801a934 <createProblem+0x19a8c>
		case 194 :
			strcpy(p->name,"GOT A LICENSE TO KILL");
 8004f06:	687b      	ldr	r3, [r7, #4]
 8004f08:	337c      	adds	r3, #124	; 0x7c
 8004f0a:	4a78      	ldr	r2, [pc, #480]	; (80050ec <createProblem+0x4244>)
 8004f0c:	461d      	mov	r5, r3
 8004f0e:	4614      	mov	r4, r2
 8004f10:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8004f12:	6028      	str	r0, [r5, #0]
 8004f14:	6069      	str	r1, [r5, #4]
 8004f16:	60aa      	str	r2, [r5, #8]
 8004f18:	60eb      	str	r3, [r5, #12]
 8004f1a:	6820      	ldr	r0, [r4, #0]
 8004f1c:	6128      	str	r0, [r5, #16]
 8004f1e:	88a3      	ldrh	r3, [r4, #4]
 8004f20:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 6;
 8004f22:	687b      	ldr	r3, [r7, #4]
 8004f24:	2206      	movs	r2, #6
 8004f26:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,G,B,F,A");
 8004f28:	687b      	ldr	r3, [r7, #4]
 8004f2a:	3340      	adds	r3, #64	; 0x40
 8004f2c:	4a70      	ldr	r2, [pc, #448]	; (80050f0 <createProblem+0x4248>)
 8004f2e:	461c      	mov	r4, r3
 8004f30:	4613      	mov	r3, r2
 8004f32:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004f34:	6020      	str	r0, [r4, #0]
 8004f36:	6061      	str	r1, [r4, #4]
 8004f38:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,14,15,11,18");
 8004f3a:	687b      	ldr	r3, [r7, #4]
 8004f3c:	3304      	adds	r3, #4
 8004f3e:	4a6d      	ldr	r2, [pc, #436]	; (80050f4 <createProblem+0x424c>)
 8004f40:	461c      	mov	r4, r3
 8004f42:	4615      	mov	r5, r2
 8004f44:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8004f46:	6020      	str	r0, [r4, #0]
 8004f48:	6061      	str	r1, [r4, #4]
 8004f4a:	60a2      	str	r2, [r4, #8]
 8004f4c:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8004f4e:	687b      	ldr	r3, [r7, #4]
 8004f50:	33d8      	adds	r3, #216	; 0xd8
 8004f52:	4a60      	ldr	r2, [pc, #384]	; (80050d4 <createProblem+0x422c>)
 8004f54:	461c      	mov	r4, r3
 8004f56:	4613      	mov	r3, r2
 8004f58:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004f5a:	6020      	str	r0, [r4, #0]
 8004f5c:	6061      	str	r1, [r4, #4]
 8004f5e:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7C");
 8004f60:	687b      	ldr	r3, [r7, #4]
 8004f62:	33cc      	adds	r3, #204	; 0xcc
 8004f64:	4a64      	ldr	r2, [pc, #400]	; (80050f8 <createProblem+0x4250>)
 8004f66:	8811      	ldrh	r1, [r2, #0]
 8004f68:	7892      	ldrb	r2, [r2, #2]
 8004f6a:	8019      	strh	r1, [r3, #0]
 8004f6c:	709a      	strb	r2, [r3, #2]
			break;
 8004f6e:	f015 bce1 	b.w	801a934 <createProblem+0x19a8c>
		case 195 :
			strcpy(p->name,"FOX AND JAX");
 8004f72:	687b      	ldr	r3, [r7, #4]
 8004f74:	337c      	adds	r3, #124	; 0x7c
 8004f76:	4a61      	ldr	r2, [pc, #388]	; (80050fc <createProblem+0x4254>)
 8004f78:	461c      	mov	r4, r3
 8004f7a:	4613      	mov	r3, r2
 8004f7c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004f7e:	6020      	str	r0, [r4, #0]
 8004f80:	6061      	str	r1, [r4, #4]
 8004f82:	60a2      	str	r2, [r4, #8]
			p->moveSize = 5;
 8004f84:	687b      	ldr	r3, [r7, #4]
 8004f86:	2205      	movs	r2, #5
 8004f88:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,F,I,I");
 8004f8a:	687b      	ldr	r3, [r7, #4]
 8004f8c:	3340      	adds	r3, #64	; 0x40
 8004f8e:	495c      	ldr	r1, [pc, #368]	; (8005100 <createProblem+0x4258>)
 8004f90:	461a      	mov	r2, r3
 8004f92:	460b      	mov	r3, r1
 8004f94:	cb03      	ldmia	r3!, {r0, r1}
 8004f96:	6010      	str	r0, [r2, #0]
 8004f98:	6051      	str	r1, [r2, #4]
 8004f9a:	881b      	ldrh	r3, [r3, #0]
 8004f9c:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,11,14,18");
 8004f9e:	687b      	ldr	r3, [r7, #4]
 8004fa0:	3304      	adds	r3, #4
 8004fa2:	4a58      	ldr	r2, [pc, #352]	; (8005104 <createProblem+0x425c>)
 8004fa4:	461c      	mov	r4, r3
 8004fa6:	4613      	mov	r3, r2
 8004fa8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004faa:	6020      	str	r0, [r4, #0]
 8004fac:	6061      	str	r1, [r4, #4]
 8004fae:	60a2      	str	r2, [r4, #8]
 8004fb0:	781b      	ldrb	r3, [r3, #0]
 8004fb2:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8004fb4:	687b      	ldr	r3, [r7, #4]
 8004fb6:	33d8      	adds	r3, #216	; 0xd8
 8004fb8:	4953      	ldr	r1, [pc, #332]	; (8005108 <createProblem+0x4260>)
 8004fba:	461a      	mov	r2, r3
 8004fbc:	460b      	mov	r3, r1
 8004fbe:	cb03      	ldmia	r3!, {r0, r1}
 8004fc0:	6010      	str	r0, [r2, #0]
 8004fc2:	6051      	str	r1, [r2, #4]
 8004fc4:	881b      	ldrh	r3, [r3, #0]
 8004fc6:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C");
 8004fc8:	687b      	ldr	r3, [r7, #4]
 8004fca:	33cc      	adds	r3, #204	; 0xcc
 8004fcc:	4a3d      	ldr	r2, [pc, #244]	; (80050c4 <createProblem+0x421c>)
 8004fce:	8811      	ldrh	r1, [r2, #0]
 8004fd0:	7892      	ldrb	r2, [r2, #2]
 8004fd2:	8019      	strh	r1, [r3, #0]
 8004fd4:	709a      	strb	r2, [r3, #2]
			break;
 8004fd6:	f015 bcad 	b.w	801a934 <createProblem+0x19a8c>
		case 196 :
			strcpy(p->name,"BOTTLE SERVICE");
 8004fda:	687b      	ldr	r3, [r7, #4]
 8004fdc:	337c      	adds	r3, #124	; 0x7c
 8004fde:	4a4b      	ldr	r2, [pc, #300]	; (800510c <createProblem+0x4264>)
 8004fe0:	461c      	mov	r4, r3
 8004fe2:	4613      	mov	r3, r2
 8004fe4:	cb07      	ldmia	r3!, {r0, r1, r2}
 8004fe6:	6020      	str	r0, [r4, #0]
 8004fe8:	6061      	str	r1, [r4, #4]
 8004fea:	60a2      	str	r2, [r4, #8]
 8004fec:	881a      	ldrh	r2, [r3, #0]
 8004fee:	789b      	ldrb	r3, [r3, #2]
 8004ff0:	81a2      	strh	r2, [r4, #12]
 8004ff2:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 6;
 8004ff4:	687b      	ldr	r3, [r7, #4]
 8004ff6:	2206      	movs	r2, #6
 8004ff8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,I,K,G,I");
 8004ffa:	687b      	ldr	r3, [r7, #4]
 8004ffc:	3340      	adds	r3, #64	; 0x40
 8004ffe:	4a44      	ldr	r2, [pc, #272]	; (8005110 <createProblem+0x4268>)
 8005000:	461c      	mov	r4, r3
 8005002:	4613      	mov	r3, r2
 8005004:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005006:	6020      	str	r0, [r4, #0]
 8005008:	6061      	str	r1, [r4, #4]
 800500a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,5,10,14,15,18");
 800500c:	687b      	ldr	r3, [r7, #4]
 800500e:	3304      	adds	r3, #4
 8005010:	4a40      	ldr	r2, [pc, #256]	; (8005114 <createProblem+0x426c>)
 8005012:	461c      	mov	r4, r3
 8005014:	4615      	mov	r5, r2
 8005016:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005018:	6020      	str	r0, [r4, #0]
 800501a:	6061      	str	r1, [r4, #4]
 800501c:	60a2      	str	r2, [r4, #8]
 800501e:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8005020:	687b      	ldr	r3, [r7, #4]
 8005022:	33d8      	adds	r3, #216	; 0xd8
 8005024:	4a3c      	ldr	r2, [pc, #240]	; (8005118 <createProblem+0x4270>)
 8005026:	461c      	mov	r4, r3
 8005028:	4613      	mov	r3, r2
 800502a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800502c:	6020      	str	r0, [r4, #0]
 800502e:	6061      	str	r1, [r4, #4]
 8005030:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8005032:	687b      	ldr	r3, [r7, #4]
 8005034:	33cc      	adds	r3, #204	; 0xcc
 8005036:	4a39      	ldr	r2, [pc, #228]	; (800511c <createProblem+0x4274>)
 8005038:	8811      	ldrh	r1, [r2, #0]
 800503a:	7892      	ldrb	r2, [r2, #2]
 800503c:	8019      	strh	r1, [r3, #0]
 800503e:	709a      	strb	r2, [r3, #2]
			break;
 8005040:	f015 bc78 	b.w	801a934 <createProblem+0x19a8c>
		case 197 :
			strcpy(p->name,"HUNTED BY GUSTAV");
 8005044:	687b      	ldr	r3, [r7, #4]
 8005046:	337c      	adds	r3, #124	; 0x7c
 8005048:	4a35      	ldr	r2, [pc, #212]	; (8005120 <createProblem+0x4278>)
 800504a:	461d      	mov	r5, r3
 800504c:	4614      	mov	r4, r2
 800504e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005050:	6028      	str	r0, [r5, #0]
 8005052:	6069      	str	r1, [r5, #4]
 8005054:	60aa      	str	r2, [r5, #8]
 8005056:	60eb      	str	r3, [r5, #12]
 8005058:	7823      	ldrb	r3, [r4, #0]
 800505a:	742b      	strb	r3, [r5, #16]
			p->moveSize = 7;
 800505c:	687b      	ldr	r3, [r7, #4]
 800505e:	2207      	movs	r2, #7
 8005060:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,F,A,D,A");
 8005062:	687b      	ldr	r3, [r7, #4]
 8005064:	3340      	adds	r3, #64	; 0x40
 8005066:	4a2f      	ldr	r2, [pc, #188]	; (8005124 <createProblem+0x427c>)
 8005068:	461c      	mov	r4, r3
 800506a:	4613      	mov	r3, r2
 800506c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800506e:	6020      	str	r0, [r4, #0]
 8005070:	6061      	str	r1, [r4, #4]
 8005072:	60a2      	str	r2, [r4, #8]
 8005074:	881b      	ldrh	r3, [r3, #0]
 8005076:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,8,11,14,15,18");
 8005078:	687b      	ldr	r3, [r7, #4]
 800507a:	3304      	adds	r3, #4
 800507c:	4a2a      	ldr	r2, [pc, #168]	; (8005128 <createProblem+0x4280>)
 800507e:	461d      	mov	r5, r3
 8005080:	4614      	mov	r4, r2
 8005082:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005084:	6028      	str	r0, [r5, #0]
 8005086:	6069      	str	r1, [r5, #4]
 8005088:	60aa      	str	r2, [r5, #8]
 800508a:	60eb      	str	r3, [r5, #12]
 800508c:	8823      	ldrh	r3, [r4, #0]
 800508e:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8005090:	687b      	ldr	r3, [r7, #4]
 8005092:	33d8      	adds	r3, #216	; 0xd8
 8005094:	4a25      	ldr	r2, [pc, #148]	; (800512c <createProblem+0x4284>)
 8005096:	461c      	mov	r4, r3
 8005098:	4613      	mov	r3, r2
 800509a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800509c:	6020      	str	r0, [r4, #0]
 800509e:	6061      	str	r1, [r4, #4]
 80050a0:	60a2      	str	r2, [r4, #8]
 80050a2:	881b      	ldrh	r3, [r3, #0]
 80050a4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 80050a6:	687b      	ldr	r3, [r7, #4]
 80050a8:	33cc      	adds	r3, #204	; 0xcc
 80050aa:	4a0b      	ldr	r2, [pc, #44]	; (80050d8 <createProblem+0x4230>)
 80050ac:	6810      	ldr	r0, [r2, #0]
 80050ae:	6018      	str	r0, [r3, #0]
			break;
 80050b0:	f015 bc40 	b.w	801a934 <createProblem+0x19a8c>
 80050b4:	08021c1c 	.word	0x08021c1c
 80050b8:	08021c30 	.word	0x08021c30
 80050bc:	08021c40 	.word	0x08021c40
 80050c0:	080209d8 	.word	0x080209d8
 80050c4:	080208f0 	.word	0x080208f0
 80050c8:	08021c58 	.word	0x08021c58
 80050cc:	08021c68 	.word	0x08021c68
 80050d0:	08021c74 	.word	0x08021c74
 80050d4:	0802091c 	.word	0x0802091c
 80050d8:	08020928 	.word	0x08020928
 80050dc:	08021c84 	.word	0x08021c84
 80050e0:	08021c94 	.word	0x08021c94
 80050e4:	08021ca0 	.word	0x08021ca0
 80050e8:	08020dc8 	.word	0x08020dc8
 80050ec:	08021cb0 	.word	0x08021cb0
 80050f0:	08021cc8 	.word	0x08021cc8
 80050f4:	08021cd4 	.word	0x08021cd4
 80050f8:	08020b0c 	.word	0x08020b0c
 80050fc:	08021ce4 	.word	0x08021ce4
 8005100:	08021cf0 	.word	0x08021cf0
 8005104:	0802140c 	.word	0x0802140c
 8005108:	080208a0 	.word	0x080208a0
 800510c:	08021cfc 	.word	0x08021cfc
 8005110:	08021d0c 	.word	0x08021d0c
 8005114:	08021d18 	.word	0x08021d18
 8005118:	08020e90 	.word	0x08020e90
 800511c:	08020874 	.word	0x08020874
 8005120:	08021d28 	.word	0x08021d28
 8005124:	08021d3c 	.word	0x08021d3c
 8005128:	08021d4c 	.word	0x08021d4c
 800512c:	08020a14 	.word	0x08020a14
		case 198 :
			strcpy(p->name,"UFO@5");
 8005130:	687b      	ldr	r3, [r7, #4]
 8005132:	337c      	adds	r3, #124	; 0x7c
 8005134:	4ab7      	ldr	r2, [pc, #732]	; (8005414 <createProblem+0x456c>)
 8005136:	6810      	ldr	r0, [r2, #0]
 8005138:	6018      	str	r0, [r3, #0]
 800513a:	8892      	ldrh	r2, [r2, #4]
 800513c:	809a      	strh	r2, [r3, #4]
			p->moveSize = 6;
 800513e:	687b      	ldr	r3, [r7, #4]
 8005140:	2206      	movs	r2, #6
 8005142:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,K,I,I,E,D");
 8005144:	687b      	ldr	r3, [r7, #4]
 8005146:	3340      	adds	r3, #64	; 0x40
 8005148:	4ab3      	ldr	r2, [pc, #716]	; (8005418 <createProblem+0x4570>)
 800514a:	461c      	mov	r4, r3
 800514c:	4613      	mov	r3, r2
 800514e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005150:	6020      	str	r0, [r4, #0]
 8005152:	6061      	str	r1, [r4, #4]
 8005154:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,10,14,16,18");
 8005156:	687b      	ldr	r3, [r7, #4]
 8005158:	3304      	adds	r3, #4
 800515a:	4ab0      	ldr	r2, [pc, #704]	; (800541c <createProblem+0x4574>)
 800515c:	461c      	mov	r4, r3
 800515e:	4615      	mov	r5, r2
 8005160:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005162:	6020      	str	r0, [r4, #0]
 8005164:	6061      	str	r1, [r4, #4]
 8005166:	60a2      	str	r2, [r4, #8]
 8005168:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800516a:	687b      	ldr	r3, [r7, #4]
 800516c:	33d8      	adds	r3, #216	; 0xd8
 800516e:	4aac      	ldr	r2, [pc, #688]	; (8005420 <createProblem+0x4578>)
 8005170:	461c      	mov	r4, r3
 8005172:	4613      	mov	r3, r2
 8005174:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005176:	6020      	str	r0, [r4, #0]
 8005178:	6061      	str	r1, [r4, #4]
 800517a:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 800517c:	687b      	ldr	r3, [r7, #4]
 800517e:	33cc      	adds	r3, #204	; 0xcc
 8005180:	4aa8      	ldr	r2, [pc, #672]	; (8005424 <createProblem+0x457c>)
 8005182:	6810      	ldr	r0, [r2, #0]
 8005184:	6018      	str	r0, [r3, #0]
			break;
 8005186:	f015 bbd5 	b.w	801a934 <createProblem+0x19a8c>
		case 199 :
			strcpy(p->name,"PEACHY");
 800518a:	687b      	ldr	r3, [r7, #4]
 800518c:	337c      	adds	r3, #124	; 0x7c
 800518e:	4aa6      	ldr	r2, [pc, #664]	; (8005428 <createProblem+0x4580>)
 8005190:	6810      	ldr	r0, [r2, #0]
 8005192:	6018      	str	r0, [r3, #0]
 8005194:	8891      	ldrh	r1, [r2, #4]
 8005196:	7992      	ldrb	r2, [r2, #6]
 8005198:	8099      	strh	r1, [r3, #4]
 800519a:	719a      	strb	r2, [r3, #6]
			p->moveSize = 7;
 800519c:	687b      	ldr	r3, [r7, #4]
 800519e:	2207      	movs	r2, #7
 80051a0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,H,C,F,C,D,A");
 80051a2:	687b      	ldr	r3, [r7, #4]
 80051a4:	3340      	adds	r3, #64	; 0x40
 80051a6:	4aa1      	ldr	r2, [pc, #644]	; (800542c <createProblem+0x4584>)
 80051a8:	461c      	mov	r4, r3
 80051aa:	4613      	mov	r3, r2
 80051ac:	cb07      	ldmia	r3!, {r0, r1, r2}
 80051ae:	6020      	str	r0, [r4, #0]
 80051b0:	6061      	str	r1, [r4, #4]
 80051b2:	60a2      	str	r2, [r4, #8]
 80051b4:	881b      	ldrh	r3, [r3, #0]
 80051b6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,8,11,13,15,18");
 80051b8:	687b      	ldr	r3, [r7, #4]
 80051ba:	3304      	adds	r3, #4
 80051bc:	4a9c      	ldr	r2, [pc, #624]	; (8005430 <createProblem+0x4588>)
 80051be:	461d      	mov	r5, r3
 80051c0:	4614      	mov	r4, r2
 80051c2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80051c4:	6028      	str	r0, [r5, #0]
 80051c6:	6069      	str	r1, [r5, #4]
 80051c8:	60aa      	str	r2, [r5, #8]
 80051ca:	60eb      	str	r3, [r5, #12]
 80051cc:	8823      	ldrh	r3, [r4, #0]
 80051ce:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80051d0:	687b      	ldr	r3, [r7, #4]
 80051d2:	33d8      	adds	r3, #216	; 0xd8
 80051d4:	4a97      	ldr	r2, [pc, #604]	; (8005434 <createProblem+0x458c>)
 80051d6:	461c      	mov	r4, r3
 80051d8:	4613      	mov	r3, r2
 80051da:	cb07      	ldmia	r3!, {r0, r1, r2}
 80051dc:	6020      	str	r0, [r4, #0]
 80051de:	6061      	str	r1, [r4, #4]
 80051e0:	60a2      	str	r2, [r4, #8]
 80051e2:	881b      	ldrh	r3, [r3, #0]
 80051e4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 80051e6:	687b      	ldr	r3, [r7, #4]
 80051e8:	33cc      	adds	r3, #204	; 0xcc
 80051ea:	4a93      	ldr	r2, [pc, #588]	; (8005438 <createProblem+0x4590>)
 80051ec:	8811      	ldrh	r1, [r2, #0]
 80051ee:	7892      	ldrb	r2, [r2, #2]
 80051f0:	8019      	strh	r1, [r3, #0]
 80051f2:	709a      	strb	r2, [r3, #2]
			break;
 80051f4:	f015 bb9e 	b.w	801a934 <createProblem+0x19a8c>
		case 2 :
			strcpy(p->name,"PROBLEM 5");
 80051f8:	687b      	ldr	r3, [r7, #4]
 80051fa:	337c      	adds	r3, #124	; 0x7c
 80051fc:	498f      	ldr	r1, [pc, #572]	; (800543c <createProblem+0x4594>)
 80051fe:	461a      	mov	r2, r3
 8005200:	460b      	mov	r3, r1
 8005202:	cb03      	ldmia	r3!, {r0, r1}
 8005204:	6010      	str	r0, [r2, #0]
 8005206:	6051      	str	r1, [r2, #4]
 8005208:	881b      	ldrh	r3, [r3, #0]
 800520a:	8113      	strh	r3, [r2, #8]
			p->moveSize = 8;
 800520c:	687b      	ldr	r3, [r7, #4]
 800520e:	2208      	movs	r2, #8
 8005210:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,D,A,F,F,I,E,D");
 8005212:	687b      	ldr	r3, [r7, #4]
 8005214:	3340      	adds	r3, #64	; 0x40
 8005216:	4a8a      	ldr	r2, [pc, #552]	; (8005440 <createProblem+0x4598>)
 8005218:	461c      	mov	r4, r3
 800521a:	4615      	mov	r5, r2
 800521c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800521e:	6020      	str	r0, [r4, #0]
 8005220:	6061      	str	r1, [r4, #4]
 8005222:	60a2      	str	r2, [r4, #8]
 8005224:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,7,9,11,13,14,16,18");
 8005226:	687b      	ldr	r3, [r7, #4]
 8005228:	3304      	adds	r3, #4
 800522a:	4a86      	ldr	r2, [pc, #536]	; (8005444 <createProblem+0x459c>)
 800522c:	461d      	mov	r5, r3
 800522e:	4614      	mov	r4, r2
 8005230:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005232:	6028      	str	r0, [r5, #0]
 8005234:	6069      	str	r1, [r5, #4]
 8005236:	60aa      	str	r2, [r5, #8]
 8005238:	60eb      	str	r3, [r5, #12]
 800523a:	6820      	ldr	r0, [r4, #0]
 800523c:	6128      	str	r0, [r5, #16]
 800523e:	7923      	ldrb	r3, [r4, #4]
 8005240:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8005242:	687b      	ldr	r3, [r7, #4]
 8005244:	33d8      	adds	r3, #216	; 0xd8
 8005246:	4a80      	ldr	r2, [pc, #512]	; (8005448 <createProblem+0x45a0>)
 8005248:	461c      	mov	r4, r3
 800524a:	4615      	mov	r5, r2
 800524c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800524e:	6020      	str	r0, [r4, #0]
 8005250:	6061      	str	r1, [r4, #4]
 8005252:	60a2      	str	r2, [r4, #8]
 8005254:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8005256:	687b      	ldr	r3, [r7, #4]
 8005258:	33cc      	adds	r3, #204	; 0xcc
 800525a:	4a7c      	ldr	r2, [pc, #496]	; (800544c <createProblem+0x45a4>)
 800525c:	8811      	ldrh	r1, [r2, #0]
 800525e:	7892      	ldrb	r2, [r2, #2]
 8005260:	8019      	strh	r1, [r3, #0]
 8005262:	709a      	strb	r2, [r3, #2]
			break;
 8005264:	f015 bb66 	b.w	801a934 <createProblem+0x19a8c>
		case 20 :
			strcpy(p->name,"WAR OF THE TODDS");
 8005268:	687b      	ldr	r3, [r7, #4]
 800526a:	337c      	adds	r3, #124	; 0x7c
 800526c:	4a78      	ldr	r2, [pc, #480]	; (8005450 <createProblem+0x45a8>)
 800526e:	461d      	mov	r5, r3
 8005270:	4614      	mov	r4, r2
 8005272:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005274:	6028      	str	r0, [r5, #0]
 8005276:	6069      	str	r1, [r5, #4]
 8005278:	60aa      	str	r2, [r5, #8]
 800527a:	60eb      	str	r3, [r5, #12]
 800527c:	7823      	ldrb	r3, [r4, #0]
 800527e:	742b      	strb	r3, [r5, #16]
			p->moveSize = 6;
 8005280:	687b      	ldr	r3, [r7, #4]
 8005282:	2206      	movs	r2, #6
 8005284:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,I,I,H,D");
 8005286:	687b      	ldr	r3, [r7, #4]
 8005288:	3340      	adds	r3, #64	; 0x40
 800528a:	4a72      	ldr	r2, [pc, #456]	; (8005454 <createProblem+0x45ac>)
 800528c:	461c      	mov	r4, r3
 800528e:	4613      	mov	r3, r2
 8005290:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005292:	6020      	str	r0, [r4, #0]
 8005294:	6061      	str	r1, [r4, #4]
 8005296:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,9,15,16,18");
 8005298:	687b      	ldr	r3, [r7, #4]
 800529a:	3304      	adds	r3, #4
 800529c:	4a6e      	ldr	r2, [pc, #440]	; (8005458 <createProblem+0x45b0>)
 800529e:	461c      	mov	r4, r3
 80052a0:	4613      	mov	r3, r2
 80052a2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80052a4:	6020      	str	r0, [r4, #0]
 80052a6:	6061      	str	r1, [r4, #4]
 80052a8:	60a2      	str	r2, [r4, #8]
 80052aa:	881a      	ldrh	r2, [r3, #0]
 80052ac:	789b      	ldrb	r3, [r3, #2]
 80052ae:	81a2      	strh	r2, [r4, #12]
 80052b0:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80052b2:	687b      	ldr	r3, [r7, #4]
 80052b4:	33d8      	adds	r3, #216	; 0xd8
 80052b6:	4a5a      	ldr	r2, [pc, #360]	; (8005420 <createProblem+0x4578>)
 80052b8:	461c      	mov	r4, r3
 80052ba:	4613      	mov	r3, r2
 80052bc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80052be:	6020      	str	r0, [r4, #0]
 80052c0:	6061      	str	r1, [r4, #4]
 80052c2:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 80052c4:	687b      	ldr	r3, [r7, #4]
 80052c6:	33cc      	adds	r3, #204	; 0xcc
 80052c8:	4a64      	ldr	r2, [pc, #400]	; (800545c <createProblem+0x45b4>)
 80052ca:	6810      	ldr	r0, [r2, #0]
 80052cc:	6018      	str	r0, [r3, #0]
			break;
 80052ce:	f015 bb31 	b.w	801a934 <createProblem+0x19a8c>
		case 200 :
			strcpy(p->name,"THE YEAR OF THE ROOSTER");
 80052d2:	687b      	ldr	r3, [r7, #4]
 80052d4:	337c      	adds	r3, #124	; 0x7c
 80052d6:	4a62      	ldr	r2, [pc, #392]	; (8005460 <createProblem+0x45b8>)
 80052d8:	461d      	mov	r5, r3
 80052da:	4614      	mov	r4, r2
 80052dc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80052de:	6028      	str	r0, [r5, #0]
 80052e0:	6069      	str	r1, [r5, #4]
 80052e2:	60aa      	str	r2, [r5, #8]
 80052e4:	60eb      	str	r3, [r5, #12]
 80052e6:	cc03      	ldmia	r4!, {r0, r1}
 80052e8:	6128      	str	r0, [r5, #16]
 80052ea:	6169      	str	r1, [r5, #20]
			p->moveSize = 7;
 80052ec:	687b      	ldr	r3, [r7, #4]
 80052ee:	2207      	movs	r2, #7
 80052f0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,C,E,E,F,G,I");
 80052f2:	687b      	ldr	r3, [r7, #4]
 80052f4:	3340      	adds	r3, #64	; 0x40
 80052f6:	4a5b      	ldr	r2, [pc, #364]	; (8005464 <createProblem+0x45bc>)
 80052f8:	461c      	mov	r4, r3
 80052fa:	4613      	mov	r3, r2
 80052fc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80052fe:	6020      	str	r0, [r4, #0]
 8005300:	6061      	str	r1, [r4, #4]
 8005302:	60a2      	str	r2, [r4, #8]
 8005304:	881b      	ldrh	r3, [r3, #0]
 8005306:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"12,5,9,14,13,6,18");
 8005308:	687b      	ldr	r3, [r7, #4]
 800530a:	3304      	adds	r3, #4
 800530c:	4a56      	ldr	r2, [pc, #344]	; (8005468 <createProblem+0x45c0>)
 800530e:	461d      	mov	r5, r3
 8005310:	4614      	mov	r4, r2
 8005312:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005314:	6028      	str	r0, [r5, #0]
 8005316:	6069      	str	r1, [r5, #4]
 8005318:	60aa      	str	r2, [r5, #8]
 800531a:	60eb      	str	r3, [r5, #12]
 800531c:	8823      	ldrh	r3, [r4, #0]
 800531e:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "d,d,d,d,d,s,e");
 8005320:	687b      	ldr	r3, [r7, #4]
 8005322:	33d8      	adds	r3, #216	; 0xd8
 8005324:	4a51      	ldr	r2, [pc, #324]	; (800546c <createProblem+0x45c4>)
 8005326:	461c      	mov	r4, r3
 8005328:	4613      	mov	r3, r2
 800532a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800532c:	6020      	str	r0, [r4, #0]
 800532e:	6061      	str	r1, [r4, #4]
 8005330:	60a2      	str	r2, [r4, #8]
 8005332:	881b      	ldrh	r3, [r3, #0]
 8005334:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B+");
 8005336:	687b      	ldr	r3, [r7, #4]
 8005338:	33cc      	adds	r3, #204	; 0xcc
 800533a:	4a48      	ldr	r2, [pc, #288]	; (800545c <createProblem+0x45b4>)
 800533c:	6810      	ldr	r0, [r2, #0]
 800533e:	6018      	str	r0, [r3, #0]
			break;
 8005340:	f015 baf8 	b.w	801a934 <createProblem+0x19a8c>
		case 201 :
			strcpy(p->name,"EAZEEPEAZEE");
 8005344:	687b      	ldr	r3, [r7, #4]
 8005346:	337c      	adds	r3, #124	; 0x7c
 8005348:	4a49      	ldr	r2, [pc, #292]	; (8005470 <createProblem+0x45c8>)
 800534a:	461c      	mov	r4, r3
 800534c:	4613      	mov	r3, r2
 800534e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005350:	6020      	str	r0, [r4, #0]
 8005352:	6061      	str	r1, [r4, #4]
 8005354:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 8005356:	687b      	ldr	r3, [r7, #4]
 8005358:	2206      	movs	r2, #6
 800535a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,I,J,H,I");
 800535c:	687b      	ldr	r3, [r7, #4]
 800535e:	3340      	adds	r3, #64	; 0x40
 8005360:	4a44      	ldr	r2, [pc, #272]	; (8005474 <createProblem+0x45cc>)
 8005362:	461c      	mov	r4, r3
 8005364:	4613      	mov	r3, r2
 8005366:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005368:	6020      	str	r0, [r4, #0]
 800536a:	6061      	str	r1, [r4, #4]
 800536c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,7,10,13,16,18");
 800536e:	687b      	ldr	r3, [r7, #4]
 8005370:	3304      	adds	r3, #4
 8005372:	4a41      	ldr	r2, [pc, #260]	; (8005478 <createProblem+0x45d0>)
 8005374:	461c      	mov	r4, r3
 8005376:	4615      	mov	r5, r2
 8005378:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800537a:	6020      	str	r0, [r4, #0]
 800537c:	6061      	str	r1, [r4, #4]
 800537e:	60a2      	str	r2, [r4, #8]
 8005380:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8005382:	687b      	ldr	r3, [r7, #4]
 8005384:	33d8      	adds	r3, #216	; 0xd8
 8005386:	4a26      	ldr	r2, [pc, #152]	; (8005420 <createProblem+0x4578>)
 8005388:	461c      	mov	r4, r3
 800538a:	4613      	mov	r3, r2
 800538c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800538e:	6020      	str	r0, [r4, #0]
 8005390:	6061      	str	r1, [r4, #4]
 8005392:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 8005394:	687b      	ldr	r3, [r7, #4]
 8005396:	33cc      	adds	r3, #204	; 0xcc
 8005398:	4a22      	ldr	r2, [pc, #136]	; (8005424 <createProblem+0x457c>)
 800539a:	6810      	ldr	r0, [r2, #0]
 800539c:	6018      	str	r0, [r3, #0]
			break;
 800539e:	f015 bac9 	b.w	801a934 <createProblem+0x19a8c>
		case 202 :
			strcpy(p->name,"NEW YEARS DELUSIONS");
 80053a2:	687b      	ldr	r3, [r7, #4]
 80053a4:	337c      	adds	r3, #124	; 0x7c
 80053a6:	4a35      	ldr	r2, [pc, #212]	; (800547c <createProblem+0x45d4>)
 80053a8:	461d      	mov	r5, r3
 80053aa:	4614      	mov	r4, r2
 80053ac:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80053ae:	6028      	str	r0, [r5, #0]
 80053b0:	6069      	str	r1, [r5, #4]
 80053b2:	60aa      	str	r2, [r5, #8]
 80053b4:	60eb      	str	r3, [r5, #12]
 80053b6:	6820      	ldr	r0, [r4, #0]
 80053b8:	6128      	str	r0, [r5, #16]
			p->moveSize = 8;
 80053ba:	687b      	ldr	r3, [r7, #4]
 80053bc:	2208      	movs	r2, #8
 80053be:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,F,G,A,H,D,A");
 80053c0:	687b      	ldr	r3, [r7, #4]
 80053c2:	3340      	adds	r3, #64	; 0x40
 80053c4:	4a2e      	ldr	r2, [pc, #184]	; (8005480 <createProblem+0x45d8>)
 80053c6:	461c      	mov	r4, r3
 80053c8:	4615      	mov	r5, r2
 80053ca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80053cc:	6020      	str	r0, [r4, #0]
 80053ce:	6061      	str	r1, [r4, #4]
 80053d0:	60a2      	str	r2, [r4, #8]
 80053d2:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,11,15,14,8,15,18");
 80053d4:	687b      	ldr	r3, [r7, #4]
 80053d6:	3304      	adds	r3, #4
 80053d8:	4a2a      	ldr	r2, [pc, #168]	; (8005484 <createProblem+0x45dc>)
 80053da:	461d      	mov	r5, r3
 80053dc:	4614      	mov	r4, r2
 80053de:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80053e0:	6028      	str	r0, [r5, #0]
 80053e2:	6069      	str	r1, [r5, #4]
 80053e4:	60aa      	str	r2, [r5, #8]
 80053e6:	60eb      	str	r3, [r5, #12]
 80053e8:	6820      	ldr	r0, [r4, #0]
 80053ea:	6128      	str	r0, [r5, #16]
 80053ec:	7923      	ldrb	r3, [r4, #4]
 80053ee:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 80053f0:	687b      	ldr	r3, [r7, #4]
 80053f2:	33d8      	adds	r3, #216	; 0xd8
 80053f4:	4a14      	ldr	r2, [pc, #80]	; (8005448 <createProblem+0x45a0>)
 80053f6:	461c      	mov	r4, r3
 80053f8:	4615      	mov	r5, r2
 80053fa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80053fc:	6020      	str	r0, [r4, #0]
 80053fe:	6061      	str	r1, [r4, #4]
 8005400:	60a2      	str	r2, [r4, #8]
 8005402:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7B+");
 8005404:	687b      	ldr	r3, [r7, #4]
 8005406:	33cc      	adds	r3, #204	; 0xcc
 8005408:	4a14      	ldr	r2, [pc, #80]	; (800545c <createProblem+0x45b4>)
 800540a:	6810      	ldr	r0, [r2, #0]
 800540c:	6018      	str	r0, [r3, #0]
			break;
 800540e:	f015 ba91 	b.w	801a934 <createProblem+0x19a8c>
 8005412:	bf00      	nop
 8005414:	08021d60 	.word	0x08021d60
 8005418:	08021d68 	.word	0x08021d68
 800541c:	08021d74 	.word	0x08021d74
 8005420:	0802091c 	.word	0x0802091c
 8005424:	08020830 	.word	0x08020830
 8005428:	08021d84 	.word	0x08021d84
 800542c:	08021d8c 	.word	0x08021d8c
 8005430:	08021d9c 	.word	0x08021d9c
 8005434:	08020a14 	.word	0x08020a14
 8005438:	080208f0 	.word	0x080208f0
 800543c:	08021db0 	.word	0x08021db0
 8005440:	08021dbc 	.word	0x08021dbc
 8005444:	08021dcc 	.word	0x08021dcc
 8005448:	080209d8 	.word	0x080209d8
 800544c:	08020874 	.word	0x08020874
 8005450:	08021de4 	.word	0x08021de4
 8005454:	08021df8 	.word	0x08021df8
 8005458:	08021e04 	.word	0x08021e04
 800545c:	08020dc8 	.word	0x08020dc8
 8005460:	08021e14 	.word	0x08021e14
 8005464:	08021e2c 	.word	0x08021e2c
 8005468:	08021e3c 	.word	0x08021e3c
 800546c:	08021e50 	.word	0x08021e50
 8005470:	08021e60 	.word	0x08021e60
 8005474:	08021e6c 	.word	0x08021e6c
 8005478:	08021e78 	.word	0x08021e78
 800547c:	08021e88 	.word	0x08021e88
 8005480:	08021e9c 	.word	0x08021e9c
 8005484:	08021eac 	.word	0x08021eac
		case 203 :
			strcpy(p->name,"ALLIE WARM UP");
 8005488:	687b      	ldr	r3, [r7, #4]
 800548a:	337c      	adds	r3, #124	; 0x7c
 800548c:	4ac0      	ldr	r2, [pc, #768]	; (8005790 <createProblem+0x48e8>)
 800548e:	461c      	mov	r4, r3
 8005490:	4613      	mov	r3, r2
 8005492:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005494:	6020      	str	r0, [r4, #0]
 8005496:	6061      	str	r1, [r4, #4]
 8005498:	60a2      	str	r2, [r4, #8]
 800549a:	881b      	ldrh	r3, [r3, #0]
 800549c:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 800549e:	687b      	ldr	r3, [r7, #4]
 80054a0:	2206      	movs	r2, #6
 80054a2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,D,G,J,I");
 80054a4:	687b      	ldr	r3, [r7, #4]
 80054a6:	3340      	adds	r3, #64	; 0x40
 80054a8:	4aba      	ldr	r2, [pc, #744]	; (8005794 <createProblem+0x48ec>)
 80054aa:	461c      	mov	r4, r3
 80054ac:	4613      	mov	r3, r2
 80054ae:	cb07      	ldmia	r3!, {r0, r1, r2}
 80054b0:	6020      	str	r0, [r4, #0]
 80054b2:	6061      	str	r1, [r4, #4]
 80054b4:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,11,14,16,18");
 80054b6:	687b      	ldr	r3, [r7, #4]
 80054b8:	3304      	adds	r3, #4
 80054ba:	4ab7      	ldr	r2, [pc, #732]	; (8005798 <createProblem+0x48f0>)
 80054bc:	461c      	mov	r4, r3
 80054be:	4615      	mov	r5, r2
 80054c0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80054c2:	6020      	str	r0, [r4, #0]
 80054c4:	6061      	str	r1, [r4, #4]
 80054c6:	60a2      	str	r2, [r4, #8]
 80054c8:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80054ca:	687b      	ldr	r3, [r7, #4]
 80054cc:	33d8      	adds	r3, #216	; 0xd8
 80054ce:	4ab3      	ldr	r2, [pc, #716]	; (800579c <createProblem+0x48f4>)
 80054d0:	461c      	mov	r4, r3
 80054d2:	4613      	mov	r3, r2
 80054d4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80054d6:	6020      	str	r0, [r4, #0]
 80054d8:	6061      	str	r1, [r4, #4]
 80054da:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 80054dc:	687b      	ldr	r3, [r7, #4]
 80054de:	33cc      	adds	r3, #204	; 0xcc
 80054e0:	4aaf      	ldr	r2, [pc, #700]	; (80057a0 <createProblem+0x48f8>)
 80054e2:	6810      	ldr	r0, [r2, #0]
 80054e4:	6018      	str	r0, [r3, #0]
			break;
 80054e6:	f015 ba25 	b.w	801a934 <createProblem+0x19a8c>
		case 204 :
			strcpy(p->name,"A SPY WHO LOVED ME");
 80054ea:	687b      	ldr	r3, [r7, #4]
 80054ec:	337c      	adds	r3, #124	; 0x7c
 80054ee:	4aad      	ldr	r2, [pc, #692]	; (80057a4 <createProblem+0x48fc>)
 80054f0:	461d      	mov	r5, r3
 80054f2:	4614      	mov	r4, r2
 80054f4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80054f6:	6028      	str	r0, [r5, #0]
 80054f8:	6069      	str	r1, [r5, #4]
 80054fa:	60aa      	str	r2, [r5, #8]
 80054fc:	60eb      	str	r3, [r5, #12]
 80054fe:	8823      	ldrh	r3, [r4, #0]
 8005500:	78a2      	ldrb	r2, [r4, #2]
 8005502:	822b      	strh	r3, [r5, #16]
 8005504:	4613      	mov	r3, r2
 8005506:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 7;
 8005508:	687b      	ldr	r3, [r7, #4]
 800550a:	2207      	movs	r2, #7
 800550c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,C,F,D,G,I,I");
 800550e:	687b      	ldr	r3, [r7, #4]
 8005510:	3340      	adds	r3, #64	; 0x40
 8005512:	4aa5      	ldr	r2, [pc, #660]	; (80057a8 <createProblem+0x4900>)
 8005514:	461c      	mov	r4, r3
 8005516:	4613      	mov	r3, r2
 8005518:	cb07      	ldmia	r3!, {r0, r1, r2}
 800551a:	6020      	str	r0, [r4, #0]
 800551c:	6061      	str	r1, [r4, #4]
 800551e:	60a2      	str	r2, [r4, #8]
 8005520:	881b      	ldrh	r3, [r3, #0]
 8005522:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,11,15,15,10,18");
 8005524:	687b      	ldr	r3, [r7, #4]
 8005526:	3304      	adds	r3, #4
 8005528:	4aa0      	ldr	r2, [pc, #640]	; (80057ac <createProblem+0x4904>)
 800552a:	461d      	mov	r5, r3
 800552c:	4614      	mov	r4, r2
 800552e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005530:	6028      	str	r0, [r5, #0]
 8005532:	6069      	str	r1, [r5, #4]
 8005534:	60aa      	str	r2, [r5, #8]
 8005536:	60eb      	str	r3, [r5, #12]
 8005538:	8823      	ldrh	r3, [r4, #0]
 800553a:	78a2      	ldrb	r2, [r4, #2]
 800553c:	822b      	strh	r3, [r5, #16]
 800553e:	4613      	mov	r3, r2
 8005540:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8005542:	687b      	ldr	r3, [r7, #4]
 8005544:	33d8      	adds	r3, #216	; 0xd8
 8005546:	4a9a      	ldr	r2, [pc, #616]	; (80057b0 <createProblem+0x4908>)
 8005548:	461c      	mov	r4, r3
 800554a:	4613      	mov	r3, r2
 800554c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800554e:	6020      	str	r0, [r4, #0]
 8005550:	6061      	str	r1, [r4, #4]
 8005552:	60a2      	str	r2, [r4, #8]
 8005554:	881b      	ldrh	r3, [r3, #0]
 8005556:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 8005558:	687b      	ldr	r3, [r7, #4]
 800555a:	33cc      	adds	r3, #204	; 0xcc
 800555c:	4a95      	ldr	r2, [pc, #596]	; (80057b4 <createProblem+0x490c>)
 800555e:	6810      	ldr	r0, [r2, #0]
 8005560:	6018      	str	r0, [r3, #0]
			break;
 8005562:	f015 b9e7 	b.w	801a934 <createProblem+0x19a8c>
		case 205 :
			strcpy(p->name,"BOBBI'S STRETCH");
 8005566:	687b      	ldr	r3, [r7, #4]
 8005568:	337c      	adds	r3, #124	; 0x7c
 800556a:	4a93      	ldr	r2, [pc, #588]	; (80057b8 <createProblem+0x4910>)
 800556c:	461c      	mov	r4, r3
 800556e:	4615      	mov	r5, r2
 8005570:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005572:	6020      	str	r0, [r4, #0]
 8005574:	6061      	str	r1, [r4, #4]
 8005576:	60a2      	str	r2, [r4, #8]
 8005578:	60e3      	str	r3, [r4, #12]
			p->moveSize = 5;
 800557a:	687b      	ldr	r3, [r7, #4]
 800557c:	2205      	movs	r2, #5
 800557e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,F,D,E,A");
 8005580:	687b      	ldr	r3, [r7, #4]
 8005582:	3340      	adds	r3, #64	; 0x40
 8005584:	498d      	ldr	r1, [pc, #564]	; (80057bc <createProblem+0x4914>)
 8005586:	461a      	mov	r2, r3
 8005588:	460b      	mov	r3, r1
 800558a:	cb03      	ldmia	r3!, {r0, r1}
 800558c:	6010      	str	r0, [r2, #0]
 800558e:	6051      	str	r1, [r2, #4]
 8005590:	881b      	ldrh	r3, [r3, #0]
 8005592:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,11,15,16,18");
 8005594:	687b      	ldr	r3, [r7, #4]
 8005596:	3304      	adds	r3, #4
 8005598:	4a89      	ldr	r2, [pc, #548]	; (80057c0 <createProblem+0x4918>)
 800559a:	461c      	mov	r4, r3
 800559c:	4613      	mov	r3, r2
 800559e:	cb07      	ldmia	r3!, {r0, r1, r2}
 80055a0:	6020      	str	r0, [r4, #0]
 80055a2:	6061      	str	r1, [r4, #4]
 80055a4:	60a2      	str	r2, [r4, #8]
 80055a6:	881b      	ldrh	r3, [r3, #0]
 80055a8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 80055aa:	687b      	ldr	r3, [r7, #4]
 80055ac:	33d8      	adds	r3, #216	; 0xd8
 80055ae:	4985      	ldr	r1, [pc, #532]	; (80057c4 <createProblem+0x491c>)
 80055b0:	461a      	mov	r2, r3
 80055b2:	460b      	mov	r3, r1
 80055b4:	cb03      	ldmia	r3!, {r0, r1}
 80055b6:	6010      	str	r0, [r2, #0]
 80055b8:	6051      	str	r1, [r2, #4]
 80055ba:	881b      	ldrh	r3, [r3, #0]
 80055bc:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 80055be:	687b      	ldr	r3, [r7, #4]
 80055c0:	33cc      	adds	r3, #204	; 0xcc
 80055c2:	4a7c      	ldr	r2, [pc, #496]	; (80057b4 <createProblem+0x490c>)
 80055c4:	6810      	ldr	r0, [r2, #0]
 80055c6:	6018      	str	r0, [r3, #0]
			break;
 80055c8:	f015 b9b4 	b.w	801a934 <createProblem+0x19a8c>
		case 206 :
			strcpy(p->name,"NINO LA RONCHIA");
 80055cc:	687b      	ldr	r3, [r7, #4]
 80055ce:	337c      	adds	r3, #124	; 0x7c
 80055d0:	4a7d      	ldr	r2, [pc, #500]	; (80057c8 <createProblem+0x4920>)
 80055d2:	461c      	mov	r4, r3
 80055d4:	4615      	mov	r5, r2
 80055d6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80055d8:	6020      	str	r0, [r4, #0]
 80055da:	6061      	str	r1, [r4, #4]
 80055dc:	60a2      	str	r2, [r4, #8]
 80055de:	60e3      	str	r3, [r4, #12]
			p->moveSize = 11;
 80055e0:	687b      	ldr	r3, [r7, #4]
 80055e2:	220b      	movs	r2, #11
 80055e4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,C,K,H,H,D,B,G,H,J,I");
 80055e6:	687b      	ldr	r3, [r7, #4]
 80055e8:	3340      	adds	r3, #64	; 0x40
 80055ea:	4a78      	ldr	r2, [pc, #480]	; (80057cc <createProblem+0x4924>)
 80055ec:	461d      	mov	r5, r3
 80055ee:	4614      	mov	r4, r2
 80055f0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80055f2:	6028      	str	r0, [r5, #0]
 80055f4:	6069      	str	r1, [r5, #4]
 80055f6:	60aa      	str	r2, [r5, #8]
 80055f8:	60eb      	str	r3, [r5, #12]
 80055fa:	6820      	ldr	r0, [r4, #0]
 80055fc:	6128      	str	r0, [r5, #16]
 80055fe:	88a3      	ldrh	r3, [r4, #4]
 8005600:	82ab      	strh	r3, [r5, #20]
			strcpy(p->moveNumbers,"6,5,9,13,16,7,10,10,10,5,18");
 8005602:	687b      	ldr	r3, [r7, #4]
 8005604:	3304      	adds	r3, #4
 8005606:	4a72      	ldr	r2, [pc, #456]	; (80057d0 <createProblem+0x4928>)
 8005608:	461d      	mov	r5, r3
 800560a:	4614      	mov	r4, r2
 800560c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800560e:	6028      	str	r0, [r5, #0]
 8005610:	6069      	str	r1, [r5, #4]
 8005612:	60aa      	str	r2, [r5, #8]
 8005614:	60eb      	str	r3, [r5, #12]
 8005616:	cc07      	ldmia	r4!, {r0, r1, r2}
 8005618:	6128      	str	r0, [r5, #16]
 800561a:	6169      	str	r1, [r5, #20]
 800561c:	61aa      	str	r2, [r5, #24]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,d,e");
 800561e:	687b      	ldr	r3, [r7, #4]
 8005620:	33d8      	adds	r3, #216	; 0xd8
 8005622:	4a6c      	ldr	r2, [pc, #432]	; (80057d4 <createProblem+0x492c>)
 8005624:	461d      	mov	r5, r3
 8005626:	4614      	mov	r4, r2
 8005628:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800562a:	6028      	str	r0, [r5, #0]
 800562c:	6069      	str	r1, [r5, #4]
 800562e:	60aa      	str	r2, [r5, #8]
 8005630:	60eb      	str	r3, [r5, #12]
 8005632:	6820      	ldr	r0, [r4, #0]
 8005634:	6128      	str	r0, [r5, #16]
 8005636:	88a3      	ldrh	r3, [r4, #4]
 8005638:	82ab      	strh	r3, [r5, #20]
			strcpy(p->grade, "7A");
 800563a:	687b      	ldr	r3, [r7, #4]
 800563c:	33cc      	adds	r3, #204	; 0xcc
 800563e:	4a66      	ldr	r2, [pc, #408]	; (80057d8 <createProblem+0x4930>)
 8005640:	8811      	ldrh	r1, [r2, #0]
 8005642:	7892      	ldrb	r2, [r2, #2]
 8005644:	8019      	strh	r1, [r3, #0]
 8005646:	709a      	strb	r2, [r3, #2]
			break;
 8005648:	f015 b974 	b.w	801a934 <createProblem+0x19a8c>
		case 207 :
			strcpy(p->name,"WORLDSTAR");
 800564c:	687b      	ldr	r3, [r7, #4]
 800564e:	337c      	adds	r3, #124	; 0x7c
 8005650:	4962      	ldr	r1, [pc, #392]	; (80057dc <createProblem+0x4934>)
 8005652:	461a      	mov	r2, r3
 8005654:	460b      	mov	r3, r1
 8005656:	cb03      	ldmia	r3!, {r0, r1}
 8005658:	6010      	str	r0, [r2, #0]
 800565a:	6051      	str	r1, [r2, #4]
 800565c:	881b      	ldrh	r3, [r3, #0]
 800565e:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 8005660:	687b      	ldr	r3, [r7, #4]
 8005662:	2207      	movs	r2, #7
 8005664:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,A,E,A,D,A");
 8005666:	687b      	ldr	r3, [r7, #4]
 8005668:	3340      	adds	r3, #64	; 0x40
 800566a:	4a5d      	ldr	r2, [pc, #372]	; (80057e0 <createProblem+0x4938>)
 800566c:	461c      	mov	r4, r3
 800566e:	4613      	mov	r3, r2
 8005670:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005672:	6020      	str	r0, [r4, #0]
 8005674:	6061      	str	r1, [r4, #4]
 8005676:	60a2      	str	r2, [r4, #8]
 8005678:	881b      	ldrh	r3, [r3, #0]
 800567a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,9,12,14,15,18");
 800567c:	687b      	ldr	r3, [r7, #4]
 800567e:	3304      	adds	r3, #4
 8005680:	4a58      	ldr	r2, [pc, #352]	; (80057e4 <createProblem+0x493c>)
 8005682:	461d      	mov	r5, r3
 8005684:	4614      	mov	r4, r2
 8005686:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005688:	6028      	str	r0, [r5, #0]
 800568a:	6069      	str	r1, [r5, #4]
 800568c:	60aa      	str	r2, [r5, #8]
 800568e:	60eb      	str	r3, [r5, #12]
 8005690:	8823      	ldrh	r3, [r4, #0]
 8005692:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8005694:	687b      	ldr	r3, [r7, #4]
 8005696:	33d8      	adds	r3, #216	; 0xd8
 8005698:	4a45      	ldr	r2, [pc, #276]	; (80057b0 <createProblem+0x4908>)
 800569a:	461c      	mov	r4, r3
 800569c:	4613      	mov	r3, r2
 800569e:	cb07      	ldmia	r3!, {r0, r1, r2}
 80056a0:	6020      	str	r0, [r4, #0]
 80056a2:	6061      	str	r1, [r4, #4]
 80056a4:	60a2      	str	r2, [r4, #8]
 80056a6:	881b      	ldrh	r3, [r3, #0]
 80056a8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 80056aa:	687b      	ldr	r3, [r7, #4]
 80056ac:	33cc      	adds	r3, #204	; 0xcc
 80056ae:	4a4a      	ldr	r2, [pc, #296]	; (80057d8 <createProblem+0x4930>)
 80056b0:	8811      	ldrh	r1, [r2, #0]
 80056b2:	7892      	ldrb	r2, [r2, #2]
 80056b4:	8019      	strh	r1, [r3, #0]
 80056b6:	709a      	strb	r2, [r3, #2]
			break;
 80056b8:	f015 b93c 	b.w	801a934 <createProblem+0x19a8c>
		case 208 :
			strcpy(p->name,"SLASHSLASH");
 80056bc:	687b      	ldr	r3, [r7, #4]
 80056be:	337c      	adds	r3, #124	; 0x7c
 80056c0:	4949      	ldr	r1, [pc, #292]	; (80057e8 <createProblem+0x4940>)
 80056c2:	461a      	mov	r2, r3
 80056c4:	460b      	mov	r3, r1
 80056c6:	cb03      	ldmia	r3!, {r0, r1}
 80056c8:	6010      	str	r0, [r2, #0]
 80056ca:	6051      	str	r1, [r2, #4]
 80056cc:	8819      	ldrh	r1, [r3, #0]
 80056ce:	789b      	ldrb	r3, [r3, #2]
 80056d0:	8111      	strh	r1, [r2, #8]
 80056d2:	7293      	strb	r3, [r2, #10]
			p->moveSize = 5;
 80056d4:	687b      	ldr	r3, [r7, #4]
 80056d6:	2205      	movs	r2, #5
 80056d8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,A,C,A,A");
 80056da:	687b      	ldr	r3, [r7, #4]
 80056dc:	3340      	adds	r3, #64	; 0x40
 80056de:	4943      	ldr	r1, [pc, #268]	; (80057ec <createProblem+0x4944>)
 80056e0:	461a      	mov	r2, r3
 80056e2:	460b      	mov	r3, r1
 80056e4:	cb03      	ldmia	r3!, {r0, r1}
 80056e6:	6010      	str	r0, [r2, #0]
 80056e8:	6051      	str	r1, [r2, #4]
 80056ea:	881b      	ldrh	r3, [r3, #0]
 80056ec:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,9,13,14,18");
 80056ee:	687b      	ldr	r3, [r7, #4]
 80056f0:	3304      	adds	r3, #4
 80056f2:	4a3f      	ldr	r2, [pc, #252]	; (80057f0 <createProblem+0x4948>)
 80056f4:	461c      	mov	r4, r3
 80056f6:	4613      	mov	r3, r2
 80056f8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80056fa:	6020      	str	r0, [r4, #0]
 80056fc:	6061      	str	r1, [r4, #4]
 80056fe:	60a2      	str	r2, [r4, #8]
 8005700:	781b      	ldrb	r3, [r3, #0]
 8005702:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8005704:	687b      	ldr	r3, [r7, #4]
 8005706:	33d8      	adds	r3, #216	; 0xd8
 8005708:	492e      	ldr	r1, [pc, #184]	; (80057c4 <createProblem+0x491c>)
 800570a:	461a      	mov	r2, r3
 800570c:	460b      	mov	r3, r1
 800570e:	cb03      	ldmia	r3!, {r0, r1}
 8005710:	6010      	str	r0, [r2, #0]
 8005712:	6051      	str	r1, [r2, #4]
 8005714:	881b      	ldrh	r3, [r3, #0]
 8005716:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 8005718:	687b      	ldr	r3, [r7, #4]
 800571a:	33cc      	adds	r3, #204	; 0xcc
 800571c:	4a35      	ldr	r2, [pc, #212]	; (80057f4 <createProblem+0x494c>)
 800571e:	6810      	ldr	r0, [r2, #0]
 8005720:	6018      	str	r0, [r3, #0]
			break;
 8005722:	f015 b907 	b.w	801a934 <createProblem+0x19a8c>
		case 209 :
			strcpy(p->name,"BACKSLASH");
 8005726:	687b      	ldr	r3, [r7, #4]
 8005728:	337c      	adds	r3, #124	; 0x7c
 800572a:	4933      	ldr	r1, [pc, #204]	; (80057f8 <createProblem+0x4950>)
 800572c:	461a      	mov	r2, r3
 800572e:	460b      	mov	r3, r1
 8005730:	cb03      	ldmia	r3!, {r0, r1}
 8005732:	6010      	str	r0, [r2, #0]
 8005734:	6051      	str	r1, [r2, #4]
 8005736:	881b      	ldrh	r3, [r3, #0]
 8005738:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 800573a:	687b      	ldr	r3, [r7, #4]
 800573c:	2206      	movs	r2, #6
 800573e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,G,J,I,I");
 8005740:	687b      	ldr	r3, [r7, #4]
 8005742:	3340      	adds	r3, #64	; 0x40
 8005744:	4a2d      	ldr	r2, [pc, #180]	; (80057fc <createProblem+0x4954>)
 8005746:	461c      	mov	r4, r3
 8005748:	4613      	mov	r3, r2
 800574a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800574c:	6020      	str	r0, [r4, #0]
 800574e:	6061      	str	r1, [r4, #4]
 8005750:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,9,12,14,18");
 8005752:	687b      	ldr	r3, [r7, #4]
 8005754:	3304      	adds	r3, #4
 8005756:	4a2a      	ldr	r2, [pc, #168]	; (8005800 <createProblem+0x4958>)
 8005758:	461c      	mov	r4, r3
 800575a:	4613      	mov	r3, r2
 800575c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800575e:	6020      	str	r0, [r4, #0]
 8005760:	6061      	str	r1, [r4, #4]
 8005762:	60a2      	str	r2, [r4, #8]
 8005764:	881a      	ldrh	r2, [r3, #0]
 8005766:	789b      	ldrb	r3, [r3, #2]
 8005768:	81a2      	strh	r2, [r4, #12]
 800576a:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800576c:	687b      	ldr	r3, [r7, #4]
 800576e:	33d8      	adds	r3, #216	; 0xd8
 8005770:	4a0a      	ldr	r2, [pc, #40]	; (800579c <createProblem+0x48f4>)
 8005772:	461c      	mov	r4, r3
 8005774:	4613      	mov	r3, r2
 8005776:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005778:	6020      	str	r0, [r4, #0]
 800577a:	6061      	str	r1, [r4, #4]
 800577c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 800577e:	687b      	ldr	r3, [r7, #4]
 8005780:	33cc      	adds	r3, #204	; 0xcc
 8005782:	4a15      	ldr	r2, [pc, #84]	; (80057d8 <createProblem+0x4930>)
 8005784:	8811      	ldrh	r1, [r2, #0]
 8005786:	7892      	ldrb	r2, [r2, #2]
 8005788:	8019      	strh	r1, [r3, #0]
 800578a:	709a      	strb	r2, [r3, #2]
			break;
 800578c:	f015 b8d2 	b.w	801a934 <createProblem+0x19a8c>
 8005790:	08021ec4 	.word	0x08021ec4
 8005794:	08021ed4 	.word	0x08021ed4
 8005798:	08021ee0 	.word	0x08021ee0
 800579c:	0802091c 	.word	0x0802091c
 80057a0:	08020830 	.word	0x08020830
 80057a4:	08021ef0 	.word	0x08021ef0
 80057a8:	08021f04 	.word	0x08021f04
 80057ac:	08021f14 	.word	0x08021f14
 80057b0:	08020a14 	.word	0x08020a14
 80057b4:	080209a4 	.word	0x080209a4
 80057b8:	08021f28 	.word	0x08021f28
 80057bc:	08021f38 	.word	0x08021f38
 80057c0:	08021f44 	.word	0x08021f44
 80057c4:	080208a0 	.word	0x080208a0
 80057c8:	08021f54 	.word	0x08021f54
 80057cc:	08021f64 	.word	0x08021f64
 80057d0:	08021f7c 	.word	0x08021f7c
 80057d4:	08021f98 	.word	0x08021f98
 80057d8:	08020874 	.word	0x08020874
 80057dc:	08021fb0 	.word	0x08021fb0
 80057e0:	08021fbc 	.word	0x08021fbc
 80057e4:	08021fcc 	.word	0x08021fcc
 80057e8:	08021fe0 	.word	0x08021fe0
 80057ec:	08021fec 	.word	0x08021fec
 80057f0:	08021ff8 	.word	0x08021ff8
 80057f4:	08020dc8 	.word	0x08020dc8
 80057f8:	08022008 	.word	0x08022008
 80057fc:	08022014 	.word	0x08022014
 8005800:	08021578 	.word	0x08021578
		case 21 :
			strcpy(p->name,"CHEETAHSAURUS");
 8005804:	687b      	ldr	r3, [r7, #4]
 8005806:	337c      	adds	r3, #124	; 0x7c
 8005808:	4aa6      	ldr	r2, [pc, #664]	; (8005aa4 <createProblem+0x4bfc>)
 800580a:	461c      	mov	r4, r3
 800580c:	4613      	mov	r3, r2
 800580e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005810:	6020      	str	r0, [r4, #0]
 8005812:	6061      	str	r1, [r4, #4]
 8005814:	60a2      	str	r2, [r4, #8]
 8005816:	881b      	ldrh	r3, [r3, #0]
 8005818:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 8;
 800581a:	687b      	ldr	r3, [r7, #4]
 800581c:	2208      	movs	r2, #8
 800581e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,H,E,H,G,I,G,I");
 8005820:	687b      	ldr	r3, [r7, #4]
 8005822:	3340      	adds	r3, #64	; 0x40
 8005824:	4aa0      	ldr	r2, [pc, #640]	; (8005aa8 <createProblem+0x4c00>)
 8005826:	461c      	mov	r4, r3
 8005828:	4615      	mov	r5, r2
 800582a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800582c:	6020      	str	r0, [r4, #0]
 800582e:	6061      	str	r1, [r4, #4]
 8005830:	60a2      	str	r2, [r4, #8]
 8005832:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,9,12,14,15,17,18");
 8005834:	687b      	ldr	r3, [r7, #4]
 8005836:	3304      	adds	r3, #4
 8005838:	4a9c      	ldr	r2, [pc, #624]	; (8005aac <createProblem+0x4c04>)
 800583a:	461d      	mov	r5, r3
 800583c:	4614      	mov	r4, r2
 800583e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005840:	6028      	str	r0, [r5, #0]
 8005842:	6069      	str	r1, [r5, #4]
 8005844:	60aa      	str	r2, [r5, #8]
 8005846:	60eb      	str	r3, [r5, #12]
 8005848:	6820      	ldr	r0, [r4, #0]
 800584a:	6128      	str	r0, [r5, #16]
 800584c:	7923      	ldrb	r3, [r4, #4]
 800584e:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8005850:	687b      	ldr	r3, [r7, #4]
 8005852:	33d8      	adds	r3, #216	; 0xd8
 8005854:	4a96      	ldr	r2, [pc, #600]	; (8005ab0 <createProblem+0x4c08>)
 8005856:	461c      	mov	r4, r3
 8005858:	4615      	mov	r5, r2
 800585a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800585c:	6020      	str	r0, [r4, #0]
 800585e:	6061      	str	r1, [r4, #4]
 8005860:	60a2      	str	r2, [r4, #8]
 8005862:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8005864:	687b      	ldr	r3, [r7, #4]
 8005866:	33cc      	adds	r3, #204	; 0xcc
 8005868:	4a92      	ldr	r2, [pc, #584]	; (8005ab4 <createProblem+0x4c0c>)
 800586a:	8811      	ldrh	r1, [r2, #0]
 800586c:	7892      	ldrb	r2, [r2, #2]
 800586e:	8019      	strh	r1, [r3, #0]
 8005870:	709a      	strb	r2, [r3, #2]
			break;
 8005872:	f015 b85f 	b.w	801a934 <createProblem+0x19a8c>
		case 210 :
			strcpy(p->name,"SPORGASSE, GRAZ");
 8005876:	687b      	ldr	r3, [r7, #4]
 8005878:	337c      	adds	r3, #124	; 0x7c
 800587a:	4a8f      	ldr	r2, [pc, #572]	; (8005ab8 <createProblem+0x4c10>)
 800587c:	461c      	mov	r4, r3
 800587e:	4615      	mov	r5, r2
 8005880:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005882:	6020      	str	r0, [r4, #0]
 8005884:	6061      	str	r1, [r4, #4]
 8005886:	60a2      	str	r2, [r4, #8]
 8005888:	60e3      	str	r3, [r4, #12]
			p->moveSize = 5;
 800588a:	687b      	ldr	r3, [r7, #4]
 800588c:	2205      	movs	r2, #5
 800588e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,F,E,D");
 8005890:	687b      	ldr	r3, [r7, #4]
 8005892:	3340      	adds	r3, #64	; 0x40
 8005894:	4989      	ldr	r1, [pc, #548]	; (8005abc <createProblem+0x4c14>)
 8005896:	461a      	mov	r2, r3
 8005898:	460b      	mov	r3, r1
 800589a:	cb03      	ldmia	r3!, {r0, r1}
 800589c:	6010      	str	r0, [r2, #0]
 800589e:	6051      	str	r1, [r2, #4]
 80058a0:	881b      	ldrh	r3, [r3, #0]
 80058a2:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,5,11,16,18");
 80058a4:	687b      	ldr	r3, [r7, #4]
 80058a6:	3304      	adds	r3, #4
 80058a8:	4a85      	ldr	r2, [pc, #532]	; (8005ac0 <createProblem+0x4c18>)
 80058aa:	461c      	mov	r4, r3
 80058ac:	4613      	mov	r3, r2
 80058ae:	cb07      	ldmia	r3!, {r0, r1, r2}
 80058b0:	6020      	str	r0, [r4, #0]
 80058b2:	6061      	str	r1, [r4, #4]
 80058b4:	60a2      	str	r2, [r4, #8]
 80058b6:	781b      	ldrb	r3, [r3, #0]
 80058b8:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,e");
 80058ba:	687b      	ldr	r3, [r7, #4]
 80058bc:	33d8      	adds	r3, #216	; 0xd8
 80058be:	4981      	ldr	r1, [pc, #516]	; (8005ac4 <createProblem+0x4c1c>)
 80058c0:	461a      	mov	r2, r3
 80058c2:	460b      	mov	r3, r1
 80058c4:	cb03      	ldmia	r3!, {r0, r1}
 80058c6:	6010      	str	r0, [r2, #0]
 80058c8:	6051      	str	r1, [r2, #4]
 80058ca:	881b      	ldrh	r3, [r3, #0]
 80058cc:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B");
 80058ce:	687b      	ldr	r3, [r7, #4]
 80058d0:	33cc      	adds	r3, #204	; 0xcc
 80058d2:	4a7d      	ldr	r2, [pc, #500]	; (8005ac8 <createProblem+0x4c20>)
 80058d4:	8811      	ldrh	r1, [r2, #0]
 80058d6:	7892      	ldrb	r2, [r2, #2]
 80058d8:	8019      	strh	r1, [r3, #0]
 80058da:	709a      	strb	r2, [r3, #2]
			break;
 80058dc:	f015 b82a 	b.w	801a934 <createProblem+0x19a8c>
		case 211 :
			strcpy(p->name,"YAYABLACK");
 80058e0:	687b      	ldr	r3, [r7, #4]
 80058e2:	337c      	adds	r3, #124	; 0x7c
 80058e4:	4979      	ldr	r1, [pc, #484]	; (8005acc <createProblem+0x4c24>)
 80058e6:	461a      	mov	r2, r3
 80058e8:	460b      	mov	r3, r1
 80058ea:	cb03      	ldmia	r3!, {r0, r1}
 80058ec:	6010      	str	r0, [r2, #0]
 80058ee:	6051      	str	r1, [r2, #4]
 80058f0:	881b      	ldrh	r3, [r3, #0]
 80058f2:	8113      	strh	r3, [r2, #8]
			p->moveSize = 8;
 80058f4:	687b      	ldr	r3, [r7, #4]
 80058f6:	2208      	movs	r2, #8
 80058f8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,J,J,E,H,C,D,D");
 80058fa:	687b      	ldr	r3, [r7, #4]
 80058fc:	3340      	adds	r3, #64	; 0x40
 80058fe:	4a74      	ldr	r2, [pc, #464]	; (8005ad0 <createProblem+0x4c28>)
 8005900:	461c      	mov	r4, r3
 8005902:	4615      	mov	r5, r2
 8005904:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005906:	6020      	str	r0, [r4, #0]
 8005908:	6061      	str	r1, [r4, #4]
 800590a:	60a2      	str	r2, [r4, #8]
 800590c:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,7,8,10,13,15,18");
 800590e:	687b      	ldr	r3, [r7, #4]
 8005910:	3304      	adds	r3, #4
 8005912:	4a70      	ldr	r2, [pc, #448]	; (8005ad4 <createProblem+0x4c2c>)
 8005914:	461d      	mov	r5, r3
 8005916:	4614      	mov	r4, r2
 8005918:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800591a:	6028      	str	r0, [r5, #0]
 800591c:	6069      	str	r1, [r5, #4]
 800591e:	60aa      	str	r2, [r5, #8]
 8005920:	60eb      	str	r3, [r5, #12]
 8005922:	6820      	ldr	r0, [r4, #0]
 8005924:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8005926:	687b      	ldr	r3, [r7, #4]
 8005928:	33d8      	adds	r3, #216	; 0xd8
 800592a:	4a6b      	ldr	r2, [pc, #428]	; (8005ad8 <createProblem+0x4c30>)
 800592c:	461c      	mov	r4, r3
 800592e:	4615      	mov	r5, r2
 8005930:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005932:	6020      	str	r0, [r4, #0]
 8005934:	6061      	str	r1, [r4, #4]
 8005936:	60a2      	str	r2, [r4, #8]
 8005938:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800593a:	687b      	ldr	r3, [r7, #4]
 800593c:	33cc      	adds	r3, #204	; 0xcc
 800593e:	4a67      	ldr	r2, [pc, #412]	; (8005adc <createProblem+0x4c34>)
 8005940:	6810      	ldr	r0, [r2, #0]
 8005942:	6018      	str	r0, [r3, #0]
			break;
 8005944:	f014 bff6 	b.w	801a934 <createProblem+0x19a8c>
		case 212 :
			strcpy(p->name,"TRAVEQUE");
 8005948:	687b      	ldr	r3, [r7, #4]
 800594a:	337c      	adds	r3, #124	; 0x7c
 800594c:	4964      	ldr	r1, [pc, #400]	; (8005ae0 <createProblem+0x4c38>)
 800594e:	461a      	mov	r2, r3
 8005950:	460b      	mov	r3, r1
 8005952:	cb03      	ldmia	r3!, {r0, r1}
 8005954:	6010      	str	r0, [r2, #0]
 8005956:	6051      	str	r1, [r2, #4]
 8005958:	781b      	ldrb	r3, [r3, #0]
 800595a:	7213      	strb	r3, [r2, #8]
			p->moveSize = 10;
 800595c:	687b      	ldr	r3, [r7, #4]
 800595e:	220a      	movs	r2, #10
 8005960:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,C,J,H,H,H,G,E,H,I");
 8005962:	687b      	ldr	r3, [r7, #4]
 8005964:	3340      	adds	r3, #64	; 0x40
 8005966:	4a5f      	ldr	r2, [pc, #380]	; (8005ae4 <createProblem+0x4c3c>)
 8005968:	461d      	mov	r5, r3
 800596a:	4614      	mov	r4, r2
 800596c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800596e:	6028      	str	r0, [r5, #0]
 8005970:	6069      	str	r1, [r5, #4]
 8005972:	60aa      	str	r2, [r5, #8]
 8005974:	60eb      	str	r3, [r5, #12]
 8005976:	6820      	ldr	r0, [r4, #0]
 8005978:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"6,5,7,16,12,8,4,6,5,18");
 800597a:	687b      	ldr	r3, [r7, #4]
 800597c:	3304      	adds	r3, #4
 800597e:	4a5a      	ldr	r2, [pc, #360]	; (8005ae8 <createProblem+0x4c40>)
 8005980:	461c      	mov	r4, r3
 8005982:	4615      	mov	r5, r2
 8005984:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005986:	6020      	str	r0, [r4, #0]
 8005988:	6061      	str	r1, [r4, #4]
 800598a:	60a2      	str	r2, [r4, #8]
 800598c:	60e3      	str	r3, [r4, #12]
 800598e:	6828      	ldr	r0, [r5, #0]
 8005990:	6120      	str	r0, [r4, #16]
 8005992:	88ab      	ldrh	r3, [r5, #4]
 8005994:	79aa      	ldrb	r2, [r5, #6]
 8005996:	82a3      	strh	r3, [r4, #20]
 8005998:	4613      	mov	r3, r2
 800599a:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,e");
 800599c:	687b      	ldr	r3, [r7, #4]
 800599e:	33d8      	adds	r3, #216	; 0xd8
 80059a0:	4a52      	ldr	r2, [pc, #328]	; (8005aec <createProblem+0x4c44>)
 80059a2:	461d      	mov	r5, r3
 80059a4:	4614      	mov	r4, r2
 80059a6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80059a8:	6028      	str	r0, [r5, #0]
 80059aa:	6069      	str	r1, [r5, #4]
 80059ac:	60aa      	str	r2, [r5, #8]
 80059ae:	60eb      	str	r3, [r5, #12]
 80059b0:	6820      	ldr	r0, [r4, #0]
 80059b2:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "6C");
 80059b4:	687b      	ldr	r3, [r7, #4]
 80059b6:	33cc      	adds	r3, #204	; 0xcc
 80059b8:	4a3e      	ldr	r2, [pc, #248]	; (8005ab4 <createProblem+0x4c0c>)
 80059ba:	8811      	ldrh	r1, [r2, #0]
 80059bc:	7892      	ldrb	r2, [r2, #2]
 80059be:	8019      	strh	r1, [r3, #0]
 80059c0:	709a      	strb	r2, [r3, #2]
			break;
 80059c2:	f014 bfb7 	b.w	801a934 <createProblem+0x19a8c>
		case 213 :
			strcpy(p->name,"TRAVEQUE II");
 80059c6:	687b      	ldr	r3, [r7, #4]
 80059c8:	337c      	adds	r3, #124	; 0x7c
 80059ca:	4a49      	ldr	r2, [pc, #292]	; (8005af0 <createProblem+0x4c48>)
 80059cc:	461c      	mov	r4, r3
 80059ce:	4613      	mov	r3, r2
 80059d0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80059d2:	6020      	str	r0, [r4, #0]
 80059d4:	6061      	str	r1, [r4, #4]
 80059d6:	60a2      	str	r2, [r4, #8]
			p->moveSize = 11;
 80059d8:	687b      	ldr	r3, [r7, #4]
 80059da:	220b      	movs	r2, #11
 80059dc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,G,C,D,K,H,H,K,G,I");
 80059de:	687b      	ldr	r3, [r7, #4]
 80059e0:	3340      	adds	r3, #64	; 0x40
 80059e2:	4a44      	ldr	r2, [pc, #272]	; (8005af4 <createProblem+0x4c4c>)
 80059e4:	461d      	mov	r5, r3
 80059e6:	4614      	mov	r4, r2
 80059e8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80059ea:	6028      	str	r0, [r5, #0]
 80059ec:	6069      	str	r1, [r5, #4]
 80059ee:	60aa      	str	r2, [r5, #8]
 80059f0:	60eb      	str	r3, [r5, #12]
 80059f2:	6820      	ldr	r0, [r4, #0]
 80059f4:	6128      	str	r0, [r5, #16]
 80059f6:	88a3      	ldrh	r3, [r4, #4]
 80059f8:	82ab      	strh	r3, [r5, #20]
			strcpy(p->moveNumbers,"5,6,4,8,7,9,8,12,14,15,18");
 80059fa:	687b      	ldr	r3, [r7, #4]
 80059fc:	3304      	adds	r3, #4
 80059fe:	4a3e      	ldr	r2, [pc, #248]	; (8005af8 <createProblem+0x4c50>)
 8005a00:	461d      	mov	r5, r3
 8005a02:	4614      	mov	r4, r2
 8005a04:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005a06:	6028      	str	r0, [r5, #0]
 8005a08:	6069      	str	r1, [r5, #4]
 8005a0a:	60aa      	str	r2, [r5, #8]
 8005a0c:	60eb      	str	r3, [r5, #12]
 8005a0e:	cc03      	ldmia	r4!, {r0, r1}
 8005a10:	6128      	str	r0, [r5, #16]
 8005a12:	6169      	str	r1, [r5, #20]
 8005a14:	8823      	ldrh	r3, [r4, #0]
 8005a16:	832b      	strh	r3, [r5, #24]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,d,e");
 8005a18:	687b      	ldr	r3, [r7, #4]
 8005a1a:	33d8      	adds	r3, #216	; 0xd8
 8005a1c:	4a37      	ldr	r2, [pc, #220]	; (8005afc <createProblem+0x4c54>)
 8005a1e:	461d      	mov	r5, r3
 8005a20:	4614      	mov	r4, r2
 8005a22:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005a24:	6028      	str	r0, [r5, #0]
 8005a26:	6069      	str	r1, [r5, #4]
 8005a28:	60aa      	str	r2, [r5, #8]
 8005a2a:	60eb      	str	r3, [r5, #12]
 8005a2c:	6820      	ldr	r0, [r4, #0]
 8005a2e:	6128      	str	r0, [r5, #16]
 8005a30:	88a3      	ldrh	r3, [r4, #4]
 8005a32:	82ab      	strh	r3, [r5, #20]
			strcpy(p->grade, "6C");
 8005a34:	687b      	ldr	r3, [r7, #4]
 8005a36:	33cc      	adds	r3, #204	; 0xcc
 8005a38:	4a1e      	ldr	r2, [pc, #120]	; (8005ab4 <createProblem+0x4c0c>)
 8005a3a:	8811      	ldrh	r1, [r2, #0]
 8005a3c:	7892      	ldrb	r2, [r2, #2]
 8005a3e:	8019      	strh	r1, [r3, #0]
 8005a40:	709a      	strb	r2, [r3, #2]
			break;
 8005a42:	f014 bf77 	b.w	801a934 <createProblem+0x19a8c>
		case 214 :
			strcpy(p->name,"BAMBINI");
 8005a46:	687b      	ldr	r3, [r7, #4]
 8005a48:	337c      	adds	r3, #124	; 0x7c
 8005a4a:	492d      	ldr	r1, [pc, #180]	; (8005b00 <createProblem+0x4c58>)
 8005a4c:	461a      	mov	r2, r3
 8005a4e:	460b      	mov	r3, r1
 8005a50:	cb03      	ldmia	r3!, {r0, r1}
 8005a52:	6010      	str	r0, [r2, #0]
 8005a54:	6051      	str	r1, [r2, #4]
			p->moveSize = 6;
 8005a56:	687b      	ldr	r3, [r7, #4]
 8005a58:	2206      	movs	r2, #6
 8005a5a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,F,C,D,D");
 8005a5c:	687b      	ldr	r3, [r7, #4]
 8005a5e:	3340      	adds	r3, #64	; 0x40
 8005a60:	4a28      	ldr	r2, [pc, #160]	; (8005b04 <createProblem+0x4c5c>)
 8005a62:	461c      	mov	r4, r3
 8005a64:	4613      	mov	r3, r2
 8005a66:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005a68:	6020      	str	r0, [r4, #0]
 8005a6a:	6061      	str	r1, [r4, #4]
 8005a6c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,11,13,15,18");
 8005a6e:	687b      	ldr	r3, [r7, #4]
 8005a70:	3304      	adds	r3, #4
 8005a72:	4a25      	ldr	r2, [pc, #148]	; (8005b08 <createProblem+0x4c60>)
 8005a74:	461c      	mov	r4, r3
 8005a76:	4615      	mov	r5, r2
 8005a78:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005a7a:	6020      	str	r0, [r4, #0]
 8005a7c:	6061      	str	r1, [r4, #4]
 8005a7e:	60a2      	str	r2, [r4, #8]
 8005a80:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8005a82:	687b      	ldr	r3, [r7, #4]
 8005a84:	33d8      	adds	r3, #216	; 0xd8
 8005a86:	4a21      	ldr	r2, [pc, #132]	; (8005b0c <createProblem+0x4c64>)
 8005a88:	461c      	mov	r4, r3
 8005a8a:	4613      	mov	r3, r2
 8005a8c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005a8e:	6020      	str	r0, [r4, #0]
 8005a90:	6061      	str	r1, [r4, #4]
 8005a92:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 8005a94:	687b      	ldr	r3, [r7, #4]
 8005a96:	33cc      	adds	r3, #204	; 0xcc
 8005a98:	4a10      	ldr	r2, [pc, #64]	; (8005adc <createProblem+0x4c34>)
 8005a9a:	6810      	ldr	r0, [r2, #0]
 8005a9c:	6018      	str	r0, [r3, #0]
			break;
 8005a9e:	f014 bf49 	b.w	801a934 <createProblem+0x19a8c>
 8005aa2:	bf00      	nop
 8005aa4:	08022020 	.word	0x08022020
 8005aa8:	08022030 	.word	0x08022030
 8005aac:	08022040 	.word	0x08022040
 8005ab0:	080209d8 	.word	0x080209d8
 8005ab4:	080208f0 	.word	0x080208f0
 8005ab8:	08022058 	.word	0x08022058
 8005abc:	08022068 	.word	0x08022068
 8005ac0:	08022074 	.word	0x08022074
 8005ac4:	08021748 	.word	0x08021748
 8005ac8:	080208ac 	.word	0x080208ac
 8005acc:	08022084 	.word	0x08022084
 8005ad0:	08022090 	.word	0x08022090
 8005ad4:	080220a0 	.word	0x080220a0
 8005ad8:	08020a4c 	.word	0x08020a4c
 8005adc:	08020830 	.word	0x08020830
 8005ae0:	080220b4 	.word	0x080220b4
 8005ae4:	080220c0 	.word	0x080220c0
 8005ae8:	080220d4 	.word	0x080220d4
 8005aec:	08020b7c 	.word	0x08020b7c
 8005af0:	080220ec 	.word	0x080220ec
 8005af4:	080220f8 	.word	0x080220f8
 8005af8:	08022110 	.word	0x08022110
 8005afc:	08021f98 	.word	0x08021f98
 8005b00:	0802212c 	.word	0x0802212c
 8005b04:	08022134 	.word	0x08022134
 8005b08:	08022140 	.word	0x08022140
 8005b0c:	0802091c 	.word	0x0802091c
		case 215 :
			strcpy(p->name,"BLACK ON RICE");
 8005b10:	687b      	ldr	r3, [r7, #4]
 8005b12:	337c      	adds	r3, #124	; 0x7c
 8005b14:	4ab0      	ldr	r2, [pc, #704]	; (8005dd8 <createProblem+0x4f30>)
 8005b16:	461c      	mov	r4, r3
 8005b18:	4613      	mov	r3, r2
 8005b1a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005b1c:	6020      	str	r0, [r4, #0]
 8005b1e:	6061      	str	r1, [r4, #4]
 8005b20:	60a2      	str	r2, [r4, #8]
 8005b22:	881b      	ldrh	r3, [r3, #0]
 8005b24:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 8005b26:	687b      	ldr	r3, [r7, #4]
 8005b28:	2207      	movs	r2, #7
 8005b2a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,E,H,E,C,A");
 8005b2c:	687b      	ldr	r3, [r7, #4]
 8005b2e:	3340      	adds	r3, #64	; 0x40
 8005b30:	4aaa      	ldr	r2, [pc, #680]	; (8005ddc <createProblem+0x4f34>)
 8005b32:	461c      	mov	r4, r3
 8005b34:	4613      	mov	r3, r2
 8005b36:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005b38:	6020      	str	r0, [r4, #0]
 8005b3a:	6061      	str	r1, [r4, #4]
 8005b3c:	60a2      	str	r2, [r4, #8]
 8005b3e:	881b      	ldrh	r3, [r3, #0]
 8005b40:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,4,8,10,16,13,18");
 8005b42:	687b      	ldr	r3, [r7, #4]
 8005b44:	3304      	adds	r3, #4
 8005b46:	4aa6      	ldr	r2, [pc, #664]	; (8005de0 <createProblem+0x4f38>)
 8005b48:	461d      	mov	r5, r3
 8005b4a:	4614      	mov	r4, r2
 8005b4c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005b4e:	6028      	str	r0, [r5, #0]
 8005b50:	6069      	str	r1, [r5, #4]
 8005b52:	60aa      	str	r2, [r5, #8]
 8005b54:	60eb      	str	r3, [r5, #12]
 8005b56:	8823      	ldrh	r3, [r4, #0]
 8005b58:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8005b5a:	687b      	ldr	r3, [r7, #4]
 8005b5c:	33d8      	adds	r3, #216	; 0xd8
 8005b5e:	4aa1      	ldr	r2, [pc, #644]	; (8005de4 <createProblem+0x4f3c>)
 8005b60:	461c      	mov	r4, r3
 8005b62:	4613      	mov	r3, r2
 8005b64:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005b66:	6020      	str	r0, [r4, #0]
 8005b68:	6061      	str	r1, [r4, #4]
 8005b6a:	60a2      	str	r2, [r4, #8]
 8005b6c:	881b      	ldrh	r3, [r3, #0]
 8005b6e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8005b70:	687b      	ldr	r3, [r7, #4]
 8005b72:	33cc      	adds	r3, #204	; 0xcc
 8005b74:	4a9c      	ldr	r2, [pc, #624]	; (8005de8 <createProblem+0x4f40>)
 8005b76:	6810      	ldr	r0, [r2, #0]
 8005b78:	6018      	str	r0, [r3, #0]
			break;
 8005b7a:	f014 bedb 	b.w	801a934 <createProblem+0x19a8c>
		case 216 :
			strcpy(p->name,"ALL BLACK ERRTHANG");
 8005b7e:	687b      	ldr	r3, [r7, #4]
 8005b80:	337c      	adds	r3, #124	; 0x7c
 8005b82:	4a9a      	ldr	r2, [pc, #616]	; (8005dec <createProblem+0x4f44>)
 8005b84:	461d      	mov	r5, r3
 8005b86:	4614      	mov	r4, r2
 8005b88:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005b8a:	6028      	str	r0, [r5, #0]
 8005b8c:	6069      	str	r1, [r5, #4]
 8005b8e:	60aa      	str	r2, [r5, #8]
 8005b90:	60eb      	str	r3, [r5, #12]
 8005b92:	8823      	ldrh	r3, [r4, #0]
 8005b94:	78a2      	ldrb	r2, [r4, #2]
 8005b96:	822b      	strh	r3, [r5, #16]
 8005b98:	4613      	mov	r3, r2
 8005b9a:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 5;
 8005b9c:	687b      	ldr	r3, [r7, #4]
 8005b9e:	2205      	movs	r2, #5
 8005ba0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,E,G,A");
 8005ba2:	687b      	ldr	r3, [r7, #4]
 8005ba4:	3340      	adds	r3, #64	; 0x40
 8005ba6:	4992      	ldr	r1, [pc, #584]	; (8005df0 <createProblem+0x4f48>)
 8005ba8:	461a      	mov	r2, r3
 8005baa:	460b      	mov	r3, r1
 8005bac:	cb03      	ldmia	r3!, {r0, r1}
 8005bae:	6010      	str	r0, [r2, #0]
 8005bb0:	6051      	str	r1, [r2, #4]
 8005bb2:	881b      	ldrh	r3, [r3, #0]
 8005bb4:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,14,17,18");
 8005bb6:	687b      	ldr	r3, [r7, #4]
 8005bb8:	3304      	adds	r3, #4
 8005bba:	4a8e      	ldr	r2, [pc, #568]	; (8005df4 <createProblem+0x4f4c>)
 8005bbc:	461c      	mov	r4, r3
 8005bbe:	4613      	mov	r3, r2
 8005bc0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005bc2:	6020      	str	r0, [r4, #0]
 8005bc4:	6061      	str	r1, [r4, #4]
 8005bc6:	60a2      	str	r2, [r4, #8]
 8005bc8:	881b      	ldrh	r3, [r3, #0]
 8005bca:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8005bcc:	687b      	ldr	r3, [r7, #4]
 8005bce:	33d8      	adds	r3, #216	; 0xd8
 8005bd0:	4989      	ldr	r1, [pc, #548]	; (8005df8 <createProblem+0x4f50>)
 8005bd2:	461a      	mov	r2, r3
 8005bd4:	460b      	mov	r3, r1
 8005bd6:	cb03      	ldmia	r3!, {r0, r1}
 8005bd8:	6010      	str	r0, [r2, #0]
 8005bda:	6051      	str	r1, [r2, #4]
 8005bdc:	881b      	ldrh	r3, [r3, #0]
 8005bde:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7C");
 8005be0:	687b      	ldr	r3, [r7, #4]
 8005be2:	33cc      	adds	r3, #204	; 0xcc
 8005be4:	4a85      	ldr	r2, [pc, #532]	; (8005dfc <createProblem+0x4f54>)
 8005be6:	8811      	ldrh	r1, [r2, #0]
 8005be8:	7892      	ldrb	r2, [r2, #2]
 8005bea:	8019      	strh	r1, [r3, #0]
 8005bec:	709a      	strb	r2, [r3, #2]
			break;
 8005bee:	f014 bea1 	b.w	801a934 <createProblem+0x19a8c>
		case 217 :
			strcpy(p->name,"MO6.1");
 8005bf2:	687b      	ldr	r3, [r7, #4]
 8005bf4:	337c      	adds	r3, #124	; 0x7c
 8005bf6:	4a82      	ldr	r2, [pc, #520]	; (8005e00 <createProblem+0x4f58>)
 8005bf8:	6810      	ldr	r0, [r2, #0]
 8005bfa:	6018      	str	r0, [r3, #0]
 8005bfc:	8892      	ldrh	r2, [r2, #4]
 8005bfe:	809a      	strh	r2, [r3, #4]
			p->moveSize = 6;
 8005c00:	687b      	ldr	r3, [r7, #4]
 8005c02:	2206      	movs	r2, #6
 8005c04:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,H,D,D,D");
 8005c06:	687b      	ldr	r3, [r7, #4]
 8005c08:	3340      	adds	r3, #64	; 0x40
 8005c0a:	4a7e      	ldr	r2, [pc, #504]	; (8005e04 <createProblem+0x4f5c>)
 8005c0c:	461c      	mov	r4, r3
 8005c0e:	4613      	mov	r3, r2
 8005c10:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005c12:	6020      	str	r0, [r4, #0]
 8005c14:	6061      	str	r1, [r4, #4]
 8005c16:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,5,10,15,11,18");
 8005c18:	687b      	ldr	r3, [r7, #4]
 8005c1a:	3304      	adds	r3, #4
 8005c1c:	4a7a      	ldr	r2, [pc, #488]	; (8005e08 <createProblem+0x4f60>)
 8005c1e:	461c      	mov	r4, r3
 8005c20:	4615      	mov	r5, r2
 8005c22:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005c24:	6020      	str	r0, [r4, #0]
 8005c26:	6061      	str	r1, [r4, #4]
 8005c28:	60a2      	str	r2, [r4, #8]
 8005c2a:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8005c2c:	687b      	ldr	r3, [r7, #4]
 8005c2e:	33d8      	adds	r3, #216	; 0xd8
 8005c30:	4a76      	ldr	r2, [pc, #472]	; (8005e0c <createProblem+0x4f64>)
 8005c32:	461c      	mov	r4, r3
 8005c34:	4613      	mov	r3, r2
 8005c36:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005c38:	6020      	str	r0, [r4, #0]
 8005c3a:	6061      	str	r1, [r4, #4]
 8005c3c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8005c3e:	687b      	ldr	r3, [r7, #4]
 8005c40:	33cc      	adds	r3, #204	; 0xcc
 8005c42:	4a73      	ldr	r2, [pc, #460]	; (8005e10 <createProblem+0x4f68>)
 8005c44:	8811      	ldrh	r1, [r2, #0]
 8005c46:	7892      	ldrb	r2, [r2, #2]
 8005c48:	8019      	strh	r1, [r3, #0]
 8005c4a:	709a      	strb	r2, [r3, #2]
			break;
 8005c4c:	f014 be72 	b.w	801a934 <createProblem+0x19a8c>
		case 218 :
			strcpy(p->name,"LONDON FROG");
 8005c50:	687b      	ldr	r3, [r7, #4]
 8005c52:	337c      	adds	r3, #124	; 0x7c
 8005c54:	4a6f      	ldr	r2, [pc, #444]	; (8005e14 <createProblem+0x4f6c>)
 8005c56:	461c      	mov	r4, r3
 8005c58:	4613      	mov	r3, r2
 8005c5a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005c5c:	6020      	str	r0, [r4, #0]
 8005c5e:	6061      	str	r1, [r4, #4]
 8005c60:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 8005c62:	687b      	ldr	r3, [r7, #4]
 8005c64:	2206      	movs	r2, #6
 8005c66:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,G,F,I,I");
 8005c68:	687b      	ldr	r3, [r7, #4]
 8005c6a:	3340      	adds	r3, #64	; 0x40
 8005c6c:	4a6a      	ldr	r2, [pc, #424]	; (8005e18 <createProblem+0x4f70>)
 8005c6e:	461c      	mov	r4, r3
 8005c70:	4613      	mov	r3, r2
 8005c72:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005c74:	6020      	str	r0, [r4, #0]
 8005c76:	6061      	str	r1, [r4, #4]
 8005c78:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,7,9,11,14,18");
 8005c7a:	687b      	ldr	r3, [r7, #4]
 8005c7c:	3304      	adds	r3, #4
 8005c7e:	4a67      	ldr	r2, [pc, #412]	; (8005e1c <createProblem+0x4f74>)
 8005c80:	461c      	mov	r4, r3
 8005c82:	4613      	mov	r3, r2
 8005c84:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005c86:	6020      	str	r0, [r4, #0]
 8005c88:	6061      	str	r1, [r4, #4]
 8005c8a:	60a2      	str	r2, [r4, #8]
 8005c8c:	881a      	ldrh	r2, [r3, #0]
 8005c8e:	789b      	ldrb	r3, [r3, #2]
 8005c90:	81a2      	strh	r2, [r4, #12]
 8005c92:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8005c94:	687b      	ldr	r3, [r7, #4]
 8005c96:	33d8      	adds	r3, #216	; 0xd8
 8005c98:	4a5c      	ldr	r2, [pc, #368]	; (8005e0c <createProblem+0x4f64>)
 8005c9a:	461c      	mov	r4, r3
 8005c9c:	4613      	mov	r3, r2
 8005c9e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005ca0:	6020      	str	r0, [r4, #0]
 8005ca2:	6061      	str	r1, [r4, #4]
 8005ca4:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8005ca6:	687b      	ldr	r3, [r7, #4]
 8005ca8:	33cc      	adds	r3, #204	; 0xcc
 8005caa:	4a59      	ldr	r2, [pc, #356]	; (8005e10 <createProblem+0x4f68>)
 8005cac:	8811      	ldrh	r1, [r2, #0]
 8005cae:	7892      	ldrb	r2, [r2, #2]
 8005cb0:	8019      	strh	r1, [r3, #0]
 8005cb2:	709a      	strb	r2, [r3, #2]
			break;
 8005cb4:	f014 be3e 	b.w	801a934 <createProblem+0x19a8c>
		case 219 :
			strcpy(p->name,"CAPTAIN AUBREY");
 8005cb8:	687b      	ldr	r3, [r7, #4]
 8005cba:	337c      	adds	r3, #124	; 0x7c
 8005cbc:	4a58      	ldr	r2, [pc, #352]	; (8005e20 <createProblem+0x4f78>)
 8005cbe:	461c      	mov	r4, r3
 8005cc0:	4613      	mov	r3, r2
 8005cc2:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005cc4:	6020      	str	r0, [r4, #0]
 8005cc6:	6061      	str	r1, [r4, #4]
 8005cc8:	60a2      	str	r2, [r4, #8]
 8005cca:	881a      	ldrh	r2, [r3, #0]
 8005ccc:	789b      	ldrb	r3, [r3, #2]
 8005cce:	81a2      	strh	r2, [r4, #12]
 8005cd0:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 5;
 8005cd2:	687b      	ldr	r3, [r7, #4]
 8005cd4:	2205      	movs	r2, #5
 8005cd6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,F,I,I");
 8005cd8:	687b      	ldr	r3, [r7, #4]
 8005cda:	3340      	adds	r3, #64	; 0x40
 8005cdc:	4951      	ldr	r1, [pc, #324]	; (8005e24 <createProblem+0x4f7c>)
 8005cde:	461a      	mov	r2, r3
 8005ce0:	460b      	mov	r3, r1
 8005ce2:	cb03      	ldmia	r3!, {r0, r1}
 8005ce4:	6010      	str	r0, [r2, #0]
 8005ce6:	6051      	str	r1, [r2, #4]
 8005ce8:	881b      	ldrh	r3, [r3, #0]
 8005cea:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,8,11,14,18");
 8005cec:	687b      	ldr	r3, [r7, #4]
 8005cee:	3304      	adds	r3, #4
 8005cf0:	4a4d      	ldr	r2, [pc, #308]	; (8005e28 <createProblem+0x4f80>)
 8005cf2:	461c      	mov	r4, r3
 8005cf4:	4613      	mov	r3, r2
 8005cf6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005cf8:	6020      	str	r0, [r4, #0]
 8005cfa:	6061      	str	r1, [r4, #4]
 8005cfc:	60a2      	str	r2, [r4, #8]
 8005cfe:	781b      	ldrb	r3, [r3, #0]
 8005d00:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8005d02:	687b      	ldr	r3, [r7, #4]
 8005d04:	33d8      	adds	r3, #216	; 0xd8
 8005d06:	493c      	ldr	r1, [pc, #240]	; (8005df8 <createProblem+0x4f50>)
 8005d08:	461a      	mov	r2, r3
 8005d0a:	460b      	mov	r3, r1
 8005d0c:	cb03      	ldmia	r3!, {r0, r1}
 8005d0e:	6010      	str	r0, [r2, #0]
 8005d10:	6051      	str	r1, [r2, #4]
 8005d12:	881b      	ldrh	r3, [r3, #0]
 8005d14:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 8005d16:	687b      	ldr	r3, [r7, #4]
 8005d18:	33cc      	adds	r3, #204	; 0xcc
 8005d1a:	4a44      	ldr	r2, [pc, #272]	; (8005e2c <createProblem+0x4f84>)
 8005d1c:	6810      	ldr	r0, [r2, #0]
 8005d1e:	6018      	str	r0, [r3, #0]
			break;
 8005d20:	f014 be08 	b.w	801a934 <createProblem+0x19a8c>
		case 22 :
			strcpy(p->name,"ANA");
 8005d24:	687b      	ldr	r3, [r7, #4]
 8005d26:	337c      	adds	r3, #124	; 0x7c
 8005d28:	4a41      	ldr	r2, [pc, #260]	; (8005e30 <createProblem+0x4f88>)
 8005d2a:	6810      	ldr	r0, [r2, #0]
 8005d2c:	6018      	str	r0, [r3, #0]
			p->moveSize = 6;
 8005d2e:	687b      	ldr	r3, [r7, #4]
 8005d30:	2206      	movs	r2, #6
 8005d32:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,J,I,H,E,D");
 8005d34:	687b      	ldr	r3, [r7, #4]
 8005d36:	3340      	adds	r3, #64	; 0x40
 8005d38:	4a3e      	ldr	r2, [pc, #248]	; (8005e34 <createProblem+0x4f8c>)
 8005d3a:	461c      	mov	r4, r3
 8005d3c:	4613      	mov	r3, r2
 8005d3e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005d40:	6020      	str	r0, [r4, #0]
 8005d42:	6061      	str	r1, [r4, #4]
 8005d44:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,7,10,13,16,18");
 8005d46:	687b      	ldr	r3, [r7, #4]
 8005d48:	3304      	adds	r3, #4
 8005d4a:	4a3b      	ldr	r2, [pc, #236]	; (8005e38 <createProblem+0x4f90>)
 8005d4c:	461c      	mov	r4, r3
 8005d4e:	4615      	mov	r5, r2
 8005d50:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005d52:	6020      	str	r0, [r4, #0]
 8005d54:	6061      	str	r1, [r4, #4]
 8005d56:	60a2      	str	r2, [r4, #8]
 8005d58:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8005d5a:	687b      	ldr	r3, [r7, #4]
 8005d5c:	33d8      	adds	r3, #216	; 0xd8
 8005d5e:	4a2b      	ldr	r2, [pc, #172]	; (8005e0c <createProblem+0x4f64>)
 8005d60:	461c      	mov	r4, r3
 8005d62:	4613      	mov	r3, r2
 8005d64:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005d66:	6020      	str	r0, [r4, #0]
 8005d68:	6061      	str	r1, [r4, #4]
 8005d6a:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 8005d6c:	687b      	ldr	r3, [r7, #4]
 8005d6e:	33cc      	adds	r3, #204	; 0xcc
 8005d70:	4a32      	ldr	r2, [pc, #200]	; (8005e3c <createProblem+0x4f94>)
 8005d72:	6810      	ldr	r0, [r2, #0]
 8005d74:	6018      	str	r0, [r3, #0]
			break;
 8005d76:	f014 bddd 	b.w	801a934 <createProblem+0x19a8c>
		case 220 :
			strcpy(p->name,"BOUJEE");
 8005d7a:	687b      	ldr	r3, [r7, #4]
 8005d7c:	337c      	adds	r3, #124	; 0x7c
 8005d7e:	4a30      	ldr	r2, [pc, #192]	; (8005e40 <createProblem+0x4f98>)
 8005d80:	6810      	ldr	r0, [r2, #0]
 8005d82:	6018      	str	r0, [r3, #0]
 8005d84:	8891      	ldrh	r1, [r2, #4]
 8005d86:	7992      	ldrb	r2, [r2, #6]
 8005d88:	8099      	strh	r1, [r3, #4]
 8005d8a:	719a      	strb	r2, [r3, #6]
			p->moveSize = 6;
 8005d8c:	687b      	ldr	r3, [r7, #4]
 8005d8e:	2206      	movs	r2, #6
 8005d90:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,D,H,C,D");
 8005d92:	687b      	ldr	r3, [r7, #4]
 8005d94:	3340      	adds	r3, #64	; 0x40
 8005d96:	4a2b      	ldr	r2, [pc, #172]	; (8005e44 <createProblem+0x4f9c>)
 8005d98:	461c      	mov	r4, r3
 8005d9a:	4613      	mov	r3, r2
 8005d9c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005d9e:	6020      	str	r0, [r4, #0]
 8005da0:	6061      	str	r1, [r4, #4]
 8005da2:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,13,15,10,8,18");
 8005da4:	687b      	ldr	r3, [r7, #4]
 8005da6:	3304      	adds	r3, #4
 8005da8:	4a27      	ldr	r2, [pc, #156]	; (8005e48 <createProblem+0x4fa0>)
 8005daa:	461c      	mov	r4, r3
 8005dac:	4615      	mov	r5, r2
 8005dae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005db0:	6020      	str	r0, [r4, #0]
 8005db2:	6061      	str	r1, [r4, #4]
 8005db4:	60a2      	str	r2, [r4, #8]
 8005db6:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8005db8:	687b      	ldr	r3, [r7, #4]
 8005dba:	33d8      	adds	r3, #216	; 0xd8
 8005dbc:	4a13      	ldr	r2, [pc, #76]	; (8005e0c <createProblem+0x4f64>)
 8005dbe:	461c      	mov	r4, r3
 8005dc0:	4613      	mov	r3, r2
 8005dc2:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005dc4:	6020      	str	r0, [r4, #0]
 8005dc6:	6061      	str	r1, [r4, #4]
 8005dc8:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8005dca:	687b      	ldr	r3, [r7, #4]
 8005dcc:	33cc      	adds	r3, #204	; 0xcc
 8005dce:	4a17      	ldr	r2, [pc, #92]	; (8005e2c <createProblem+0x4f84>)
 8005dd0:	6810      	ldr	r0, [r2, #0]
 8005dd2:	6018      	str	r0, [r3, #0]
			break;
 8005dd4:	f014 bdae 	b.w	801a934 <createProblem+0x19a8c>
 8005dd8:	08022150 	.word	0x08022150
 8005ddc:	08022160 	.word	0x08022160
 8005de0:	08022170 	.word	0x08022170
 8005de4:	08020820 	.word	0x08020820
 8005de8:	08020928 	.word	0x08020928
 8005dec:	08022184 	.word	0x08022184
 8005df0:	08022198 	.word	0x08022198
 8005df4:	080221a4 	.word	0x080221a4
 8005df8:	080208a0 	.word	0x080208a0
 8005dfc:	08020b0c 	.word	0x08020b0c
 8005e00:	080221b4 	.word	0x080221b4
 8005e04:	080221bc 	.word	0x080221bc
 8005e08:	080221c8 	.word	0x080221c8
 8005e0c:	0802091c 	.word	0x0802091c
 8005e10:	08020874 	.word	0x08020874
 8005e14:	080221d8 	.word	0x080221d8
 8005e18:	080221e4 	.word	0x080221e4
 8005e1c:	080221f0 	.word	0x080221f0
 8005e20:	08022200 	.word	0x08022200
 8005e24:	08022210 	.word	0x08022210
 8005e28:	0802221c 	.word	0x0802221c
 8005e2c:	080209a4 	.word	0x080209a4
 8005e30:	0802222c 	.word	0x0802222c
 8005e34:	08022230 	.word	0x08022230
 8005e38:	080216c0 	.word	0x080216c0
 8005e3c:	08020830 	.word	0x08020830
 8005e40:	0802223c 	.word	0x0802223c
 8005e44:	08022244 	.word	0x08022244
 8005e48:	08022250 	.word	0x08022250
		case 221 :
			strcpy(p->name,"PURPLE IN THE OPEN");
 8005e4c:	687b      	ldr	r3, [r7, #4]
 8005e4e:	337c      	adds	r3, #124	; 0x7c
 8005e50:	4abd      	ldr	r2, [pc, #756]	; (8006148 <createProblem+0x52a0>)
 8005e52:	461d      	mov	r5, r3
 8005e54:	4614      	mov	r4, r2
 8005e56:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005e58:	6028      	str	r0, [r5, #0]
 8005e5a:	6069      	str	r1, [r5, #4]
 8005e5c:	60aa      	str	r2, [r5, #8]
 8005e5e:	60eb      	str	r3, [r5, #12]
 8005e60:	8823      	ldrh	r3, [r4, #0]
 8005e62:	78a2      	ldrb	r2, [r4, #2]
 8005e64:	822b      	strh	r3, [r5, #16]
 8005e66:	4613      	mov	r3, r2
 8005e68:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 7;
 8005e6a:	687b      	ldr	r3, [r7, #4]
 8005e6c:	2207      	movs	r2, #7
 8005e6e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,C,E,D,I,H,I");
 8005e70:	687b      	ldr	r3, [r7, #4]
 8005e72:	3340      	adds	r3, #64	; 0x40
 8005e74:	4ab5      	ldr	r2, [pc, #724]	; (800614c <createProblem+0x52a4>)
 8005e76:	461c      	mov	r4, r3
 8005e78:	4613      	mov	r3, r2
 8005e7a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005e7c:	6020      	str	r0, [r4, #0]
 8005e7e:	6061      	str	r1, [r4, #4]
 8005e80:	60a2      	str	r2, [r4, #8]
 8005e82:	881b      	ldrh	r3, [r3, #0]
 8005e84:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,8,12,11,14,16,18");
 8005e86:	687b      	ldr	r3, [r7, #4]
 8005e88:	3304      	adds	r3, #4
 8005e8a:	4ab1      	ldr	r2, [pc, #708]	; (8006150 <createProblem+0x52a8>)
 8005e8c:	461d      	mov	r5, r3
 8005e8e:	4614      	mov	r4, r2
 8005e90:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005e92:	6028      	str	r0, [r5, #0]
 8005e94:	6069      	str	r1, [r5, #4]
 8005e96:	60aa      	str	r2, [r5, #8]
 8005e98:	60eb      	str	r3, [r5, #12]
 8005e9a:	8823      	ldrh	r3, [r4, #0]
 8005e9c:	78a2      	ldrb	r2, [r4, #2]
 8005e9e:	822b      	strh	r3, [r5, #16]
 8005ea0:	4613      	mov	r3, r2
 8005ea2:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8005ea4:	687b      	ldr	r3, [r7, #4]
 8005ea6:	33d8      	adds	r3, #216	; 0xd8
 8005ea8:	4aaa      	ldr	r2, [pc, #680]	; (8006154 <createProblem+0x52ac>)
 8005eaa:	461c      	mov	r4, r3
 8005eac:	4613      	mov	r3, r2
 8005eae:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005eb0:	6020      	str	r0, [r4, #0]
 8005eb2:	6061      	str	r1, [r4, #4]
 8005eb4:	60a2      	str	r2, [r4, #8]
 8005eb6:	881b      	ldrh	r3, [r3, #0]
 8005eb8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B");
 8005eba:	687b      	ldr	r3, [r7, #4]
 8005ebc:	33cc      	adds	r3, #204	; 0xcc
 8005ebe:	4aa6      	ldr	r2, [pc, #664]	; (8006158 <createProblem+0x52b0>)
 8005ec0:	8811      	ldrh	r1, [r2, #0]
 8005ec2:	7892      	ldrb	r2, [r2, #2]
 8005ec4:	8019      	strh	r1, [r3, #0]
 8005ec6:	709a      	strb	r2, [r3, #2]
			break;
 8005ec8:	f014 bd34 	b.w	801a934 <createProblem+0x19a8c>
		case 222 :
			strcpy(p->name,"THE REAL \"ONE\"");
 8005ecc:	687b      	ldr	r3, [r7, #4]
 8005ece:	337c      	adds	r3, #124	; 0x7c
 8005ed0:	4aa2      	ldr	r2, [pc, #648]	; (800615c <createProblem+0x52b4>)
 8005ed2:	461c      	mov	r4, r3
 8005ed4:	4613      	mov	r3, r2
 8005ed6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005ed8:	6020      	str	r0, [r4, #0]
 8005eda:	6061      	str	r1, [r4, #4]
 8005edc:	60a2      	str	r2, [r4, #8]
 8005ede:	881a      	ldrh	r2, [r3, #0]
 8005ee0:	789b      	ldrb	r3, [r3, #2]
 8005ee2:	81a2      	strh	r2, [r4, #12]
 8005ee4:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 7;
 8005ee6:	687b      	ldr	r3, [r7, #4]
 8005ee8:	2207      	movs	r2, #7
 8005eea:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,C,E,E,I");
 8005eec:	687b      	ldr	r3, [r7, #4]
 8005eee:	3340      	adds	r3, #64	; 0x40
 8005ef0:	4a9b      	ldr	r2, [pc, #620]	; (8006160 <createProblem+0x52b8>)
 8005ef2:	461c      	mov	r4, r3
 8005ef4:	4613      	mov	r3, r2
 8005ef6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005ef8:	6020      	str	r0, [r4, #0]
 8005efa:	6061      	str	r1, [r4, #4]
 8005efc:	60a2      	str	r2, [r4, #8]
 8005efe:	881b      	ldrh	r3, [r3, #0]
 8005f00:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,9,13,14,16,18");
 8005f02:	687b      	ldr	r3, [r7, #4]
 8005f04:	3304      	adds	r3, #4
 8005f06:	4a97      	ldr	r2, [pc, #604]	; (8006164 <createProblem+0x52bc>)
 8005f08:	461d      	mov	r5, r3
 8005f0a:	4614      	mov	r4, r2
 8005f0c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8005f0e:	6028      	str	r0, [r5, #0]
 8005f10:	6069      	str	r1, [r5, #4]
 8005f12:	60aa      	str	r2, [r5, #8]
 8005f14:	60eb      	str	r3, [r5, #12]
 8005f16:	8823      	ldrh	r3, [r4, #0]
 8005f18:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8005f1a:	687b      	ldr	r3, [r7, #4]
 8005f1c:	33d8      	adds	r3, #216	; 0xd8
 8005f1e:	4a8d      	ldr	r2, [pc, #564]	; (8006154 <createProblem+0x52ac>)
 8005f20:	461c      	mov	r4, r3
 8005f22:	4613      	mov	r3, r2
 8005f24:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005f26:	6020      	str	r0, [r4, #0]
 8005f28:	6061      	str	r1, [r4, #4]
 8005f2a:	60a2      	str	r2, [r4, #8]
 8005f2c:	881b      	ldrh	r3, [r3, #0]
 8005f2e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8005f30:	687b      	ldr	r3, [r7, #4]
 8005f32:	33cc      	adds	r3, #204	; 0xcc
 8005f34:	4a8c      	ldr	r2, [pc, #560]	; (8006168 <createProblem+0x52c0>)
 8005f36:	6810      	ldr	r0, [r2, #0]
 8005f38:	6018      	str	r0, [r3, #0]
			break;
 8005f3a:	f014 bcfb 	b.w	801a934 <createProblem+0x19a8c>
		case 223 :
			strcpy(p->name,"BLACK TIGER");
 8005f3e:	687b      	ldr	r3, [r7, #4]
 8005f40:	337c      	adds	r3, #124	; 0x7c
 8005f42:	4a8a      	ldr	r2, [pc, #552]	; (800616c <createProblem+0x52c4>)
 8005f44:	461c      	mov	r4, r3
 8005f46:	4613      	mov	r3, r2
 8005f48:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005f4a:	6020      	str	r0, [r4, #0]
 8005f4c:	6061      	str	r1, [r4, #4]
 8005f4e:	60a2      	str	r2, [r4, #8]
			p->moveSize = 5;
 8005f50:	687b      	ldr	r3, [r7, #4]
 8005f52:	2205      	movs	r2, #5
 8005f54:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,K,H,K,I");
 8005f56:	687b      	ldr	r3, [r7, #4]
 8005f58:	3340      	adds	r3, #64	; 0x40
 8005f5a:	4985      	ldr	r1, [pc, #532]	; (8006170 <createProblem+0x52c8>)
 8005f5c:	461a      	mov	r2, r3
 8005f5e:	460b      	mov	r3, r1
 8005f60:	cb03      	ldmia	r3!, {r0, r1}
 8005f62:	6010      	str	r0, [r2, #0]
 8005f64:	6051      	str	r1, [r2, #4]
 8005f66:	881b      	ldrh	r3, [r3, #0]
 8005f68:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,9,12,14,18");
 8005f6a:	687b      	ldr	r3, [r7, #4]
 8005f6c:	3304      	adds	r3, #4
 8005f6e:	4a81      	ldr	r2, [pc, #516]	; (8006174 <createProblem+0x52cc>)
 8005f70:	461c      	mov	r4, r3
 8005f72:	4613      	mov	r3, r2
 8005f74:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005f76:	6020      	str	r0, [r4, #0]
 8005f78:	6061      	str	r1, [r4, #4]
 8005f7a:	60a2      	str	r2, [r4, #8]
 8005f7c:	781b      	ldrb	r3, [r3, #0]
 8005f7e:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8005f80:	687b      	ldr	r3, [r7, #4]
 8005f82:	33d8      	adds	r3, #216	; 0xd8
 8005f84:	497c      	ldr	r1, [pc, #496]	; (8006178 <createProblem+0x52d0>)
 8005f86:	461a      	mov	r2, r3
 8005f88:	460b      	mov	r3, r1
 8005f8a:	cb03      	ldmia	r3!, {r0, r1}
 8005f8c:	6010      	str	r0, [r2, #0]
 8005f8e:	6051      	str	r1, [r2, #4]
 8005f90:	881b      	ldrh	r3, [r3, #0]
 8005f92:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C+");
 8005f94:	687b      	ldr	r3, [r7, #4]
 8005f96:	33cc      	adds	r3, #204	; 0xcc
 8005f98:	4a78      	ldr	r2, [pc, #480]	; (800617c <createProblem+0x52d4>)
 8005f9a:	6810      	ldr	r0, [r2, #0]
 8005f9c:	6018      	str	r0, [r3, #0]
			break;
 8005f9e:	f014 bcc9 	b.w	801a934 <createProblem+0x19a8c>
		case 224 :
			strcpy(p->name,"STREETS OF GOLD");
 8005fa2:	687b      	ldr	r3, [r7, #4]
 8005fa4:	337c      	adds	r3, #124	; 0x7c
 8005fa6:	4a76      	ldr	r2, [pc, #472]	; (8006180 <createProblem+0x52d8>)
 8005fa8:	461c      	mov	r4, r3
 8005faa:	4615      	mov	r5, r2
 8005fac:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005fae:	6020      	str	r0, [r4, #0]
 8005fb0:	6061      	str	r1, [r4, #4]
 8005fb2:	60a2      	str	r2, [r4, #8]
 8005fb4:	60e3      	str	r3, [r4, #12]
			p->moveSize = 6;
 8005fb6:	687b      	ldr	r3, [r7, #4]
 8005fb8:	2206      	movs	r2, #6
 8005fba:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,C,K,F,B,A");
 8005fbc:	687b      	ldr	r3, [r7, #4]
 8005fbe:	3340      	adds	r3, #64	; 0x40
 8005fc0:	4a70      	ldr	r2, [pc, #448]	; (8006184 <createProblem+0x52dc>)
 8005fc2:	461c      	mov	r4, r3
 8005fc4:	4613      	mov	r3, r2
 8005fc6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005fc8:	6020      	str	r0, [r4, #0]
 8005fca:	6061      	str	r1, [r4, #4]
 8005fcc:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,16,9,11,15,18");
 8005fce:	687b      	ldr	r3, [r7, #4]
 8005fd0:	3304      	adds	r3, #4
 8005fd2:	4a6d      	ldr	r2, [pc, #436]	; (8006188 <createProblem+0x52e0>)
 8005fd4:	461c      	mov	r4, r3
 8005fd6:	4615      	mov	r5, r2
 8005fd8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8005fda:	6020      	str	r0, [r4, #0]
 8005fdc:	6061      	str	r1, [r4, #4]
 8005fde:	60a2      	str	r2, [r4, #8]
 8005fe0:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8005fe2:	687b      	ldr	r3, [r7, #4]
 8005fe4:	33d8      	adds	r3, #216	; 0xd8
 8005fe6:	4a69      	ldr	r2, [pc, #420]	; (800618c <createProblem+0x52e4>)
 8005fe8:	461c      	mov	r4, r3
 8005fea:	4613      	mov	r3, r2
 8005fec:	cb07      	ldmia	r3!, {r0, r1, r2}
 8005fee:	6020      	str	r0, [r4, #0]
 8005ff0:	6061      	str	r1, [r4, #4]
 8005ff2:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 8005ff4:	687b      	ldr	r3, [r7, #4]
 8005ff6:	33cc      	adds	r3, #204	; 0xcc
 8005ff8:	4a65      	ldr	r2, [pc, #404]	; (8006190 <createProblem+0x52e8>)
 8005ffa:	6810      	ldr	r0, [r2, #0]
 8005ffc:	6018      	str	r0, [r3, #0]
			break;
 8005ffe:	f014 bc99 	b.w	801a934 <createProblem+0x19a8c>
		case 225 :
			strcpy(p->name,"BISCUITS RETURNS");
 8006002:	687b      	ldr	r3, [r7, #4]
 8006004:	337c      	adds	r3, #124	; 0x7c
 8006006:	4a63      	ldr	r2, [pc, #396]	; (8006194 <createProblem+0x52ec>)
 8006008:	461d      	mov	r5, r3
 800600a:	4614      	mov	r4, r2
 800600c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800600e:	6028      	str	r0, [r5, #0]
 8006010:	6069      	str	r1, [r5, #4]
 8006012:	60aa      	str	r2, [r5, #8]
 8006014:	60eb      	str	r3, [r5, #12]
 8006016:	7823      	ldrb	r3, [r4, #0]
 8006018:	742b      	strb	r3, [r5, #16]
			p->moveSize = 6;
 800601a:	687b      	ldr	r3, [r7, #4]
 800601c:	2206      	movs	r2, #6
 800601e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,H,C,D,D");
 8006020:	687b      	ldr	r3, [r7, #4]
 8006022:	3340      	adds	r3, #64	; 0x40
 8006024:	4a5c      	ldr	r2, [pc, #368]	; (8006198 <createProblem+0x52f0>)
 8006026:	461c      	mov	r4, r3
 8006028:	4613      	mov	r3, r2
 800602a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800602c:	6020      	str	r0, [r4, #0]
 800602e:	6061      	str	r1, [r4, #4]
 8006030:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,10,13,15,18");
 8006032:	687b      	ldr	r3, [r7, #4]
 8006034:	3304      	adds	r3, #4
 8006036:	4a59      	ldr	r2, [pc, #356]	; (800619c <createProblem+0x52f4>)
 8006038:	461c      	mov	r4, r3
 800603a:	4615      	mov	r5, r2
 800603c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800603e:	6020      	str	r0, [r4, #0]
 8006040:	6061      	str	r1, [r4, #4]
 8006042:	60a2      	str	r2, [r4, #8]
 8006044:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8006046:	687b      	ldr	r3, [r7, #4]
 8006048:	33d8      	adds	r3, #216	; 0xd8
 800604a:	4a55      	ldr	r2, [pc, #340]	; (80061a0 <createProblem+0x52f8>)
 800604c:	461c      	mov	r4, r3
 800604e:	4613      	mov	r3, r2
 8006050:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006052:	6020      	str	r0, [r4, #0]
 8006054:	6061      	str	r1, [r4, #4]
 8006056:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 8006058:	687b      	ldr	r3, [r7, #4]
 800605a:	33cc      	adds	r3, #204	; 0xcc
 800605c:	4a42      	ldr	r2, [pc, #264]	; (8006168 <createProblem+0x52c0>)
 800605e:	6810      	ldr	r0, [r2, #0]
 8006060:	6018      	str	r0, [r3, #0]
			break;
 8006062:	f014 bc67 	b.w	801a934 <createProblem+0x19a8c>
		case 226 :
			strcpy(p->name,"OPPOSITES");
 8006066:	687b      	ldr	r3, [r7, #4]
 8006068:	337c      	adds	r3, #124	; 0x7c
 800606a:	494e      	ldr	r1, [pc, #312]	; (80061a4 <createProblem+0x52fc>)
 800606c:	461a      	mov	r2, r3
 800606e:	460b      	mov	r3, r1
 8006070:	cb03      	ldmia	r3!, {r0, r1}
 8006072:	6010      	str	r0, [r2, #0]
 8006074:	6051      	str	r1, [r2, #4]
 8006076:	881b      	ldrh	r3, [r3, #0]
 8006078:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 800607a:	687b      	ldr	r3, [r7, #4]
 800607c:	2207      	movs	r2, #7
 800607e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,H,J,F,G,D");
 8006080:	687b      	ldr	r3, [r7, #4]
 8006082:	3340      	adds	r3, #64	; 0x40
 8006084:	4a48      	ldr	r2, [pc, #288]	; (80061a8 <createProblem+0x5300>)
 8006086:	461c      	mov	r4, r3
 8006088:	4613      	mov	r3, r2
 800608a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800608c:	6020      	str	r0, [r4, #0]
 800608e:	6061      	str	r1, [r4, #4]
 8006090:	60a2      	str	r2, [r4, #8]
 8006092:	881b      	ldrh	r3, [r3, #0]
 8006094:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,8,12,13,15,18");
 8006096:	687b      	ldr	r3, [r7, #4]
 8006098:	3304      	adds	r3, #4
 800609a:	4a44      	ldr	r2, [pc, #272]	; (80061ac <createProblem+0x5304>)
 800609c:	461d      	mov	r5, r3
 800609e:	4614      	mov	r4, r2
 80060a0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80060a2:	6028      	str	r0, [r5, #0]
 80060a4:	6069      	str	r1, [r5, #4]
 80060a6:	60aa      	str	r2, [r5, #8]
 80060a8:	60eb      	str	r3, [r5, #12]
 80060aa:	8823      	ldrh	r3, [r4, #0]
 80060ac:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80060ae:	687b      	ldr	r3, [r7, #4]
 80060b0:	33d8      	adds	r3, #216	; 0xd8
 80060b2:	4a28      	ldr	r2, [pc, #160]	; (8006154 <createProblem+0x52ac>)
 80060b4:	461c      	mov	r4, r3
 80060b6:	4613      	mov	r3, r2
 80060b8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80060ba:	6020      	str	r0, [r4, #0]
 80060bc:	6061      	str	r1, [r4, #4]
 80060be:	60a2      	str	r2, [r4, #8]
 80060c0:	881b      	ldrh	r3, [r3, #0]
 80060c2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B");
 80060c4:	687b      	ldr	r3, [r7, #4]
 80060c6:	33cc      	adds	r3, #204	; 0xcc
 80060c8:	4a23      	ldr	r2, [pc, #140]	; (8006158 <createProblem+0x52b0>)
 80060ca:	8811      	ldrh	r1, [r2, #0]
 80060cc:	7892      	ldrb	r2, [r2, #2]
 80060ce:	8019      	strh	r1, [r3, #0]
 80060d0:	709a      	strb	r2, [r3, #2]
			break;
 80060d2:	f014 bc2f 	b.w	801a934 <createProblem+0x19a8c>
		case 227 :
			strcpy(p->name,"OUT THERE");
 80060d6:	687b      	ldr	r3, [r7, #4]
 80060d8:	337c      	adds	r3, #124	; 0x7c
 80060da:	4935      	ldr	r1, [pc, #212]	; (80061b0 <createProblem+0x5308>)
 80060dc:	461a      	mov	r2, r3
 80060de:	460b      	mov	r3, r1
 80060e0:	cb03      	ldmia	r3!, {r0, r1}
 80060e2:	6010      	str	r0, [r2, #0]
 80060e4:	6051      	str	r1, [r2, #4]
 80060e6:	881b      	ldrh	r3, [r3, #0]
 80060e8:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 80060ea:	687b      	ldr	r3, [r7, #4]
 80060ec:	2207      	movs	r2, #7
 80060ee:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,H,C,D,B,D");
 80060f0:	687b      	ldr	r3, [r7, #4]
 80060f2:	3340      	adds	r3, #64	; 0x40
 80060f4:	4a2f      	ldr	r2, [pc, #188]	; (80061b4 <createProblem+0x530c>)
 80060f6:	461c      	mov	r4, r3
 80060f8:	4613      	mov	r3, r2
 80060fa:	cb07      	ldmia	r3!, {r0, r1, r2}
 80060fc:	6020      	str	r0, [r4, #0]
 80060fe:	6061      	str	r1, [r4, #4]
 8006100:	60a2      	str	r2, [r4, #8]
 8006102:	881b      	ldrh	r3, [r3, #0]
 8006104:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,10,13,15,15,18");
 8006106:	687b      	ldr	r3, [r7, #4]
 8006108:	3304      	adds	r3, #4
 800610a:	4a2b      	ldr	r2, [pc, #172]	; (80061b8 <createProblem+0x5310>)
 800610c:	461d      	mov	r5, r3
 800610e:	4614      	mov	r4, r2
 8006110:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006112:	6028      	str	r0, [r5, #0]
 8006114:	6069      	str	r1, [r5, #4]
 8006116:	60aa      	str	r2, [r5, #8]
 8006118:	60eb      	str	r3, [r5, #12]
 800611a:	8823      	ldrh	r3, [r4, #0]
 800611c:	78a2      	ldrb	r2, [r4, #2]
 800611e:	822b      	strh	r3, [r5, #16]
 8006120:	4613      	mov	r3, r2
 8006122:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8006124:	687b      	ldr	r3, [r7, #4]
 8006126:	33d8      	adds	r3, #216	; 0xd8
 8006128:	4a24      	ldr	r2, [pc, #144]	; (80061bc <createProblem+0x5314>)
 800612a:	461c      	mov	r4, r3
 800612c:	4613      	mov	r3, r2
 800612e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006130:	6020      	str	r0, [r4, #0]
 8006132:	6061      	str	r1, [r4, #4]
 8006134:	60a2      	str	r2, [r4, #8]
 8006136:	881b      	ldrh	r3, [r3, #0]
 8006138:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800613a:	687b      	ldr	r3, [r7, #4]
 800613c:	33cc      	adds	r3, #204	; 0xcc
 800613e:	4a0a      	ldr	r2, [pc, #40]	; (8006168 <createProblem+0x52c0>)
 8006140:	6810      	ldr	r0, [r2, #0]
 8006142:	6018      	str	r0, [r3, #0]
			break;
 8006144:	f014 bbf6 	b.w	801a934 <createProblem+0x19a8c>
 8006148:	08022260 	.word	0x08022260
 800614c:	08022274 	.word	0x08022274
 8006150:	08022284 	.word	0x08022284
 8006154:	08020a14 	.word	0x08020a14
 8006158:	080208ac 	.word	0x080208ac
 800615c:	08022298 	.word	0x08022298
 8006160:	080222a8 	.word	0x080222a8
 8006164:	080222b8 	.word	0x080222b8
 8006168:	08020830 	.word	0x08020830
 800616c:	080222cc 	.word	0x080222cc
 8006170:	080222d8 	.word	0x080222d8
 8006174:	080222e4 	.word	0x080222e4
 8006178:	080208a0 	.word	0x080208a0
 800617c:	08020928 	.word	0x08020928
 8006180:	080222f4 	.word	0x080222f4
 8006184:	08022304 	.word	0x08022304
 8006188:	08022310 	.word	0x08022310
 800618c:	0802091c 	.word	0x0802091c
 8006190:	08020dc8 	.word	0x08020dc8
 8006194:	08022320 	.word	0x08022320
 8006198:	08022334 	.word	0x08022334
 800619c:	08022340 	.word	0x08022340
 80061a0:	08020e90 	.word	0x08020e90
 80061a4:	08022350 	.word	0x08022350
 80061a8:	0802235c 	.word	0x0802235c
 80061ac:	0802236c 	.word	0x0802236c
 80061b0:	08022380 	.word	0x08022380
 80061b4:	0802238c 	.word	0x0802238c
 80061b8:	0802239c 	.word	0x0802239c
 80061bc:	08020820 	.word	0x08020820
		case 228 :
			strcpy(p->name,"THE GREAT HAMBINO");
 80061c0:	687b      	ldr	r3, [r7, #4]
 80061c2:	337c      	adds	r3, #124	; 0x7c
 80061c4:	4abf      	ldr	r2, [pc, #764]	; (80064c4 <createProblem+0x561c>)
 80061c6:	461d      	mov	r5, r3
 80061c8:	4614      	mov	r4, r2
 80061ca:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80061cc:	6028      	str	r0, [r5, #0]
 80061ce:	6069      	str	r1, [r5, #4]
 80061d0:	60aa      	str	r2, [r5, #8]
 80061d2:	60eb      	str	r3, [r5, #12]
 80061d4:	8823      	ldrh	r3, [r4, #0]
 80061d6:	822b      	strh	r3, [r5, #16]
			p->moveSize = 9;
 80061d8:	687b      	ldr	r3, [r7, #4]
 80061da:	2209      	movs	r2, #9
 80061dc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,C,F,E,G,G,I");
 80061de:	687b      	ldr	r3, [r7, #4]
 80061e0:	3340      	adds	r3, #64	; 0x40
 80061e2:	4ab9      	ldr	r2, [pc, #740]	; (80064c8 <createProblem+0x5620>)
 80061e4:	461d      	mov	r5, r3
 80061e6:	4614      	mov	r4, r2
 80061e8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80061ea:	6028      	str	r0, [r5, #0]
 80061ec:	6069      	str	r1, [r5, #4]
 80061ee:	60aa      	str	r2, [r5, #8]
 80061f0:	60eb      	str	r3, [r5, #12]
 80061f2:	8823      	ldrh	r3, [r4, #0]
 80061f4:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,6,8,8,11,12,14,15,18");
 80061f6:	687b      	ldr	r3, [r7, #4]
 80061f8:	3304      	adds	r3, #4
 80061fa:	4ab4      	ldr	r2, [pc, #720]	; (80064cc <createProblem+0x5624>)
 80061fc:	461c      	mov	r4, r3
 80061fe:	4615      	mov	r5, r2
 8006200:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006202:	6020      	str	r0, [r4, #0]
 8006204:	6061      	str	r1, [r4, #4]
 8006206:	60a2      	str	r2, [r4, #8]
 8006208:	60e3      	str	r3, [r4, #12]
 800620a:	6828      	ldr	r0, [r5, #0]
 800620c:	6120      	str	r0, [r4, #16]
 800620e:	88ab      	ldrh	r3, [r5, #4]
 8006210:	79aa      	ldrb	r2, [r5, #6]
 8006212:	82a3      	strh	r3, [r4, #20]
 8006214:	4613      	mov	r3, r2
 8006216:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8006218:	687b      	ldr	r3, [r7, #4]
 800621a:	33d8      	adds	r3, #216	; 0xd8
 800621c:	4aac      	ldr	r2, [pc, #688]	; (80064d0 <createProblem+0x5628>)
 800621e:	461d      	mov	r5, r3
 8006220:	4614      	mov	r4, r2
 8006222:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006224:	6028      	str	r0, [r5, #0]
 8006226:	6069      	str	r1, [r5, #4]
 8006228:	60aa      	str	r2, [r5, #8]
 800622a:	60eb      	str	r3, [r5, #12]
 800622c:	8823      	ldrh	r3, [r4, #0]
 800622e:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8006230:	687b      	ldr	r3, [r7, #4]
 8006232:	33cc      	adds	r3, #204	; 0xcc
 8006234:	4aa7      	ldr	r2, [pc, #668]	; (80064d4 <createProblem+0x562c>)
 8006236:	6810      	ldr	r0, [r2, #0]
 8006238:	6018      	str	r0, [r3, #0]
			break;
 800623a:	f014 bb7b 	b.w	801a934 <createProblem+0x19a8c>
		case 229 :
			strcpy(p->name,"TOMTOM");
 800623e:	687b      	ldr	r3, [r7, #4]
 8006240:	337c      	adds	r3, #124	; 0x7c
 8006242:	4aa5      	ldr	r2, [pc, #660]	; (80064d8 <createProblem+0x5630>)
 8006244:	6810      	ldr	r0, [r2, #0]
 8006246:	6018      	str	r0, [r3, #0]
 8006248:	8891      	ldrh	r1, [r2, #4]
 800624a:	7992      	ldrb	r2, [r2, #6]
 800624c:	8099      	strh	r1, [r3, #4]
 800624e:	719a      	strb	r2, [r3, #6]
			p->moveSize = 5;
 8006250:	687b      	ldr	r3, [r7, #4]
 8006252:	2205      	movs	r2, #5
 8006254:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,C,D,A");
 8006256:	687b      	ldr	r3, [r7, #4]
 8006258:	3340      	adds	r3, #64	; 0x40
 800625a:	49a0      	ldr	r1, [pc, #640]	; (80064dc <createProblem+0x5634>)
 800625c:	461a      	mov	r2, r3
 800625e:	460b      	mov	r3, r1
 8006260:	cb03      	ldmia	r3!, {r0, r1}
 8006262:	6010      	str	r0, [r2, #0]
 8006264:	6051      	str	r1, [r2, #4]
 8006266:	881b      	ldrh	r3, [r3, #0]
 8006268:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,13,15,18");
 800626a:	687b      	ldr	r3, [r7, #4]
 800626c:	3304      	adds	r3, #4
 800626e:	4a9c      	ldr	r2, [pc, #624]	; (80064e0 <createProblem+0x5638>)
 8006270:	461c      	mov	r4, r3
 8006272:	4613      	mov	r3, r2
 8006274:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006276:	6020      	str	r0, [r4, #0]
 8006278:	6061      	str	r1, [r4, #4]
 800627a:	60a2      	str	r2, [r4, #8]
 800627c:	881b      	ldrh	r3, [r3, #0]
 800627e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8006280:	687b      	ldr	r3, [r7, #4]
 8006282:	33d8      	adds	r3, #216	; 0xd8
 8006284:	4997      	ldr	r1, [pc, #604]	; (80064e4 <createProblem+0x563c>)
 8006286:	461a      	mov	r2, r3
 8006288:	460b      	mov	r3, r1
 800628a:	cb03      	ldmia	r3!, {r0, r1}
 800628c:	6010      	str	r0, [r2, #0]
 800628e:	6051      	str	r1, [r2, #4]
 8006290:	881b      	ldrh	r3, [r3, #0]
 8006292:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C+");
 8006294:	687b      	ldr	r3, [r7, #4]
 8006296:	33cc      	adds	r3, #204	; 0xcc
 8006298:	4a93      	ldr	r2, [pc, #588]	; (80064e8 <createProblem+0x5640>)
 800629a:	6810      	ldr	r0, [r2, #0]
 800629c:	6018      	str	r0, [r3, #0]
			break;
 800629e:	f014 bb49 	b.w	801a934 <createProblem+0x19a8c>
		case 23 :
			strcpy(p->name,"LADYBUG");
 80062a2:	687b      	ldr	r3, [r7, #4]
 80062a4:	337c      	adds	r3, #124	; 0x7c
 80062a6:	4991      	ldr	r1, [pc, #580]	; (80064ec <createProblem+0x5644>)
 80062a8:	461a      	mov	r2, r3
 80062aa:	460b      	mov	r3, r1
 80062ac:	cb03      	ldmia	r3!, {r0, r1}
 80062ae:	6010      	str	r0, [r2, #0]
 80062b0:	6051      	str	r1, [r2, #4]
			p->moveSize = 8;
 80062b2:	687b      	ldr	r3, [r7, #4]
 80062b4:	2208      	movs	r2, #8
 80062b6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"A,A,C,D,F,G,H,J");
 80062b8:	687b      	ldr	r3, [r7, #4]
 80062ba:	3340      	adds	r3, #64	; 0x40
 80062bc:	4a8c      	ldr	r2, [pc, #560]	; (80064f0 <createProblem+0x5648>)
 80062be:	461c      	mov	r4, r3
 80062c0:	4615      	mov	r5, r2
 80062c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80062c4:	6020      	str	r0, [r4, #0]
 80062c6:	6061      	str	r1, [r4, #4]
 80062c8:	60a2      	str	r2, [r4, #8]
 80062ca:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"9,14,13,18,11,6,10,5");
 80062cc:	687b      	ldr	r3, [r7, #4]
 80062ce:	3304      	adds	r3, #4
 80062d0:	4a88      	ldr	r2, [pc, #544]	; (80064f4 <createProblem+0x564c>)
 80062d2:	461d      	mov	r5, r3
 80062d4:	4614      	mov	r4, r2
 80062d6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80062d8:	6028      	str	r0, [r5, #0]
 80062da:	6069      	str	r1, [r5, #4]
 80062dc:	60aa      	str	r2, [r5, #8]
 80062de:	60eb      	str	r3, [r5, #12]
 80062e0:	6820      	ldr	r0, [r4, #0]
 80062e2:	6128      	str	r0, [r5, #16]
 80062e4:	7923      	ldrb	r3, [r4, #4]
 80062e6:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "d,d,d,e,d,s,d,s");
 80062e8:	687b      	ldr	r3, [r7, #4]
 80062ea:	33d8      	adds	r3, #216	; 0xd8
 80062ec:	4a82      	ldr	r2, [pc, #520]	; (80064f8 <createProblem+0x5650>)
 80062ee:	461c      	mov	r4, r3
 80062f0:	4615      	mov	r5, r2
 80062f2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80062f4:	6020      	str	r0, [r4, #0]
 80062f6:	6061      	str	r1, [r4, #4]
 80062f8:	60a2      	str	r2, [r4, #8]
 80062fa:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 80062fc:	687b      	ldr	r3, [r7, #4]
 80062fe:	33cc      	adds	r3, #204	; 0xcc
 8006300:	4a7e      	ldr	r2, [pc, #504]	; (80064fc <createProblem+0x5654>)
 8006302:	6810      	ldr	r0, [r2, #0]
 8006304:	6018      	str	r0, [r3, #0]
			break;
 8006306:	f014 bb15 	b.w	801a934 <createProblem+0x19a8c>
		case 230 :
			strcpy(p->name,"カラス");
 800630a:	687b      	ldr	r3, [r7, #4]
 800630c:	337c      	adds	r3, #124	; 0x7c
 800630e:	497c      	ldr	r1, [pc, #496]	; (8006500 <createProblem+0x5658>)
 8006310:	461a      	mov	r2, r3
 8006312:	460b      	mov	r3, r1
 8006314:	cb03      	ldmia	r3!, {r0, r1}
 8006316:	6010      	str	r0, [r2, #0]
 8006318:	6051      	str	r1, [r2, #4]
 800631a:	881b      	ldrh	r3, [r3, #0]
 800631c:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 800631e:	687b      	ldr	r3, [r7, #4]
 8006320:	2207      	movs	r2, #7
 8006322:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,J,K,H,I,E,D");
 8006324:	687b      	ldr	r3, [r7, #4]
 8006326:	3340      	adds	r3, #64	; 0x40
 8006328:	4a76      	ldr	r2, [pc, #472]	; (8006504 <createProblem+0x565c>)
 800632a:	461c      	mov	r4, r3
 800632c:	4613      	mov	r3, r2
 800632e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006330:	6020      	str	r0, [r4, #0]
 8006332:	6061      	str	r1, [r4, #4]
 8006334:	60a2      	str	r2, [r4, #8]
 8006336:	881b      	ldrh	r3, [r3, #0]
 8006338:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,7,9,12,14,16,18");
 800633a:	687b      	ldr	r3, [r7, #4]
 800633c:	3304      	adds	r3, #4
 800633e:	4a72      	ldr	r2, [pc, #456]	; (8006508 <createProblem+0x5660>)
 8006340:	461d      	mov	r5, r3
 8006342:	4614      	mov	r4, r2
 8006344:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006346:	6028      	str	r0, [r5, #0]
 8006348:	6069      	str	r1, [r5, #4]
 800634a:	60aa      	str	r2, [r5, #8]
 800634c:	60eb      	str	r3, [r5, #12]
 800634e:	8823      	ldrh	r3, [r4, #0]
 8006350:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8006352:	687b      	ldr	r3, [r7, #4]
 8006354:	33d8      	adds	r3, #216	; 0xd8
 8006356:	4a6d      	ldr	r2, [pc, #436]	; (800650c <createProblem+0x5664>)
 8006358:	461c      	mov	r4, r3
 800635a:	4613      	mov	r3, r2
 800635c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800635e:	6020      	str	r0, [r4, #0]
 8006360:	6061      	str	r1, [r4, #4]
 8006362:	60a2      	str	r2, [r4, #8]
 8006364:	881b      	ldrh	r3, [r3, #0]
 8006366:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8006368:	687b      	ldr	r3, [r7, #4]
 800636a:	33cc      	adds	r3, #204	; 0xcc
 800636c:	4a68      	ldr	r2, [pc, #416]	; (8006510 <createProblem+0x5668>)
 800636e:	8811      	ldrh	r1, [r2, #0]
 8006370:	7892      	ldrb	r2, [r2, #2]
 8006372:	8019      	strh	r1, [r3, #0]
 8006374:	709a      	strb	r2, [r3, #2]
			break;
 8006376:	f014 badd 	b.w	801a934 <createProblem+0x19a8c>
		case 231 :
			strcpy(p->name,"2 BLACK 2 HARD");
 800637a:	687b      	ldr	r3, [r7, #4]
 800637c:	337c      	adds	r3, #124	; 0x7c
 800637e:	4a65      	ldr	r2, [pc, #404]	; (8006514 <createProblem+0x566c>)
 8006380:	461c      	mov	r4, r3
 8006382:	4613      	mov	r3, r2
 8006384:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006386:	6020      	str	r0, [r4, #0]
 8006388:	6061      	str	r1, [r4, #4]
 800638a:	60a2      	str	r2, [r4, #8]
 800638c:	881a      	ldrh	r2, [r3, #0]
 800638e:	789b      	ldrb	r3, [r3, #2]
 8006390:	81a2      	strh	r2, [r4, #12]
 8006392:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 5;
 8006394:	687b      	ldr	r3, [r7, #4]
 8006396:	2205      	movs	r2, #5
 8006398:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,D,A");
 800639a:	687b      	ldr	r3, [r7, #4]
 800639c:	3340      	adds	r3, #64	; 0x40
 800639e:	495e      	ldr	r1, [pc, #376]	; (8006518 <createProblem+0x5670>)
 80063a0:	461a      	mov	r2, r3
 80063a2:	460b      	mov	r3, r1
 80063a4:	cb03      	ldmia	r3!, {r0, r1}
 80063a6:	6010      	str	r0, [r2, #0]
 80063a8:	6051      	str	r1, [r2, #4]
 80063aa:	881b      	ldrh	r3, [r3, #0]
 80063ac:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,5,9,15,18");
 80063ae:	687b      	ldr	r3, [r7, #4]
 80063b0:	3304      	adds	r3, #4
 80063b2:	4a5a      	ldr	r2, [pc, #360]	; (800651c <createProblem+0x5674>)
 80063b4:	461c      	mov	r4, r3
 80063b6:	4613      	mov	r3, r2
 80063b8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80063ba:	6020      	str	r0, [r4, #0]
 80063bc:	6061      	str	r1, [r4, #4]
 80063be:	60a2      	str	r2, [r4, #8]
			strcpy(p->startFinish, "s,s,d,d,e");
 80063c0:	687b      	ldr	r3, [r7, #4]
 80063c2:	33d8      	adds	r3, #216	; 0xd8
 80063c4:	4956      	ldr	r1, [pc, #344]	; (8006520 <createProblem+0x5678>)
 80063c6:	461a      	mov	r2, r3
 80063c8:	460b      	mov	r3, r1
 80063ca:	cb03      	ldmia	r3!, {r0, r1}
 80063cc:	6010      	str	r0, [r2, #0]
 80063ce:	6051      	str	r1, [r2, #4]
 80063d0:	881b      	ldrh	r3, [r3, #0]
 80063d2:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "8A+");
 80063d4:	687b      	ldr	r3, [r7, #4]
 80063d6:	33cc      	adds	r3, #204	; 0xcc
 80063d8:	4a52      	ldr	r2, [pc, #328]	; (8006524 <createProblem+0x567c>)
 80063da:	6810      	ldr	r0, [r2, #0]
 80063dc:	6018      	str	r0, [r3, #0]
			break;
 80063de:	f014 baa9 	b.w	801a934 <createProblem+0x19a8c>
		case 232 :
			strcpy(p->name,"BLACK HAWK DOWN");
 80063e2:	687b      	ldr	r3, [r7, #4]
 80063e4:	337c      	adds	r3, #124	; 0x7c
 80063e6:	4a50      	ldr	r2, [pc, #320]	; (8006528 <createProblem+0x5680>)
 80063e8:	461c      	mov	r4, r3
 80063ea:	4615      	mov	r5, r2
 80063ec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80063ee:	6020      	str	r0, [r4, #0]
 80063f0:	6061      	str	r1, [r4, #4]
 80063f2:	60a2      	str	r2, [r4, #8]
 80063f4:	60e3      	str	r3, [r4, #12]
			p->moveSize = 7;
 80063f6:	687b      	ldr	r3, [r7, #4]
 80063f8:	2207      	movs	r2, #7
 80063fa:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,D,G,D,E,D");
 80063fc:	687b      	ldr	r3, [r7, #4]
 80063fe:	3340      	adds	r3, #64	; 0x40
 8006400:	4a4a      	ldr	r2, [pc, #296]	; (800652c <createProblem+0x5684>)
 8006402:	461c      	mov	r4, r3
 8006404:	4613      	mov	r3, r2
 8006406:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006408:	6020      	str	r0, [r4, #0]
 800640a:	6061      	str	r1, [r4, #4]
 800640c:	60a2      	str	r2, [r4, #8]
 800640e:	881b      	ldrh	r3, [r3, #0]
 8006410:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,15,9,11,14,18");
 8006412:	687b      	ldr	r3, [r7, #4]
 8006414:	3304      	adds	r3, #4
 8006416:	4a46      	ldr	r2, [pc, #280]	; (8006530 <createProblem+0x5688>)
 8006418:	461d      	mov	r5, r3
 800641a:	4614      	mov	r4, r2
 800641c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800641e:	6028      	str	r0, [r5, #0]
 8006420:	6069      	str	r1, [r5, #4]
 8006422:	60aa      	str	r2, [r5, #8]
 8006424:	60eb      	str	r3, [r5, #12]
 8006426:	8823      	ldrh	r3, [r4, #0]
 8006428:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800642a:	687b      	ldr	r3, [r7, #4]
 800642c:	33d8      	adds	r3, #216	; 0xd8
 800642e:	4a37      	ldr	r2, [pc, #220]	; (800650c <createProblem+0x5664>)
 8006430:	461c      	mov	r4, r3
 8006432:	4613      	mov	r3, r2
 8006434:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006436:	6020      	str	r0, [r4, #0]
 8006438:	6061      	str	r1, [r4, #4]
 800643a:	60a2      	str	r2, [r4, #8]
 800643c:	881b      	ldrh	r3, [r3, #0]
 800643e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8006440:	687b      	ldr	r3, [r7, #4]
 8006442:	33cc      	adds	r3, #204	; 0xcc
 8006444:	4a28      	ldr	r2, [pc, #160]	; (80064e8 <createProblem+0x5640>)
 8006446:	6810      	ldr	r0, [r2, #0]
 8006448:	6018      	str	r0, [r3, #0]
			break;
 800644a:	f014 ba73 	b.w	801a934 <createProblem+0x19a8c>
		case 233 :
			strcpy(p->name,"FOUL LANGUAGE");
 800644e:	687b      	ldr	r3, [r7, #4]
 8006450:	337c      	adds	r3, #124	; 0x7c
 8006452:	4a38      	ldr	r2, [pc, #224]	; (8006534 <createProblem+0x568c>)
 8006454:	461c      	mov	r4, r3
 8006456:	4613      	mov	r3, r2
 8006458:	cb07      	ldmia	r3!, {r0, r1, r2}
 800645a:	6020      	str	r0, [r4, #0]
 800645c:	6061      	str	r1, [r4, #4]
 800645e:	60a2      	str	r2, [r4, #8]
 8006460:	881b      	ldrh	r3, [r3, #0]
 8006462:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 9;
 8006464:	687b      	ldr	r3, [r7, #4]
 8006466:	2209      	movs	r2, #9
 8006468:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,K,H,K,G,G,B,D");
 800646a:	687b      	ldr	r3, [r7, #4]
 800646c:	3340      	adds	r3, #64	; 0x40
 800646e:	4a32      	ldr	r2, [pc, #200]	; (8006538 <createProblem+0x5690>)
 8006470:	461d      	mov	r5, r3
 8006472:	4614      	mov	r4, r2
 8006474:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006476:	6028      	str	r0, [r5, #0]
 8006478:	6069      	str	r1, [r5, #4]
 800647a:	60aa      	str	r2, [r5, #8]
 800647c:	60eb      	str	r3, [r5, #12]
 800647e:	8823      	ldrh	r3, [r4, #0]
 8006480:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,5,9,12,14,14,17,12,18");
 8006482:	687b      	ldr	r3, [r7, #4]
 8006484:	3304      	adds	r3, #4
 8006486:	4a2d      	ldr	r2, [pc, #180]	; (800653c <createProblem+0x5694>)
 8006488:	461d      	mov	r5, r3
 800648a:	4614      	mov	r4, r2
 800648c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800648e:	6028      	str	r0, [r5, #0]
 8006490:	6069      	str	r1, [r5, #4]
 8006492:	60aa      	str	r2, [r5, #8]
 8006494:	60eb      	str	r3, [r5, #12]
 8006496:	cc03      	ldmia	r4!, {r0, r1}
 8006498:	6128      	str	r0, [r5, #16]
 800649a:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 800649c:	687b      	ldr	r3, [r7, #4]
 800649e:	33d8      	adds	r3, #216	; 0xd8
 80064a0:	4a0b      	ldr	r2, [pc, #44]	; (80064d0 <createProblem+0x5628>)
 80064a2:	461d      	mov	r5, r3
 80064a4:	4614      	mov	r4, r2
 80064a6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80064a8:	6028      	str	r0, [r5, #0]
 80064aa:	6069      	str	r1, [r5, #4]
 80064ac:	60aa      	str	r2, [r5, #8]
 80064ae:	60eb      	str	r3, [r5, #12]
 80064b0:	8823      	ldrh	r3, [r4, #0]
 80064b2:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6C+");
 80064b4:	687b      	ldr	r3, [r7, #4]
 80064b6:	33cc      	adds	r3, #204	; 0xcc
 80064b8:	4a0b      	ldr	r2, [pc, #44]	; (80064e8 <createProblem+0x5640>)
 80064ba:	6810      	ldr	r0, [r2, #0]
 80064bc:	6018      	str	r0, [r3, #0]
			break;
 80064be:	f014 ba39 	b.w	801a934 <createProblem+0x19a8c>
 80064c2:	bf00      	nop
 80064c4:	080223b0 	.word	0x080223b0
 80064c8:	080223c4 	.word	0x080223c4
 80064cc:	080223d8 	.word	0x080223d8
 80064d0:	08020dfc 	.word	0x08020dfc
 80064d4:	08020830 	.word	0x08020830
 80064d8:	080223f0 	.word	0x080223f0
 80064dc:	080223f8 	.word	0x080223f8
 80064e0:	08022404 	.word	0x08022404
 80064e4:	080208a0 	.word	0x080208a0
 80064e8:	08020928 	.word	0x08020928
 80064ec:	08022414 	.word	0x08022414
 80064f0:	0802241c 	.word	0x0802241c
 80064f4:	0802242c 	.word	0x0802242c
 80064f8:	08022444 	.word	0x08022444
 80064fc:	080209a4 	.word	0x080209a4
 8006500:	08022454 	.word	0x08022454
 8006504:	08022460 	.word	0x08022460
 8006508:	08022470 	.word	0x08022470
 800650c:	08020a14 	.word	0x08020a14
 8006510:	08020874 	.word	0x08020874
 8006514:	08022484 	.word	0x08022484
 8006518:	08022494 	.word	0x08022494
 800651c:	080224a0 	.word	0x080224a0
 8006520:	08021748 	.word	0x08021748
 8006524:	080224ac 	.word	0x080224ac
 8006528:	080224b0 	.word	0x080224b0
 800652c:	080224c0 	.word	0x080224c0
 8006530:	080224d0 	.word	0x080224d0
 8006534:	080224e4 	.word	0x080224e4
 8006538:	080224f4 	.word	0x080224f4
 800653c:	08022508 	.word	0x08022508
		case 234 :
			strcpy(p->name,"V1.");
 8006540:	687b      	ldr	r3, [r7, #4]
 8006542:	337c      	adds	r3, #124	; 0x7c
 8006544:	4ab8      	ldr	r2, [pc, #736]	; (8006828 <createProblem+0x5980>)
 8006546:	6810      	ldr	r0, [r2, #0]
 8006548:	6018      	str	r0, [r3, #0]
			p->moveSize = 9;
 800654a:	687b      	ldr	r3, [r7, #4]
 800654c:	2209      	movs	r2, #9
 800654e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,C,G,C,E,A,C,A");
 8006550:	687b      	ldr	r3, [r7, #4]
 8006552:	3340      	adds	r3, #64	; 0x40
 8006554:	4ab5      	ldr	r2, [pc, #724]	; (800682c <createProblem+0x5984>)
 8006556:	461d      	mov	r5, r3
 8006558:	4614      	mov	r4, r2
 800655a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800655c:	6028      	str	r0, [r5, #0]
 800655e:	6069      	str	r1, [r5, #4]
 8006560:	60aa      	str	r2, [r5, #8]
 8006562:	60eb      	str	r3, [r5, #12]
 8006564:	8823      	ldrh	r3, [r4, #0]
 8006566:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"6,5,8,10,13,14,14,16,18");
 8006568:	687b      	ldr	r3, [r7, #4]
 800656a:	3304      	adds	r3, #4
 800656c:	4ab0      	ldr	r2, [pc, #704]	; (8006830 <createProblem+0x5988>)
 800656e:	461d      	mov	r5, r3
 8006570:	4614      	mov	r4, r2
 8006572:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006574:	6028      	str	r0, [r5, #0]
 8006576:	6069      	str	r1, [r5, #4]
 8006578:	60aa      	str	r2, [r5, #8]
 800657a:	60eb      	str	r3, [r5, #12]
 800657c:	cc03      	ldmia	r4!, {r0, r1}
 800657e:	6128      	str	r0, [r5, #16]
 8006580:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8006582:	687b      	ldr	r3, [r7, #4]
 8006584:	33d8      	adds	r3, #216	; 0xd8
 8006586:	4aab      	ldr	r2, [pc, #684]	; (8006834 <createProblem+0x598c>)
 8006588:	461d      	mov	r5, r3
 800658a:	4614      	mov	r4, r2
 800658c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800658e:	6028      	str	r0, [r5, #0]
 8006590:	6069      	str	r1, [r5, #4]
 8006592:	60aa      	str	r2, [r5, #8]
 8006594:	60eb      	str	r3, [r5, #12]
 8006596:	8823      	ldrh	r3, [r4, #0]
 8006598:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 800659a:	687b      	ldr	r3, [r7, #4]
 800659c:	33cc      	adds	r3, #204	; 0xcc
 800659e:	4aa6      	ldr	r2, [pc, #664]	; (8006838 <createProblem+0x5990>)
 80065a0:	6810      	ldr	r0, [r2, #0]
 80065a2:	6018      	str	r0, [r3, #0]
			break;
 80065a4:	f014 b9c6 	b.w	801a934 <createProblem+0x19a8c>
		case 235 :
			strcpy(p->name,"TIGER");
 80065a8:	687b      	ldr	r3, [r7, #4]
 80065aa:	337c      	adds	r3, #124	; 0x7c
 80065ac:	4aa3      	ldr	r2, [pc, #652]	; (800683c <createProblem+0x5994>)
 80065ae:	6810      	ldr	r0, [r2, #0]
 80065b0:	6018      	str	r0, [r3, #0]
 80065b2:	8892      	ldrh	r2, [r2, #4]
 80065b4:	809a      	strh	r2, [r3, #4]
			p->moveSize = 7;
 80065b6:	687b      	ldr	r3, [r7, #4]
 80065b8:	2207      	movs	r2, #7
 80065ba:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,D,G,H,C,C,A");
 80065bc:	687b      	ldr	r3, [r7, #4]
 80065be:	3340      	adds	r3, #64	; 0x40
 80065c0:	4a9f      	ldr	r2, [pc, #636]	; (8006840 <createProblem+0x5998>)
 80065c2:	461c      	mov	r4, r3
 80065c4:	4613      	mov	r3, r2
 80065c6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80065c8:	6020      	str	r0, [r4, #0]
 80065ca:	6061      	str	r1, [r4, #4]
 80065cc:	60a2      	str	r2, [r4, #8]
 80065ce:	881b      	ldrh	r3, [r3, #0]
 80065d0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,7,10,13,16,13,18");
 80065d2:	687b      	ldr	r3, [r7, #4]
 80065d4:	3304      	adds	r3, #4
 80065d6:	4a9b      	ldr	r2, [pc, #620]	; (8006844 <createProblem+0x599c>)
 80065d8:	461d      	mov	r5, r3
 80065da:	4614      	mov	r4, r2
 80065dc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80065de:	6028      	str	r0, [r5, #0]
 80065e0:	6069      	str	r1, [r5, #4]
 80065e2:	60aa      	str	r2, [r5, #8]
 80065e4:	60eb      	str	r3, [r5, #12]
 80065e6:	8823      	ldrh	r3, [r4, #0]
 80065e8:	78a2      	ldrb	r2, [r4, #2]
 80065ea:	822b      	strh	r3, [r5, #16]
 80065ec:	4613      	mov	r3, r2
 80065ee:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80065f0:	687b      	ldr	r3, [r7, #4]
 80065f2:	33d8      	adds	r3, #216	; 0xd8
 80065f4:	4a94      	ldr	r2, [pc, #592]	; (8006848 <createProblem+0x59a0>)
 80065f6:	461c      	mov	r4, r3
 80065f8:	4613      	mov	r3, r2
 80065fa:	cb07      	ldmia	r3!, {r0, r1, r2}
 80065fc:	6020      	str	r0, [r4, #0]
 80065fe:	6061      	str	r1, [r4, #4]
 8006600:	60a2      	str	r2, [r4, #8]
 8006602:	881b      	ldrh	r3, [r3, #0]
 8006604:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8006606:	687b      	ldr	r3, [r7, #4]
 8006608:	33cc      	adds	r3, #204	; 0xcc
 800660a:	4a90      	ldr	r2, [pc, #576]	; (800684c <createProblem+0x59a4>)
 800660c:	6810      	ldr	r0, [r2, #0]
 800660e:	6018      	str	r0, [r3, #0]
			break;
 8006610:	f014 b990 	b.w	801a934 <createProblem+0x19a8c>
		case 236 :
			strcpy(p->name,"TIGHT BOX");
 8006614:	687b      	ldr	r3, [r7, #4]
 8006616:	337c      	adds	r3, #124	; 0x7c
 8006618:	498d      	ldr	r1, [pc, #564]	; (8006850 <createProblem+0x59a8>)
 800661a:	461a      	mov	r2, r3
 800661c:	460b      	mov	r3, r1
 800661e:	cb03      	ldmia	r3!, {r0, r1}
 8006620:	6010      	str	r0, [r2, #0]
 8006622:	6051      	str	r1, [r2, #4]
 8006624:	881b      	ldrh	r3, [r3, #0]
 8006626:	8113      	strh	r3, [r2, #8]
			p->moveSize = 8;
 8006628:	687b      	ldr	r3, [r7, #4]
 800662a:	2208      	movs	r2, #8
 800662c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,D,A,D,E,G,D");
 800662e:	687b      	ldr	r3, [r7, #4]
 8006630:	3340      	adds	r3, #64	; 0x40
 8006632:	4a88      	ldr	r2, [pc, #544]	; (8006854 <createProblem+0x59ac>)
 8006634:	461c      	mov	r4, r3
 8006636:	4615      	mov	r5, r2
 8006638:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800663a:	6020      	str	r0, [r4, #0]
 800663c:	6061      	str	r1, [r4, #4]
 800663e:	60a2      	str	r2, [r4, #8]
 8006640:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,7,9,11,12,17,18");
 8006642:	687b      	ldr	r3, [r7, #4]
 8006644:	3304      	adds	r3, #4
 8006646:	4a84      	ldr	r2, [pc, #528]	; (8006858 <createProblem+0x59b0>)
 8006648:	461d      	mov	r5, r3
 800664a:	4614      	mov	r4, r2
 800664c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800664e:	6028      	str	r0, [r5, #0]
 8006650:	6069      	str	r1, [r5, #4]
 8006652:	60aa      	str	r2, [r5, #8]
 8006654:	60eb      	str	r3, [r5, #12]
 8006656:	6820      	ldr	r0, [r4, #0]
 8006658:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800665a:	687b      	ldr	r3, [r7, #4]
 800665c:	33d8      	adds	r3, #216	; 0xd8
 800665e:	4a7f      	ldr	r2, [pc, #508]	; (800685c <createProblem+0x59b4>)
 8006660:	461c      	mov	r4, r3
 8006662:	4615      	mov	r5, r2
 8006664:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006666:	6020      	str	r0, [r4, #0]
 8006668:	6061      	str	r1, [r4, #4]
 800666a:	60a2      	str	r2, [r4, #8]
 800666c:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 800666e:	687b      	ldr	r3, [r7, #4]
 8006670:	33cc      	adds	r3, #204	; 0xcc
 8006672:	4a76      	ldr	r2, [pc, #472]	; (800684c <createProblem+0x59a4>)
 8006674:	6810      	ldr	r0, [r2, #0]
 8006676:	6018      	str	r0, [r3, #0]
			break;
 8006678:	f014 b95c 	b.w	801a934 <createProblem+0x19a8c>
		case 237 :
			strcpy(p->name,"CAD");
 800667c:	687b      	ldr	r3, [r7, #4]
 800667e:	337c      	adds	r3, #124	; 0x7c
 8006680:	4a77      	ldr	r2, [pc, #476]	; (8006860 <createProblem+0x59b8>)
 8006682:	6810      	ldr	r0, [r2, #0]
 8006684:	6018      	str	r0, [r3, #0]
			p->moveSize = 8;
 8006686:	687b      	ldr	r3, [r7, #4]
 8006688:	2208      	movs	r2, #8
 800668a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,K,J,H,E,G,D");
 800668c:	687b      	ldr	r3, [r7, #4]
 800668e:	3340      	adds	r3, #64	; 0x40
 8006690:	4a74      	ldr	r2, [pc, #464]	; (8006864 <createProblem+0x59bc>)
 8006692:	461c      	mov	r4, r3
 8006694:	4615      	mov	r5, r2
 8006696:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006698:	6020      	str	r0, [r4, #0]
 800669a:	6061      	str	r1, [r4, #4]
 800669c:	60a2      	str	r2, [r4, #8]
 800669e:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,9,12,12,14,17,18");
 80066a0:	687b      	ldr	r3, [r7, #4]
 80066a2:	3304      	adds	r3, #4
 80066a4:	4a70      	ldr	r2, [pc, #448]	; (8006868 <createProblem+0x59c0>)
 80066a6:	461d      	mov	r5, r3
 80066a8:	4614      	mov	r4, r2
 80066aa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80066ac:	6028      	str	r0, [r5, #0]
 80066ae:	6069      	str	r1, [r5, #4]
 80066b0:	60aa      	str	r2, [r5, #8]
 80066b2:	60eb      	str	r3, [r5, #12]
 80066b4:	6820      	ldr	r0, [r4, #0]
 80066b6:	6128      	str	r0, [r5, #16]
 80066b8:	7923      	ldrb	r3, [r4, #4]
 80066ba:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 80066bc:	687b      	ldr	r3, [r7, #4]
 80066be:	33d8      	adds	r3, #216	; 0xd8
 80066c0:	4a66      	ldr	r2, [pc, #408]	; (800685c <createProblem+0x59b4>)
 80066c2:	461c      	mov	r4, r3
 80066c4:	4615      	mov	r5, r2
 80066c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80066c8:	6020      	str	r0, [r4, #0]
 80066ca:	6061      	str	r1, [r4, #4]
 80066cc:	60a2      	str	r2, [r4, #8]
 80066ce:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 80066d0:	687b      	ldr	r3, [r7, #4]
 80066d2:	33cc      	adds	r3, #204	; 0xcc
 80066d4:	4a65      	ldr	r2, [pc, #404]	; (800686c <createProblem+0x59c4>)
 80066d6:	8811      	ldrh	r1, [r2, #0]
 80066d8:	7892      	ldrb	r2, [r2, #2]
 80066da:	8019      	strh	r1, [r3, #0]
 80066dc:	709a      	strb	r2, [r3, #2]
			break;
 80066de:	f014 b929 	b.w	801a934 <createProblem+0x19a8c>
		case 238 :
			strcpy(p->name,"CAD");
 80066e2:	687b      	ldr	r3, [r7, #4]
 80066e4:	337c      	adds	r3, #124	; 0x7c
 80066e6:	4a5e      	ldr	r2, [pc, #376]	; (8006860 <createProblem+0x59b8>)
 80066e8:	6810      	ldr	r0, [r2, #0]
 80066ea:	6018      	str	r0, [r3, #0]
			p->moveSize = 8;
 80066ec:	687b      	ldr	r3, [r7, #4]
 80066ee:	2208      	movs	r2, #8
 80066f0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,K,J,H,E,G,D");
 80066f2:	687b      	ldr	r3, [r7, #4]
 80066f4:	3340      	adds	r3, #64	; 0x40
 80066f6:	4a5b      	ldr	r2, [pc, #364]	; (8006864 <createProblem+0x59bc>)
 80066f8:	461c      	mov	r4, r3
 80066fa:	4615      	mov	r5, r2
 80066fc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80066fe:	6020      	str	r0, [r4, #0]
 8006700:	6061      	str	r1, [r4, #4]
 8006702:	60a2      	str	r2, [r4, #8]
 8006704:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,9,12,12,14,17,18");
 8006706:	687b      	ldr	r3, [r7, #4]
 8006708:	3304      	adds	r3, #4
 800670a:	4a57      	ldr	r2, [pc, #348]	; (8006868 <createProblem+0x59c0>)
 800670c:	461d      	mov	r5, r3
 800670e:	4614      	mov	r4, r2
 8006710:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006712:	6028      	str	r0, [r5, #0]
 8006714:	6069      	str	r1, [r5, #4]
 8006716:	60aa      	str	r2, [r5, #8]
 8006718:	60eb      	str	r3, [r5, #12]
 800671a:	6820      	ldr	r0, [r4, #0]
 800671c:	6128      	str	r0, [r5, #16]
 800671e:	7923      	ldrb	r3, [r4, #4]
 8006720:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8006722:	687b      	ldr	r3, [r7, #4]
 8006724:	33d8      	adds	r3, #216	; 0xd8
 8006726:	4a4d      	ldr	r2, [pc, #308]	; (800685c <createProblem+0x59b4>)
 8006728:	461c      	mov	r4, r3
 800672a:	4615      	mov	r5, r2
 800672c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800672e:	6020      	str	r0, [r4, #0]
 8006730:	6061      	str	r1, [r4, #4]
 8006732:	60a2      	str	r2, [r4, #8]
 8006734:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8006736:	687b      	ldr	r3, [r7, #4]
 8006738:	33cc      	adds	r3, #204	; 0xcc
 800673a:	4a4c      	ldr	r2, [pc, #304]	; (800686c <createProblem+0x59c4>)
 800673c:	8811      	ldrh	r1, [r2, #0]
 800673e:	7892      	ldrb	r2, [r2, #2]
 8006740:	8019      	strh	r1, [r3, #0]
 8006742:	709a      	strb	r2, [r3, #2]
			break;
 8006744:	f014 b8f6 	b.w	801a934 <createProblem+0x19a8c>
		case 239 :
			strcpy(p->name,"BLACK POCKETS MATTER");
 8006748:	687b      	ldr	r3, [r7, #4]
 800674a:	337c      	adds	r3, #124	; 0x7c
 800674c:	4a48      	ldr	r2, [pc, #288]	; (8006870 <createProblem+0x59c8>)
 800674e:	461d      	mov	r5, r3
 8006750:	4614      	mov	r4, r2
 8006752:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006754:	6028      	str	r0, [r5, #0]
 8006756:	6069      	str	r1, [r5, #4]
 8006758:	60aa      	str	r2, [r5, #8]
 800675a:	60eb      	str	r3, [r5, #12]
 800675c:	6820      	ldr	r0, [r4, #0]
 800675e:	6128      	str	r0, [r5, #16]
 8006760:	7923      	ldrb	r3, [r4, #4]
 8006762:	752b      	strb	r3, [r5, #20]
			p->moveSize = 8;
 8006764:	687b      	ldr	r3, [r7, #4]
 8006766:	2208      	movs	r2, #8
 8006768:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,D,B,G,H,C,D");
 800676a:	687b      	ldr	r3, [r7, #4]
 800676c:	3340      	adds	r3, #64	; 0x40
 800676e:	4a41      	ldr	r2, [pc, #260]	; (8006874 <createProblem+0x59cc>)
 8006770:	461c      	mov	r4, r3
 8006772:	4615      	mov	r5, r2
 8006774:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006776:	6020      	str	r0, [r4, #0]
 8006778:	6061      	str	r1, [r4, #4]
 800677a:	60a2      	str	r2, [r4, #8]
 800677c:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,7,10,10,13,16,18");
 800677e:	687b      	ldr	r3, [r7, #4]
 8006780:	3304      	adds	r3, #4
 8006782:	4a3d      	ldr	r2, [pc, #244]	; (8006878 <createProblem+0x59d0>)
 8006784:	461d      	mov	r5, r3
 8006786:	4614      	mov	r4, r2
 8006788:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800678a:	6028      	str	r0, [r5, #0]
 800678c:	6069      	str	r1, [r5, #4]
 800678e:	60aa      	str	r2, [r5, #8]
 8006790:	60eb      	str	r3, [r5, #12]
 8006792:	6820      	ldr	r0, [r4, #0]
 8006794:	6128      	str	r0, [r5, #16]
 8006796:	7923      	ldrb	r3, [r4, #4]
 8006798:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800679a:	687b      	ldr	r3, [r7, #4]
 800679c:	33d8      	adds	r3, #216	; 0xd8
 800679e:	4a2f      	ldr	r2, [pc, #188]	; (800685c <createProblem+0x59b4>)
 80067a0:	461c      	mov	r4, r3
 80067a2:	4615      	mov	r5, r2
 80067a4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80067a6:	6020      	str	r0, [r4, #0]
 80067a8:	6061      	str	r1, [r4, #4]
 80067aa:	60a2      	str	r2, [r4, #8]
 80067ac:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 80067ae:	687b      	ldr	r3, [r7, #4]
 80067b0:	33cc      	adds	r3, #204	; 0xcc
 80067b2:	4a32      	ldr	r2, [pc, #200]	; (800687c <createProblem+0x59d4>)
 80067b4:	6810      	ldr	r0, [r2, #0]
 80067b6:	6018      	str	r0, [r3, #0]
			break;
 80067b8:	f014 b8bc 	b.w	801a934 <createProblem+0x19a8c>
		case 24 :
			strcpy(p->name,"LADYBUG'S HEEL");
 80067bc:	687b      	ldr	r3, [r7, #4]
 80067be:	337c      	adds	r3, #124	; 0x7c
 80067c0:	4a2f      	ldr	r2, [pc, #188]	; (8006880 <createProblem+0x59d8>)
 80067c2:	461c      	mov	r4, r3
 80067c4:	4613      	mov	r3, r2
 80067c6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80067c8:	6020      	str	r0, [r4, #0]
 80067ca:	6061      	str	r1, [r4, #4]
 80067cc:	60a2      	str	r2, [r4, #8]
 80067ce:	881a      	ldrh	r2, [r3, #0]
 80067d0:	789b      	ldrb	r3, [r3, #2]
 80067d2:	81a2      	strh	r2, [r4, #12]
 80067d4:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 6;
 80067d6:	687b      	ldr	r3, [r7, #4]
 80067d8:	2206      	movs	r2, #6
 80067da:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,H,C,H,D");
 80067dc:	687b      	ldr	r3, [r7, #4]
 80067de:	3340      	adds	r3, #64	; 0x40
 80067e0:	4a28      	ldr	r2, [pc, #160]	; (8006884 <createProblem+0x59dc>)
 80067e2:	461c      	mov	r4, r3
 80067e4:	4613      	mov	r3, r2
 80067e6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80067e8:	6020      	str	r0, [r4, #0]
 80067ea:	6061      	str	r1, [r4, #4]
 80067ec:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,10,13,16,18");
 80067ee:	687b      	ldr	r3, [r7, #4]
 80067f0:	3304      	adds	r3, #4
 80067f2:	4a25      	ldr	r2, [pc, #148]	; (8006888 <createProblem+0x59e0>)
 80067f4:	461c      	mov	r4, r3
 80067f6:	4615      	mov	r5, r2
 80067f8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80067fa:	6020      	str	r0, [r4, #0]
 80067fc:	6061      	str	r1, [r4, #4]
 80067fe:	60a2      	str	r2, [r4, #8]
 8006800:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8006802:	687b      	ldr	r3, [r7, #4]
 8006804:	33d8      	adds	r3, #216	; 0xd8
 8006806:	4a21      	ldr	r2, [pc, #132]	; (800688c <createProblem+0x59e4>)
 8006808:	461c      	mov	r4, r3
 800680a:	4613      	mov	r3, r2
 800680c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800680e:	6020      	str	r0, [r4, #0]
 8006810:	6061      	str	r1, [r4, #4]
 8006812:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8006814:	687b      	ldr	r3, [r7, #4]
 8006816:	33cc      	adds	r3, #204	; 0xcc
 8006818:	4a14      	ldr	r2, [pc, #80]	; (800686c <createProblem+0x59c4>)
 800681a:	8811      	ldrh	r1, [r2, #0]
 800681c:	7892      	ldrb	r2, [r2, #2]
 800681e:	8019      	strh	r1, [r3, #0]
 8006820:	709a      	strb	r2, [r3, #2]
			break;
 8006822:	f014 b887 	b.w	801a934 <createProblem+0x19a8c>
 8006826:	bf00      	nop
 8006828:	08022520 	.word	0x08022520
 800682c:	08022524 	.word	0x08022524
 8006830:	08022538 	.word	0x08022538
 8006834:	08020dfc 	.word	0x08020dfc
 8006838:	08020830 	.word	0x08020830
 800683c:	08022550 	.word	0x08022550
 8006840:	08022558 	.word	0x08022558
 8006844:	08022568 	.word	0x08022568
 8006848:	08020a14 	.word	0x08020a14
 800684c:	08020928 	.word	0x08020928
 8006850:	0802257c 	.word	0x0802257c
 8006854:	08022588 	.word	0x08022588
 8006858:	08022598 	.word	0x08022598
 800685c:	08020a4c 	.word	0x08020a4c
 8006860:	080225ac 	.word	0x080225ac
 8006864:	080225b0 	.word	0x080225b0
 8006868:	080225c0 	.word	0x080225c0
 800686c:	08020874 	.word	0x08020874
 8006870:	080225d8 	.word	0x080225d8
 8006874:	080225f0 	.word	0x080225f0
 8006878:	08022600 	.word	0x08022600
 800687c:	080209a4 	.word	0x080209a4
 8006880:	08022618 	.word	0x08022618
 8006884:	08022628 	.word	0x08022628
 8006888:	08022634 	.word	0x08022634
 800688c:	08020e90 	.word	0x08020e90
		case 240 :
			strcpy(p->name,"SEANN'S START");
 8006890:	687b      	ldr	r3, [r7, #4]
 8006892:	337c      	adds	r3, #124	; 0x7c
 8006894:	4ac1      	ldr	r2, [pc, #772]	; (8006b9c <createProblem+0x5cf4>)
 8006896:	461c      	mov	r4, r3
 8006898:	4613      	mov	r3, r2
 800689a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800689c:	6020      	str	r0, [r4, #0]
 800689e:	6061      	str	r1, [r4, #4]
 80068a0:	60a2      	str	r2, [r4, #8]
 80068a2:	881b      	ldrh	r3, [r3, #0]
 80068a4:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 80068a6:	687b      	ldr	r3, [r7, #4]
 80068a8:	2207      	movs	r2, #7
 80068aa:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,C,E,E,G,D");
 80068ac:	687b      	ldr	r3, [r7, #4]
 80068ae:	3340      	adds	r3, #64	; 0x40
 80068b0:	4abb      	ldr	r2, [pc, #748]	; (8006ba0 <createProblem+0x5cf8>)
 80068b2:	461c      	mov	r4, r3
 80068b4:	4613      	mov	r3, r2
 80068b6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80068b8:	6020      	str	r0, [r4, #0]
 80068ba:	6061      	str	r1, [r4, #4]
 80068bc:	60a2      	str	r2, [r4, #8]
 80068be:	881b      	ldrh	r3, [r3, #0]
 80068c0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,13,12,16,9,18");
 80068c2:	687b      	ldr	r3, [r7, #4]
 80068c4:	3304      	adds	r3, #4
 80068c6:	4ab7      	ldr	r2, [pc, #732]	; (8006ba4 <createProblem+0x5cfc>)
 80068c8:	461d      	mov	r5, r3
 80068ca:	4614      	mov	r4, r2
 80068cc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80068ce:	6028      	str	r0, [r5, #0]
 80068d0:	6069      	str	r1, [r5, #4]
 80068d2:	60aa      	str	r2, [r5, #8]
 80068d4:	60eb      	str	r3, [r5, #12]
 80068d6:	8823      	ldrh	r3, [r4, #0]
 80068d8:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80068da:	687b      	ldr	r3, [r7, #4]
 80068dc:	33d8      	adds	r3, #216	; 0xd8
 80068de:	4ab2      	ldr	r2, [pc, #712]	; (8006ba8 <createProblem+0x5d00>)
 80068e0:	461c      	mov	r4, r3
 80068e2:	4613      	mov	r3, r2
 80068e4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80068e6:	6020      	str	r0, [r4, #0]
 80068e8:	6061      	str	r1, [r4, #4]
 80068ea:	60a2      	str	r2, [r4, #8]
 80068ec:	881b      	ldrh	r3, [r3, #0]
 80068ee:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80068f0:	687b      	ldr	r3, [r7, #4]
 80068f2:	33cc      	adds	r3, #204	; 0xcc
 80068f4:	4aad      	ldr	r2, [pc, #692]	; (8006bac <createProblem+0x5d04>)
 80068f6:	6810      	ldr	r0, [r2, #0]
 80068f8:	6018      	str	r0, [r3, #0]
			break;
 80068fa:	f014 b81b 	b.w	801a934 <createProblem+0x19a8c>
		case 241 :
			strcpy(p->name,"BLACK HOLDS MATTER");
 80068fe:	687b      	ldr	r3, [r7, #4]
 8006900:	337c      	adds	r3, #124	; 0x7c
 8006902:	4aab      	ldr	r2, [pc, #684]	; (8006bb0 <createProblem+0x5d08>)
 8006904:	461d      	mov	r5, r3
 8006906:	4614      	mov	r4, r2
 8006908:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800690a:	6028      	str	r0, [r5, #0]
 800690c:	6069      	str	r1, [r5, #4]
 800690e:	60aa      	str	r2, [r5, #8]
 8006910:	60eb      	str	r3, [r5, #12]
 8006912:	8823      	ldrh	r3, [r4, #0]
 8006914:	78a2      	ldrb	r2, [r4, #2]
 8006916:	822b      	strh	r3, [r5, #16]
 8006918:	4613      	mov	r3, r2
 800691a:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 11;
 800691c:	687b      	ldr	r3, [r7, #4]
 800691e:	220b      	movs	r2, #11
 8006920:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,J,H,H,F,J,K,G,G,I");
 8006922:	687b      	ldr	r3, [r7, #4]
 8006924:	3340      	adds	r3, #64	; 0x40
 8006926:	4aa3      	ldr	r2, [pc, #652]	; (8006bb4 <createProblem+0x5d0c>)
 8006928:	461d      	mov	r5, r3
 800692a:	4614      	mov	r4, r2
 800692c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800692e:	6028      	str	r0, [r5, #0]
 8006930:	6069      	str	r1, [r5, #4]
 8006932:	60aa      	str	r2, [r5, #8]
 8006934:	60eb      	str	r3, [r5, #12]
 8006936:	6820      	ldr	r0, [r4, #0]
 8006938:	6128      	str	r0, [r5, #16]
 800693a:	88a3      	ldrh	r3, [r4, #4]
 800693c:	82ab      	strh	r3, [r5, #20]
			strcpy(p->moveNumbers,"4,5,7,8,10,11,12,14,17,15,18");
 800693e:	687b      	ldr	r3, [r7, #4]
 8006940:	3304      	adds	r3, #4
 8006942:	4a9d      	ldr	r2, [pc, #628]	; (8006bb8 <createProblem+0x5d10>)
 8006944:	461d      	mov	r5, r3
 8006946:	4614      	mov	r4, r2
 8006948:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800694a:	6028      	str	r0, [r5, #0]
 800694c:	6069      	str	r1, [r5, #4]
 800694e:	60aa      	str	r2, [r5, #8]
 8006950:	60eb      	str	r3, [r5, #12]
 8006952:	cc07      	ldmia	r4!, {r0, r1, r2}
 8006954:	6128      	str	r0, [r5, #16]
 8006956:	6169      	str	r1, [r5, #20]
 8006958:	61aa      	str	r2, [r5, #24]
 800695a:	7823      	ldrb	r3, [r4, #0]
 800695c:	772b      	strb	r3, [r5, #28]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,d,e");
 800695e:	687b      	ldr	r3, [r7, #4]
 8006960:	33d8      	adds	r3, #216	; 0xd8
 8006962:	4a96      	ldr	r2, [pc, #600]	; (8006bbc <createProblem+0x5d14>)
 8006964:	461d      	mov	r5, r3
 8006966:	4614      	mov	r4, r2
 8006968:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800696a:	6028      	str	r0, [r5, #0]
 800696c:	6069      	str	r1, [r5, #4]
 800696e:	60aa      	str	r2, [r5, #8]
 8006970:	60eb      	str	r3, [r5, #12]
 8006972:	6820      	ldr	r0, [r4, #0]
 8006974:	6128      	str	r0, [r5, #16]
 8006976:	88a3      	ldrh	r3, [r4, #4]
 8006978:	82ab      	strh	r3, [r5, #20]
			strcpy(p->grade, "6C");
 800697a:	687b      	ldr	r3, [r7, #4]
 800697c:	33cc      	adds	r3, #204	; 0xcc
 800697e:	4a90      	ldr	r2, [pc, #576]	; (8006bc0 <createProblem+0x5d18>)
 8006980:	8811      	ldrh	r1, [r2, #0]
 8006982:	7892      	ldrb	r2, [r2, #2]
 8006984:	8019      	strh	r1, [r3, #0]
 8006986:	709a      	strb	r2, [r3, #2]
			break;
 8006988:	f013 bfd4 	b.w	801a934 <createProblem+0x19a8c>
		case 242 :
			strcpy(p->name,"SIMON");
 800698c:	687b      	ldr	r3, [r7, #4]
 800698e:	337c      	adds	r3, #124	; 0x7c
 8006990:	4a8c      	ldr	r2, [pc, #560]	; (8006bc4 <createProblem+0x5d1c>)
 8006992:	6810      	ldr	r0, [r2, #0]
 8006994:	6018      	str	r0, [r3, #0]
 8006996:	8892      	ldrh	r2, [r2, #4]
 8006998:	809a      	strh	r2, [r3, #4]
			p->moveSize = 7;
 800699a:	687b      	ldr	r3, [r7, #4]
 800699c:	2207      	movs	r2, #7
 800699e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,C,I,F,B,G,A");
 80069a0:	687b      	ldr	r3, [r7, #4]
 80069a2:	3340      	adds	r3, #64	; 0x40
 80069a4:	4a88      	ldr	r2, [pc, #544]	; (8006bc8 <createProblem+0x5d20>)
 80069a6:	461c      	mov	r4, r3
 80069a8:	4613      	mov	r3, r2
 80069aa:	cb07      	ldmia	r3!, {r0, r1, r2}
 80069ac:	6020      	str	r0, [r4, #0]
 80069ae:	6061      	str	r1, [r4, #4]
 80069b0:	60a2      	str	r2, [r4, #8]
 80069b2:	881b      	ldrh	r3, [r3, #0]
 80069b4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,7,11,12,17,18");
 80069b6:	687b      	ldr	r3, [r7, #4]
 80069b8:	3304      	adds	r3, #4
 80069ba:	4a84      	ldr	r2, [pc, #528]	; (8006bcc <createProblem+0x5d24>)
 80069bc:	461d      	mov	r5, r3
 80069be:	4614      	mov	r4, r2
 80069c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80069c2:	6028      	str	r0, [r5, #0]
 80069c4:	6069      	str	r1, [r5, #4]
 80069c6:	60aa      	str	r2, [r5, #8]
 80069c8:	60eb      	str	r3, [r5, #12]
 80069ca:	8823      	ldrh	r3, [r4, #0]
 80069cc:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 80069ce:	687b      	ldr	r3, [r7, #4]
 80069d0:	33d8      	adds	r3, #216	; 0xd8
 80069d2:	4a7f      	ldr	r2, [pc, #508]	; (8006bd0 <createProblem+0x5d28>)
 80069d4:	461c      	mov	r4, r3
 80069d6:	4613      	mov	r3, r2
 80069d8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80069da:	6020      	str	r0, [r4, #0]
 80069dc:	6061      	str	r1, [r4, #4]
 80069de:	60a2      	str	r2, [r4, #8]
 80069e0:	881b      	ldrh	r3, [r3, #0]
 80069e2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7C+");
 80069e4:	687b      	ldr	r3, [r7, #4]
 80069e6:	33cc      	adds	r3, #204	; 0xcc
 80069e8:	4a7a      	ldr	r2, [pc, #488]	; (8006bd4 <createProblem+0x5d2c>)
 80069ea:	6810      	ldr	r0, [r2, #0]
 80069ec:	6018      	str	r0, [r3, #0]
			break;
 80069ee:	f013 bfa1 	b.w	801a934 <createProblem+0x19a8c>
		case 243 :
			strcpy(p->name,"BLACK DOJO");
 80069f2:	687b      	ldr	r3, [r7, #4]
 80069f4:	337c      	adds	r3, #124	; 0x7c
 80069f6:	4978      	ldr	r1, [pc, #480]	; (8006bd8 <createProblem+0x5d30>)
 80069f8:	461a      	mov	r2, r3
 80069fa:	460b      	mov	r3, r1
 80069fc:	cb03      	ldmia	r3!, {r0, r1}
 80069fe:	6010      	str	r0, [r2, #0]
 8006a00:	6051      	str	r1, [r2, #4]
 8006a02:	8819      	ldrh	r1, [r3, #0]
 8006a04:	789b      	ldrb	r3, [r3, #2]
 8006a06:	8111      	strh	r1, [r2, #8]
 8006a08:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 8006a0a:	687b      	ldr	r3, [r7, #4]
 8006a0c:	2206      	movs	r2, #6
 8006a0e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,E,F,B,A");
 8006a10:	687b      	ldr	r3, [r7, #4]
 8006a12:	3340      	adds	r3, #64	; 0x40
 8006a14:	4a71      	ldr	r2, [pc, #452]	; (8006bdc <createProblem+0x5d34>)
 8006a16:	461c      	mov	r4, r3
 8006a18:	4613      	mov	r3, r2
 8006a1a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006a1c:	6020      	str	r0, [r4, #0]
 8006a1e:	6061      	str	r1, [r4, #4]
 8006a20:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,16,11,10,18");
 8006a22:	687b      	ldr	r3, [r7, #4]
 8006a24:	3304      	adds	r3, #4
 8006a26:	4a6e      	ldr	r2, [pc, #440]	; (8006be0 <createProblem+0x5d38>)
 8006a28:	461c      	mov	r4, r3
 8006a2a:	4615      	mov	r5, r2
 8006a2c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006a2e:	6020      	str	r0, [r4, #0]
 8006a30:	6061      	str	r1, [r4, #4]
 8006a32:	60a2      	str	r2, [r4, #8]
 8006a34:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8006a36:	687b      	ldr	r3, [r7, #4]
 8006a38:	33d8      	adds	r3, #216	; 0xd8
 8006a3a:	4a6a      	ldr	r2, [pc, #424]	; (8006be4 <createProblem+0x5d3c>)
 8006a3c:	461c      	mov	r4, r3
 8006a3e:	4613      	mov	r3, r2
 8006a40:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006a42:	6020      	str	r0, [r4, #0]
 8006a44:	6061      	str	r1, [r4, #4]
 8006a46:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B");
 8006a48:	687b      	ldr	r3, [r7, #4]
 8006a4a:	33cc      	adds	r3, #204	; 0xcc
 8006a4c:	4a66      	ldr	r2, [pc, #408]	; (8006be8 <createProblem+0x5d40>)
 8006a4e:	8811      	ldrh	r1, [r2, #0]
 8006a50:	7892      	ldrb	r2, [r2, #2]
 8006a52:	8019      	strh	r1, [r3, #0]
 8006a54:	709a      	strb	r2, [r3, #2]
			break;
 8006a56:	f013 bf6d 	b.w	801a934 <createProblem+0x19a8c>
		case 244 :
			strcpy(p->name,"DAN1");
 8006a5a:	687b      	ldr	r3, [r7, #4]
 8006a5c:	337c      	adds	r3, #124	; 0x7c
 8006a5e:	4a63      	ldr	r2, [pc, #396]	; (8006bec <createProblem+0x5d44>)
 8006a60:	6810      	ldr	r0, [r2, #0]
 8006a62:	6018      	str	r0, [r3, #0]
 8006a64:	7912      	ldrb	r2, [r2, #4]
 8006a66:	711a      	strb	r2, [r3, #4]
			p->moveSize = 8;
 8006a68:	687b      	ldr	r3, [r7, #4]
 8006a6a:	2208      	movs	r2, #8
 8006a6c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,G,F,E,C,D,D");
 8006a6e:	687b      	ldr	r3, [r7, #4]
 8006a70:	3340      	adds	r3, #64	; 0x40
 8006a72:	4a5f      	ldr	r2, [pc, #380]	; (8006bf0 <createProblem+0x5d48>)
 8006a74:	461c      	mov	r4, r3
 8006a76:	4615      	mov	r5, r2
 8006a78:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006a7a:	6020      	str	r0, [r4, #0]
 8006a7c:	6061      	str	r1, [r4, #4]
 8006a7e:	60a2      	str	r2, [r4, #8]
 8006a80:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,9,11,12,13,15,18");
 8006a82:	687b      	ldr	r3, [r7, #4]
 8006a84:	3304      	adds	r3, #4
 8006a86:	4a5b      	ldr	r2, [pc, #364]	; (8006bf4 <createProblem+0x5d4c>)
 8006a88:	461d      	mov	r5, r3
 8006a8a:	4614      	mov	r4, r2
 8006a8c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006a8e:	6028      	str	r0, [r5, #0]
 8006a90:	6069      	str	r1, [r5, #4]
 8006a92:	60aa      	str	r2, [r5, #8]
 8006a94:	60eb      	str	r3, [r5, #12]
 8006a96:	6820      	ldr	r0, [r4, #0]
 8006a98:	6128      	str	r0, [r5, #16]
 8006a9a:	7923      	ldrb	r3, [r4, #4]
 8006a9c:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8006a9e:	687b      	ldr	r3, [r7, #4]
 8006aa0:	33d8      	adds	r3, #216	; 0xd8
 8006aa2:	4a55      	ldr	r2, [pc, #340]	; (8006bf8 <createProblem+0x5d50>)
 8006aa4:	461c      	mov	r4, r3
 8006aa6:	4615      	mov	r5, r2
 8006aa8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006aaa:	6020      	str	r0, [r4, #0]
 8006aac:	6061      	str	r1, [r4, #4]
 8006aae:	60a2      	str	r2, [r4, #8]
 8006ab0:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8006ab2:	687b      	ldr	r3, [r7, #4]
 8006ab4:	33cc      	adds	r3, #204	; 0xcc
 8006ab6:	4a51      	ldr	r2, [pc, #324]	; (8006bfc <createProblem+0x5d54>)
 8006ab8:	6810      	ldr	r0, [r2, #0]
 8006aba:	6018      	str	r0, [r3, #0]
			break;
 8006abc:	f013 bf3a 	b.w	801a934 <createProblem+0x19a8c>
		case 245 :
			strcpy(p->name,"모리");
 8006ac0:	687b      	ldr	r3, [r7, #4]
 8006ac2:	337c      	adds	r3, #124	; 0x7c
 8006ac4:	4a4e      	ldr	r2, [pc, #312]	; (8006c00 <createProblem+0x5d58>)
 8006ac6:	6810      	ldr	r0, [r2, #0]
 8006ac8:	6018      	str	r0, [r3, #0]
 8006aca:	8891      	ldrh	r1, [r2, #4]
 8006acc:	7992      	ldrb	r2, [r2, #6]
 8006ace:	8099      	strh	r1, [r3, #4]
 8006ad0:	719a      	strb	r2, [r3, #6]
			p->moveSize = 7;
 8006ad2:	687b      	ldr	r3, [r7, #4]
 8006ad4:	2207      	movs	r2, #7
 8006ad6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,F,B,D,E,I");
 8006ad8:	687b      	ldr	r3, [r7, #4]
 8006ada:	3340      	adds	r3, #64	; 0x40
 8006adc:	4a49      	ldr	r2, [pc, #292]	; (8006c04 <createProblem+0x5d5c>)
 8006ade:	461c      	mov	r4, r3
 8006ae0:	4613      	mov	r3, r2
 8006ae2:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006ae4:	6020      	str	r0, [r4, #0]
 8006ae6:	6061      	str	r1, [r4, #4]
 8006ae8:	60a2      	str	r2, [r4, #8]
 8006aea:	881b      	ldrh	r3, [r3, #0]
 8006aec:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,11,12,15,16,18");
 8006aee:	687b      	ldr	r3, [r7, #4]
 8006af0:	3304      	adds	r3, #4
 8006af2:	4a45      	ldr	r2, [pc, #276]	; (8006c08 <createProblem+0x5d60>)
 8006af4:	461d      	mov	r5, r3
 8006af6:	4614      	mov	r4, r2
 8006af8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006afa:	6028      	str	r0, [r5, #0]
 8006afc:	6069      	str	r1, [r5, #4]
 8006afe:	60aa      	str	r2, [r5, #8]
 8006b00:	60eb      	str	r3, [r5, #12]
 8006b02:	8823      	ldrh	r3, [r4, #0]
 8006b04:	78a2      	ldrb	r2, [r4, #2]
 8006b06:	822b      	strh	r3, [r5, #16]
 8006b08:	4613      	mov	r3, r2
 8006b0a:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8006b0c:	687b      	ldr	r3, [r7, #4]
 8006b0e:	33d8      	adds	r3, #216	; 0xd8
 8006b10:	4a25      	ldr	r2, [pc, #148]	; (8006ba8 <createProblem+0x5d00>)
 8006b12:	461c      	mov	r4, r3
 8006b14:	4613      	mov	r3, r2
 8006b16:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006b18:	6020      	str	r0, [r4, #0]
 8006b1a:	6061      	str	r1, [r4, #4]
 8006b1c:	60a2      	str	r2, [r4, #8]
 8006b1e:	881b      	ldrh	r3, [r3, #0]
 8006b20:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8006b22:	687b      	ldr	r3, [r7, #4]
 8006b24:	33cc      	adds	r3, #204	; 0xcc
 8006b26:	4a35      	ldr	r2, [pc, #212]	; (8006bfc <createProblem+0x5d54>)
 8006b28:	6810      	ldr	r0, [r2, #0]
 8006b2a:	6018      	str	r0, [r3, #0]
			break;
 8006b2c:	f013 bf02 	b.w	801a934 <createProblem+0x19a8c>
		case 246 :
			strcpy(p->name,"BLACK HOLE SUN");
 8006b30:	687b      	ldr	r3, [r7, #4]
 8006b32:	337c      	adds	r3, #124	; 0x7c
 8006b34:	4a35      	ldr	r2, [pc, #212]	; (8006c0c <createProblem+0x5d64>)
 8006b36:	461c      	mov	r4, r3
 8006b38:	4613      	mov	r3, r2
 8006b3a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006b3c:	6020      	str	r0, [r4, #0]
 8006b3e:	6061      	str	r1, [r4, #4]
 8006b40:	60a2      	str	r2, [r4, #8]
 8006b42:	881a      	ldrh	r2, [r3, #0]
 8006b44:	789b      	ldrb	r3, [r3, #2]
 8006b46:	81a2      	strh	r2, [r4, #12]
 8006b48:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 6;
 8006b4a:	687b      	ldr	r3, [r7, #4]
 8006b4c:	2206      	movs	r2, #6
 8006b4e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,G,C,B,A");
 8006b50:	687b      	ldr	r3, [r7, #4]
 8006b52:	3340      	adds	r3, #64	; 0x40
 8006b54:	4a2e      	ldr	r2, [pc, #184]	; (8006c10 <createProblem+0x5d68>)
 8006b56:	461c      	mov	r4, r3
 8006b58:	4613      	mov	r3, r2
 8006b5a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006b5c:	6020      	str	r0, [r4, #0]
 8006b5e:	6061      	str	r1, [r4, #4]
 8006b60:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,7,10,13,15,18");
 8006b62:	687b      	ldr	r3, [r7, #4]
 8006b64:	3304      	adds	r3, #4
 8006b66:	4a2b      	ldr	r2, [pc, #172]	; (8006c14 <createProblem+0x5d6c>)
 8006b68:	461c      	mov	r4, r3
 8006b6a:	4615      	mov	r5, r2
 8006b6c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006b6e:	6020      	str	r0, [r4, #0]
 8006b70:	6061      	str	r1, [r4, #4]
 8006b72:	60a2      	str	r2, [r4, #8]
 8006b74:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8006b76:	687b      	ldr	r3, [r7, #4]
 8006b78:	33d8      	adds	r3, #216	; 0xd8
 8006b7a:	4a27      	ldr	r2, [pc, #156]	; (8006c18 <createProblem+0x5d70>)
 8006b7c:	461c      	mov	r4, r3
 8006b7e:	4613      	mov	r3, r2
 8006b80:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006b82:	6020      	str	r0, [r4, #0]
 8006b84:	6061      	str	r1, [r4, #4]
 8006b86:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8006b88:	687b      	ldr	r3, [r7, #4]
 8006b8a:	33cc      	adds	r3, #204	; 0xcc
 8006b8c:	4a23      	ldr	r2, [pc, #140]	; (8006c1c <createProblem+0x5d74>)
 8006b8e:	8811      	ldrh	r1, [r2, #0]
 8006b90:	7892      	ldrb	r2, [r2, #2]
 8006b92:	8019      	strh	r1, [r3, #0]
 8006b94:	709a      	strb	r2, [r3, #2]
			break;
 8006b96:	f013 becd 	b.w	801a934 <createProblem+0x19a8c>
 8006b9a:	bf00      	nop
 8006b9c:	08022644 	.word	0x08022644
 8006ba0:	08022654 	.word	0x08022654
 8006ba4:	08022664 	.word	0x08022664
 8006ba8:	08020a14 	.word	0x08020a14
 8006bac:	08020830 	.word	0x08020830
 8006bb0:	08022678 	.word	0x08022678
 8006bb4:	0802268c 	.word	0x0802268c
 8006bb8:	080226a4 	.word	0x080226a4
 8006bbc:	08021f98 	.word	0x08021f98
 8006bc0:	080208f0 	.word	0x080208f0
 8006bc4:	080226c4 	.word	0x080226c4
 8006bc8:	080226cc 	.word	0x080226cc
 8006bcc:	080226dc 	.word	0x080226dc
 8006bd0:	08020820 	.word	0x08020820
 8006bd4:	080226f0 	.word	0x080226f0
 8006bd8:	080226f4 	.word	0x080226f4
 8006bdc:	08022700 	.word	0x08022700
 8006be0:	0802270c 	.word	0x0802270c
 8006be4:	08020e90 	.word	0x08020e90
 8006be8:	080208ac 	.word	0x080208ac
 8006bec:	0802271c 	.word	0x0802271c
 8006bf0:	08022724 	.word	0x08022724
 8006bf4:	08022734 	.word	0x08022734
 8006bf8:	080209d8 	.word	0x080209d8
 8006bfc:	08020928 	.word	0x08020928
 8006c00:	0802274c 	.word	0x0802274c
 8006c04:	08022754 	.word	0x08022754
 8006c08:	08022764 	.word	0x08022764
 8006c0c:	08022778 	.word	0x08022778
 8006c10:	08022788 	.word	0x08022788
 8006c14:	08022794 	.word	0x08022794
 8006c18:	0802091c 	.word	0x0802091c
 8006c1c:	08020874 	.word	0x08020874
		case 247 :
			strcpy(p->name,"HOLY IWAN");
 8006c20:	687b      	ldr	r3, [r7, #4]
 8006c22:	337c      	adds	r3, #124	; 0x7c
 8006c24:	49be      	ldr	r1, [pc, #760]	; (8006f20 <createProblem+0x6078>)
 8006c26:	461a      	mov	r2, r3
 8006c28:	460b      	mov	r3, r1
 8006c2a:	cb03      	ldmia	r3!, {r0, r1}
 8006c2c:	6010      	str	r0, [r2, #0]
 8006c2e:	6051      	str	r1, [r2, #4]
 8006c30:	881b      	ldrh	r3, [r3, #0]
 8006c32:	8113      	strh	r3, [r2, #8]
			p->moveSize = 10;
 8006c34:	687b      	ldr	r3, [r7, #4]
 8006c36:	220a      	movs	r2, #10
 8006c38:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,E,E,C,B,E,C,D,C,D");
 8006c3a:	687b      	ldr	r3, [r7, #4]
 8006c3c:	3340      	adds	r3, #64	; 0x40
 8006c3e:	4ab9      	ldr	r2, [pc, #740]	; (8006f24 <createProblem+0x607c>)
 8006c40:	461d      	mov	r5, r3
 8006c42:	4614      	mov	r4, r2
 8006c44:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006c46:	6028      	str	r0, [r5, #0]
 8006c48:	6069      	str	r1, [r5, #4]
 8006c4a:	60aa      	str	r2, [r5, #8]
 8006c4c:	60eb      	str	r3, [r5, #12]
 8006c4e:	6820      	ldr	r0, [r4, #0]
 8006c50:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"6,6,8,8,10,12,13,15,16,18");
 8006c52:	687b      	ldr	r3, [r7, #4]
 8006c54:	3304      	adds	r3, #4
 8006c56:	4ab4      	ldr	r2, [pc, #720]	; (8006f28 <createProblem+0x6080>)
 8006c58:	461d      	mov	r5, r3
 8006c5a:	4614      	mov	r4, r2
 8006c5c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006c5e:	6028      	str	r0, [r5, #0]
 8006c60:	6069      	str	r1, [r5, #4]
 8006c62:	60aa      	str	r2, [r5, #8]
 8006c64:	60eb      	str	r3, [r5, #12]
 8006c66:	cc03      	ldmia	r4!, {r0, r1}
 8006c68:	6128      	str	r0, [r5, #16]
 8006c6a:	6169      	str	r1, [r5, #20]
 8006c6c:	8823      	ldrh	r3, [r4, #0]
 8006c6e:	832b      	strh	r3, [r5, #24]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,e");
 8006c70:	687b      	ldr	r3, [r7, #4]
 8006c72:	33d8      	adds	r3, #216	; 0xd8
 8006c74:	4aad      	ldr	r2, [pc, #692]	; (8006f2c <createProblem+0x6084>)
 8006c76:	461d      	mov	r5, r3
 8006c78:	4614      	mov	r4, r2
 8006c7a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006c7c:	6028      	str	r0, [r5, #0]
 8006c7e:	6069      	str	r1, [r5, #4]
 8006c80:	60aa      	str	r2, [r5, #8]
 8006c82:	60eb      	str	r3, [r5, #12]
 8006c84:	6820      	ldr	r0, [r4, #0]
 8006c86:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "6B+");
 8006c88:	687b      	ldr	r3, [r7, #4]
 8006c8a:	33cc      	adds	r3, #204	; 0xcc
 8006c8c:	4aa8      	ldr	r2, [pc, #672]	; (8006f30 <createProblem+0x6088>)
 8006c8e:	6810      	ldr	r0, [r2, #0]
 8006c90:	6018      	str	r0, [r3, #0]
			break;
 8006c92:	f013 be4f 	b.w	801a934 <createProblem+0x19a8c>
		case 248 :
			strcpy(p->name,"CRANK IT UP A NOTCH!");
 8006c96:	687b      	ldr	r3, [r7, #4]
 8006c98:	337c      	adds	r3, #124	; 0x7c
 8006c9a:	4aa6      	ldr	r2, [pc, #664]	; (8006f34 <createProblem+0x608c>)
 8006c9c:	461d      	mov	r5, r3
 8006c9e:	4614      	mov	r4, r2
 8006ca0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006ca2:	6028      	str	r0, [r5, #0]
 8006ca4:	6069      	str	r1, [r5, #4]
 8006ca6:	60aa      	str	r2, [r5, #8]
 8006ca8:	60eb      	str	r3, [r5, #12]
 8006caa:	6820      	ldr	r0, [r4, #0]
 8006cac:	6128      	str	r0, [r5, #16]
 8006cae:	7923      	ldrb	r3, [r4, #4]
 8006cb0:	752b      	strb	r3, [r5, #20]
			p->moveSize = 4;
 8006cb2:	687b      	ldr	r3, [r7, #4]
 8006cb4:	2204      	movs	r2, #4
 8006cb6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,F,C,D");
 8006cb8:	687b      	ldr	r3, [r7, #4]
 8006cba:	3340      	adds	r3, #64	; 0x40
 8006cbc:	499e      	ldr	r1, [pc, #632]	; (8006f38 <createProblem+0x6090>)
 8006cbe:	461a      	mov	r2, r3
 8006cc0:	460b      	mov	r3, r1
 8006cc2:	cb03      	ldmia	r3!, {r0, r1}
 8006cc4:	6010      	str	r0, [r2, #0]
 8006cc6:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"6,11,13,18");
 8006cc8:	687b      	ldr	r3, [r7, #4]
 8006cca:	3304      	adds	r3, #4
 8006ccc:	499b      	ldr	r1, [pc, #620]	; (8006f3c <createProblem+0x6094>)
 8006cce:	461a      	mov	r2, r3
 8006cd0:	460b      	mov	r3, r1
 8006cd2:	cb03      	ldmia	r3!, {r0, r1}
 8006cd4:	6010      	str	r0, [r2, #0]
 8006cd6:	6051      	str	r1, [r2, #4]
 8006cd8:	8819      	ldrh	r1, [r3, #0]
 8006cda:	789b      	ldrb	r3, [r3, #2]
 8006cdc:	8111      	strh	r1, [r2, #8]
 8006cde:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 8006ce0:	687b      	ldr	r3, [r7, #4]
 8006ce2:	33d8      	adds	r3, #216	; 0xd8
 8006ce4:	4996      	ldr	r1, [pc, #600]	; (8006f40 <createProblem+0x6098>)
 8006ce6:	461a      	mov	r2, r3
 8006ce8:	460b      	mov	r3, r1
 8006cea:	cb03      	ldmia	r3!, {r0, r1}
 8006cec:	6010      	str	r0, [r2, #0]
 8006cee:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7A+");
 8006cf0:	687b      	ldr	r3, [r7, #4]
 8006cf2:	33cc      	adds	r3, #204	; 0xcc
 8006cf4:	4a93      	ldr	r2, [pc, #588]	; (8006f44 <createProblem+0x609c>)
 8006cf6:	6810      	ldr	r0, [r2, #0]
 8006cf8:	6018      	str	r0, [r3, #0]
			break;
 8006cfa:	f013 be1b 	b.w	801a934 <createProblem+0x19a8c>
		case 249 :
			strcpy(p->name,"BLABLUB");
 8006cfe:	687b      	ldr	r3, [r7, #4]
 8006d00:	337c      	adds	r3, #124	; 0x7c
 8006d02:	4991      	ldr	r1, [pc, #580]	; (8006f48 <createProblem+0x60a0>)
 8006d04:	461a      	mov	r2, r3
 8006d06:	460b      	mov	r3, r1
 8006d08:	cb03      	ldmia	r3!, {r0, r1}
 8006d0a:	6010      	str	r0, [r2, #0]
 8006d0c:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 8006d0e:	687b      	ldr	r3, [r7, #4]
 8006d10:	2207      	movs	r2, #7
 8006d12:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,E,B,E,A,D,D");
 8006d14:	687b      	ldr	r3, [r7, #4]
 8006d16:	3340      	adds	r3, #64	; 0x40
 8006d18:	4a8c      	ldr	r2, [pc, #560]	; (8006f4c <createProblem+0x60a4>)
 8006d1a:	461c      	mov	r4, r3
 8006d1c:	4613      	mov	r3, r2
 8006d1e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006d20:	6020      	str	r0, [r4, #0]
 8006d22:	6061      	str	r1, [r4, #4]
 8006d24:	60a2      	str	r2, [r4, #8]
 8006d26:	881b      	ldrh	r3, [r3, #0]
 8006d28:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,6,10,12,14,15,18");
 8006d2a:	687b      	ldr	r3, [r7, #4]
 8006d2c:	3304      	adds	r3, #4
 8006d2e:	4a88      	ldr	r2, [pc, #544]	; (8006f50 <createProblem+0x60a8>)
 8006d30:	461d      	mov	r5, r3
 8006d32:	4614      	mov	r4, r2
 8006d34:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006d36:	6028      	str	r0, [r5, #0]
 8006d38:	6069      	str	r1, [r5, #4]
 8006d3a:	60aa      	str	r2, [r5, #8]
 8006d3c:	60eb      	str	r3, [r5, #12]
 8006d3e:	8823      	ldrh	r3, [r4, #0]
 8006d40:	78a2      	ldrb	r2, [r4, #2]
 8006d42:	822b      	strh	r3, [r5, #16]
 8006d44:	4613      	mov	r3, r2
 8006d46:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8006d48:	687b      	ldr	r3, [r7, #4]
 8006d4a:	33d8      	adds	r3, #216	; 0xd8
 8006d4c:	4a81      	ldr	r2, [pc, #516]	; (8006f54 <createProblem+0x60ac>)
 8006d4e:	461c      	mov	r4, r3
 8006d50:	4613      	mov	r3, r2
 8006d52:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006d54:	6020      	str	r0, [r4, #0]
 8006d56:	6061      	str	r1, [r4, #4]
 8006d58:	60a2      	str	r2, [r4, #8]
 8006d5a:	881b      	ldrh	r3, [r3, #0]
 8006d5c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8006d5e:	687b      	ldr	r3, [r7, #4]
 8006d60:	33cc      	adds	r3, #204	; 0xcc
 8006d62:	4a7d      	ldr	r2, [pc, #500]	; (8006f58 <createProblem+0x60b0>)
 8006d64:	8811      	ldrh	r1, [r2, #0]
 8006d66:	7892      	ldrb	r2, [r2, #2]
 8006d68:	8019      	strh	r1, [r3, #0]
 8006d6a:	709a      	strb	r2, [r3, #2]
			break;
 8006d6c:	f013 bde2 	b.w	801a934 <createProblem+0x19a8c>
		case 25 :
			strcpy(p->name,"MELET");
 8006d70:	687b      	ldr	r3, [r7, #4]
 8006d72:	337c      	adds	r3, #124	; 0x7c
 8006d74:	4a79      	ldr	r2, [pc, #484]	; (8006f5c <createProblem+0x60b4>)
 8006d76:	6810      	ldr	r0, [r2, #0]
 8006d78:	6018      	str	r0, [r3, #0]
 8006d7a:	8892      	ldrh	r2, [r2, #4]
 8006d7c:	809a      	strh	r2, [r3, #4]
			p->moveSize = 5;
 8006d7e:	687b      	ldr	r3, [r7, #4]
 8006d80:	2205      	movs	r2, #5
 8006d82:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,H,H,I,J");
 8006d84:	687b      	ldr	r3, [r7, #4]
 8006d86:	3340      	adds	r3, #64	; 0x40
 8006d88:	4975      	ldr	r1, [pc, #468]	; (8006f60 <createProblem+0x60b8>)
 8006d8a:	461a      	mov	r2, r3
 8006d8c:	460b      	mov	r3, r1
 8006d8e:	cb03      	ldmia	r3!, {r0, r1}
 8006d90:	6010      	str	r0, [r2, #0]
 8006d92:	6051      	str	r1, [r2, #4]
 8006d94:	881b      	ldrh	r3, [r3, #0]
 8006d96:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"13,16,10,18,5");
 8006d98:	687b      	ldr	r3, [r7, #4]
 8006d9a:	3304      	adds	r3, #4
 8006d9c:	4a71      	ldr	r2, [pc, #452]	; (8006f64 <createProblem+0x60bc>)
 8006d9e:	461c      	mov	r4, r3
 8006da0:	4613      	mov	r3, r2
 8006da2:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006da4:	6020      	str	r0, [r4, #0]
 8006da6:	6061      	str	r1, [r4, #4]
 8006da8:	60a2      	str	r2, [r4, #8]
 8006daa:	881b      	ldrh	r3, [r3, #0]
 8006dac:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "d,d,d,e,s");
 8006dae:	687b      	ldr	r3, [r7, #4]
 8006db0:	33d8      	adds	r3, #216	; 0xd8
 8006db2:	496d      	ldr	r1, [pc, #436]	; (8006f68 <createProblem+0x60c0>)
 8006db4:	461a      	mov	r2, r3
 8006db6:	460b      	mov	r3, r1
 8006db8:	cb03      	ldmia	r3!, {r0, r1}
 8006dba:	6010      	str	r0, [r2, #0]
 8006dbc:	6051      	str	r1, [r2, #4]
 8006dbe:	881b      	ldrh	r3, [r3, #0]
 8006dc0:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 8006dc2:	687b      	ldr	r3, [r7, #4]
 8006dc4:	33cc      	adds	r3, #204	; 0xcc
 8006dc6:	4a5f      	ldr	r2, [pc, #380]	; (8006f44 <createProblem+0x609c>)
 8006dc8:	6810      	ldr	r0, [r2, #0]
 8006dca:	6018      	str	r0, [r3, #0]
			break;
 8006dcc:	f013 bdb2 	b.w	801a934 <createProblem+0x19a8c>
		case 250 :
			strcpy(p->name,"ALEXS PROBLEM NUMBER ONE");
 8006dd0:	687b      	ldr	r3, [r7, #4]
 8006dd2:	337c      	adds	r3, #124	; 0x7c
 8006dd4:	4a65      	ldr	r2, [pc, #404]	; (8006f6c <createProblem+0x60c4>)
 8006dd6:	461d      	mov	r5, r3
 8006dd8:	4614      	mov	r4, r2
 8006dda:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006ddc:	6028      	str	r0, [r5, #0]
 8006dde:	6069      	str	r1, [r5, #4]
 8006de0:	60aa      	str	r2, [r5, #8]
 8006de2:	60eb      	str	r3, [r5, #12]
 8006de4:	cc03      	ldmia	r4!, {r0, r1}
 8006de6:	6128      	str	r0, [r5, #16]
 8006de8:	6169      	str	r1, [r5, #20]
 8006dea:	7823      	ldrb	r3, [r4, #0]
 8006dec:	762b      	strb	r3, [r5, #24]
			p->moveSize = 8;
 8006dee:	687b      	ldr	r3, [r7, #4]
 8006df0:	2208      	movs	r2, #8
 8006df2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,E,E,B,E,A,D,D");
 8006df4:	687b      	ldr	r3, [r7, #4]
 8006df6:	3340      	adds	r3, #64	; 0x40
 8006df8:	4a5d      	ldr	r2, [pc, #372]	; (8006f70 <createProblem+0x60c8>)
 8006dfa:	461c      	mov	r4, r3
 8006dfc:	4615      	mov	r5, r2
 8006dfe:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006e00:	6020      	str	r0, [r4, #0]
 8006e02:	6061      	str	r1, [r4, #4]
 8006e04:	60a2      	str	r2, [r4, #8]
 8006e06:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,6,8,10,12,14,15,18");
 8006e08:	687b      	ldr	r3, [r7, #4]
 8006e0a:	3304      	adds	r3, #4
 8006e0c:	4a59      	ldr	r2, [pc, #356]	; (8006f74 <createProblem+0x60cc>)
 8006e0e:	461d      	mov	r5, r3
 8006e10:	4614      	mov	r4, r2
 8006e12:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006e14:	6028      	str	r0, [r5, #0]
 8006e16:	6069      	str	r1, [r5, #4]
 8006e18:	60aa      	str	r2, [r5, #8]
 8006e1a:	60eb      	str	r3, [r5, #12]
 8006e1c:	6820      	ldr	r0, [r4, #0]
 8006e1e:	6128      	str	r0, [r5, #16]
 8006e20:	7923      	ldrb	r3, [r4, #4]
 8006e22:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8006e24:	687b      	ldr	r3, [r7, #4]
 8006e26:	33d8      	adds	r3, #216	; 0xd8
 8006e28:	4a53      	ldr	r2, [pc, #332]	; (8006f78 <createProblem+0x60d0>)
 8006e2a:	461c      	mov	r4, r3
 8006e2c:	4615      	mov	r5, r2
 8006e2e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006e30:	6020      	str	r0, [r4, #0]
 8006e32:	6061      	str	r1, [r4, #4]
 8006e34:	60a2      	str	r2, [r4, #8]
 8006e36:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8006e38:	687b      	ldr	r3, [r7, #4]
 8006e3a:	33cc      	adds	r3, #204	; 0xcc
 8006e3c:	4a3c      	ldr	r2, [pc, #240]	; (8006f30 <createProblem+0x6088>)
 8006e3e:	6810      	ldr	r0, [r2, #0]
 8006e40:	6018      	str	r0, [r3, #0]
			break;
 8006e42:	f013 bd77 	b.w	801a934 <createProblem+0x19a8c>
		case 251 :
			strcpy(p->name,"FORSØK 15");
 8006e46:	687b      	ldr	r3, [r7, #4]
 8006e48:	337c      	adds	r3, #124	; 0x7c
 8006e4a:	494c      	ldr	r1, [pc, #304]	; (8006f7c <createProblem+0x60d4>)
 8006e4c:	461a      	mov	r2, r3
 8006e4e:	460b      	mov	r3, r1
 8006e50:	cb03      	ldmia	r3!, {r0, r1}
 8006e52:	6010      	str	r0, [r2, #0]
 8006e54:	6051      	str	r1, [r2, #4]
 8006e56:	8819      	ldrh	r1, [r3, #0]
 8006e58:	789b      	ldrb	r3, [r3, #2]
 8006e5a:	8111      	strh	r1, [r2, #8]
 8006e5c:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 8006e5e:	687b      	ldr	r3, [r7, #4]
 8006e60:	2207      	movs	r2, #7
 8006e62:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,H,C,F,C,D,A");
 8006e64:	687b      	ldr	r3, [r7, #4]
 8006e66:	3340      	adds	r3, #64	; 0x40
 8006e68:	4a45      	ldr	r2, [pc, #276]	; (8006f80 <createProblem+0x60d8>)
 8006e6a:	461c      	mov	r4, r3
 8006e6c:	4613      	mov	r3, r2
 8006e6e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006e70:	6020      	str	r0, [r4, #0]
 8006e72:	6061      	str	r1, [r4, #4]
 8006e74:	60a2      	str	r2, [r4, #8]
 8006e76:	881b      	ldrh	r3, [r3, #0]
 8006e78:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,8,11,13,15,18");
 8006e7a:	687b      	ldr	r3, [r7, #4]
 8006e7c:	3304      	adds	r3, #4
 8006e7e:	4a41      	ldr	r2, [pc, #260]	; (8006f84 <createProblem+0x60dc>)
 8006e80:	461d      	mov	r5, r3
 8006e82:	4614      	mov	r4, r2
 8006e84:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006e86:	6028      	str	r0, [r5, #0]
 8006e88:	6069      	str	r1, [r5, #4]
 8006e8a:	60aa      	str	r2, [r5, #8]
 8006e8c:	60eb      	str	r3, [r5, #12]
 8006e8e:	8823      	ldrh	r3, [r4, #0]
 8006e90:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8006e92:	687b      	ldr	r3, [r7, #4]
 8006e94:	33d8      	adds	r3, #216	; 0xd8
 8006e96:	4a3c      	ldr	r2, [pc, #240]	; (8006f88 <createProblem+0x60e0>)
 8006e98:	461c      	mov	r4, r3
 8006e9a:	4613      	mov	r3, r2
 8006e9c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006e9e:	6020      	str	r0, [r4, #0]
 8006ea0:	6061      	str	r1, [r4, #4]
 8006ea2:	60a2      	str	r2, [r4, #8]
 8006ea4:	881b      	ldrh	r3, [r3, #0]
 8006ea6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8006ea8:	687b      	ldr	r3, [r7, #4]
 8006eaa:	33cc      	adds	r3, #204	; 0xcc
 8006eac:	4a37      	ldr	r2, [pc, #220]	; (8006f8c <createProblem+0x60e4>)
 8006eae:	6810      	ldr	r0, [r2, #0]
 8006eb0:	6018      	str	r0, [r3, #0]
			break;
 8006eb2:	f013 bd3f 	b.w	801a934 <createProblem+0x19a8c>
		case 252 :
			strcpy(p->name,"FULCRO HARD");
 8006eb6:	687b      	ldr	r3, [r7, #4]
 8006eb8:	337c      	adds	r3, #124	; 0x7c
 8006eba:	4a35      	ldr	r2, [pc, #212]	; (8006f90 <createProblem+0x60e8>)
 8006ebc:	461c      	mov	r4, r3
 8006ebe:	4613      	mov	r3, r2
 8006ec0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006ec2:	6020      	str	r0, [r4, #0]
 8006ec4:	6061      	str	r1, [r4, #4]
 8006ec6:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 8006ec8:	687b      	ldr	r3, [r7, #4]
 8006eca:	2206      	movs	r2, #6
 8006ecc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,I,D,E,D");
 8006ece:	687b      	ldr	r3, [r7, #4]
 8006ed0:	3340      	adds	r3, #64	; 0x40
 8006ed2:	4a30      	ldr	r2, [pc, #192]	; (8006f94 <createProblem+0x60ec>)
 8006ed4:	461c      	mov	r4, r3
 8006ed6:	4613      	mov	r3, r2
 8006ed8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006eda:	6020      	str	r0, [r4, #0]
 8006edc:	6061      	str	r1, [r4, #4]
 8006ede:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,9,11,16,18");
 8006ee0:	687b      	ldr	r3, [r7, #4]
 8006ee2:	3304      	adds	r3, #4
 8006ee4:	4a2c      	ldr	r2, [pc, #176]	; (8006f98 <createProblem+0x60f0>)
 8006ee6:	461c      	mov	r4, r3
 8006ee8:	4613      	mov	r3, r2
 8006eea:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006eec:	6020      	str	r0, [r4, #0]
 8006eee:	6061      	str	r1, [r4, #4]
 8006ef0:	60a2      	str	r2, [r4, #8]
 8006ef2:	881a      	ldrh	r2, [r3, #0]
 8006ef4:	789b      	ldrb	r3, [r3, #2]
 8006ef6:	81a2      	strh	r2, [r4, #12]
 8006ef8:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8006efa:	687b      	ldr	r3, [r7, #4]
 8006efc:	33d8      	adds	r3, #216	; 0xd8
 8006efe:	4a27      	ldr	r2, [pc, #156]	; (8006f9c <createProblem+0x60f4>)
 8006f00:	461c      	mov	r4, r3
 8006f02:	4613      	mov	r3, r2
 8006f04:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006f06:	6020      	str	r0, [r4, #0]
 8006f08:	6061      	str	r1, [r4, #4]
 8006f0a:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7C");
 8006f0c:	687b      	ldr	r3, [r7, #4]
 8006f0e:	33cc      	adds	r3, #204	; 0xcc
 8006f10:	4a23      	ldr	r2, [pc, #140]	; (8006fa0 <createProblem+0x60f8>)
 8006f12:	8811      	ldrh	r1, [r2, #0]
 8006f14:	7892      	ldrb	r2, [r2, #2]
 8006f16:	8019      	strh	r1, [r3, #0]
 8006f18:	709a      	strb	r2, [r3, #2]
			break;
 8006f1a:	f013 bd0b 	b.w	801a934 <createProblem+0x19a8c>
 8006f1e:	bf00      	nop
 8006f20:	080227a4 	.word	0x080227a4
 8006f24:	080227b0 	.word	0x080227b0
 8006f28:	080227c4 	.word	0x080227c4
 8006f2c:	08020b7c 	.word	0x08020b7c
 8006f30:	08020830 	.word	0x08020830
 8006f34:	080227e0 	.word	0x080227e0
 8006f38:	080227f8 	.word	0x080227f8
 8006f3c:	08022800 	.word	0x08022800
 8006f40:	080215a8 	.word	0x080215a8
 8006f44:	080209a4 	.word	0x080209a4
 8006f48:	0802280c 	.word	0x0802280c
 8006f4c:	08022814 	.word	0x08022814
 8006f50:	08022824 	.word	0x08022824
 8006f54:	08020820 	.word	0x08020820
 8006f58:	080208f0 	.word	0x080208f0
 8006f5c:	08022838 	.word	0x08022838
 8006f60:	08022840 	.word	0x08022840
 8006f64:	0802284c 	.word	0x0802284c
 8006f68:	0802285c 	.word	0x0802285c
 8006f6c:	08022868 	.word	0x08022868
 8006f70:	08022884 	.word	0x08022884
 8006f74:	08022894 	.word	0x08022894
 8006f78:	08020a4c 	.word	0x08020a4c
 8006f7c:	080228ac 	.word	0x080228ac
 8006f80:	08021d8c 	.word	0x08021d8c
 8006f84:	08021d9c 	.word	0x08021d9c
 8006f88:	08020a14 	.word	0x08020a14
 8006f8c:	08020928 	.word	0x08020928
 8006f90:	080228b8 	.word	0x080228b8
 8006f94:	080228c4 	.word	0x080228c4
 8006f98:	080228d0 	.word	0x080228d0
 8006f9c:	08020e90 	.word	0x08020e90
 8006fa0:	08020b0c 	.word	0x08020b0c
		case 253 :
			strcpy(p->name,"JOHNNY REHAB 4");
 8006fa4:	687b      	ldr	r3, [r7, #4]
 8006fa6:	337c      	adds	r3, #124	; 0x7c
 8006fa8:	4aab      	ldr	r2, [pc, #684]	; (8007258 <createProblem+0x63b0>)
 8006faa:	461c      	mov	r4, r3
 8006fac:	4613      	mov	r3, r2
 8006fae:	cb07      	ldmia	r3!, {r0, r1, r2}
 8006fb0:	6020      	str	r0, [r4, #0]
 8006fb2:	6061      	str	r1, [r4, #4]
 8006fb4:	60a2      	str	r2, [r4, #8]
 8006fb6:	881a      	ldrh	r2, [r3, #0]
 8006fb8:	789b      	ldrb	r3, [r3, #2]
 8006fba:	81a2      	strh	r2, [r4, #12]
 8006fbc:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 9;
 8006fbe:	687b      	ldr	r3, [r7, #4]
 8006fc0:	2209      	movs	r2, #9
 8006fc2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,K,J,I,E,J,D");
 8006fc4:	687b      	ldr	r3, [r7, #4]
 8006fc6:	3340      	adds	r3, #64	; 0x40
 8006fc8:	4aa4      	ldr	r2, [pc, #656]	; (800725c <createProblem+0x63b4>)
 8006fca:	461d      	mov	r5, r3
 8006fcc:	4614      	mov	r4, r2
 8006fce:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8006fd0:	6028      	str	r0, [r5, #0]
 8006fd2:	6069      	str	r1, [r5, #4]
 8006fd4:	60aa      	str	r2, [r5, #8]
 8006fd6:	60eb      	str	r3, [r5, #12]
 8006fd8:	8823      	ldrh	r3, [r4, #0]
 8006fda:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,5,10,9,12,14,8,16,18");
 8006fdc:	687b      	ldr	r3, [r7, #4]
 8006fde:	3304      	adds	r3, #4
 8006fe0:	4a9f      	ldr	r2, [pc, #636]	; (8007260 <createProblem+0x63b8>)
 8006fe2:	461c      	mov	r4, r3
 8006fe4:	4615      	mov	r5, r2
 8006fe6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8006fe8:	6020      	str	r0, [r4, #0]
 8006fea:	6061      	str	r1, [r4, #4]
 8006fec:	60a2      	str	r2, [r4, #8]
 8006fee:	60e3      	str	r3, [r4, #12]
 8006ff0:	6828      	ldr	r0, [r5, #0]
 8006ff2:	6120      	str	r0, [r4, #16]
 8006ff4:	88ab      	ldrh	r3, [r5, #4]
 8006ff6:	79aa      	ldrb	r2, [r5, #6]
 8006ff8:	82a3      	strh	r3, [r4, #20]
 8006ffa:	4613      	mov	r3, r2
 8006ffc:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8006ffe:	687b      	ldr	r3, [r7, #4]
 8007000:	33d8      	adds	r3, #216	; 0xd8
 8007002:	4a98      	ldr	r2, [pc, #608]	; (8007264 <createProblem+0x63bc>)
 8007004:	461d      	mov	r5, r3
 8007006:	4614      	mov	r4, r2
 8007008:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800700a:	6028      	str	r0, [r5, #0]
 800700c:	6069      	str	r1, [r5, #4]
 800700e:	60aa      	str	r2, [r5, #8]
 8007010:	60eb      	str	r3, [r5, #12]
 8007012:	8823      	ldrh	r3, [r4, #0]
 8007014:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6C+");
 8007016:	687b      	ldr	r3, [r7, #4]
 8007018:	33cc      	adds	r3, #204	; 0xcc
 800701a:	4a93      	ldr	r2, [pc, #588]	; (8007268 <createProblem+0x63c0>)
 800701c:	6810      	ldr	r0, [r2, #0]
 800701e:	6018      	str	r0, [r3, #0]
			break;
 8007020:	f013 bc88 	b.w	801a934 <createProblem+0x19a8c>
		case 254 :
			strcpy(p->name,"180 CAMPUS");
 8007024:	687b      	ldr	r3, [r7, #4]
 8007026:	337c      	adds	r3, #124	; 0x7c
 8007028:	4990      	ldr	r1, [pc, #576]	; (800726c <createProblem+0x63c4>)
 800702a:	461a      	mov	r2, r3
 800702c:	460b      	mov	r3, r1
 800702e:	cb03      	ldmia	r3!, {r0, r1}
 8007030:	6010      	str	r0, [r2, #0]
 8007032:	6051      	str	r1, [r2, #4]
 8007034:	8819      	ldrh	r1, [r3, #0]
 8007036:	789b      	ldrb	r3, [r3, #2]
 8007038:	8111      	strh	r1, [r2, #8]
 800703a:	7293      	strb	r3, [r2, #10]
			p->moveSize = 5;
 800703c:	687b      	ldr	r3, [r7, #4]
 800703e:	2205      	movs	r2, #5
 8007040:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,K,H,I,D");
 8007042:	687b      	ldr	r3, [r7, #4]
 8007044:	3340      	adds	r3, #64	; 0x40
 8007046:	498a      	ldr	r1, [pc, #552]	; (8007270 <createProblem+0x63c8>)
 8007048:	461a      	mov	r2, r3
 800704a:	460b      	mov	r3, r1
 800704c:	cb03      	ldmia	r3!, {r0, r1}
 800704e:	6010      	str	r0, [r2, #0]
 8007050:	6051      	str	r1, [r2, #4]
 8007052:	881b      	ldrh	r3, [r3, #0]
 8007054:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,9,13,14,18");
 8007056:	687b      	ldr	r3, [r7, #4]
 8007058:	3304      	adds	r3, #4
 800705a:	4a86      	ldr	r2, [pc, #536]	; (8007274 <createProblem+0x63cc>)
 800705c:	461c      	mov	r4, r3
 800705e:	4613      	mov	r3, r2
 8007060:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007062:	6020      	str	r0, [r4, #0]
 8007064:	6061      	str	r1, [r4, #4]
 8007066:	60a2      	str	r2, [r4, #8]
 8007068:	781b      	ldrb	r3, [r3, #0]
 800706a:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800706c:	687b      	ldr	r3, [r7, #4]
 800706e:	33d8      	adds	r3, #216	; 0xd8
 8007070:	4981      	ldr	r1, [pc, #516]	; (8007278 <createProblem+0x63d0>)
 8007072:	461a      	mov	r2, r3
 8007074:	460b      	mov	r3, r1
 8007076:	cb03      	ldmia	r3!, {r0, r1}
 8007078:	6010      	str	r0, [r2, #0]
 800707a:	6051      	str	r1, [r2, #4]
 800707c:	881b      	ldrh	r3, [r3, #0]
 800707e:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 8007080:	687b      	ldr	r3, [r7, #4]
 8007082:	33cc      	adds	r3, #204	; 0xcc
 8007084:	4a7d      	ldr	r2, [pc, #500]	; (800727c <createProblem+0x63d4>)
 8007086:	8811      	ldrh	r1, [r2, #0]
 8007088:	7892      	ldrb	r2, [r2, #2]
 800708a:	8019      	strh	r1, [r3, #0]
 800708c:	709a      	strb	r2, [r3, #2]
			break;
 800708e:	f013 bc51 	b.w	801a934 <createProblem+0x19a8c>
		case 255 :
			strcpy(p->name,"EVERY WHICH WAY BUT RIGHT");
 8007092:	687b      	ldr	r3, [r7, #4]
 8007094:	337c      	adds	r3, #124	; 0x7c
 8007096:	4a7a      	ldr	r2, [pc, #488]	; (8007280 <createProblem+0x63d8>)
 8007098:	461d      	mov	r5, r3
 800709a:	4614      	mov	r4, r2
 800709c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800709e:	6028      	str	r0, [r5, #0]
 80070a0:	6069      	str	r1, [r5, #4]
 80070a2:	60aa      	str	r2, [r5, #8]
 80070a4:	60eb      	str	r3, [r5, #12]
 80070a6:	cc03      	ldmia	r4!, {r0, r1}
 80070a8:	6128      	str	r0, [r5, #16]
 80070aa:	6169      	str	r1, [r5, #20]
 80070ac:	8823      	ldrh	r3, [r4, #0]
 80070ae:	832b      	strh	r3, [r5, #24]
			p->moveSize = 10;
 80070b0:	687b      	ldr	r3, [r7, #4]
 80070b2:	220a      	movs	r2, #10
 80070b4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,B,C,A,C,B,I,G,G,I");
 80070b6:	687b      	ldr	r3, [r7, #4]
 80070b8:	3340      	adds	r3, #64	; 0x40
 80070ba:	4a72      	ldr	r2, [pc, #456]	; (8007284 <createProblem+0x63dc>)
 80070bc:	461d      	mov	r5, r3
 80070be:	4614      	mov	r4, r2
 80070c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80070c2:	6028      	str	r0, [r5, #0]
 80070c4:	6069      	str	r1, [r5, #4]
 80070c6:	60aa      	str	r2, [r5, #8]
 80070c8:	60eb      	str	r3, [r5, #12]
 80070ca:	6820      	ldr	r0, [r4, #0]
 80070cc:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"4,6,8,9,13,15,10,15,17,18");
 80070ce:	687b      	ldr	r3, [r7, #4]
 80070d0:	3304      	adds	r3, #4
 80070d2:	4a6d      	ldr	r2, [pc, #436]	; (8007288 <createProblem+0x63e0>)
 80070d4:	461d      	mov	r5, r3
 80070d6:	4614      	mov	r4, r2
 80070d8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80070da:	6028      	str	r0, [r5, #0]
 80070dc:	6069      	str	r1, [r5, #4]
 80070de:	60aa      	str	r2, [r5, #8]
 80070e0:	60eb      	str	r3, [r5, #12]
 80070e2:	cc03      	ldmia	r4!, {r0, r1}
 80070e4:	6128      	str	r0, [r5, #16]
 80070e6:	6169      	str	r1, [r5, #20]
 80070e8:	8823      	ldrh	r3, [r4, #0]
 80070ea:	832b      	strh	r3, [r5, #24]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,d,d,e");
 80070ec:	687b      	ldr	r3, [r7, #4]
 80070ee:	33d8      	adds	r3, #216	; 0xd8
 80070f0:	4a66      	ldr	r2, [pc, #408]	; (800728c <createProblem+0x63e4>)
 80070f2:	461d      	mov	r5, r3
 80070f4:	4614      	mov	r4, r2
 80070f6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80070f8:	6028      	str	r0, [r5, #0]
 80070fa:	6069      	str	r1, [r5, #4]
 80070fc:	60aa      	str	r2, [r5, #8]
 80070fe:	60eb      	str	r3, [r5, #12]
 8007100:	6820      	ldr	r0, [r4, #0]
 8007102:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "7A+");
 8007104:	687b      	ldr	r3, [r7, #4]
 8007106:	33cc      	adds	r3, #204	; 0xcc
 8007108:	4a61      	ldr	r2, [pc, #388]	; (8007290 <createProblem+0x63e8>)
 800710a:	6810      	ldr	r0, [r2, #0]
 800710c:	6018      	str	r0, [r3, #0]
			break;
 800710e:	f013 bc11 	b.w	801a934 <createProblem+0x19a8c>
		case 256 :
			strcpy(p->name,"IL LADRO DI POLLI");
 8007112:	687b      	ldr	r3, [r7, #4]
 8007114:	337c      	adds	r3, #124	; 0x7c
 8007116:	4a5f      	ldr	r2, [pc, #380]	; (8007294 <createProblem+0x63ec>)
 8007118:	461d      	mov	r5, r3
 800711a:	4614      	mov	r4, r2
 800711c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800711e:	6028      	str	r0, [r5, #0]
 8007120:	6069      	str	r1, [r5, #4]
 8007122:	60aa      	str	r2, [r5, #8]
 8007124:	60eb      	str	r3, [r5, #12]
 8007126:	8823      	ldrh	r3, [r4, #0]
 8007128:	822b      	strh	r3, [r5, #16]
			p->moveSize = 8;
 800712a:	687b      	ldr	r3, [r7, #4]
 800712c:	2208      	movs	r2, #8
 800712e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,E,E,J,E,E,D");
 8007130:	687b      	ldr	r3, [r7, #4]
 8007132:	3340      	adds	r3, #64	; 0x40
 8007134:	4a58      	ldr	r2, [pc, #352]	; (8007298 <createProblem+0x63f0>)
 8007136:	461c      	mov	r4, r3
 8007138:	4615      	mov	r5, r2
 800713a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800713c:	6020      	str	r0, [r4, #0]
 800713e:	6061      	str	r1, [r4, #4]
 8007140:	60a2      	str	r2, [r4, #8]
 8007142:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,9,7,12,16,18");
 8007144:	687b      	ldr	r3, [r7, #4]
 8007146:	3304      	adds	r3, #4
 8007148:	4a54      	ldr	r2, [pc, #336]	; (800729c <createProblem+0x63f4>)
 800714a:	461d      	mov	r5, r3
 800714c:	4614      	mov	r4, r2
 800714e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007150:	6028      	str	r0, [r5, #0]
 8007152:	6069      	str	r1, [r5, #4]
 8007154:	60aa      	str	r2, [r5, #8]
 8007156:	60eb      	str	r3, [r5, #12]
 8007158:	8823      	ldrh	r3, [r4, #0]
 800715a:	78a2      	ldrb	r2, [r4, #2]
 800715c:	822b      	strh	r3, [r5, #16]
 800715e:	4613      	mov	r3, r2
 8007160:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8007162:	687b      	ldr	r3, [r7, #4]
 8007164:	33d8      	adds	r3, #216	; 0xd8
 8007166:	4a4e      	ldr	r2, [pc, #312]	; (80072a0 <createProblem+0x63f8>)
 8007168:	461c      	mov	r4, r3
 800716a:	4615      	mov	r5, r2
 800716c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800716e:	6020      	str	r0, [r4, #0]
 8007170:	6061      	str	r1, [r4, #4]
 8007172:	60a2      	str	r2, [r4, #8]
 8007174:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8007176:	687b      	ldr	r3, [r7, #4]
 8007178:	33cc      	adds	r3, #204	; 0xcc
 800717a:	4a3b      	ldr	r2, [pc, #236]	; (8007268 <createProblem+0x63c0>)
 800717c:	6810      	ldr	r0, [r2, #0]
 800717e:	6018      	str	r0, [r3, #0]
			break;
 8007180:	f013 bbd8 	b.w	801a934 <createProblem+0x19a8c>
		case 257 :
			strcpy(p->name,"HAY IS FOR HORSES");
 8007184:	687b      	ldr	r3, [r7, #4]
 8007186:	337c      	adds	r3, #124	; 0x7c
 8007188:	4a46      	ldr	r2, [pc, #280]	; (80072a4 <createProblem+0x63fc>)
 800718a:	461d      	mov	r5, r3
 800718c:	4614      	mov	r4, r2
 800718e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007190:	6028      	str	r0, [r5, #0]
 8007192:	6069      	str	r1, [r5, #4]
 8007194:	60aa      	str	r2, [r5, #8]
 8007196:	60eb      	str	r3, [r5, #12]
 8007198:	8823      	ldrh	r3, [r4, #0]
 800719a:	822b      	strh	r3, [r5, #16]
			p->moveSize = 5;
 800719c:	687b      	ldr	r3, [r7, #4]
 800719e:	2205      	movs	r2, #5
 80071a0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,G,D,D");
 80071a2:	687b      	ldr	r3, [r7, #4]
 80071a4:	3340      	adds	r3, #64	; 0x40
 80071a6:	4940      	ldr	r1, [pc, #256]	; (80072a8 <createProblem+0x6400>)
 80071a8:	461a      	mov	r2, r3
 80071aa:	460b      	mov	r3, r1
 80071ac:	cb03      	ldmia	r3!, {r0, r1}
 80071ae:	6010      	str	r0, [r2, #0]
 80071b0:	6051      	str	r1, [r2, #4]
 80071b2:	881b      	ldrh	r3, [r3, #0]
 80071b4:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,14,15,18");
 80071b6:	687b      	ldr	r3, [r7, #4]
 80071b8:	3304      	adds	r3, #4
 80071ba:	4a3c      	ldr	r2, [pc, #240]	; (80072ac <createProblem+0x6404>)
 80071bc:	461c      	mov	r4, r3
 80071be:	4613      	mov	r3, r2
 80071c0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80071c2:	6020      	str	r0, [r4, #0]
 80071c4:	6061      	str	r1, [r4, #4]
 80071c6:	60a2      	str	r2, [r4, #8]
 80071c8:	881b      	ldrh	r3, [r3, #0]
 80071ca:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 80071cc:	687b      	ldr	r3, [r7, #4]
 80071ce:	33d8      	adds	r3, #216	; 0xd8
 80071d0:	4929      	ldr	r1, [pc, #164]	; (8007278 <createProblem+0x63d0>)
 80071d2:	461a      	mov	r2, r3
 80071d4:	460b      	mov	r3, r1
 80071d6:	cb03      	ldmia	r3!, {r0, r1}
 80071d8:	6010      	str	r0, [r2, #0]
 80071da:	6051      	str	r1, [r2, #4]
 80071dc:	881b      	ldrh	r3, [r3, #0]
 80071de:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C+");
 80071e0:	687b      	ldr	r3, [r7, #4]
 80071e2:	33cc      	adds	r3, #204	; 0xcc
 80071e4:	4a20      	ldr	r2, [pc, #128]	; (8007268 <createProblem+0x63c0>)
 80071e6:	6810      	ldr	r0, [r2, #0]
 80071e8:	6018      	str	r0, [r3, #0]
			break;
 80071ea:	f013 bba3 	b.w	801a934 <createProblem+0x19a8c>
		case 258 :
			strcpy(p->name,"BIFFOSMEG");
 80071ee:	687b      	ldr	r3, [r7, #4]
 80071f0:	337c      	adds	r3, #124	; 0x7c
 80071f2:	492f      	ldr	r1, [pc, #188]	; (80072b0 <createProblem+0x6408>)
 80071f4:	461a      	mov	r2, r3
 80071f6:	460b      	mov	r3, r1
 80071f8:	cb03      	ldmia	r3!, {r0, r1}
 80071fa:	6010      	str	r0, [r2, #0]
 80071fc:	6051      	str	r1, [r2, #4]
 80071fe:	881b      	ldrh	r3, [r3, #0]
 8007200:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 8007202:	687b      	ldr	r3, [r7, #4]
 8007204:	2206      	movs	r2, #6
 8007206:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,G,C,E,A");
 8007208:	687b      	ldr	r3, [r7, #4]
 800720a:	3340      	adds	r3, #64	; 0x40
 800720c:	4a29      	ldr	r2, [pc, #164]	; (80072b4 <createProblem+0x640c>)
 800720e:	461c      	mov	r4, r3
 8007210:	4613      	mov	r3, r2
 8007212:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007214:	6020      	str	r0, [r4, #0]
 8007216:	6061      	str	r1, [r4, #4]
 8007218:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,7,9,13,16,18");
 800721a:	687b      	ldr	r3, [r7, #4]
 800721c:	3304      	adds	r3, #4
 800721e:	4a26      	ldr	r2, [pc, #152]	; (80072b8 <createProblem+0x6410>)
 8007220:	461c      	mov	r4, r3
 8007222:	4613      	mov	r3, r2
 8007224:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007226:	6020      	str	r0, [r4, #0]
 8007228:	6061      	str	r1, [r4, #4]
 800722a:	60a2      	str	r2, [r4, #8]
 800722c:	881a      	ldrh	r2, [r3, #0]
 800722e:	789b      	ldrb	r3, [r3, #2]
 8007230:	81a2      	strh	r2, [r4, #12]
 8007232:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8007234:	687b      	ldr	r3, [r7, #4]
 8007236:	33d8      	adds	r3, #216	; 0xd8
 8007238:	4a20      	ldr	r2, [pc, #128]	; (80072bc <createProblem+0x6414>)
 800723a:	461c      	mov	r4, r3
 800723c:	4613      	mov	r3, r2
 800723e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007240:	6020      	str	r0, [r4, #0]
 8007242:	6061      	str	r1, [r4, #4]
 8007244:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 8007246:	687b      	ldr	r3, [r7, #4]
 8007248:	33cc      	adds	r3, #204	; 0xcc
 800724a:	4a1d      	ldr	r2, [pc, #116]	; (80072c0 <createProblem+0x6418>)
 800724c:	8811      	ldrh	r1, [r2, #0]
 800724e:	7892      	ldrb	r2, [r2, #2]
 8007250:	8019      	strh	r1, [r3, #0]
 8007252:	709a      	strb	r2, [r3, #2]
			break;
 8007254:	f013 bb6e 	b.w	801a934 <createProblem+0x19a8c>
 8007258:	080228e0 	.word	0x080228e0
 800725c:	080228f0 	.word	0x080228f0
 8007260:	08022904 	.word	0x08022904
 8007264:	08020dfc 	.word	0x08020dfc
 8007268:	08020928 	.word	0x08020928
 800726c:	0802291c 	.word	0x0802291c
 8007270:	08022928 	.word	0x08022928
 8007274:	08022934 	.word	0x08022934
 8007278:	080208a0 	.word	0x080208a0
 800727c:	08020874 	.word	0x08020874
 8007280:	08022944 	.word	0x08022944
 8007284:	08022960 	.word	0x08022960
 8007288:	08022974 	.word	0x08022974
 800728c:	08022990 	.word	0x08022990
 8007290:	080209a4 	.word	0x080209a4
 8007294:	080229a4 	.word	0x080229a4
 8007298:	080229b8 	.word	0x080229b8
 800729c:	080229c8 	.word	0x080229c8
 80072a0:	08020a4c 	.word	0x08020a4c
 80072a4:	080229dc 	.word	0x080229dc
 80072a8:	080229f0 	.word	0x080229f0
 80072ac:	080229fc 	.word	0x080229fc
 80072b0:	08022a0c 	.word	0x08022a0c
 80072b4:	08022a18 	.word	0x08022a18
 80072b8:	08022a24 	.word	0x08022a24
 80072bc:	0802091c 	.word	0x0802091c
 80072c0:	080208f0 	.word	0x080208f0
		case 259 :
			strcpy(p->name,"CHIAPPO");
 80072c4:	687b      	ldr	r3, [r7, #4]
 80072c6:	337c      	adds	r3, #124	; 0x7c
 80072c8:	49c0      	ldr	r1, [pc, #768]	; (80075cc <createProblem+0x6724>)
 80072ca:	461a      	mov	r2, r3
 80072cc:	460b      	mov	r3, r1
 80072ce:	cb03      	ldmia	r3!, {r0, r1}
 80072d0:	6010      	str	r0, [r2, #0]
 80072d2:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 80072d4:	687b      	ldr	r3, [r7, #4]
 80072d6:	2207      	movs	r2, #7
 80072d8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,F,C,E,D");
 80072da:	687b      	ldr	r3, [r7, #4]
 80072dc:	3340      	adds	r3, #64	; 0x40
 80072de:	4abc      	ldr	r2, [pc, #752]	; (80075d0 <createProblem+0x6728>)
 80072e0:	461c      	mov	r4, r3
 80072e2:	4613      	mov	r3, r2
 80072e4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80072e6:	6020      	str	r0, [r4, #0]
 80072e8:	6061      	str	r1, [r4, #4]
 80072ea:	60a2      	str	r2, [r4, #8]
 80072ec:	881b      	ldrh	r3, [r3, #0]
 80072ee:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,8,11,13,16,18");
 80072f0:	687b      	ldr	r3, [r7, #4]
 80072f2:	3304      	adds	r3, #4
 80072f4:	4ab7      	ldr	r2, [pc, #732]	; (80075d4 <createProblem+0x672c>)
 80072f6:	461d      	mov	r5, r3
 80072f8:	4614      	mov	r4, r2
 80072fa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80072fc:	6028      	str	r0, [r5, #0]
 80072fe:	6069      	str	r1, [r5, #4]
 8007300:	60aa      	str	r2, [r5, #8]
 8007302:	60eb      	str	r3, [r5, #12]
 8007304:	8823      	ldrh	r3, [r4, #0]
 8007306:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8007308:	687b      	ldr	r3, [r7, #4]
 800730a:	33d8      	adds	r3, #216	; 0xd8
 800730c:	4ab2      	ldr	r2, [pc, #712]	; (80075d8 <createProblem+0x6730>)
 800730e:	461c      	mov	r4, r3
 8007310:	4613      	mov	r3, r2
 8007312:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007314:	6020      	str	r0, [r4, #0]
 8007316:	6061      	str	r1, [r4, #4]
 8007318:	60a2      	str	r2, [r4, #8]
 800731a:	881b      	ldrh	r3, [r3, #0]
 800731c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800731e:	687b      	ldr	r3, [r7, #4]
 8007320:	33cc      	adds	r3, #204	; 0xcc
 8007322:	4aae      	ldr	r2, [pc, #696]	; (80075dc <createProblem+0x6734>)
 8007324:	6810      	ldr	r0, [r2, #0]
 8007326:	6018      	str	r0, [r3, #0]
			break;
 8007328:	f013 bb04 	b.w	801a934 <createProblem+0x19a8c>
		case 26 :
			strcpy(p->name,"MELET VAR");
 800732c:	687b      	ldr	r3, [r7, #4]
 800732e:	337c      	adds	r3, #124	; 0x7c
 8007330:	49ab      	ldr	r1, [pc, #684]	; (80075e0 <createProblem+0x6738>)
 8007332:	461a      	mov	r2, r3
 8007334:	460b      	mov	r3, r1
 8007336:	cb03      	ldmia	r3!, {r0, r1}
 8007338:	6010      	str	r0, [r2, #0]
 800733a:	6051      	str	r1, [r2, #4]
 800733c:	881b      	ldrh	r3, [r3, #0]
 800733e:	8113      	strh	r3, [r2, #8]
			p->moveSize = 5;
 8007340:	687b      	ldr	r3, [r7, #4]
 8007342:	2205      	movs	r2, #5
 8007344:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,C,G,A");
 8007346:	687b      	ldr	r3, [r7, #4]
 8007348:	3340      	adds	r3, #64	; 0x40
 800734a:	49a6      	ldr	r1, [pc, #664]	; (80075e4 <createProblem+0x673c>)
 800734c:	461a      	mov	r2, r3
 800734e:	460b      	mov	r3, r1
 8007350:	cb03      	ldmia	r3!, {r0, r1}
 8007352:	6010      	str	r0, [r2, #0]
 8007354:	6051      	str	r1, [r2, #4]
 8007356:	881b      	ldrh	r3, [r3, #0]
 8007358:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,13,17,18");
 800735a:	687b      	ldr	r3, [r7, #4]
 800735c:	3304      	adds	r3, #4
 800735e:	4aa2      	ldr	r2, [pc, #648]	; (80075e8 <createProblem+0x6740>)
 8007360:	461c      	mov	r4, r3
 8007362:	4613      	mov	r3, r2
 8007364:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007366:	6020      	str	r0, [r4, #0]
 8007368:	6061      	str	r1, [r4, #4]
 800736a:	60a2      	str	r2, [r4, #8]
 800736c:	881b      	ldrh	r3, [r3, #0]
 800736e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8007370:	687b      	ldr	r3, [r7, #4]
 8007372:	33d8      	adds	r3, #216	; 0xd8
 8007374:	499d      	ldr	r1, [pc, #628]	; (80075ec <createProblem+0x6744>)
 8007376:	461a      	mov	r2, r3
 8007378:	460b      	mov	r3, r1
 800737a:	cb03      	ldmia	r3!, {r0, r1}
 800737c:	6010      	str	r0, [r2, #0]
 800737e:	6051      	str	r1, [r2, #4]
 8007380:	881b      	ldrh	r3, [r3, #0]
 8007382:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B");
 8007384:	687b      	ldr	r3, [r7, #4]
 8007386:	33cc      	adds	r3, #204	; 0xcc
 8007388:	4a99      	ldr	r2, [pc, #612]	; (80075f0 <createProblem+0x6748>)
 800738a:	8811      	ldrh	r1, [r2, #0]
 800738c:	7892      	ldrb	r2, [r2, #2]
 800738e:	8019      	strh	r1, [r3, #0]
 8007390:	709a      	strb	r2, [r3, #2]
			break;
 8007392:	f013 bacf 	b.w	801a934 <createProblem+0x19a8c>
		case 260 :
			strcpy(p->name,"DDD");
 8007396:	687b      	ldr	r3, [r7, #4]
 8007398:	337c      	adds	r3, #124	; 0x7c
 800739a:	4a96      	ldr	r2, [pc, #600]	; (80075f4 <createProblem+0x674c>)
 800739c:	6810      	ldr	r0, [r2, #0]
 800739e:	6018      	str	r0, [r3, #0]
			p->moveSize = 11;
 80073a0:	687b      	ldr	r3, [r7, #4]
 80073a2:	220b      	movs	r2, #11
 80073a4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,H,H,G,H,G,G,H,G,I");
 80073a6:	687b      	ldr	r3, [r7, #4]
 80073a8:	3340      	adds	r3, #64	; 0x40
 80073aa:	4a93      	ldr	r2, [pc, #588]	; (80075f8 <createProblem+0x6750>)
 80073ac:	461d      	mov	r5, r3
 80073ae:	4614      	mov	r4, r2
 80073b0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80073b2:	6028      	str	r0, [r5, #0]
 80073b4:	6069      	str	r1, [r5, #4]
 80073b6:	60aa      	str	r2, [r5, #8]
 80073b8:	60eb      	str	r3, [r5, #12]
 80073ba:	6820      	ldr	r0, [r4, #0]
 80073bc:	6128      	str	r0, [r5, #16]
 80073be:	88a3      	ldrh	r3, [r4, #4]
 80073c0:	82ab      	strh	r3, [r5, #20]
			strcpy(p->moveNumbers,"4,6,8,10,10,13,14,15,16,17,18");
 80073c2:	687b      	ldr	r3, [r7, #4]
 80073c4:	3304      	adds	r3, #4
 80073c6:	4a8d      	ldr	r2, [pc, #564]	; (80075fc <createProblem+0x6754>)
 80073c8:	461d      	mov	r5, r3
 80073ca:	4614      	mov	r4, r2
 80073cc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80073ce:	6028      	str	r0, [r5, #0]
 80073d0:	6069      	str	r1, [r5, #4]
 80073d2:	60aa      	str	r2, [r5, #8]
 80073d4:	60eb      	str	r3, [r5, #12]
 80073d6:	cc07      	ldmia	r4!, {r0, r1, r2}
 80073d8:	6128      	str	r0, [r5, #16]
 80073da:	6169      	str	r1, [r5, #20]
 80073dc:	61aa      	str	r2, [r5, #24]
 80073de:	8823      	ldrh	r3, [r4, #0]
 80073e0:	83ab      	strh	r3, [r5, #28]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,d,e");
 80073e2:	687b      	ldr	r3, [r7, #4]
 80073e4:	33d8      	adds	r3, #216	; 0xd8
 80073e6:	4a86      	ldr	r2, [pc, #536]	; (8007600 <createProblem+0x6758>)
 80073e8:	461d      	mov	r5, r3
 80073ea:	4614      	mov	r4, r2
 80073ec:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80073ee:	6028      	str	r0, [r5, #0]
 80073f0:	6069      	str	r1, [r5, #4]
 80073f2:	60aa      	str	r2, [r5, #8]
 80073f4:	60eb      	str	r3, [r5, #12]
 80073f6:	6820      	ldr	r0, [r4, #0]
 80073f8:	6128      	str	r0, [r5, #16]
 80073fa:	88a3      	ldrh	r3, [r4, #4]
 80073fc:	82ab      	strh	r3, [r5, #20]
			strcpy(p->grade, "6C");
 80073fe:	687b      	ldr	r3, [r7, #4]
 8007400:	33cc      	adds	r3, #204	; 0xcc
 8007402:	4a80      	ldr	r2, [pc, #512]	; (8007604 <createProblem+0x675c>)
 8007404:	8811      	ldrh	r1, [r2, #0]
 8007406:	7892      	ldrb	r2, [r2, #2]
 8007408:	8019      	strh	r1, [r3, #0]
 800740a:	709a      	strb	r2, [r3, #2]
			break;
 800740c:	f013 ba92 	b.w	801a934 <createProblem+0x19a8c>
		case 261 :
			strcpy(p->name,"WOKE UP FEELIN FROGGY");
 8007410:	687b      	ldr	r3, [r7, #4]
 8007412:	337c      	adds	r3, #124	; 0x7c
 8007414:	4a7c      	ldr	r2, [pc, #496]	; (8007608 <createProblem+0x6760>)
 8007416:	461d      	mov	r5, r3
 8007418:	4614      	mov	r4, r2
 800741a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800741c:	6028      	str	r0, [r5, #0]
 800741e:	6069      	str	r1, [r5, #4]
 8007420:	60aa      	str	r2, [r5, #8]
 8007422:	60eb      	str	r3, [r5, #12]
 8007424:	6820      	ldr	r0, [r4, #0]
 8007426:	6128      	str	r0, [r5, #16]
 8007428:	88a3      	ldrh	r3, [r4, #4]
 800742a:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 8;
 800742c:	687b      	ldr	r3, [r7, #4]
 800742e:	2208      	movs	r2, #8
 8007430:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,F,E,J,K,I,I");
 8007432:	687b      	ldr	r3, [r7, #4]
 8007434:	3340      	adds	r3, #64	; 0x40
 8007436:	4a75      	ldr	r2, [pc, #468]	; (800760c <createProblem+0x6764>)
 8007438:	461c      	mov	r4, r3
 800743a:	4615      	mov	r5, r2
 800743c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800743e:	6020      	str	r0, [r4, #0]
 8007440:	6061      	str	r1, [r4, #4]
 8007442:	60a2      	str	r2, [r4, #8]
 8007444:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,11,12,13,14,7,18");
 8007446:	687b      	ldr	r3, [r7, #4]
 8007448:	3304      	adds	r3, #4
 800744a:	4a71      	ldr	r2, [pc, #452]	; (8007610 <createProblem+0x6768>)
 800744c:	461d      	mov	r5, r3
 800744e:	4614      	mov	r4, r2
 8007450:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007452:	6028      	str	r0, [r5, #0]
 8007454:	6069      	str	r1, [r5, #4]
 8007456:	60aa      	str	r2, [r5, #8]
 8007458:	60eb      	str	r3, [r5, #12]
 800745a:	6820      	ldr	r0, [r4, #0]
 800745c:	6128      	str	r0, [r5, #16]
 800745e:	7923      	ldrb	r3, [r4, #4]
 8007460:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8007462:	687b      	ldr	r3, [r7, #4]
 8007464:	33d8      	adds	r3, #216	; 0xd8
 8007466:	4a6b      	ldr	r2, [pc, #428]	; (8007614 <createProblem+0x676c>)
 8007468:	461c      	mov	r4, r3
 800746a:	4615      	mov	r5, r2
 800746c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800746e:	6020      	str	r0, [r4, #0]
 8007470:	6061      	str	r1, [r4, #4]
 8007472:	60a2      	str	r2, [r4, #8]
 8007474:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7B+");
 8007476:	687b      	ldr	r3, [r7, #4]
 8007478:	33cc      	adds	r3, #204	; 0xcc
 800747a:	4a67      	ldr	r2, [pc, #412]	; (8007618 <createProblem+0x6770>)
 800747c:	6810      	ldr	r0, [r2, #0]
 800747e:	6018      	str	r0, [r3, #0]
			break;
 8007480:	f013 ba58 	b.w	801a934 <createProblem+0x19a8c>
		case 262 :
			strcpy(p->name,"DOJO BLACK");
 8007484:	687b      	ldr	r3, [r7, #4]
 8007486:	337c      	adds	r3, #124	; 0x7c
 8007488:	4964      	ldr	r1, [pc, #400]	; (800761c <createProblem+0x6774>)
 800748a:	461a      	mov	r2, r3
 800748c:	460b      	mov	r3, r1
 800748e:	cb03      	ldmia	r3!, {r0, r1}
 8007490:	6010      	str	r0, [r2, #0]
 8007492:	6051      	str	r1, [r2, #4]
 8007494:	8819      	ldrh	r1, [r3, #0]
 8007496:	789b      	ldrb	r3, [r3, #2]
 8007498:	8111      	strh	r1, [r2, #8]
 800749a:	7293      	strb	r3, [r2, #10]
			p->moveSize = 8;
 800749c:	687b      	ldr	r3, [r7, #4]
 800749e:	2208      	movs	r2, #8
 80074a0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,K,I,J,D,G,C,D");
 80074a2:	687b      	ldr	r3, [r7, #4]
 80074a4:	3340      	adds	r3, #64	; 0x40
 80074a6:	4a5e      	ldr	r2, [pc, #376]	; (8007620 <createProblem+0x6778>)
 80074a8:	461c      	mov	r4, r3
 80074aa:	4615      	mov	r5, r2
 80074ac:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80074ae:	6020      	str	r0, [r4, #0]
 80074b0:	6061      	str	r1, [r4, #4]
 80074b2:	60a2      	str	r2, [r4, #8]
 80074b4:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,10,13,11,17,5,18");
 80074b6:	687b      	ldr	r3, [r7, #4]
 80074b8:	3304      	adds	r3, #4
 80074ba:	4a5a      	ldr	r2, [pc, #360]	; (8007624 <createProblem+0x677c>)
 80074bc:	461d      	mov	r5, r3
 80074be:	4614      	mov	r4, r2
 80074c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80074c2:	6028      	str	r0, [r5, #0]
 80074c4:	6069      	str	r1, [r5, #4]
 80074c6:	60aa      	str	r2, [r5, #8]
 80074c8:	60eb      	str	r3, [r5, #12]
 80074ca:	6820      	ldr	r0, [r4, #0]
 80074cc:	6128      	str	r0, [r5, #16]
 80074ce:	7923      	ldrb	r3, [r4, #4]
 80074d0:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 80074d2:	687b      	ldr	r3, [r7, #4]
 80074d4:	33d8      	adds	r3, #216	; 0xd8
 80074d6:	4a4f      	ldr	r2, [pc, #316]	; (8007614 <createProblem+0x676c>)
 80074d8:	461c      	mov	r4, r3
 80074da:	4615      	mov	r5, r2
 80074dc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80074de:	6020      	str	r0, [r4, #0]
 80074e0:	6061      	str	r1, [r4, #4]
 80074e2:	60a2      	str	r2, [r4, #8]
 80074e4:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 80074e6:	687b      	ldr	r3, [r7, #4]
 80074e8:	33cc      	adds	r3, #204	; 0xcc
 80074ea:	4a4f      	ldr	r2, [pc, #316]	; (8007628 <createProblem+0x6780>)
 80074ec:	6810      	ldr	r0, [r2, #0]
 80074ee:	6018      	str	r0, [r3, #0]
			break;
 80074f0:	f013 ba20 	b.w	801a934 <createProblem+0x19a8c>
		case 263 :
			strcpy(p->name,"CICCIOSPRUZZO");
 80074f4:	687b      	ldr	r3, [r7, #4]
 80074f6:	337c      	adds	r3, #124	; 0x7c
 80074f8:	4a4c      	ldr	r2, [pc, #304]	; (800762c <createProblem+0x6784>)
 80074fa:	461c      	mov	r4, r3
 80074fc:	4613      	mov	r3, r2
 80074fe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007500:	6020      	str	r0, [r4, #0]
 8007502:	6061      	str	r1, [r4, #4]
 8007504:	60a2      	str	r2, [r4, #8]
 8007506:	881b      	ldrh	r3, [r3, #0]
 8007508:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 800750a:	687b      	ldr	r3, [r7, #4]
 800750c:	2206      	movs	r2, #6
 800750e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,A,F,A,E,D");
 8007510:	687b      	ldr	r3, [r7, #4]
 8007512:	3340      	adds	r3, #64	; 0x40
 8007514:	4a46      	ldr	r2, [pc, #280]	; (8007630 <createProblem+0x6788>)
 8007516:	461c      	mov	r4, r3
 8007518:	4613      	mov	r3, r2
 800751a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800751c:	6020      	str	r0, [r4, #0]
 800751e:	6061      	str	r1, [r4, #4]
 8007520:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,11,14,16,18");
 8007522:	687b      	ldr	r3, [r7, #4]
 8007524:	3304      	adds	r3, #4
 8007526:	4a43      	ldr	r2, [pc, #268]	; (8007634 <createProblem+0x678c>)
 8007528:	461c      	mov	r4, r3
 800752a:	4615      	mov	r5, r2
 800752c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800752e:	6020      	str	r0, [r4, #0]
 8007530:	6061      	str	r1, [r4, #4]
 8007532:	60a2      	str	r2, [r4, #8]
 8007534:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8007536:	687b      	ldr	r3, [r7, #4]
 8007538:	33d8      	adds	r3, #216	; 0xd8
 800753a:	4a3f      	ldr	r2, [pc, #252]	; (8007638 <createProblem+0x6790>)
 800753c:	461c      	mov	r4, r3
 800753e:	4613      	mov	r3, r2
 8007540:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007542:	6020      	str	r0, [r4, #0]
 8007544:	6061      	str	r1, [r4, #4]
 8007546:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8007548:	687b      	ldr	r3, [r7, #4]
 800754a:	33cc      	adds	r3, #204	; 0xcc
 800754c:	4a3b      	ldr	r2, [pc, #236]	; (800763c <createProblem+0x6794>)
 800754e:	8811      	ldrh	r1, [r2, #0]
 8007550:	7892      	ldrb	r2, [r2, #2]
 8007552:	8019      	strh	r1, [r3, #0]
 8007554:	709a      	strb	r2, [r3, #2]
			break;
 8007556:	f013 b9ed 	b.w	801a934 <createProblem+0x19a8c>
		case 264 :
			strcpy(p->name,"STRATIFICAZIONI SOCIALI");
 800755a:	687b      	ldr	r3, [r7, #4]
 800755c:	337c      	adds	r3, #124	; 0x7c
 800755e:	4a38      	ldr	r2, [pc, #224]	; (8007640 <createProblem+0x6798>)
 8007560:	461d      	mov	r5, r3
 8007562:	4614      	mov	r4, r2
 8007564:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007566:	6028      	str	r0, [r5, #0]
 8007568:	6069      	str	r1, [r5, #4]
 800756a:	60aa      	str	r2, [r5, #8]
 800756c:	60eb      	str	r3, [r5, #12]
 800756e:	cc03      	ldmia	r4!, {r0, r1}
 8007570:	6128      	str	r0, [r5, #16]
 8007572:	6169      	str	r1, [r5, #20]
			p->moveSize = 7;
 8007574:	687b      	ldr	r3, [r7, #4]
 8007576:	2207      	movs	r2, #7
 8007578:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,K,H,G,C,C,D");
 800757a:	687b      	ldr	r3, [r7, #4]
 800757c:	3340      	adds	r3, #64	; 0x40
 800757e:	4a31      	ldr	r2, [pc, #196]	; (8007644 <createProblem+0x679c>)
 8007580:	461c      	mov	r4, r3
 8007582:	4613      	mov	r3, r2
 8007584:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007586:	6020      	str	r0, [r4, #0]
 8007588:	6061      	str	r1, [r4, #4]
 800758a:	60a2      	str	r2, [r4, #8]
 800758c:	881b      	ldrh	r3, [r3, #0]
 800758e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,12,14,8,16,18");
 8007590:	687b      	ldr	r3, [r7, #4]
 8007592:	3304      	adds	r3, #4
 8007594:	4a2c      	ldr	r2, [pc, #176]	; (8007648 <createProblem+0x67a0>)
 8007596:	461d      	mov	r5, r3
 8007598:	4614      	mov	r4, r2
 800759a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800759c:	6028      	str	r0, [r5, #0]
 800759e:	6069      	str	r1, [r5, #4]
 80075a0:	60aa      	str	r2, [r5, #8]
 80075a2:	60eb      	str	r3, [r5, #12]
 80075a4:	8823      	ldrh	r3, [r4, #0]
 80075a6:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80075a8:	687b      	ldr	r3, [r7, #4]
 80075aa:	33d8      	adds	r3, #216	; 0xd8
 80075ac:	4a0a      	ldr	r2, [pc, #40]	; (80075d8 <createProblem+0x6730>)
 80075ae:	461c      	mov	r4, r3
 80075b0:	4613      	mov	r3, r2
 80075b2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80075b4:	6020      	str	r0, [r4, #0]
 80075b6:	6061      	str	r1, [r4, #4]
 80075b8:	60a2      	str	r2, [r4, #8]
 80075ba:	881b      	ldrh	r3, [r3, #0]
 80075bc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 80075be:	687b      	ldr	r3, [r7, #4]
 80075c0:	33cc      	adds	r3, #204	; 0xcc
 80075c2:	4a22      	ldr	r2, [pc, #136]	; (800764c <createProblem+0x67a4>)
 80075c4:	6810      	ldr	r0, [r2, #0]
 80075c6:	6018      	str	r0, [r3, #0]
			break;
 80075c8:	f013 b9b4 	b.w	801a934 <createProblem+0x19a8c>
 80075cc:	08022a34 	.word	0x08022a34
 80075d0:	08022a3c 	.word	0x08022a3c
 80075d4:	08022a4c 	.word	0x08022a4c
 80075d8:	08020a14 	.word	0x08020a14
 80075dc:	08020830 	.word	0x08020830
 80075e0:	08022a60 	.word	0x08022a60
 80075e4:	08022a6c 	.word	0x08022a6c
 80075e8:	08022a78 	.word	0x08022a78
 80075ec:	080208a0 	.word	0x080208a0
 80075f0:	080208ac 	.word	0x080208ac
 80075f4:	08022a88 	.word	0x08022a88
 80075f8:	08022a8c 	.word	0x08022a8c
 80075fc:	08022aa4 	.word	0x08022aa4
 8007600:	08021f98 	.word	0x08021f98
 8007604:	080208f0 	.word	0x080208f0
 8007608:	08022ac4 	.word	0x08022ac4
 800760c:	08022adc 	.word	0x08022adc
 8007610:	08022aec 	.word	0x08022aec
 8007614:	080209d8 	.word	0x080209d8
 8007618:	08020dc8 	.word	0x08020dc8
 800761c:	08022b04 	.word	0x08022b04
 8007620:	08022b10 	.word	0x08022b10
 8007624:	08022b20 	.word	0x08022b20
 8007628:	080209a4 	.word	0x080209a4
 800762c:	08022b38 	.word	0x08022b38
 8007630:	08022b48 	.word	0x08022b48
 8007634:	08022b54 	.word	0x08022b54
 8007638:	0802091c 	.word	0x0802091c
 800763c:	08020874 	.word	0x08020874
 8007640:	08022b64 	.word	0x08022b64
 8007644:	08022b7c 	.word	0x08022b7c
 8007648:	08022b8c 	.word	0x08022b8c
 800764c:	08020928 	.word	0x08020928
		case 265 :
			strcpy(p->name,"ZANZARE, NEBBIA E VIN");
 8007650:	687b      	ldr	r3, [r7, #4]
 8007652:	337c      	adds	r3, #124	; 0x7c
 8007654:	4abe      	ldr	r2, [pc, #760]	; (8007950 <createProblem+0x6aa8>)
 8007656:	461d      	mov	r5, r3
 8007658:	4614      	mov	r4, r2
 800765a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800765c:	6028      	str	r0, [r5, #0]
 800765e:	6069      	str	r1, [r5, #4]
 8007660:	60aa      	str	r2, [r5, #8]
 8007662:	60eb      	str	r3, [r5, #12]
 8007664:	6820      	ldr	r0, [r4, #0]
 8007666:	6128      	str	r0, [r5, #16]
 8007668:	88a3      	ldrh	r3, [r4, #4]
 800766a:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 5;
 800766c:	687b      	ldr	r3, [r7, #4]
 800766e:	2205      	movs	r2, #5
 8007670:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,I,F,H,D");
 8007672:	687b      	ldr	r3, [r7, #4]
 8007674:	3340      	adds	r3, #64	; 0x40
 8007676:	49b7      	ldr	r1, [pc, #732]	; (8007954 <createProblem+0x6aac>)
 8007678:	461a      	mov	r2, r3
 800767a:	460b      	mov	r3, r1
 800767c:	cb03      	ldmia	r3!, {r0, r1}
 800767e:	6010      	str	r0, [r2, #0]
 8007680:	6051      	str	r1, [r2, #4]
 8007682:	881b      	ldrh	r3, [r3, #0]
 8007684:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,10,13,16,18");
 8007686:	687b      	ldr	r3, [r7, #4]
 8007688:	3304      	adds	r3, #4
 800768a:	4ab3      	ldr	r2, [pc, #716]	; (8007958 <createProblem+0x6ab0>)
 800768c:	461c      	mov	r4, r3
 800768e:	4613      	mov	r3, r2
 8007690:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007692:	6020      	str	r0, [r4, #0]
 8007694:	6061      	str	r1, [r4, #4]
 8007696:	60a2      	str	r2, [r4, #8]
 8007698:	881b      	ldrh	r3, [r3, #0]
 800769a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800769c:	687b      	ldr	r3, [r7, #4]
 800769e:	33d8      	adds	r3, #216	; 0xd8
 80076a0:	49ae      	ldr	r1, [pc, #696]	; (800795c <createProblem+0x6ab4>)
 80076a2:	461a      	mov	r2, r3
 80076a4:	460b      	mov	r3, r1
 80076a6:	cb03      	ldmia	r3!, {r0, r1}
 80076a8:	6010      	str	r0, [r2, #0]
 80076aa:	6051      	str	r1, [r2, #4]
 80076ac:	881b      	ldrh	r3, [r3, #0]
 80076ae:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C");
 80076b0:	687b      	ldr	r3, [r7, #4]
 80076b2:	33cc      	adds	r3, #204	; 0xcc
 80076b4:	4aaa      	ldr	r2, [pc, #680]	; (8007960 <createProblem+0x6ab8>)
 80076b6:	8811      	ldrh	r1, [r2, #0]
 80076b8:	7892      	ldrb	r2, [r2, #2]
 80076ba:	8019      	strh	r1, [r3, #0]
 80076bc:	709a      	strb	r2, [r3, #2]
			break;
 80076be:	f013 b939 	b.w	801a934 <createProblem+0x19a8c>
		case 266 :
			strcpy(p->name,"A LITTLE CROSSING");
 80076c2:	687b      	ldr	r3, [r7, #4]
 80076c4:	337c      	adds	r3, #124	; 0x7c
 80076c6:	4aa7      	ldr	r2, [pc, #668]	; (8007964 <createProblem+0x6abc>)
 80076c8:	461d      	mov	r5, r3
 80076ca:	4614      	mov	r4, r2
 80076cc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80076ce:	6028      	str	r0, [r5, #0]
 80076d0:	6069      	str	r1, [r5, #4]
 80076d2:	60aa      	str	r2, [r5, #8]
 80076d4:	60eb      	str	r3, [r5, #12]
 80076d6:	8823      	ldrh	r3, [r4, #0]
 80076d8:	822b      	strh	r3, [r5, #16]
			p->moveSize = 8;
 80076da:	687b      	ldr	r3, [r7, #4]
 80076dc:	2208      	movs	r2, #8
 80076de:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,E,G,H,K,H,I");
 80076e0:	687b      	ldr	r3, [r7, #4]
 80076e2:	3340      	adds	r3, #64	; 0x40
 80076e4:	4aa0      	ldr	r2, [pc, #640]	; (8007968 <createProblem+0x6ac0>)
 80076e6:	461c      	mov	r4, r3
 80076e8:	4615      	mov	r5, r2
 80076ea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80076ec:	6020      	str	r0, [r4, #0]
 80076ee:	6061      	str	r1, [r4, #4]
 80076f0:	60a2      	str	r2, [r4, #8]
 80076f2:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,4,8,9,12,14,16,18");
 80076f4:	687b      	ldr	r3, [r7, #4]
 80076f6:	3304      	adds	r3, #4
 80076f8:	4a9c      	ldr	r2, [pc, #624]	; (800796c <createProblem+0x6ac4>)
 80076fa:	461d      	mov	r5, r3
 80076fc:	4614      	mov	r4, r2
 80076fe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007700:	6028      	str	r0, [r5, #0]
 8007702:	6069      	str	r1, [r5, #4]
 8007704:	60aa      	str	r2, [r5, #8]
 8007706:	60eb      	str	r3, [r5, #12]
 8007708:	6820      	ldr	r0, [r4, #0]
 800770a:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800770c:	687b      	ldr	r3, [r7, #4]
 800770e:	33d8      	adds	r3, #216	; 0xd8
 8007710:	4a97      	ldr	r2, [pc, #604]	; (8007970 <createProblem+0x6ac8>)
 8007712:	461c      	mov	r4, r3
 8007714:	4615      	mov	r5, r2
 8007716:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007718:	6020      	str	r0, [r4, #0]
 800771a:	6061      	str	r1, [r4, #4]
 800771c:	60a2      	str	r2, [r4, #8]
 800771e:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8007720:	687b      	ldr	r3, [r7, #4]
 8007722:	33cc      	adds	r3, #204	; 0xcc
 8007724:	4a93      	ldr	r2, [pc, #588]	; (8007974 <createProblem+0x6acc>)
 8007726:	6810      	ldr	r0, [r2, #0]
 8007728:	6018      	str	r0, [r3, #0]
			break;
 800772a:	f013 b903 	b.w	801a934 <createProblem+0x19a8c>
		case 267 :
			strcpy(p->name,"GYUUUUUN");
 800772e:	687b      	ldr	r3, [r7, #4]
 8007730:	337c      	adds	r3, #124	; 0x7c
 8007732:	4991      	ldr	r1, [pc, #580]	; (8007978 <createProblem+0x6ad0>)
 8007734:	461a      	mov	r2, r3
 8007736:	460b      	mov	r3, r1
 8007738:	cb03      	ldmia	r3!, {r0, r1}
 800773a:	6010      	str	r0, [r2, #0]
 800773c:	6051      	str	r1, [r2, #4]
 800773e:	781b      	ldrb	r3, [r3, #0]
 8007740:	7213      	strb	r3, [r2, #8]
			p->moveSize = 6;
 8007742:	687b      	ldr	r3, [r7, #4]
 8007744:	2206      	movs	r2, #6
 8007746:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,D,E,E,I");
 8007748:	687b      	ldr	r3, [r7, #4]
 800774a:	3340      	adds	r3, #64	; 0x40
 800774c:	4a8b      	ldr	r2, [pc, #556]	; (800797c <createProblem+0x6ad4>)
 800774e:	461c      	mov	r4, r3
 8007750:	4613      	mov	r3, r2
 8007752:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007754:	6020      	str	r0, [r4, #0]
 8007756:	6061      	str	r1, [r4, #4]
 8007758:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,10,11,14,16,18");
 800775a:	687b      	ldr	r3, [r7, #4]
 800775c:	3304      	adds	r3, #4
 800775e:	4a88      	ldr	r2, [pc, #544]	; (8007980 <createProblem+0x6ad8>)
 8007760:	461d      	mov	r5, r3
 8007762:	4614      	mov	r4, r2
 8007764:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007766:	6028      	str	r0, [r5, #0]
 8007768:	6069      	str	r1, [r5, #4]
 800776a:	60aa      	str	r2, [r5, #8]
 800776c:	60eb      	str	r3, [r5, #12]
 800776e:	7823      	ldrb	r3, [r4, #0]
 8007770:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8007772:	687b      	ldr	r3, [r7, #4]
 8007774:	33d8      	adds	r3, #216	; 0xd8
 8007776:	4a83      	ldr	r2, [pc, #524]	; (8007984 <createProblem+0x6adc>)
 8007778:	461c      	mov	r4, r3
 800777a:	4613      	mov	r3, r2
 800777c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800777e:	6020      	str	r0, [r4, #0]
 8007780:	6061      	str	r1, [r4, #4]
 8007782:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 8007784:	687b      	ldr	r3, [r7, #4]
 8007786:	33cc      	adds	r3, #204	; 0xcc
 8007788:	4a75      	ldr	r2, [pc, #468]	; (8007960 <createProblem+0x6ab8>)
 800778a:	8811      	ldrh	r1, [r2, #0]
 800778c:	7892      	ldrb	r2, [r2, #2]
 800778e:	8019      	strh	r1, [r3, #0]
 8007790:	709a      	strb	r2, [r3, #2]
			break;
 8007792:	f013 b8cf 	b.w	801a934 <createProblem+0x19a8c>
		case 268 :
			strcpy(p->name,"THE WIZARD");
 8007796:	687b      	ldr	r3, [r7, #4]
 8007798:	337c      	adds	r3, #124	; 0x7c
 800779a:	497b      	ldr	r1, [pc, #492]	; (8007988 <createProblem+0x6ae0>)
 800779c:	461a      	mov	r2, r3
 800779e:	460b      	mov	r3, r1
 80077a0:	cb03      	ldmia	r3!, {r0, r1}
 80077a2:	6010      	str	r0, [r2, #0]
 80077a4:	6051      	str	r1, [r2, #4]
 80077a6:	8819      	ldrh	r1, [r3, #0]
 80077a8:	789b      	ldrb	r3, [r3, #2]
 80077aa:	8111      	strh	r1, [r2, #8]
 80077ac:	7293      	strb	r3, [r2, #10]
			p->moveSize = 8;
 80077ae:	687b      	ldr	r3, [r7, #4]
 80077b0:	2208      	movs	r2, #8
 80077b2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,E,H,F,H,E,I");
 80077b4:	687b      	ldr	r3, [r7, #4]
 80077b6:	3340      	adds	r3, #64	; 0x40
 80077b8:	4a74      	ldr	r2, [pc, #464]	; (800798c <createProblem+0x6ae4>)
 80077ba:	461c      	mov	r4, r3
 80077bc:	4615      	mov	r5, r2
 80077be:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80077c0:	6020      	str	r0, [r4, #0]
 80077c2:	6061      	str	r1, [r4, #4]
 80077c4:	60a2      	str	r2, [r4, #8]
 80077c6:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,8,10,11,13,16,18");
 80077c8:	687b      	ldr	r3, [r7, #4]
 80077ca:	3304      	adds	r3, #4
 80077cc:	4a70      	ldr	r2, [pc, #448]	; (8007990 <createProblem+0x6ae8>)
 80077ce:	461d      	mov	r5, r3
 80077d0:	4614      	mov	r4, r2
 80077d2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80077d4:	6028      	str	r0, [r5, #0]
 80077d6:	6069      	str	r1, [r5, #4]
 80077d8:	60aa      	str	r2, [r5, #8]
 80077da:	60eb      	str	r3, [r5, #12]
 80077dc:	6820      	ldr	r0, [r4, #0]
 80077de:	6128      	str	r0, [r5, #16]
 80077e0:	7923      	ldrb	r3, [r4, #4]
 80077e2:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 80077e4:	687b      	ldr	r3, [r7, #4]
 80077e6:	33d8      	adds	r3, #216	; 0xd8
 80077e8:	4a6a      	ldr	r2, [pc, #424]	; (8007994 <createProblem+0x6aec>)
 80077ea:	461c      	mov	r4, r3
 80077ec:	4615      	mov	r5, r2
 80077ee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80077f0:	6020      	str	r0, [r4, #0]
 80077f2:	6061      	str	r1, [r4, #4]
 80077f4:	60a2      	str	r2, [r4, #8]
 80077f6:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 80077f8:	687b      	ldr	r3, [r7, #4]
 80077fa:	33cc      	adds	r3, #204	; 0xcc
 80077fc:	4a58      	ldr	r2, [pc, #352]	; (8007960 <createProblem+0x6ab8>)
 80077fe:	8811      	ldrh	r1, [r2, #0]
 8007800:	7892      	ldrb	r2, [r2, #2]
 8007802:	8019      	strh	r1, [r3, #0]
 8007804:	709a      	strb	r2, [r3, #2]
			break;
 8007806:	f013 b895 	b.w	801a934 <createProblem+0x19a8c>
		case 269 :
			strcpy(p->name,"SMOKING AREA HARD");
 800780a:	687b      	ldr	r3, [r7, #4]
 800780c:	337c      	adds	r3, #124	; 0x7c
 800780e:	4a62      	ldr	r2, [pc, #392]	; (8007998 <createProblem+0x6af0>)
 8007810:	461d      	mov	r5, r3
 8007812:	4614      	mov	r4, r2
 8007814:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007816:	6028      	str	r0, [r5, #0]
 8007818:	6069      	str	r1, [r5, #4]
 800781a:	60aa      	str	r2, [r5, #8]
 800781c:	60eb      	str	r3, [r5, #12]
 800781e:	8823      	ldrh	r3, [r4, #0]
 8007820:	822b      	strh	r3, [r5, #16]
			p->moveSize = 5;
 8007822:	687b      	ldr	r3, [r7, #4]
 8007824:	2205      	movs	r2, #5
 8007826:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,E,E,I");
 8007828:	687b      	ldr	r3, [r7, #4]
 800782a:	3340      	adds	r3, #64	; 0x40
 800782c:	495b      	ldr	r1, [pc, #364]	; (800799c <createProblem+0x6af4>)
 800782e:	461a      	mov	r2, r3
 8007830:	460b      	mov	r3, r1
 8007832:	cb03      	ldmia	r3!, {r0, r1}
 8007834:	6010      	str	r0, [r2, #0]
 8007836:	6051      	str	r1, [r2, #4]
 8007838:	881b      	ldrh	r3, [r3, #0]
 800783a:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,12,16,18");
 800783c:	687b      	ldr	r3, [r7, #4]
 800783e:	3304      	adds	r3, #4
 8007840:	4a57      	ldr	r2, [pc, #348]	; (80079a0 <createProblem+0x6af8>)
 8007842:	461c      	mov	r4, r3
 8007844:	4613      	mov	r3, r2
 8007846:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007848:	6020      	str	r0, [r4, #0]
 800784a:	6061      	str	r1, [r4, #4]
 800784c:	60a2      	str	r2, [r4, #8]
 800784e:	781b      	ldrb	r3, [r3, #0]
 8007850:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8007852:	687b      	ldr	r3, [r7, #4]
 8007854:	33d8      	adds	r3, #216	; 0xd8
 8007856:	4941      	ldr	r1, [pc, #260]	; (800795c <createProblem+0x6ab4>)
 8007858:	461a      	mov	r2, r3
 800785a:	460b      	mov	r3, r1
 800785c:	cb03      	ldmia	r3!, {r0, r1}
 800785e:	6010      	str	r0, [r2, #0]
 8007860:	6051      	str	r1, [r2, #4]
 8007862:	881b      	ldrh	r3, [r3, #0]
 8007864:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 8007866:	687b      	ldr	r3, [r7, #4]
 8007868:	33cc      	adds	r3, #204	; 0xcc
 800786a:	4a4e      	ldr	r2, [pc, #312]	; (80079a4 <createProblem+0x6afc>)
 800786c:	6810      	ldr	r0, [r2, #0]
 800786e:	6018      	str	r0, [r3, #0]
			break;
 8007870:	f013 b860 	b.w	801a934 <createProblem+0x19a8c>
		case 27 :
			strcpy(p->name,"SCHWARTZ SCHNEIDER");
 8007874:	687b      	ldr	r3, [r7, #4]
 8007876:	337c      	adds	r3, #124	; 0x7c
 8007878:	4a4b      	ldr	r2, [pc, #300]	; (80079a8 <createProblem+0x6b00>)
 800787a:	461d      	mov	r5, r3
 800787c:	4614      	mov	r4, r2
 800787e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007880:	6028      	str	r0, [r5, #0]
 8007882:	6069      	str	r1, [r5, #4]
 8007884:	60aa      	str	r2, [r5, #8]
 8007886:	60eb      	str	r3, [r5, #12]
 8007888:	8823      	ldrh	r3, [r4, #0]
 800788a:	78a2      	ldrb	r2, [r4, #2]
 800788c:	822b      	strh	r3, [r5, #16]
 800788e:	4613      	mov	r3, r2
 8007890:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 7;
 8007892:	687b      	ldr	r3, [r7, #4]
 8007894:	2207      	movs	r2, #7
 8007896:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,D,B,D,E,I");
 8007898:	687b      	ldr	r3, [r7, #4]
 800789a:	3340      	adds	r3, #64	; 0x40
 800789c:	4a43      	ldr	r2, [pc, #268]	; (80079ac <createProblem+0x6b04>)
 800789e:	461c      	mov	r4, r3
 80078a0:	4613      	mov	r3, r2
 80078a2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80078a4:	6020      	str	r0, [r4, #0]
 80078a6:	6061      	str	r1, [r4, #4]
 80078a8:	60a2      	str	r2, [r4, #8]
 80078aa:	881b      	ldrh	r3, [r3, #0]
 80078ac:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,10,11,6,15,16,18");
 80078ae:	687b      	ldr	r3, [r7, #4]
 80078b0:	3304      	adds	r3, #4
 80078b2:	4a3f      	ldr	r2, [pc, #252]	; (80079b0 <createProblem+0x6b08>)
 80078b4:	461d      	mov	r5, r3
 80078b6:	4614      	mov	r4, r2
 80078b8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80078ba:	6028      	str	r0, [r5, #0]
 80078bc:	6069      	str	r1, [r5, #4]
 80078be:	60aa      	str	r2, [r5, #8]
 80078c0:	60eb      	str	r3, [r5, #12]
 80078c2:	8823      	ldrh	r3, [r4, #0]
 80078c4:	78a2      	ldrb	r2, [r4, #2]
 80078c6:	822b      	strh	r3, [r5, #16]
 80078c8:	4613      	mov	r3, r2
 80078ca:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80078cc:	687b      	ldr	r3, [r7, #4]
 80078ce:	33d8      	adds	r3, #216	; 0xd8
 80078d0:	4a38      	ldr	r2, [pc, #224]	; (80079b4 <createProblem+0x6b0c>)
 80078d2:	461c      	mov	r4, r3
 80078d4:	4613      	mov	r3, r2
 80078d6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80078d8:	6020      	str	r0, [r4, #0]
 80078da:	6061      	str	r1, [r4, #4]
 80078dc:	60a2      	str	r2, [r4, #8]
 80078de:	881b      	ldrh	r3, [r3, #0]
 80078e0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 80078e2:	687b      	ldr	r3, [r7, #4]
 80078e4:	33cc      	adds	r3, #204	; 0xcc
 80078e6:	4a2f      	ldr	r2, [pc, #188]	; (80079a4 <createProblem+0x6afc>)
 80078e8:	6810      	ldr	r0, [r2, #0]
 80078ea:	6018      	str	r0, [r3, #0]
			break;
 80078ec:	f013 b822 	b.w	801a934 <createProblem+0x19a8c>
		case 270 :
			strcpy(p->name,"ON BLACK");
 80078f0:	687b      	ldr	r3, [r7, #4]
 80078f2:	337c      	adds	r3, #124	; 0x7c
 80078f4:	4930      	ldr	r1, [pc, #192]	; (80079b8 <createProblem+0x6b10>)
 80078f6:	461a      	mov	r2, r3
 80078f8:	460b      	mov	r3, r1
 80078fa:	cb03      	ldmia	r3!, {r0, r1}
 80078fc:	6010      	str	r0, [r2, #0]
 80078fe:	6051      	str	r1, [r2, #4]
 8007900:	781b      	ldrb	r3, [r3, #0]
 8007902:	7213      	strb	r3, [r2, #8]
			p->moveSize = 6;
 8007904:	687b      	ldr	r3, [r7, #4]
 8007906:	2206      	movs	r2, #6
 8007908:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,F,C,D,A");
 800790a:	687b      	ldr	r3, [r7, #4]
 800790c:	3340      	adds	r3, #64	; 0x40
 800790e:	4a2b      	ldr	r2, [pc, #172]	; (80079bc <createProblem+0x6b14>)
 8007910:	461c      	mov	r4, r3
 8007912:	4613      	mov	r3, r2
 8007914:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007916:	6020      	str	r0, [r4, #0]
 8007918:	6061      	str	r1, [r4, #4]
 800791a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,11,13,15,18");
 800791c:	687b      	ldr	r3, [r7, #4]
 800791e:	3304      	adds	r3, #4
 8007920:	4a27      	ldr	r2, [pc, #156]	; (80079c0 <createProblem+0x6b18>)
 8007922:	461c      	mov	r4, r3
 8007924:	4615      	mov	r5, r2
 8007926:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007928:	6020      	str	r0, [r4, #0]
 800792a:	6061      	str	r1, [r4, #4]
 800792c:	60a2      	str	r2, [r4, #8]
 800792e:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8007930:	687b      	ldr	r3, [r7, #4]
 8007932:	33d8      	adds	r3, #216	; 0xd8
 8007934:	4a13      	ldr	r2, [pc, #76]	; (8007984 <createProblem+0x6adc>)
 8007936:	461c      	mov	r4, r3
 8007938:	4613      	mov	r3, r2
 800793a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800793c:	6020      	str	r0, [r4, #0]
 800793e:	6061      	str	r1, [r4, #4]
 8007940:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 8007942:	687b      	ldr	r3, [r7, #4]
 8007944:	33cc      	adds	r3, #204	; 0xcc
 8007946:	4a1f      	ldr	r2, [pc, #124]	; (80079c4 <createProblem+0x6b1c>)
 8007948:	6810      	ldr	r0, [r2, #0]
 800794a:	6018      	str	r0, [r3, #0]
			break;
 800794c:	f012 bff2 	b.w	801a934 <createProblem+0x19a8c>
 8007950:	08022ba0 	.word	0x08022ba0
 8007954:	08022bb8 	.word	0x08022bb8
 8007958:	08022bc4 	.word	0x08022bc4
 800795c:	080208a0 	.word	0x080208a0
 8007960:	080208f0 	.word	0x080208f0
 8007964:	08022bd4 	.word	0x08022bd4
 8007968:	08022be8 	.word	0x08022be8
 800796c:	08022bf8 	.word	0x08022bf8
 8007970:	08020a4c 	.word	0x08020a4c
 8007974:	08020928 	.word	0x08020928
 8007978:	08022c0c 	.word	0x08022c0c
 800797c:	08022c18 	.word	0x08022c18
 8007980:	08022c24 	.word	0x08022c24
 8007984:	0802091c 	.word	0x0802091c
 8007988:	08022c38 	.word	0x08022c38
 800798c:	08022c44 	.word	0x08022c44
 8007990:	08022c54 	.word	0x08022c54
 8007994:	080209d8 	.word	0x080209d8
 8007998:	08022c6c 	.word	0x08022c6c
 800799c:	08022c80 	.word	0x08022c80
 80079a0:	08022c8c 	.word	0x08022c8c
 80079a4:	080209a4 	.word	0x080209a4
 80079a8:	08022c9c 	.word	0x08022c9c
 80079ac:	08022cb0 	.word	0x08022cb0
 80079b0:	08022cc0 	.word	0x08022cc0
 80079b4:	08020a14 	.word	0x08020a14
 80079b8:	08022cd4 	.word	0x08022cd4
 80079bc:	08022ce0 	.word	0x08022ce0
 80079c0:	08022140 	.word	0x08022140
 80079c4:	08020830 	.word	0x08020830
		case 271 :
			strcpy(p->name,"TAMOA NARASAKI BOMB");
 80079c8:	687b      	ldr	r3, [r7, #4]
 80079ca:	337c      	adds	r3, #124	; 0x7c
 80079cc:	4ab1      	ldr	r2, [pc, #708]	; (8007c94 <createProblem+0x6dec>)
 80079ce:	461d      	mov	r5, r3
 80079d0:	4614      	mov	r4, r2
 80079d2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80079d4:	6028      	str	r0, [r5, #0]
 80079d6:	6069      	str	r1, [r5, #4]
 80079d8:	60aa      	str	r2, [r5, #8]
 80079da:	60eb      	str	r3, [r5, #12]
 80079dc:	6820      	ldr	r0, [r4, #0]
 80079de:	6128      	str	r0, [r5, #16]
			p->moveSize = 7;
 80079e0:	687b      	ldr	r3, [r7, #4]
 80079e2:	2207      	movs	r2, #7
 80079e4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,C,I,E,C,A");
 80079e6:	687b      	ldr	r3, [r7, #4]
 80079e8:	3340      	adds	r3, #64	; 0x40
 80079ea:	4aab      	ldr	r2, [pc, #684]	; (8007c98 <createProblem+0x6df0>)
 80079ec:	461c      	mov	r4, r3
 80079ee:	4613      	mov	r3, r2
 80079f0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80079f2:	6020      	str	r0, [r4, #0]
 80079f4:	6061      	str	r1, [r4, #4]
 80079f6:	60a2      	str	r2, [r4, #8]
 80079f8:	881b      	ldrh	r3, [r3, #0]
 80079fa:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,8,9,16,13,18");
 80079fc:	687b      	ldr	r3, [r7, #4]
 80079fe:	3304      	adds	r3, #4
 8007a00:	4aa6      	ldr	r2, [pc, #664]	; (8007c9c <createProblem+0x6df4>)
 8007a02:	461d      	mov	r5, r3
 8007a04:	4614      	mov	r4, r2
 8007a06:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007a08:	6028      	str	r0, [r5, #0]
 8007a0a:	6069      	str	r1, [r5, #4]
 8007a0c:	60aa      	str	r2, [r5, #8]
 8007a0e:	60eb      	str	r3, [r5, #12]
 8007a10:	7823      	ldrb	r3, [r4, #0]
 8007a12:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8007a14:	687b      	ldr	r3, [r7, #4]
 8007a16:	33d8      	adds	r3, #216	; 0xd8
 8007a18:	4aa1      	ldr	r2, [pc, #644]	; (8007ca0 <createProblem+0x6df8>)
 8007a1a:	461c      	mov	r4, r3
 8007a1c:	4613      	mov	r3, r2
 8007a1e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007a20:	6020      	str	r0, [r4, #0]
 8007a22:	6061      	str	r1, [r4, #4]
 8007a24:	60a2      	str	r2, [r4, #8]
 8007a26:	881b      	ldrh	r3, [r3, #0]
 8007a28:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B+");
 8007a2a:	687b      	ldr	r3, [r7, #4]
 8007a2c:	33cc      	adds	r3, #204	; 0xcc
 8007a2e:	4a9d      	ldr	r2, [pc, #628]	; (8007ca4 <createProblem+0x6dfc>)
 8007a30:	6810      	ldr	r0, [r2, #0]
 8007a32:	6018      	str	r0, [r3, #0]
			break;
 8007a34:	f012 bf7e 	b.w	801a934 <createProblem+0x19a8c>
		case 272 :
			strcpy(p->name,"POOP TWISTER");
 8007a38:	687b      	ldr	r3, [r7, #4]
 8007a3a:	337c      	adds	r3, #124	; 0x7c
 8007a3c:	4a9a      	ldr	r2, [pc, #616]	; (8007ca8 <createProblem+0x6e00>)
 8007a3e:	461c      	mov	r4, r3
 8007a40:	4613      	mov	r3, r2
 8007a42:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007a44:	6020      	str	r0, [r4, #0]
 8007a46:	6061      	str	r1, [r4, #4]
 8007a48:	60a2      	str	r2, [r4, #8]
 8007a4a:	781b      	ldrb	r3, [r3, #0]
 8007a4c:	7323      	strb	r3, [r4, #12]
			p->moveSize = 7;
 8007a4e:	687b      	ldr	r3, [r7, #4]
 8007a50:	2207      	movs	r2, #7
 8007a52:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,J,G,D,G,E,I");
 8007a54:	687b      	ldr	r3, [r7, #4]
 8007a56:	3340      	adds	r3, #64	; 0x40
 8007a58:	4a94      	ldr	r2, [pc, #592]	; (8007cac <createProblem+0x6e04>)
 8007a5a:	461c      	mov	r4, r3
 8007a5c:	4613      	mov	r3, r2
 8007a5e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007a60:	6020      	str	r0, [r4, #0]
 8007a62:	6061      	str	r1, [r4, #4]
 8007a64:	60a2      	str	r2, [r4, #8]
 8007a66:	881b      	ldrh	r3, [r3, #0]
 8007a68:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,9,11,14,16,18");
 8007a6a:	687b      	ldr	r3, [r7, #4]
 8007a6c:	3304      	adds	r3, #4
 8007a6e:	4a90      	ldr	r2, [pc, #576]	; (8007cb0 <createProblem+0x6e08>)
 8007a70:	461d      	mov	r5, r3
 8007a72:	4614      	mov	r4, r2
 8007a74:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007a76:	6028      	str	r0, [r5, #0]
 8007a78:	6069      	str	r1, [r5, #4]
 8007a7a:	60aa      	str	r2, [r5, #8]
 8007a7c:	60eb      	str	r3, [r5, #12]
 8007a7e:	8823      	ldrh	r3, [r4, #0]
 8007a80:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8007a82:	687b      	ldr	r3, [r7, #4]
 8007a84:	33d8      	adds	r3, #216	; 0xd8
 8007a86:	4a8b      	ldr	r2, [pc, #556]	; (8007cb4 <createProblem+0x6e0c>)
 8007a88:	461c      	mov	r4, r3
 8007a8a:	4613      	mov	r3, r2
 8007a8c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007a8e:	6020      	str	r0, [r4, #0]
 8007a90:	6061      	str	r1, [r4, #4]
 8007a92:	60a2      	str	r2, [r4, #8]
 8007a94:	881b      	ldrh	r3, [r3, #0]
 8007a96:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8007a98:	687b      	ldr	r3, [r7, #4]
 8007a9a:	33cc      	adds	r3, #204	; 0xcc
 8007a9c:	4a86      	ldr	r2, [pc, #536]	; (8007cb8 <createProblem+0x6e10>)
 8007a9e:	8811      	ldrh	r1, [r2, #0]
 8007aa0:	7892      	ldrb	r2, [r2, #2]
 8007aa2:	8019      	strh	r1, [r3, #0]
 8007aa4:	709a      	strb	r2, [r3, #2]
			break;
 8007aa6:	f012 bf45 	b.w	801a934 <createProblem+0x19a8c>
		case 273 :
			strcpy(p->name,"GIVE ME SOMETHING BETTER");
 8007aaa:	687b      	ldr	r3, [r7, #4]
 8007aac:	337c      	adds	r3, #124	; 0x7c
 8007aae:	4a83      	ldr	r2, [pc, #524]	; (8007cbc <createProblem+0x6e14>)
 8007ab0:	461d      	mov	r5, r3
 8007ab2:	4614      	mov	r4, r2
 8007ab4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007ab6:	6028      	str	r0, [r5, #0]
 8007ab8:	6069      	str	r1, [r5, #4]
 8007aba:	60aa      	str	r2, [r5, #8]
 8007abc:	60eb      	str	r3, [r5, #12]
 8007abe:	cc03      	ldmia	r4!, {r0, r1}
 8007ac0:	6128      	str	r0, [r5, #16]
 8007ac2:	6169      	str	r1, [r5, #20]
 8007ac4:	7823      	ldrb	r3, [r4, #0]
 8007ac6:	762b      	strb	r3, [r5, #24]
			p->moveSize = 9;
 8007ac8:	687b      	ldr	r3, [r7, #4]
 8007aca:	2209      	movs	r2, #9
 8007acc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,K,H,I,C,D,B,A");
 8007ace:	687b      	ldr	r3, [r7, #4]
 8007ad0:	3340      	adds	r3, #64	; 0x40
 8007ad2:	4a7b      	ldr	r2, [pc, #492]	; (8007cc0 <createProblem+0x6e18>)
 8007ad4:	461d      	mov	r5, r3
 8007ad6:	4614      	mov	r4, r2
 8007ad8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007ada:	6028      	str	r0, [r5, #0]
 8007adc:	6069      	str	r1, [r5, #4]
 8007ade:	60aa      	str	r2, [r5, #8]
 8007ae0:	60eb      	str	r3, [r5, #12]
 8007ae2:	8823      	ldrh	r3, [r4, #0]
 8007ae4:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"6,4,9,13,14,13,15,12,18");
 8007ae6:	687b      	ldr	r3, [r7, #4]
 8007ae8:	3304      	adds	r3, #4
 8007aea:	4a76      	ldr	r2, [pc, #472]	; (8007cc4 <createProblem+0x6e1c>)
 8007aec:	461d      	mov	r5, r3
 8007aee:	4614      	mov	r4, r2
 8007af0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007af2:	6028      	str	r0, [r5, #0]
 8007af4:	6069      	str	r1, [r5, #4]
 8007af6:	60aa      	str	r2, [r5, #8]
 8007af8:	60eb      	str	r3, [r5, #12]
 8007afa:	cc03      	ldmia	r4!, {r0, r1}
 8007afc:	6128      	str	r0, [r5, #16]
 8007afe:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8007b00:	687b      	ldr	r3, [r7, #4]
 8007b02:	33d8      	adds	r3, #216	; 0xd8
 8007b04:	4a70      	ldr	r2, [pc, #448]	; (8007cc8 <createProblem+0x6e20>)
 8007b06:	461d      	mov	r5, r3
 8007b08:	4614      	mov	r4, r2
 8007b0a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007b0c:	6028      	str	r0, [r5, #0]
 8007b0e:	6069      	str	r1, [r5, #4]
 8007b10:	60aa      	str	r2, [r5, #8]
 8007b12:	60eb      	str	r3, [r5, #12]
 8007b14:	8823      	ldrh	r3, [r4, #0]
 8007b16:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6C+");
 8007b18:	687b      	ldr	r3, [r7, #4]
 8007b1a:	33cc      	adds	r3, #204	; 0xcc
 8007b1c:	4a6b      	ldr	r2, [pc, #428]	; (8007ccc <createProblem+0x6e24>)
 8007b1e:	6810      	ldr	r0, [r2, #0]
 8007b20:	6018      	str	r0, [r3, #0]
			break;
 8007b22:	f012 bf07 	b.w	801a934 <createProblem+0x19a8c>
		case 274 :
			strcpy(p->name,"MONOTHEISM");
 8007b26:	687b      	ldr	r3, [r7, #4]
 8007b28:	337c      	adds	r3, #124	; 0x7c
 8007b2a:	4969      	ldr	r1, [pc, #420]	; (8007cd0 <createProblem+0x6e28>)
 8007b2c:	461a      	mov	r2, r3
 8007b2e:	460b      	mov	r3, r1
 8007b30:	cb03      	ldmia	r3!, {r0, r1}
 8007b32:	6010      	str	r0, [r2, #0]
 8007b34:	6051      	str	r1, [r2, #4]
 8007b36:	8819      	ldrh	r1, [r3, #0]
 8007b38:	789b      	ldrb	r3, [r3, #2]
 8007b3a:	8111      	strh	r1, [r2, #8]
 8007b3c:	7293      	strb	r3, [r2, #10]
			p->moveSize = 9;
 8007b3e:	687b      	ldr	r3, [r7, #4]
 8007b40:	2209      	movs	r2, #9
 8007b42:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,K,H,C,C,I,D,A");
 8007b44:	687b      	ldr	r3, [r7, #4]
 8007b46:	3340      	adds	r3, #64	; 0x40
 8007b48:	4a62      	ldr	r2, [pc, #392]	; (8007cd4 <createProblem+0x6e2c>)
 8007b4a:	461d      	mov	r5, r3
 8007b4c:	4614      	mov	r4, r2
 8007b4e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007b50:	6028      	str	r0, [r5, #0]
 8007b52:	6069      	str	r1, [r5, #4]
 8007b54:	60aa      	str	r2, [r5, #8]
 8007b56:	60eb      	str	r3, [r5, #12]
 8007b58:	8823      	ldrh	r3, [r4, #0]
 8007b5a:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"6,4,9,13,13,16,14,11,18");
 8007b5c:	687b      	ldr	r3, [r7, #4]
 8007b5e:	3304      	adds	r3, #4
 8007b60:	4a5d      	ldr	r2, [pc, #372]	; (8007cd8 <createProblem+0x6e30>)
 8007b62:	461d      	mov	r5, r3
 8007b64:	4614      	mov	r4, r2
 8007b66:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007b68:	6028      	str	r0, [r5, #0]
 8007b6a:	6069      	str	r1, [r5, #4]
 8007b6c:	60aa      	str	r2, [r5, #8]
 8007b6e:	60eb      	str	r3, [r5, #12]
 8007b70:	cc03      	ldmia	r4!, {r0, r1}
 8007b72:	6128      	str	r0, [r5, #16]
 8007b74:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8007b76:	687b      	ldr	r3, [r7, #4]
 8007b78:	33d8      	adds	r3, #216	; 0xd8
 8007b7a:	4a53      	ldr	r2, [pc, #332]	; (8007cc8 <createProblem+0x6e20>)
 8007b7c:	461d      	mov	r5, r3
 8007b7e:	4614      	mov	r4, r2
 8007b80:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007b82:	6028      	str	r0, [r5, #0]
 8007b84:	6069      	str	r1, [r5, #4]
 8007b86:	60aa      	str	r2, [r5, #8]
 8007b88:	60eb      	str	r3, [r5, #12]
 8007b8a:	8823      	ldrh	r3, [r4, #0]
 8007b8c:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "7A+");
 8007b8e:	687b      	ldr	r3, [r7, #4]
 8007b90:	33cc      	adds	r3, #204	; 0xcc
 8007b92:	4a52      	ldr	r2, [pc, #328]	; (8007cdc <createProblem+0x6e34>)
 8007b94:	6810      	ldr	r0, [r2, #0]
 8007b96:	6018      	str	r0, [r3, #0]
			break;
 8007b98:	f012 becc 	b.w	801a934 <createProblem+0x19a8c>
		case 275 :
			strcpy(p->name,"BLACK HEART");
 8007b9c:	687b      	ldr	r3, [r7, #4]
 8007b9e:	337c      	adds	r3, #124	; 0x7c
 8007ba0:	4a4f      	ldr	r2, [pc, #316]	; (8007ce0 <createProblem+0x6e38>)
 8007ba2:	461c      	mov	r4, r3
 8007ba4:	4613      	mov	r3, r2
 8007ba6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007ba8:	6020      	str	r0, [r4, #0]
 8007baa:	6061      	str	r1, [r4, #4]
 8007bac:	60a2      	str	r2, [r4, #8]
			p->moveSize = 5;
 8007bae:	687b      	ldr	r3, [r7, #4]
 8007bb0:	2205      	movs	r2, #5
 8007bb2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,I,G,I");
 8007bb4:	687b      	ldr	r3, [r7, #4]
 8007bb6:	3340      	adds	r3, #64	; 0x40
 8007bb8:	494a      	ldr	r1, [pc, #296]	; (8007ce4 <createProblem+0x6e3c>)
 8007bba:	461a      	mov	r2, r3
 8007bbc:	460b      	mov	r3, r1
 8007bbe:	cb03      	ldmia	r3!, {r0, r1}
 8007bc0:	6010      	str	r0, [r2, #0]
 8007bc2:	6051      	str	r1, [r2, #4]
 8007bc4:	881b      	ldrh	r3, [r3, #0]
 8007bc6:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,14,17,18");
 8007bc8:	687b      	ldr	r3, [r7, #4]
 8007bca:	3304      	adds	r3, #4
 8007bcc:	4a46      	ldr	r2, [pc, #280]	; (8007ce8 <createProblem+0x6e40>)
 8007bce:	461c      	mov	r4, r3
 8007bd0:	4613      	mov	r3, r2
 8007bd2:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007bd4:	6020      	str	r0, [r4, #0]
 8007bd6:	6061      	str	r1, [r4, #4]
 8007bd8:	60a2      	str	r2, [r4, #8]
 8007bda:	881b      	ldrh	r3, [r3, #0]
 8007bdc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8007bde:	687b      	ldr	r3, [r7, #4]
 8007be0:	33d8      	adds	r3, #216	; 0xd8
 8007be2:	4942      	ldr	r1, [pc, #264]	; (8007cec <createProblem+0x6e44>)
 8007be4:	461a      	mov	r2, r3
 8007be6:	460b      	mov	r3, r1
 8007be8:	cb03      	ldmia	r3!, {r0, r1}
 8007bea:	6010      	str	r0, [r2, #0]
 8007bec:	6051      	str	r1, [r2, #4]
 8007bee:	881b      	ldrh	r3, [r3, #0]
 8007bf0:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C+");
 8007bf2:	687b      	ldr	r3, [r7, #4]
 8007bf4:	33cc      	adds	r3, #204	; 0xcc
 8007bf6:	4a35      	ldr	r2, [pc, #212]	; (8007ccc <createProblem+0x6e24>)
 8007bf8:	6810      	ldr	r0, [r2, #0]
 8007bfa:	6018      	str	r0, [r3, #0]
			break;
 8007bfc:	f012 be9a 	b.w	801a934 <createProblem+0x19a8c>
		case 276 :
			strcpy(p->name,"NEW PROB");
 8007c00:	687b      	ldr	r3, [r7, #4]
 8007c02:	337c      	adds	r3, #124	; 0x7c
 8007c04:	493a      	ldr	r1, [pc, #232]	; (8007cf0 <createProblem+0x6e48>)
 8007c06:	461a      	mov	r2, r3
 8007c08:	460b      	mov	r3, r1
 8007c0a:	cb03      	ldmia	r3!, {r0, r1}
 8007c0c:	6010      	str	r0, [r2, #0]
 8007c0e:	6051      	str	r1, [r2, #4]
 8007c10:	781b      	ldrb	r3, [r3, #0]
 8007c12:	7213      	strb	r3, [r2, #8]
			p->moveSize = 13;
 8007c14:	687b      	ldr	r3, [r7, #4]
 8007c16:	220d      	movs	r2, #13
 8007c18:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,C,A,B,C,B,A,D,C,E,D,A");
 8007c1a:	687b      	ldr	r3, [r7, #4]
 8007c1c:	3340      	adds	r3, #64	; 0x40
 8007c1e:	4a35      	ldr	r2, [pc, #212]	; (8007cf4 <createProblem+0x6e4c>)
 8007c20:	461d      	mov	r5, r3
 8007c22:	4614      	mov	r4, r2
 8007c24:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007c26:	6028      	str	r0, [r5, #0]
 8007c28:	6069      	str	r1, [r5, #4]
 8007c2a:	60aa      	str	r2, [r5, #8]
 8007c2c:	60eb      	str	r3, [r5, #12]
 8007c2e:	cc03      	ldmia	r4!, {r0, r1}
 8007c30:	6128      	str	r0, [r5, #16]
 8007c32:	6169      	str	r1, [r5, #20]
 8007c34:	8823      	ldrh	r3, [r4, #0]
 8007c36:	832b      	strh	r3, [r5, #24]
			strcpy(p->moveNumbers,"4,5,16,14,15,13,10,9,7,8,8,11,18");
 8007c38:	687b      	ldr	r3, [r7, #4]
 8007c3a:	3304      	adds	r3, #4
 8007c3c:	4a2e      	ldr	r2, [pc, #184]	; (8007cf8 <createProblem+0x6e50>)
 8007c3e:	4614      	mov	r4, r2
 8007c40:	469c      	mov	ip, r3
 8007c42:	f104 0e20 	add.w	lr, r4, #32
 8007c46:	4665      	mov	r5, ip
 8007c48:	4626      	mov	r6, r4
 8007c4a:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8007c4c:	6028      	str	r0, [r5, #0]
 8007c4e:	6069      	str	r1, [r5, #4]
 8007c50:	60aa      	str	r2, [r5, #8]
 8007c52:	60eb      	str	r3, [r5, #12]
 8007c54:	3410      	adds	r4, #16
 8007c56:	f10c 0c10 	add.w	ip, ip, #16
 8007c5a:	4574      	cmp	r4, lr
 8007c5c:	d1f3      	bne.n	8007c46 <createProblem+0x6d9e>
 8007c5e:	4663      	mov	r3, ip
 8007c60:	4622      	mov	r2, r4
 8007c62:	7812      	ldrb	r2, [r2, #0]
 8007c64:	701a      	strb	r2, [r3, #0]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,d,d,d,e");
 8007c66:	687b      	ldr	r3, [r7, #4]
 8007c68:	33d8      	adds	r3, #216	; 0xd8
 8007c6a:	4a24      	ldr	r2, [pc, #144]	; (8007cfc <createProblem+0x6e54>)
 8007c6c:	461d      	mov	r5, r3
 8007c6e:	4614      	mov	r4, r2
 8007c70:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007c72:	6028      	str	r0, [r5, #0]
 8007c74:	6069      	str	r1, [r5, #4]
 8007c76:	60aa      	str	r2, [r5, #8]
 8007c78:	60eb      	str	r3, [r5, #12]
 8007c7a:	cc03      	ldmia	r4!, {r0, r1}
 8007c7c:	6128      	str	r0, [r5, #16]
 8007c7e:	6169      	str	r1, [r5, #20]
 8007c80:	8823      	ldrh	r3, [r4, #0]
 8007c82:	832b      	strh	r3, [r5, #24]
			strcpy(p->grade, "6B+");
 8007c84:	687b      	ldr	r3, [r7, #4]
 8007c86:	33cc      	adds	r3, #204	; 0xcc
 8007c88:	4a1d      	ldr	r2, [pc, #116]	; (8007d00 <createProblem+0x6e58>)
 8007c8a:	6810      	ldr	r0, [r2, #0]
 8007c8c:	6018      	str	r0, [r3, #0]
			break;
 8007c8e:	f012 be51 	b.w	801a934 <createProblem+0x19a8c>
 8007c92:	bf00      	nop
 8007c94:	08022cec 	.word	0x08022cec
 8007c98:	08022d00 	.word	0x08022d00
 8007c9c:	08022d10 	.word	0x08022d10
 8007ca0:	08020a14 	.word	0x08020a14
 8007ca4:	08020dc8 	.word	0x08020dc8
 8007ca8:	08022d24 	.word	0x08022d24
 8007cac:	08022d34 	.word	0x08022d34
 8007cb0:	08022d44 	.word	0x08022d44
 8007cb4:	08020820 	.word	0x08020820
 8007cb8:	080208f0 	.word	0x080208f0
 8007cbc:	08022d58 	.word	0x08022d58
 8007cc0:	08022d74 	.word	0x08022d74
 8007cc4:	08022d88 	.word	0x08022d88
 8007cc8:	08020dfc 	.word	0x08020dfc
 8007ccc:	08020928 	.word	0x08020928
 8007cd0:	08022da0 	.word	0x08022da0
 8007cd4:	08022dac 	.word	0x08022dac
 8007cd8:	08022dc0 	.word	0x08022dc0
 8007cdc:	080209a4 	.word	0x080209a4
 8007ce0:	08022dd8 	.word	0x08022dd8
 8007ce4:	08022de4 	.word	0x08022de4
 8007ce8:	080221a4 	.word	0x080221a4
 8007cec:	080208a0 	.word	0x080208a0
 8007cf0:	08022df0 	.word	0x08022df0
 8007cf4:	08022dfc 	.word	0x08022dfc
 8007cf8:	08022e18 	.word	0x08022e18
 8007cfc:	08022e3c 	.word	0x08022e3c
 8007d00:	08020830 	.word	0x08020830
		case 277 :
			strcpy(p->name,"FIRST PROB.");
 8007d04:	687b      	ldr	r3, [r7, #4]
 8007d06:	337c      	adds	r3, #124	; 0x7c
 8007d08:	4abf      	ldr	r2, [pc, #764]	; (8008008 <createProblem+0x7160>)
 8007d0a:	461c      	mov	r4, r3
 8007d0c:	4613      	mov	r3, r2
 8007d0e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007d10:	6020      	str	r0, [r4, #0]
 8007d12:	6061      	str	r1, [r4, #4]
 8007d14:	60a2      	str	r2, [r4, #8]
			p->moveSize = 13;
 8007d16:	687b      	ldr	r3, [r7, #4]
 8007d18:	220d      	movs	r2, #13
 8007d1a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,C,E,G,G,D,C,A,D,C,E,A");
 8007d1c:	687b      	ldr	r3, [r7, #4]
 8007d1e:	3340      	adds	r3, #64	; 0x40
 8007d20:	4aba      	ldr	r2, [pc, #744]	; (800800c <createProblem+0x7164>)
 8007d22:	461d      	mov	r5, r3
 8007d24:	4614      	mov	r4, r2
 8007d26:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007d28:	6028      	str	r0, [r5, #0]
 8007d2a:	6069      	str	r1, [r5, #4]
 8007d2c:	60aa      	str	r2, [r5, #8]
 8007d2e:	60eb      	str	r3, [r5, #12]
 8007d30:	cc03      	ldmia	r4!, {r0, r1}
 8007d32:	6128      	str	r0, [r5, #16]
 8007d34:	6169      	str	r1, [r5, #20]
 8007d36:	8823      	ldrh	r3, [r4, #0]
 8007d38:	832b      	strh	r3, [r5, #24]
			strcpy(p->moveNumbers,"4,5,8,9,9,10,11,16,14,15,13,12,18");
 8007d3a:	687b      	ldr	r3, [r7, #4]
 8007d3c:	3304      	adds	r3, #4
 8007d3e:	4ab4      	ldr	r2, [pc, #720]	; (8008010 <createProblem+0x7168>)
 8007d40:	4614      	mov	r4, r2
 8007d42:	469c      	mov	ip, r3
 8007d44:	f104 0e20 	add.w	lr, r4, #32
 8007d48:	4665      	mov	r5, ip
 8007d4a:	4626      	mov	r6, r4
 8007d4c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8007d4e:	6028      	str	r0, [r5, #0]
 8007d50:	6069      	str	r1, [r5, #4]
 8007d52:	60aa      	str	r2, [r5, #8]
 8007d54:	60eb      	str	r3, [r5, #12]
 8007d56:	3410      	adds	r4, #16
 8007d58:	f10c 0c10 	add.w	ip, ip, #16
 8007d5c:	4574      	cmp	r4, lr
 8007d5e:	d1f3      	bne.n	8007d48 <createProblem+0x6ea0>
 8007d60:	4662      	mov	r2, ip
 8007d62:	4623      	mov	r3, r4
 8007d64:	881b      	ldrh	r3, [r3, #0]
 8007d66:	8013      	strh	r3, [r2, #0]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,d,d,d,e");
 8007d68:	687b      	ldr	r3, [r7, #4]
 8007d6a:	33d8      	adds	r3, #216	; 0xd8
 8007d6c:	4aa9      	ldr	r2, [pc, #676]	; (8008014 <createProblem+0x716c>)
 8007d6e:	461d      	mov	r5, r3
 8007d70:	4614      	mov	r4, r2
 8007d72:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007d74:	6028      	str	r0, [r5, #0]
 8007d76:	6069      	str	r1, [r5, #4]
 8007d78:	60aa      	str	r2, [r5, #8]
 8007d7a:	60eb      	str	r3, [r5, #12]
 8007d7c:	cc03      	ldmia	r4!, {r0, r1}
 8007d7e:	6128      	str	r0, [r5, #16]
 8007d80:	6169      	str	r1, [r5, #20]
 8007d82:	8823      	ldrh	r3, [r4, #0]
 8007d84:	832b      	strh	r3, [r5, #24]
			strcpy(p->grade, "6B+");
 8007d86:	687b      	ldr	r3, [r7, #4]
 8007d88:	33cc      	adds	r3, #204	; 0xcc
 8007d8a:	4aa3      	ldr	r2, [pc, #652]	; (8008018 <createProblem+0x7170>)
 8007d8c:	6810      	ldr	r0, [r2, #0]
 8007d8e:	6018      	str	r0, [r3, #0]
			break;
 8007d90:	f012 bdd0 	b.w	801a934 <createProblem+0x19a8c>
		case 278 :
			strcpy(p->name,"TECH");
 8007d94:	687b      	ldr	r3, [r7, #4]
 8007d96:	337c      	adds	r3, #124	; 0x7c
 8007d98:	4aa0      	ldr	r2, [pc, #640]	; (800801c <createProblem+0x7174>)
 8007d9a:	6810      	ldr	r0, [r2, #0]
 8007d9c:	6018      	str	r0, [r3, #0]
 8007d9e:	7912      	ldrb	r2, [r2, #4]
 8007da0:	711a      	strb	r2, [r3, #4]
			p->moveSize = 7;
 8007da2:	687b      	ldr	r3, [r7, #4]
 8007da4:	2207      	movs	r2, #7
 8007da6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,F,E,H,G,I");
 8007da8:	687b      	ldr	r3, [r7, #4]
 8007daa:	3340      	adds	r3, #64	; 0x40
 8007dac:	4a9c      	ldr	r2, [pc, #624]	; (8008020 <createProblem+0x7178>)
 8007dae:	461c      	mov	r4, r3
 8007db0:	4613      	mov	r3, r2
 8007db2:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007db4:	6020      	str	r0, [r4, #0]
 8007db6:	6061      	str	r1, [r4, #4]
 8007db8:	60a2      	str	r2, [r4, #8]
 8007dba:	881b      	ldrh	r3, [r3, #0]
 8007dbc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,11,12,12,15,18");
 8007dbe:	687b      	ldr	r3, [r7, #4]
 8007dc0:	3304      	adds	r3, #4
 8007dc2:	4a98      	ldr	r2, [pc, #608]	; (8008024 <createProblem+0x717c>)
 8007dc4:	461d      	mov	r5, r3
 8007dc6:	4614      	mov	r4, r2
 8007dc8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007dca:	6028      	str	r0, [r5, #0]
 8007dcc:	6069      	str	r1, [r5, #4]
 8007dce:	60aa      	str	r2, [r5, #8]
 8007dd0:	60eb      	str	r3, [r5, #12]
 8007dd2:	8823      	ldrh	r3, [r4, #0]
 8007dd4:	78a2      	ldrb	r2, [r4, #2]
 8007dd6:	822b      	strh	r3, [r5, #16]
 8007dd8:	4613      	mov	r3, r2
 8007dda:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8007ddc:	687b      	ldr	r3, [r7, #4]
 8007dde:	33d8      	adds	r3, #216	; 0xd8
 8007de0:	4a91      	ldr	r2, [pc, #580]	; (8008028 <createProblem+0x7180>)
 8007de2:	461c      	mov	r4, r3
 8007de4:	4613      	mov	r3, r2
 8007de6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007de8:	6020      	str	r0, [r4, #0]
 8007dea:	6061      	str	r1, [r4, #4]
 8007dec:	60a2      	str	r2, [r4, #8]
 8007dee:	881b      	ldrh	r3, [r3, #0]
 8007df0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 8007df2:	687b      	ldr	r3, [r7, #4]
 8007df4:	33cc      	adds	r3, #204	; 0xcc
 8007df6:	4a8d      	ldr	r2, [pc, #564]	; (800802c <createProblem+0x7184>)
 8007df8:	6810      	ldr	r0, [r2, #0]
 8007dfa:	6018      	str	r0, [r3, #0]
			break;
 8007dfc:	f012 bd9a 	b.w	801a934 <createProblem+0x19a8c>
		case 279 :
			strcpy(p->name,"AKAHN N LIL CEASY");
 8007e00:	687b      	ldr	r3, [r7, #4]
 8007e02:	337c      	adds	r3, #124	; 0x7c
 8007e04:	4a8a      	ldr	r2, [pc, #552]	; (8008030 <createProblem+0x7188>)
 8007e06:	461d      	mov	r5, r3
 8007e08:	4614      	mov	r4, r2
 8007e0a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007e0c:	6028      	str	r0, [r5, #0]
 8007e0e:	6069      	str	r1, [r5, #4]
 8007e10:	60aa      	str	r2, [r5, #8]
 8007e12:	60eb      	str	r3, [r5, #12]
 8007e14:	8823      	ldrh	r3, [r4, #0]
 8007e16:	822b      	strh	r3, [r5, #16]
			p->moveSize = 9;
 8007e18:	687b      	ldr	r3, [r7, #4]
 8007e1a:	2209      	movs	r2, #9
 8007e1c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,E,F,E,J,I,E,D");
 8007e1e:	687b      	ldr	r3, [r7, #4]
 8007e20:	3340      	adds	r3, #64	; 0x40
 8007e22:	4a84      	ldr	r2, [pc, #528]	; (8008034 <createProblem+0x718c>)
 8007e24:	461d      	mov	r5, r3
 8007e26:	4614      	mov	r4, r2
 8007e28:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007e2a:	6028      	str	r0, [r5, #0]
 8007e2c:	6069      	str	r1, [r5, #4]
 8007e2e:	60aa      	str	r2, [r5, #8]
 8007e30:	60eb      	str	r3, [r5, #12]
 8007e32:	8823      	ldrh	r3, [r4, #0]
 8007e34:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,8,8,11,12,7,14,16,18");
 8007e36:	687b      	ldr	r3, [r7, #4]
 8007e38:	3304      	adds	r3, #4
 8007e3a:	4a7f      	ldr	r2, [pc, #508]	; (8008038 <createProblem+0x7190>)
 8007e3c:	461c      	mov	r4, r3
 8007e3e:	4615      	mov	r5, r2
 8007e40:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8007e42:	6020      	str	r0, [r4, #0]
 8007e44:	6061      	str	r1, [r4, #4]
 8007e46:	60a2      	str	r2, [r4, #8]
 8007e48:	60e3      	str	r3, [r4, #12]
 8007e4a:	6828      	ldr	r0, [r5, #0]
 8007e4c:	6120      	str	r0, [r4, #16]
 8007e4e:	88ab      	ldrh	r3, [r5, #4]
 8007e50:	79aa      	ldrb	r2, [r5, #6]
 8007e52:	82a3      	strh	r3, [r4, #20]
 8007e54:	4613      	mov	r3, r2
 8007e56:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,d,e");
 8007e58:	687b      	ldr	r3, [r7, #4]
 8007e5a:	33d8      	adds	r3, #216	; 0xd8
 8007e5c:	4a77      	ldr	r2, [pc, #476]	; (800803c <createProblem+0x7194>)
 8007e5e:	461d      	mov	r5, r3
 8007e60:	4614      	mov	r4, r2
 8007e62:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8007e64:	6028      	str	r0, [r5, #0]
 8007e66:	6069      	str	r1, [r5, #4]
 8007e68:	60aa      	str	r2, [r5, #8]
 8007e6a:	60eb      	str	r3, [r5, #12]
 8007e6c:	8823      	ldrh	r3, [r4, #0]
 8007e6e:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8007e70:	687b      	ldr	r3, [r7, #4]
 8007e72:	33cc      	adds	r3, #204	; 0xcc
 8007e74:	4a68      	ldr	r2, [pc, #416]	; (8008018 <createProblem+0x7170>)
 8007e76:	6810      	ldr	r0, [r2, #0]
 8007e78:	6018      	str	r0, [r3, #0]
			break;
 8007e7a:	f012 bd5b 	b.w	801a934 <createProblem+0x19a8c>
		case 28 :
			strcpy(p->name,"E-16");
 8007e7e:	687b      	ldr	r3, [r7, #4]
 8007e80:	337c      	adds	r3, #124	; 0x7c
 8007e82:	4a6f      	ldr	r2, [pc, #444]	; (8008040 <createProblem+0x7198>)
 8007e84:	6810      	ldr	r0, [r2, #0]
 8007e86:	6018      	str	r0, [r3, #0]
 8007e88:	7912      	ldrb	r2, [r2, #4]
 8007e8a:	711a      	strb	r2, [r3, #4]
			p->moveSize = 6;
 8007e8c:	687b      	ldr	r3, [r7, #4]
 8007e8e:	2206      	movs	r2, #6
 8007e90:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,E,C,E,A");
 8007e92:	687b      	ldr	r3, [r7, #4]
 8007e94:	3340      	adds	r3, #64	; 0x40
 8007e96:	4a6b      	ldr	r2, [pc, #428]	; (8008044 <createProblem+0x719c>)
 8007e98:	461c      	mov	r4, r3
 8007e9a:	4613      	mov	r3, r2
 8007e9c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007e9e:	6020      	str	r0, [r4, #0]
 8007ea0:	6061      	str	r1, [r4, #4]
 8007ea2:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,8,9,13,16,18");
 8007ea4:	687b      	ldr	r3, [r7, #4]
 8007ea6:	3304      	adds	r3, #4
 8007ea8:	4a67      	ldr	r2, [pc, #412]	; (8008048 <createProblem+0x71a0>)
 8007eaa:	461c      	mov	r4, r3
 8007eac:	4613      	mov	r3, r2
 8007eae:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007eb0:	6020      	str	r0, [r4, #0]
 8007eb2:	6061      	str	r1, [r4, #4]
 8007eb4:	60a2      	str	r2, [r4, #8]
 8007eb6:	881a      	ldrh	r2, [r3, #0]
 8007eb8:	789b      	ldrb	r3, [r3, #2]
 8007eba:	81a2      	strh	r2, [r4, #12]
 8007ebc:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8007ebe:	687b      	ldr	r3, [r7, #4]
 8007ec0:	33d8      	adds	r3, #216	; 0xd8
 8007ec2:	4a62      	ldr	r2, [pc, #392]	; (800804c <createProblem+0x71a4>)
 8007ec4:	461c      	mov	r4, r3
 8007ec6:	4613      	mov	r3, r2
 8007ec8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007eca:	6020      	str	r0, [r4, #0]
 8007ecc:	6061      	str	r1, [r4, #4]
 8007ece:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 8007ed0:	687b      	ldr	r3, [r7, #4]
 8007ed2:	33cc      	adds	r3, #204	; 0xcc
 8007ed4:	4a50      	ldr	r2, [pc, #320]	; (8008018 <createProblem+0x7170>)
 8007ed6:	6810      	ldr	r0, [r2, #0]
 8007ed8:	6018      	str	r0, [r3, #0]
			break;
 8007eda:	f012 bd2b 	b.w	801a934 <createProblem+0x19a8c>
		case 280 :
			strcpy(p->name,"EXIT");
 8007ede:	687b      	ldr	r3, [r7, #4]
 8007ee0:	337c      	adds	r3, #124	; 0x7c
 8007ee2:	4a5b      	ldr	r2, [pc, #364]	; (8008050 <createProblem+0x71a8>)
 8007ee4:	6810      	ldr	r0, [r2, #0]
 8007ee6:	6018      	str	r0, [r3, #0]
 8007ee8:	7912      	ldrb	r2, [r2, #4]
 8007eea:	711a      	strb	r2, [r3, #4]
			p->moveSize = 5;
 8007eec:	687b      	ldr	r3, [r7, #4]
 8007eee:	2205      	movs	r2, #5
 8007ef0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,E,A,A");
 8007ef2:	687b      	ldr	r3, [r7, #4]
 8007ef4:	3340      	adds	r3, #64	; 0x40
 8007ef6:	4957      	ldr	r1, [pc, #348]	; (8008054 <createProblem+0x71ac>)
 8007ef8:	461a      	mov	r2, r3
 8007efa:	460b      	mov	r3, r1
 8007efc:	cb03      	ldmia	r3!, {r0, r1}
 8007efe:	6010      	str	r0, [r2, #0]
 8007f00:	6051      	str	r1, [r2, #4]
 8007f02:	881b      	ldrh	r3, [r3, #0]
 8007f04:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,8,12,14,18");
 8007f06:	687b      	ldr	r3, [r7, #4]
 8007f08:	3304      	adds	r3, #4
 8007f0a:	4a53      	ldr	r2, [pc, #332]	; (8008058 <createProblem+0x71b0>)
 8007f0c:	461c      	mov	r4, r3
 8007f0e:	4613      	mov	r3, r2
 8007f10:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007f12:	6020      	str	r0, [r4, #0]
 8007f14:	6061      	str	r1, [r4, #4]
 8007f16:	60a2      	str	r2, [r4, #8]
 8007f18:	781b      	ldrb	r3, [r3, #0]
 8007f1a:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8007f1c:	687b      	ldr	r3, [r7, #4]
 8007f1e:	33d8      	adds	r3, #216	; 0xd8
 8007f20:	494e      	ldr	r1, [pc, #312]	; (800805c <createProblem+0x71b4>)
 8007f22:	461a      	mov	r2, r3
 8007f24:	460b      	mov	r3, r1
 8007f26:	cb03      	ldmia	r3!, {r0, r1}
 8007f28:	6010      	str	r0, [r2, #0]
 8007f2a:	6051      	str	r1, [r2, #4]
 8007f2c:	881b      	ldrh	r3, [r3, #0]
 8007f2e:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 8007f30:	687b      	ldr	r3, [r7, #4]
 8007f32:	33cc      	adds	r3, #204	; 0xcc
 8007f34:	4a3d      	ldr	r2, [pc, #244]	; (800802c <createProblem+0x7184>)
 8007f36:	6810      	ldr	r0, [r2, #0]
 8007f38:	6018      	str	r0, [r3, #0]
			break;
 8007f3a:	f012 bcfb 	b.w	801a934 <createProblem+0x19a8c>
		case 281 :
			strcpy(p->name,"PLAYING TINDER");
 8007f3e:	687b      	ldr	r3, [r7, #4]
 8007f40:	337c      	adds	r3, #124	; 0x7c
 8007f42:	4a47      	ldr	r2, [pc, #284]	; (8008060 <createProblem+0x71b8>)
 8007f44:	461c      	mov	r4, r3
 8007f46:	4613      	mov	r3, r2
 8007f48:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007f4a:	6020      	str	r0, [r4, #0]
 8007f4c:	6061      	str	r1, [r4, #4]
 8007f4e:	60a2      	str	r2, [r4, #8]
 8007f50:	881a      	ldrh	r2, [r3, #0]
 8007f52:	789b      	ldrb	r3, [r3, #2]
 8007f54:	81a2      	strh	r2, [r4, #12]
 8007f56:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 5;
 8007f58:	687b      	ldr	r3, [r7, #4]
 8007f5a:	2205      	movs	r2, #5
 8007f5c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,B,B,A");
 8007f5e:	687b      	ldr	r3, [r7, #4]
 8007f60:	3340      	adds	r3, #64	; 0x40
 8007f62:	4940      	ldr	r1, [pc, #256]	; (8008064 <createProblem+0x71bc>)
 8007f64:	461a      	mov	r2, r3
 8007f66:	460b      	mov	r3, r1
 8007f68:	cb03      	ldmia	r3!, {r0, r1}
 8007f6a:	6010      	str	r0, [r2, #0]
 8007f6c:	6051      	str	r1, [r2, #4]
 8007f6e:	881b      	ldrh	r3, [r3, #0]
 8007f70:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,9,10,15,18");
 8007f72:	687b      	ldr	r3, [r7, #4]
 8007f74:	3304      	adds	r3, #4
 8007f76:	4a3c      	ldr	r2, [pc, #240]	; (8008068 <createProblem+0x71c0>)
 8007f78:	461c      	mov	r4, r3
 8007f7a:	4613      	mov	r3, r2
 8007f7c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8007f7e:	6020      	str	r0, [r4, #0]
 8007f80:	6061      	str	r1, [r4, #4]
 8007f82:	60a2      	str	r2, [r4, #8]
 8007f84:	781b      	ldrb	r3, [r3, #0]
 8007f86:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8007f88:	687b      	ldr	r3, [r7, #4]
 8007f8a:	33d8      	adds	r3, #216	; 0xd8
 8007f8c:	4933      	ldr	r1, [pc, #204]	; (800805c <createProblem+0x71b4>)
 8007f8e:	461a      	mov	r2, r3
 8007f90:	460b      	mov	r3, r1
 8007f92:	cb03      	ldmia	r3!, {r0, r1}
 8007f94:	6010      	str	r0, [r2, #0]
 8007f96:	6051      	str	r1, [r2, #4]
 8007f98:	881b      	ldrh	r3, [r3, #0]
 8007f9a:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 8007f9c:	687b      	ldr	r3, [r7, #4]
 8007f9e:	33cc      	adds	r3, #204	; 0xcc
 8007fa0:	4a32      	ldr	r2, [pc, #200]	; (800806c <createProblem+0x71c4>)
 8007fa2:	6810      	ldr	r0, [r2, #0]
 8007fa4:	6018      	str	r0, [r3, #0]
			break;
 8007fa6:	f012 bcc5 	b.w	801a934 <createProblem+0x19a8c>
		case 282 :
			strcpy(p->name,"YE BOI");
 8007faa:	687b      	ldr	r3, [r7, #4]
 8007fac:	337c      	adds	r3, #124	; 0x7c
 8007fae:	4a30      	ldr	r2, [pc, #192]	; (8008070 <createProblem+0x71c8>)
 8007fb0:	6810      	ldr	r0, [r2, #0]
 8007fb2:	6018      	str	r0, [r3, #0]
 8007fb4:	8891      	ldrh	r1, [r2, #4]
 8007fb6:	7992      	ldrb	r2, [r2, #6]
 8007fb8:	8099      	strh	r1, [r3, #4]
 8007fba:	719a      	strb	r2, [r3, #6]
			p->moveSize = 4;
 8007fbc:	687b      	ldr	r3, [r7, #4]
 8007fbe:	2204      	movs	r2, #4
 8007fc0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,D");
 8007fc2:	687b      	ldr	r3, [r7, #4]
 8007fc4:	3340      	adds	r3, #64	; 0x40
 8007fc6:	492b      	ldr	r1, [pc, #172]	; (8008074 <createProblem+0x71cc>)
 8007fc8:	461a      	mov	r2, r3
 8007fca:	460b      	mov	r3, r1
 8007fcc:	cb03      	ldmia	r3!, {r0, r1}
 8007fce:	6010      	str	r0, [r2, #0]
 8007fd0:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"4,10,13,18");
 8007fd2:	687b      	ldr	r3, [r7, #4]
 8007fd4:	3304      	adds	r3, #4
 8007fd6:	4928      	ldr	r1, [pc, #160]	; (8008078 <createProblem+0x71d0>)
 8007fd8:	461a      	mov	r2, r3
 8007fda:	460b      	mov	r3, r1
 8007fdc:	cb03      	ldmia	r3!, {r0, r1}
 8007fde:	6010      	str	r0, [r2, #0]
 8007fe0:	6051      	str	r1, [r2, #4]
 8007fe2:	8819      	ldrh	r1, [r3, #0]
 8007fe4:	789b      	ldrb	r3, [r3, #2]
 8007fe6:	8111      	strh	r1, [r2, #8]
 8007fe8:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 8007fea:	687b      	ldr	r3, [r7, #4]
 8007fec:	33d8      	adds	r3, #216	; 0xd8
 8007fee:	4923      	ldr	r1, [pc, #140]	; (800807c <createProblem+0x71d4>)
 8007ff0:	461a      	mov	r2, r3
 8007ff2:	460b      	mov	r3, r1
 8007ff4:	cb03      	ldmia	r3!, {r0, r1}
 8007ff6:	6010      	str	r0, [r2, #0]
 8007ff8:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "6C+");
 8007ffa:	687b      	ldr	r3, [r7, #4]
 8007ffc:	33cc      	adds	r3, #204	; 0xcc
 8007ffe:	4a20      	ldr	r2, [pc, #128]	; (8008080 <createProblem+0x71d8>)
 8008000:	6810      	ldr	r0, [r2, #0]
 8008002:	6018      	str	r0, [r3, #0]
			break;
 8008004:	f012 bc96 	b.w	801a934 <createProblem+0x19a8c>
 8008008:	08022e58 	.word	0x08022e58
 800800c:	08022e64 	.word	0x08022e64
 8008010:	08022e80 	.word	0x08022e80
 8008014:	08022e3c 	.word	0x08022e3c
 8008018:	08020830 	.word	0x08020830
 800801c:	08022ea4 	.word	0x08022ea4
 8008020:	08022eac 	.word	0x08022eac
 8008024:	08022ebc 	.word	0x08022ebc
 8008028:	08020a14 	.word	0x08020a14
 800802c:	080209a4 	.word	0x080209a4
 8008030:	08022ed0 	.word	0x08022ed0
 8008034:	08022ee4 	.word	0x08022ee4
 8008038:	08022ef8 	.word	0x08022ef8
 800803c:	08022f10 	.word	0x08022f10
 8008040:	08022f24 	.word	0x08022f24
 8008044:	08022f2c 	.word	0x08022f2c
 8008048:	08022f38 	.word	0x08022f38
 800804c:	0802091c 	.word	0x0802091c
 8008050:	08022f48 	.word	0x08022f48
 8008054:	08022f50 	.word	0x08022f50
 8008058:	08022f5c 	.word	0x08022f5c
 800805c:	080208a0 	.word	0x080208a0
 8008060:	08022f6c 	.word	0x08022f6c
 8008064:	08022f7c 	.word	0x08022f7c
 8008068:	08022f88 	.word	0x08022f88
 800806c:	08020dc8 	.word	0x08020dc8
 8008070:	08022f98 	.word	0x08022f98
 8008074:	08022fa0 	.word	0x08022fa0
 8008078:	08022fa8 	.word	0x08022fa8
 800807c:	080215a8 	.word	0x080215a8
 8008080:	08020928 	.word	0x08020928
		case 283 :
			strcpy(p->name,"S1");
 8008084:	687b      	ldr	r3, [r7, #4]
 8008086:	337c      	adds	r3, #124	; 0x7c
 8008088:	4ac2      	ldr	r2, [pc, #776]	; (8008394 <createProblem+0x74ec>)
 800808a:	8811      	ldrh	r1, [r2, #0]
 800808c:	7892      	ldrb	r2, [r2, #2]
 800808e:	8019      	strh	r1, [r3, #0]
 8008090:	709a      	strb	r2, [r3, #2]
			p->moveSize = 7;
 8008092:	687b      	ldr	r3, [r7, #4]
 8008094:	2207      	movs	r2, #7
 8008096:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,D,D,B,A");
 8008098:	687b      	ldr	r3, [r7, #4]
 800809a:	3340      	adds	r3, #64	; 0x40
 800809c:	4abe      	ldr	r2, [pc, #760]	; (8008398 <createProblem+0x74f0>)
 800809e:	461c      	mov	r4, r3
 80080a0:	4613      	mov	r3, r2
 80080a2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80080a4:	6020      	str	r0, [r4, #0]
 80080a6:	6061      	str	r1, [r4, #4]
 80080a8:	60a2      	str	r2, [r4, #8]
 80080aa:	881b      	ldrh	r3, [r3, #0]
 80080ac:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,8,11,15,6,18");
 80080ae:	687b      	ldr	r3, [r7, #4]
 80080b0:	3304      	adds	r3, #4
 80080b2:	4aba      	ldr	r2, [pc, #744]	; (800839c <createProblem+0x74f4>)
 80080b4:	461d      	mov	r5, r3
 80080b6:	4614      	mov	r4, r2
 80080b8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80080ba:	6028      	str	r0, [r5, #0]
 80080bc:	6069      	str	r1, [r5, #4]
 80080be:	60aa      	str	r2, [r5, #8]
 80080c0:	60eb      	str	r3, [r5, #12]
 80080c2:	7823      	ldrb	r3, [r4, #0]
 80080c4:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 80080c6:	687b      	ldr	r3, [r7, #4]
 80080c8:	33d8      	adds	r3, #216	; 0xd8
 80080ca:	4ab5      	ldr	r2, [pc, #724]	; (80083a0 <createProblem+0x74f8>)
 80080cc:	461c      	mov	r4, r3
 80080ce:	4613      	mov	r3, r2
 80080d0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80080d2:	6020      	str	r0, [r4, #0]
 80080d4:	6061      	str	r1, [r4, #4]
 80080d6:	60a2      	str	r2, [r4, #8]
 80080d8:	881b      	ldrh	r3, [r3, #0]
 80080da:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B");
 80080dc:	687b      	ldr	r3, [r7, #4]
 80080de:	33cc      	adds	r3, #204	; 0xcc
 80080e0:	4ab0      	ldr	r2, [pc, #704]	; (80083a4 <createProblem+0x74fc>)
 80080e2:	8811      	ldrh	r1, [r2, #0]
 80080e4:	7892      	ldrb	r2, [r2, #2]
 80080e6:	8019      	strh	r1, [r3, #0]
 80080e8:	709a      	strb	r2, [r3, #2]
			break;
 80080ea:	f012 bc23 	b.w	801a934 <createProblem+0x19a8c>
		case 284 :
			strcpy(p->name,"FORSØK 25");
 80080ee:	687b      	ldr	r3, [r7, #4]
 80080f0:	337c      	adds	r3, #124	; 0x7c
 80080f2:	49ad      	ldr	r1, [pc, #692]	; (80083a8 <createProblem+0x7500>)
 80080f4:	461a      	mov	r2, r3
 80080f6:	460b      	mov	r3, r1
 80080f8:	cb03      	ldmia	r3!, {r0, r1}
 80080fa:	6010      	str	r0, [r2, #0]
 80080fc:	6051      	str	r1, [r2, #4]
 80080fe:	8819      	ldrh	r1, [r3, #0]
 8008100:	789b      	ldrb	r3, [r3, #2]
 8008102:	8111      	strh	r1, [r2, #8]
 8008104:	7293      	strb	r3, [r2, #10]
			p->moveSize = 8;
 8008106:	687b      	ldr	r3, [r7, #4]
 8008108:	2208      	movs	r2, #8
 800810a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"A,C,D,E,E,E,H,J");
 800810c:	687b      	ldr	r3, [r7, #4]
 800810e:	3340      	adds	r3, #64	; 0x40
 8008110:	4aa6      	ldr	r2, [pc, #664]	; (80083ac <createProblem+0x7504>)
 8008112:	461c      	mov	r4, r3
 8008114:	4615      	mov	r5, r2
 8008116:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008118:	6020      	str	r0, [r4, #0]
 800811a:	6061      	str	r1, [r4, #4]
 800811c:	60a2      	str	r2, [r4, #8]
 800811e:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"14,5,18,6,8,12,8,5");
 8008120:	687b      	ldr	r3, [r7, #4]
 8008122:	3304      	adds	r3, #4
 8008124:	4aa2      	ldr	r2, [pc, #648]	; (80083b0 <createProblem+0x7508>)
 8008126:	461d      	mov	r5, r3
 8008128:	4614      	mov	r4, r2
 800812a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800812c:	6028      	str	r0, [r5, #0]
 800812e:	6069      	str	r1, [r5, #4]
 8008130:	60aa      	str	r2, [r5, #8]
 8008132:	60eb      	str	r3, [r5, #12]
 8008134:	8823      	ldrh	r3, [r4, #0]
 8008136:	78a2      	ldrb	r2, [r4, #2]
 8008138:	822b      	strh	r3, [r5, #16]
 800813a:	4613      	mov	r3, r2
 800813c:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "d,s,e,s,d,d,d,d");
 800813e:	687b      	ldr	r3, [r7, #4]
 8008140:	33d8      	adds	r3, #216	; 0xd8
 8008142:	4a9c      	ldr	r2, [pc, #624]	; (80083b4 <createProblem+0x750c>)
 8008144:	461c      	mov	r4, r3
 8008146:	4615      	mov	r5, r2
 8008148:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800814a:	6020      	str	r0, [r4, #0]
 800814c:	6061      	str	r1, [r4, #4]
 800814e:	60a2      	str	r2, [r4, #8]
 8008150:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8008152:	687b      	ldr	r3, [r7, #4]
 8008154:	33cc      	adds	r3, #204	; 0xcc
 8008156:	4a98      	ldr	r2, [pc, #608]	; (80083b8 <createProblem+0x7510>)
 8008158:	6810      	ldr	r0, [r2, #0]
 800815a:	6018      	str	r0, [r3, #0]
			break;
 800815c:	f012 bbea 	b.w	801a934 <createProblem+0x19a8c>
		case 285 :
			strcpy(p->name,"PONTUSBADET");
 8008160:	687b      	ldr	r3, [r7, #4]
 8008162:	337c      	adds	r3, #124	; 0x7c
 8008164:	4a95      	ldr	r2, [pc, #596]	; (80083bc <createProblem+0x7514>)
 8008166:	461c      	mov	r4, r3
 8008168:	4613      	mov	r3, r2
 800816a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800816c:	6020      	str	r0, [r4, #0]
 800816e:	6061      	str	r1, [r4, #4]
 8008170:	60a2      	str	r2, [r4, #8]
			p->moveSize = 7;
 8008172:	687b      	ldr	r3, [r7, #4]
 8008174:	2207      	movs	r2, #7
 8008176:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,I,H,J,H,I");
 8008178:	687b      	ldr	r3, [r7, #4]
 800817a:	3340      	adds	r3, #64	; 0x40
 800817c:	4a90      	ldr	r2, [pc, #576]	; (80083c0 <createProblem+0x7518>)
 800817e:	461c      	mov	r4, r3
 8008180:	4613      	mov	r3, r2
 8008182:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008184:	6020      	str	r0, [r4, #0]
 8008186:	6061      	str	r1, [r4, #4]
 8008188:	60a2      	str	r2, [r4, #8]
 800818a:	881b      	ldrh	r3, [r3, #0]
 800818c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,9,12,12,16,18");
 800818e:	687b      	ldr	r3, [r7, #4]
 8008190:	3304      	adds	r3, #4
 8008192:	4a8c      	ldr	r2, [pc, #560]	; (80083c4 <createProblem+0x751c>)
 8008194:	461d      	mov	r5, r3
 8008196:	4614      	mov	r4, r2
 8008198:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800819a:	6028      	str	r0, [r5, #0]
 800819c:	6069      	str	r1, [r5, #4]
 800819e:	60aa      	str	r2, [r5, #8]
 80081a0:	60eb      	str	r3, [r5, #12]
 80081a2:	8823      	ldrh	r3, [r4, #0]
 80081a4:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80081a6:	687b      	ldr	r3, [r7, #4]
 80081a8:	33d8      	adds	r3, #216	; 0xd8
 80081aa:	4a87      	ldr	r2, [pc, #540]	; (80083c8 <createProblem+0x7520>)
 80081ac:	461c      	mov	r4, r3
 80081ae:	4613      	mov	r3, r2
 80081b0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80081b2:	6020      	str	r0, [r4, #0]
 80081b4:	6061      	str	r1, [r4, #4]
 80081b6:	60a2      	str	r2, [r4, #8]
 80081b8:	881b      	ldrh	r3, [r3, #0]
 80081ba:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 80081bc:	687b      	ldr	r3, [r7, #4]
 80081be:	33cc      	adds	r3, #204	; 0xcc
 80081c0:	4a82      	ldr	r2, [pc, #520]	; (80083cc <createProblem+0x7524>)
 80081c2:	8811      	ldrh	r1, [r2, #0]
 80081c4:	7892      	ldrb	r2, [r2, #2]
 80081c6:	8019      	strh	r1, [r3, #0]
 80081c8:	709a      	strb	r2, [r3, #2]
			break;
 80081ca:	f012 bbb3 	b.w	801a934 <createProblem+0x19a8c>
		case 286 :
			strcpy(p->name,"ROSA PARKS");
 80081ce:	687b      	ldr	r3, [r7, #4]
 80081d0:	337c      	adds	r3, #124	; 0x7c
 80081d2:	497f      	ldr	r1, [pc, #508]	; (80083d0 <createProblem+0x7528>)
 80081d4:	461a      	mov	r2, r3
 80081d6:	460b      	mov	r3, r1
 80081d8:	cb03      	ldmia	r3!, {r0, r1}
 80081da:	6010      	str	r0, [r2, #0]
 80081dc:	6051      	str	r1, [r2, #4]
 80081de:	8819      	ldrh	r1, [r3, #0]
 80081e0:	789b      	ldrb	r3, [r3, #2]
 80081e2:	8111      	strh	r1, [r2, #8]
 80081e4:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 80081e6:	687b      	ldr	r3, [r7, #4]
 80081e8:	2207      	movs	r2, #7
 80081ea:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,D,C,H,G,A");
 80081ec:	687b      	ldr	r3, [r7, #4]
 80081ee:	3340      	adds	r3, #64	; 0x40
 80081f0:	4a78      	ldr	r2, [pc, #480]	; (80083d4 <createProblem+0x752c>)
 80081f2:	461c      	mov	r4, r3
 80081f4:	4613      	mov	r3, r2
 80081f6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80081f8:	6020      	str	r0, [r4, #0]
 80081fa:	6061      	str	r1, [r4, #4]
 80081fc:	60a2      	str	r2, [r4, #8]
 80081fe:	881b      	ldrh	r3, [r3, #0]
 8008200:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,15,13,10,9,18");
 8008202:	687b      	ldr	r3, [r7, #4]
 8008204:	3304      	adds	r3, #4
 8008206:	4a74      	ldr	r2, [pc, #464]	; (80083d8 <createProblem+0x7530>)
 8008208:	461d      	mov	r5, r3
 800820a:	4614      	mov	r4, r2
 800820c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800820e:	6028      	str	r0, [r5, #0]
 8008210:	6069      	str	r1, [r5, #4]
 8008212:	60aa      	str	r2, [r5, #8]
 8008214:	60eb      	str	r3, [r5, #12]
 8008216:	8823      	ldrh	r3, [r4, #0]
 8008218:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800821a:	687b      	ldr	r3, [r7, #4]
 800821c:	33d8      	adds	r3, #216	; 0xd8
 800821e:	4a6a      	ldr	r2, [pc, #424]	; (80083c8 <createProblem+0x7520>)
 8008220:	461c      	mov	r4, r3
 8008222:	4613      	mov	r3, r2
 8008224:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008226:	6020      	str	r0, [r4, #0]
 8008228:	6061      	str	r1, [r4, #4]
 800822a:	60a2      	str	r2, [r4, #8]
 800822c:	881b      	ldrh	r3, [r3, #0]
 800822e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8008230:	687b      	ldr	r3, [r7, #4]
 8008232:	33cc      	adds	r3, #204	; 0xcc
 8008234:	4a69      	ldr	r2, [pc, #420]	; (80083dc <createProblem+0x7534>)
 8008236:	8811      	ldrh	r1, [r2, #0]
 8008238:	7892      	ldrb	r2, [r2, #2]
 800823a:	8019      	strh	r1, [r3, #0]
 800823c:	709a      	strb	r2, [r3, #2]
			break;
 800823e:	f012 bb79 	b.w	801a934 <createProblem+0x19a8c>
		case 287 :
			strcpy(p->name,"PONTUSBADET 2");
 8008242:	687b      	ldr	r3, [r7, #4]
 8008244:	337c      	adds	r3, #124	; 0x7c
 8008246:	4a66      	ldr	r2, [pc, #408]	; (80083e0 <createProblem+0x7538>)
 8008248:	461c      	mov	r4, r3
 800824a:	4613      	mov	r3, r2
 800824c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800824e:	6020      	str	r0, [r4, #0]
 8008250:	6061      	str	r1, [r4, #4]
 8008252:	60a2      	str	r2, [r4, #8]
 8008254:	881b      	ldrh	r3, [r3, #0]
 8008256:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 8;
 8008258:	687b      	ldr	r3, [r7, #4]
 800825a:	2208      	movs	r2, #8
 800825c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,E,C,I,G,G,D");
 800825e:	687b      	ldr	r3, [r7, #4]
 8008260:	3340      	adds	r3, #64	; 0x40
 8008262:	4a60      	ldr	r2, [pc, #384]	; (80083e4 <createProblem+0x753c>)
 8008264:	461c      	mov	r4, r3
 8008266:	4615      	mov	r5, r2
 8008268:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800826a:	6020      	str	r0, [r4, #0]
 800826c:	6061      	str	r1, [r4, #4]
 800826e:	60a2      	str	r2, [r4, #8]
 8008270:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,12,13,14,15,17,18");
 8008272:	687b      	ldr	r3, [r7, #4]
 8008274:	3304      	adds	r3, #4
 8008276:	4a5c      	ldr	r2, [pc, #368]	; (80083e8 <createProblem+0x7540>)
 8008278:	461d      	mov	r5, r3
 800827a:	4614      	mov	r4, r2
 800827c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800827e:	6028      	str	r0, [r5, #0]
 8008280:	6069      	str	r1, [r5, #4]
 8008282:	60aa      	str	r2, [r5, #8]
 8008284:	60eb      	str	r3, [r5, #12]
 8008286:	6820      	ldr	r0, [r4, #0]
 8008288:	6128      	str	r0, [r5, #16]
 800828a:	88a3      	ldrh	r3, [r4, #4]
 800828c:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 800828e:	687b      	ldr	r3, [r7, #4]
 8008290:	33d8      	adds	r3, #216	; 0xd8
 8008292:	4a56      	ldr	r2, [pc, #344]	; (80083ec <createProblem+0x7544>)
 8008294:	461c      	mov	r4, r3
 8008296:	4615      	mov	r5, r2
 8008298:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800829a:	6020      	str	r0, [r4, #0]
 800829c:	6061      	str	r1, [r4, #4]
 800829e:	60a2      	str	r2, [r4, #8]
 80082a0:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 80082a2:	687b      	ldr	r3, [r7, #4]
 80082a4:	33cc      	adds	r3, #204	; 0xcc
 80082a6:	4a4d      	ldr	r2, [pc, #308]	; (80083dc <createProblem+0x7534>)
 80082a8:	8811      	ldrh	r1, [r2, #0]
 80082aa:	7892      	ldrb	r2, [r2, #2]
 80082ac:	8019      	strh	r1, [r3, #0]
 80082ae:	709a      	strb	r2, [r3, #2]
			break;
 80082b0:	f012 bb40 	b.w	801a934 <createProblem+0x19a8c>
		case 288 :
			strcpy(p->name,"L'UOMO BISATTA");
 80082b4:	687b      	ldr	r3, [r7, #4]
 80082b6:	337c      	adds	r3, #124	; 0x7c
 80082b8:	4a4d      	ldr	r2, [pc, #308]	; (80083f0 <createProblem+0x7548>)
 80082ba:	461c      	mov	r4, r3
 80082bc:	4613      	mov	r3, r2
 80082be:	cb07      	ldmia	r3!, {r0, r1, r2}
 80082c0:	6020      	str	r0, [r4, #0]
 80082c2:	6061      	str	r1, [r4, #4]
 80082c4:	60a2      	str	r2, [r4, #8]
 80082c6:	881a      	ldrh	r2, [r3, #0]
 80082c8:	789b      	ldrb	r3, [r3, #2]
 80082ca:	81a2      	strh	r2, [r4, #12]
 80082cc:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 7;
 80082ce:	687b      	ldr	r3, [r7, #4]
 80082d0:	2207      	movs	r2, #7
 80082d2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,G,H,C,H,D");
 80082d4:	687b      	ldr	r3, [r7, #4]
 80082d6:	3340      	adds	r3, #64	; 0x40
 80082d8:	4a46      	ldr	r2, [pc, #280]	; (80083f4 <createProblem+0x754c>)
 80082da:	461c      	mov	r4, r3
 80082dc:	4613      	mov	r3, r2
 80082de:	cb07      	ldmia	r3!, {r0, r1, r2}
 80082e0:	6020      	str	r0, [r4, #0]
 80082e2:	6061      	str	r1, [r4, #4]
 80082e4:	60a2      	str	r2, [r4, #8]
 80082e6:	881b      	ldrh	r3, [r3, #0]
 80082e8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,12,8,16,18");
 80082ea:	687b      	ldr	r3, [r7, #4]
 80082ec:	3304      	adds	r3, #4
 80082ee:	4a42      	ldr	r2, [pc, #264]	; (80083f8 <createProblem+0x7550>)
 80082f0:	461d      	mov	r5, r3
 80082f2:	4614      	mov	r4, r2
 80082f4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80082f6:	6028      	str	r0, [r5, #0]
 80082f8:	6069      	str	r1, [r5, #4]
 80082fa:	60aa      	str	r2, [r5, #8]
 80082fc:	60eb      	str	r3, [r5, #12]
 80082fe:	7823      	ldrb	r3, [r4, #0]
 8008300:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8008302:	687b      	ldr	r3, [r7, #4]
 8008304:	33d8      	adds	r3, #216	; 0xd8
 8008306:	4a26      	ldr	r2, [pc, #152]	; (80083a0 <createProblem+0x74f8>)
 8008308:	461c      	mov	r4, r3
 800830a:	4613      	mov	r3, r2
 800830c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800830e:	6020      	str	r0, [r4, #0]
 8008310:	6061      	str	r1, [r4, #4]
 8008312:	60a2      	str	r2, [r4, #8]
 8008314:	881b      	ldrh	r3, [r3, #0]
 8008316:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B");
 8008318:	687b      	ldr	r3, [r7, #4]
 800831a:	33cc      	adds	r3, #204	; 0xcc
 800831c:	4a21      	ldr	r2, [pc, #132]	; (80083a4 <createProblem+0x74fc>)
 800831e:	8811      	ldrh	r1, [r2, #0]
 8008320:	7892      	ldrb	r2, [r2, #2]
 8008322:	8019      	strh	r1, [r3, #0]
 8008324:	709a      	strb	r2, [r3, #2]
			break;
 8008326:	f012 bb05 	b.w	801a934 <createProblem+0x19a8c>
		case 289 :
			strcpy(p->name,"WARM UP A6");
 800832a:	687b      	ldr	r3, [r7, #4]
 800832c:	337c      	adds	r3, #124	; 0x7c
 800832e:	4933      	ldr	r1, [pc, #204]	; (80083fc <createProblem+0x7554>)
 8008330:	461a      	mov	r2, r3
 8008332:	460b      	mov	r3, r1
 8008334:	cb03      	ldmia	r3!, {r0, r1}
 8008336:	6010      	str	r0, [r2, #0]
 8008338:	6051      	str	r1, [r2, #4]
 800833a:	8819      	ldrh	r1, [r3, #0]
 800833c:	789b      	ldrb	r3, [r3, #2]
 800833e:	8111      	strh	r1, [r2, #8]
 8008340:	7293      	strb	r3, [r2, #10]
			p->moveSize = 5;
 8008342:	687b      	ldr	r3, [r7, #4]
 8008344:	2205      	movs	r2, #5
 8008346:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,I,I,I");
 8008348:	687b      	ldr	r3, [r7, #4]
 800834a:	3340      	adds	r3, #64	; 0x40
 800834c:	492c      	ldr	r1, [pc, #176]	; (8008400 <createProblem+0x7558>)
 800834e:	461a      	mov	r2, r3
 8008350:	460b      	mov	r3, r1
 8008352:	cb03      	ldmia	r3!, {r0, r1}
 8008354:	6010      	str	r0, [r2, #0]
 8008356:	6051      	str	r1, [r2, #4]
 8008358:	881b      	ldrh	r3, [r3, #0]
 800835a:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,7,10,14,18");
 800835c:	687b      	ldr	r3, [r7, #4]
 800835e:	3304      	adds	r3, #4
 8008360:	4a28      	ldr	r2, [pc, #160]	; (8008404 <createProblem+0x755c>)
 8008362:	461c      	mov	r4, r3
 8008364:	4613      	mov	r3, r2
 8008366:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008368:	6020      	str	r0, [r4, #0]
 800836a:	6061      	str	r1, [r4, #4]
 800836c:	60a2      	str	r2, [r4, #8]
 800836e:	781b      	ldrb	r3, [r3, #0]
 8008370:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8008372:	687b      	ldr	r3, [r7, #4]
 8008374:	33d8      	adds	r3, #216	; 0xd8
 8008376:	4924      	ldr	r1, [pc, #144]	; (8008408 <createProblem+0x7560>)
 8008378:	461a      	mov	r2, r3
 800837a:	460b      	mov	r3, r1
 800837c:	cb03      	ldmia	r3!, {r0, r1}
 800837e:	6010      	str	r0, [r2, #0]
 8008380:	6051      	str	r1, [r2, #4]
 8008382:	881b      	ldrh	r3, [r3, #0]
 8008384:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6B+");
 8008386:	687b      	ldr	r3, [r7, #4]
 8008388:	33cc      	adds	r3, #204	; 0xcc
 800838a:	4a0b      	ldr	r2, [pc, #44]	; (80083b8 <createProblem+0x7510>)
 800838c:	6810      	ldr	r0, [r2, #0]
 800838e:	6018      	str	r0, [r3, #0]
			break;
 8008390:	f012 bad0 	b.w	801a934 <createProblem+0x19a8c>
 8008394:	08022fb4 	.word	0x08022fb4
 8008398:	08022fb8 	.word	0x08022fb8
 800839c:	08022fc8 	.word	0x08022fc8
 80083a0:	08020820 	.word	0x08020820
 80083a4:	080208ac 	.word	0x080208ac
 80083a8:	08022fdc 	.word	0x08022fdc
 80083ac:	08022fe8 	.word	0x08022fe8
 80083b0:	08022ff8 	.word	0x08022ff8
 80083b4:	0802300c 	.word	0x0802300c
 80083b8:	08020830 	.word	0x08020830
 80083bc:	0802301c 	.word	0x0802301c
 80083c0:	08023028 	.word	0x08023028
 80083c4:	08023038 	.word	0x08023038
 80083c8:	08020a14 	.word	0x08020a14
 80083cc:	08020874 	.word	0x08020874
 80083d0:	0802304c 	.word	0x0802304c
 80083d4:	08023058 	.word	0x08023058
 80083d8:	08023068 	.word	0x08023068
 80083dc:	080208f0 	.word	0x080208f0
 80083e0:	0802307c 	.word	0x0802307c
 80083e4:	0802308c 	.word	0x0802308c
 80083e8:	0802309c 	.word	0x0802309c
 80083ec:	080209d8 	.word	0x080209d8
 80083f0:	080230b4 	.word	0x080230b4
 80083f4:	080230c4 	.word	0x080230c4
 80083f8:	080230d4 	.word	0x080230d4
 80083fc:	080230e8 	.word	0x080230e8
 8008400:	080230f4 	.word	0x080230f4
 8008404:	08023100 	.word	0x08023100
 8008408:	080208a0 	.word	0x080208a0
		case 29 :
			strcpy(p->name,"ACG5");
 800840c:	687b      	ldr	r3, [r7, #4]
 800840e:	337c      	adds	r3, #124	; 0x7c
 8008410:	4ab4      	ldr	r2, [pc, #720]	; (80086e4 <createProblem+0x783c>)
 8008412:	6810      	ldr	r0, [r2, #0]
 8008414:	6018      	str	r0, [r3, #0]
 8008416:	7912      	ldrb	r2, [r2, #4]
 8008418:	711a      	strb	r2, [r3, #4]
			p->moveSize = 8;
 800841a:	687b      	ldr	r3, [r7, #4]
 800841c:	2208      	movs	r2, #8
 800841e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,C,E,B,E,E,H,D");
 8008420:	687b      	ldr	r3, [r7, #4]
 8008422:	3340      	adds	r3, #64	; 0x40
 8008424:	4ab0      	ldr	r2, [pc, #704]	; (80086e8 <createProblem+0x7840>)
 8008426:	461c      	mov	r4, r3
 8008428:	4615      	mov	r5, r2
 800842a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800842c:	6020      	str	r0, [r4, #0]
 800842e:	6061      	str	r1, [r4, #4]
 8008430:	60a2      	str	r2, [r4, #8]
 8008432:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,8,10,12,14,16,18");
 8008434:	687b      	ldr	r3, [r7, #4]
 8008436:	3304      	adds	r3, #4
 8008438:	4aac      	ldr	r2, [pc, #688]	; (80086ec <createProblem+0x7844>)
 800843a:	461d      	mov	r5, r3
 800843c:	4614      	mov	r4, r2
 800843e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008440:	6028      	str	r0, [r5, #0]
 8008442:	6069      	str	r1, [r5, #4]
 8008444:	60aa      	str	r2, [r5, #8]
 8008446:	60eb      	str	r3, [r5, #12]
 8008448:	6820      	ldr	r0, [r4, #0]
 800844a:	6128      	str	r0, [r5, #16]
 800844c:	7923      	ldrb	r3, [r4, #4]
 800844e:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8008450:	687b      	ldr	r3, [r7, #4]
 8008452:	33d8      	adds	r3, #216	; 0xd8
 8008454:	4aa6      	ldr	r2, [pc, #664]	; (80086f0 <createProblem+0x7848>)
 8008456:	461c      	mov	r4, r3
 8008458:	4615      	mov	r5, r2
 800845a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800845c:	6020      	str	r0, [r4, #0]
 800845e:	6061      	str	r1, [r4, #4]
 8008460:	60a2      	str	r2, [r4, #8]
 8008462:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8008464:	687b      	ldr	r3, [r7, #4]
 8008466:	33cc      	adds	r3, #204	; 0xcc
 8008468:	4aa2      	ldr	r2, [pc, #648]	; (80086f4 <createProblem+0x784c>)
 800846a:	6810      	ldr	r0, [r2, #0]
 800846c:	6018      	str	r0, [r3, #0]
			break;
 800846e:	f012 ba61 	b.w	801a934 <createProblem+0x19a8c>
		case 290 :
			strcpy(p->name,"BOUNCE EZ");
 8008472:	687b      	ldr	r3, [r7, #4]
 8008474:	337c      	adds	r3, #124	; 0x7c
 8008476:	49a0      	ldr	r1, [pc, #640]	; (80086f8 <createProblem+0x7850>)
 8008478:	461a      	mov	r2, r3
 800847a:	460b      	mov	r3, r1
 800847c:	cb03      	ldmia	r3!, {r0, r1}
 800847e:	6010      	str	r0, [r2, #0]
 8008480:	6051      	str	r1, [r2, #4]
 8008482:	881b      	ldrh	r3, [r3, #0]
 8008484:	8113      	strh	r3, [r2, #8]
			p->moveSize = 5;
 8008486:	687b      	ldr	r3, [r7, #4]
 8008488:	2205      	movs	r2, #5
 800848a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,J,H,C,D");
 800848c:	687b      	ldr	r3, [r7, #4]
 800848e:	3340      	adds	r3, #64	; 0x40
 8008490:	499a      	ldr	r1, [pc, #616]	; (80086fc <createProblem+0x7854>)
 8008492:	461a      	mov	r2, r3
 8008494:	460b      	mov	r3, r1
 8008496:	cb03      	ldmia	r3!, {r0, r1}
 8008498:	6010      	str	r0, [r2, #0]
 800849a:	6051      	str	r1, [r2, #4]
 800849c:	881b      	ldrh	r3, [r3, #0]
 800849e:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,5,10,13,18");
 80084a0:	687b      	ldr	r3, [r7, #4]
 80084a2:	3304      	adds	r3, #4
 80084a4:	4a96      	ldr	r2, [pc, #600]	; (8008700 <createProblem+0x7858>)
 80084a6:	461c      	mov	r4, r3
 80084a8:	4613      	mov	r3, r2
 80084aa:	cb07      	ldmia	r3!, {r0, r1, r2}
 80084ac:	6020      	str	r0, [r4, #0]
 80084ae:	6061      	str	r1, [r4, #4]
 80084b0:	60a2      	str	r2, [r4, #8]
 80084b2:	781b      	ldrb	r3, [r3, #0]
 80084b4:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,e");
 80084b6:	687b      	ldr	r3, [r7, #4]
 80084b8:	33d8      	adds	r3, #216	; 0xd8
 80084ba:	4992      	ldr	r1, [pc, #584]	; (8008704 <createProblem+0x785c>)
 80084bc:	461a      	mov	r2, r3
 80084be:	460b      	mov	r3, r1
 80084c0:	cb03      	ldmia	r3!, {r0, r1}
 80084c2:	6010      	str	r0, [r2, #0]
 80084c4:	6051      	str	r1, [r2, #4]
 80084c6:	881b      	ldrh	r3, [r3, #0]
 80084c8:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C+");
 80084ca:	687b      	ldr	r3, [r7, #4]
 80084cc:	33cc      	adds	r3, #204	; 0xcc
 80084ce:	4a8e      	ldr	r2, [pc, #568]	; (8008708 <createProblem+0x7860>)
 80084d0:	6810      	ldr	r0, [r2, #0]
 80084d2:	6018      	str	r0, [r3, #0]
			break;
 80084d4:	f012 ba2e 	b.w	801a934 <createProblem+0x19a8c>
		case 291 :
			strcpy(p->name,"SEX LANCHEZ");
 80084d8:	687b      	ldr	r3, [r7, #4]
 80084da:	337c      	adds	r3, #124	; 0x7c
 80084dc:	4a8b      	ldr	r2, [pc, #556]	; (800870c <createProblem+0x7864>)
 80084de:	461c      	mov	r4, r3
 80084e0:	4613      	mov	r3, r2
 80084e2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80084e4:	6020      	str	r0, [r4, #0]
 80084e6:	6061      	str	r1, [r4, #4]
 80084e8:	60a2      	str	r2, [r4, #8]
			p->moveSize = 4;
 80084ea:	687b      	ldr	r3, [r7, #4]
 80084ec:	2204      	movs	r2, #4
 80084ee:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,G,D");
 80084f0:	687b      	ldr	r3, [r7, #4]
 80084f2:	3340      	adds	r3, #64	; 0x40
 80084f4:	4986      	ldr	r1, [pc, #536]	; (8008710 <createProblem+0x7868>)
 80084f6:	461a      	mov	r2, r3
 80084f8:	460b      	mov	r3, r1
 80084fa:	cb03      	ldmia	r3!, {r0, r1}
 80084fc:	6010      	str	r0, [r2, #0]
 80084fe:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"4,8,14,18");
 8008500:	687b      	ldr	r3, [r7, #4]
 8008502:	3304      	adds	r3, #4
 8008504:	4983      	ldr	r1, [pc, #524]	; (8008714 <createProblem+0x786c>)
 8008506:	461a      	mov	r2, r3
 8008508:	460b      	mov	r3, r1
 800850a:	cb03      	ldmia	r3!, {r0, r1}
 800850c:	6010      	str	r0, [r2, #0]
 800850e:	6051      	str	r1, [r2, #4]
 8008510:	881b      	ldrh	r3, [r3, #0]
 8008512:	8113      	strh	r3, [r2, #8]
			strcpy(p->startFinish, "s,d,d,e");
 8008514:	687b      	ldr	r3, [r7, #4]
 8008516:	33d8      	adds	r3, #216	; 0xd8
 8008518:	497f      	ldr	r1, [pc, #508]	; (8008718 <createProblem+0x7870>)
 800851a:	461a      	mov	r2, r3
 800851c:	460b      	mov	r3, r1
 800851e:	cb03      	ldmia	r3!, {r0, r1}
 8008520:	6010      	str	r0, [r2, #0]
 8008522:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7C+");
 8008524:	687b      	ldr	r3, [r7, #4]
 8008526:	33cc      	adds	r3, #204	; 0xcc
 8008528:	4a7c      	ldr	r2, [pc, #496]	; (800871c <createProblem+0x7874>)
 800852a:	6810      	ldr	r0, [r2, #0]
 800852c:	6018      	str	r0, [r3, #0]
			break;
 800852e:	f012 ba01 	b.w	801a934 <createProblem+0x19a8c>
		case 292 :
			strcpy(p->name,"YAY POCKETS!");
 8008532:	687b      	ldr	r3, [r7, #4]
 8008534:	337c      	adds	r3, #124	; 0x7c
 8008536:	4a7a      	ldr	r2, [pc, #488]	; (8008720 <createProblem+0x7878>)
 8008538:	461c      	mov	r4, r3
 800853a:	4613      	mov	r3, r2
 800853c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800853e:	6020      	str	r0, [r4, #0]
 8008540:	6061      	str	r1, [r4, #4]
 8008542:	60a2      	str	r2, [r4, #8]
 8008544:	781b      	ldrb	r3, [r3, #0]
 8008546:	7323      	strb	r3, [r4, #12]
			p->moveSize = 7;
 8008548:	687b      	ldr	r3, [r7, #4]
 800854a:	2207      	movs	r2, #7
 800854c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,C,E,B,E,B,D");
 800854e:	687b      	ldr	r3, [r7, #4]
 8008550:	3340      	adds	r3, #64	; 0x40
 8008552:	4a74      	ldr	r2, [pc, #464]	; (8008724 <createProblem+0x787c>)
 8008554:	461c      	mov	r4, r3
 8008556:	4613      	mov	r3, r2
 8008558:	cb07      	ldmia	r3!, {r0, r1, r2}
 800855a:	6020      	str	r0, [r4, #0]
 800855c:	6061      	str	r1, [r4, #4]
 800855e:	60a2      	str	r2, [r4, #8]
 8008560:	881b      	ldrh	r3, [r3, #0]
 8008562:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,8,10,12,15,18");
 8008564:	687b      	ldr	r3, [r7, #4]
 8008566:	3304      	adds	r3, #4
 8008568:	4a6f      	ldr	r2, [pc, #444]	; (8008728 <createProblem+0x7880>)
 800856a:	461d      	mov	r5, r3
 800856c:	4614      	mov	r4, r2
 800856e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008570:	6028      	str	r0, [r5, #0]
 8008572:	6069      	str	r1, [r5, #4]
 8008574:	60aa      	str	r2, [r5, #8]
 8008576:	60eb      	str	r3, [r5, #12]
 8008578:	8823      	ldrh	r3, [r4, #0]
 800857a:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800857c:	687b      	ldr	r3, [r7, #4]
 800857e:	33d8      	adds	r3, #216	; 0xd8
 8008580:	4a6a      	ldr	r2, [pc, #424]	; (800872c <createProblem+0x7884>)
 8008582:	461c      	mov	r4, r3
 8008584:	4613      	mov	r3, r2
 8008586:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008588:	6020      	str	r0, [r4, #0]
 800858a:	6061      	str	r1, [r4, #4]
 800858c:	60a2      	str	r2, [r4, #8]
 800858e:	881b      	ldrh	r3, [r3, #0]
 8008590:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8008592:	687b      	ldr	r3, [r7, #4]
 8008594:	33cc      	adds	r3, #204	; 0xcc
 8008596:	4a66      	ldr	r2, [pc, #408]	; (8008730 <createProblem+0x7888>)
 8008598:	8811      	ldrh	r1, [r2, #0]
 800859a:	7892      	ldrb	r2, [r2, #2]
 800859c:	8019      	strh	r1, [r3, #0]
 800859e:	709a      	strb	r2, [r3, #2]
			break;
 80085a0:	f012 b9c8 	b.w	801a934 <createProblem+0x19a8c>
		case 293 :
			strcpy(p->name,"MORNING SHAKE");
 80085a4:	687b      	ldr	r3, [r7, #4]
 80085a6:	337c      	adds	r3, #124	; 0x7c
 80085a8:	4a62      	ldr	r2, [pc, #392]	; (8008734 <createProblem+0x788c>)
 80085aa:	461c      	mov	r4, r3
 80085ac:	4613      	mov	r3, r2
 80085ae:	cb07      	ldmia	r3!, {r0, r1, r2}
 80085b0:	6020      	str	r0, [r4, #0]
 80085b2:	6061      	str	r1, [r4, #4]
 80085b4:	60a2      	str	r2, [r4, #8]
 80085b6:	881b      	ldrh	r3, [r3, #0]
 80085b8:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 80085ba:	687b      	ldr	r3, [r7, #4]
 80085bc:	2206      	movs	r2, #6
 80085be:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,B,D,D");
 80085c0:	687b      	ldr	r3, [r7, #4]
 80085c2:	3340      	adds	r3, #64	; 0x40
 80085c4:	4a5c      	ldr	r2, [pc, #368]	; (8008738 <createProblem+0x7890>)
 80085c6:	461c      	mov	r4, r3
 80085c8:	4613      	mov	r3, r2
 80085ca:	cb07      	ldmia	r3!, {r0, r1, r2}
 80085cc:	6020      	str	r0, [r4, #0]
 80085ce:	6061      	str	r1, [r4, #4]
 80085d0:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,9,12,15,18");
 80085d2:	687b      	ldr	r3, [r7, #4]
 80085d4:	3304      	adds	r3, #4
 80085d6:	4a59      	ldr	r2, [pc, #356]	; (800873c <createProblem+0x7894>)
 80085d8:	461c      	mov	r4, r3
 80085da:	4613      	mov	r3, r2
 80085dc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80085de:	6020      	str	r0, [r4, #0]
 80085e0:	6061      	str	r1, [r4, #4]
 80085e2:	60a2      	str	r2, [r4, #8]
 80085e4:	881a      	ldrh	r2, [r3, #0]
 80085e6:	789b      	ldrb	r3, [r3, #2]
 80085e8:	81a2      	strh	r2, [r4, #12]
 80085ea:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80085ec:	687b      	ldr	r3, [r7, #4]
 80085ee:	33d8      	adds	r3, #216	; 0xd8
 80085f0:	4a53      	ldr	r2, [pc, #332]	; (8008740 <createProblem+0x7898>)
 80085f2:	461c      	mov	r4, r3
 80085f4:	4613      	mov	r3, r2
 80085f6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80085f8:	6020      	str	r0, [r4, #0]
 80085fa:	6061      	str	r1, [r4, #4]
 80085fc:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 80085fe:	687b      	ldr	r3, [r7, #4]
 8008600:	33cc      	adds	r3, #204	; 0xcc
 8008602:	4a41      	ldr	r2, [pc, #260]	; (8008708 <createProblem+0x7860>)
 8008604:	6810      	ldr	r0, [r2, #0]
 8008606:	6018      	str	r0, [r3, #0]
			break;
 8008608:	f012 b994 	b.w	801a934 <createProblem+0x19a8c>
		case 294 :
			strcpy(p->name,"BOULDER AND EMIKO");
 800860c:	687b      	ldr	r3, [r7, #4]
 800860e:	337c      	adds	r3, #124	; 0x7c
 8008610:	4a4c      	ldr	r2, [pc, #304]	; (8008744 <createProblem+0x789c>)
 8008612:	461d      	mov	r5, r3
 8008614:	4614      	mov	r4, r2
 8008616:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008618:	6028      	str	r0, [r5, #0]
 800861a:	6069      	str	r1, [r5, #4]
 800861c:	60aa      	str	r2, [r5, #8]
 800861e:	60eb      	str	r3, [r5, #12]
 8008620:	8823      	ldrh	r3, [r4, #0]
 8008622:	822b      	strh	r3, [r5, #16]
			p->moveSize = 8;
 8008624:	687b      	ldr	r3, [r7, #4]
 8008626:	2208      	movs	r2, #8
 8008628:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,E,F,D,I,E,I");
 800862a:	687b      	ldr	r3, [r7, #4]
 800862c:	3340      	adds	r3, #64	; 0x40
 800862e:	4a46      	ldr	r2, [pc, #280]	; (8008748 <createProblem+0x78a0>)
 8008630:	461c      	mov	r4, r3
 8008632:	4615      	mov	r5, r2
 8008634:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008636:	6020      	str	r0, [r4, #0]
 8008638:	6061      	str	r1, [r4, #4]
 800863a:	60a2      	str	r2, [r4, #8]
 800863c:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,4,8,11,11,14,14,18");
 800863e:	687b      	ldr	r3, [r7, #4]
 8008640:	3304      	adds	r3, #4
 8008642:	4a42      	ldr	r2, [pc, #264]	; (800874c <createProblem+0x78a4>)
 8008644:	461d      	mov	r5, r3
 8008646:	4614      	mov	r4, r2
 8008648:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800864a:	6028      	str	r0, [r5, #0]
 800864c:	6069      	str	r1, [r5, #4]
 800864e:	60aa      	str	r2, [r5, #8]
 8008650:	60eb      	str	r3, [r5, #12]
 8008652:	6820      	ldr	r0, [r4, #0]
 8008654:	6128      	str	r0, [r5, #16]
 8008656:	7923      	ldrb	r3, [r4, #4]
 8008658:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800865a:	687b      	ldr	r3, [r7, #4]
 800865c:	33d8      	adds	r3, #216	; 0xd8
 800865e:	4a24      	ldr	r2, [pc, #144]	; (80086f0 <createProblem+0x7848>)
 8008660:	461c      	mov	r4, r3
 8008662:	4615      	mov	r5, r2
 8008664:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008666:	6020      	str	r0, [r4, #0]
 8008668:	6061      	str	r1, [r4, #4]
 800866a:	60a2      	str	r2, [r4, #8]
 800866c:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 800866e:	687b      	ldr	r3, [r7, #4]
 8008670:	33cc      	adds	r3, #204	; 0xcc
 8008672:	4a25      	ldr	r2, [pc, #148]	; (8008708 <createProblem+0x7860>)
 8008674:	6810      	ldr	r0, [r2, #0]
 8008676:	6018      	str	r0, [r3, #0]
			break;
 8008678:	f012 b95c 	b.w	801a934 <createProblem+0x19a8c>
		case 295 :
			strcpy(p->name,"GREAT DANE ZANE");
 800867c:	687b      	ldr	r3, [r7, #4]
 800867e:	337c      	adds	r3, #124	; 0x7c
 8008680:	4a33      	ldr	r2, [pc, #204]	; (8008750 <createProblem+0x78a8>)
 8008682:	461c      	mov	r4, r3
 8008684:	4615      	mov	r5, r2
 8008686:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008688:	6020      	str	r0, [r4, #0]
 800868a:	6061      	str	r1, [r4, #4]
 800868c:	60a2      	str	r2, [r4, #8]
 800868e:	60e3      	str	r3, [r4, #12]
			p->moveSize = 8;
 8008690:	687b      	ldr	r3, [r7, #4]
 8008692:	2208      	movs	r2, #8
 8008694:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,F,G,E,B,G,I");
 8008696:	687b      	ldr	r3, [r7, #4]
 8008698:	3340      	adds	r3, #64	; 0x40
 800869a:	4a2e      	ldr	r2, [pc, #184]	; (8008754 <createProblem+0x78ac>)
 800869c:	461c      	mov	r4, r3
 800869e:	4615      	mov	r5, r2
 80086a0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80086a2:	6020      	str	r0, [r4, #0]
 80086a4:	6061      	str	r1, [r4, #4]
 80086a6:	60a2      	str	r2, [r4, #8]
 80086a8:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,13,15,9,12,4,18");
 80086aa:	687b      	ldr	r3, [r7, #4]
 80086ac:	3304      	adds	r3, #4
 80086ae:	4a2a      	ldr	r2, [pc, #168]	; (8008758 <createProblem+0x78b0>)
 80086b0:	461d      	mov	r5, r3
 80086b2:	4614      	mov	r4, r2
 80086b4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80086b6:	6028      	str	r0, [r5, #0]
 80086b8:	6069      	str	r1, [r5, #4]
 80086ba:	60aa      	str	r2, [r5, #8]
 80086bc:	60eb      	str	r3, [r5, #12]
 80086be:	6820      	ldr	r0, [r4, #0]
 80086c0:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 80086c2:	687b      	ldr	r3, [r7, #4]
 80086c4:	33d8      	adds	r3, #216	; 0xd8
 80086c6:	4a0a      	ldr	r2, [pc, #40]	; (80086f0 <createProblem+0x7848>)
 80086c8:	461c      	mov	r4, r3
 80086ca:	4615      	mov	r5, r2
 80086cc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80086ce:	6020      	str	r0, [r4, #0]
 80086d0:	6061      	str	r1, [r4, #4]
 80086d2:	60a2      	str	r2, [r4, #8]
 80086d4:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 80086d6:	687b      	ldr	r3, [r7, #4]
 80086d8:	33cc      	adds	r3, #204	; 0xcc
 80086da:	4a20      	ldr	r2, [pc, #128]	; (800875c <createProblem+0x78b4>)
 80086dc:	6810      	ldr	r0, [r2, #0]
 80086de:	6018      	str	r0, [r3, #0]
			break;
 80086e0:	f012 b928 	b.w	801a934 <createProblem+0x19a8c>
 80086e4:	08023110 	.word	0x08023110
 80086e8:	08023118 	.word	0x08023118
 80086ec:	08023128 	.word	0x08023128
 80086f0:	08020a4c 	.word	0x08020a4c
 80086f4:	08020830 	.word	0x08020830
 80086f8:	08023140 	.word	0x08023140
 80086fc:	0802314c 	.word	0x0802314c
 8008700:	08023158 	.word	0x08023158
 8008704:	08021748 	.word	0x08021748
 8008708:	08020928 	.word	0x08020928
 800870c:	08023168 	.word	0x08023168
 8008710:	08023174 	.word	0x08023174
 8008714:	0802317c 	.word	0x0802317c
 8008718:	080215a8 	.word	0x080215a8
 800871c:	080226f0 	.word	0x080226f0
 8008720:	08023188 	.word	0x08023188
 8008724:	08020ac4 	.word	0x08020ac4
 8008728:	08023198 	.word	0x08023198
 800872c:	08020820 	.word	0x08020820
 8008730:	080208f0 	.word	0x080208f0
 8008734:	080231ac 	.word	0x080231ac
 8008738:	080231bc 	.word	0x080231bc
 800873c:	080231c8 	.word	0x080231c8
 8008740:	0802091c 	.word	0x0802091c
 8008744:	080231d8 	.word	0x080231d8
 8008748:	080231ec 	.word	0x080231ec
 800874c:	080231fc 	.word	0x080231fc
 8008750:	08023214 	.word	0x08023214
 8008754:	08023224 	.word	0x08023224
 8008758:	08023234 	.word	0x08023234
 800875c:	080209a4 	.word	0x080209a4
		case 296 :
			strcpy(p->name,"ANACONDA MALT LIQUOR");
 8008760:	687b      	ldr	r3, [r7, #4]
 8008762:	337c      	adds	r3, #124	; 0x7c
 8008764:	4aba      	ldr	r2, [pc, #744]	; (8008a50 <createProblem+0x7ba8>)
 8008766:	461d      	mov	r5, r3
 8008768:	4614      	mov	r4, r2
 800876a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800876c:	6028      	str	r0, [r5, #0]
 800876e:	6069      	str	r1, [r5, #4]
 8008770:	60aa      	str	r2, [r5, #8]
 8008772:	60eb      	str	r3, [r5, #12]
 8008774:	6820      	ldr	r0, [r4, #0]
 8008776:	6128      	str	r0, [r5, #16]
 8008778:	7923      	ldrb	r3, [r4, #4]
 800877a:	752b      	strb	r3, [r5, #20]
			p->moveSize = 6;
 800877c:	687b      	ldr	r3, [r7, #4]
 800877e:	2206      	movs	r2, #6
 8008780:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,I,H,E,D");
 8008782:	687b      	ldr	r3, [r7, #4]
 8008784:	3340      	adds	r3, #64	; 0x40
 8008786:	4ab3      	ldr	r2, [pc, #716]	; (8008a54 <createProblem+0x7bac>)
 8008788:	461c      	mov	r4, r3
 800878a:	4613      	mov	r3, r2
 800878c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800878e:	6020      	str	r0, [r4, #0]
 8008790:	6061      	str	r1, [r4, #4]
 8008792:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,5,14,10,16,18");
 8008794:	687b      	ldr	r3, [r7, #4]
 8008796:	3304      	adds	r3, #4
 8008798:	4aaf      	ldr	r2, [pc, #700]	; (8008a58 <createProblem+0x7bb0>)
 800879a:	461c      	mov	r4, r3
 800879c:	4615      	mov	r5, r2
 800879e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80087a0:	6020      	str	r0, [r4, #0]
 80087a2:	6061      	str	r1, [r4, #4]
 80087a4:	60a2      	str	r2, [r4, #8]
 80087a6:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 80087a8:	687b      	ldr	r3, [r7, #4]
 80087aa:	33d8      	adds	r3, #216	; 0xd8
 80087ac:	4aab      	ldr	r2, [pc, #684]	; (8008a5c <createProblem+0x7bb4>)
 80087ae:	461c      	mov	r4, r3
 80087b0:	4613      	mov	r3, r2
 80087b2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80087b4:	6020      	str	r0, [r4, #0]
 80087b6:	6061      	str	r1, [r4, #4]
 80087b8:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 80087ba:	687b      	ldr	r3, [r7, #4]
 80087bc:	33cc      	adds	r3, #204	; 0xcc
 80087be:	4aa8      	ldr	r2, [pc, #672]	; (8008a60 <createProblem+0x7bb8>)
 80087c0:	6810      	ldr	r0, [r2, #0]
 80087c2:	6018      	str	r0, [r3, #0]
			break;
 80087c4:	f012 b8b6 	b.w	801a934 <createProblem+0x19a8c>
		case 297 :
			strcpy(p->name,"BLACK DOJO MINI");
 80087c8:	687b      	ldr	r3, [r7, #4]
 80087ca:	337c      	adds	r3, #124	; 0x7c
 80087cc:	4aa5      	ldr	r2, [pc, #660]	; (8008a64 <createProblem+0x7bbc>)
 80087ce:	461c      	mov	r4, r3
 80087d0:	4615      	mov	r5, r2
 80087d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80087d4:	6020      	str	r0, [r4, #0]
 80087d6:	6061      	str	r1, [r4, #4]
 80087d8:	60a2      	str	r2, [r4, #8]
 80087da:	60e3      	str	r3, [r4, #12]
			p->moveSize = 6;
 80087dc:	687b      	ldr	r3, [r7, #4]
 80087de:	2206      	movs	r2, #6
 80087e0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,F,C,E,A");
 80087e2:	687b      	ldr	r3, [r7, #4]
 80087e4:	3340      	adds	r3, #64	; 0x40
 80087e6:	4aa0      	ldr	r2, [pc, #640]	; (8008a68 <createProblem+0x7bc0>)
 80087e8:	461c      	mov	r4, r3
 80087ea:	4613      	mov	r3, r2
 80087ec:	cb07      	ldmia	r3!, {r0, r1, r2}
 80087ee:	6020      	str	r0, [r4, #0]
 80087f0:	6061      	str	r1, [r4, #4]
 80087f2:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,11,13,16,18");
 80087f4:	687b      	ldr	r3, [r7, #4]
 80087f6:	3304      	adds	r3, #4
 80087f8:	4a9c      	ldr	r2, [pc, #624]	; (8008a6c <createProblem+0x7bc4>)
 80087fa:	461c      	mov	r4, r3
 80087fc:	4615      	mov	r5, r2
 80087fe:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008800:	6020      	str	r0, [r4, #0]
 8008802:	6061      	str	r1, [r4, #4]
 8008804:	60a2      	str	r2, [r4, #8]
 8008806:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8008808:	687b      	ldr	r3, [r7, #4]
 800880a:	33d8      	adds	r3, #216	; 0xd8
 800880c:	4a93      	ldr	r2, [pc, #588]	; (8008a5c <createProblem+0x7bb4>)
 800880e:	461c      	mov	r4, r3
 8008810:	4613      	mov	r3, r2
 8008812:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008814:	6020      	str	r0, [r4, #0]
 8008816:	6061      	str	r1, [r4, #4]
 8008818:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 800881a:	687b      	ldr	r3, [r7, #4]
 800881c:	33cc      	adds	r3, #204	; 0xcc
 800881e:	4a94      	ldr	r2, [pc, #592]	; (8008a70 <createProblem+0x7bc8>)
 8008820:	8811      	ldrh	r1, [r2, #0]
 8008822:	7892      	ldrb	r2, [r2, #2]
 8008824:	8019      	strh	r1, [r3, #0]
 8008826:	709a      	strb	r2, [r3, #2]
			break;
 8008828:	f012 b884 	b.w	801a934 <createProblem+0x19a8c>
		case 298 :
			strcpy(p->name,"MASTERFUL GAP 2.0");
 800882c:	687b      	ldr	r3, [r7, #4]
 800882e:	337c      	adds	r3, #124	; 0x7c
 8008830:	4a90      	ldr	r2, [pc, #576]	; (8008a74 <createProblem+0x7bcc>)
 8008832:	461d      	mov	r5, r3
 8008834:	4614      	mov	r4, r2
 8008836:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008838:	6028      	str	r0, [r5, #0]
 800883a:	6069      	str	r1, [r5, #4]
 800883c:	60aa      	str	r2, [r5, #8]
 800883e:	60eb      	str	r3, [r5, #12]
 8008840:	8823      	ldrh	r3, [r4, #0]
 8008842:	822b      	strh	r3, [r5, #16]
			p->moveSize = 7;
 8008844:	687b      	ldr	r3, [r7, #4]
 8008846:	2207      	movs	r2, #7
 8008848:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,A,F,E,A,I");
 800884a:	687b      	ldr	r3, [r7, #4]
 800884c:	3340      	adds	r3, #64	; 0x40
 800884e:	4a8a      	ldr	r2, [pc, #552]	; (8008a78 <createProblem+0x7bd0>)
 8008850:	461c      	mov	r4, r3
 8008852:	4613      	mov	r3, r2
 8008854:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008856:	6020      	str	r0, [r4, #0]
 8008858:	6061      	str	r1, [r4, #4]
 800885a:	60a2      	str	r2, [r4, #8]
 800885c:	881b      	ldrh	r3, [r3, #0]
 800885e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,11,16,14,18");
 8008860:	687b      	ldr	r3, [r7, #4]
 8008862:	3304      	adds	r3, #4
 8008864:	4a85      	ldr	r2, [pc, #532]	; (8008a7c <createProblem+0x7bd4>)
 8008866:	461d      	mov	r5, r3
 8008868:	4614      	mov	r4, r2
 800886a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800886c:	6028      	str	r0, [r5, #0]
 800886e:	6069      	str	r1, [r5, #4]
 8008870:	60aa      	str	r2, [r5, #8]
 8008872:	60eb      	str	r3, [r5, #12]
 8008874:	8823      	ldrh	r3, [r4, #0]
 8008876:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8008878:	687b      	ldr	r3, [r7, #4]
 800887a:	33d8      	adds	r3, #216	; 0xd8
 800887c:	4a80      	ldr	r2, [pc, #512]	; (8008a80 <createProblem+0x7bd8>)
 800887e:	461c      	mov	r4, r3
 8008880:	4613      	mov	r3, r2
 8008882:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008884:	6020      	str	r0, [r4, #0]
 8008886:	6061      	str	r1, [r4, #4]
 8008888:	60a2      	str	r2, [r4, #8]
 800888a:	881b      	ldrh	r3, [r3, #0]
 800888c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B+");
 800888e:	687b      	ldr	r3, [r7, #4]
 8008890:	33cc      	adds	r3, #204	; 0xcc
 8008892:	4a7c      	ldr	r2, [pc, #496]	; (8008a84 <createProblem+0x7bdc>)
 8008894:	6810      	ldr	r0, [r2, #0]
 8008896:	6018      	str	r0, [r3, #0]
			break;
 8008898:	f012 b84c 	b.w	801a934 <createProblem+0x19a8c>
		case 299 :
			strcpy(p->name,"CHICKUGA");
 800889c:	687b      	ldr	r3, [r7, #4]
 800889e:	337c      	adds	r3, #124	; 0x7c
 80088a0:	4979      	ldr	r1, [pc, #484]	; (8008a88 <createProblem+0x7be0>)
 80088a2:	461a      	mov	r2, r3
 80088a4:	460b      	mov	r3, r1
 80088a6:	cb03      	ldmia	r3!, {r0, r1}
 80088a8:	6010      	str	r0, [r2, #0]
 80088aa:	6051      	str	r1, [r2, #4]
 80088ac:	781b      	ldrb	r3, [r3, #0]
 80088ae:	7213      	strb	r3, [r2, #8]
			p->moveSize = 6;
 80088b0:	687b      	ldr	r3, [r7, #4]
 80088b2:	2206      	movs	r2, #6
 80088b4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,E,C,E,D");
 80088b6:	687b      	ldr	r3, [r7, #4]
 80088b8:	3340      	adds	r3, #64	; 0x40
 80088ba:	4a74      	ldr	r2, [pc, #464]	; (8008a8c <createProblem+0x7be4>)
 80088bc:	461c      	mov	r4, r3
 80088be:	4613      	mov	r3, r2
 80088c0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80088c2:	6020      	str	r0, [r4, #0]
 80088c4:	6061      	str	r1, [r4, #4]
 80088c6:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,9,13,14,18");
 80088c8:	687b      	ldr	r3, [r7, #4]
 80088ca:	3304      	adds	r3, #4
 80088cc:	4a70      	ldr	r2, [pc, #448]	; (8008a90 <createProblem+0x7be8>)
 80088ce:	461c      	mov	r4, r3
 80088d0:	4613      	mov	r3, r2
 80088d2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80088d4:	6020      	str	r0, [r4, #0]
 80088d6:	6061      	str	r1, [r4, #4]
 80088d8:	60a2      	str	r2, [r4, #8]
 80088da:	881a      	ldrh	r2, [r3, #0]
 80088dc:	789b      	ldrb	r3, [r3, #2]
 80088de:	81a2      	strh	r2, [r4, #12]
 80088e0:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80088e2:	687b      	ldr	r3, [r7, #4]
 80088e4:	33d8      	adds	r3, #216	; 0xd8
 80088e6:	4a6b      	ldr	r2, [pc, #428]	; (8008a94 <createProblem+0x7bec>)
 80088e8:	461c      	mov	r4, r3
 80088ea:	4613      	mov	r3, r2
 80088ec:	cb07      	ldmia	r3!, {r0, r1, r2}
 80088ee:	6020      	str	r0, [r4, #0]
 80088f0:	6061      	str	r1, [r4, #4]
 80088f2:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 80088f4:	687b      	ldr	r3, [r7, #4]
 80088f6:	33cc      	adds	r3, #204	; 0xcc
 80088f8:	4a62      	ldr	r2, [pc, #392]	; (8008a84 <createProblem+0x7bdc>)
 80088fa:	6810      	ldr	r0, [r2, #0]
 80088fc:	6018      	str	r0, [r3, #0]
			break;
 80088fe:	f012 b819 	b.w	801a934 <createProblem+0x19a8c>
		case 3 :
			strcpy(p->name,"PROBLEM 11");
 8008902:	687b      	ldr	r3, [r7, #4]
 8008904:	337c      	adds	r3, #124	; 0x7c
 8008906:	4964      	ldr	r1, [pc, #400]	; (8008a98 <createProblem+0x7bf0>)
 8008908:	461a      	mov	r2, r3
 800890a:	460b      	mov	r3, r1
 800890c:	cb03      	ldmia	r3!, {r0, r1}
 800890e:	6010      	str	r0, [r2, #0]
 8008910:	6051      	str	r1, [r2, #4]
 8008912:	8819      	ldrh	r1, [r3, #0]
 8008914:	789b      	ldrb	r3, [r3, #2]
 8008916:	8111      	strh	r1, [r2, #8]
 8008918:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 800891a:	687b      	ldr	r3, [r7, #4]
 800891c:	2207      	movs	r2, #7
 800891e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,E,B,E,E,I");
 8008920:	687b      	ldr	r3, [r7, #4]
 8008922:	3340      	adds	r3, #64	; 0x40
 8008924:	4a5d      	ldr	r2, [pc, #372]	; (8008a9c <createProblem+0x7bf4>)
 8008926:	461c      	mov	r4, r3
 8008928:	4613      	mov	r3, r2
 800892a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800892c:	6020      	str	r0, [r4, #0]
 800892e:	6061      	str	r1, [r4, #4]
 8008930:	60a2      	str	r2, [r4, #8]
 8008932:	881b      	ldrh	r3, [r3, #0]
 8008934:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,10,14,16,18");
 8008936:	687b      	ldr	r3, [r7, #4]
 8008938:	3304      	adds	r3, #4
 800893a:	4a59      	ldr	r2, [pc, #356]	; (8008aa0 <createProblem+0x7bf8>)
 800893c:	461d      	mov	r5, r3
 800893e:	4614      	mov	r4, r2
 8008940:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008942:	6028      	str	r0, [r5, #0]
 8008944:	6069      	str	r1, [r5, #4]
 8008946:	60aa      	str	r2, [r5, #8]
 8008948:	60eb      	str	r3, [r5, #12]
 800894a:	8823      	ldrh	r3, [r4, #0]
 800894c:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800894e:	687b      	ldr	r3, [r7, #4]
 8008950:	33d8      	adds	r3, #216	; 0xd8
 8008952:	4a4b      	ldr	r2, [pc, #300]	; (8008a80 <createProblem+0x7bd8>)
 8008954:	461c      	mov	r4, r3
 8008956:	4613      	mov	r3, r2
 8008958:	cb07      	ldmia	r3!, {r0, r1, r2}
 800895a:	6020      	str	r0, [r4, #0]
 800895c:	6061      	str	r1, [r4, #4]
 800895e:	60a2      	str	r2, [r4, #8]
 8008960:	881b      	ldrh	r3, [r3, #0]
 8008962:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8008964:	687b      	ldr	r3, [r7, #4]
 8008966:	33cc      	adds	r3, #204	; 0xcc
 8008968:	4a41      	ldr	r2, [pc, #260]	; (8008a70 <createProblem+0x7bc8>)
 800896a:	8811      	ldrh	r1, [r2, #0]
 800896c:	7892      	ldrb	r2, [r2, #2]
 800896e:	8019      	strh	r1, [r3, #0]
 8008970:	709a      	strb	r2, [r3, #2]
			break;
 8008972:	f011 bfdf 	b.w	801a934 <createProblem+0x19a8c>
		case 30 :
			strcpy(p->name,"ACG6");
 8008976:	687b      	ldr	r3, [r7, #4]
 8008978:	337c      	adds	r3, #124	; 0x7c
 800897a:	4a4a      	ldr	r2, [pc, #296]	; (8008aa4 <createProblem+0x7bfc>)
 800897c:	6810      	ldr	r0, [r2, #0]
 800897e:	6018      	str	r0, [r3, #0]
 8008980:	7912      	ldrb	r2, [r2, #4]
 8008982:	711a      	strb	r2, [r3, #4]
			p->moveSize = 8;
 8008984:	687b      	ldr	r3, [r7, #4]
 8008986:	2208      	movs	r2, #8
 8008988:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,G,C,C,C,E,I");
 800898a:	687b      	ldr	r3, [r7, #4]
 800898c:	3340      	adds	r3, #64	; 0x40
 800898e:	4a46      	ldr	r2, [pc, #280]	; (8008aa8 <createProblem+0x7c00>)
 8008990:	461c      	mov	r4, r3
 8008992:	4615      	mov	r5, r2
 8008994:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008996:	6020      	str	r0, [r4, #0]
 8008998:	6061      	str	r1, [r4, #4]
 800899a:	60a2      	str	r2, [r4, #8]
 800899c:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,10,10,8,13,16,16,18");
 800899e:	687b      	ldr	r3, [r7, #4]
 80089a0:	3304      	adds	r3, #4
 80089a2:	4a42      	ldr	r2, [pc, #264]	; (8008aac <createProblem+0x7c04>)
 80089a4:	461d      	mov	r5, r3
 80089a6:	4614      	mov	r4, r2
 80089a8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80089aa:	6028      	str	r0, [r5, #0]
 80089ac:	6069      	str	r1, [r5, #4]
 80089ae:	60aa      	str	r2, [r5, #8]
 80089b0:	60eb      	str	r3, [r5, #12]
 80089b2:	6820      	ldr	r0, [r4, #0]
 80089b4:	6128      	str	r0, [r5, #16]
 80089b6:	88a3      	ldrh	r3, [r4, #4]
 80089b8:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 80089ba:	687b      	ldr	r3, [r7, #4]
 80089bc:	33d8      	adds	r3, #216	; 0xd8
 80089be:	4a3c      	ldr	r2, [pc, #240]	; (8008ab0 <createProblem+0x7c08>)
 80089c0:	461c      	mov	r4, r3
 80089c2:	4615      	mov	r5, r2
 80089c4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80089c6:	6020      	str	r0, [r4, #0]
 80089c8:	6061      	str	r1, [r4, #4]
 80089ca:	60a2      	str	r2, [r4, #8]
 80089cc:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 80089ce:	687b      	ldr	r3, [r7, #4]
 80089d0:	33cc      	adds	r3, #204	; 0xcc
 80089d2:	4a27      	ldr	r2, [pc, #156]	; (8008a70 <createProblem+0x7bc8>)
 80089d4:	8811      	ldrh	r1, [r2, #0]
 80089d6:	7892      	ldrb	r2, [r2, #2]
 80089d8:	8019      	strh	r1, [r3, #0]
 80089da:	709a      	strb	r2, [r3, #2]
			break;
 80089dc:	f011 bfaa 	b.w	801a934 <createProblem+0x19a8c>
		case 300 :
			strcpy(p->name,"BULA 3");
 80089e0:	687b      	ldr	r3, [r7, #4]
 80089e2:	337c      	adds	r3, #124	; 0x7c
 80089e4:	4a33      	ldr	r2, [pc, #204]	; (8008ab4 <createProblem+0x7c0c>)
 80089e6:	6810      	ldr	r0, [r2, #0]
 80089e8:	6018      	str	r0, [r3, #0]
 80089ea:	8891      	ldrh	r1, [r2, #4]
 80089ec:	7992      	ldrb	r2, [r2, #6]
 80089ee:	8099      	strh	r1, [r3, #4]
 80089f0:	719a      	strb	r2, [r3, #6]
			p->moveSize = 7;
 80089f2:	687b      	ldr	r3, [r7, #4]
 80089f4:	2207      	movs	r2, #7
 80089f6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,F,I,E,I");
 80089f8:	687b      	ldr	r3, [r7, #4]
 80089fa:	3340      	adds	r3, #64	; 0x40
 80089fc:	4a2e      	ldr	r2, [pc, #184]	; (8008ab8 <createProblem+0x7c10>)
 80089fe:	461c      	mov	r4, r3
 8008a00:	4613      	mov	r3, r2
 8008a02:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008a04:	6020      	str	r0, [r4, #0]
 8008a06:	6061      	str	r1, [r4, #4]
 8008a08:	60a2      	str	r2, [r4, #8]
 8008a0a:	881b      	ldrh	r3, [r3, #0]
 8008a0c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,10,13,14,16,18");
 8008a0e:	687b      	ldr	r3, [r7, #4]
 8008a10:	3304      	adds	r3, #4
 8008a12:	4a2a      	ldr	r2, [pc, #168]	; (8008abc <createProblem+0x7c14>)
 8008a14:	461d      	mov	r5, r3
 8008a16:	4614      	mov	r4, r2
 8008a18:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008a1a:	6028      	str	r0, [r5, #0]
 8008a1c:	6069      	str	r1, [r5, #4]
 8008a1e:	60aa      	str	r2, [r5, #8]
 8008a20:	60eb      	str	r3, [r5, #12]
 8008a22:	8823      	ldrh	r3, [r4, #0]
 8008a24:	78a2      	ldrb	r2, [r4, #2]
 8008a26:	822b      	strh	r3, [r5, #16]
 8008a28:	4613      	mov	r3, r2
 8008a2a:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8008a2c:	687b      	ldr	r3, [r7, #4]
 8008a2e:	33d8      	adds	r3, #216	; 0xd8
 8008a30:	4a23      	ldr	r2, [pc, #140]	; (8008ac0 <createProblem+0x7c18>)
 8008a32:	461c      	mov	r4, r3
 8008a34:	4613      	mov	r3, r2
 8008a36:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008a38:	6020      	str	r0, [r4, #0]
 8008a3a:	6061      	str	r1, [r4, #4]
 8008a3c:	60a2      	str	r2, [r4, #8]
 8008a3e:	881b      	ldrh	r3, [r3, #0]
 8008a40:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8008a42:	687b      	ldr	r3, [r7, #4]
 8008a44:	33cc      	adds	r3, #204	; 0xcc
 8008a46:	4a06      	ldr	r2, [pc, #24]	; (8008a60 <createProblem+0x7bb8>)
 8008a48:	6810      	ldr	r0, [r2, #0]
 8008a4a:	6018      	str	r0, [r3, #0]
			break;
 8008a4c:	f011 bf72 	b.w	801a934 <createProblem+0x19a8c>
 8008a50:	08023248 	.word	0x08023248
 8008a54:	08023260 	.word	0x08023260
 8008a58:	0802326c 	.word	0x0802326c
 8008a5c:	08020e90 	.word	0x08020e90
 8008a60:	08020830 	.word	0x08020830
 8008a64:	0802327c 	.word	0x0802327c
 8008a68:	0802328c 	.word	0x0802328c
 8008a6c:	08023298 	.word	0x08023298
 8008a70:	08020874 	.word	0x08020874
 8008a74:	080232a8 	.word	0x080232a8
 8008a78:	080232bc 	.word	0x080232bc
 8008a7c:	080232cc 	.word	0x080232cc
 8008a80:	08020820 	.word	0x08020820
 8008a84:	08020dc8 	.word	0x08020dc8
 8008a88:	080232e0 	.word	0x080232e0
 8008a8c:	080232ec 	.word	0x080232ec
 8008a90:	080232f8 	.word	0x080232f8
 8008a94:	0802091c 	.word	0x0802091c
 8008a98:	08023308 	.word	0x08023308
 8008a9c:	08023314 	.word	0x08023314
 8008aa0:	08023324 	.word	0x08023324
 8008aa4:	08023338 	.word	0x08023338
 8008aa8:	08023340 	.word	0x08023340
 8008aac:	08023350 	.word	0x08023350
 8008ab0:	080209d8 	.word	0x080209d8
 8008ab4:	08023368 	.word	0x08023368
 8008ab8:	08023370 	.word	0x08023370
 8008abc:	08023380 	.word	0x08023380
 8008ac0:	08020a14 	.word	0x08020a14
		case 301 :
			strcpy(p->name,"SALUHALLEN 11");
 8008ac4:	687b      	ldr	r3, [r7, #4]
 8008ac6:	337c      	adds	r3, #124	; 0x7c
 8008ac8:	4aa9      	ldr	r2, [pc, #676]	; (8008d70 <createProblem+0x7ec8>)
 8008aca:	461c      	mov	r4, r3
 8008acc:	4613      	mov	r3, r2
 8008ace:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008ad0:	6020      	str	r0, [r4, #0]
 8008ad2:	6061      	str	r1, [r4, #4]
 8008ad4:	60a2      	str	r2, [r4, #8]
 8008ad6:	881b      	ldrh	r3, [r3, #0]
 8008ad8:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 8008ada:	687b      	ldr	r3, [r7, #4]
 8008adc:	2207      	movs	r2, #7
 8008ade:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,J,G,G,D");
 8008ae0:	687b      	ldr	r3, [r7, #4]
 8008ae2:	3340      	adds	r3, #64	; 0x40
 8008ae4:	4aa3      	ldr	r2, [pc, #652]	; (8008d74 <createProblem+0x7ecc>)
 8008ae6:	461c      	mov	r4, r3
 8008ae8:	4613      	mov	r3, r2
 8008aea:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008aec:	6020      	str	r0, [r4, #0]
 8008aee:	6061      	str	r1, [r4, #4]
 8008af0:	60a2      	str	r2, [r4, #8]
 8008af2:	881b      	ldrh	r3, [r3, #0]
 8008af4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,10,12,14,15,18");
 8008af6:	687b      	ldr	r3, [r7, #4]
 8008af8:	3304      	adds	r3, #4
 8008afa:	4a9f      	ldr	r2, [pc, #636]	; (8008d78 <createProblem+0x7ed0>)
 8008afc:	461d      	mov	r5, r3
 8008afe:	4614      	mov	r4, r2
 8008b00:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008b02:	6028      	str	r0, [r5, #0]
 8008b04:	6069      	str	r1, [r5, #4]
 8008b06:	60aa      	str	r2, [r5, #8]
 8008b08:	60eb      	str	r3, [r5, #12]
 8008b0a:	8823      	ldrh	r3, [r4, #0]
 8008b0c:	78a2      	ldrb	r2, [r4, #2]
 8008b0e:	822b      	strh	r3, [r5, #16]
 8008b10:	4613      	mov	r3, r2
 8008b12:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8008b14:	687b      	ldr	r3, [r7, #4]
 8008b16:	33d8      	adds	r3, #216	; 0xd8
 8008b18:	4a98      	ldr	r2, [pc, #608]	; (8008d7c <createProblem+0x7ed4>)
 8008b1a:	461c      	mov	r4, r3
 8008b1c:	4613      	mov	r3, r2
 8008b1e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008b20:	6020      	str	r0, [r4, #0]
 8008b22:	6061      	str	r1, [r4, #4]
 8008b24:	60a2      	str	r2, [r4, #8]
 8008b26:	881b      	ldrh	r3, [r3, #0]
 8008b28:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8008b2a:	687b      	ldr	r3, [r7, #4]
 8008b2c:	33cc      	adds	r3, #204	; 0xcc
 8008b2e:	4a94      	ldr	r2, [pc, #592]	; (8008d80 <createProblem+0x7ed8>)
 8008b30:	6810      	ldr	r0, [r2, #0]
 8008b32:	6018      	str	r0, [r3, #0]
			break;
 8008b34:	f011 befe 	b.w	801a934 <createProblem+0x19a8c>
		case 302 :
			strcpy(p->name,"GASTON GRADE PLEASE");
 8008b38:	687b      	ldr	r3, [r7, #4]
 8008b3a:	337c      	adds	r3, #124	; 0x7c
 8008b3c:	4a91      	ldr	r2, [pc, #580]	; (8008d84 <createProblem+0x7edc>)
 8008b3e:	461d      	mov	r5, r3
 8008b40:	4614      	mov	r4, r2
 8008b42:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008b44:	6028      	str	r0, [r5, #0]
 8008b46:	6069      	str	r1, [r5, #4]
 8008b48:	60aa      	str	r2, [r5, #8]
 8008b4a:	60eb      	str	r3, [r5, #12]
 8008b4c:	6820      	ldr	r0, [r4, #0]
 8008b4e:	6128      	str	r0, [r5, #16]
			p->moveSize = 11;
 8008b50:	687b      	ldr	r3, [r7, #4]
 8008b52:	220b      	movs	r2, #11
 8008b54:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,E,E,G,F,H,G,I,E,G,D");
 8008b56:	687b      	ldr	r3, [r7, #4]
 8008b58:	3340      	adds	r3, #64	; 0x40
 8008b5a:	4a8b      	ldr	r2, [pc, #556]	; (8008d88 <createProblem+0x7ee0>)
 8008b5c:	461d      	mov	r5, r3
 8008b5e:	4614      	mov	r4, r2
 8008b60:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008b62:	6028      	str	r0, [r5, #0]
 8008b64:	6069      	str	r1, [r5, #4]
 8008b66:	60aa      	str	r2, [r5, #8]
 8008b68:	60eb      	str	r3, [r5, #12]
 8008b6a:	6820      	ldr	r0, [r4, #0]
 8008b6c:	6128      	str	r0, [r5, #16]
 8008b6e:	88a3      	ldrh	r3, [r4, #4]
 8008b70:	82ab      	strh	r3, [r5, #20]
			strcpy(p->moveNumbers,"5,6,8,9,11,12,14,14,16,17,18");
 8008b72:	687b      	ldr	r3, [r7, #4]
 8008b74:	3304      	adds	r3, #4
 8008b76:	4a85      	ldr	r2, [pc, #532]	; (8008d8c <createProblem+0x7ee4>)
 8008b78:	461d      	mov	r5, r3
 8008b7a:	4614      	mov	r4, r2
 8008b7c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008b7e:	6028      	str	r0, [r5, #0]
 8008b80:	6069      	str	r1, [r5, #4]
 8008b82:	60aa      	str	r2, [r5, #8]
 8008b84:	60eb      	str	r3, [r5, #12]
 8008b86:	cc07      	ldmia	r4!, {r0, r1, r2}
 8008b88:	6128      	str	r0, [r5, #16]
 8008b8a:	6169      	str	r1, [r5, #20]
 8008b8c:	61aa      	str	r2, [r5, #24]
 8008b8e:	7823      	ldrb	r3, [r4, #0]
 8008b90:	772b      	strb	r3, [r5, #28]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,d,e");
 8008b92:	687b      	ldr	r3, [r7, #4]
 8008b94:	33d8      	adds	r3, #216	; 0xd8
 8008b96:	4a7e      	ldr	r2, [pc, #504]	; (8008d90 <createProblem+0x7ee8>)
 8008b98:	461d      	mov	r5, r3
 8008b9a:	4614      	mov	r4, r2
 8008b9c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008b9e:	6028      	str	r0, [r5, #0]
 8008ba0:	6069      	str	r1, [r5, #4]
 8008ba2:	60aa      	str	r2, [r5, #8]
 8008ba4:	60eb      	str	r3, [r5, #12]
 8008ba6:	6820      	ldr	r0, [r4, #0]
 8008ba8:	6128      	str	r0, [r5, #16]
 8008baa:	88a3      	ldrh	r3, [r4, #4]
 8008bac:	82ab      	strh	r3, [r5, #20]
			strcpy(p->grade, "6C+");
 8008bae:	687b      	ldr	r3, [r7, #4]
 8008bb0:	33cc      	adds	r3, #204	; 0xcc
 8008bb2:	4a78      	ldr	r2, [pc, #480]	; (8008d94 <createProblem+0x7eec>)
 8008bb4:	6810      	ldr	r0, [r2, #0]
 8008bb6:	6018      	str	r0, [r3, #0]
			break;
 8008bb8:	f011 bebc 	b.w	801a934 <createProblem+0x19a8c>
		case 303 :
			strcpy(p->name,"BLACK PEPPER");
 8008bbc:	687b      	ldr	r3, [r7, #4]
 8008bbe:	337c      	adds	r3, #124	; 0x7c
 8008bc0:	4a75      	ldr	r2, [pc, #468]	; (8008d98 <createProblem+0x7ef0>)
 8008bc2:	461c      	mov	r4, r3
 8008bc4:	4613      	mov	r3, r2
 8008bc6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008bc8:	6020      	str	r0, [r4, #0]
 8008bca:	6061      	str	r1, [r4, #4]
 8008bcc:	60a2      	str	r2, [r4, #8]
 8008bce:	781b      	ldrb	r3, [r3, #0]
 8008bd0:	7323      	strb	r3, [r4, #12]
			p->moveSize = 7;
 8008bd2:	687b      	ldr	r3, [r7, #4]
 8008bd4:	2207      	movs	r2, #7
 8008bd6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,E,E,A,C,D,D");
 8008bd8:	687b      	ldr	r3, [r7, #4]
 8008bda:	3340      	adds	r3, #64	; 0x40
 8008bdc:	4a6f      	ldr	r2, [pc, #444]	; (8008d9c <createProblem+0x7ef4>)
 8008bde:	461c      	mov	r4, r3
 8008be0:	4613      	mov	r3, r2
 8008be2:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008be4:	6020      	str	r0, [r4, #0]
 8008be6:	6061      	str	r1, [r4, #4]
 8008be8:	60a2      	str	r2, [r4, #8]
 8008bea:	881b      	ldrh	r3, [r3, #0]
 8008bec:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,9,9,13,15,18");
 8008bee:	687b      	ldr	r3, [r7, #4]
 8008bf0:	3304      	adds	r3, #4
 8008bf2:	4a6b      	ldr	r2, [pc, #428]	; (8008da0 <createProblem+0x7ef8>)
 8008bf4:	461d      	mov	r5, r3
 8008bf6:	4614      	mov	r4, r2
 8008bf8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008bfa:	6028      	str	r0, [r5, #0]
 8008bfc:	6069      	str	r1, [r5, #4]
 8008bfe:	60aa      	str	r2, [r5, #8]
 8008c00:	60eb      	str	r3, [r5, #12]
 8008c02:	7823      	ldrb	r3, [r4, #0]
 8008c04:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8008c06:	687b      	ldr	r3, [r7, #4]
 8008c08:	33d8      	adds	r3, #216	; 0xd8
 8008c0a:	4a5c      	ldr	r2, [pc, #368]	; (8008d7c <createProblem+0x7ed4>)
 8008c0c:	461c      	mov	r4, r3
 8008c0e:	4613      	mov	r3, r2
 8008c10:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008c12:	6020      	str	r0, [r4, #0]
 8008c14:	6061      	str	r1, [r4, #4]
 8008c16:	60a2      	str	r2, [r4, #8]
 8008c18:	881b      	ldrh	r3, [r3, #0]
 8008c1a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8008c1c:	687b      	ldr	r3, [r7, #4]
 8008c1e:	33cc      	adds	r3, #204	; 0xcc
 8008c20:	4a60      	ldr	r2, [pc, #384]	; (8008da4 <createProblem+0x7efc>)
 8008c22:	8811      	ldrh	r1, [r2, #0]
 8008c24:	7892      	ldrb	r2, [r2, #2]
 8008c26:	8019      	strh	r1, [r3, #0]
 8008c28:	709a      	strb	r2, [r3, #2]
			break;
 8008c2a:	f011 be83 	b.w	801a934 <createProblem+0x19a8c>
		case 304 :
			strcpy(p->name,"TONE'S THROW");
 8008c2e:	687b      	ldr	r3, [r7, #4]
 8008c30:	337c      	adds	r3, #124	; 0x7c
 8008c32:	4a5d      	ldr	r2, [pc, #372]	; (8008da8 <createProblem+0x7f00>)
 8008c34:	461c      	mov	r4, r3
 8008c36:	4613      	mov	r3, r2
 8008c38:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008c3a:	6020      	str	r0, [r4, #0]
 8008c3c:	6061      	str	r1, [r4, #4]
 8008c3e:	60a2      	str	r2, [r4, #8]
 8008c40:	781b      	ldrb	r3, [r3, #0]
 8008c42:	7323      	strb	r3, [r4, #12]
			p->moveSize = 5;
 8008c44:	687b      	ldr	r3, [r7, #4]
 8008c46:	2205      	movs	r2, #5
 8008c48:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,A,E,A,D");
 8008c4a:	687b      	ldr	r3, [r7, #4]
 8008c4c:	3340      	adds	r3, #64	; 0x40
 8008c4e:	4957      	ldr	r1, [pc, #348]	; (8008dac <createProblem+0x7f04>)
 8008c50:	461a      	mov	r2, r3
 8008c52:	460b      	mov	r3, r1
 8008c54:	cb03      	ldmia	r3!, {r0, r1}
 8008c56:	6010      	str	r0, [r2, #0]
 8008c58:	6051      	str	r1, [r2, #4]
 8008c5a:	881b      	ldrh	r3, [r3, #0]
 8008c5c:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,9,12,14,18");
 8008c5e:	687b      	ldr	r3, [r7, #4]
 8008c60:	3304      	adds	r3, #4
 8008c62:	4a53      	ldr	r2, [pc, #332]	; (8008db0 <createProblem+0x7f08>)
 8008c64:	461c      	mov	r4, r3
 8008c66:	4613      	mov	r3, r2
 8008c68:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008c6a:	6020      	str	r0, [r4, #0]
 8008c6c:	6061      	str	r1, [r4, #4]
 8008c6e:	60a2      	str	r2, [r4, #8]
 8008c70:	781b      	ldrb	r3, [r3, #0]
 8008c72:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8008c74:	687b      	ldr	r3, [r7, #4]
 8008c76:	33d8      	adds	r3, #216	; 0xd8
 8008c78:	494e      	ldr	r1, [pc, #312]	; (8008db4 <createProblem+0x7f0c>)
 8008c7a:	461a      	mov	r2, r3
 8008c7c:	460b      	mov	r3, r1
 8008c7e:	cb03      	ldmia	r3!, {r0, r1}
 8008c80:	6010      	str	r0, [r2, #0]
 8008c82:	6051      	str	r1, [r2, #4]
 8008c84:	881b      	ldrh	r3, [r3, #0]
 8008c86:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C+");
 8008c88:	687b      	ldr	r3, [r7, #4]
 8008c8a:	33cc      	adds	r3, #204	; 0xcc
 8008c8c:	4a41      	ldr	r2, [pc, #260]	; (8008d94 <createProblem+0x7eec>)
 8008c8e:	6810      	ldr	r0, [r2, #0]
 8008c90:	6018      	str	r0, [r3, #0]
			break;
 8008c92:	f011 be4f 	b.w	801a934 <createProblem+0x19a8c>
		case 305 :
			strcpy(p->name,"AGRO-VATED");
 8008c96:	687b      	ldr	r3, [r7, #4]
 8008c98:	337c      	adds	r3, #124	; 0x7c
 8008c9a:	4947      	ldr	r1, [pc, #284]	; (8008db8 <createProblem+0x7f10>)
 8008c9c:	461a      	mov	r2, r3
 8008c9e:	460b      	mov	r3, r1
 8008ca0:	cb03      	ldmia	r3!, {r0, r1}
 8008ca2:	6010      	str	r0, [r2, #0]
 8008ca4:	6051      	str	r1, [r2, #4]
 8008ca6:	8819      	ldrh	r1, [r3, #0]
 8008ca8:	789b      	ldrb	r3, [r3, #2]
 8008caa:	8111      	strh	r1, [r2, #8]
 8008cac:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 8008cae:	687b      	ldr	r3, [r7, #4]
 8008cb0:	2206      	movs	r2, #6
 8008cb2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,E,E,G,I");
 8008cb4:	687b      	ldr	r3, [r7, #4]
 8008cb6:	3340      	adds	r3, #64	; 0x40
 8008cb8:	4a40      	ldr	r2, [pc, #256]	; (8008dbc <createProblem+0x7f14>)
 8008cba:	461c      	mov	r4, r3
 8008cbc:	4613      	mov	r3, r2
 8008cbe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008cc0:	6020      	str	r0, [r4, #0]
 8008cc2:	6061      	str	r1, [r4, #4]
 8008cc4:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,7,8,12,14,18");
 8008cc6:	687b      	ldr	r3, [r7, #4]
 8008cc8:	3304      	adds	r3, #4
 8008cca:	4a3d      	ldr	r2, [pc, #244]	; (8008dc0 <createProblem+0x7f18>)
 8008ccc:	461c      	mov	r4, r3
 8008cce:	4613      	mov	r3, r2
 8008cd0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008cd2:	6020      	str	r0, [r4, #0]
 8008cd4:	6061      	str	r1, [r4, #4]
 8008cd6:	60a2      	str	r2, [r4, #8]
 8008cd8:	881a      	ldrh	r2, [r3, #0]
 8008cda:	789b      	ldrb	r3, [r3, #2]
 8008cdc:	81a2      	strh	r2, [r4, #12]
 8008cde:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8008ce0:	687b      	ldr	r3, [r7, #4]
 8008ce2:	33d8      	adds	r3, #216	; 0xd8
 8008ce4:	4a37      	ldr	r2, [pc, #220]	; (8008dc4 <createProblem+0x7f1c>)
 8008ce6:	461c      	mov	r4, r3
 8008ce8:	4613      	mov	r3, r2
 8008cea:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008cec:	6020      	str	r0, [r4, #0]
 8008cee:	6061      	str	r1, [r4, #4]
 8008cf0:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8008cf2:	687b      	ldr	r3, [r7, #4]
 8008cf4:	33cc      	adds	r3, #204	; 0xcc
 8008cf6:	4a34      	ldr	r2, [pc, #208]	; (8008dc8 <createProblem+0x7f20>)
 8008cf8:	6810      	ldr	r0, [r2, #0]
 8008cfa:	6018      	str	r0, [r3, #0]
			break;
 8008cfc:	f011 be1a 	b.w	801a934 <createProblem+0x19a8c>
		case 306 :
			strcpy(p->name,"TIGELLA OF DREAM");
 8008d00:	687b      	ldr	r3, [r7, #4]
 8008d02:	337c      	adds	r3, #124	; 0x7c
 8008d04:	4a31      	ldr	r2, [pc, #196]	; (8008dcc <createProblem+0x7f24>)
 8008d06:	461d      	mov	r5, r3
 8008d08:	4614      	mov	r4, r2
 8008d0a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008d0c:	6028      	str	r0, [r5, #0]
 8008d0e:	6069      	str	r1, [r5, #4]
 8008d10:	60aa      	str	r2, [r5, #8]
 8008d12:	60eb      	str	r3, [r5, #12]
 8008d14:	7823      	ldrb	r3, [r4, #0]
 8008d16:	742b      	strb	r3, [r5, #16]
			p->moveSize = 5;
 8008d18:	687b      	ldr	r3, [r7, #4]
 8008d1a:	2205      	movs	r2, #5
 8008d1c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,F,C,E,D");
 8008d1e:	687b      	ldr	r3, [r7, #4]
 8008d20:	3340      	adds	r3, #64	; 0x40
 8008d22:	492b      	ldr	r1, [pc, #172]	; (8008dd0 <createProblem+0x7f28>)
 8008d24:	461a      	mov	r2, r3
 8008d26:	460b      	mov	r3, r1
 8008d28:	cb03      	ldmia	r3!, {r0, r1}
 8008d2a:	6010      	str	r0, [r2, #0]
 8008d2c:	6051      	str	r1, [r2, #4]
 8008d2e:	881b      	ldrh	r3, [r3, #0]
 8008d30:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,11,13,6,18");
 8008d32:	687b      	ldr	r3, [r7, #4]
 8008d34:	3304      	adds	r3, #4
 8008d36:	4a27      	ldr	r2, [pc, #156]	; (8008dd4 <createProblem+0x7f2c>)
 8008d38:	461c      	mov	r4, r3
 8008d3a:	4613      	mov	r3, r2
 8008d3c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008d3e:	6020      	str	r0, [r4, #0]
 8008d40:	6061      	str	r1, [r4, #4]
 8008d42:	60a2      	str	r2, [r4, #8]
 8008d44:	781b      	ldrb	r3, [r3, #0]
 8008d46:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8008d48:	687b      	ldr	r3, [r7, #4]
 8008d4a:	33d8      	adds	r3, #216	; 0xd8
 8008d4c:	4919      	ldr	r1, [pc, #100]	; (8008db4 <createProblem+0x7f0c>)
 8008d4e:	461a      	mov	r2, r3
 8008d50:	460b      	mov	r3, r1
 8008d52:	cb03      	ldmia	r3!, {r0, r1}
 8008d54:	6010      	str	r0, [r2, #0]
 8008d56:	6051      	str	r1, [r2, #4]
 8008d58:	881b      	ldrh	r3, [r3, #0]
 8008d5a:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 8008d5c:	687b      	ldr	r3, [r7, #4]
 8008d5e:	33cc      	adds	r3, #204	; 0xcc
 8008d60:	4a10      	ldr	r2, [pc, #64]	; (8008da4 <createProblem+0x7efc>)
 8008d62:	8811      	ldrh	r1, [r2, #0]
 8008d64:	7892      	ldrb	r2, [r2, #2]
 8008d66:	8019      	strh	r1, [r3, #0]
 8008d68:	709a      	strb	r2, [r3, #2]
			break;
 8008d6a:	f011 bde3 	b.w	801a934 <createProblem+0x19a8c>
 8008d6e:	bf00      	nop
 8008d70:	08023394 	.word	0x08023394
 8008d74:	080233a4 	.word	0x080233a4
 8008d78:	080233b4 	.word	0x080233b4
 8008d7c:	08020a14 	.word	0x08020a14
 8008d80:	08020830 	.word	0x08020830
 8008d84:	080233c8 	.word	0x080233c8
 8008d88:	080233dc 	.word	0x080233dc
 8008d8c:	080233f4 	.word	0x080233f4
 8008d90:	08021f98 	.word	0x08021f98
 8008d94:	08020928 	.word	0x08020928
 8008d98:	08023414 	.word	0x08023414
 8008d9c:	08023424 	.word	0x08023424
 8008da0:	08023434 	.word	0x08023434
 8008da4:	08020874 	.word	0x08020874
 8008da8:	08023448 	.word	0x08023448
 8008dac:	08023458 	.word	0x08023458
 8008db0:	080222e4 	.word	0x080222e4
 8008db4:	080208a0 	.word	0x080208a0
 8008db8:	08023464 	.word	0x08023464
 8008dbc:	08023470 	.word	0x08023470
 8008dc0:	0802347c 	.word	0x0802347c
 8008dc4:	0802091c 	.word	0x0802091c
 8008dc8:	080209a4 	.word	0x080209a4
 8008dcc:	0802348c 	.word	0x0802348c
 8008dd0:	080234a0 	.word	0x080234a0
 8008dd4:	080234ac 	.word	0x080234ac
		case 307 :
			strcpy(p->name,"BLACK SHEEP");
 8008dd8:	687b      	ldr	r3, [r7, #4]
 8008dda:	337c      	adds	r3, #124	; 0x7c
 8008ddc:	4aad      	ldr	r2, [pc, #692]	; (8009094 <createProblem+0x81ec>)
 8008dde:	461c      	mov	r4, r3
 8008de0:	4613      	mov	r3, r2
 8008de2:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008de4:	6020      	str	r0, [r4, #0]
 8008de6:	6061      	str	r1, [r4, #4]
 8008de8:	60a2      	str	r2, [r4, #8]
			p->moveSize = 8;
 8008dea:	687b      	ldr	r3, [r7, #4]
 8008dec:	2208      	movs	r2, #8
 8008dee:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,H,G,H,I,C,I");
 8008df0:	687b      	ldr	r3, [r7, #4]
 8008df2:	3340      	adds	r3, #64	; 0x40
 8008df4:	4aa8      	ldr	r2, [pc, #672]	; (8009098 <createProblem+0x81f0>)
 8008df6:	461c      	mov	r4, r3
 8008df8:	4615      	mov	r5, r2
 8008dfa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008dfc:	6020      	str	r0, [r4, #0]
 8008dfe:	6061      	str	r1, [r4, #4]
 8008e00:	60a2      	str	r2, [r4, #8]
 8008e02:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,13,10,9,8,7,8,18");
 8008e04:	687b      	ldr	r3, [r7, #4]
 8008e06:	3304      	adds	r3, #4
 8008e08:	4aa4      	ldr	r2, [pc, #656]	; (800909c <createProblem+0x81f4>)
 8008e0a:	461d      	mov	r5, r3
 8008e0c:	4614      	mov	r4, r2
 8008e0e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008e10:	6028      	str	r0, [r5, #0]
 8008e12:	6069      	str	r1, [r5, #4]
 8008e14:	60aa      	str	r2, [r5, #8]
 8008e16:	60eb      	str	r3, [r5, #12]
 8008e18:	8823      	ldrh	r3, [r4, #0]
 8008e1a:	78a2      	ldrb	r2, [r4, #2]
 8008e1c:	822b      	strh	r3, [r5, #16]
 8008e1e:	4613      	mov	r3, r2
 8008e20:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8008e22:	687b      	ldr	r3, [r7, #4]
 8008e24:	33d8      	adds	r3, #216	; 0xd8
 8008e26:	4a9e      	ldr	r2, [pc, #632]	; (80090a0 <createProblem+0x81f8>)
 8008e28:	461c      	mov	r4, r3
 8008e2a:	4615      	mov	r5, r2
 8008e2c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008e2e:	6020      	str	r0, [r4, #0]
 8008e30:	6061      	str	r1, [r4, #4]
 8008e32:	60a2      	str	r2, [r4, #8]
 8008e34:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8008e36:	687b      	ldr	r3, [r7, #4]
 8008e38:	33cc      	adds	r3, #204	; 0xcc
 8008e3a:	4a9a      	ldr	r2, [pc, #616]	; (80090a4 <createProblem+0x81fc>)
 8008e3c:	6810      	ldr	r0, [r2, #0]
 8008e3e:	6018      	str	r0, [r3, #0]
			break;
 8008e40:	f011 bd78 	b.w	801a934 <createProblem+0x19a8c>
		case 308 :
			strcpy(p->name,"BABA BLACK SHEEP");
 8008e44:	687b      	ldr	r3, [r7, #4]
 8008e46:	337c      	adds	r3, #124	; 0x7c
 8008e48:	4a97      	ldr	r2, [pc, #604]	; (80090a8 <createProblem+0x8200>)
 8008e4a:	461d      	mov	r5, r3
 8008e4c:	4614      	mov	r4, r2
 8008e4e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008e50:	6028      	str	r0, [r5, #0]
 8008e52:	6069      	str	r1, [r5, #4]
 8008e54:	60aa      	str	r2, [r5, #8]
 8008e56:	60eb      	str	r3, [r5, #12]
 8008e58:	7823      	ldrb	r3, [r4, #0]
 8008e5a:	742b      	strb	r3, [r5, #16]
			p->moveSize = 10;
 8008e5c:	687b      	ldr	r3, [r7, #4]
 8008e5e:	220a      	movs	r2, #10
 8008e60:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,C,I,H,G,H,I,C,I");
 8008e62:	687b      	ldr	r3, [r7, #4]
 8008e64:	3340      	adds	r3, #64	; 0x40
 8008e66:	4a91      	ldr	r2, [pc, #580]	; (80090ac <createProblem+0x8204>)
 8008e68:	461d      	mov	r5, r3
 8008e6a:	4614      	mov	r4, r2
 8008e6c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008e6e:	6028      	str	r0, [r5, #0]
 8008e70:	6069      	str	r1, [r5, #4]
 8008e72:	60aa      	str	r2, [r5, #8]
 8008e74:	60eb      	str	r3, [r5, #12]
 8008e76:	6820      	ldr	r0, [r4, #0]
 8008e78:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"6,4,13,14,10,9,8,7,8,18");
 8008e7a:	687b      	ldr	r3, [r7, #4]
 8008e7c:	3304      	adds	r3, #4
 8008e7e:	4a8c      	ldr	r2, [pc, #560]	; (80090b0 <createProblem+0x8208>)
 8008e80:	461d      	mov	r5, r3
 8008e82:	4614      	mov	r4, r2
 8008e84:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008e86:	6028      	str	r0, [r5, #0]
 8008e88:	6069      	str	r1, [r5, #4]
 8008e8a:	60aa      	str	r2, [r5, #8]
 8008e8c:	60eb      	str	r3, [r5, #12]
 8008e8e:	cc03      	ldmia	r4!, {r0, r1}
 8008e90:	6128      	str	r0, [r5, #16]
 8008e92:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,e");
 8008e94:	687b      	ldr	r3, [r7, #4]
 8008e96:	33d8      	adds	r3, #216	; 0xd8
 8008e98:	4a86      	ldr	r2, [pc, #536]	; (80090b4 <createProblem+0x820c>)
 8008e9a:	461d      	mov	r5, r3
 8008e9c:	4614      	mov	r4, r2
 8008e9e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008ea0:	6028      	str	r0, [r5, #0]
 8008ea2:	6069      	str	r1, [r5, #4]
 8008ea4:	60aa      	str	r2, [r5, #8]
 8008ea6:	60eb      	str	r3, [r5, #12]
 8008ea8:	6820      	ldr	r0, [r4, #0]
 8008eaa:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "7A");
 8008eac:	687b      	ldr	r3, [r7, #4]
 8008eae:	33cc      	adds	r3, #204	; 0xcc
 8008eb0:	4a81      	ldr	r2, [pc, #516]	; (80090b8 <createProblem+0x8210>)
 8008eb2:	8811      	ldrh	r1, [r2, #0]
 8008eb4:	7892      	ldrb	r2, [r2, #2]
 8008eb6:	8019      	strh	r1, [r3, #0]
 8008eb8:	709a      	strb	r2, [r3, #2]
			break;
 8008eba:	f011 bd3b 	b.w	801a934 <createProblem+0x19a8c>
		case 309 :
			strcpy(p->name,"SACRED COW");
 8008ebe:	687b      	ldr	r3, [r7, #4]
 8008ec0:	337c      	adds	r3, #124	; 0x7c
 8008ec2:	497e      	ldr	r1, [pc, #504]	; (80090bc <createProblem+0x8214>)
 8008ec4:	461a      	mov	r2, r3
 8008ec6:	460b      	mov	r3, r1
 8008ec8:	cb03      	ldmia	r3!, {r0, r1}
 8008eca:	6010      	str	r0, [r2, #0]
 8008ecc:	6051      	str	r1, [r2, #4]
 8008ece:	8819      	ldrh	r1, [r3, #0]
 8008ed0:	789b      	ldrb	r3, [r3, #2]
 8008ed2:	8111      	strh	r1, [r2, #8]
 8008ed4:	7293      	strb	r3, [r2, #10]
			p->moveSize = 11;
 8008ed6:	687b      	ldr	r3, [r7, #4]
 8008ed8:	220b      	movs	r2, #11
 8008eda:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,I,C,A,C,H,G,H,I,I");
 8008edc:	687b      	ldr	r3, [r7, #4]
 8008ede:	3340      	adds	r3, #64	; 0x40
 8008ee0:	4a77      	ldr	r2, [pc, #476]	; (80090c0 <createProblem+0x8218>)
 8008ee2:	461d      	mov	r5, r3
 8008ee4:	4614      	mov	r4, r2
 8008ee6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008ee8:	6028      	str	r0, [r5, #0]
 8008eea:	6069      	str	r1, [r5, #4]
 8008eec:	60aa      	str	r2, [r5, #8]
 8008eee:	60eb      	str	r3, [r5, #12]
 8008ef0:	6820      	ldr	r0, [r4, #0]
 8008ef2:	6128      	str	r0, [r5, #16]
 8008ef4:	88a3      	ldrh	r3, [r4, #4]
 8008ef6:	82ab      	strh	r3, [r5, #20]
			strcpy(p->moveNumbers,"6,4,14,13,9,8,10,9,8,7,18");
 8008ef8:	687b      	ldr	r3, [r7, #4]
 8008efa:	3304      	adds	r3, #4
 8008efc:	4a71      	ldr	r2, [pc, #452]	; (80090c4 <createProblem+0x821c>)
 8008efe:	461d      	mov	r5, r3
 8008f00:	4614      	mov	r4, r2
 8008f02:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008f04:	6028      	str	r0, [r5, #0]
 8008f06:	6069      	str	r1, [r5, #4]
 8008f08:	60aa      	str	r2, [r5, #8]
 8008f0a:	60eb      	str	r3, [r5, #12]
 8008f0c:	cc03      	ldmia	r4!, {r0, r1}
 8008f0e:	6128      	str	r0, [r5, #16]
 8008f10:	6169      	str	r1, [r5, #20]
 8008f12:	8823      	ldrh	r3, [r4, #0]
 8008f14:	832b      	strh	r3, [r5, #24]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,d,e");
 8008f16:	687b      	ldr	r3, [r7, #4]
 8008f18:	33d8      	adds	r3, #216	; 0xd8
 8008f1a:	4a6b      	ldr	r2, [pc, #428]	; (80090c8 <createProblem+0x8220>)
 8008f1c:	461d      	mov	r5, r3
 8008f1e:	4614      	mov	r4, r2
 8008f20:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008f22:	6028      	str	r0, [r5, #0]
 8008f24:	6069      	str	r1, [r5, #4]
 8008f26:	60aa      	str	r2, [r5, #8]
 8008f28:	60eb      	str	r3, [r5, #12]
 8008f2a:	6820      	ldr	r0, [r4, #0]
 8008f2c:	6128      	str	r0, [r5, #16]
 8008f2e:	88a3      	ldrh	r3, [r4, #4]
 8008f30:	82ab      	strh	r3, [r5, #20]
			strcpy(p->grade, "7A");
 8008f32:	687b      	ldr	r3, [r7, #4]
 8008f34:	33cc      	adds	r3, #204	; 0xcc
 8008f36:	4a60      	ldr	r2, [pc, #384]	; (80090b8 <createProblem+0x8210>)
 8008f38:	8811      	ldrh	r1, [r2, #0]
 8008f3a:	7892      	ldrb	r2, [r2, #2]
 8008f3c:	8019      	strh	r1, [r3, #0]
 8008f3e:	709a      	strb	r2, [r3, #2]
			break;
 8008f40:	f011 bcf8 	b.w	801a934 <createProblem+0x19a8c>
		case 31 :
			strcpy(p->name,"ACG8");
 8008f44:	687b      	ldr	r3, [r7, #4]
 8008f46:	337c      	adds	r3, #124	; 0x7c
 8008f48:	4a60      	ldr	r2, [pc, #384]	; (80090cc <createProblem+0x8224>)
 8008f4a:	6810      	ldr	r0, [r2, #0]
 8008f4c:	6018      	str	r0, [r3, #0]
 8008f4e:	7912      	ldrb	r2, [r2, #4]
 8008f50:	711a      	strb	r2, [r3, #4]
			p->moveSize = 7;
 8008f52:	687b      	ldr	r3, [r7, #4]
 8008f54:	2207      	movs	r2, #7
 8008f56:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,E,A,E,D");
 8008f58:	687b      	ldr	r3, [r7, #4]
 8008f5a:	3340      	adds	r3, #64	; 0x40
 8008f5c:	4a5c      	ldr	r2, [pc, #368]	; (80090d0 <createProblem+0x8228>)
 8008f5e:	461c      	mov	r4, r3
 8008f60:	4613      	mov	r3, r2
 8008f62:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008f64:	6020      	str	r0, [r4, #0]
 8008f66:	6061      	str	r1, [r4, #4]
 8008f68:	60a2      	str	r2, [r4, #8]
 8008f6a:	881b      	ldrh	r3, [r3, #0]
 8008f6c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,8,12,14,14,18");
 8008f6e:	687b      	ldr	r3, [r7, #4]
 8008f70:	3304      	adds	r3, #4
 8008f72:	4a58      	ldr	r2, [pc, #352]	; (80090d4 <createProblem+0x822c>)
 8008f74:	461d      	mov	r5, r3
 8008f76:	4614      	mov	r4, r2
 8008f78:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008f7a:	6028      	str	r0, [r5, #0]
 8008f7c:	6069      	str	r1, [r5, #4]
 8008f7e:	60aa      	str	r2, [r5, #8]
 8008f80:	60eb      	str	r3, [r5, #12]
 8008f82:	8823      	ldrh	r3, [r4, #0]
 8008f84:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8008f86:	687b      	ldr	r3, [r7, #4]
 8008f88:	33d8      	adds	r3, #216	; 0xd8
 8008f8a:	4a53      	ldr	r2, [pc, #332]	; (80090d8 <createProblem+0x8230>)
 8008f8c:	461c      	mov	r4, r3
 8008f8e:	4613      	mov	r3, r2
 8008f90:	cb07      	ldmia	r3!, {r0, r1, r2}
 8008f92:	6020      	str	r0, [r4, #0]
 8008f94:	6061      	str	r1, [r4, #4]
 8008f96:	60a2      	str	r2, [r4, #8]
 8008f98:	881b      	ldrh	r3, [r3, #0]
 8008f9a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8008f9c:	687b      	ldr	r3, [r7, #4]
 8008f9e:	33cc      	adds	r3, #204	; 0xcc
 8008fa0:	4a40      	ldr	r2, [pc, #256]	; (80090a4 <createProblem+0x81fc>)
 8008fa2:	6810      	ldr	r0, [r2, #0]
 8008fa4:	6018      	str	r0, [r3, #0]
			break;
 8008fa6:	f011 bcc5 	b.w	801a934 <createProblem+0x19a8c>
		case 310 :
			strcpy(p->name,"MARCUS IS THE PROBLEM");
 8008faa:	687b      	ldr	r3, [r7, #4]
 8008fac:	337c      	adds	r3, #124	; 0x7c
 8008fae:	4a4b      	ldr	r2, [pc, #300]	; (80090dc <createProblem+0x8234>)
 8008fb0:	461d      	mov	r5, r3
 8008fb2:	4614      	mov	r4, r2
 8008fb4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008fb6:	6028      	str	r0, [r5, #0]
 8008fb8:	6069      	str	r1, [r5, #4]
 8008fba:	60aa      	str	r2, [r5, #8]
 8008fbc:	60eb      	str	r3, [r5, #12]
 8008fbe:	6820      	ldr	r0, [r4, #0]
 8008fc0:	6128      	str	r0, [r5, #16]
 8008fc2:	88a3      	ldrh	r3, [r4, #4]
 8008fc4:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 8;
 8008fc6:	687b      	ldr	r3, [r7, #4]
 8008fc8:	2208      	movs	r2, #8
 8008fca:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,G,D,E,A,E,D");
 8008fcc:	687b      	ldr	r3, [r7, #4]
 8008fce:	3340      	adds	r3, #64	; 0x40
 8008fd0:	4a43      	ldr	r2, [pc, #268]	; (80090e0 <createProblem+0x8238>)
 8008fd2:	461c      	mov	r4, r3
 8008fd4:	4615      	mov	r5, r2
 8008fd6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8008fd8:	6020      	str	r0, [r4, #0]
 8008fda:	6061      	str	r1, [r4, #4]
 8008fdc:	60a2      	str	r2, [r4, #8]
 8008fde:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,9,11,12,14,16,18");
 8008fe0:	687b      	ldr	r3, [r7, #4]
 8008fe2:	3304      	adds	r3, #4
 8008fe4:	4a3f      	ldr	r2, [pc, #252]	; (80090e4 <createProblem+0x823c>)
 8008fe6:	461d      	mov	r5, r3
 8008fe8:	4614      	mov	r4, r2
 8008fea:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8008fec:	6028      	str	r0, [r5, #0]
 8008fee:	6069      	str	r1, [r5, #4]
 8008ff0:	60aa      	str	r2, [r5, #8]
 8008ff2:	60eb      	str	r3, [r5, #12]
 8008ff4:	6820      	ldr	r0, [r4, #0]
 8008ff6:	6128      	str	r0, [r5, #16]
 8008ff8:	7923      	ldrb	r3, [r4, #4]
 8008ffa:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8008ffc:	687b      	ldr	r3, [r7, #4]
 8008ffe:	33d8      	adds	r3, #216	; 0xd8
 8009000:	4a39      	ldr	r2, [pc, #228]	; (80090e8 <createProblem+0x8240>)
 8009002:	461c      	mov	r4, r3
 8009004:	4615      	mov	r5, r2
 8009006:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009008:	6020      	str	r0, [r4, #0]
 800900a:	6061      	str	r1, [r4, #4]
 800900c:	60a2      	str	r2, [r4, #8]
 800900e:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8009010:	687b      	ldr	r3, [r7, #4]
 8009012:	33cc      	adds	r3, #204	; 0xcc
 8009014:	4a35      	ldr	r2, [pc, #212]	; (80090ec <createProblem+0x8244>)
 8009016:	8811      	ldrh	r1, [r2, #0]
 8009018:	7892      	ldrb	r2, [r2, #2]
 800901a:	8019      	strh	r1, [r3, #0]
 800901c:	709a      	strb	r2, [r3, #2]
			break;
 800901e:	f011 bc89 	b.w	801a934 <createProblem+0x19a8c>
		case 311 :
			strcpy(p->name,"INSANE IN THE BRAIN");
 8009022:	687b      	ldr	r3, [r7, #4]
 8009024:	337c      	adds	r3, #124	; 0x7c
 8009026:	4a32      	ldr	r2, [pc, #200]	; (80090f0 <createProblem+0x8248>)
 8009028:	461d      	mov	r5, r3
 800902a:	4614      	mov	r4, r2
 800902c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800902e:	6028      	str	r0, [r5, #0]
 8009030:	6069      	str	r1, [r5, #4]
 8009032:	60aa      	str	r2, [r5, #8]
 8009034:	60eb      	str	r3, [r5, #12]
 8009036:	6820      	ldr	r0, [r4, #0]
 8009038:	6128      	str	r0, [r5, #16]
			p->moveSize = 7;
 800903a:	687b      	ldr	r3, [r7, #4]
 800903c:	2207      	movs	r2, #7
 800903e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,E,B,A,D");
 8009040:	687b      	ldr	r3, [r7, #4]
 8009042:	3340      	adds	r3, #64	; 0x40
 8009044:	4a2b      	ldr	r2, [pc, #172]	; (80090f4 <createProblem+0x824c>)
 8009046:	461c      	mov	r4, r3
 8009048:	4613      	mov	r3, r2
 800904a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800904c:	6020      	str	r0, [r4, #0]
 800904e:	6061      	str	r1, [r4, #4]
 8009050:	60a2      	str	r2, [r4, #8]
 8009052:	881b      	ldrh	r3, [r3, #0]
 8009054:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,12,8,10,14,18");
 8009056:	687b      	ldr	r3, [r7, #4]
 8009058:	3304      	adds	r3, #4
 800905a:	4a27      	ldr	r2, [pc, #156]	; (80090f8 <createProblem+0x8250>)
 800905c:	461d      	mov	r5, r3
 800905e:	4614      	mov	r4, r2
 8009060:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009062:	6028      	str	r0, [r5, #0]
 8009064:	6069      	str	r1, [r5, #4]
 8009066:	60aa      	str	r2, [r5, #8]
 8009068:	60eb      	str	r3, [r5, #12]
 800906a:	8823      	ldrh	r3, [r4, #0]
 800906c:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800906e:	687b      	ldr	r3, [r7, #4]
 8009070:	33d8      	adds	r3, #216	; 0xd8
 8009072:	4a19      	ldr	r2, [pc, #100]	; (80090d8 <createProblem+0x8230>)
 8009074:	461c      	mov	r4, r3
 8009076:	4613      	mov	r3, r2
 8009078:	cb07      	ldmia	r3!, {r0, r1, r2}
 800907a:	6020      	str	r0, [r4, #0]
 800907c:	6061      	str	r1, [r4, #4]
 800907e:	60a2      	str	r2, [r4, #8]
 8009080:	881b      	ldrh	r3, [r3, #0]
 8009082:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8009084:	687b      	ldr	r3, [r7, #4]
 8009086:	33cc      	adds	r3, #204	; 0xcc
 8009088:	4a06      	ldr	r2, [pc, #24]	; (80090a4 <createProblem+0x81fc>)
 800908a:	6810      	ldr	r0, [r2, #0]
 800908c:	6018      	str	r0, [r3, #0]
			break;
 800908e:	f011 bc51 	b.w	801a934 <createProblem+0x19a8c>
 8009092:	bf00      	nop
 8009094:	080234bc 	.word	0x080234bc
 8009098:	080234c8 	.word	0x080234c8
 800909c:	080234d8 	.word	0x080234d8
 80090a0:	080209d8 	.word	0x080209d8
 80090a4:	08020830 	.word	0x08020830
 80090a8:	080234ec 	.word	0x080234ec
 80090ac:	08023500 	.word	0x08023500
 80090b0:	08023514 	.word	0x08023514
 80090b4:	08020b7c 	.word	0x08020b7c
 80090b8:	08020874 	.word	0x08020874
 80090bc:	0802352c 	.word	0x0802352c
 80090c0:	08023538 	.word	0x08023538
 80090c4:	08023550 	.word	0x08023550
 80090c8:	08021f98 	.word	0x08021f98
 80090cc:	0802356c 	.word	0x0802356c
 80090d0:	08023574 	.word	0x08023574
 80090d4:	08023584 	.word	0x08023584
 80090d8:	08020820 	.word	0x08020820
 80090dc:	08023598 	.word	0x08023598
 80090e0:	080235b0 	.word	0x080235b0
 80090e4:	080235c0 	.word	0x080235c0
 80090e8:	08020a4c 	.word	0x08020a4c
 80090ec:	080208f0 	.word	0x080208f0
 80090f0:	080235d8 	.word	0x080235d8
 80090f4:	080235ec 	.word	0x080235ec
 80090f8:	080235fc 	.word	0x080235fc
		case 312 :
			strcpy(p->name,"VORPAL SWORD");
 80090fc:	687b      	ldr	r3, [r7, #4]
 80090fe:	337c      	adds	r3, #124	; 0x7c
 8009100:	4abf      	ldr	r2, [pc, #764]	; (8009400 <createProblem+0x8558>)
 8009102:	461c      	mov	r4, r3
 8009104:	4613      	mov	r3, r2
 8009106:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009108:	6020      	str	r0, [r4, #0]
 800910a:	6061      	str	r1, [r4, #4]
 800910c:	60a2      	str	r2, [r4, #8]
 800910e:	781b      	ldrb	r3, [r3, #0]
 8009110:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 8009112:	687b      	ldr	r3, [r7, #4]
 8009114:	2206      	movs	r2, #6
 8009116:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,G,H,H,I");
 8009118:	687b      	ldr	r3, [r7, #4]
 800911a:	3340      	adds	r3, #64	; 0x40
 800911c:	4ab9      	ldr	r2, [pc, #740]	; (8009404 <createProblem+0x855c>)
 800911e:	461c      	mov	r4, r3
 8009120:	4613      	mov	r3, r2
 8009122:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009124:	6020      	str	r0, [r4, #0]
 8009126:	6061      	str	r1, [r4, #4]
 8009128:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,9,12,16,18");
 800912a:	687b      	ldr	r3, [r7, #4]
 800912c:	3304      	adds	r3, #4
 800912e:	4ab6      	ldr	r2, [pc, #728]	; (8009408 <createProblem+0x8560>)
 8009130:	461c      	mov	r4, r3
 8009132:	4613      	mov	r3, r2
 8009134:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009136:	6020      	str	r0, [r4, #0]
 8009138:	6061      	str	r1, [r4, #4]
 800913a:	60a2      	str	r2, [r4, #8]
 800913c:	881a      	ldrh	r2, [r3, #0]
 800913e:	789b      	ldrb	r3, [r3, #2]
 8009140:	81a2      	strh	r2, [r4, #12]
 8009142:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8009144:	687b      	ldr	r3, [r7, #4]
 8009146:	33d8      	adds	r3, #216	; 0xd8
 8009148:	4ab0      	ldr	r2, [pc, #704]	; (800940c <createProblem+0x8564>)
 800914a:	461c      	mov	r4, r3
 800914c:	4613      	mov	r3, r2
 800914e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009150:	6020      	str	r0, [r4, #0]
 8009152:	6061      	str	r1, [r4, #4]
 8009154:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8009156:	687b      	ldr	r3, [r7, #4]
 8009158:	33cc      	adds	r3, #204	; 0xcc
 800915a:	4aad      	ldr	r2, [pc, #692]	; (8009410 <createProblem+0x8568>)
 800915c:	6810      	ldr	r0, [r2, #0]
 800915e:	6018      	str	r0, [r3, #0]
			break;
 8009160:	f011 bbe8 	b.w	801a934 <createProblem+0x19a8c>
		case 313 :
			strcpy(p->name,"BELLE NOIRE");
 8009164:	687b      	ldr	r3, [r7, #4]
 8009166:	337c      	adds	r3, #124	; 0x7c
 8009168:	4aaa      	ldr	r2, [pc, #680]	; (8009414 <createProblem+0x856c>)
 800916a:	461c      	mov	r4, r3
 800916c:	4613      	mov	r3, r2
 800916e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009170:	6020      	str	r0, [r4, #0]
 8009172:	6061      	str	r1, [r4, #4]
 8009174:	60a2      	str	r2, [r4, #8]
			p->moveSize = 7;
 8009176:	687b      	ldr	r3, [r7, #4]
 8009178:	2207      	movs	r2, #7
 800917a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,E,J,I,I");
 800917c:	687b      	ldr	r3, [r7, #4]
 800917e:	3340      	adds	r3, #64	; 0x40
 8009180:	4aa5      	ldr	r2, [pc, #660]	; (8009418 <createProblem+0x8570>)
 8009182:	461c      	mov	r4, r3
 8009184:	4613      	mov	r3, r2
 8009186:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009188:	6020      	str	r0, [r4, #0]
 800918a:	6061      	str	r1, [r4, #4]
 800918c:	60a2      	str	r2, [r4, #8]
 800918e:	881b      	ldrh	r3, [r3, #0]
 8009190:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,9,12,13,15,18");
 8009192:	687b      	ldr	r3, [r7, #4]
 8009194:	3304      	adds	r3, #4
 8009196:	4aa1      	ldr	r2, [pc, #644]	; (800941c <createProblem+0x8574>)
 8009198:	461d      	mov	r5, r3
 800919a:	4614      	mov	r4, r2
 800919c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800919e:	6028      	str	r0, [r5, #0]
 80091a0:	6069      	str	r1, [r5, #4]
 80091a2:	60aa      	str	r2, [r5, #8]
 80091a4:	60eb      	str	r3, [r5, #12]
 80091a6:	8823      	ldrh	r3, [r4, #0]
 80091a8:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80091aa:	687b      	ldr	r3, [r7, #4]
 80091ac:	33d8      	adds	r3, #216	; 0xd8
 80091ae:	4a9c      	ldr	r2, [pc, #624]	; (8009420 <createProblem+0x8578>)
 80091b0:	461c      	mov	r4, r3
 80091b2:	4613      	mov	r3, r2
 80091b4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80091b6:	6020      	str	r0, [r4, #0]
 80091b8:	6061      	str	r1, [r4, #4]
 80091ba:	60a2      	str	r2, [r4, #8]
 80091bc:	881b      	ldrh	r3, [r3, #0]
 80091be:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 80091c0:	687b      	ldr	r3, [r7, #4]
 80091c2:	33cc      	adds	r3, #204	; 0xcc
 80091c4:	4a92      	ldr	r2, [pc, #584]	; (8009410 <createProblem+0x8568>)
 80091c6:	6810      	ldr	r0, [r2, #0]
 80091c8:	6018      	str	r0, [r3, #0]
			break;
 80091ca:	f011 bbb3 	b.w	801a934 <createProblem+0x19a8c>
		case 314 :
			strcpy(p->name,"WINGSPAN");
 80091ce:	687b      	ldr	r3, [r7, #4]
 80091d0:	337c      	adds	r3, #124	; 0x7c
 80091d2:	4994      	ldr	r1, [pc, #592]	; (8009424 <createProblem+0x857c>)
 80091d4:	461a      	mov	r2, r3
 80091d6:	460b      	mov	r3, r1
 80091d8:	cb03      	ldmia	r3!, {r0, r1}
 80091da:	6010      	str	r0, [r2, #0]
 80091dc:	6051      	str	r1, [r2, #4]
 80091de:	781b      	ldrb	r3, [r3, #0]
 80091e0:	7213      	strb	r3, [r2, #8]
			p->moveSize = 5;
 80091e2:	687b      	ldr	r3, [r7, #4]
 80091e4:	2205      	movs	r2, #5
 80091e6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,C,F,A,D");
 80091e8:	687b      	ldr	r3, [r7, #4]
 80091ea:	3340      	adds	r3, #64	; 0x40
 80091ec:	498e      	ldr	r1, [pc, #568]	; (8009428 <createProblem+0x8580>)
 80091ee:	461a      	mov	r2, r3
 80091f0:	460b      	mov	r3, r1
 80091f2:	cb03      	ldmia	r3!, {r0, r1}
 80091f4:	6010      	str	r0, [r2, #0]
 80091f6:	6051      	str	r1, [r2, #4]
 80091f8:	881b      	ldrh	r3, [r3, #0]
 80091fa:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,8,11,14,18");
 80091fc:	687b      	ldr	r3, [r7, #4]
 80091fe:	3304      	adds	r3, #4
 8009200:	4a8a      	ldr	r2, [pc, #552]	; (800942c <createProblem+0x8584>)
 8009202:	461c      	mov	r4, r3
 8009204:	4613      	mov	r3, r2
 8009206:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009208:	6020      	str	r0, [r4, #0]
 800920a:	6061      	str	r1, [r4, #4]
 800920c:	60a2      	str	r2, [r4, #8]
 800920e:	781b      	ldrb	r3, [r3, #0]
 8009210:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8009212:	687b      	ldr	r3, [r7, #4]
 8009214:	33d8      	adds	r3, #216	; 0xd8
 8009216:	4986      	ldr	r1, [pc, #536]	; (8009430 <createProblem+0x8588>)
 8009218:	461a      	mov	r2, r3
 800921a:	460b      	mov	r3, r1
 800921c:	cb03      	ldmia	r3!, {r0, r1}
 800921e:	6010      	str	r0, [r2, #0]
 8009220:	6051      	str	r1, [r2, #4]
 8009222:	881b      	ldrh	r3, [r3, #0]
 8009224:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 8009226:	687b      	ldr	r3, [r7, #4]
 8009228:	33cc      	adds	r3, #204	; 0xcc
 800922a:	4a79      	ldr	r2, [pc, #484]	; (8009410 <createProblem+0x8568>)
 800922c:	6810      	ldr	r0, [r2, #0]
 800922e:	6018      	str	r0, [r3, #0]
			break;
 8009230:	f011 bb80 	b.w	801a934 <createProblem+0x19a8c>
		case 315 :
			strcpy(p->name,"THE HUMAN FLAG");
 8009234:	687b      	ldr	r3, [r7, #4]
 8009236:	337c      	adds	r3, #124	; 0x7c
 8009238:	4a7e      	ldr	r2, [pc, #504]	; (8009434 <createProblem+0x858c>)
 800923a:	461c      	mov	r4, r3
 800923c:	4613      	mov	r3, r2
 800923e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009240:	6020      	str	r0, [r4, #0]
 8009242:	6061      	str	r1, [r4, #4]
 8009244:	60a2      	str	r2, [r4, #8]
 8009246:	881a      	ldrh	r2, [r3, #0]
 8009248:	789b      	ldrb	r3, [r3, #2]
 800924a:	81a2      	strh	r2, [r4, #12]
 800924c:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 4;
 800924e:	687b      	ldr	r3, [r7, #4]
 8009250:	2204      	movs	r2, #4
 8009252:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,D");
 8009254:	687b      	ldr	r3, [r7, #4]
 8009256:	3340      	adds	r3, #64	; 0x40
 8009258:	4977      	ldr	r1, [pc, #476]	; (8009438 <createProblem+0x8590>)
 800925a:	461a      	mov	r2, r3
 800925c:	460b      	mov	r3, r1
 800925e:	cb03      	ldmia	r3!, {r0, r1}
 8009260:	6010      	str	r0, [r2, #0]
 8009262:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"6,10,13,18");
 8009264:	687b      	ldr	r3, [r7, #4]
 8009266:	3304      	adds	r3, #4
 8009268:	4974      	ldr	r1, [pc, #464]	; (800943c <createProblem+0x8594>)
 800926a:	461a      	mov	r2, r3
 800926c:	460b      	mov	r3, r1
 800926e:	cb03      	ldmia	r3!, {r0, r1}
 8009270:	6010      	str	r0, [r2, #0]
 8009272:	6051      	str	r1, [r2, #4]
 8009274:	8819      	ldrh	r1, [r3, #0]
 8009276:	789b      	ldrb	r3, [r3, #2]
 8009278:	8111      	strh	r1, [r2, #8]
 800927a:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 800927c:	687b      	ldr	r3, [r7, #4]
 800927e:	33d8      	adds	r3, #216	; 0xd8
 8009280:	496f      	ldr	r1, [pc, #444]	; (8009440 <createProblem+0x8598>)
 8009282:	461a      	mov	r2, r3
 8009284:	460b      	mov	r3, r1
 8009286:	cb03      	ldmia	r3!, {r0, r1}
 8009288:	6010      	str	r0, [r2, #0]
 800928a:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7A");
 800928c:	687b      	ldr	r3, [r7, #4]
 800928e:	33cc      	adds	r3, #204	; 0xcc
 8009290:	4a6c      	ldr	r2, [pc, #432]	; (8009444 <createProblem+0x859c>)
 8009292:	8811      	ldrh	r1, [r2, #0]
 8009294:	7892      	ldrb	r2, [r2, #2]
 8009296:	8019      	strh	r1, [r3, #0]
 8009298:	709a      	strb	r2, [r3, #2]
			break;
 800929a:	f011 bb4b 	b.w	801a934 <createProblem+0x19a8c>
		case 316 :
			strcpy(p->name,"BIG TIME BRUH");
 800929e:	687b      	ldr	r3, [r7, #4]
 80092a0:	337c      	adds	r3, #124	; 0x7c
 80092a2:	4a69      	ldr	r2, [pc, #420]	; (8009448 <createProblem+0x85a0>)
 80092a4:	461c      	mov	r4, r3
 80092a6:	4613      	mov	r3, r2
 80092a8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80092aa:	6020      	str	r0, [r4, #0]
 80092ac:	6061      	str	r1, [r4, #4]
 80092ae:	60a2      	str	r2, [r4, #8]
 80092b0:	881b      	ldrh	r3, [r3, #0]
 80092b2:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 80092b4:	687b      	ldr	r3, [r7, #4]
 80092b6:	2207      	movs	r2, #7
 80092b8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,C,I,E,I");
 80092ba:	687b      	ldr	r3, [r7, #4]
 80092bc:	3340      	adds	r3, #64	; 0x40
 80092be:	4a63      	ldr	r2, [pc, #396]	; (800944c <createProblem+0x85a4>)
 80092c0:	461c      	mov	r4, r3
 80092c2:	4613      	mov	r3, r2
 80092c4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80092c6:	6020      	str	r0, [r4, #0]
 80092c8:	6061      	str	r1, [r4, #4]
 80092ca:	60a2      	str	r2, [r4, #8]
 80092cc:	881b      	ldrh	r3, [r3, #0]
 80092ce:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,10,13,14,16,18");
 80092d0:	687b      	ldr	r3, [r7, #4]
 80092d2:	3304      	adds	r3, #4
 80092d4:	4a5e      	ldr	r2, [pc, #376]	; (8009450 <createProblem+0x85a8>)
 80092d6:	461d      	mov	r5, r3
 80092d8:	4614      	mov	r4, r2
 80092da:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80092dc:	6028      	str	r0, [r5, #0]
 80092de:	6069      	str	r1, [r5, #4]
 80092e0:	60aa      	str	r2, [r5, #8]
 80092e2:	60eb      	str	r3, [r5, #12]
 80092e4:	8823      	ldrh	r3, [r4, #0]
 80092e6:	78a2      	ldrb	r2, [r4, #2]
 80092e8:	822b      	strh	r3, [r5, #16]
 80092ea:	4613      	mov	r3, r2
 80092ec:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80092ee:	687b      	ldr	r3, [r7, #4]
 80092f0:	33d8      	adds	r3, #216	; 0xd8
 80092f2:	4a4b      	ldr	r2, [pc, #300]	; (8009420 <createProblem+0x8578>)
 80092f4:	461c      	mov	r4, r3
 80092f6:	4613      	mov	r3, r2
 80092f8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80092fa:	6020      	str	r0, [r4, #0]
 80092fc:	6061      	str	r1, [r4, #4]
 80092fe:	60a2      	str	r2, [r4, #8]
 8009300:	881b      	ldrh	r3, [r3, #0]
 8009302:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8009304:	687b      	ldr	r3, [r7, #4]
 8009306:	33cc      	adds	r3, #204	; 0xcc
 8009308:	4a52      	ldr	r2, [pc, #328]	; (8009454 <createProblem+0x85ac>)
 800930a:	8811      	ldrh	r1, [r2, #0]
 800930c:	7892      	ldrb	r2, [r2, #2]
 800930e:	8019      	strh	r1, [r3, #0]
 8009310:	709a      	strb	r2, [r3, #2]
			break;
 8009312:	f011 bb0f 	b.w	801a934 <createProblem+0x19a8c>
		case 317 :
			strcpy(p->name,"SHOULDER 'SPLODER");
 8009316:	687b      	ldr	r3, [r7, #4]
 8009318:	337c      	adds	r3, #124	; 0x7c
 800931a:	4a4f      	ldr	r2, [pc, #316]	; (8009458 <createProblem+0x85b0>)
 800931c:	461d      	mov	r5, r3
 800931e:	4614      	mov	r4, r2
 8009320:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009322:	6028      	str	r0, [r5, #0]
 8009324:	6069      	str	r1, [r5, #4]
 8009326:	60aa      	str	r2, [r5, #8]
 8009328:	60eb      	str	r3, [r5, #12]
 800932a:	8823      	ldrh	r3, [r4, #0]
 800932c:	822b      	strh	r3, [r5, #16]
			p->moveSize = 6;
 800932e:	687b      	ldr	r3, [r7, #4]
 8009330:	2206      	movs	r2, #6
 8009332:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,J,E,J,E,D");
 8009334:	687b      	ldr	r3, [r7, #4]
 8009336:	3340      	adds	r3, #64	; 0x40
 8009338:	4a48      	ldr	r2, [pc, #288]	; (800945c <createProblem+0x85b4>)
 800933a:	461c      	mov	r4, r3
 800933c:	4613      	mov	r3, r2
 800933e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009340:	6020      	str	r0, [r4, #0]
 8009342:	6061      	str	r1, [r4, #4]
 8009344:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,7,9,12,14,18");
 8009346:	687b      	ldr	r3, [r7, #4]
 8009348:	3304      	adds	r3, #4
 800934a:	4a45      	ldr	r2, [pc, #276]	; (8009460 <createProblem+0x85b8>)
 800934c:	461c      	mov	r4, r3
 800934e:	4613      	mov	r3, r2
 8009350:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009352:	6020      	str	r0, [r4, #0]
 8009354:	6061      	str	r1, [r4, #4]
 8009356:	60a2      	str	r2, [r4, #8]
 8009358:	881a      	ldrh	r2, [r3, #0]
 800935a:	789b      	ldrb	r3, [r3, #2]
 800935c:	81a2      	strh	r2, [r4, #12]
 800935e:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8009360:	687b      	ldr	r3, [r7, #4]
 8009362:	33d8      	adds	r3, #216	; 0xd8
 8009364:	4a29      	ldr	r2, [pc, #164]	; (800940c <createProblem+0x8564>)
 8009366:	461c      	mov	r4, r3
 8009368:	4613      	mov	r3, r2
 800936a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800936c:	6020      	str	r0, [r4, #0]
 800936e:	6061      	str	r1, [r4, #4]
 8009370:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7C");
 8009372:	687b      	ldr	r3, [r7, #4]
 8009374:	33cc      	adds	r3, #204	; 0xcc
 8009376:	4a3b      	ldr	r2, [pc, #236]	; (8009464 <createProblem+0x85bc>)
 8009378:	8811      	ldrh	r1, [r2, #0]
 800937a:	7892      	ldrb	r2, [r2, #2]
 800937c:	8019      	strh	r1, [r3, #0]
 800937e:	709a      	strb	r2, [r3, #2]
			break;
 8009380:	f011 bad8 	b.w	801a934 <createProblem+0x19a8c>
		case 318 :
			strcpy(p->name,"CHAKA MAKA");
 8009384:	687b      	ldr	r3, [r7, #4]
 8009386:	337c      	adds	r3, #124	; 0x7c
 8009388:	4937      	ldr	r1, [pc, #220]	; (8009468 <createProblem+0x85c0>)
 800938a:	461a      	mov	r2, r3
 800938c:	460b      	mov	r3, r1
 800938e:	cb03      	ldmia	r3!, {r0, r1}
 8009390:	6010      	str	r0, [r2, #0]
 8009392:	6051      	str	r1, [r2, #4]
 8009394:	8819      	ldrh	r1, [r3, #0]
 8009396:	789b      	ldrb	r3, [r3, #2]
 8009398:	8111      	strh	r1, [r2, #8]
 800939a:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 800939c:	687b      	ldr	r3, [r7, #4]
 800939e:	2207      	movs	r2, #7
 80093a0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,G,H,I,G,I");
 80093a2:	687b      	ldr	r3, [r7, #4]
 80093a4:	3340      	adds	r3, #64	; 0x40
 80093a6:	4a31      	ldr	r2, [pc, #196]	; (800946c <createProblem+0x85c4>)
 80093a8:	461c      	mov	r4, r3
 80093aa:	4613      	mov	r3, r2
 80093ac:	cb07      	ldmia	r3!, {r0, r1, r2}
 80093ae:	6020      	str	r0, [r4, #0]
 80093b0:	6061      	str	r1, [r4, #4]
 80093b2:	60a2      	str	r2, [r4, #8]
 80093b4:	881b      	ldrh	r3, [r3, #0]
 80093b6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,10,10,13,7,17,18");
 80093b8:	687b      	ldr	r3, [r7, #4]
 80093ba:	3304      	adds	r3, #4
 80093bc:	4a2c      	ldr	r2, [pc, #176]	; (8009470 <createProblem+0x85c8>)
 80093be:	461d      	mov	r5, r3
 80093c0:	4614      	mov	r4, r2
 80093c2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80093c4:	6028      	str	r0, [r5, #0]
 80093c6:	6069      	str	r1, [r5, #4]
 80093c8:	60aa      	str	r2, [r5, #8]
 80093ca:	60eb      	str	r3, [r5, #12]
 80093cc:	8823      	ldrh	r3, [r4, #0]
 80093ce:	78a2      	ldrb	r2, [r4, #2]
 80093d0:	822b      	strh	r3, [r5, #16]
 80093d2:	4613      	mov	r3, r2
 80093d4:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80093d6:	687b      	ldr	r3, [r7, #4]
 80093d8:	33d8      	adds	r3, #216	; 0xd8
 80093da:	4a11      	ldr	r2, [pc, #68]	; (8009420 <createProblem+0x8578>)
 80093dc:	461c      	mov	r4, r3
 80093de:	4613      	mov	r3, r2
 80093e0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80093e2:	6020      	str	r0, [r4, #0]
 80093e4:	6061      	str	r1, [r4, #4]
 80093e6:	60a2      	str	r2, [r4, #8]
 80093e8:	881b      	ldrh	r3, [r3, #0]
 80093ea:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B");
 80093ec:	687b      	ldr	r3, [r7, #4]
 80093ee:	33cc      	adds	r3, #204	; 0xcc
 80093f0:	4a20      	ldr	r2, [pc, #128]	; (8009474 <createProblem+0x85cc>)
 80093f2:	8811      	ldrh	r1, [r2, #0]
 80093f4:	7892      	ldrb	r2, [r2, #2]
 80093f6:	8019      	strh	r1, [r3, #0]
 80093f8:	709a      	strb	r2, [r3, #2]
			break;
 80093fa:	f011 ba9b 	b.w	801a934 <createProblem+0x19a8c>
 80093fe:	bf00      	nop
 8009400:	08023610 	.word	0x08023610
 8009404:	08023620 	.word	0x08023620
 8009408:	0802362c 	.word	0x0802362c
 800940c:	0802091c 	.word	0x0802091c
 8009410:	080209a4 	.word	0x080209a4
 8009414:	0802363c 	.word	0x0802363c
 8009418:	08023648 	.word	0x08023648
 800941c:	08023658 	.word	0x08023658
 8009420:	08020a14 	.word	0x08020a14
 8009424:	0802366c 	.word	0x0802366c
 8009428:	08023678 	.word	0x08023678
 800942c:	0802221c 	.word	0x0802221c
 8009430:	080208a0 	.word	0x080208a0
 8009434:	08023684 	.word	0x08023684
 8009438:	08022fa0 	.word	0x08022fa0
 800943c:	08023694 	.word	0x08023694
 8009440:	080215a8 	.word	0x080215a8
 8009444:	08020874 	.word	0x08020874
 8009448:	080236a0 	.word	0x080236a0
 800944c:	080236b0 	.word	0x080236b0
 8009450:	080236c0 	.word	0x080236c0
 8009454:	080208f0 	.word	0x080208f0
 8009458:	080236d4 	.word	0x080236d4
 800945c:	080236e8 	.word	0x080236e8
 8009460:	080236f4 	.word	0x080236f4
 8009464:	08020b0c 	.word	0x08020b0c
 8009468:	08023704 	.word	0x08023704
 800946c:	08023710 	.word	0x08023710
 8009470:	08023720 	.word	0x08023720
 8009474:	080208ac 	.word	0x080208ac
		case 319 :
			strcpy(p->name,"PAUNCH PINCHER");
 8009478:	687b      	ldr	r3, [r7, #4]
 800947a:	337c      	adds	r3, #124	; 0x7c
 800947c:	4abb      	ldr	r2, [pc, #748]	; (800976c <createProblem+0x88c4>)
 800947e:	461c      	mov	r4, r3
 8009480:	4613      	mov	r3, r2
 8009482:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009484:	6020      	str	r0, [r4, #0]
 8009486:	6061      	str	r1, [r4, #4]
 8009488:	60a2      	str	r2, [r4, #8]
 800948a:	881a      	ldrh	r2, [r3, #0]
 800948c:	789b      	ldrb	r3, [r3, #2]
 800948e:	81a2      	strh	r2, [r4, #12]
 8009490:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 10;
 8009492:	687b      	ldr	r3, [r7, #4]
 8009494:	220a      	movs	r2, #10
 8009496:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,H,F,C,F,G,C,K,I");
 8009498:	687b      	ldr	r3, [r7, #4]
 800949a:	3340      	adds	r3, #64	; 0x40
 800949c:	4ab4      	ldr	r2, [pc, #720]	; (8009770 <createProblem+0x88c8>)
 800949e:	461d      	mov	r5, r3
 80094a0:	4614      	mov	r4, r2
 80094a2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80094a4:	6028      	str	r0, [r5, #0]
 80094a6:	6069      	str	r1, [r5, #4]
 80094a8:	60aa      	str	r2, [r5, #8]
 80094aa:	60eb      	str	r3, [r5, #12]
 80094ac:	6820      	ldr	r0, [r4, #0]
 80094ae:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"5,5,8,11,8,13,15,5,14,18");
 80094b0:	687b      	ldr	r3, [r7, #4]
 80094b2:	3304      	adds	r3, #4
 80094b4:	4aaf      	ldr	r2, [pc, #700]	; (8009774 <createProblem+0x88cc>)
 80094b6:	461d      	mov	r5, r3
 80094b8:	4614      	mov	r4, r2
 80094ba:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80094bc:	6028      	str	r0, [r5, #0]
 80094be:	6069      	str	r1, [r5, #4]
 80094c0:	60aa      	str	r2, [r5, #8]
 80094c2:	60eb      	str	r3, [r5, #12]
 80094c4:	cc03      	ldmia	r4!, {r0, r1}
 80094c6:	6128      	str	r0, [r5, #16]
 80094c8:	6169      	str	r1, [r5, #20]
 80094ca:	7823      	ldrb	r3, [r4, #0]
 80094cc:	762b      	strb	r3, [r5, #24]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,e");
 80094ce:	687b      	ldr	r3, [r7, #4]
 80094d0:	33d8      	adds	r3, #216	; 0xd8
 80094d2:	4aa9      	ldr	r2, [pc, #676]	; (8009778 <createProblem+0x88d0>)
 80094d4:	461d      	mov	r5, r3
 80094d6:	4614      	mov	r4, r2
 80094d8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80094da:	6028      	str	r0, [r5, #0]
 80094dc:	6069      	str	r1, [r5, #4]
 80094de:	60aa      	str	r2, [r5, #8]
 80094e0:	60eb      	str	r3, [r5, #12]
 80094e2:	6820      	ldr	r0, [r4, #0]
 80094e4:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "6C");
 80094e6:	687b      	ldr	r3, [r7, #4]
 80094e8:	33cc      	adds	r3, #204	; 0xcc
 80094ea:	4aa4      	ldr	r2, [pc, #656]	; (800977c <createProblem+0x88d4>)
 80094ec:	8811      	ldrh	r1, [r2, #0]
 80094ee:	7892      	ldrb	r2, [r2, #2]
 80094f0:	8019      	strh	r1, [r3, #0]
 80094f2:	709a      	strb	r2, [r3, #2]
			break;
 80094f4:	f011 ba1e 	b.w	801a934 <createProblem+0x19a8c>
		case 32 :
			strcpy(p->name,"ACG10");
 80094f8:	687b      	ldr	r3, [r7, #4]
 80094fa:	337c      	adds	r3, #124	; 0x7c
 80094fc:	4aa0      	ldr	r2, [pc, #640]	; (8009780 <createProblem+0x88d8>)
 80094fe:	6810      	ldr	r0, [r2, #0]
 8009500:	6018      	str	r0, [r3, #0]
 8009502:	8892      	ldrh	r2, [r2, #4]
 8009504:	809a      	strh	r2, [r3, #4]
			p->moveSize = 7;
 8009506:	687b      	ldr	r3, [r7, #4]
 8009508:	2207      	movs	r2, #7
 800950a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,G,G,E,B,I");
 800950c:	687b      	ldr	r3, [r7, #4]
 800950e:	3340      	adds	r3, #64	; 0x40
 8009510:	4a9c      	ldr	r2, [pc, #624]	; (8009784 <createProblem+0x88dc>)
 8009512:	461c      	mov	r4, r3
 8009514:	4613      	mov	r3, r2
 8009516:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009518:	6020      	str	r0, [r4, #0]
 800951a:	6061      	str	r1, [r4, #4]
 800951c:	60a2      	str	r2, [r4, #8]
 800951e:	881b      	ldrh	r3, [r3, #0]
 8009520:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,15,14,12,10,18");
 8009522:	687b      	ldr	r3, [r7, #4]
 8009524:	3304      	adds	r3, #4
 8009526:	4a98      	ldr	r2, [pc, #608]	; (8009788 <createProblem+0x88e0>)
 8009528:	461d      	mov	r5, r3
 800952a:	4614      	mov	r4, r2
 800952c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800952e:	6028      	str	r0, [r5, #0]
 8009530:	6069      	str	r1, [r5, #4]
 8009532:	60aa      	str	r2, [r5, #8]
 8009534:	60eb      	str	r3, [r5, #12]
 8009536:	8823      	ldrh	r3, [r4, #0]
 8009538:	78a2      	ldrb	r2, [r4, #2]
 800953a:	822b      	strh	r3, [r5, #16]
 800953c:	4613      	mov	r3, r2
 800953e:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8009540:	687b      	ldr	r3, [r7, #4]
 8009542:	33d8      	adds	r3, #216	; 0xd8
 8009544:	4a91      	ldr	r2, [pc, #580]	; (800978c <createProblem+0x88e4>)
 8009546:	461c      	mov	r4, r3
 8009548:	4613      	mov	r3, r2
 800954a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800954c:	6020      	str	r0, [r4, #0]
 800954e:	6061      	str	r1, [r4, #4]
 8009550:	60a2      	str	r2, [r4, #8]
 8009552:	881b      	ldrh	r3, [r3, #0]
 8009554:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8009556:	687b      	ldr	r3, [r7, #4]
 8009558:	33cc      	adds	r3, #204	; 0xcc
 800955a:	4a8d      	ldr	r2, [pc, #564]	; (8009790 <createProblem+0x88e8>)
 800955c:	6810      	ldr	r0, [r2, #0]
 800955e:	6018      	str	r0, [r3, #0]
			break;
 8009560:	f011 b9e8 	b.w	801a934 <createProblem+0x19a8c>
		case 320 :
			strcpy(p->name,"PROJECT V1");
 8009564:	687b      	ldr	r3, [r7, #4]
 8009566:	337c      	adds	r3, #124	; 0x7c
 8009568:	498a      	ldr	r1, [pc, #552]	; (8009794 <createProblem+0x88ec>)
 800956a:	461a      	mov	r2, r3
 800956c:	460b      	mov	r3, r1
 800956e:	cb03      	ldmia	r3!, {r0, r1}
 8009570:	6010      	str	r0, [r2, #0]
 8009572:	6051      	str	r1, [r2, #4]
 8009574:	8819      	ldrh	r1, [r3, #0]
 8009576:	789b      	ldrb	r3, [r3, #2]
 8009578:	8111      	strh	r1, [r2, #8]
 800957a:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 800957c:	687b      	ldr	r3, [r7, #4]
 800957e:	2207      	movs	r2, #7
 8009580:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,F,F,I,G,D");
 8009582:	687b      	ldr	r3, [r7, #4]
 8009584:	3340      	adds	r3, #64	; 0x40
 8009586:	4a84      	ldr	r2, [pc, #528]	; (8009798 <createProblem+0x88f0>)
 8009588:	461c      	mov	r4, r3
 800958a:	4613      	mov	r3, r2
 800958c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800958e:	6020      	str	r0, [r4, #0]
 8009590:	6061      	str	r1, [r4, #4]
 8009592:	60a2      	str	r2, [r4, #8]
 8009594:	881b      	ldrh	r3, [r3, #0]
 8009596:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,11,13,14,17,18");
 8009598:	687b      	ldr	r3, [r7, #4]
 800959a:	3304      	adds	r3, #4
 800959c:	4a7f      	ldr	r2, [pc, #508]	; (800979c <createProblem+0x88f4>)
 800959e:	461d      	mov	r5, r3
 80095a0:	4614      	mov	r4, r2
 80095a2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80095a4:	6028      	str	r0, [r5, #0]
 80095a6:	6069      	str	r1, [r5, #4]
 80095a8:	60aa      	str	r2, [r5, #8]
 80095aa:	60eb      	str	r3, [r5, #12]
 80095ac:	8823      	ldrh	r3, [r4, #0]
 80095ae:	78a2      	ldrb	r2, [r4, #2]
 80095b0:	822b      	strh	r3, [r5, #16]
 80095b2:	4613      	mov	r3, r2
 80095b4:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80095b6:	687b      	ldr	r3, [r7, #4]
 80095b8:	33d8      	adds	r3, #216	; 0xd8
 80095ba:	4a74      	ldr	r2, [pc, #464]	; (800978c <createProblem+0x88e4>)
 80095bc:	461c      	mov	r4, r3
 80095be:	4613      	mov	r3, r2
 80095c0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80095c2:	6020      	str	r0, [r4, #0]
 80095c4:	6061      	str	r1, [r4, #4]
 80095c6:	60a2      	str	r2, [r4, #8]
 80095c8:	881b      	ldrh	r3, [r3, #0]
 80095ca:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B+");
 80095cc:	687b      	ldr	r3, [r7, #4]
 80095ce:	33cc      	adds	r3, #204	; 0xcc
 80095d0:	4a73      	ldr	r2, [pc, #460]	; (80097a0 <createProblem+0x88f8>)
 80095d2:	6810      	ldr	r0, [r2, #0]
 80095d4:	6018      	str	r0, [r3, #0]
			break;
 80095d6:	f011 b9ad 	b.w	801a934 <createProblem+0x19a8c>
		case 321 :
			strcpy(p->name,"MR PINCH");
 80095da:	687b      	ldr	r3, [r7, #4]
 80095dc:	337c      	adds	r3, #124	; 0x7c
 80095de:	4971      	ldr	r1, [pc, #452]	; (80097a4 <createProblem+0x88fc>)
 80095e0:	461a      	mov	r2, r3
 80095e2:	460b      	mov	r3, r1
 80095e4:	cb03      	ldmia	r3!, {r0, r1}
 80095e6:	6010      	str	r0, [r2, #0]
 80095e8:	6051      	str	r1, [r2, #4]
 80095ea:	781b      	ldrb	r3, [r3, #0]
 80095ec:	7213      	strb	r3, [r2, #8]
			p->moveSize = 5;
 80095ee:	687b      	ldr	r3, [r7, #4]
 80095f0:	2205      	movs	r2, #5
 80095f2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,G,E,D");
 80095f4:	687b      	ldr	r3, [r7, #4]
 80095f6:	3340      	adds	r3, #64	; 0x40
 80095f8:	496b      	ldr	r1, [pc, #428]	; (80097a8 <createProblem+0x8900>)
 80095fa:	461a      	mov	r2, r3
 80095fc:	460b      	mov	r3, r1
 80095fe:	cb03      	ldmia	r3!, {r0, r1}
 8009600:	6010      	str	r0, [r2, #0]
 8009602:	6051      	str	r1, [r2, #4]
 8009604:	881b      	ldrh	r3, [r3, #0]
 8009606:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,9,14,18");
 8009608:	687b      	ldr	r3, [r7, #4]
 800960a:	3304      	adds	r3, #4
 800960c:	4a67      	ldr	r2, [pc, #412]	; (80097ac <createProblem+0x8904>)
 800960e:	461c      	mov	r4, r3
 8009610:	4613      	mov	r3, r2
 8009612:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009614:	6020      	str	r0, [r4, #0]
 8009616:	6061      	str	r1, [r4, #4]
 8009618:	60a2      	str	r2, [r4, #8]
			strcpy(p->startFinish, "s,d,d,d,e");
 800961a:	687b      	ldr	r3, [r7, #4]
 800961c:	33d8      	adds	r3, #216	; 0xd8
 800961e:	4964      	ldr	r1, [pc, #400]	; (80097b0 <createProblem+0x8908>)
 8009620:	461a      	mov	r2, r3
 8009622:	460b      	mov	r3, r1
 8009624:	cb03      	ldmia	r3!, {r0, r1}
 8009626:	6010      	str	r0, [r2, #0]
 8009628:	6051      	str	r1, [r2, #4]
 800962a:	881b      	ldrh	r3, [r3, #0]
 800962c:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 800962e:	687b      	ldr	r3, [r7, #4]
 8009630:	33cc      	adds	r3, #204	; 0xcc
 8009632:	4a5b      	ldr	r2, [pc, #364]	; (80097a0 <createProblem+0x88f8>)
 8009634:	6810      	ldr	r0, [r2, #0]
 8009636:	6018      	str	r0, [r3, #0]
			break;
 8009638:	f011 b97c 	b.w	801a934 <createProblem+0x19a8c>
		case 322 :
			strcpy(p->name,"MUCCA");
 800963c:	687b      	ldr	r3, [r7, #4]
 800963e:	337c      	adds	r3, #124	; 0x7c
 8009640:	4a5c      	ldr	r2, [pc, #368]	; (80097b4 <createProblem+0x890c>)
 8009642:	6810      	ldr	r0, [r2, #0]
 8009644:	6018      	str	r0, [r3, #0]
 8009646:	8892      	ldrh	r2, [r2, #4]
 8009648:	809a      	strh	r2, [r3, #4]
			p->moveSize = 4;
 800964a:	687b      	ldr	r3, [r7, #4]
 800964c:	2204      	movs	r2, #4
 800964e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,G,I");
 8009650:	687b      	ldr	r3, [r7, #4]
 8009652:	3340      	adds	r3, #64	; 0x40
 8009654:	4958      	ldr	r1, [pc, #352]	; (80097b8 <createProblem+0x8910>)
 8009656:	461a      	mov	r2, r3
 8009658:	460b      	mov	r3, r1
 800965a:	cb03      	ldmia	r3!, {r0, r1}
 800965c:	6010      	str	r0, [r2, #0]
 800965e:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"4,10,14,18");
 8009660:	687b      	ldr	r3, [r7, #4]
 8009662:	3304      	adds	r3, #4
 8009664:	4955      	ldr	r1, [pc, #340]	; (80097bc <createProblem+0x8914>)
 8009666:	461a      	mov	r2, r3
 8009668:	460b      	mov	r3, r1
 800966a:	cb03      	ldmia	r3!, {r0, r1}
 800966c:	6010      	str	r0, [r2, #0]
 800966e:	6051      	str	r1, [r2, #4]
 8009670:	8819      	ldrh	r1, [r3, #0]
 8009672:	789b      	ldrb	r3, [r3, #2]
 8009674:	8111      	strh	r1, [r2, #8]
 8009676:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 8009678:	687b      	ldr	r3, [r7, #4]
 800967a:	33d8      	adds	r3, #216	; 0xd8
 800967c:	4950      	ldr	r1, [pc, #320]	; (80097c0 <createProblem+0x8918>)
 800967e:	461a      	mov	r2, r3
 8009680:	460b      	mov	r3, r1
 8009682:	cb03      	ldmia	r3!, {r0, r1}
 8009684:	6010      	str	r0, [r2, #0]
 8009686:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7A+");
 8009688:	687b      	ldr	r3, [r7, #4]
 800968a:	33cc      	adds	r3, #204	; 0xcc
 800968c:	4a4d      	ldr	r2, [pc, #308]	; (80097c4 <createProblem+0x891c>)
 800968e:	6810      	ldr	r0, [r2, #0]
 8009690:	6018      	str	r0, [r3, #0]
			break;
 8009692:	f011 b94f 	b.w	801a934 <createProblem+0x19a8c>
		case 323 :
			strcpy(p->name,"COMEBACK 3.5");
 8009696:	687b      	ldr	r3, [r7, #4]
 8009698:	337c      	adds	r3, #124	; 0x7c
 800969a:	4a4b      	ldr	r2, [pc, #300]	; (80097c8 <createProblem+0x8920>)
 800969c:	461c      	mov	r4, r3
 800969e:	4613      	mov	r3, r2
 80096a0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80096a2:	6020      	str	r0, [r4, #0]
 80096a4:	6061      	str	r1, [r4, #4]
 80096a6:	60a2      	str	r2, [r4, #8]
 80096a8:	781b      	ldrb	r3, [r3, #0]
 80096aa:	7323      	strb	r3, [r4, #12]
			p->moveSize = 8;
 80096ac:	687b      	ldr	r3, [r7, #4]
 80096ae:	2208      	movs	r2, #8
 80096b0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,G,G,C,D,E,I");
 80096b2:	687b      	ldr	r3, [r7, #4]
 80096b4:	3340      	adds	r3, #64	; 0x40
 80096b6:	4a45      	ldr	r2, [pc, #276]	; (80097cc <createProblem+0x8924>)
 80096b8:	461c      	mov	r4, r3
 80096ba:	4615      	mov	r5, r2
 80096bc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80096be:	6020      	str	r0, [r4, #0]
 80096c0:	6061      	str	r1, [r4, #4]
 80096c2:	60a2      	str	r2, [r4, #8]
 80096c4:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,9,10,13,15,16,18");
 80096c6:	687b      	ldr	r3, [r7, #4]
 80096c8:	3304      	adds	r3, #4
 80096ca:	4a41      	ldr	r2, [pc, #260]	; (80097d0 <createProblem+0x8928>)
 80096cc:	461d      	mov	r5, r3
 80096ce:	4614      	mov	r4, r2
 80096d0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80096d2:	6028      	str	r0, [r5, #0]
 80096d4:	6069      	str	r1, [r5, #4]
 80096d6:	60aa      	str	r2, [r5, #8]
 80096d8:	60eb      	str	r3, [r5, #12]
 80096da:	6820      	ldr	r0, [r4, #0]
 80096dc:	6128      	str	r0, [r5, #16]
 80096de:	7923      	ldrb	r3, [r4, #4]
 80096e0:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 80096e2:	687b      	ldr	r3, [r7, #4]
 80096e4:	33d8      	adds	r3, #216	; 0xd8
 80096e6:	4a3b      	ldr	r2, [pc, #236]	; (80097d4 <createProblem+0x892c>)
 80096e8:	461c      	mov	r4, r3
 80096ea:	4615      	mov	r5, r2
 80096ec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80096ee:	6020      	str	r0, [r4, #0]
 80096f0:	6061      	str	r1, [r4, #4]
 80096f2:	60a2      	str	r2, [r4, #8]
 80096f4:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80096f6:	687b      	ldr	r3, [r7, #4]
 80096f8:	33cc      	adds	r3, #204	; 0xcc
 80096fa:	4a25      	ldr	r2, [pc, #148]	; (8009790 <createProblem+0x88e8>)
 80096fc:	6810      	ldr	r0, [r2, #0]
 80096fe:	6018      	str	r0, [r3, #0]
			break;
 8009700:	f011 b918 	b.w	801a934 <createProblem+0x19a8c>
		case 324 :
			strcpy(p->name,"COMEBACK 4.0");
 8009704:	687b      	ldr	r3, [r7, #4]
 8009706:	337c      	adds	r3, #124	; 0x7c
 8009708:	4a33      	ldr	r2, [pc, #204]	; (80097d8 <createProblem+0x8930>)
 800970a:	461c      	mov	r4, r3
 800970c:	4613      	mov	r3, r2
 800970e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009710:	6020      	str	r0, [r4, #0]
 8009712:	6061      	str	r1, [r4, #4]
 8009714:	60a2      	str	r2, [r4, #8]
 8009716:	781b      	ldrb	r3, [r3, #0]
 8009718:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 800971a:	687b      	ldr	r3, [r7, #4]
 800971c:	2206      	movs	r2, #6
 800971e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,E,B,D,D");
 8009720:	687b      	ldr	r3, [r7, #4]
 8009722:	3340      	adds	r3, #64	; 0x40
 8009724:	4a2d      	ldr	r2, [pc, #180]	; (80097dc <createProblem+0x8934>)
 8009726:	461c      	mov	r4, r3
 8009728:	4613      	mov	r3, r2
 800972a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800972c:	6020      	str	r0, [r4, #0]
 800972e:	6061      	str	r1, [r4, #4]
 8009730:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,7,9,12,15,18");
 8009732:	687b      	ldr	r3, [r7, #4]
 8009734:	3304      	adds	r3, #4
 8009736:	4a2a      	ldr	r2, [pc, #168]	; (80097e0 <createProblem+0x8938>)
 8009738:	461c      	mov	r4, r3
 800973a:	4613      	mov	r3, r2
 800973c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800973e:	6020      	str	r0, [r4, #0]
 8009740:	6061      	str	r1, [r4, #4]
 8009742:	60a2      	str	r2, [r4, #8]
 8009744:	881a      	ldrh	r2, [r3, #0]
 8009746:	789b      	ldrb	r3, [r3, #2]
 8009748:	81a2      	strh	r2, [r4, #12]
 800974a:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800974c:	687b      	ldr	r3, [r7, #4]
 800974e:	33d8      	adds	r3, #216	; 0xd8
 8009750:	4a24      	ldr	r2, [pc, #144]	; (80097e4 <createProblem+0x893c>)
 8009752:	461c      	mov	r4, r3
 8009754:	4613      	mov	r3, r2
 8009756:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009758:	6020      	str	r0, [r4, #0]
 800975a:	6061      	str	r1, [r4, #4]
 800975c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 800975e:	687b      	ldr	r3, [r7, #4]
 8009760:	33cc      	adds	r3, #204	; 0xcc
 8009762:	4a21      	ldr	r2, [pc, #132]	; (80097e8 <createProblem+0x8940>)
 8009764:	6810      	ldr	r0, [r2, #0]
 8009766:	6018      	str	r0, [r3, #0]
			break;
 8009768:	f011 b8e4 	b.w	801a934 <createProblem+0x19a8c>
 800976c:	08023734 	.word	0x08023734
 8009770:	08023744 	.word	0x08023744
 8009774:	08023758 	.word	0x08023758
 8009778:	08020b7c 	.word	0x08020b7c
 800977c:	080208f0 	.word	0x080208f0
 8009780:	08023774 	.word	0x08023774
 8009784:	0802377c 	.word	0x0802377c
 8009788:	0802378c 	.word	0x0802378c
 800978c:	08020a14 	.word	0x08020a14
 8009790:	08020830 	.word	0x08020830
 8009794:	080237a0 	.word	0x080237a0
 8009798:	080237ac 	.word	0x080237ac
 800979c:	080237bc 	.word	0x080237bc
 80097a0:	08020dc8 	.word	0x08020dc8
 80097a4:	080237d0 	.word	0x080237d0
 80097a8:	080237dc 	.word	0x080237dc
 80097ac:	08020d0c 	.word	0x08020d0c
 80097b0:	080208a0 	.word	0x080208a0
 80097b4:	080237e8 	.word	0x080237e8
 80097b8:	080237f0 	.word	0x080237f0
 80097bc:	0802159c 	.word	0x0802159c
 80097c0:	080215a8 	.word	0x080215a8
 80097c4:	080209a4 	.word	0x080209a4
 80097c8:	080237f8 	.word	0x080237f8
 80097cc:	08023808 	.word	0x08023808
 80097d0:	08023818 	.word	0x08023818
 80097d4:	080209d8 	.word	0x080209d8
 80097d8:	08023830 	.word	0x08023830
 80097dc:	08023840 	.word	0x08023840
 80097e0:	0802384c 	.word	0x0802384c
 80097e4:	0802091c 	.word	0x0802091c
 80097e8:	08020928 	.word	0x08020928
		case 325 :
			strcpy(p->name,"ACG79");
 80097ec:	687b      	ldr	r3, [r7, #4]
 80097ee:	337c      	adds	r3, #124	; 0x7c
 80097f0:	4abe      	ldr	r2, [pc, #760]	; (8009aec <createProblem+0x8c44>)
 80097f2:	6810      	ldr	r0, [r2, #0]
 80097f4:	6018      	str	r0, [r3, #0]
 80097f6:	8892      	ldrh	r2, [r2, #4]
 80097f8:	809a      	strh	r2, [r3, #4]
			p->moveSize = 7;
 80097fa:	687b      	ldr	r3, [r7, #4]
 80097fc:	2207      	movs	r2, #7
 80097fe:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,E,I,F,H,D");
 8009800:	687b      	ldr	r3, [r7, #4]
 8009802:	3340      	adds	r3, #64	; 0x40
 8009804:	4aba      	ldr	r2, [pc, #744]	; (8009af0 <createProblem+0x8c48>)
 8009806:	461c      	mov	r4, r3
 8009808:	4613      	mov	r3, r2
 800980a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800980c:	6020      	str	r0, [r4, #0]
 800980e:	6061      	str	r1, [r4, #4]
 8009810:	60a2      	str	r2, [r4, #8]
 8009812:	881b      	ldrh	r3, [r3, #0]
 8009814:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,4,8,9,13,16,18");
 8009816:	687b      	ldr	r3, [r7, #4]
 8009818:	3304      	adds	r3, #4
 800981a:	4ab6      	ldr	r2, [pc, #728]	; (8009af4 <createProblem+0x8c4c>)
 800981c:	461d      	mov	r5, r3
 800981e:	4614      	mov	r4, r2
 8009820:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009822:	6028      	str	r0, [r5, #0]
 8009824:	6069      	str	r1, [r5, #4]
 8009826:	60aa      	str	r2, [r5, #8]
 8009828:	60eb      	str	r3, [r5, #12]
 800982a:	7823      	ldrb	r3, [r4, #0]
 800982c:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800982e:	687b      	ldr	r3, [r7, #4]
 8009830:	33d8      	adds	r3, #216	; 0xd8
 8009832:	4ab1      	ldr	r2, [pc, #708]	; (8009af8 <createProblem+0x8c50>)
 8009834:	461c      	mov	r4, r3
 8009836:	4613      	mov	r3, r2
 8009838:	cb07      	ldmia	r3!, {r0, r1, r2}
 800983a:	6020      	str	r0, [r4, #0]
 800983c:	6061      	str	r1, [r4, #4]
 800983e:	60a2      	str	r2, [r4, #8]
 8009840:	881b      	ldrh	r3, [r3, #0]
 8009842:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8009844:	687b      	ldr	r3, [r7, #4]
 8009846:	33cc      	adds	r3, #204	; 0xcc
 8009848:	4aac      	ldr	r2, [pc, #688]	; (8009afc <createProblem+0x8c54>)
 800984a:	8811      	ldrh	r1, [r2, #0]
 800984c:	7892      	ldrb	r2, [r2, #2]
 800984e:	8019      	strh	r1, [r3, #0]
 8009850:	709a      	strb	r2, [r3, #2]
			break;
 8009852:	f011 b86f 	b.w	801a934 <createProblem+0x19a8c>
		case 326 :
			strcpy(p->name,"BADMOTORFINGER");
 8009856:	687b      	ldr	r3, [r7, #4]
 8009858:	337c      	adds	r3, #124	; 0x7c
 800985a:	4aa9      	ldr	r2, [pc, #676]	; (8009b00 <createProblem+0x8c58>)
 800985c:	461c      	mov	r4, r3
 800985e:	4613      	mov	r3, r2
 8009860:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009862:	6020      	str	r0, [r4, #0]
 8009864:	6061      	str	r1, [r4, #4]
 8009866:	60a2      	str	r2, [r4, #8]
 8009868:	881a      	ldrh	r2, [r3, #0]
 800986a:	789b      	ldrb	r3, [r3, #2]
 800986c:	81a2      	strh	r2, [r4, #12]
 800986e:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 7;
 8009870:	687b      	ldr	r3, [r7, #4]
 8009872:	2207      	movs	r2, #7
 8009874:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,C,F,F,J,E,D");
 8009876:	687b      	ldr	r3, [r7, #4]
 8009878:	3340      	adds	r3, #64	; 0x40
 800987a:	4aa2      	ldr	r2, [pc, #648]	; (8009b04 <createProblem+0x8c5c>)
 800987c:	461c      	mov	r4, r3
 800987e:	4613      	mov	r3, r2
 8009880:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009882:	6020      	str	r0, [r4, #0]
 8009884:	6061      	str	r1, [r4, #4]
 8009886:	60a2      	str	r2, [r4, #8]
 8009888:	881b      	ldrh	r3, [r3, #0]
 800988a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,8,11,13,13,16,18");
 800988c:	687b      	ldr	r3, [r7, #4]
 800988e:	3304      	adds	r3, #4
 8009890:	4a9d      	ldr	r2, [pc, #628]	; (8009b08 <createProblem+0x8c60>)
 8009892:	461d      	mov	r5, r3
 8009894:	4614      	mov	r4, r2
 8009896:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009898:	6028      	str	r0, [r5, #0]
 800989a:	6069      	str	r1, [r5, #4]
 800989c:	60aa      	str	r2, [r5, #8]
 800989e:	60eb      	str	r3, [r5, #12]
 80098a0:	8823      	ldrh	r3, [r4, #0]
 80098a2:	78a2      	ldrb	r2, [r4, #2]
 80098a4:	822b      	strh	r3, [r5, #16]
 80098a6:	4613      	mov	r3, r2
 80098a8:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80098aa:	687b      	ldr	r3, [r7, #4]
 80098ac:	33d8      	adds	r3, #216	; 0xd8
 80098ae:	4a97      	ldr	r2, [pc, #604]	; (8009b0c <createProblem+0x8c64>)
 80098b0:	461c      	mov	r4, r3
 80098b2:	4613      	mov	r3, r2
 80098b4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80098b6:	6020      	str	r0, [r4, #0]
 80098b8:	6061      	str	r1, [r4, #4]
 80098ba:	60a2      	str	r2, [r4, #8]
 80098bc:	881b      	ldrh	r3, [r3, #0]
 80098be:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 80098c0:	687b      	ldr	r3, [r7, #4]
 80098c2:	33cc      	adds	r3, #204	; 0xcc
 80098c4:	4a8d      	ldr	r2, [pc, #564]	; (8009afc <createProblem+0x8c54>)
 80098c6:	8811      	ldrh	r1, [r2, #0]
 80098c8:	7892      	ldrb	r2, [r2, #2]
 80098ca:	8019      	strh	r1, [r3, #0]
 80098cc:	709a      	strb	r2, [r3, #2]
			break;
 80098ce:	f011 b831 	b.w	801a934 <createProblem+0x19a8c>
		case 327 :
			strcpy(p->name,"JAB 2017");
 80098d2:	687b      	ldr	r3, [r7, #4]
 80098d4:	337c      	adds	r3, #124	; 0x7c
 80098d6:	498e      	ldr	r1, [pc, #568]	; (8009b10 <createProblem+0x8c68>)
 80098d8:	461a      	mov	r2, r3
 80098da:	460b      	mov	r3, r1
 80098dc:	cb03      	ldmia	r3!, {r0, r1}
 80098de:	6010      	str	r0, [r2, #0]
 80098e0:	6051      	str	r1, [r2, #4]
 80098e2:	781b      	ldrb	r3, [r3, #0]
 80098e4:	7213      	strb	r3, [r2, #8]
			p->moveSize = 5;
 80098e6:	687b      	ldr	r3, [r7, #4]
 80098e8:	2205      	movs	r2, #5
 80098ea:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,G,G,I");
 80098ec:	687b      	ldr	r3, [r7, #4]
 80098ee:	3340      	adds	r3, #64	; 0x40
 80098f0:	4988      	ldr	r1, [pc, #544]	; (8009b14 <createProblem+0x8c6c>)
 80098f2:	461a      	mov	r2, r3
 80098f4:	460b      	mov	r3, r1
 80098f6:	cb03      	ldmia	r3!, {r0, r1}
 80098f8:	6010      	str	r0, [r2, #0]
 80098fa:	6051      	str	r1, [r2, #4]
 80098fc:	881b      	ldrh	r3, [r3, #0]
 80098fe:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,10,15,18");
 8009900:	687b      	ldr	r3, [r7, #4]
 8009902:	3304      	adds	r3, #4
 8009904:	4a84      	ldr	r2, [pc, #528]	; (8009b18 <createProblem+0x8c70>)
 8009906:	461c      	mov	r4, r3
 8009908:	4613      	mov	r3, r2
 800990a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800990c:	6020      	str	r0, [r4, #0]
 800990e:	6061      	str	r1, [r4, #4]
 8009910:	60a2      	str	r2, [r4, #8]
 8009912:	781b      	ldrb	r3, [r3, #0]
 8009914:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8009916:	687b      	ldr	r3, [r7, #4]
 8009918:	33d8      	adds	r3, #216	; 0xd8
 800991a:	4980      	ldr	r1, [pc, #512]	; (8009b1c <createProblem+0x8c74>)
 800991c:	461a      	mov	r2, r3
 800991e:	460b      	mov	r3, r1
 8009920:	cb03      	ldmia	r3!, {r0, r1}
 8009922:	6010      	str	r0, [r2, #0]
 8009924:	6051      	str	r1, [r2, #4]
 8009926:	881b      	ldrh	r3, [r3, #0]
 8009928:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B");
 800992a:	687b      	ldr	r3, [r7, #4]
 800992c:	33cc      	adds	r3, #204	; 0xcc
 800992e:	4a7c      	ldr	r2, [pc, #496]	; (8009b20 <createProblem+0x8c78>)
 8009930:	8811      	ldrh	r1, [r2, #0]
 8009932:	7892      	ldrb	r2, [r2, #2]
 8009934:	8019      	strh	r1, [r3, #0]
 8009936:	709a      	strb	r2, [r3, #2]
			break;
 8009938:	f010 bffc 	b.w	801a934 <createProblem+0x19a8c>
		case 328 :
			strcpy(p->name,"SCRUMPY MCBUTTERBALLS");
 800993c:	687b      	ldr	r3, [r7, #4]
 800993e:	337c      	adds	r3, #124	; 0x7c
 8009940:	4a78      	ldr	r2, [pc, #480]	; (8009b24 <createProblem+0x8c7c>)
 8009942:	461d      	mov	r5, r3
 8009944:	4614      	mov	r4, r2
 8009946:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009948:	6028      	str	r0, [r5, #0]
 800994a:	6069      	str	r1, [r5, #4]
 800994c:	60aa      	str	r2, [r5, #8]
 800994e:	60eb      	str	r3, [r5, #12]
 8009950:	6820      	ldr	r0, [r4, #0]
 8009952:	6128      	str	r0, [r5, #16]
 8009954:	88a3      	ldrh	r3, [r4, #4]
 8009956:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 5;
 8009958:	687b      	ldr	r3, [r7, #4]
 800995a:	2205      	movs	r2, #5
 800995c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,C,H,G,D");
 800995e:	687b      	ldr	r3, [r7, #4]
 8009960:	3340      	adds	r3, #64	; 0x40
 8009962:	4971      	ldr	r1, [pc, #452]	; (8009b28 <createProblem+0x8c80>)
 8009964:	461a      	mov	r2, r3
 8009966:	460b      	mov	r3, r1
 8009968:	cb03      	ldmia	r3!, {r0, r1}
 800996a:	6010      	str	r0, [r2, #0]
 800996c:	6051      	str	r1, [r2, #4]
 800996e:	881b      	ldrh	r3, [r3, #0]
 8009970:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,8,10,14,18");
 8009972:	687b      	ldr	r3, [r7, #4]
 8009974:	3304      	adds	r3, #4
 8009976:	4a6d      	ldr	r2, [pc, #436]	; (8009b2c <createProblem+0x8c84>)
 8009978:	461c      	mov	r4, r3
 800997a:	4613      	mov	r3, r2
 800997c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800997e:	6020      	str	r0, [r4, #0]
 8009980:	6061      	str	r1, [r4, #4]
 8009982:	60a2      	str	r2, [r4, #8]
 8009984:	781b      	ldrb	r3, [r3, #0]
 8009986:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8009988:	687b      	ldr	r3, [r7, #4]
 800998a:	33d8      	adds	r3, #216	; 0xd8
 800998c:	4963      	ldr	r1, [pc, #396]	; (8009b1c <createProblem+0x8c74>)
 800998e:	461a      	mov	r2, r3
 8009990:	460b      	mov	r3, r1
 8009992:	cb03      	ldmia	r3!, {r0, r1}
 8009994:	6010      	str	r0, [r2, #0]
 8009996:	6051      	str	r1, [r2, #4]
 8009998:	881b      	ldrh	r3, [r3, #0]
 800999a:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 800999c:	687b      	ldr	r3, [r7, #4]
 800999e:	33cc      	adds	r3, #204	; 0xcc
 80099a0:	4a63      	ldr	r2, [pc, #396]	; (8009b30 <createProblem+0x8c88>)
 80099a2:	6810      	ldr	r0, [r2, #0]
 80099a4:	6018      	str	r0, [r3, #0]
			break;
 80099a6:	f010 bfc5 	b.w	801a934 <createProblem+0x19a8c>
		case 329 :
			strcpy(p->name,"SOFT SERVE");
 80099aa:	687b      	ldr	r3, [r7, #4]
 80099ac:	337c      	adds	r3, #124	; 0x7c
 80099ae:	4961      	ldr	r1, [pc, #388]	; (8009b34 <createProblem+0x8c8c>)
 80099b0:	461a      	mov	r2, r3
 80099b2:	460b      	mov	r3, r1
 80099b4:	cb03      	ldmia	r3!, {r0, r1}
 80099b6:	6010      	str	r0, [r2, #0]
 80099b8:	6051      	str	r1, [r2, #4]
 80099ba:	8819      	ldrh	r1, [r3, #0]
 80099bc:	789b      	ldrb	r3, [r3, #2]
 80099be:	8111      	strh	r1, [r2, #8]
 80099c0:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 80099c2:	687b      	ldr	r3, [r7, #4]
 80099c4:	2206      	movs	r2, #6
 80099c6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,D,D,E,I");
 80099c8:	687b      	ldr	r3, [r7, #4]
 80099ca:	3340      	adds	r3, #64	; 0x40
 80099cc:	4a5a      	ldr	r2, [pc, #360]	; (8009b38 <createProblem+0x8c90>)
 80099ce:	461c      	mov	r4, r3
 80099d0:	4613      	mov	r3, r2
 80099d2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80099d4:	6020      	str	r0, [r4, #0]
 80099d6:	6061      	str	r1, [r4, #4]
 80099d8:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,8,11,15,16,18");
 80099da:	687b      	ldr	r3, [r7, #4]
 80099dc:	3304      	adds	r3, #4
 80099de:	4a57      	ldr	r2, [pc, #348]	; (8009b3c <createProblem+0x8c94>)
 80099e0:	461c      	mov	r4, r3
 80099e2:	4615      	mov	r5, r2
 80099e4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80099e6:	6020      	str	r0, [r4, #0]
 80099e8:	6061      	str	r1, [r4, #4]
 80099ea:	60a2      	str	r2, [r4, #8]
 80099ec:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80099ee:	687b      	ldr	r3, [r7, #4]
 80099f0:	33d8      	adds	r3, #216	; 0xd8
 80099f2:	4a53      	ldr	r2, [pc, #332]	; (8009b40 <createProblem+0x8c98>)
 80099f4:	461c      	mov	r4, r3
 80099f6:	4613      	mov	r3, r2
 80099f8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80099fa:	6020      	str	r0, [r4, #0]
 80099fc:	6061      	str	r1, [r4, #4]
 80099fe:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8009a00:	687b      	ldr	r3, [r7, #4]
 8009a02:	33cc      	adds	r3, #204	; 0xcc
 8009a04:	4a4a      	ldr	r2, [pc, #296]	; (8009b30 <createProblem+0x8c88>)
 8009a06:	6810      	ldr	r0, [r2, #0]
 8009a08:	6018      	str	r0, [r3, #0]
			break;
 8009a0a:	f010 bf93 	b.w	801a934 <createProblem+0x19a8c>
		case 33 :
			strcpy(p->name,"SUPERNOVA");
 8009a0e:	687b      	ldr	r3, [r7, #4]
 8009a10:	337c      	adds	r3, #124	; 0x7c
 8009a12:	494c      	ldr	r1, [pc, #304]	; (8009b44 <createProblem+0x8c9c>)
 8009a14:	461a      	mov	r2, r3
 8009a16:	460b      	mov	r3, r1
 8009a18:	cb03      	ldmia	r3!, {r0, r1}
 8009a1a:	6010      	str	r0, [r2, #0]
 8009a1c:	6051      	str	r1, [r2, #4]
 8009a1e:	881b      	ldrh	r3, [r3, #0]
 8009a20:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 8009a22:	687b      	ldr	r3, [r7, #4]
 8009a24:	2207      	movs	r2, #7
 8009a26:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,C,F,F,H,D");
 8009a28:	687b      	ldr	r3, [r7, #4]
 8009a2a:	3340      	adds	r3, #64	; 0x40
 8009a2c:	4a46      	ldr	r2, [pc, #280]	; (8009b48 <createProblem+0x8ca0>)
 8009a2e:	461c      	mov	r4, r3
 8009a30:	4613      	mov	r3, r2
 8009a32:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009a34:	6020      	str	r0, [r4, #0]
 8009a36:	6061      	str	r1, [r4, #4]
 8009a38:	60a2      	str	r2, [r4, #8]
 8009a3a:	881b      	ldrh	r3, [r3, #0]
 8009a3c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,8,11,13,16,18");
 8009a3e:	687b      	ldr	r3, [r7, #4]
 8009a40:	3304      	adds	r3, #4
 8009a42:	4a42      	ldr	r2, [pc, #264]	; (8009b4c <createProblem+0x8ca4>)
 8009a44:	461d      	mov	r5, r3
 8009a46:	4614      	mov	r4, r2
 8009a48:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009a4a:	6028      	str	r0, [r5, #0]
 8009a4c:	6069      	str	r1, [r5, #4]
 8009a4e:	60aa      	str	r2, [r5, #8]
 8009a50:	60eb      	str	r3, [r5, #12]
 8009a52:	8823      	ldrh	r3, [r4, #0]
 8009a54:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8009a56:	687b      	ldr	r3, [r7, #4]
 8009a58:	33d8      	adds	r3, #216	; 0xd8
 8009a5a:	4a2c      	ldr	r2, [pc, #176]	; (8009b0c <createProblem+0x8c64>)
 8009a5c:	461c      	mov	r4, r3
 8009a5e:	4613      	mov	r3, r2
 8009a60:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009a62:	6020      	str	r0, [r4, #0]
 8009a64:	6061      	str	r1, [r4, #4]
 8009a66:	60a2      	str	r2, [r4, #8]
 8009a68:	881b      	ldrh	r3, [r3, #0]
 8009a6a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8009a6c:	687b      	ldr	r3, [r7, #4]
 8009a6e:	33cc      	adds	r3, #204	; 0xcc
 8009a70:	4a22      	ldr	r2, [pc, #136]	; (8009afc <createProblem+0x8c54>)
 8009a72:	8811      	ldrh	r1, [r2, #0]
 8009a74:	7892      	ldrb	r2, [r2, #2]
 8009a76:	8019      	strh	r1, [r3, #0]
 8009a78:	709a      	strb	r2, [r3, #2]
			break;
 8009a7a:	f010 bf5b 	b.w	801a934 <createProblem+0x19a8c>
		case 330 :
			strcpy(p->name,"OH MY FAT FINGERS...");
 8009a7e:	687b      	ldr	r3, [r7, #4]
 8009a80:	337c      	adds	r3, #124	; 0x7c
 8009a82:	4a33      	ldr	r2, [pc, #204]	; (8009b50 <createProblem+0x8ca8>)
 8009a84:	461d      	mov	r5, r3
 8009a86:	4614      	mov	r4, r2
 8009a88:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009a8a:	6028      	str	r0, [r5, #0]
 8009a8c:	6069      	str	r1, [r5, #4]
 8009a8e:	60aa      	str	r2, [r5, #8]
 8009a90:	60eb      	str	r3, [r5, #12]
 8009a92:	6820      	ldr	r0, [r4, #0]
 8009a94:	6128      	str	r0, [r5, #16]
 8009a96:	7923      	ldrb	r3, [r4, #4]
 8009a98:	752b      	strb	r3, [r5, #20]
			p->moveSize = 6;
 8009a9a:	687b      	ldr	r3, [r7, #4]
 8009a9c:	2206      	movs	r2, #6
 8009a9e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,F,K,E,I");
 8009aa0:	687b      	ldr	r3, [r7, #4]
 8009aa2:	3340      	adds	r3, #64	; 0x40
 8009aa4:	4a2b      	ldr	r2, [pc, #172]	; (8009b54 <createProblem+0x8cac>)
 8009aa6:	461c      	mov	r4, r3
 8009aa8:	4613      	mov	r3, r2
 8009aaa:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009aac:	6020      	str	r0, [r4, #0]
 8009aae:	6061      	str	r1, [r4, #4]
 8009ab0:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,10,13,14,8,18");
 8009ab2:	687b      	ldr	r3, [r7, #4]
 8009ab4:	3304      	adds	r3, #4
 8009ab6:	4a28      	ldr	r2, [pc, #160]	; (8009b58 <createProblem+0x8cb0>)
 8009ab8:	461c      	mov	r4, r3
 8009aba:	4615      	mov	r5, r2
 8009abc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009abe:	6020      	str	r0, [r4, #0]
 8009ac0:	6061      	str	r1, [r4, #4]
 8009ac2:	60a2      	str	r2, [r4, #8]
 8009ac4:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8009ac6:	687b      	ldr	r3, [r7, #4]
 8009ac8:	33d8      	adds	r3, #216	; 0xd8
 8009aca:	4a1d      	ldr	r2, [pc, #116]	; (8009b40 <createProblem+0x8c98>)
 8009acc:	461c      	mov	r4, r3
 8009ace:	4613      	mov	r3, r2
 8009ad0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009ad2:	6020      	str	r0, [r4, #0]
 8009ad4:	6061      	str	r1, [r4, #4]
 8009ad6:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 8009ad8:	687b      	ldr	r3, [r7, #4]
 8009ada:	33cc      	adds	r3, #204	; 0xcc
 8009adc:	4a1f      	ldr	r2, [pc, #124]	; (8009b5c <createProblem+0x8cb4>)
 8009ade:	8811      	ldrh	r1, [r2, #0]
 8009ae0:	7892      	ldrb	r2, [r2, #2]
 8009ae2:	8019      	strh	r1, [r3, #0]
 8009ae4:	709a      	strb	r2, [r3, #2]
			break;
 8009ae6:	f010 bf25 	b.w	801a934 <createProblem+0x19a8c>
 8009aea:	bf00      	nop
 8009aec:	0802385c 	.word	0x0802385c
 8009af0:	08023864 	.word	0x08023864
 8009af4:	08023874 	.word	0x08023874
 8009af8:	08020820 	.word	0x08020820
 8009afc:	08020874 	.word	0x08020874
 8009b00:	08023888 	.word	0x08023888
 8009b04:	08023898 	.word	0x08023898
 8009b08:	080238a8 	.word	0x080238a8
 8009b0c:	08020a14 	.word	0x08020a14
 8009b10:	080238bc 	.word	0x080238bc
 8009b14:	080238c8 	.word	0x080238c8
 8009b18:	080238d4 	.word	0x080238d4
 8009b1c:	080208a0 	.word	0x080208a0
 8009b20:	080208ac 	.word	0x080208ac
 8009b24:	080238e4 	.word	0x080238e4
 8009b28:	080238fc 	.word	0x080238fc
 8009b2c:	08023908 	.word	0x08023908
 8009b30:	080209a4 	.word	0x080209a4
 8009b34:	08023918 	.word	0x08023918
 8009b38:	08023924 	.word	0x08023924
 8009b3c:	08023930 	.word	0x08023930
 8009b40:	0802091c 	.word	0x0802091c
 8009b44:	08023940 	.word	0x08023940
 8009b48:	0802394c 	.word	0x0802394c
 8009b4c:	0802395c 	.word	0x0802395c
 8009b50:	08023970 	.word	0x08023970
 8009b54:	08023988 	.word	0x08023988
 8009b58:	08023994 	.word	0x08023994
 8009b5c:	080208f0 	.word	0x080208f0
		case 331 :
			strcpy(p->name,"HUMPA");
 8009b60:	687b      	ldr	r3, [r7, #4]
 8009b62:	337c      	adds	r3, #124	; 0x7c
 8009b64:	4aa7      	ldr	r2, [pc, #668]	; (8009e04 <createProblem+0x8f5c>)
 8009b66:	6810      	ldr	r0, [r2, #0]
 8009b68:	6018      	str	r0, [r3, #0]
 8009b6a:	8892      	ldrh	r2, [r2, #4]
 8009b6c:	809a      	strh	r2, [r3, #4]
			p->moveSize = 9;
 8009b6e:	687b      	ldr	r3, [r7, #4]
 8009b70:	2209      	movs	r2, #9
 8009b72:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,F,I,G,E,H,I");
 8009b74:	687b      	ldr	r3, [r7, #4]
 8009b76:	3340      	adds	r3, #64	; 0x40
 8009b78:	4aa3      	ldr	r2, [pc, #652]	; (8009e08 <createProblem+0x8f60>)
 8009b7a:	461d      	mov	r5, r3
 8009b7c:	4614      	mov	r4, r2
 8009b7e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009b80:	6028      	str	r0, [r5, #0]
 8009b82:	6069      	str	r1, [r5, #4]
 8009b84:	60aa      	str	r2, [r5, #8]
 8009b86:	60eb      	str	r3, [r5, #12]
 8009b88:	8823      	ldrh	r3, [r4, #0]
 8009b8a:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,5,8,11,14,15,8,10,18");
 8009b8c:	687b      	ldr	r3, [r7, #4]
 8009b8e:	3304      	adds	r3, #4
 8009b90:	4a9e      	ldr	r2, [pc, #632]	; (8009e0c <createProblem+0x8f64>)
 8009b92:	461c      	mov	r4, r3
 8009b94:	4615      	mov	r5, r2
 8009b96:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009b98:	6020      	str	r0, [r4, #0]
 8009b9a:	6061      	str	r1, [r4, #4]
 8009b9c:	60a2      	str	r2, [r4, #8]
 8009b9e:	60e3      	str	r3, [r4, #12]
 8009ba0:	6828      	ldr	r0, [r5, #0]
 8009ba2:	6120      	str	r0, [r4, #16]
 8009ba4:	88ab      	ldrh	r3, [r5, #4]
 8009ba6:	79aa      	ldrb	r2, [r5, #6]
 8009ba8:	82a3      	strh	r3, [r4, #20]
 8009baa:	4613      	mov	r3, r2
 8009bac:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8009bae:	687b      	ldr	r3, [r7, #4]
 8009bb0:	33d8      	adds	r3, #216	; 0xd8
 8009bb2:	4a97      	ldr	r2, [pc, #604]	; (8009e10 <createProblem+0x8f68>)
 8009bb4:	461d      	mov	r5, r3
 8009bb6:	4614      	mov	r4, r2
 8009bb8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009bba:	6028      	str	r0, [r5, #0]
 8009bbc:	6069      	str	r1, [r5, #4]
 8009bbe:	60aa      	str	r2, [r5, #8]
 8009bc0:	60eb      	str	r3, [r5, #12]
 8009bc2:	8823      	ldrh	r3, [r4, #0]
 8009bc4:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8009bc6:	687b      	ldr	r3, [r7, #4]
 8009bc8:	33cc      	adds	r3, #204	; 0xcc
 8009bca:	4a92      	ldr	r2, [pc, #584]	; (8009e14 <createProblem+0x8f6c>)
 8009bcc:	6810      	ldr	r0, [r2, #0]
 8009bce:	6018      	str	r0, [r3, #0]
			break;
 8009bd0:	f010 beb0 	b.w	801a934 <createProblem+0x19a8c>
		case 332 :
			strcpy(p->name,"GOT PINCH?");
 8009bd4:	687b      	ldr	r3, [r7, #4]
 8009bd6:	337c      	adds	r3, #124	; 0x7c
 8009bd8:	498f      	ldr	r1, [pc, #572]	; (8009e18 <createProblem+0x8f70>)
 8009bda:	461a      	mov	r2, r3
 8009bdc:	460b      	mov	r3, r1
 8009bde:	cb03      	ldmia	r3!, {r0, r1}
 8009be0:	6010      	str	r0, [r2, #0]
 8009be2:	6051      	str	r1, [r2, #4]
 8009be4:	8819      	ldrh	r1, [r3, #0]
 8009be6:	789b      	ldrb	r3, [r3, #2]
 8009be8:	8111      	strh	r1, [r2, #8]
 8009bea:	7293      	strb	r3, [r2, #10]
			p->moveSize = 8;
 8009bec:	687b      	ldr	r3, [r7, #4]
 8009bee:	2208      	movs	r2, #8
 8009bf0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,H,C,F,C,D,A");
 8009bf2:	687b      	ldr	r3, [r7, #4]
 8009bf4:	3340      	adds	r3, #64	; 0x40
 8009bf6:	4a89      	ldr	r2, [pc, #548]	; (8009e1c <createProblem+0x8f74>)
 8009bf8:	461c      	mov	r4, r3
 8009bfa:	4615      	mov	r5, r2
 8009bfc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009bfe:	6020      	str	r0, [r4, #0]
 8009c00:	6061      	str	r1, [r4, #4]
 8009c02:	60a2      	str	r2, [r4, #8]
 8009c04:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,8,8,11,13,15,18");
 8009c06:	687b      	ldr	r3, [r7, #4]
 8009c08:	3304      	adds	r3, #4
 8009c0a:	4a85      	ldr	r2, [pc, #532]	; (8009e20 <createProblem+0x8f78>)
 8009c0c:	461d      	mov	r5, r3
 8009c0e:	4614      	mov	r4, r2
 8009c10:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009c12:	6028      	str	r0, [r5, #0]
 8009c14:	6069      	str	r1, [r5, #4]
 8009c16:	60aa      	str	r2, [r5, #8]
 8009c18:	60eb      	str	r3, [r5, #12]
 8009c1a:	6820      	ldr	r0, [r4, #0]
 8009c1c:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8009c1e:	687b      	ldr	r3, [r7, #4]
 8009c20:	33d8      	adds	r3, #216	; 0xd8
 8009c22:	4a80      	ldr	r2, [pc, #512]	; (8009e24 <createProblem+0x8f7c>)
 8009c24:	461c      	mov	r4, r3
 8009c26:	4615      	mov	r5, r2
 8009c28:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009c2a:	6020      	str	r0, [r4, #0]
 8009c2c:	6061      	str	r1, [r4, #4]
 8009c2e:	60a2      	str	r2, [r4, #8]
 8009c30:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8009c32:	687b      	ldr	r3, [r7, #4]
 8009c34:	33cc      	adds	r3, #204	; 0xcc
 8009c36:	4a77      	ldr	r2, [pc, #476]	; (8009e14 <createProblem+0x8f6c>)
 8009c38:	6810      	ldr	r0, [r2, #0]
 8009c3a:	6018      	str	r0, [r3, #0]
			break;
 8009c3c:	f010 be7a 	b.w	801a934 <createProblem+0x19a8c>
		case 333 :
			strcpy(p->name,"PINCHINGPANDA");
 8009c40:	687b      	ldr	r3, [r7, #4]
 8009c42:	337c      	adds	r3, #124	; 0x7c
 8009c44:	4a78      	ldr	r2, [pc, #480]	; (8009e28 <createProblem+0x8f80>)
 8009c46:	461c      	mov	r4, r3
 8009c48:	4613      	mov	r3, r2
 8009c4a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009c4c:	6020      	str	r0, [r4, #0]
 8009c4e:	6061      	str	r1, [r4, #4]
 8009c50:	60a2      	str	r2, [r4, #8]
 8009c52:	881b      	ldrh	r3, [r3, #0]
 8009c54:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 9;
 8009c56:	687b      	ldr	r3, [r7, #4]
 8009c58:	2209      	movs	r2, #9
 8009c5a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,H,C,F,C,D,G,A");
 8009c5c:	687b      	ldr	r3, [r7, #4]
 8009c5e:	3340      	adds	r3, #64	; 0x40
 8009c60:	4a72      	ldr	r2, [pc, #456]	; (8009e2c <createProblem+0x8f84>)
 8009c62:	461d      	mov	r5, r3
 8009c64:	4614      	mov	r4, r2
 8009c66:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009c68:	6028      	str	r0, [r5, #0]
 8009c6a:	6069      	str	r1, [r5, #4]
 8009c6c:	60aa      	str	r2, [r5, #8]
 8009c6e:	60eb      	str	r3, [r5, #12]
 8009c70:	8823      	ldrh	r3, [r4, #0]
 8009c72:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,5,8,8,11,13,15,9,18");
 8009c74:	687b      	ldr	r3, [r7, #4]
 8009c76:	3304      	adds	r3, #4
 8009c78:	4a6d      	ldr	r2, [pc, #436]	; (8009e30 <createProblem+0x8f88>)
 8009c7a:	461d      	mov	r5, r3
 8009c7c:	4614      	mov	r4, r2
 8009c7e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009c80:	6028      	str	r0, [r5, #0]
 8009c82:	6069      	str	r1, [r5, #4]
 8009c84:	60aa      	str	r2, [r5, #8]
 8009c86:	60eb      	str	r3, [r5, #12]
 8009c88:	6820      	ldr	r0, [r4, #0]
 8009c8a:	6128      	str	r0, [r5, #16]
 8009c8c:	88a3      	ldrh	r3, [r4, #4]
 8009c8e:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8009c90:	687b      	ldr	r3, [r7, #4]
 8009c92:	33d8      	adds	r3, #216	; 0xd8
 8009c94:	4a5e      	ldr	r2, [pc, #376]	; (8009e10 <createProblem+0x8f68>)
 8009c96:	461d      	mov	r5, r3
 8009c98:	4614      	mov	r4, r2
 8009c9a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009c9c:	6028      	str	r0, [r5, #0]
 8009c9e:	6069      	str	r1, [r5, #4]
 8009ca0:	60aa      	str	r2, [r5, #8]
 8009ca2:	60eb      	str	r3, [r5, #12]
 8009ca4:	8823      	ldrh	r3, [r4, #0]
 8009ca6:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8009ca8:	687b      	ldr	r3, [r7, #4]
 8009caa:	33cc      	adds	r3, #204	; 0xcc
 8009cac:	4a59      	ldr	r2, [pc, #356]	; (8009e14 <createProblem+0x8f6c>)
 8009cae:	6810      	ldr	r0, [r2, #0]
 8009cb0:	6018      	str	r0, [r3, #0]
			break;
 8009cb2:	f010 be3f 	b.w	801a934 <createProblem+0x19a8c>
		case 334 :
			strcpy(p->name,"GIUDA BALLERINI");
 8009cb6:	687b      	ldr	r3, [r7, #4]
 8009cb8:	337c      	adds	r3, #124	; 0x7c
 8009cba:	4a5e      	ldr	r2, [pc, #376]	; (8009e34 <createProblem+0x8f8c>)
 8009cbc:	461c      	mov	r4, r3
 8009cbe:	4615      	mov	r5, r2
 8009cc0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009cc2:	6020      	str	r0, [r4, #0]
 8009cc4:	6061      	str	r1, [r4, #4]
 8009cc6:	60a2      	str	r2, [r4, #8]
 8009cc8:	60e3      	str	r3, [r4, #12]
			p->moveSize = 7;
 8009cca:	687b      	ldr	r3, [r7, #4]
 8009ccc:	2207      	movs	r2, #7
 8009cce:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,F,F,I,G,D");
 8009cd0:	687b      	ldr	r3, [r7, #4]
 8009cd2:	3340      	adds	r3, #64	; 0x40
 8009cd4:	4a58      	ldr	r2, [pc, #352]	; (8009e38 <createProblem+0x8f90>)
 8009cd6:	461c      	mov	r4, r3
 8009cd8:	4613      	mov	r3, r2
 8009cda:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009cdc:	6020      	str	r0, [r4, #0]
 8009cde:	6061      	str	r1, [r4, #4]
 8009ce0:	60a2      	str	r2, [r4, #8]
 8009ce2:	881b      	ldrh	r3, [r3, #0]
 8009ce4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,11,13,14,17,18");
 8009ce6:	687b      	ldr	r3, [r7, #4]
 8009ce8:	3304      	adds	r3, #4
 8009cea:	4a54      	ldr	r2, [pc, #336]	; (8009e3c <createProblem+0x8f94>)
 8009cec:	461d      	mov	r5, r3
 8009cee:	4614      	mov	r4, r2
 8009cf0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009cf2:	6028      	str	r0, [r5, #0]
 8009cf4:	6069      	str	r1, [r5, #4]
 8009cf6:	60aa      	str	r2, [r5, #8]
 8009cf8:	60eb      	str	r3, [r5, #12]
 8009cfa:	8823      	ldrh	r3, [r4, #0]
 8009cfc:	78a2      	ldrb	r2, [r4, #2]
 8009cfe:	822b      	strh	r3, [r5, #16]
 8009d00:	4613      	mov	r3, r2
 8009d02:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8009d04:	687b      	ldr	r3, [r7, #4]
 8009d06:	33d8      	adds	r3, #216	; 0xd8
 8009d08:	4a4d      	ldr	r2, [pc, #308]	; (8009e40 <createProblem+0x8f98>)
 8009d0a:	461c      	mov	r4, r3
 8009d0c:	4613      	mov	r3, r2
 8009d0e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009d10:	6020      	str	r0, [r4, #0]
 8009d12:	6061      	str	r1, [r4, #4]
 8009d14:	60a2      	str	r2, [r4, #8]
 8009d16:	881b      	ldrh	r3, [r3, #0]
 8009d18:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B");
 8009d1a:	687b      	ldr	r3, [r7, #4]
 8009d1c:	33cc      	adds	r3, #204	; 0xcc
 8009d1e:	4a49      	ldr	r2, [pc, #292]	; (8009e44 <createProblem+0x8f9c>)
 8009d20:	8811      	ldrh	r1, [r2, #0]
 8009d22:	7892      	ldrb	r2, [r2, #2]
 8009d24:	8019      	strh	r1, [r3, #0]
 8009d26:	709a      	strb	r2, [r3, #2]
			break;
 8009d28:	f010 be04 	b.w	801a934 <createProblem+0x19a8c>
		case 335 :
			strcpy(p->name,"NIC_LAICALADDER");
 8009d2c:	687b      	ldr	r3, [r7, #4]
 8009d2e:	337c      	adds	r3, #124	; 0x7c
 8009d30:	4a45      	ldr	r2, [pc, #276]	; (8009e48 <createProblem+0x8fa0>)
 8009d32:	461c      	mov	r4, r3
 8009d34:	4615      	mov	r5, r2
 8009d36:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009d38:	6020      	str	r0, [r4, #0]
 8009d3a:	6061      	str	r1, [r4, #4]
 8009d3c:	60a2      	str	r2, [r4, #8]
 8009d3e:	60e3      	str	r3, [r4, #12]
			p->moveSize = 5;
 8009d40:	687b      	ldr	r3, [r7, #4]
 8009d42:	2205      	movs	r2, #5
 8009d44:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,I,G,J,I");
 8009d46:	687b      	ldr	r3, [r7, #4]
 8009d48:	3340      	adds	r3, #64	; 0x40
 8009d4a:	4940      	ldr	r1, [pc, #256]	; (8009e4c <createProblem+0x8fa4>)
 8009d4c:	461a      	mov	r2, r3
 8009d4e:	460b      	mov	r3, r1
 8009d50:	cb03      	ldmia	r3!, {r0, r1}
 8009d52:	6010      	str	r0, [r2, #0]
 8009d54:	6051      	str	r1, [r2, #4]
 8009d56:	881b      	ldrh	r3, [r3, #0]
 8009d58:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,10,14,16,18");
 8009d5a:	687b      	ldr	r3, [r7, #4]
 8009d5c:	3304      	adds	r3, #4
 8009d5e:	4a3c      	ldr	r2, [pc, #240]	; (8009e50 <createProblem+0x8fa8>)
 8009d60:	461c      	mov	r4, r3
 8009d62:	4613      	mov	r3, r2
 8009d64:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009d66:	6020      	str	r0, [r4, #0]
 8009d68:	6061      	str	r1, [r4, #4]
 8009d6a:	60a2      	str	r2, [r4, #8]
 8009d6c:	881b      	ldrh	r3, [r3, #0]
 8009d6e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8009d70:	687b      	ldr	r3, [r7, #4]
 8009d72:	33d8      	adds	r3, #216	; 0xd8
 8009d74:	4937      	ldr	r1, [pc, #220]	; (8009e54 <createProblem+0x8fac>)
 8009d76:	461a      	mov	r2, r3
 8009d78:	460b      	mov	r3, r1
 8009d7a:	cb03      	ldmia	r3!, {r0, r1}
 8009d7c:	6010      	str	r0, [r2, #0]
 8009d7e:	6051      	str	r1, [r2, #4]
 8009d80:	881b      	ldrh	r3, [r3, #0]
 8009d82:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 8009d84:	687b      	ldr	r3, [r7, #4]
 8009d86:	33cc      	adds	r3, #204	; 0xcc
 8009d88:	4a33      	ldr	r2, [pc, #204]	; (8009e58 <createProblem+0x8fb0>)
 8009d8a:	8811      	ldrh	r1, [r2, #0]
 8009d8c:	7892      	ldrb	r2, [r2, #2]
 8009d8e:	8019      	strh	r1, [r3, #0]
 8009d90:	709a      	strb	r2, [r3, #2]
			break;
 8009d92:	f010 bdcf 	b.w	801a934 <createProblem+0x19a8c>
		case 336 :
			strcpy(p->name,"A BIT REACHY");
 8009d96:	687b      	ldr	r3, [r7, #4]
 8009d98:	337c      	adds	r3, #124	; 0x7c
 8009d9a:	4a30      	ldr	r2, [pc, #192]	; (8009e5c <createProblem+0x8fb4>)
 8009d9c:	461c      	mov	r4, r3
 8009d9e:	4613      	mov	r3, r2
 8009da0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009da2:	6020      	str	r0, [r4, #0]
 8009da4:	6061      	str	r1, [r4, #4]
 8009da6:	60a2      	str	r2, [r4, #8]
 8009da8:	781b      	ldrb	r3, [r3, #0]
 8009daa:	7323      	strb	r3, [r4, #12]
			p->moveSize = 8;
 8009dac:	687b      	ldr	r3, [r7, #4]
 8009dae:	2208      	movs	r2, #8
 8009db0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,G,H,G,I,G,I");
 8009db2:	687b      	ldr	r3, [r7, #4]
 8009db4:	3340      	adds	r3, #64	; 0x40
 8009db6:	4a2a      	ldr	r2, [pc, #168]	; (8009e60 <createProblem+0x8fb8>)
 8009db8:	461c      	mov	r4, r3
 8009dba:	4615      	mov	r5, r2
 8009dbc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009dbe:	6020      	str	r0, [r4, #0]
 8009dc0:	6061      	str	r1, [r4, #4]
 8009dc2:	60a2      	str	r2, [r4, #8]
 8009dc4:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,9,10,14,14,15,18");
 8009dc6:	687b      	ldr	r3, [r7, #4]
 8009dc8:	3304      	adds	r3, #4
 8009dca:	4a26      	ldr	r2, [pc, #152]	; (8009e64 <createProblem+0x8fbc>)
 8009dcc:	461d      	mov	r5, r3
 8009dce:	4614      	mov	r4, r2
 8009dd0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009dd2:	6028      	str	r0, [r5, #0]
 8009dd4:	6069      	str	r1, [r5, #4]
 8009dd6:	60aa      	str	r2, [r5, #8]
 8009dd8:	60eb      	str	r3, [r5, #12]
 8009dda:	6820      	ldr	r0, [r4, #0]
 8009ddc:	6128      	str	r0, [r5, #16]
 8009dde:	7923      	ldrb	r3, [r4, #4]
 8009de0:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8009de2:	687b      	ldr	r3, [r7, #4]
 8009de4:	33d8      	adds	r3, #216	; 0xd8
 8009de6:	4a0f      	ldr	r2, [pc, #60]	; (8009e24 <createProblem+0x8f7c>)
 8009de8:	461c      	mov	r4, r3
 8009dea:	4615      	mov	r5, r2
 8009dec:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009dee:	6020      	str	r0, [r4, #0]
 8009df0:	6061      	str	r1, [r4, #4]
 8009df2:	60a2      	str	r2, [r4, #8]
 8009df4:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8009df6:	687b      	ldr	r3, [r7, #4]
 8009df8:	33cc      	adds	r3, #204	; 0xcc
 8009dfa:	4a06      	ldr	r2, [pc, #24]	; (8009e14 <createProblem+0x8f6c>)
 8009dfc:	6810      	ldr	r0, [r2, #0]
 8009dfe:	6018      	str	r0, [r3, #0]
			break;
 8009e00:	f010 bd98 	b.w	801a934 <createProblem+0x19a8c>
 8009e04:	080239a4 	.word	0x080239a4
 8009e08:	080239ac 	.word	0x080239ac
 8009e0c:	080239c0 	.word	0x080239c0
 8009e10:	08020dfc 	.word	0x08020dfc
 8009e14:	08020830 	.word	0x08020830
 8009e18:	080239d8 	.word	0x080239d8
 8009e1c:	080239e4 	.word	0x080239e4
 8009e20:	080239f4 	.word	0x080239f4
 8009e24:	08020a4c 	.word	0x08020a4c
 8009e28:	08023a08 	.word	0x08023a08
 8009e2c:	08023a18 	.word	0x08023a18
 8009e30:	08023a2c 	.word	0x08023a2c
 8009e34:	08023a44 	.word	0x08023a44
 8009e38:	08023a54 	.word	0x08023a54
 8009e3c:	08023a64 	.word	0x08023a64
 8009e40:	08020a14 	.word	0x08020a14
 8009e44:	080208ac 	.word	0x080208ac
 8009e48:	08023a78 	.word	0x08023a78
 8009e4c:	08023a88 	.word	0x08023a88
 8009e50:	08023a94 	.word	0x08023a94
 8009e54:	080208a0 	.word	0x080208a0
 8009e58:	08020874 	.word	0x08020874
 8009e5c:	08023aa4 	.word	0x08023aa4
 8009e60:	08023ab4 	.word	0x08023ab4
 8009e64:	08023ac4 	.word	0x08023ac4
		case 337 :
			strcpy(p->name,"PIZZAPUNT");
 8009e68:	687b      	ldr	r3, [r7, #4]
 8009e6a:	337c      	adds	r3, #124	; 0x7c
 8009e6c:	49c1      	ldr	r1, [pc, #772]	; (800a174 <createProblem+0x92cc>)
 8009e6e:	461a      	mov	r2, r3
 8009e70:	460b      	mov	r3, r1
 8009e72:	cb03      	ldmia	r3!, {r0, r1}
 8009e74:	6010      	str	r0, [r2, #0]
 8009e76:	6051      	str	r1, [r2, #4]
 8009e78:	881b      	ldrh	r3, [r3, #0]
 8009e7a:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 8009e7c:	687b      	ldr	r3, [r7, #4]
 8009e7e:	2207      	movs	r2, #7
 8009e80:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,A,E,B,D");
 8009e82:	687b      	ldr	r3, [r7, #4]
 8009e84:	3340      	adds	r3, #64	; 0x40
 8009e86:	4abc      	ldr	r2, [pc, #752]	; (800a178 <createProblem+0x92d0>)
 8009e88:	461c      	mov	r4, r3
 8009e8a:	4613      	mov	r3, r2
 8009e8c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009e8e:	6020      	str	r0, [r4, #0]
 8009e90:	6061      	str	r1, [r4, #4]
 8009e92:	60a2      	str	r2, [r4, #8]
 8009e94:	881b      	ldrh	r3, [r3, #0]
 8009e96:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,8,9,12,15,18");
 8009e98:	687b      	ldr	r3, [r7, #4]
 8009e9a:	3304      	adds	r3, #4
 8009e9c:	4ab7      	ldr	r2, [pc, #732]	; (800a17c <createProblem+0x92d4>)
 8009e9e:	461d      	mov	r5, r3
 8009ea0:	4614      	mov	r4, r2
 8009ea2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009ea4:	6028      	str	r0, [r5, #0]
 8009ea6:	6069      	str	r1, [r5, #4]
 8009ea8:	60aa      	str	r2, [r5, #8]
 8009eaa:	60eb      	str	r3, [r5, #12]
 8009eac:	7823      	ldrb	r3, [r4, #0]
 8009eae:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8009eb0:	687b      	ldr	r3, [r7, #4]
 8009eb2:	33d8      	adds	r3, #216	; 0xd8
 8009eb4:	4ab2      	ldr	r2, [pc, #712]	; (800a180 <createProblem+0x92d8>)
 8009eb6:	461c      	mov	r4, r3
 8009eb8:	4613      	mov	r3, r2
 8009eba:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009ebc:	6020      	str	r0, [r4, #0]
 8009ebe:	6061      	str	r1, [r4, #4]
 8009ec0:	60a2      	str	r2, [r4, #8]
 8009ec2:	881b      	ldrh	r3, [r3, #0]
 8009ec4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8009ec6:	687b      	ldr	r3, [r7, #4]
 8009ec8:	33cc      	adds	r3, #204	; 0xcc
 8009eca:	4aae      	ldr	r2, [pc, #696]	; (800a184 <createProblem+0x92dc>)
 8009ecc:	6810      	ldr	r0, [r2, #0]
 8009ece:	6018      	str	r0, [r3, #0]
			break;
 8009ed0:	f010 bd30 	b.w	801a934 <createProblem+0x19a8c>
		case 338 :
			strcpy(p->name,"ONE PUNCH");
 8009ed4:	687b      	ldr	r3, [r7, #4]
 8009ed6:	337c      	adds	r3, #124	; 0x7c
 8009ed8:	49ab      	ldr	r1, [pc, #684]	; (800a188 <createProblem+0x92e0>)
 8009eda:	461a      	mov	r2, r3
 8009edc:	460b      	mov	r3, r1
 8009ede:	cb03      	ldmia	r3!, {r0, r1}
 8009ee0:	6010      	str	r0, [r2, #0]
 8009ee2:	6051      	str	r1, [r2, #4]
 8009ee4:	881b      	ldrh	r3, [r3, #0]
 8009ee6:	8113      	strh	r3, [r2, #8]
			p->moveSize = 9;
 8009ee8:	687b      	ldr	r3, [r7, #4]
 8009eea:	2209      	movs	r2, #9
 8009eec:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,G,K,H,K,G,I,D");
 8009eee:	687b      	ldr	r3, [r7, #4]
 8009ef0:	3340      	adds	r3, #64	; 0x40
 8009ef2:	4aa6      	ldr	r2, [pc, #664]	; (800a18c <createProblem+0x92e4>)
 8009ef4:	461d      	mov	r5, r3
 8009ef6:	4614      	mov	r4, r2
 8009ef8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009efa:	6028      	str	r0, [r5, #0]
 8009efc:	6069      	str	r1, [r5, #4]
 8009efe:	60aa      	str	r2, [r5, #8]
 8009f00:	60eb      	str	r3, [r5, #12]
 8009f02:	8823      	ldrh	r3, [r4, #0]
 8009f04:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,5,15,9,12,14,17,7,18");
 8009f06:	687b      	ldr	r3, [r7, #4]
 8009f08:	3304      	adds	r3, #4
 8009f0a:	4aa1      	ldr	r2, [pc, #644]	; (800a190 <createProblem+0x92e8>)
 8009f0c:	461c      	mov	r4, r3
 8009f0e:	4615      	mov	r5, r2
 8009f10:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009f12:	6020      	str	r0, [r4, #0]
 8009f14:	6061      	str	r1, [r4, #4]
 8009f16:	60a2      	str	r2, [r4, #8]
 8009f18:	60e3      	str	r3, [r4, #12]
 8009f1a:	6828      	ldr	r0, [r5, #0]
 8009f1c:	6120      	str	r0, [r4, #16]
 8009f1e:	88ab      	ldrh	r3, [r5, #4]
 8009f20:	79aa      	ldrb	r2, [r5, #6]
 8009f22:	82a3      	strh	r3, [r4, #20]
 8009f24:	4613      	mov	r3, r2
 8009f26:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8009f28:	687b      	ldr	r3, [r7, #4]
 8009f2a:	33d8      	adds	r3, #216	; 0xd8
 8009f2c:	4a99      	ldr	r2, [pc, #612]	; (800a194 <createProblem+0x92ec>)
 8009f2e:	461d      	mov	r5, r3
 8009f30:	4614      	mov	r4, r2
 8009f32:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009f34:	6028      	str	r0, [r5, #0]
 8009f36:	6069      	str	r1, [r5, #4]
 8009f38:	60aa      	str	r2, [r5, #8]
 8009f3a:	60eb      	str	r3, [r5, #12]
 8009f3c:	8823      	ldrh	r3, [r4, #0]
 8009f3e:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6C");
 8009f40:	687b      	ldr	r3, [r7, #4]
 8009f42:	33cc      	adds	r3, #204	; 0xcc
 8009f44:	4a94      	ldr	r2, [pc, #592]	; (800a198 <createProblem+0x92f0>)
 8009f46:	8811      	ldrh	r1, [r2, #0]
 8009f48:	7892      	ldrb	r2, [r2, #2]
 8009f4a:	8019      	strh	r1, [r3, #0]
 8009f4c:	709a      	strb	r2, [r3, #2]
			break;
 8009f4e:	f010 bcf1 	b.w	801a934 <createProblem+0x19a8c>
		case 339 :
			strcpy(p->name,"THE F(L)IGHT");
 8009f52:	687b      	ldr	r3, [r7, #4]
 8009f54:	337c      	adds	r3, #124	; 0x7c
 8009f56:	4a91      	ldr	r2, [pc, #580]	; (800a19c <createProblem+0x92f4>)
 8009f58:	461c      	mov	r4, r3
 8009f5a:	4613      	mov	r3, r2
 8009f5c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009f5e:	6020      	str	r0, [r4, #0]
 8009f60:	6061      	str	r1, [r4, #4]
 8009f62:	60a2      	str	r2, [r4, #8]
 8009f64:	781b      	ldrb	r3, [r3, #0]
 8009f66:	7323      	strb	r3, [r4, #12]
			p->moveSize = 8;
 8009f68:	687b      	ldr	r3, [r7, #4]
 8009f6a:	2208      	movs	r2, #8
 8009f6c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,G,F,J,J,E,I");
 8009f6e:	687b      	ldr	r3, [r7, #4]
 8009f70:	3340      	adds	r3, #64	; 0x40
 8009f72:	4a8b      	ldr	r2, [pc, #556]	; (800a1a0 <createProblem+0x92f8>)
 8009f74:	461c      	mov	r4, r3
 8009f76:	4615      	mov	r5, r2
 8009f78:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009f7a:	6020      	str	r0, [r4, #0]
 8009f7c:	6061      	str	r1, [r4, #4]
 8009f7e:	60a2      	str	r2, [r4, #8]
 8009f80:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,15,11,13,7,9,18");
 8009f82:	687b      	ldr	r3, [r7, #4]
 8009f84:	3304      	adds	r3, #4
 8009f86:	4a87      	ldr	r2, [pc, #540]	; (800a1a4 <createProblem+0x92fc>)
 8009f88:	461d      	mov	r5, r3
 8009f8a:	4614      	mov	r4, r2
 8009f8c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009f8e:	6028      	str	r0, [r5, #0]
 8009f90:	6069      	str	r1, [r5, #4]
 8009f92:	60aa      	str	r2, [r5, #8]
 8009f94:	60eb      	str	r3, [r5, #12]
 8009f96:	6820      	ldr	r0, [r4, #0]
 8009f98:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8009f9a:	687b      	ldr	r3, [r7, #4]
 8009f9c:	33d8      	adds	r3, #216	; 0xd8
 8009f9e:	4a82      	ldr	r2, [pc, #520]	; (800a1a8 <createProblem+0x9300>)
 8009fa0:	461c      	mov	r4, r3
 8009fa2:	4615      	mov	r5, r2
 8009fa4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8009fa6:	6020      	str	r0, [r4, #0]
 8009fa8:	6061      	str	r1, [r4, #4]
 8009faa:	60a2      	str	r2, [r4, #8]
 8009fac:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 8009fae:	687b      	ldr	r3, [r7, #4]
 8009fb0:	33cc      	adds	r3, #204	; 0xcc
 8009fb2:	4a7e      	ldr	r2, [pc, #504]	; (800a1ac <createProblem+0x9304>)
 8009fb4:	6810      	ldr	r0, [r2, #0]
 8009fb6:	6018      	str	r0, [r3, #0]
			break;
 8009fb8:	f010 bcbc 	b.w	801a934 <createProblem+0x19a8c>
		case 34 :
			strcpy(p->name,"MASTERFUL GAP");
 8009fbc:	687b      	ldr	r3, [r7, #4]
 8009fbe:	337c      	adds	r3, #124	; 0x7c
 8009fc0:	4a7b      	ldr	r2, [pc, #492]	; (800a1b0 <createProblem+0x9308>)
 8009fc2:	461c      	mov	r4, r3
 8009fc4:	4613      	mov	r3, r2
 8009fc6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009fc8:	6020      	str	r0, [r4, #0]
 8009fca:	6061      	str	r1, [r4, #4]
 8009fcc:	60a2      	str	r2, [r4, #8]
 8009fce:	881b      	ldrh	r3, [r3, #0]
 8009fd0:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 8009fd2:	687b      	ldr	r3, [r7, #4]
 8009fd4:	2207      	movs	r2, #7
 8009fd6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"A,B,C,C,E,F,I");
 8009fd8:	687b      	ldr	r3, [r7, #4]
 8009fda:	3340      	adds	r3, #64	; 0x40
 8009fdc:	4a75      	ldr	r2, [pc, #468]	; (800a1b4 <createProblem+0x930c>)
 8009fde:	461c      	mov	r4, r3
 8009fe0:	4613      	mov	r3, r2
 8009fe2:	cb07      	ldmia	r3!, {r0, r1, r2}
 8009fe4:	6020      	str	r0, [r4, #0]
 8009fe6:	6061      	str	r1, [r4, #4]
 8009fe8:	60a2      	str	r2, [r4, #8]
 8009fea:	881b      	ldrh	r3, [r3, #0]
 8009fec:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"9,6,5,13,16,11,18");
 8009fee:	687b      	ldr	r3, [r7, #4]
 8009ff0:	3304      	adds	r3, #4
 8009ff2:	4a71      	ldr	r2, [pc, #452]	; (800a1b8 <createProblem+0x9310>)
 8009ff4:	461d      	mov	r5, r3
 8009ff6:	4614      	mov	r4, r2
 8009ff8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8009ffa:	6028      	str	r0, [r5, #0]
 8009ffc:	6069      	str	r1, [r5, #4]
 8009ffe:	60aa      	str	r2, [r5, #8]
 800a000:	60eb      	str	r3, [r5, #12]
 800a002:	8823      	ldrh	r3, [r4, #0]
 800a004:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "d,s,s,d,d,d,e");
 800a006:	687b      	ldr	r3, [r7, #4]
 800a008:	33d8      	adds	r3, #216	; 0xd8
 800a00a:	4a6c      	ldr	r2, [pc, #432]	; (800a1bc <createProblem+0x9314>)
 800a00c:	461c      	mov	r4, r3
 800a00e:	4613      	mov	r3, r2
 800a010:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a012:	6020      	str	r0, [r4, #0]
 800a014:	6061      	str	r1, [r4, #4]
 800a016:	60a2      	str	r2, [r4, #8]
 800a018:	881b      	ldrh	r3, [r3, #0]
 800a01a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 800a01c:	687b      	ldr	r3, [r7, #4]
 800a01e:	33cc      	adds	r3, #204	; 0xcc
 800a020:	4a62      	ldr	r2, [pc, #392]	; (800a1ac <createProblem+0x9304>)
 800a022:	6810      	ldr	r0, [r2, #0]
 800a024:	6018      	str	r0, [r3, #0]
			break;
 800a026:	f010 bc85 	b.w	801a934 <createProblem+0x19a8c>
		case 340 :
			strcpy(p->name,"FACE DE RAT");
 800a02a:	687b      	ldr	r3, [r7, #4]
 800a02c:	337c      	adds	r3, #124	; 0x7c
 800a02e:	4a64      	ldr	r2, [pc, #400]	; (800a1c0 <createProblem+0x9318>)
 800a030:	461c      	mov	r4, r3
 800a032:	4613      	mov	r3, r2
 800a034:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a036:	6020      	str	r0, [r4, #0]
 800a038:	6061      	str	r1, [r4, #4]
 800a03a:	60a2      	str	r2, [r4, #8]
			p->moveSize = 8;
 800a03c:	687b      	ldr	r3, [r7, #4]
 800a03e:	2208      	movs	r2, #8
 800a040:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,A,E,F,I,I");
 800a042:	687b      	ldr	r3, [r7, #4]
 800a044:	3340      	adds	r3, #64	; 0x40
 800a046:	4a5f      	ldr	r2, [pc, #380]	; (800a1c4 <createProblem+0x931c>)
 800a048:	461c      	mov	r4, r3
 800a04a:	4615      	mov	r5, r2
 800a04c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a04e:	6020      	str	r0, [r4, #0]
 800a050:	6061      	str	r1, [r4, #4]
 800a052:	60a2      	str	r2, [r4, #8]
 800a054:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,8,9,12,13,14,18");
 800a056:	687b      	ldr	r3, [r7, #4]
 800a058:	3304      	adds	r3, #4
 800a05a:	4a5b      	ldr	r2, [pc, #364]	; (800a1c8 <createProblem+0x9320>)
 800a05c:	461d      	mov	r5, r3
 800a05e:	4614      	mov	r4, r2
 800a060:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a062:	6028      	str	r0, [r5, #0]
 800a064:	6069      	str	r1, [r5, #4]
 800a066:	60aa      	str	r2, [r5, #8]
 800a068:	60eb      	str	r3, [r5, #12]
 800a06a:	6820      	ldr	r0, [r4, #0]
 800a06c:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 800a06e:	687b      	ldr	r3, [r7, #4]
 800a070:	33d8      	adds	r3, #216	; 0xd8
 800a072:	4a56      	ldr	r2, [pc, #344]	; (800a1cc <createProblem+0x9324>)
 800a074:	461c      	mov	r4, r3
 800a076:	4615      	mov	r5, r2
 800a078:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a07a:	6020      	str	r0, [r4, #0]
 800a07c:	6061      	str	r1, [r4, #4]
 800a07e:	60a2      	str	r2, [r4, #8]
 800a080:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 800a082:	687b      	ldr	r3, [r7, #4]
 800a084:	33cc      	adds	r3, #204	; 0xcc
 800a086:	4a44      	ldr	r2, [pc, #272]	; (800a198 <createProblem+0x92f0>)
 800a088:	8811      	ldrh	r1, [r2, #0]
 800a08a:	7892      	ldrb	r2, [r2, #2]
 800a08c:	8019      	strh	r1, [r3, #0]
 800a08e:	709a      	strb	r2, [r3, #2]
			break;
 800a090:	f010 bc50 	b.w	801a934 <createProblem+0x19a8c>
		case 341 :
			strcpy(p->name,"THE LITTLE ISLAND");
 800a094:	687b      	ldr	r3, [r7, #4]
 800a096:	337c      	adds	r3, #124	; 0x7c
 800a098:	4a4d      	ldr	r2, [pc, #308]	; (800a1d0 <createProblem+0x9328>)
 800a09a:	461d      	mov	r5, r3
 800a09c:	4614      	mov	r4, r2
 800a09e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a0a0:	6028      	str	r0, [r5, #0]
 800a0a2:	6069      	str	r1, [r5, #4]
 800a0a4:	60aa      	str	r2, [r5, #8]
 800a0a6:	60eb      	str	r3, [r5, #12]
 800a0a8:	8823      	ldrh	r3, [r4, #0]
 800a0aa:	822b      	strh	r3, [r5, #16]
			p->moveSize = 6;
 800a0ac:	687b      	ldr	r3, [r7, #4]
 800a0ae:	2206      	movs	r2, #6
 800a0b0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,K,H,G,D");
 800a0b2:	687b      	ldr	r3, [r7, #4]
 800a0b4:	3340      	adds	r3, #64	; 0x40
 800a0b6:	4a47      	ldr	r2, [pc, #284]	; (800a1d4 <createProblem+0x932c>)
 800a0b8:	461c      	mov	r4, r3
 800a0ba:	4613      	mov	r3, r2
 800a0bc:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a0be:	6020      	str	r0, [r4, #0]
 800a0c0:	6061      	str	r1, [r4, #4]
 800a0c2:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,9,12,17,18");
 800a0c4:	687b      	ldr	r3, [r7, #4]
 800a0c6:	3304      	adds	r3, #4
 800a0c8:	4a43      	ldr	r2, [pc, #268]	; (800a1d8 <createProblem+0x9330>)
 800a0ca:	461c      	mov	r4, r3
 800a0cc:	4613      	mov	r3, r2
 800a0ce:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a0d0:	6020      	str	r0, [r4, #0]
 800a0d2:	6061      	str	r1, [r4, #4]
 800a0d4:	60a2      	str	r2, [r4, #8]
 800a0d6:	881a      	ldrh	r2, [r3, #0]
 800a0d8:	789b      	ldrb	r3, [r3, #2]
 800a0da:	81a2      	strh	r2, [r4, #12]
 800a0dc:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800a0de:	687b      	ldr	r3, [r7, #4]
 800a0e0:	33d8      	adds	r3, #216	; 0xd8
 800a0e2:	4a3e      	ldr	r2, [pc, #248]	; (800a1dc <createProblem+0x9334>)
 800a0e4:	461c      	mov	r4, r3
 800a0e6:	4613      	mov	r3, r2
 800a0e8:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a0ea:	6020      	str	r0, [r4, #0]
 800a0ec:	6061      	str	r1, [r4, #4]
 800a0ee:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B");
 800a0f0:	687b      	ldr	r3, [r7, #4]
 800a0f2:	33cc      	adds	r3, #204	; 0xcc
 800a0f4:	4a3a      	ldr	r2, [pc, #232]	; (800a1e0 <createProblem+0x9338>)
 800a0f6:	8811      	ldrh	r1, [r2, #0]
 800a0f8:	7892      	ldrb	r2, [r2, #2]
 800a0fa:	8019      	strh	r1, [r3, #0]
 800a0fc:	709a      	strb	r2, [r3, #2]
			break;
 800a0fe:	f010 bc19 	b.w	801a934 <createProblem+0x19a8c>
		case 342 :
			strcpy(p->name,"THE MOVE");
 800a102:	687b      	ldr	r3, [r7, #4]
 800a104:	337c      	adds	r3, #124	; 0x7c
 800a106:	4937      	ldr	r1, [pc, #220]	; (800a1e4 <createProblem+0x933c>)
 800a108:	461a      	mov	r2, r3
 800a10a:	460b      	mov	r3, r1
 800a10c:	cb03      	ldmia	r3!, {r0, r1}
 800a10e:	6010      	str	r0, [r2, #0]
 800a110:	6051      	str	r1, [r2, #4]
 800a112:	781b      	ldrb	r3, [r3, #0]
 800a114:	7213      	strb	r3, [r2, #8]
			p->moveSize = 7;
 800a116:	687b      	ldr	r3, [r7, #4]
 800a118:	2207      	movs	r2, #7
 800a11a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,E,H,H,I");
 800a11c:	687b      	ldr	r3, [r7, #4]
 800a11e:	3340      	adds	r3, #64	; 0x40
 800a120:	4a31      	ldr	r2, [pc, #196]	; (800a1e8 <createProblem+0x9340>)
 800a122:	461c      	mov	r4, r3
 800a124:	4613      	mov	r3, r2
 800a126:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a128:	6020      	str	r0, [r4, #0]
 800a12a:	6061      	str	r1, [r4, #4]
 800a12c:	60a2      	str	r2, [r4, #8]
 800a12e:	881b      	ldrh	r3, [r3, #0]
 800a130:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,9,12,12,16,18");
 800a132:	687b      	ldr	r3, [r7, #4]
 800a134:	3304      	adds	r3, #4
 800a136:	4a2d      	ldr	r2, [pc, #180]	; (800a1ec <createProblem+0x9344>)
 800a138:	461d      	mov	r5, r3
 800a13a:	4614      	mov	r4, r2
 800a13c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a13e:	6028      	str	r0, [r5, #0]
 800a140:	6069      	str	r1, [r5, #4]
 800a142:	60aa      	str	r2, [r5, #8]
 800a144:	60eb      	str	r3, [r5, #12]
 800a146:	8823      	ldrh	r3, [r4, #0]
 800a148:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800a14a:	687b      	ldr	r3, [r7, #4]
 800a14c:	33d8      	adds	r3, #216	; 0xd8
 800a14e:	4a0c      	ldr	r2, [pc, #48]	; (800a180 <createProblem+0x92d8>)
 800a150:	461c      	mov	r4, r3
 800a152:	4613      	mov	r3, r2
 800a154:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a156:	6020      	str	r0, [r4, #0]
 800a158:	6061      	str	r1, [r4, #4]
 800a15a:	60a2      	str	r2, [r4, #8]
 800a15c:	881b      	ldrh	r3, [r3, #0]
 800a15e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 800a160:	687b      	ldr	r3, [r7, #4]
 800a162:	33cc      	adds	r3, #204	; 0xcc
 800a164:	4a0c      	ldr	r2, [pc, #48]	; (800a198 <createProblem+0x92f0>)
 800a166:	8811      	ldrh	r1, [r2, #0]
 800a168:	7892      	ldrb	r2, [r2, #2]
 800a16a:	8019      	strh	r1, [r3, #0]
 800a16c:	709a      	strb	r2, [r3, #2]
			break;
 800a16e:	f010 bbe1 	b.w	801a934 <createProblem+0x19a8c>
 800a172:	bf00      	nop
 800a174:	08023adc 	.word	0x08023adc
 800a178:	08023ae8 	.word	0x08023ae8
 800a17c:	08023af8 	.word	0x08023af8
 800a180:	08020a14 	.word	0x08020a14
 800a184:	08020830 	.word	0x08020830
 800a188:	08023b0c 	.word	0x08023b0c
 800a18c:	08023b18 	.word	0x08023b18
 800a190:	08023b2c 	.word	0x08023b2c
 800a194:	08020dfc 	.word	0x08020dfc
 800a198:	080208f0 	.word	0x080208f0
 800a19c:	08023b44 	.word	0x08023b44
 800a1a0:	08023b54 	.word	0x08023b54
 800a1a4:	08023b64 	.word	0x08023b64
 800a1a8:	08020a4c 	.word	0x08020a4c
 800a1ac:	080209a4 	.word	0x080209a4
 800a1b0:	08023b78 	.word	0x08023b78
 800a1b4:	08023b88 	.word	0x08023b88
 800a1b8:	08023b98 	.word	0x08023b98
 800a1bc:	08023bac 	.word	0x08023bac
 800a1c0:	08023bbc 	.word	0x08023bbc
 800a1c4:	08023bc8 	.word	0x08023bc8
 800a1c8:	08023bd8 	.word	0x08023bd8
 800a1cc:	080209d8 	.word	0x080209d8
 800a1d0:	08023bec 	.word	0x08023bec
 800a1d4:	08023c00 	.word	0x08023c00
 800a1d8:	08023c0c 	.word	0x08023c0c
 800a1dc:	0802091c 	.word	0x0802091c
 800a1e0:	080208ac 	.word	0x080208ac
 800a1e4:	08023c1c 	.word	0x08023c1c
 800a1e8:	08023c28 	.word	0x08023c28
 800a1ec:	08023c38 	.word	0x08023c38
		case 343 :
			strcpy(p->name,"LITTLE COSA NOSTRA");
 800a1f0:	687b      	ldr	r3, [r7, #4]
 800a1f2:	337c      	adds	r3, #124	; 0x7c
 800a1f4:	4aaf      	ldr	r2, [pc, #700]	; (800a4b4 <createProblem+0x960c>)
 800a1f6:	461d      	mov	r5, r3
 800a1f8:	4614      	mov	r4, r2
 800a1fa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a1fc:	6028      	str	r0, [r5, #0]
 800a1fe:	6069      	str	r1, [r5, #4]
 800a200:	60aa      	str	r2, [r5, #8]
 800a202:	60eb      	str	r3, [r5, #12]
 800a204:	8823      	ldrh	r3, [r4, #0]
 800a206:	78a2      	ldrb	r2, [r4, #2]
 800a208:	822b      	strh	r3, [r5, #16]
 800a20a:	4613      	mov	r3, r2
 800a20c:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 9;
 800a20e:	687b      	ldr	r3, [r7, #4]
 800a210:	2209      	movs	r2, #9
 800a212:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,C,F,K,G,I,E,D");
 800a214:	687b      	ldr	r3, [r7, #4]
 800a216:	3340      	adds	r3, #64	; 0x40
 800a218:	4aa7      	ldr	r2, [pc, #668]	; (800a4b8 <createProblem+0x9610>)
 800a21a:	461d      	mov	r5, r3
 800a21c:	4614      	mov	r4, r2
 800a21e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a220:	6028      	str	r0, [r5, #0]
 800a222:	6069      	str	r1, [r5, #4]
 800a224:	60aa      	str	r2, [r5, #8]
 800a226:	60eb      	str	r3, [r5, #12]
 800a228:	8823      	ldrh	r3, [r4, #0]
 800a22a:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,6,8,11,9,10,14,16,18");
 800a22c:	687b      	ldr	r3, [r7, #4]
 800a22e:	3304      	adds	r3, #4
 800a230:	4aa2      	ldr	r2, [pc, #648]	; (800a4bc <createProblem+0x9614>)
 800a232:	461c      	mov	r4, r3
 800a234:	4615      	mov	r5, r2
 800a236:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a238:	6020      	str	r0, [r4, #0]
 800a23a:	6061      	str	r1, [r4, #4]
 800a23c:	60a2      	str	r2, [r4, #8]
 800a23e:	60e3      	str	r3, [r4, #12]
 800a240:	6828      	ldr	r0, [r5, #0]
 800a242:	6120      	str	r0, [r4, #16]
 800a244:	88ab      	ldrh	r3, [r5, #4]
 800a246:	79aa      	ldrb	r2, [r5, #6]
 800a248:	82a3      	strh	r3, [r4, #20]
 800a24a:	4613      	mov	r3, r2
 800a24c:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 800a24e:	687b      	ldr	r3, [r7, #4]
 800a250:	33d8      	adds	r3, #216	; 0xd8
 800a252:	4a9b      	ldr	r2, [pc, #620]	; (800a4c0 <createProblem+0x9618>)
 800a254:	461d      	mov	r5, r3
 800a256:	4614      	mov	r4, r2
 800a258:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a25a:	6028      	str	r0, [r5, #0]
 800a25c:	6069      	str	r1, [r5, #4]
 800a25e:	60aa      	str	r2, [r5, #8]
 800a260:	60eb      	str	r3, [r5, #12]
 800a262:	8823      	ldrh	r3, [r4, #0]
 800a264:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6C");
 800a266:	687b      	ldr	r3, [r7, #4]
 800a268:	33cc      	adds	r3, #204	; 0xcc
 800a26a:	4a96      	ldr	r2, [pc, #600]	; (800a4c4 <createProblem+0x961c>)
 800a26c:	8811      	ldrh	r1, [r2, #0]
 800a26e:	7892      	ldrb	r2, [r2, #2]
 800a270:	8019      	strh	r1, [r3, #0]
 800a272:	709a      	strb	r2, [r3, #2]
			break;
 800a274:	f010 bb5e 	b.w	801a934 <createProblem+0x19a8c>
		case 344 :
			strcpy(p->name,"SMALL COSA NOSTRA");
 800a278:	687b      	ldr	r3, [r7, #4]
 800a27a:	337c      	adds	r3, #124	; 0x7c
 800a27c:	4a92      	ldr	r2, [pc, #584]	; (800a4c8 <createProblem+0x9620>)
 800a27e:	461d      	mov	r5, r3
 800a280:	4614      	mov	r4, r2
 800a282:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a284:	6028      	str	r0, [r5, #0]
 800a286:	6069      	str	r1, [r5, #4]
 800a288:	60aa      	str	r2, [r5, #8]
 800a28a:	60eb      	str	r3, [r5, #12]
 800a28c:	8823      	ldrh	r3, [r4, #0]
 800a28e:	822b      	strh	r3, [r5, #16]
			p->moveSize = 8;
 800a290:	687b      	ldr	r3, [r7, #4]
 800a292:	2208      	movs	r2, #8
 800a294:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,J,F,E,J,H,I");
 800a296:	687b      	ldr	r3, [r7, #4]
 800a298:	3340      	adds	r3, #64	; 0x40
 800a29a:	4a8c      	ldr	r2, [pc, #560]	; (800a4cc <createProblem+0x9624>)
 800a29c:	461c      	mov	r4, r3
 800a29e:	4615      	mov	r5, r2
 800a2a0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a2a2:	6020      	str	r0, [r4, #0]
 800a2a4:	6061      	str	r1, [r4, #4]
 800a2a6:	60a2      	str	r2, [r4, #8]
 800a2a8:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,7,11,12,13,16,18");
 800a2aa:	687b      	ldr	r3, [r7, #4]
 800a2ac:	3304      	adds	r3, #4
 800a2ae:	4a88      	ldr	r2, [pc, #544]	; (800a4d0 <createProblem+0x9628>)
 800a2b0:	461d      	mov	r5, r3
 800a2b2:	4614      	mov	r4, r2
 800a2b4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a2b6:	6028      	str	r0, [r5, #0]
 800a2b8:	6069      	str	r1, [r5, #4]
 800a2ba:	60aa      	str	r2, [r5, #8]
 800a2bc:	60eb      	str	r3, [r5, #12]
 800a2be:	6820      	ldr	r0, [r4, #0]
 800a2c0:	6128      	str	r0, [r5, #16]
 800a2c2:	7923      	ldrb	r3, [r4, #4]
 800a2c4:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 800a2c6:	687b      	ldr	r3, [r7, #4]
 800a2c8:	33d8      	adds	r3, #216	; 0xd8
 800a2ca:	4a82      	ldr	r2, [pc, #520]	; (800a4d4 <createProblem+0x962c>)
 800a2cc:	461c      	mov	r4, r3
 800a2ce:	4615      	mov	r5, r2
 800a2d0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a2d2:	6020      	str	r0, [r4, #0]
 800a2d4:	6061      	str	r1, [r4, #4]
 800a2d6:	60a2      	str	r2, [r4, #8]
 800a2d8:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 800a2da:	687b      	ldr	r3, [r7, #4]
 800a2dc:	33cc      	adds	r3, #204	; 0xcc
 800a2de:	4a79      	ldr	r2, [pc, #484]	; (800a4c4 <createProblem+0x961c>)
 800a2e0:	8811      	ldrh	r1, [r2, #0]
 800a2e2:	7892      	ldrb	r2, [r2, #2]
 800a2e4:	8019      	strh	r1, [r3, #0]
 800a2e6:	709a      	strb	r2, [r3, #2]
			break;
 800a2e8:	f010 bb24 	b.w	801a934 <createProblem+0x19a8c>
		case 345 :
			strcpy(p->name,"LA COSA NOSTRA");
 800a2ec:	687b      	ldr	r3, [r7, #4]
 800a2ee:	337c      	adds	r3, #124	; 0x7c
 800a2f0:	4a79      	ldr	r2, [pc, #484]	; (800a4d8 <createProblem+0x9630>)
 800a2f2:	461c      	mov	r4, r3
 800a2f4:	4613      	mov	r3, r2
 800a2f6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a2f8:	6020      	str	r0, [r4, #0]
 800a2fa:	6061      	str	r1, [r4, #4]
 800a2fc:	60a2      	str	r2, [r4, #8]
 800a2fe:	881a      	ldrh	r2, [r3, #0]
 800a300:	789b      	ldrb	r3, [r3, #2]
 800a302:	81a2      	strh	r2, [r4, #12]
 800a304:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 9;
 800a306:	687b      	ldr	r3, [r7, #4]
 800a308:	2209      	movs	r2, #9
 800a30a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,E,F,J,J,H,G,D");
 800a30c:	687b      	ldr	r3, [r7, #4]
 800a30e:	3340      	adds	r3, #64	; 0x40
 800a310:	4a72      	ldr	r2, [pc, #456]	; (800a4dc <createProblem+0x9634>)
 800a312:	461d      	mov	r5, r3
 800a314:	4614      	mov	r4, r2
 800a316:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a318:	6028      	str	r0, [r5, #0]
 800a31a:	6069      	str	r1, [r5, #4]
 800a31c:	60aa      	str	r2, [r5, #8]
 800a31e:	60eb      	str	r3, [r5, #12]
 800a320:	8823      	ldrh	r3, [r4, #0]
 800a322:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,9,6,11,7,13,16,17,18");
 800a324:	687b      	ldr	r3, [r7, #4]
 800a326:	3304      	adds	r3, #4
 800a328:	4a6d      	ldr	r2, [pc, #436]	; (800a4e0 <createProblem+0x9638>)
 800a32a:	461c      	mov	r4, r3
 800a32c:	4615      	mov	r5, r2
 800a32e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a330:	6020      	str	r0, [r4, #0]
 800a332:	6061      	str	r1, [r4, #4]
 800a334:	60a2      	str	r2, [r4, #8]
 800a336:	60e3      	str	r3, [r4, #12]
 800a338:	6828      	ldr	r0, [r5, #0]
 800a33a:	6120      	str	r0, [r4, #16]
 800a33c:	88ab      	ldrh	r3, [r5, #4]
 800a33e:	79aa      	ldrb	r2, [r5, #6]
 800a340:	82a3      	strh	r3, [r4, #20]
 800a342:	4613      	mov	r3, r2
 800a344:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,d,e");
 800a346:	687b      	ldr	r3, [r7, #4]
 800a348:	33d8      	adds	r3, #216	; 0xd8
 800a34a:	4a66      	ldr	r2, [pc, #408]	; (800a4e4 <createProblem+0x963c>)
 800a34c:	461d      	mov	r5, r3
 800a34e:	4614      	mov	r4, r2
 800a350:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a352:	6028      	str	r0, [r5, #0]
 800a354:	6069      	str	r1, [r5, #4]
 800a356:	60aa      	str	r2, [r5, #8]
 800a358:	60eb      	str	r3, [r5, #12]
 800a35a:	8823      	ldrh	r3, [r4, #0]
 800a35c:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6C+");
 800a35e:	687b      	ldr	r3, [r7, #4]
 800a360:	33cc      	adds	r3, #204	; 0xcc
 800a362:	4a61      	ldr	r2, [pc, #388]	; (800a4e8 <createProblem+0x9640>)
 800a364:	6810      	ldr	r0, [r2, #0]
 800a366:	6018      	str	r0, [r3, #0]
			break;
 800a368:	f010 bae4 	b.w	801a934 <createProblem+0x19a8c>
		case 346 :
			strcpy(p->name,"GTC&AMP;TCT");
 800a36c:	687b      	ldr	r3, [r7, #4]
 800a36e:	337c      	adds	r3, #124	; 0x7c
 800a370:	4a5e      	ldr	r2, [pc, #376]	; (800a4ec <createProblem+0x9644>)
 800a372:	461c      	mov	r4, r3
 800a374:	4613      	mov	r3, r2
 800a376:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a378:	6020      	str	r0, [r4, #0]
 800a37a:	6061      	str	r1, [r4, #4]
 800a37c:	60a2      	str	r2, [r4, #8]
			p->moveSize = 7;
 800a37e:	687b      	ldr	r3, [r7, #4]
 800a380:	2207      	movs	r2, #7
 800a382:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,F,G,J,I,J,D");
 800a384:	687b      	ldr	r3, [r7, #4]
 800a386:	3340      	adds	r3, #64	; 0x40
 800a388:	4a59      	ldr	r2, [pc, #356]	; (800a4f0 <createProblem+0x9648>)
 800a38a:	461c      	mov	r4, r3
 800a38c:	4613      	mov	r3, r2
 800a38e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a390:	6020      	str	r0, [r4, #0]
 800a392:	6061      	str	r1, [r4, #4]
 800a394:	60a2      	str	r2, [r4, #8]
 800a396:	881b      	ldrh	r3, [r3, #0]
 800a398:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,13,17,12,10,7,18");
 800a39a:	687b      	ldr	r3, [r7, #4]
 800a39c:	3304      	adds	r3, #4
 800a39e:	4a55      	ldr	r2, [pc, #340]	; (800a4f4 <createProblem+0x964c>)
 800a3a0:	461d      	mov	r5, r3
 800a3a2:	4614      	mov	r4, r2
 800a3a4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a3a6:	6028      	str	r0, [r5, #0]
 800a3a8:	6069      	str	r1, [r5, #4]
 800a3aa:	60aa      	str	r2, [r5, #8]
 800a3ac:	60eb      	str	r3, [r5, #12]
 800a3ae:	8823      	ldrh	r3, [r4, #0]
 800a3b0:	78a2      	ldrb	r2, [r4, #2]
 800a3b2:	822b      	strh	r3, [r5, #16]
 800a3b4:	4613      	mov	r3, r2
 800a3b6:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800a3b8:	687b      	ldr	r3, [r7, #4]
 800a3ba:	33d8      	adds	r3, #216	; 0xd8
 800a3bc:	4a4e      	ldr	r2, [pc, #312]	; (800a4f8 <createProblem+0x9650>)
 800a3be:	461c      	mov	r4, r3
 800a3c0:	4613      	mov	r3, r2
 800a3c2:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a3c4:	6020      	str	r0, [r4, #0]
 800a3c6:	6061      	str	r1, [r4, #4]
 800a3c8:	60a2      	str	r2, [r4, #8]
 800a3ca:	881b      	ldrh	r3, [r3, #0]
 800a3cc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 800a3ce:	687b      	ldr	r3, [r7, #4]
 800a3d0:	33cc      	adds	r3, #204	; 0xcc
 800a3d2:	4a45      	ldr	r2, [pc, #276]	; (800a4e8 <createProblem+0x9640>)
 800a3d4:	6810      	ldr	r0, [r2, #0]
 800a3d6:	6018      	str	r0, [r3, #0]
			break;
 800a3d8:	f010 baac 	b.w	801a934 <createProblem+0x19a8c>
		case 347 :
			strcpy(p->name,"LES DRUS");
 800a3dc:	687b      	ldr	r3, [r7, #4]
 800a3de:	337c      	adds	r3, #124	; 0x7c
 800a3e0:	4946      	ldr	r1, [pc, #280]	; (800a4fc <createProblem+0x9654>)
 800a3e2:	461a      	mov	r2, r3
 800a3e4:	460b      	mov	r3, r1
 800a3e6:	cb03      	ldmia	r3!, {r0, r1}
 800a3e8:	6010      	str	r0, [r2, #0]
 800a3ea:	6051      	str	r1, [r2, #4]
 800a3ec:	781b      	ldrb	r3, [r3, #0]
 800a3ee:	7213      	strb	r3, [r2, #8]
			p->moveSize = 7;
 800a3f0:	687b      	ldr	r3, [r7, #4]
 800a3f2:	2207      	movs	r2, #7
 800a3f4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,H,E,I,I,D");
 800a3f6:	687b      	ldr	r3, [r7, #4]
 800a3f8:	3340      	adds	r3, #64	; 0x40
 800a3fa:	4a41      	ldr	r2, [pc, #260]	; (800a500 <createProblem+0x9658>)
 800a3fc:	461c      	mov	r4, r3
 800a3fe:	4613      	mov	r3, r2
 800a400:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a402:	6020      	str	r0, [r4, #0]
 800a404:	6061      	str	r1, [r4, #4]
 800a406:	60a2      	str	r2, [r4, #8]
 800a408:	881b      	ldrh	r3, [r3, #0]
 800a40a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,15,16,12,10,7,18");
 800a40c:	687b      	ldr	r3, [r7, #4]
 800a40e:	3304      	adds	r3, #4
 800a410:	4a3c      	ldr	r2, [pc, #240]	; (800a504 <createProblem+0x965c>)
 800a412:	461d      	mov	r5, r3
 800a414:	4614      	mov	r4, r2
 800a416:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a418:	6028      	str	r0, [r5, #0]
 800a41a:	6069      	str	r1, [r5, #4]
 800a41c:	60aa      	str	r2, [r5, #8]
 800a41e:	60eb      	str	r3, [r5, #12]
 800a420:	8823      	ldrh	r3, [r4, #0]
 800a422:	78a2      	ldrb	r2, [r4, #2]
 800a424:	822b      	strh	r3, [r5, #16]
 800a426:	4613      	mov	r3, r2
 800a428:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800a42a:	687b      	ldr	r3, [r7, #4]
 800a42c:	33d8      	adds	r3, #216	; 0xd8
 800a42e:	4a32      	ldr	r2, [pc, #200]	; (800a4f8 <createProblem+0x9650>)
 800a430:	461c      	mov	r4, r3
 800a432:	4613      	mov	r3, r2
 800a434:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a436:	6020      	str	r0, [r4, #0]
 800a438:	6061      	str	r1, [r4, #4]
 800a43a:	60a2      	str	r2, [r4, #8]
 800a43c:	881b      	ldrh	r3, [r3, #0]
 800a43e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 800a440:	687b      	ldr	r3, [r7, #4]
 800a442:	33cc      	adds	r3, #204	; 0xcc
 800a444:	4a30      	ldr	r2, [pc, #192]	; (800a508 <createProblem+0x9660>)
 800a446:	8811      	ldrh	r1, [r2, #0]
 800a448:	7892      	ldrb	r2, [r2, #2]
 800a44a:	8019      	strh	r1, [r3, #0]
 800a44c:	709a      	strb	r2, [r3, #2]
			break;
 800a44e:	f010 ba71 	b.w	801a934 <createProblem+0x19a8c>
		case 348 :
			strcpy(p->name,"NOIA");
 800a452:	687b      	ldr	r3, [r7, #4]
 800a454:	337c      	adds	r3, #124	; 0x7c
 800a456:	4a2d      	ldr	r2, [pc, #180]	; (800a50c <createProblem+0x9664>)
 800a458:	6810      	ldr	r0, [r2, #0]
 800a45a:	6018      	str	r0, [r3, #0]
 800a45c:	7912      	ldrb	r2, [r2, #4]
 800a45e:	711a      	strb	r2, [r3, #4]
			p->moveSize = 6;
 800a460:	687b      	ldr	r3, [r7, #4]
 800a462:	2206      	movs	r2, #6
 800a464:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,C,E,A,A");
 800a466:	687b      	ldr	r3, [r7, #4]
 800a468:	3340      	adds	r3, #64	; 0x40
 800a46a:	4a29      	ldr	r2, [pc, #164]	; (800a510 <createProblem+0x9668>)
 800a46c:	461c      	mov	r4, r3
 800a46e:	4613      	mov	r3, r2
 800a470:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a472:	6020      	str	r0, [r4, #0]
 800a474:	6061      	str	r1, [r4, #4]
 800a476:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,4,8,12,14,18");
 800a478:	687b      	ldr	r3, [r7, #4]
 800a47a:	3304      	adds	r3, #4
 800a47c:	4a25      	ldr	r2, [pc, #148]	; (800a514 <createProblem+0x966c>)
 800a47e:	461c      	mov	r4, r3
 800a480:	4613      	mov	r3, r2
 800a482:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a484:	6020      	str	r0, [r4, #0]
 800a486:	6061      	str	r1, [r4, #4]
 800a488:	60a2      	str	r2, [r4, #8]
 800a48a:	881a      	ldrh	r2, [r3, #0]
 800a48c:	789b      	ldrb	r3, [r3, #2]
 800a48e:	81a2      	strh	r2, [r4, #12]
 800a490:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800a492:	687b      	ldr	r3, [r7, #4]
 800a494:	33d8      	adds	r3, #216	; 0xd8
 800a496:	4a20      	ldr	r2, [pc, #128]	; (800a518 <createProblem+0x9670>)
 800a498:	461c      	mov	r4, r3
 800a49a:	4613      	mov	r3, r2
 800a49c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a49e:	6020      	str	r0, [r4, #0]
 800a4a0:	6061      	str	r1, [r4, #4]
 800a4a2:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 800a4a4:	687b      	ldr	r3, [r7, #4]
 800a4a6:	33cc      	adds	r3, #204	; 0xcc
 800a4a8:	4a0f      	ldr	r2, [pc, #60]	; (800a4e8 <createProblem+0x9640>)
 800a4aa:	6810      	ldr	r0, [r2, #0]
 800a4ac:	6018      	str	r0, [r3, #0]
			break;
 800a4ae:	f010 ba41 	b.w	801a934 <createProblem+0x19a8c>
 800a4b2:	bf00      	nop
 800a4b4:	08023c4c 	.word	0x08023c4c
 800a4b8:	08023c60 	.word	0x08023c60
 800a4bc:	08023c74 	.word	0x08023c74
 800a4c0:	08020dfc 	.word	0x08020dfc
 800a4c4:	080208f0 	.word	0x080208f0
 800a4c8:	08023c8c 	.word	0x08023c8c
 800a4cc:	08023ca0 	.word	0x08023ca0
 800a4d0:	08023cb0 	.word	0x08023cb0
 800a4d4:	080209d8 	.word	0x080209d8
 800a4d8:	08023cc8 	.word	0x08023cc8
 800a4dc:	08023cd8 	.word	0x08023cd8
 800a4e0:	08023cec 	.word	0x08023cec
 800a4e4:	08022f10 	.word	0x08022f10
 800a4e8:	08020928 	.word	0x08020928
 800a4ec:	08023d04 	.word	0x08023d04
 800a4f0:	08023d10 	.word	0x08023d10
 800a4f4:	08023d20 	.word	0x08023d20
 800a4f8:	08020a14 	.word	0x08020a14
 800a4fc:	08023d34 	.word	0x08023d34
 800a500:	08023d40 	.word	0x08023d40
 800a504:	08023d50 	.word	0x08023d50
 800a508:	08020874 	.word	0x08020874
 800a50c:	08023d64 	.word	0x08023d64
 800a510:	08023d6c 	.word	0x08023d6c
 800a514:	08023d78 	.word	0x08023d78
 800a518:	08020e90 	.word	0x08020e90
		case 349 :
			strcpy(p->name,"SKWAMA");
 800a51c:	687b      	ldr	r3, [r7, #4]
 800a51e:	337c      	adds	r3, #124	; 0x7c
 800a520:	4ac0      	ldr	r2, [pc, #768]	; (800a824 <createProblem+0x997c>)
 800a522:	6810      	ldr	r0, [r2, #0]
 800a524:	6018      	str	r0, [r3, #0]
 800a526:	8891      	ldrh	r1, [r2, #4]
 800a528:	7992      	ldrb	r2, [r2, #6]
 800a52a:	8099      	strh	r1, [r3, #4]
 800a52c:	719a      	strb	r2, [r3, #6]
			p->moveSize = 8;
 800a52e:	687b      	ldr	r3, [r7, #4]
 800a530:	2208      	movs	r2, #8
 800a532:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,I,J,H,K,G,I");
 800a534:	687b      	ldr	r3, [r7, #4]
 800a536:	3340      	adds	r3, #64	; 0x40
 800a538:	4abb      	ldr	r2, [pc, #748]	; (800a828 <createProblem+0x9980>)
 800a53a:	461c      	mov	r4, r3
 800a53c:	4615      	mov	r5, r2
 800a53e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a540:	6020      	str	r0, [r4, #0]
 800a542:	6061      	str	r1, [r4, #4]
 800a544:	60a2      	str	r2, [r4, #8]
 800a546:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,10,7,12,14,15,18");
 800a548:	687b      	ldr	r3, [r7, #4]
 800a54a:	3304      	adds	r3, #4
 800a54c:	4ab7      	ldr	r2, [pc, #732]	; (800a82c <createProblem+0x9984>)
 800a54e:	461d      	mov	r5, r3
 800a550:	4614      	mov	r4, r2
 800a552:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a554:	6028      	str	r0, [r5, #0]
 800a556:	6069      	str	r1, [r5, #4]
 800a558:	60aa      	str	r2, [r5, #8]
 800a55a:	60eb      	str	r3, [r5, #12]
 800a55c:	6820      	ldr	r0, [r4, #0]
 800a55e:	6128      	str	r0, [r5, #16]
 800a560:	7923      	ldrb	r3, [r4, #4]
 800a562:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 800a564:	687b      	ldr	r3, [r7, #4]
 800a566:	33d8      	adds	r3, #216	; 0xd8
 800a568:	4ab1      	ldr	r2, [pc, #708]	; (800a830 <createProblem+0x9988>)
 800a56a:	461c      	mov	r4, r3
 800a56c:	4615      	mov	r5, r2
 800a56e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a570:	6020      	str	r0, [r4, #0]
 800a572:	6061      	str	r1, [r4, #4]
 800a574:	60a2      	str	r2, [r4, #8]
 800a576:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800a578:	687b      	ldr	r3, [r7, #4]
 800a57a:	33cc      	adds	r3, #204	; 0xcc
 800a57c:	4aad      	ldr	r2, [pc, #692]	; (800a834 <createProblem+0x998c>)
 800a57e:	6810      	ldr	r0, [r2, #0]
 800a580:	6018      	str	r0, [r3, #0]
			break;
 800a582:	f010 b9d7 	b.w	801a934 <createProblem+0x19a8c>
		case 35 :
			strcpy(p->name,"VERITGO");
 800a586:	687b      	ldr	r3, [r7, #4]
 800a588:	337c      	adds	r3, #124	; 0x7c
 800a58a:	49ab      	ldr	r1, [pc, #684]	; (800a838 <createProblem+0x9990>)
 800a58c:	461a      	mov	r2, r3
 800a58e:	460b      	mov	r3, r1
 800a590:	cb03      	ldmia	r3!, {r0, r1}
 800a592:	6010      	str	r0, [r2, #0]
 800a594:	6051      	str	r1, [r2, #4]
			p->moveSize = 6;
 800a596:	687b      	ldr	r3, [r7, #4]
 800a598:	2206      	movs	r2, #6
 800a59a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,F,H,D");
 800a59c:	687b      	ldr	r3, [r7, #4]
 800a59e:	3340      	adds	r3, #64	; 0x40
 800a5a0:	4aa6      	ldr	r2, [pc, #664]	; (800a83c <createProblem+0x9994>)
 800a5a2:	461c      	mov	r4, r3
 800a5a4:	4613      	mov	r3, r2
 800a5a6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a5a8:	6020      	str	r0, [r4, #0]
 800a5aa:	6061      	str	r1, [r4, #4]
 800a5ac:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,10,13,16,18");
 800a5ae:	687b      	ldr	r3, [r7, #4]
 800a5b0:	3304      	adds	r3, #4
 800a5b2:	4aa3      	ldr	r2, [pc, #652]	; (800a840 <createProblem+0x9998>)
 800a5b4:	461c      	mov	r4, r3
 800a5b6:	4615      	mov	r5, r2
 800a5b8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a5ba:	6020      	str	r0, [r4, #0]
 800a5bc:	6061      	str	r1, [r4, #4]
 800a5be:	60a2      	str	r2, [r4, #8]
 800a5c0:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800a5c2:	687b      	ldr	r3, [r7, #4]
 800a5c4:	33d8      	adds	r3, #216	; 0xd8
 800a5c6:	4a9f      	ldr	r2, [pc, #636]	; (800a844 <createProblem+0x999c>)
 800a5c8:	461c      	mov	r4, r3
 800a5ca:	4613      	mov	r3, r2
 800a5cc:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a5ce:	6020      	str	r0, [r4, #0]
 800a5d0:	6061      	str	r1, [r4, #4]
 800a5d2:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 800a5d4:	687b      	ldr	r3, [r7, #4]
 800a5d6:	33cc      	adds	r3, #204	; 0xcc
 800a5d8:	4a96      	ldr	r2, [pc, #600]	; (800a834 <createProblem+0x998c>)
 800a5da:	6810      	ldr	r0, [r2, #0]
 800a5dc:	6018      	str	r0, [r3, #0]
			break;
 800a5de:	f010 b9a9 	b.w	801a934 <createProblem+0x19a8c>
		case 350 :
			strcpy(p->name,"MORE EFFORT LESS SKIN");
 800a5e2:	687b      	ldr	r3, [r7, #4]
 800a5e4:	337c      	adds	r3, #124	; 0x7c
 800a5e6:	4a98      	ldr	r2, [pc, #608]	; (800a848 <createProblem+0x99a0>)
 800a5e8:	461d      	mov	r5, r3
 800a5ea:	4614      	mov	r4, r2
 800a5ec:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a5ee:	6028      	str	r0, [r5, #0]
 800a5f0:	6069      	str	r1, [r5, #4]
 800a5f2:	60aa      	str	r2, [r5, #8]
 800a5f4:	60eb      	str	r3, [r5, #12]
 800a5f6:	6820      	ldr	r0, [r4, #0]
 800a5f8:	6128      	str	r0, [r5, #16]
 800a5fa:	88a3      	ldrh	r3, [r4, #4]
 800a5fc:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 8;
 800a5fe:	687b      	ldr	r3, [r7, #4]
 800a600:	2208      	movs	r2, #8
 800a602:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,H,J,F,G,J,I");
 800a604:	687b      	ldr	r3, [r7, #4]
 800a606:	3340      	adds	r3, #64	; 0x40
 800a608:	4a90      	ldr	r2, [pc, #576]	; (800a84c <createProblem+0x99a4>)
 800a60a:	461c      	mov	r4, r3
 800a60c:	4615      	mov	r5, r2
 800a60e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a610:	6020      	str	r0, [r4, #0]
 800a612:	6061      	str	r1, [r4, #4]
 800a614:	60a2      	str	r2, [r4, #8]
 800a616:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,6,16,13,11,9,7,18");
 800a618:	687b      	ldr	r3, [r7, #4]
 800a61a:	3304      	adds	r3, #4
 800a61c:	4a8c      	ldr	r2, [pc, #560]	; (800a850 <createProblem+0x99a8>)
 800a61e:	461d      	mov	r5, r3
 800a620:	4614      	mov	r4, r2
 800a622:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a624:	6028      	str	r0, [r5, #0]
 800a626:	6069      	str	r1, [r5, #4]
 800a628:	60aa      	str	r2, [r5, #8]
 800a62a:	60eb      	str	r3, [r5, #12]
 800a62c:	6820      	ldr	r0, [r4, #0]
 800a62e:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800a630:	687b      	ldr	r3, [r7, #4]
 800a632:	33d8      	adds	r3, #216	; 0xd8
 800a634:	4a87      	ldr	r2, [pc, #540]	; (800a854 <createProblem+0x99ac>)
 800a636:	461c      	mov	r4, r3
 800a638:	4615      	mov	r5, r2
 800a63a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a63c:	6020      	str	r0, [r4, #0]
 800a63e:	6061      	str	r1, [r4, #4]
 800a640:	60a2      	str	r2, [r4, #8]
 800a642:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 800a644:	687b      	ldr	r3, [r7, #4]
 800a646:	33cc      	adds	r3, #204	; 0xcc
 800a648:	4a83      	ldr	r2, [pc, #524]	; (800a858 <createProblem+0x99b0>)
 800a64a:	6810      	ldr	r0, [r2, #0]
 800a64c:	6018      	str	r0, [r3, #0]
			break;
 800a64e:	f010 b971 	b.w	801a934 <createProblem+0x19a8c>
		case 351 :
			strcpy(p->name,"LESS REST MORE INJURY");
 800a652:	687b      	ldr	r3, [r7, #4]
 800a654:	337c      	adds	r3, #124	; 0x7c
 800a656:	4a81      	ldr	r2, [pc, #516]	; (800a85c <createProblem+0x99b4>)
 800a658:	461d      	mov	r5, r3
 800a65a:	4614      	mov	r4, r2
 800a65c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a65e:	6028      	str	r0, [r5, #0]
 800a660:	6069      	str	r1, [r5, #4]
 800a662:	60aa      	str	r2, [r5, #8]
 800a664:	60eb      	str	r3, [r5, #12]
 800a666:	6820      	ldr	r0, [r4, #0]
 800a668:	6128      	str	r0, [r5, #16]
 800a66a:	88a3      	ldrh	r3, [r4, #4]
 800a66c:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 9;
 800a66e:	687b      	ldr	r3, [r7, #4]
 800a670:	2209      	movs	r2, #9
 800a672:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,J,G,F,G,J,G,D");
 800a674:	687b      	ldr	r3, [r7, #4]
 800a676:	3340      	adds	r3, #64	; 0x40
 800a678:	4a79      	ldr	r2, [pc, #484]	; (800a860 <createProblem+0x99b8>)
 800a67a:	461d      	mov	r5, r3
 800a67c:	4614      	mov	r4, r2
 800a67e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a680:	6028      	str	r0, [r5, #0]
 800a682:	6069      	str	r1, [r5, #4]
 800a684:	60aa      	str	r2, [r5, #8]
 800a686:	60eb      	str	r3, [r5, #12]
 800a688:	8823      	ldrh	r3, [r4, #0]
 800a68a:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"6,6,7,9,11,17,13,15,18");
 800a68c:	687b      	ldr	r3, [r7, #4]
 800a68e:	3304      	adds	r3, #4
 800a690:	4a74      	ldr	r2, [pc, #464]	; (800a864 <createProblem+0x99bc>)
 800a692:	461c      	mov	r4, r3
 800a694:	4615      	mov	r5, r2
 800a696:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a698:	6020      	str	r0, [r4, #0]
 800a69a:	6061      	str	r1, [r4, #4]
 800a69c:	60a2      	str	r2, [r4, #8]
 800a69e:	60e3      	str	r3, [r4, #12]
 800a6a0:	6828      	ldr	r0, [r5, #0]
 800a6a2:	6120      	str	r0, [r4, #16]
 800a6a4:	88ab      	ldrh	r3, [r5, #4]
 800a6a6:	79aa      	ldrb	r2, [r5, #6]
 800a6a8:	82a3      	strh	r3, [r4, #20]
 800a6aa:	4613      	mov	r3, r2
 800a6ac:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 800a6ae:	687b      	ldr	r3, [r7, #4]
 800a6b0:	33d8      	adds	r3, #216	; 0xd8
 800a6b2:	4a6d      	ldr	r2, [pc, #436]	; (800a868 <createProblem+0x99c0>)
 800a6b4:	461d      	mov	r5, r3
 800a6b6:	4614      	mov	r4, r2
 800a6b8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a6ba:	6028      	str	r0, [r5, #0]
 800a6bc:	6069      	str	r1, [r5, #4]
 800a6be:	60aa      	str	r2, [r5, #8]
 800a6c0:	60eb      	str	r3, [r5, #12]
 800a6c2:	8823      	ldrh	r3, [r4, #0]
 800a6c4:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6C+");
 800a6c6:	687b      	ldr	r3, [r7, #4]
 800a6c8:	33cc      	adds	r3, #204	; 0xcc
 800a6ca:	4a63      	ldr	r2, [pc, #396]	; (800a858 <createProblem+0x99b0>)
 800a6cc:	6810      	ldr	r0, [r2, #0]
 800a6ce:	6018      	str	r0, [r3, #0]
			break;
 800a6d0:	f010 b930 	b.w	801a934 <createProblem+0x19a8c>
		case 352 :
			strcpy(p->name,"TENDON DAY");
 800a6d4:	687b      	ldr	r3, [r7, #4]
 800a6d6:	337c      	adds	r3, #124	; 0x7c
 800a6d8:	4964      	ldr	r1, [pc, #400]	; (800a86c <createProblem+0x99c4>)
 800a6da:	461a      	mov	r2, r3
 800a6dc:	460b      	mov	r3, r1
 800a6de:	cb03      	ldmia	r3!, {r0, r1}
 800a6e0:	6010      	str	r0, [r2, #0]
 800a6e2:	6051      	str	r1, [r2, #4]
 800a6e4:	8819      	ldrh	r1, [r3, #0]
 800a6e6:	789b      	ldrb	r3, [r3, #2]
 800a6e8:	8111      	strh	r1, [r2, #8]
 800a6ea:	7293      	strb	r3, [r2, #10]
			p->moveSize = 8;
 800a6ec:	687b      	ldr	r3, [r7, #4]
 800a6ee:	2208      	movs	r2, #8
 800a6f0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,G,C,E,A,E,A");
 800a6f2:	687b      	ldr	r3, [r7, #4]
 800a6f4:	3340      	adds	r3, #64	; 0x40
 800a6f6:	4a5e      	ldr	r2, [pc, #376]	; (800a870 <createProblem+0x99c8>)
 800a6f8:	461c      	mov	r4, r3
 800a6fa:	4615      	mov	r5, r2
 800a6fc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a6fe:	6020      	str	r0, [r4, #0]
 800a700:	6061      	str	r1, [r4, #4]
 800a702:	60a2      	str	r2, [r4, #8]
 800a704:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,8,12,14,14,18");
 800a706:	687b      	ldr	r3, [r7, #4]
 800a708:	3304      	adds	r3, #4
 800a70a:	4a5a      	ldr	r2, [pc, #360]	; (800a874 <createProblem+0x99cc>)
 800a70c:	461d      	mov	r5, r3
 800a70e:	4614      	mov	r4, r2
 800a710:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a712:	6028      	str	r0, [r5, #0]
 800a714:	6069      	str	r1, [r5, #4]
 800a716:	60aa      	str	r2, [r5, #8]
 800a718:	60eb      	str	r3, [r5, #12]
 800a71a:	6820      	ldr	r0, [r4, #0]
 800a71c:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800a71e:	687b      	ldr	r3, [r7, #4]
 800a720:	33d8      	adds	r3, #216	; 0xd8
 800a722:	4a4c      	ldr	r2, [pc, #304]	; (800a854 <createProblem+0x99ac>)
 800a724:	461c      	mov	r4, r3
 800a726:	4615      	mov	r5, r2
 800a728:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a72a:	6020      	str	r0, [r4, #0]
 800a72c:	6061      	str	r1, [r4, #4]
 800a72e:	60a2      	str	r2, [r4, #8]
 800a730:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 800a732:	687b      	ldr	r3, [r7, #4]
 800a734:	33cc      	adds	r3, #204	; 0xcc
 800a736:	4a50      	ldr	r2, [pc, #320]	; (800a878 <createProblem+0x99d0>)
 800a738:	8811      	ldrh	r1, [r2, #0]
 800a73a:	7892      	ldrb	r2, [r2, #2]
 800a73c:	8019      	strh	r1, [r3, #0]
 800a73e:	709a      	strb	r2, [r3, #2]
			break;
 800a740:	f010 b8f8 	b.w	801a934 <createProblem+0x19a8c>
		case 353 :
			strcpy(p->name,"THE LAPSUS SISTER");
 800a744:	687b      	ldr	r3, [r7, #4]
 800a746:	337c      	adds	r3, #124	; 0x7c
 800a748:	4a4c      	ldr	r2, [pc, #304]	; (800a87c <createProblem+0x99d4>)
 800a74a:	461d      	mov	r5, r3
 800a74c:	4614      	mov	r4, r2
 800a74e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a750:	6028      	str	r0, [r5, #0]
 800a752:	6069      	str	r1, [r5, #4]
 800a754:	60aa      	str	r2, [r5, #8]
 800a756:	60eb      	str	r3, [r5, #12]
 800a758:	8823      	ldrh	r3, [r4, #0]
 800a75a:	822b      	strh	r3, [r5, #16]
			p->moveSize = 7;
 800a75c:	687b      	ldr	r3, [r7, #4]
 800a75e:	2207      	movs	r2, #7
 800a760:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,C,B,E,B,D,D");
 800a762:	687b      	ldr	r3, [r7, #4]
 800a764:	3340      	adds	r3, #64	; 0x40
 800a766:	4a46      	ldr	r2, [pc, #280]	; (800a880 <createProblem+0x99d8>)
 800a768:	461c      	mov	r4, r3
 800a76a:	4613      	mov	r3, r2
 800a76c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a76e:	6020      	str	r0, [r4, #0]
 800a770:	6061      	str	r1, [r4, #4]
 800a772:	60a2      	str	r2, [r4, #8]
 800a774:	881b      	ldrh	r3, [r3, #0]
 800a776:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,10,12,15,7,18");
 800a778:	687b      	ldr	r3, [r7, #4]
 800a77a:	3304      	adds	r3, #4
 800a77c:	4a41      	ldr	r2, [pc, #260]	; (800a884 <createProblem+0x99dc>)
 800a77e:	461d      	mov	r5, r3
 800a780:	4614      	mov	r4, r2
 800a782:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a784:	6028      	str	r0, [r5, #0]
 800a786:	6069      	str	r1, [r5, #4]
 800a788:	60aa      	str	r2, [r5, #8]
 800a78a:	60eb      	str	r3, [r5, #12]
 800a78c:	8823      	ldrh	r3, [r4, #0]
 800a78e:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800a790:	687b      	ldr	r3, [r7, #4]
 800a792:	33d8      	adds	r3, #216	; 0xd8
 800a794:	4a3c      	ldr	r2, [pc, #240]	; (800a888 <createProblem+0x99e0>)
 800a796:	461c      	mov	r4, r3
 800a798:	4613      	mov	r3, r2
 800a79a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a79c:	6020      	str	r0, [r4, #0]
 800a79e:	6061      	str	r1, [r4, #4]
 800a7a0:	60a2      	str	r2, [r4, #8]
 800a7a2:	881b      	ldrh	r3, [r3, #0]
 800a7a4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800a7a6:	687b      	ldr	r3, [r7, #4]
 800a7a8:	33cc      	adds	r3, #204	; 0xcc
 800a7aa:	4a22      	ldr	r2, [pc, #136]	; (800a834 <createProblem+0x998c>)
 800a7ac:	6810      	ldr	r0, [r2, #0]
 800a7ae:	6018      	str	r0, [r3, #0]
			break;
 800a7b0:	f010 b8c0 	b.w	801a934 <createProblem+0x19a8c>
		case 354 :
			strcpy(p->name,"THE BIG DREAM");
 800a7b4:	687b      	ldr	r3, [r7, #4]
 800a7b6:	337c      	adds	r3, #124	; 0x7c
 800a7b8:	4a34      	ldr	r2, [pc, #208]	; (800a88c <createProblem+0x99e4>)
 800a7ba:	461c      	mov	r4, r3
 800a7bc:	4613      	mov	r3, r2
 800a7be:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a7c0:	6020      	str	r0, [r4, #0]
 800a7c2:	6061      	str	r1, [r4, #4]
 800a7c4:	60a2      	str	r2, [r4, #8]
 800a7c6:	881b      	ldrh	r3, [r3, #0]
 800a7c8:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 8;
 800a7ca:	687b      	ldr	r3, [r7, #4]
 800a7cc:	2208      	movs	r2, #8
 800a7ce:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,H,C,E,F,I,I");
 800a7d0:	687b      	ldr	r3, [r7, #4]
 800a7d2:	3340      	adds	r3, #64	; 0x40
 800a7d4:	4a2e      	ldr	r2, [pc, #184]	; (800a890 <createProblem+0x99e8>)
 800a7d6:	461c      	mov	r4, r3
 800a7d8:	4615      	mov	r5, r2
 800a7da:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a7dc:	6020      	str	r0, [r4, #0]
 800a7de:	6061      	str	r1, [r4, #4]
 800a7e0:	60a2      	str	r2, [r4, #8]
 800a7e2:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,8,8,12,13,14,18");
 800a7e4:	687b      	ldr	r3, [r7, #4]
 800a7e6:	3304      	adds	r3, #4
 800a7e8:	4a2a      	ldr	r2, [pc, #168]	; (800a894 <createProblem+0x99ec>)
 800a7ea:	461d      	mov	r5, r3
 800a7ec:	4614      	mov	r4, r2
 800a7ee:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a7f0:	6028      	str	r0, [r5, #0]
 800a7f2:	6069      	str	r1, [r5, #4]
 800a7f4:	60aa      	str	r2, [r5, #8]
 800a7f6:	60eb      	str	r3, [r5, #12]
 800a7f8:	6820      	ldr	r0, [r4, #0]
 800a7fa:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800a7fc:	687b      	ldr	r3, [r7, #4]
 800a7fe:	33d8      	adds	r3, #216	; 0xd8
 800a800:	4a14      	ldr	r2, [pc, #80]	; (800a854 <createProblem+0x99ac>)
 800a802:	461c      	mov	r4, r3
 800a804:	4615      	mov	r5, r2
 800a806:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a808:	6020      	str	r0, [r4, #0]
 800a80a:	6061      	str	r1, [r4, #4]
 800a80c:	60a2      	str	r2, [r4, #8]
 800a80e:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 800a810:	687b      	ldr	r3, [r7, #4]
 800a812:	33cc      	adds	r3, #204	; 0xcc
 800a814:	4a20      	ldr	r2, [pc, #128]	; (800a898 <createProblem+0x99f0>)
 800a816:	8811      	ldrh	r1, [r2, #0]
 800a818:	7892      	ldrb	r2, [r2, #2]
 800a81a:	8019      	strh	r1, [r3, #0]
 800a81c:	709a      	strb	r2, [r3, #2]
			break;
 800a81e:	f010 b889 	b.w	801a934 <createProblem+0x19a8c>
 800a822:	bf00      	nop
 800a824:	08023d88 	.word	0x08023d88
 800a828:	08023d90 	.word	0x08023d90
 800a82c:	08023da0 	.word	0x08023da0
 800a830:	080209d8 	.word	0x080209d8
 800a834:	08020830 	.word	0x08020830
 800a838:	08023db8 	.word	0x08023db8
 800a83c:	08023dc0 	.word	0x08023dc0
 800a840:	08023dcc 	.word	0x08023dcc
 800a844:	08020e90 	.word	0x08020e90
 800a848:	08023ddc 	.word	0x08023ddc
 800a84c:	08023df4 	.word	0x08023df4
 800a850:	08023e04 	.word	0x08023e04
 800a854:	08020a4c 	.word	0x08020a4c
 800a858:	08020928 	.word	0x08020928
 800a85c:	08023e18 	.word	0x08023e18
 800a860:	08023e30 	.word	0x08023e30
 800a864:	08023e44 	.word	0x08023e44
 800a868:	08020dfc 	.word	0x08020dfc
 800a86c:	08023e5c 	.word	0x08023e5c
 800a870:	08023e68 	.word	0x08023e68
 800a874:	08023e78 	.word	0x08023e78
 800a878:	08020874 	.word	0x08020874
 800a87c:	08023e8c 	.word	0x08023e8c
 800a880:	08023ea0 	.word	0x08023ea0
 800a884:	08023eb0 	.word	0x08023eb0
 800a888:	08020820 	.word	0x08020820
 800a88c:	08023ec4 	.word	0x08023ec4
 800a890:	08023ed4 	.word	0x08023ed4
 800a894:	08023ee4 	.word	0x08023ee4
 800a898:	080208f0 	.word	0x080208f0
		case 355 :
			strcpy(p->name,"THE NIGHTMARE");
 800a89c:	687b      	ldr	r3, [r7, #4]
 800a89e:	337c      	adds	r3, #124	; 0x7c
 800a8a0:	4aba      	ldr	r2, [pc, #744]	; (800ab8c <createProblem+0x9ce4>)
 800a8a2:	461c      	mov	r4, r3
 800a8a4:	4613      	mov	r3, r2
 800a8a6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a8a8:	6020      	str	r0, [r4, #0]
 800a8aa:	6061      	str	r1, [r4, #4]
 800a8ac:	60a2      	str	r2, [r4, #8]
 800a8ae:	881b      	ldrh	r3, [r3, #0]
 800a8b0:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 8;
 800a8b2:	687b      	ldr	r3, [r7, #4]
 800a8b4:	2208      	movs	r2, #8
 800a8b6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,I,I,B,E,F,D");
 800a8b8:	687b      	ldr	r3, [r7, #4]
 800a8ba:	3340      	adds	r3, #64	; 0x40
 800a8bc:	4ab4      	ldr	r2, [pc, #720]	; (800ab90 <createProblem+0x9ce8>)
 800a8be:	461c      	mov	r4, r3
 800a8c0:	4615      	mov	r5, r2
 800a8c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a8c4:	6020      	str	r0, [r4, #0]
 800a8c6:	6061      	str	r1, [r4, #4]
 800a8c8:	60a2      	str	r2, [r4, #8]
 800a8ca:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,5,7,9,15,12,11,18");
 800a8cc:	687b      	ldr	r3, [r7, #4]
 800a8ce:	3304      	adds	r3, #4
 800a8d0:	4ab0      	ldr	r2, [pc, #704]	; (800ab94 <createProblem+0x9cec>)
 800a8d2:	461d      	mov	r5, r3
 800a8d4:	4614      	mov	r4, r2
 800a8d6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a8d8:	6028      	str	r0, [r5, #0]
 800a8da:	6069      	str	r1, [r5, #4]
 800a8dc:	60aa      	str	r2, [r5, #8]
 800a8de:	60eb      	str	r3, [r5, #12]
 800a8e0:	6820      	ldr	r0, [r4, #0]
 800a8e2:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800a8e4:	687b      	ldr	r3, [r7, #4]
 800a8e6:	33d8      	adds	r3, #216	; 0xd8
 800a8e8:	4aab      	ldr	r2, [pc, #684]	; (800ab98 <createProblem+0x9cf0>)
 800a8ea:	461c      	mov	r4, r3
 800a8ec:	4615      	mov	r5, r2
 800a8ee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a8f0:	6020      	str	r0, [r4, #0]
 800a8f2:	6061      	str	r1, [r4, #4]
 800a8f4:	60a2      	str	r2, [r4, #8]
 800a8f6:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 800a8f8:	687b      	ldr	r3, [r7, #4]
 800a8fa:	33cc      	adds	r3, #204	; 0xcc
 800a8fc:	4aa7      	ldr	r2, [pc, #668]	; (800ab9c <createProblem+0x9cf4>)
 800a8fe:	6810      	ldr	r0, [r2, #0]
 800a900:	6018      	str	r0, [r3, #0]
			break;
 800a902:	f010 b817 	b.w	801a934 <createProblem+0x19a8c>
		case 356 :
			strcpy(p->name,"THE UNREAL THING");
 800a906:	687b      	ldr	r3, [r7, #4]
 800a908:	337c      	adds	r3, #124	; 0x7c
 800a90a:	4aa5      	ldr	r2, [pc, #660]	; (800aba0 <createProblem+0x9cf8>)
 800a90c:	461d      	mov	r5, r3
 800a90e:	4614      	mov	r4, r2
 800a910:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a912:	6028      	str	r0, [r5, #0]
 800a914:	6069      	str	r1, [r5, #4]
 800a916:	60aa      	str	r2, [r5, #8]
 800a918:	60eb      	str	r3, [r5, #12]
 800a91a:	7823      	ldrb	r3, [r4, #0]
 800a91c:	742b      	strb	r3, [r5, #16]
			p->moveSize = 8;
 800a91e:	687b      	ldr	r3, [r7, #4]
 800a920:	2208      	movs	r2, #8
 800a922:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,J,E,A,D,A");
 800a924:	687b      	ldr	r3, [r7, #4]
 800a926:	3340      	adds	r3, #64	; 0x40
 800a928:	4a9e      	ldr	r2, [pc, #632]	; (800aba4 <createProblem+0x9cfc>)
 800a92a:	461c      	mov	r4, r3
 800a92c:	4615      	mov	r5, r2
 800a92e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a930:	6020      	str	r0, [r4, #0]
 800a932:	6061      	str	r1, [r4, #4]
 800a934:	60a2      	str	r2, [r4, #8]
 800a936:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,8,7,12,14,15,18");
 800a938:	687b      	ldr	r3, [r7, #4]
 800a93a:	3304      	adds	r3, #4
 800a93c:	4a9a      	ldr	r2, [pc, #616]	; (800aba8 <createProblem+0x9d00>)
 800a93e:	461d      	mov	r5, r3
 800a940:	4614      	mov	r4, r2
 800a942:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a944:	6028      	str	r0, [r5, #0]
 800a946:	6069      	str	r1, [r5, #4]
 800a948:	60aa      	str	r2, [r5, #8]
 800a94a:	60eb      	str	r3, [r5, #12]
 800a94c:	6820      	ldr	r0, [r4, #0]
 800a94e:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 800a950:	687b      	ldr	r3, [r7, #4]
 800a952:	33d8      	adds	r3, #216	; 0xd8
 800a954:	4a95      	ldr	r2, [pc, #596]	; (800abac <createProblem+0x9d04>)
 800a956:	461c      	mov	r4, r3
 800a958:	4615      	mov	r5, r2
 800a95a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800a95c:	6020      	str	r0, [r4, #0]
 800a95e:	6061      	str	r1, [r4, #4]
 800a960:	60a2      	str	r2, [r4, #8]
 800a962:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800a964:	687b      	ldr	r3, [r7, #4]
 800a966:	33cc      	adds	r3, #204	; 0xcc
 800a968:	4a91      	ldr	r2, [pc, #580]	; (800abb0 <createProblem+0x9d08>)
 800a96a:	6810      	ldr	r0, [r2, #0]
 800a96c:	6018      	str	r0, [r3, #0]
			break;
 800a96e:	f00f bfe1 	b.w	801a934 <createProblem+0x19a8c>
		case 357 :
			strcpy(p->name,"PHSYCHO");
 800a972:	687b      	ldr	r3, [r7, #4]
 800a974:	337c      	adds	r3, #124	; 0x7c
 800a976:	498f      	ldr	r1, [pc, #572]	; (800abb4 <createProblem+0x9d0c>)
 800a978:	461a      	mov	r2, r3
 800a97a:	460b      	mov	r3, r1
 800a97c:	cb03      	ldmia	r3!, {r0, r1}
 800a97e:	6010      	str	r0, [r2, #0]
 800a980:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 800a982:	687b      	ldr	r3, [r7, #4]
 800a984:	2207      	movs	r2, #7
 800a986:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,E,F,G,D,G,D");
 800a988:	687b      	ldr	r3, [r7, #4]
 800a98a:	3340      	adds	r3, #64	; 0x40
 800a98c:	4a8a      	ldr	r2, [pc, #552]	; (800abb8 <createProblem+0x9d10>)
 800a98e:	461c      	mov	r4, r3
 800a990:	4613      	mov	r3, r2
 800a992:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a994:	6020      	str	r0, [r4, #0]
 800a996:	6061      	str	r1, [r4, #4]
 800a998:	60a2      	str	r2, [r4, #8]
 800a99a:	881b      	ldrh	r3, [r3, #0]
 800a99c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,6,13,17,7,10,18");
 800a99e:	687b      	ldr	r3, [r7, #4]
 800a9a0:	3304      	adds	r3, #4
 800a9a2:	4a86      	ldr	r2, [pc, #536]	; (800abbc <createProblem+0x9d14>)
 800a9a4:	461d      	mov	r5, r3
 800a9a6:	4614      	mov	r4, r2
 800a9a8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a9aa:	6028      	str	r0, [r5, #0]
 800a9ac:	6069      	str	r1, [r5, #4]
 800a9ae:	60aa      	str	r2, [r5, #8]
 800a9b0:	60eb      	str	r3, [r5, #12]
 800a9b2:	8823      	ldrh	r3, [r4, #0]
 800a9b4:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800a9b6:	687b      	ldr	r3, [r7, #4]
 800a9b8:	33d8      	adds	r3, #216	; 0xd8
 800a9ba:	4a81      	ldr	r2, [pc, #516]	; (800abc0 <createProblem+0x9d18>)
 800a9bc:	461c      	mov	r4, r3
 800a9be:	4613      	mov	r3, r2
 800a9c0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800a9c2:	6020      	str	r0, [r4, #0]
 800a9c4:	6061      	str	r1, [r4, #4]
 800a9c6:	60a2      	str	r2, [r4, #8]
 800a9c8:	881b      	ldrh	r3, [r3, #0]
 800a9ca:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 800a9cc:	687b      	ldr	r3, [r7, #4]
 800a9ce:	33cc      	adds	r3, #204	; 0xcc
 800a9d0:	4a7c      	ldr	r2, [pc, #496]	; (800abc4 <createProblem+0x9d1c>)
 800a9d2:	6810      	ldr	r0, [r2, #0]
 800a9d4:	6018      	str	r0, [r3, #0]
			break;
 800a9d6:	f00f bfad 	b.w	801a934 <createProblem+0x19a8c>
		case 358 :
			strcpy(p->name,"CLIMBING ON BLANK");
 800a9da:	687b      	ldr	r3, [r7, #4]
 800a9dc:	337c      	adds	r3, #124	; 0x7c
 800a9de:	4a7a      	ldr	r2, [pc, #488]	; (800abc8 <createProblem+0x9d20>)
 800a9e0:	461d      	mov	r5, r3
 800a9e2:	4614      	mov	r4, r2
 800a9e4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800a9e6:	6028      	str	r0, [r5, #0]
 800a9e8:	6069      	str	r1, [r5, #4]
 800a9ea:	60aa      	str	r2, [r5, #8]
 800a9ec:	60eb      	str	r3, [r5, #12]
 800a9ee:	8823      	ldrh	r3, [r4, #0]
 800a9f0:	822b      	strh	r3, [r5, #16]
			p->moveSize = 6;
 800a9f2:	687b      	ldr	r3, [r7, #4]
 800a9f4:	2206      	movs	r2, #6
 800a9f6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,D,A,E,E,I");
 800a9f8:	687b      	ldr	r3, [r7, #4]
 800a9fa:	3340      	adds	r3, #64	; 0x40
 800a9fc:	4a73      	ldr	r2, [pc, #460]	; (800abcc <createProblem+0x9d24>)
 800a9fe:	461c      	mov	r4, r3
 800aa00:	4613      	mov	r3, r2
 800aa02:	cb07      	ldmia	r3!, {r0, r1, r2}
 800aa04:	6020      	str	r0, [r4, #0]
 800aa06:	6061      	str	r1, [r4, #4]
 800aa08:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,7,9,12,16,18");
 800aa0a:	687b      	ldr	r3, [r7, #4]
 800aa0c:	3304      	adds	r3, #4
 800aa0e:	4a70      	ldr	r2, [pc, #448]	; (800abd0 <createProblem+0x9d28>)
 800aa10:	461c      	mov	r4, r3
 800aa12:	4613      	mov	r3, r2
 800aa14:	cb07      	ldmia	r3!, {r0, r1, r2}
 800aa16:	6020      	str	r0, [r4, #0]
 800aa18:	6061      	str	r1, [r4, #4]
 800aa1a:	60a2      	str	r2, [r4, #8]
 800aa1c:	881a      	ldrh	r2, [r3, #0]
 800aa1e:	789b      	ldrb	r3, [r3, #2]
 800aa20:	81a2      	strh	r2, [r4, #12]
 800aa22:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800aa24:	687b      	ldr	r3, [r7, #4]
 800aa26:	33d8      	adds	r3, #216	; 0xd8
 800aa28:	4a6a      	ldr	r2, [pc, #424]	; (800abd4 <createProblem+0x9d2c>)
 800aa2a:	461c      	mov	r4, r3
 800aa2c:	4613      	mov	r3, r2
 800aa2e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800aa30:	6020      	str	r0, [r4, #0]
 800aa32:	6061      	str	r1, [r4, #4]
 800aa34:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 800aa36:	687b      	ldr	r3, [r7, #4]
 800aa38:	33cc      	adds	r3, #204	; 0xcc
 800aa3a:	4a67      	ldr	r2, [pc, #412]	; (800abd8 <createProblem+0x9d30>)
 800aa3c:	8811      	ldrh	r1, [r2, #0]
 800aa3e:	7892      	ldrb	r2, [r2, #2]
 800aa40:	8019      	strh	r1, [r3, #0]
 800aa42:	709a      	strb	r2, [r3, #2]
			break;
 800aa44:	f00f bf76 	b.w	801a934 <createProblem+0x19a8c>
		case 359 :
			strcpy(p->name,"CRAZYCRACKER");
 800aa48:	687b      	ldr	r3, [r7, #4]
 800aa4a:	337c      	adds	r3, #124	; 0x7c
 800aa4c:	4a63      	ldr	r2, [pc, #396]	; (800abdc <createProblem+0x9d34>)
 800aa4e:	461c      	mov	r4, r3
 800aa50:	4613      	mov	r3, r2
 800aa52:	cb07      	ldmia	r3!, {r0, r1, r2}
 800aa54:	6020      	str	r0, [r4, #0]
 800aa56:	6061      	str	r1, [r4, #4]
 800aa58:	60a2      	str	r2, [r4, #8]
 800aa5a:	781b      	ldrb	r3, [r3, #0]
 800aa5c:	7323      	strb	r3, [r4, #12]
			p->moveSize = 8;
 800aa5e:	687b      	ldr	r3, [r7, #4]
 800aa60:	2208      	movs	r2, #8
 800aa62:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,I,G,J,H,G,D");
 800aa64:	687b      	ldr	r3, [r7, #4]
 800aa66:	3340      	adds	r3, #64	; 0x40
 800aa68:	4a5d      	ldr	r2, [pc, #372]	; (800abe0 <createProblem+0x9d38>)
 800aa6a:	461c      	mov	r4, r3
 800aa6c:	4615      	mov	r5, r2
 800aa6e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800aa70:	6020      	str	r0, [r4, #0]
 800aa72:	6061      	str	r1, [r4, #4]
 800aa74:	60a2      	str	r2, [r4, #8]
 800aa76:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,7,10,12,16,17,18");
 800aa78:	687b      	ldr	r3, [r7, #4]
 800aa7a:	3304      	adds	r3, #4
 800aa7c:	4a59      	ldr	r2, [pc, #356]	; (800abe4 <createProblem+0x9d3c>)
 800aa7e:	461d      	mov	r5, r3
 800aa80:	4614      	mov	r4, r2
 800aa82:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800aa84:	6028      	str	r0, [r5, #0]
 800aa86:	6069      	str	r1, [r5, #4]
 800aa88:	60aa      	str	r2, [r5, #8]
 800aa8a:	60eb      	str	r3, [r5, #12]
 800aa8c:	6820      	ldr	r0, [r4, #0]
 800aa8e:	6128      	str	r0, [r5, #16]
 800aa90:	7923      	ldrb	r3, [r4, #4]
 800aa92:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800aa94:	687b      	ldr	r3, [r7, #4]
 800aa96:	33d8      	adds	r3, #216	; 0xd8
 800aa98:	4a3f      	ldr	r2, [pc, #252]	; (800ab98 <createProblem+0x9cf0>)
 800aa9a:	461c      	mov	r4, r3
 800aa9c:	4615      	mov	r5, r2
 800aa9e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800aaa0:	6020      	str	r0, [r4, #0]
 800aaa2:	6061      	str	r1, [r4, #4]
 800aaa4:	60a2      	str	r2, [r4, #8]
 800aaa6:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 800aaa8:	687b      	ldr	r3, [r7, #4]
 800aaaa:	33cc      	adds	r3, #204	; 0xcc
 800aaac:	4a45      	ldr	r2, [pc, #276]	; (800abc4 <createProblem+0x9d1c>)
 800aaae:	6810      	ldr	r0, [r2, #0]
 800aab0:	6018      	str	r0, [r3, #0]
			break;
 800aab2:	f00f bf3f 	b.w	801a934 <createProblem+0x19a8c>
		case 36 :
			strcpy(p->name,"NOT TOO BAD");
 800aab6:	687b      	ldr	r3, [r7, #4]
 800aab8:	337c      	adds	r3, #124	; 0x7c
 800aaba:	4a4b      	ldr	r2, [pc, #300]	; (800abe8 <createProblem+0x9d40>)
 800aabc:	461c      	mov	r4, r3
 800aabe:	4613      	mov	r3, r2
 800aac0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800aac2:	6020      	str	r0, [r4, #0]
 800aac4:	6061      	str	r1, [r4, #4]
 800aac6:	60a2      	str	r2, [r4, #8]
			p->moveSize = 8;
 800aac8:	687b      	ldr	r3, [r7, #4]
 800aaca:	2208      	movs	r2, #8
 800aacc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,E,F,D,I,E,D");
 800aace:	687b      	ldr	r3, [r7, #4]
 800aad0:	3340      	adds	r3, #64	; 0x40
 800aad2:	4a46      	ldr	r2, [pc, #280]	; (800abec <createProblem+0x9d44>)
 800aad4:	461c      	mov	r4, r3
 800aad6:	4615      	mov	r5, r2
 800aad8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800aada:	6020      	str	r0, [r4, #0]
 800aadc:	6061      	str	r1, [r4, #4]
 800aade:	60a2      	str	r2, [r4, #8]
 800aae0:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,5,8,11,11,14,16,18");
 800aae2:	687b      	ldr	r3, [r7, #4]
 800aae4:	3304      	adds	r3, #4
 800aae6:	4a42      	ldr	r2, [pc, #264]	; (800abf0 <createProblem+0x9d48>)
 800aae8:	461d      	mov	r5, r3
 800aaea:	4614      	mov	r4, r2
 800aaec:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800aaee:	6028      	str	r0, [r5, #0]
 800aaf0:	6069      	str	r1, [r5, #4]
 800aaf2:	60aa      	str	r2, [r5, #8]
 800aaf4:	60eb      	str	r3, [r5, #12]
 800aaf6:	6820      	ldr	r0, [r4, #0]
 800aaf8:	6128      	str	r0, [r5, #16]
 800aafa:	7923      	ldrb	r3, [r4, #4]
 800aafc:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800aafe:	687b      	ldr	r3, [r7, #4]
 800ab00:	33d8      	adds	r3, #216	; 0xd8
 800ab02:	4a25      	ldr	r2, [pc, #148]	; (800ab98 <createProblem+0x9cf0>)
 800ab04:	461c      	mov	r4, r3
 800ab06:	4615      	mov	r5, r2
 800ab08:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ab0a:	6020      	str	r0, [r4, #0]
 800ab0c:	6061      	str	r1, [r4, #4]
 800ab0e:	60a2      	str	r2, [r4, #8]
 800ab10:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800ab12:	687b      	ldr	r3, [r7, #4]
 800ab14:	33cc      	adds	r3, #204	; 0xcc
 800ab16:	4a26      	ldr	r2, [pc, #152]	; (800abb0 <createProblem+0x9d08>)
 800ab18:	6810      	ldr	r0, [r2, #0]
 800ab1a:	6018      	str	r0, [r3, #0]
			break;
 800ab1c:	f00f bf0a 	b.w	801a934 <createProblem+0x19a8c>
		case 360 :
			strcpy(p->name,"PACHIMAMA");
 800ab20:	687b      	ldr	r3, [r7, #4]
 800ab22:	337c      	adds	r3, #124	; 0x7c
 800ab24:	4933      	ldr	r1, [pc, #204]	; (800abf4 <createProblem+0x9d4c>)
 800ab26:	461a      	mov	r2, r3
 800ab28:	460b      	mov	r3, r1
 800ab2a:	cb03      	ldmia	r3!, {r0, r1}
 800ab2c:	6010      	str	r0, [r2, #0]
 800ab2e:	6051      	str	r1, [r2, #4]
 800ab30:	881b      	ldrh	r3, [r3, #0]
 800ab32:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 800ab34:	687b      	ldr	r3, [r7, #4]
 800ab36:	2206      	movs	r2, #6
 800ab38:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,K,H,K,I");
 800ab3a:	687b      	ldr	r3, [r7, #4]
 800ab3c:	3340      	adds	r3, #64	; 0x40
 800ab3e:	4a2e      	ldr	r2, [pc, #184]	; (800abf8 <createProblem+0x9d50>)
 800ab40:	461c      	mov	r4, r3
 800ab42:	4613      	mov	r3, r2
 800ab44:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ab46:	6020      	str	r0, [r4, #0]
 800ab48:	6061      	str	r1, [r4, #4]
 800ab4a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,9,12,14,18");
 800ab4c:	687b      	ldr	r3, [r7, #4]
 800ab4e:	3304      	adds	r3, #4
 800ab50:	4a2a      	ldr	r2, [pc, #168]	; (800abfc <createProblem+0x9d54>)
 800ab52:	461c      	mov	r4, r3
 800ab54:	4613      	mov	r3, r2
 800ab56:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ab58:	6020      	str	r0, [r4, #0]
 800ab5a:	6061      	str	r1, [r4, #4]
 800ab5c:	60a2      	str	r2, [r4, #8]
 800ab5e:	881a      	ldrh	r2, [r3, #0]
 800ab60:	789b      	ldrb	r3, [r3, #2]
 800ab62:	81a2      	strh	r2, [r4, #12]
 800ab64:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800ab66:	687b      	ldr	r3, [r7, #4]
 800ab68:	33d8      	adds	r3, #216	; 0xd8
 800ab6a:	4a25      	ldr	r2, [pc, #148]	; (800ac00 <createProblem+0x9d58>)
 800ab6c:	461c      	mov	r4, r3
 800ab6e:	4613      	mov	r3, r2
 800ab70:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ab72:	6020      	str	r0, [r4, #0]
 800ab74:	6061      	str	r1, [r4, #4]
 800ab76:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 800ab78:	687b      	ldr	r3, [r7, #4]
 800ab7a:	33cc      	adds	r3, #204	; 0xcc
 800ab7c:	4a16      	ldr	r2, [pc, #88]	; (800abd8 <createProblem+0x9d30>)
 800ab7e:	8811      	ldrh	r1, [r2, #0]
 800ab80:	7892      	ldrb	r2, [r2, #2]
 800ab82:	8019      	strh	r1, [r3, #0]
 800ab84:	709a      	strb	r2, [r3, #2]
			break;
 800ab86:	f00f bed5 	b.w	801a934 <createProblem+0x19a8c>
 800ab8a:	bf00      	nop
 800ab8c:	08023ef8 	.word	0x08023ef8
 800ab90:	08023f08 	.word	0x08023f08
 800ab94:	08023f18 	.word	0x08023f18
 800ab98:	08020a4c 	.word	0x08020a4c
 800ab9c:	08020928 	.word	0x08020928
 800aba0:	08023f2c 	.word	0x08023f2c
 800aba4:	08023f40 	.word	0x08023f40
 800aba8:	08023f50 	.word	0x08023f50
 800abac:	080209d8 	.word	0x080209d8
 800abb0:	08020830 	.word	0x08020830
 800abb4:	08023f64 	.word	0x08023f64
 800abb8:	08023f6c 	.word	0x08023f6c
 800abbc:	08023f7c 	.word	0x08023f7c
 800abc0:	08020820 	.word	0x08020820
 800abc4:	080209a4 	.word	0x080209a4
 800abc8:	08023f90 	.word	0x08023f90
 800abcc:	08023fa4 	.word	0x08023fa4
 800abd0:	08023fb0 	.word	0x08023fb0
 800abd4:	0802091c 	.word	0x0802091c
 800abd8:	08020874 	.word	0x08020874
 800abdc:	08023fc0 	.word	0x08023fc0
 800abe0:	08023fd0 	.word	0x08023fd0
 800abe4:	08023fe0 	.word	0x08023fe0
 800abe8:	08023ff8 	.word	0x08023ff8
 800abec:	08024004 	.word	0x08024004
 800abf0:	08024014 	.word	0x08024014
 800abf4:	0802402c 	.word	0x0802402c
 800abf8:	08024038 	.word	0x08024038
 800abfc:	08024044 	.word	0x08024044
 800ac00:	08020e90 	.word	0x08020e90
		case 361 :
			strcpy(p->name,"RECOVERY DRINK");
 800ac04:	687b      	ldr	r3, [r7, #4]
 800ac06:	337c      	adds	r3, #124	; 0x7c
 800ac08:	4abc      	ldr	r2, [pc, #752]	; (800aefc <createProblem+0xa054>)
 800ac0a:	461c      	mov	r4, r3
 800ac0c:	4613      	mov	r3, r2
 800ac0e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ac10:	6020      	str	r0, [r4, #0]
 800ac12:	6061      	str	r1, [r4, #4]
 800ac14:	60a2      	str	r2, [r4, #8]
 800ac16:	881a      	ldrh	r2, [r3, #0]
 800ac18:	789b      	ldrb	r3, [r3, #2]
 800ac1a:	81a2      	strh	r2, [r4, #12]
 800ac1c:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 6;
 800ac1e:	687b      	ldr	r3, [r7, #4]
 800ac20:	2206      	movs	r2, #6
 800ac22:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,D,H,I,I");
 800ac24:	687b      	ldr	r3, [r7, #4]
 800ac26:	3340      	adds	r3, #64	; 0x40
 800ac28:	4ab5      	ldr	r2, [pc, #724]	; (800af00 <createProblem+0xa058>)
 800ac2a:	461c      	mov	r4, r3
 800ac2c:	4613      	mov	r3, r2
 800ac2e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ac30:	6020      	str	r0, [r4, #0]
 800ac32:	6061      	str	r1, [r4, #4]
 800ac34:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,11,12,15,18");
 800ac36:	687b      	ldr	r3, [r7, #4]
 800ac38:	3304      	adds	r3, #4
 800ac3a:	4ab2      	ldr	r2, [pc, #712]	; (800af04 <createProblem+0xa05c>)
 800ac3c:	461c      	mov	r4, r3
 800ac3e:	4615      	mov	r5, r2
 800ac40:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ac42:	6020      	str	r0, [r4, #0]
 800ac44:	6061      	str	r1, [r4, #4]
 800ac46:	60a2      	str	r2, [r4, #8]
 800ac48:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800ac4a:	687b      	ldr	r3, [r7, #4]
 800ac4c:	33d8      	adds	r3, #216	; 0xd8
 800ac4e:	4aae      	ldr	r2, [pc, #696]	; (800af08 <createProblem+0xa060>)
 800ac50:	461c      	mov	r4, r3
 800ac52:	4613      	mov	r3, r2
 800ac54:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ac56:	6020      	str	r0, [r4, #0]
 800ac58:	6061      	str	r1, [r4, #4]
 800ac5a:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 800ac5c:	687b      	ldr	r3, [r7, #4]
 800ac5e:	33cc      	adds	r3, #204	; 0xcc
 800ac60:	4aaa      	ldr	r2, [pc, #680]	; (800af0c <createProblem+0xa064>)
 800ac62:	6810      	ldr	r0, [r2, #0]
 800ac64:	6018      	str	r0, [r3, #0]
			break;
 800ac66:	f00f be65 	b.w	801a934 <createProblem+0x19a8c>
		case 362 :
			strcpy(p->name,"CRUXY E9");
 800ac6a:	687b      	ldr	r3, [r7, #4]
 800ac6c:	337c      	adds	r3, #124	; 0x7c
 800ac6e:	49a8      	ldr	r1, [pc, #672]	; (800af10 <createProblem+0xa068>)
 800ac70:	461a      	mov	r2, r3
 800ac72:	460b      	mov	r3, r1
 800ac74:	cb03      	ldmia	r3!, {r0, r1}
 800ac76:	6010      	str	r0, [r2, #0]
 800ac78:	6051      	str	r1, [r2, #4]
 800ac7a:	781b      	ldrb	r3, [r3, #0]
 800ac7c:	7213      	strb	r3, [r2, #8]
			p->moveSize = 7;
 800ac7e:	687b      	ldr	r3, [r7, #4]
 800ac80:	2207      	movs	r2, #7
 800ac82:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,E,I,E,B,A");
 800ac84:	687b      	ldr	r3, [r7, #4]
 800ac86:	3340      	adds	r3, #64	; 0x40
 800ac88:	4aa2      	ldr	r2, [pc, #648]	; (800af14 <createProblem+0xa06c>)
 800ac8a:	461c      	mov	r4, r3
 800ac8c:	4613      	mov	r3, r2
 800ac8e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ac90:	6020      	str	r0, [r4, #0]
 800ac92:	6061      	str	r1, [r4, #4]
 800ac94:	60a2      	str	r2, [r4, #8]
 800ac96:	881b      	ldrh	r3, [r3, #0]
 800ac98:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,9,7,12,15,18");
 800ac9a:	687b      	ldr	r3, [r7, #4]
 800ac9c:	3304      	adds	r3, #4
 800ac9e:	4a9e      	ldr	r2, [pc, #632]	; (800af18 <createProblem+0xa070>)
 800aca0:	461d      	mov	r5, r3
 800aca2:	4614      	mov	r4, r2
 800aca4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800aca6:	6028      	str	r0, [r5, #0]
 800aca8:	6069      	str	r1, [r5, #4]
 800acaa:	60aa      	str	r2, [r5, #8]
 800acac:	60eb      	str	r3, [r5, #12]
 800acae:	7823      	ldrb	r3, [r4, #0]
 800acb0:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800acb2:	687b      	ldr	r3, [r7, #4]
 800acb4:	33d8      	adds	r3, #216	; 0xd8
 800acb6:	4a99      	ldr	r2, [pc, #612]	; (800af1c <createProblem+0xa074>)
 800acb8:	461c      	mov	r4, r3
 800acba:	4613      	mov	r3, r2
 800acbc:	cb07      	ldmia	r3!, {r0, r1, r2}
 800acbe:	6020      	str	r0, [r4, #0]
 800acc0:	6061      	str	r1, [r4, #4]
 800acc2:	60a2      	str	r2, [r4, #8]
 800acc4:	881b      	ldrh	r3, [r3, #0]
 800acc6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B");
 800acc8:	687b      	ldr	r3, [r7, #4]
 800acca:	33cc      	adds	r3, #204	; 0xcc
 800accc:	4a94      	ldr	r2, [pc, #592]	; (800af20 <createProblem+0xa078>)
 800acce:	8811      	ldrh	r1, [r2, #0]
 800acd0:	7892      	ldrb	r2, [r2, #2]
 800acd2:	8019      	strh	r1, [r3, #0]
 800acd4:	709a      	strb	r2, [r3, #2]
			break;
 800acd6:	f00f be2d 	b.w	801a934 <createProblem+0x19a8c>
		case 363 :
			strcpy(p->name,"SHOULDER STRIKE");
 800acda:	687b      	ldr	r3, [r7, #4]
 800acdc:	337c      	adds	r3, #124	; 0x7c
 800acde:	4a91      	ldr	r2, [pc, #580]	; (800af24 <createProblem+0xa07c>)
 800ace0:	461c      	mov	r4, r3
 800ace2:	4615      	mov	r5, r2
 800ace4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ace6:	6020      	str	r0, [r4, #0]
 800ace8:	6061      	str	r1, [r4, #4]
 800acea:	60a2      	str	r2, [r4, #8]
 800acec:	60e3      	str	r3, [r4, #12]
			p->moveSize = 7;
 800acee:	687b      	ldr	r3, [r7, #4]
 800acf0:	2207      	movs	r2, #7
 800acf2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,G,H,I,I");
 800acf4:	687b      	ldr	r3, [r7, #4]
 800acf6:	3340      	adds	r3, #64	; 0x40
 800acf8:	4a8b      	ldr	r2, [pc, #556]	; (800af28 <createProblem+0xa080>)
 800acfa:	461c      	mov	r4, r3
 800acfc:	4613      	mov	r3, r2
 800acfe:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ad00:	6020      	str	r0, [r4, #0]
 800ad02:	6061      	str	r1, [r4, #4]
 800ad04:	60a2      	str	r2, [r4, #8]
 800ad06:	881b      	ldrh	r3, [r3, #0]
 800ad08:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,9,12,15,5,7,18");
 800ad0a:	687b      	ldr	r3, [r7, #4]
 800ad0c:	3304      	adds	r3, #4
 800ad0e:	4a87      	ldr	r2, [pc, #540]	; (800af2c <createProblem+0xa084>)
 800ad10:	461d      	mov	r5, r3
 800ad12:	4614      	mov	r4, r2
 800ad14:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ad16:	6028      	str	r0, [r5, #0]
 800ad18:	6069      	str	r1, [r5, #4]
 800ad1a:	60aa      	str	r2, [r5, #8]
 800ad1c:	60eb      	str	r3, [r5, #12]
 800ad1e:	7823      	ldrb	r3, [r4, #0]
 800ad20:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800ad22:	687b      	ldr	r3, [r7, #4]
 800ad24:	33d8      	adds	r3, #216	; 0xd8
 800ad26:	4a7d      	ldr	r2, [pc, #500]	; (800af1c <createProblem+0xa074>)
 800ad28:	461c      	mov	r4, r3
 800ad2a:	4613      	mov	r3, r2
 800ad2c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ad2e:	6020      	str	r0, [r4, #0]
 800ad30:	6061      	str	r1, [r4, #4]
 800ad32:	60a2      	str	r2, [r4, #8]
 800ad34:	881b      	ldrh	r3, [r3, #0]
 800ad36:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B");
 800ad38:	687b      	ldr	r3, [r7, #4]
 800ad3a:	33cc      	adds	r3, #204	; 0xcc
 800ad3c:	4a78      	ldr	r2, [pc, #480]	; (800af20 <createProblem+0xa078>)
 800ad3e:	8811      	ldrh	r1, [r2, #0]
 800ad40:	7892      	ldrb	r2, [r2, #2]
 800ad42:	8019      	strh	r1, [r3, #0]
 800ad44:	709a      	strb	r2, [r3, #2]
			break;
 800ad46:	f00f bdf5 	b.w	801a934 <createProblem+0x19a8c>
		case 364 :
			strcpy(p->name,"UGLY LITTLE PROBLEM");
 800ad4a:	687b      	ldr	r3, [r7, #4]
 800ad4c:	337c      	adds	r3, #124	; 0x7c
 800ad4e:	4a78      	ldr	r2, [pc, #480]	; (800af30 <createProblem+0xa088>)
 800ad50:	461d      	mov	r5, r3
 800ad52:	4614      	mov	r4, r2
 800ad54:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ad56:	6028      	str	r0, [r5, #0]
 800ad58:	6069      	str	r1, [r5, #4]
 800ad5a:	60aa      	str	r2, [r5, #8]
 800ad5c:	60eb      	str	r3, [r5, #12]
 800ad5e:	6820      	ldr	r0, [r4, #0]
 800ad60:	6128      	str	r0, [r5, #16]
			p->moveSize = 5;
 800ad62:	687b      	ldr	r3, [r7, #4]
 800ad64:	2205      	movs	r2, #5
 800ad66:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,D,B,B,A");
 800ad68:	687b      	ldr	r3, [r7, #4]
 800ad6a:	3340      	adds	r3, #64	; 0x40
 800ad6c:	4971      	ldr	r1, [pc, #452]	; (800af34 <createProblem+0xa08c>)
 800ad6e:	461a      	mov	r2, r3
 800ad70:	460b      	mov	r3, r1
 800ad72:	cb03      	ldmia	r3!, {r0, r1}
 800ad74:	6010      	str	r0, [r2, #0]
 800ad76:	6051      	str	r1, [r2, #4]
 800ad78:	881b      	ldrh	r3, [r3, #0]
 800ad7a:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,7,10,15,18");
 800ad7c:	687b      	ldr	r3, [r7, #4]
 800ad7e:	3304      	adds	r3, #4
 800ad80:	4a6d      	ldr	r2, [pc, #436]	; (800af38 <createProblem+0xa090>)
 800ad82:	461c      	mov	r4, r3
 800ad84:	4613      	mov	r3, r2
 800ad86:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ad88:	6020      	str	r0, [r4, #0]
 800ad8a:	6061      	str	r1, [r4, #4]
 800ad8c:	60a2      	str	r2, [r4, #8]
 800ad8e:	781b      	ldrb	r3, [r3, #0]
 800ad90:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800ad92:	687b      	ldr	r3, [r7, #4]
 800ad94:	33d8      	adds	r3, #216	; 0xd8
 800ad96:	4969      	ldr	r1, [pc, #420]	; (800af3c <createProblem+0xa094>)
 800ad98:	461a      	mov	r2, r3
 800ad9a:	460b      	mov	r3, r1
 800ad9c:	cb03      	ldmia	r3!, {r0, r1}
 800ad9e:	6010      	str	r0, [r2, #0]
 800ada0:	6051      	str	r1, [r2, #4]
 800ada2:	881b      	ldrh	r3, [r3, #0]
 800ada4:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 800ada6:	687b      	ldr	r3, [r7, #4]
 800ada8:	33cc      	adds	r3, #204	; 0xcc
 800adaa:	4a65      	ldr	r2, [pc, #404]	; (800af40 <createProblem+0xa098>)
 800adac:	8811      	ldrh	r1, [r2, #0]
 800adae:	7892      	ldrb	r2, [r2, #2]
 800adb0:	8019      	strh	r1, [r3, #0]
 800adb2:	709a      	strb	r2, [r3, #2]
			break;
 800adb4:	f00f bdbe 	b.w	801a934 <createProblem+0x19a8c>
		case 365 :
			strcpy(p->name,"BIG PAW");
 800adb8:	687b      	ldr	r3, [r7, #4]
 800adba:	337c      	adds	r3, #124	; 0x7c
 800adbc:	4961      	ldr	r1, [pc, #388]	; (800af44 <createProblem+0xa09c>)
 800adbe:	461a      	mov	r2, r3
 800adc0:	460b      	mov	r3, r1
 800adc2:	cb03      	ldmia	r3!, {r0, r1}
 800adc4:	6010      	str	r0, [r2, #0]
 800adc6:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 800adc8:	687b      	ldr	r3, [r7, #4]
 800adca:	2207      	movs	r2, #7
 800adcc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,C,I,H,K,E,I");
 800adce:	687b      	ldr	r3, [r7, #4]
 800add0:	3340      	adds	r3, #64	; 0x40
 800add2:	4a5d      	ldr	r2, [pc, #372]	; (800af48 <createProblem+0xa0a0>)
 800add4:	461c      	mov	r4, r3
 800add6:	4613      	mov	r3, r2
 800add8:	cb07      	ldmia	r3!, {r0, r1, r2}
 800adda:	6020      	str	r0, [r4, #0]
 800addc:	6061      	str	r1, [r4, #4]
 800adde:	60a2      	str	r2, [r4, #8]
 800ade0:	881b      	ldrh	r3, [r3, #0]
 800ade2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,9,12,16,9,18");
 800ade4:	687b      	ldr	r3, [r7, #4]
 800ade6:	3304      	adds	r3, #4
 800ade8:	4a58      	ldr	r2, [pc, #352]	; (800af4c <createProblem+0xa0a4>)
 800adea:	461d      	mov	r5, r3
 800adec:	4614      	mov	r4, r2
 800adee:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800adf0:	6028      	str	r0, [r5, #0]
 800adf2:	6069      	str	r1, [r5, #4]
 800adf4:	60aa      	str	r2, [r5, #8]
 800adf6:	60eb      	str	r3, [r5, #12]
 800adf8:	7823      	ldrb	r3, [r4, #0]
 800adfa:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800adfc:	687b      	ldr	r3, [r7, #4]
 800adfe:	33d8      	adds	r3, #216	; 0xd8
 800ae00:	4a53      	ldr	r2, [pc, #332]	; (800af50 <createProblem+0xa0a8>)
 800ae02:	461c      	mov	r4, r3
 800ae04:	4613      	mov	r3, r2
 800ae06:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ae08:	6020      	str	r0, [r4, #0]
 800ae0a:	6061      	str	r1, [r4, #4]
 800ae0c:	60a2      	str	r2, [r4, #8]
 800ae0e:	881b      	ldrh	r3, [r3, #0]
 800ae10:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B");
 800ae12:	687b      	ldr	r3, [r7, #4]
 800ae14:	33cc      	adds	r3, #204	; 0xcc
 800ae16:	4a42      	ldr	r2, [pc, #264]	; (800af20 <createProblem+0xa078>)
 800ae18:	8811      	ldrh	r1, [r2, #0]
 800ae1a:	7892      	ldrb	r2, [r2, #2]
 800ae1c:	8019      	strh	r1, [r3, #0]
 800ae1e:	709a      	strb	r2, [r3, #2]
			break;
 800ae20:	f00f bd88 	b.w	801a934 <createProblem+0x19a8c>
		case 366 :
			strcpy(p->name,"DEFYING GRAVITY");
 800ae24:	687b      	ldr	r3, [r7, #4]
 800ae26:	337c      	adds	r3, #124	; 0x7c
 800ae28:	4a4a      	ldr	r2, [pc, #296]	; (800af54 <createProblem+0xa0ac>)
 800ae2a:	461c      	mov	r4, r3
 800ae2c:	4615      	mov	r5, r2
 800ae2e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ae30:	6020      	str	r0, [r4, #0]
 800ae32:	6061      	str	r1, [r4, #4]
 800ae34:	60a2      	str	r2, [r4, #8]
 800ae36:	60e3      	str	r3, [r4, #12]
			p->moveSize = 6;
 800ae38:	687b      	ldr	r3, [r7, #4]
 800ae3a:	2206      	movs	r2, #6
 800ae3c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,I,F,H,E,D");
 800ae3e:	687b      	ldr	r3, [r7, #4]
 800ae40:	3340      	adds	r3, #64	; 0x40
 800ae42:	4a45      	ldr	r2, [pc, #276]	; (800af58 <createProblem+0xa0b0>)
 800ae44:	461c      	mov	r4, r3
 800ae46:	4613      	mov	r3, r2
 800ae48:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ae4a:	6020      	str	r0, [r4, #0]
 800ae4c:	6061      	str	r1, [r4, #4]
 800ae4e:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,10,13,16,8,18");
 800ae50:	687b      	ldr	r3, [r7, #4]
 800ae52:	3304      	adds	r3, #4
 800ae54:	4a41      	ldr	r2, [pc, #260]	; (800af5c <createProblem+0xa0b4>)
 800ae56:	461c      	mov	r4, r3
 800ae58:	4615      	mov	r5, r2
 800ae5a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ae5c:	6020      	str	r0, [r4, #0]
 800ae5e:	6061      	str	r1, [r4, #4]
 800ae60:	60a2      	str	r2, [r4, #8]
 800ae62:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800ae64:	687b      	ldr	r3, [r7, #4]
 800ae66:	33d8      	adds	r3, #216	; 0xd8
 800ae68:	4a27      	ldr	r2, [pc, #156]	; (800af08 <createProblem+0xa060>)
 800ae6a:	461c      	mov	r4, r3
 800ae6c:	4613      	mov	r3, r2
 800ae6e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ae70:	6020      	str	r0, [r4, #0]
 800ae72:	6061      	str	r1, [r4, #4]
 800ae74:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 800ae76:	687b      	ldr	r3, [r7, #4]
 800ae78:	33cc      	adds	r3, #204	; 0xcc
 800ae7a:	4a39      	ldr	r2, [pc, #228]	; (800af60 <createProblem+0xa0b8>)
 800ae7c:	6810      	ldr	r0, [r2, #0]
 800ae7e:	6018      	str	r0, [r3, #0]
			break;
 800ae80:	f00f bd58 	b.w	801a934 <createProblem+0x19a8c>
		case 367 :
			strcpy(p->name,"THE ONLY LIGHT");
 800ae84:	687b      	ldr	r3, [r7, #4]
 800ae86:	337c      	adds	r3, #124	; 0x7c
 800ae88:	4a36      	ldr	r2, [pc, #216]	; (800af64 <createProblem+0xa0bc>)
 800ae8a:	461c      	mov	r4, r3
 800ae8c:	4613      	mov	r3, r2
 800ae8e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ae90:	6020      	str	r0, [r4, #0]
 800ae92:	6061      	str	r1, [r4, #4]
 800ae94:	60a2      	str	r2, [r4, #8]
 800ae96:	881a      	ldrh	r2, [r3, #0]
 800ae98:	789b      	ldrb	r3, [r3, #2]
 800ae9a:	81a2      	strh	r2, [r4, #12]
 800ae9c:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 7;
 800ae9e:	687b      	ldr	r3, [r7, #4]
 800aea0:	2207      	movs	r2, #7
 800aea2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,H,F,H,E,D");
 800aea4:	687b      	ldr	r3, [r7, #4]
 800aea6:	3340      	adds	r3, #64	; 0x40
 800aea8:	4a2f      	ldr	r2, [pc, #188]	; (800af68 <createProblem+0xa0c0>)
 800aeaa:	461c      	mov	r4, r3
 800aeac:	4613      	mov	r3, r2
 800aeae:	cb07      	ldmia	r3!, {r0, r1, r2}
 800aeb0:	6020      	str	r0, [r4, #0]
 800aeb2:	6061      	str	r1, [r4, #4]
 800aeb4:	60a2      	str	r2, [r4, #8]
 800aeb6:	881b      	ldrh	r3, [r3, #0]
 800aeb8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,6,8,11,13,16,18");
 800aeba:	687b      	ldr	r3, [r7, #4]
 800aebc:	3304      	adds	r3, #4
 800aebe:	4a2b      	ldr	r2, [pc, #172]	; (800af6c <createProblem+0xa0c4>)
 800aec0:	461d      	mov	r5, r3
 800aec2:	4614      	mov	r4, r2
 800aec4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800aec6:	6028      	str	r0, [r5, #0]
 800aec8:	6069      	str	r1, [r5, #4]
 800aeca:	60aa      	str	r2, [r5, #8]
 800aecc:	60eb      	str	r3, [r5, #12]
 800aece:	8823      	ldrh	r3, [r4, #0]
 800aed0:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800aed2:	687b      	ldr	r3, [r7, #4]
 800aed4:	33d8      	adds	r3, #216	; 0xd8
 800aed6:	4a1e      	ldr	r2, [pc, #120]	; (800af50 <createProblem+0xa0a8>)
 800aed8:	461c      	mov	r4, r3
 800aeda:	4613      	mov	r3, r2
 800aedc:	cb07      	ldmia	r3!, {r0, r1, r2}
 800aede:	6020      	str	r0, [r4, #0]
 800aee0:	6061      	str	r1, [r4, #4]
 800aee2:	60a2      	str	r2, [r4, #8]
 800aee4:	881b      	ldrh	r3, [r3, #0]
 800aee6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 800aee8:	687b      	ldr	r3, [r7, #4]
 800aeea:	33cc      	adds	r3, #204	; 0xcc
 800aeec:	4a20      	ldr	r2, [pc, #128]	; (800af70 <createProblem+0xa0c8>)
 800aeee:	8811      	ldrh	r1, [r2, #0]
 800aef0:	7892      	ldrb	r2, [r2, #2]
 800aef2:	8019      	strh	r1, [r3, #0]
 800aef4:	709a      	strb	r2, [r3, #2]
			break;
 800aef6:	f00f bd1d 	b.w	801a934 <createProblem+0x19a8c>
 800aefa:	bf00      	nop
 800aefc:	08024054 	.word	0x08024054
 800af00:	08024064 	.word	0x08024064
 800af04:	08024070 	.word	0x08024070
 800af08:	0802091c 	.word	0x0802091c
 800af0c:	08020dc8 	.word	0x08020dc8
 800af10:	08024080 	.word	0x08024080
 800af14:	0802408c 	.word	0x0802408c
 800af18:	0802409c 	.word	0x0802409c
 800af1c:	08020a14 	.word	0x08020a14
 800af20:	080208ac 	.word	0x080208ac
 800af24:	080240b0 	.word	0x080240b0
 800af28:	080240c0 	.word	0x080240c0
 800af2c:	080240d0 	.word	0x080240d0
 800af30:	080240e4 	.word	0x080240e4
 800af34:	080240f8 	.word	0x080240f8
 800af38:	08024104 	.word	0x08024104
 800af3c:	080208a0 	.word	0x080208a0
 800af40:	08020874 	.word	0x08020874
 800af44:	08024114 	.word	0x08024114
 800af48:	0802411c 	.word	0x0802411c
 800af4c:	0802412c 	.word	0x0802412c
 800af50:	08020820 	.word	0x08020820
 800af54:	08024140 	.word	0x08024140
 800af58:	08024150 	.word	0x08024150
 800af5c:	0802415c 	.word	0x0802415c
 800af60:	08020928 	.word	0x08020928
 800af64:	0802416c 	.word	0x0802416c
 800af68:	0802417c 	.word	0x0802417c
 800af6c:	0802418c 	.word	0x0802418c
 800af70:	080208f0 	.word	0x080208f0
		case 368 :
			strcpy(p->name,"IN THE PINES");
 800af74:	687b      	ldr	r3, [r7, #4]
 800af76:	337c      	adds	r3, #124	; 0x7c
 800af78:	4ac3      	ldr	r2, [pc, #780]	; (800b288 <createProblem+0xa3e0>)
 800af7a:	461c      	mov	r4, r3
 800af7c:	4613      	mov	r3, r2
 800af7e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800af80:	6020      	str	r0, [r4, #0]
 800af82:	6061      	str	r1, [r4, #4]
 800af84:	60a2      	str	r2, [r4, #8]
 800af86:	781b      	ldrb	r3, [r3, #0]
 800af88:	7323      	strb	r3, [r4, #12]
			p->moveSize = 8;
 800af8a:	687b      	ldr	r3, [r7, #4]
 800af8c:	2208      	movs	r2, #8
 800af8e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,I,H,K,G,G,D");
 800af90:	687b      	ldr	r3, [r7, #4]
 800af92:	3340      	adds	r3, #64	; 0x40
 800af94:	4abd      	ldr	r2, [pc, #756]	; (800b28c <createProblem+0xa3e4>)
 800af96:	461c      	mov	r4, r3
 800af98:	4615      	mov	r5, r2
 800af9a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800af9c:	6020      	str	r0, [r4, #0]
 800af9e:	6061      	str	r1, [r4, #4]
 800afa0:	60a2      	str	r2, [r4, #8]
 800afa2:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,10,12,14,15,17,18");
 800afa4:	687b      	ldr	r3, [r7, #4]
 800afa6:	3304      	adds	r3, #4
 800afa8:	4ab9      	ldr	r2, [pc, #740]	; (800b290 <createProblem+0xa3e8>)
 800afaa:	461d      	mov	r5, r3
 800afac:	4614      	mov	r4, r2
 800afae:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800afb0:	6028      	str	r0, [r5, #0]
 800afb2:	6069      	str	r1, [r5, #4]
 800afb4:	60aa      	str	r2, [r5, #8]
 800afb6:	60eb      	str	r3, [r5, #12]
 800afb8:	6820      	ldr	r0, [r4, #0]
 800afba:	6128      	str	r0, [r5, #16]
 800afbc:	88a3      	ldrh	r3, [r4, #4]
 800afbe:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 800afc0:	687b      	ldr	r3, [r7, #4]
 800afc2:	33d8      	adds	r3, #216	; 0xd8
 800afc4:	4ab3      	ldr	r2, [pc, #716]	; (800b294 <createProblem+0xa3ec>)
 800afc6:	461c      	mov	r4, r3
 800afc8:	4615      	mov	r5, r2
 800afca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800afcc:	6020      	str	r0, [r4, #0]
 800afce:	6061      	str	r1, [r4, #4]
 800afd0:	60a2      	str	r2, [r4, #8]
 800afd2:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800afd4:	687b      	ldr	r3, [r7, #4]
 800afd6:	33cc      	adds	r3, #204	; 0xcc
 800afd8:	4aaf      	ldr	r2, [pc, #700]	; (800b298 <createProblem+0xa3f0>)
 800afda:	6810      	ldr	r0, [r2, #0]
 800afdc:	6018      	str	r0, [r3, #0]
			break;
 800afde:	f00f bca9 	b.w	801a934 <createProblem+0x19a8c>
		case 369 :
			strcpy(p->name,"PUSSY DAVAILLE");
 800afe2:	687b      	ldr	r3, [r7, #4]
 800afe4:	337c      	adds	r3, #124	; 0x7c
 800afe6:	4aad      	ldr	r2, [pc, #692]	; (800b29c <createProblem+0xa3f4>)
 800afe8:	461c      	mov	r4, r3
 800afea:	4613      	mov	r3, r2
 800afec:	cb07      	ldmia	r3!, {r0, r1, r2}
 800afee:	6020      	str	r0, [r4, #0]
 800aff0:	6061      	str	r1, [r4, #4]
 800aff2:	60a2      	str	r2, [r4, #8]
 800aff4:	881a      	ldrh	r2, [r3, #0]
 800aff6:	789b      	ldrb	r3, [r3, #2]
 800aff8:	81a2      	strh	r2, [r4, #12]
 800affa:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 7;
 800affc:	687b      	ldr	r3, [r7, #4]
 800affe:	2207      	movs	r2, #7
 800b000:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,C,C,G,E,B,D");
 800b002:	687b      	ldr	r3, [r7, #4]
 800b004:	3340      	adds	r3, #64	; 0x40
 800b006:	4aa6      	ldr	r2, [pc, #664]	; (800b2a0 <createProblem+0xa3f8>)
 800b008:	461c      	mov	r4, r3
 800b00a:	4613      	mov	r3, r2
 800b00c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b00e:	6020      	str	r0, [r4, #0]
 800b010:	6061      	str	r1, [r4, #4]
 800b012:	60a2      	str	r2, [r4, #8]
 800b014:	881b      	ldrh	r3, [r3, #0]
 800b016:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,8,9,12,15,18");
 800b018:	687b      	ldr	r3, [r7, #4]
 800b01a:	3304      	adds	r3, #4
 800b01c:	4aa1      	ldr	r2, [pc, #644]	; (800b2a4 <createProblem+0xa3fc>)
 800b01e:	461d      	mov	r5, r3
 800b020:	4614      	mov	r4, r2
 800b022:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b024:	6028      	str	r0, [r5, #0]
 800b026:	6069      	str	r1, [r5, #4]
 800b028:	60aa      	str	r2, [r5, #8]
 800b02a:	60eb      	str	r3, [r5, #12]
 800b02c:	7823      	ldrb	r3, [r4, #0]
 800b02e:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800b030:	687b      	ldr	r3, [r7, #4]
 800b032:	33d8      	adds	r3, #216	; 0xd8
 800b034:	4a9c      	ldr	r2, [pc, #624]	; (800b2a8 <createProblem+0xa400>)
 800b036:	461c      	mov	r4, r3
 800b038:	4613      	mov	r3, r2
 800b03a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b03c:	6020      	str	r0, [r4, #0]
 800b03e:	6061      	str	r1, [r4, #4]
 800b040:	60a2      	str	r2, [r4, #8]
 800b042:	881b      	ldrh	r3, [r3, #0]
 800b044:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 800b046:	687b      	ldr	r3, [r7, #4]
 800b048:	33cc      	adds	r3, #204	; 0xcc
 800b04a:	4a98      	ldr	r2, [pc, #608]	; (800b2ac <createProblem+0xa404>)
 800b04c:	8811      	ldrh	r1, [r2, #0]
 800b04e:	7892      	ldrb	r2, [r2, #2]
 800b050:	8019      	strh	r1, [r3, #0]
 800b052:	709a      	strb	r2, [r3, #2]
			break;
 800b054:	f00f bc6e 	b.w	801a934 <createProblem+0x19a8c>
		case 37 :
			strcpy(p->name,"GOOD TIMES");
 800b058:	687b      	ldr	r3, [r7, #4]
 800b05a:	337c      	adds	r3, #124	; 0x7c
 800b05c:	4994      	ldr	r1, [pc, #592]	; (800b2b0 <createProblem+0xa408>)
 800b05e:	461a      	mov	r2, r3
 800b060:	460b      	mov	r3, r1
 800b062:	cb03      	ldmia	r3!, {r0, r1}
 800b064:	6010      	str	r0, [r2, #0]
 800b066:	6051      	str	r1, [r2, #4]
 800b068:	8819      	ldrh	r1, [r3, #0]
 800b06a:	789b      	ldrb	r3, [r3, #2]
 800b06c:	8111      	strh	r1, [r2, #8]
 800b06e:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 800b070:	687b      	ldr	r3, [r7, #4]
 800b072:	2207      	movs	r2, #7
 800b074:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,E,F,C,D,A");
 800b076:	687b      	ldr	r3, [r7, #4]
 800b078:	3340      	adds	r3, #64	; 0x40
 800b07a:	4a8e      	ldr	r2, [pc, #568]	; (800b2b4 <createProblem+0xa40c>)
 800b07c:	461c      	mov	r4, r3
 800b07e:	4613      	mov	r3, r2
 800b080:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b082:	6020      	str	r0, [r4, #0]
 800b084:	6061      	str	r1, [r4, #4]
 800b086:	60a2      	str	r2, [r4, #8]
 800b088:	881b      	ldrh	r3, [r3, #0]
 800b08a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,5,8,11,13,15,18");
 800b08c:	687b      	ldr	r3, [r7, #4]
 800b08e:	3304      	adds	r3, #4
 800b090:	4a89      	ldr	r2, [pc, #548]	; (800b2b8 <createProblem+0xa410>)
 800b092:	461d      	mov	r5, r3
 800b094:	4614      	mov	r4, r2
 800b096:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b098:	6028      	str	r0, [r5, #0]
 800b09a:	6069      	str	r1, [r5, #4]
 800b09c:	60aa      	str	r2, [r5, #8]
 800b09e:	60eb      	str	r3, [r5, #12]
 800b0a0:	8823      	ldrh	r3, [r4, #0]
 800b0a2:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800b0a4:	687b      	ldr	r3, [r7, #4]
 800b0a6:	33d8      	adds	r3, #216	; 0xd8
 800b0a8:	4a7f      	ldr	r2, [pc, #508]	; (800b2a8 <createProblem+0xa400>)
 800b0aa:	461c      	mov	r4, r3
 800b0ac:	4613      	mov	r3, r2
 800b0ae:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b0b0:	6020      	str	r0, [r4, #0]
 800b0b2:	6061      	str	r1, [r4, #4]
 800b0b4:	60a2      	str	r2, [r4, #8]
 800b0b6:	881b      	ldrh	r3, [r3, #0]
 800b0b8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800b0ba:	687b      	ldr	r3, [r7, #4]
 800b0bc:	33cc      	adds	r3, #204	; 0xcc
 800b0be:	4a76      	ldr	r2, [pc, #472]	; (800b298 <createProblem+0xa3f0>)
 800b0c0:	6810      	ldr	r0, [r2, #0]
 800b0c2:	6018      	str	r0, [r3, #0]
			break;
 800b0c4:	f00f bc36 	b.w	801a934 <createProblem+0x19a8c>
		case 370 :
			strcpy(p->name,"THE POWER OF 9");
 800b0c8:	687b      	ldr	r3, [r7, #4]
 800b0ca:	337c      	adds	r3, #124	; 0x7c
 800b0cc:	4a7b      	ldr	r2, [pc, #492]	; (800b2bc <createProblem+0xa414>)
 800b0ce:	461c      	mov	r4, r3
 800b0d0:	4613      	mov	r3, r2
 800b0d2:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b0d4:	6020      	str	r0, [r4, #0]
 800b0d6:	6061      	str	r1, [r4, #4]
 800b0d8:	60a2      	str	r2, [r4, #8]
 800b0da:	881a      	ldrh	r2, [r3, #0]
 800b0dc:	789b      	ldrb	r3, [r3, #2]
 800b0de:	81a2      	strh	r2, [r4, #12]
 800b0e0:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 7;
 800b0e2:	687b      	ldr	r3, [r7, #4]
 800b0e4:	2207      	movs	r2, #7
 800b0e6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,J,H,E,E,E,I");
 800b0e8:	687b      	ldr	r3, [r7, #4]
 800b0ea:	3340      	adds	r3, #64	; 0x40
 800b0ec:	4a74      	ldr	r2, [pc, #464]	; (800b2c0 <createProblem+0xa418>)
 800b0ee:	461c      	mov	r4, r3
 800b0f0:	4613      	mov	r3, r2
 800b0f2:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b0f4:	6020      	str	r0, [r4, #0]
 800b0f6:	6061      	str	r1, [r4, #4]
 800b0f8:	60a2      	str	r2, [r4, #8]
 800b0fa:	881b      	ldrh	r3, [r3, #0]
 800b0fc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,8,8,12,16,18");
 800b0fe:	687b      	ldr	r3, [r7, #4]
 800b100:	3304      	adds	r3, #4
 800b102:	4a70      	ldr	r2, [pc, #448]	; (800b2c4 <createProblem+0xa41c>)
 800b104:	461d      	mov	r5, r3
 800b106:	4614      	mov	r4, r2
 800b108:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b10a:	6028      	str	r0, [r5, #0]
 800b10c:	6069      	str	r1, [r5, #4]
 800b10e:	60aa      	str	r2, [r5, #8]
 800b110:	60eb      	str	r3, [r5, #12]
 800b112:	7823      	ldrb	r3, [r4, #0]
 800b114:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800b116:	687b      	ldr	r3, [r7, #4]
 800b118:	33d8      	adds	r3, #216	; 0xd8
 800b11a:	4a63      	ldr	r2, [pc, #396]	; (800b2a8 <createProblem+0xa400>)
 800b11c:	461c      	mov	r4, r3
 800b11e:	4613      	mov	r3, r2
 800b120:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b122:	6020      	str	r0, [r4, #0]
 800b124:	6061      	str	r1, [r4, #4]
 800b126:	60a2      	str	r2, [r4, #8]
 800b128:	881b      	ldrh	r3, [r3, #0]
 800b12a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800b12c:	687b      	ldr	r3, [r7, #4]
 800b12e:	33cc      	adds	r3, #204	; 0xcc
 800b130:	4a59      	ldr	r2, [pc, #356]	; (800b298 <createProblem+0xa3f0>)
 800b132:	6810      	ldr	r0, [r2, #0]
 800b134:	6018      	str	r0, [r3, #0]
			break;
 800b136:	f00f bbfd 	b.w	801a934 <createProblem+0x19a8c>
		case 371 :
			strcpy(p->name,"LITTLEFINGER");
 800b13a:	687b      	ldr	r3, [r7, #4]
 800b13c:	337c      	adds	r3, #124	; 0x7c
 800b13e:	4a62      	ldr	r2, [pc, #392]	; (800b2c8 <createProblem+0xa420>)
 800b140:	461c      	mov	r4, r3
 800b142:	4613      	mov	r3, r2
 800b144:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b146:	6020      	str	r0, [r4, #0]
 800b148:	6061      	str	r1, [r4, #4]
 800b14a:	60a2      	str	r2, [r4, #8]
 800b14c:	781b      	ldrb	r3, [r3, #0]
 800b14e:	7323      	strb	r3, [r4, #12]
			p->moveSize = 5;
 800b150:	687b      	ldr	r3, [r7, #4]
 800b152:	2205      	movs	r2, #5
 800b154:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,H,I");
 800b156:	687b      	ldr	r3, [r7, #4]
 800b158:	3340      	adds	r3, #64	; 0x40
 800b15a:	495c      	ldr	r1, [pc, #368]	; (800b2cc <createProblem+0xa424>)
 800b15c:	461a      	mov	r2, r3
 800b15e:	460b      	mov	r3, r1
 800b160:	cb03      	ldmia	r3!, {r0, r1}
 800b162:	6010      	str	r0, [r2, #0]
 800b164:	6051      	str	r1, [r2, #4]
 800b166:	881b      	ldrh	r3, [r3, #0]
 800b168:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,13,16,18");
 800b16a:	687b      	ldr	r3, [r7, #4]
 800b16c:	3304      	adds	r3, #4
 800b16e:	4a58      	ldr	r2, [pc, #352]	; (800b2d0 <createProblem+0xa428>)
 800b170:	461c      	mov	r4, r3
 800b172:	4613      	mov	r3, r2
 800b174:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b176:	6020      	str	r0, [r4, #0]
 800b178:	6061      	str	r1, [r4, #4]
 800b17a:	60a2      	str	r2, [r4, #8]
 800b17c:	781b      	ldrb	r3, [r3, #0]
 800b17e:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800b180:	687b      	ldr	r3, [r7, #4]
 800b182:	33d8      	adds	r3, #216	; 0xd8
 800b184:	4953      	ldr	r1, [pc, #332]	; (800b2d4 <createProblem+0xa42c>)
 800b186:	461a      	mov	r2, r3
 800b188:	460b      	mov	r3, r1
 800b18a:	cb03      	ldmia	r3!, {r0, r1}
 800b18c:	6010      	str	r0, [r2, #0]
 800b18e:	6051      	str	r1, [r2, #4]
 800b190:	881b      	ldrh	r3, [r3, #0]
 800b192:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C");
 800b194:	687b      	ldr	r3, [r7, #4]
 800b196:	33cc      	adds	r3, #204	; 0xcc
 800b198:	4a44      	ldr	r2, [pc, #272]	; (800b2ac <createProblem+0xa404>)
 800b19a:	8811      	ldrh	r1, [r2, #0]
 800b19c:	7892      	ldrb	r2, [r2, #2]
 800b19e:	8019      	strh	r1, [r3, #0]
 800b1a0:	709a      	strb	r2, [r3, #2]
			break;
 800b1a2:	f00f bbc7 	b.w	801a934 <createProblem+0x19a8c>
		case 372 :
			strcpy(p->name,"BIOGRAPHIE");
 800b1a6:	687b      	ldr	r3, [r7, #4]
 800b1a8:	337c      	adds	r3, #124	; 0x7c
 800b1aa:	494b      	ldr	r1, [pc, #300]	; (800b2d8 <createProblem+0xa430>)
 800b1ac:	461a      	mov	r2, r3
 800b1ae:	460b      	mov	r3, r1
 800b1b0:	cb03      	ldmia	r3!, {r0, r1}
 800b1b2:	6010      	str	r0, [r2, #0]
 800b1b4:	6051      	str	r1, [r2, #4]
 800b1b6:	8819      	ldrh	r1, [r3, #0]
 800b1b8:	789b      	ldrb	r3, [r3, #2]
 800b1ba:	8111      	strh	r1, [r2, #8]
 800b1bc:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 800b1be:	687b      	ldr	r3, [r7, #4]
 800b1c0:	2207      	movs	r2, #7
 800b1c2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,K,H,H,E,D");
 800b1c4:	687b      	ldr	r3, [r7, #4]
 800b1c6:	3340      	adds	r3, #64	; 0x40
 800b1c8:	4a44      	ldr	r2, [pc, #272]	; (800b2dc <createProblem+0xa434>)
 800b1ca:	461c      	mov	r4, r3
 800b1cc:	4613      	mov	r3, r2
 800b1ce:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b1d0:	6020      	str	r0, [r4, #0]
 800b1d2:	6061      	str	r1, [r4, #4]
 800b1d4:	60a2      	str	r2, [r4, #8]
 800b1d6:	881b      	ldrh	r3, [r3, #0]
 800b1d8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,9,12,16,16,18");
 800b1da:	687b      	ldr	r3, [r7, #4]
 800b1dc:	3304      	adds	r3, #4
 800b1de:	4a40      	ldr	r2, [pc, #256]	; (800b2e0 <createProblem+0xa438>)
 800b1e0:	461d      	mov	r5, r3
 800b1e2:	4614      	mov	r4, r2
 800b1e4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b1e6:	6028      	str	r0, [r5, #0]
 800b1e8:	6069      	str	r1, [r5, #4]
 800b1ea:	60aa      	str	r2, [r5, #8]
 800b1ec:	60eb      	str	r3, [r5, #12]
 800b1ee:	8823      	ldrh	r3, [r4, #0]
 800b1f0:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800b1f2:	687b      	ldr	r3, [r7, #4]
 800b1f4:	33d8      	adds	r3, #216	; 0xd8
 800b1f6:	4a2c      	ldr	r2, [pc, #176]	; (800b2a8 <createProblem+0xa400>)
 800b1f8:	461c      	mov	r4, r3
 800b1fa:	4613      	mov	r3, r2
 800b1fc:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b1fe:	6020      	str	r0, [r4, #0]
 800b200:	6061      	str	r1, [r4, #4]
 800b202:	60a2      	str	r2, [r4, #8]
 800b204:	881b      	ldrh	r3, [r3, #0]
 800b206:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 800b208:	687b      	ldr	r3, [r7, #4]
 800b20a:	33cc      	adds	r3, #204	; 0xcc
 800b20c:	4a35      	ldr	r2, [pc, #212]	; (800b2e4 <createProblem+0xa43c>)
 800b20e:	8811      	ldrh	r1, [r2, #0]
 800b210:	7892      	ldrb	r2, [r2, #2]
 800b212:	8019      	strh	r1, [r3, #0]
 800b214:	709a      	strb	r2, [r3, #2]
			break;
 800b216:	f00f bb8d 	b.w	801a934 <createProblem+0x19a8c>
		case 373 :
			strcpy(p->name,"CORNALBA");
 800b21a:	687b      	ldr	r3, [r7, #4]
 800b21c:	337c      	adds	r3, #124	; 0x7c
 800b21e:	4932      	ldr	r1, [pc, #200]	; (800b2e8 <createProblem+0xa440>)
 800b220:	461a      	mov	r2, r3
 800b222:	460b      	mov	r3, r1
 800b224:	cb03      	ldmia	r3!, {r0, r1}
 800b226:	6010      	str	r0, [r2, #0]
 800b228:	6051      	str	r1, [r2, #4]
 800b22a:	781b      	ldrb	r3, [r3, #0]
 800b22c:	7213      	strb	r3, [r2, #8]
			p->moveSize = 7;
 800b22e:	687b      	ldr	r3, [r7, #4]
 800b230:	2207      	movs	r2, #7
 800b232:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,H,H,J,K,I");
 800b234:	687b      	ldr	r3, [r7, #4]
 800b236:	3340      	adds	r3, #64	; 0x40
 800b238:	4a2c      	ldr	r2, [pc, #176]	; (800b2ec <createProblem+0xa444>)
 800b23a:	461c      	mov	r4, r3
 800b23c:	4613      	mov	r3, r2
 800b23e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b240:	6020      	str	r0, [r4, #0]
 800b242:	6061      	str	r1, [r4, #4]
 800b244:	60a2      	str	r2, [r4, #8]
 800b246:	881b      	ldrh	r3, [r3, #0]
 800b248:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,12,12,16,18");
 800b24a:	687b      	ldr	r3, [r7, #4]
 800b24c:	3304      	adds	r3, #4
 800b24e:	4a28      	ldr	r2, [pc, #160]	; (800b2f0 <createProblem+0xa448>)
 800b250:	461d      	mov	r5, r3
 800b252:	4614      	mov	r4, r2
 800b254:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b256:	6028      	str	r0, [r5, #0]
 800b258:	6069      	str	r1, [r5, #4]
 800b25a:	60aa      	str	r2, [r5, #8]
 800b25c:	60eb      	str	r3, [r5, #12]
 800b25e:	8823      	ldrh	r3, [r4, #0]
 800b260:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800b262:	687b      	ldr	r3, [r7, #4]
 800b264:	33d8      	adds	r3, #216	; 0xd8
 800b266:	4a10      	ldr	r2, [pc, #64]	; (800b2a8 <createProblem+0xa400>)
 800b268:	461c      	mov	r4, r3
 800b26a:	4613      	mov	r3, r2
 800b26c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b26e:	6020      	str	r0, [r4, #0]
 800b270:	6061      	str	r1, [r4, #4]
 800b272:	60a2      	str	r2, [r4, #8]
 800b274:	881b      	ldrh	r3, [r3, #0]
 800b276:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 800b278:	687b      	ldr	r3, [r7, #4]
 800b27a:	33cc      	adds	r3, #204	; 0xcc
 800b27c:	4a1d      	ldr	r2, [pc, #116]	; (800b2f4 <createProblem+0xa44c>)
 800b27e:	6810      	ldr	r0, [r2, #0]
 800b280:	6018      	str	r0, [r3, #0]
			break;
 800b282:	f00f bb57 	b.w	801a934 <createProblem+0x19a8c>
 800b286:	bf00      	nop
 800b288:	080241a0 	.word	0x080241a0
 800b28c:	080241b0 	.word	0x080241b0
 800b290:	080241c0 	.word	0x080241c0
 800b294:	080209d8 	.word	0x080209d8
 800b298:	08020830 	.word	0x08020830
 800b29c:	080241d8 	.word	0x080241d8
 800b2a0:	080241e8 	.word	0x080241e8
 800b2a4:	080241f8 	.word	0x080241f8
 800b2a8:	08020820 	.word	0x08020820
 800b2ac:	080208f0 	.word	0x080208f0
 800b2b0:	0802420c 	.word	0x0802420c
 800b2b4:	08024218 	.word	0x08024218
 800b2b8:	08024228 	.word	0x08024228
 800b2bc:	0802423c 	.word	0x0802423c
 800b2c0:	0802424c 	.word	0x0802424c
 800b2c4:	0802425c 	.word	0x0802425c
 800b2c8:	08024270 	.word	0x08024270
 800b2cc:	08024280 	.word	0x08024280
 800b2d0:	0802428c 	.word	0x0802428c
 800b2d4:	080208a0 	.word	0x080208a0
 800b2d8:	0802429c 	.word	0x0802429c
 800b2dc:	080242a8 	.word	0x080242a8
 800b2e0:	080242b8 	.word	0x080242b8
 800b2e4:	08020874 	.word	0x08020874
 800b2e8:	080242cc 	.word	0x080242cc
 800b2ec:	080242d8 	.word	0x080242d8
 800b2f0:	080242e8 	.word	0x080242e8
 800b2f4:	080209a4 	.word	0x080209a4
		case 374 :
			strcpy(p->name,"OMBRA");
 800b2f8:	687b      	ldr	r3, [r7, #4]
 800b2fa:	337c      	adds	r3, #124	; 0x7c
 800b2fc:	4ab4      	ldr	r2, [pc, #720]	; (800b5d0 <createProblem+0xa728>)
 800b2fe:	6810      	ldr	r0, [r2, #0]
 800b300:	6018      	str	r0, [r3, #0]
 800b302:	8892      	ldrh	r2, [r2, #4]
 800b304:	809a      	strh	r2, [r3, #4]
			p->moveSize = 7;
 800b306:	687b      	ldr	r3, [r7, #4]
 800b308:	2207      	movs	r2, #7
 800b30a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,F,E,G,D");
 800b30c:	687b      	ldr	r3, [r7, #4]
 800b30e:	3340      	adds	r3, #64	; 0x40
 800b310:	4ab0      	ldr	r2, [pc, #704]	; (800b5d4 <createProblem+0xa72c>)
 800b312:	461c      	mov	r4, r3
 800b314:	4613      	mov	r3, r2
 800b316:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b318:	6020      	str	r0, [r4, #0]
 800b31a:	6061      	str	r1, [r4, #4]
 800b31c:	60a2      	str	r2, [r4, #8]
 800b31e:	881b      	ldrh	r3, [r3, #0]
 800b320:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,8,11,14,17,18");
 800b322:	687b      	ldr	r3, [r7, #4]
 800b324:	3304      	adds	r3, #4
 800b326:	4aac      	ldr	r2, [pc, #688]	; (800b5d8 <createProblem+0xa730>)
 800b328:	461d      	mov	r5, r3
 800b32a:	4614      	mov	r4, r2
 800b32c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b32e:	6028      	str	r0, [r5, #0]
 800b330:	6069      	str	r1, [r5, #4]
 800b332:	60aa      	str	r2, [r5, #8]
 800b334:	60eb      	str	r3, [r5, #12]
 800b336:	8823      	ldrh	r3, [r4, #0]
 800b338:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800b33a:	687b      	ldr	r3, [r7, #4]
 800b33c:	33d8      	adds	r3, #216	; 0xd8
 800b33e:	4aa7      	ldr	r2, [pc, #668]	; (800b5dc <createProblem+0xa734>)
 800b340:	461c      	mov	r4, r3
 800b342:	4613      	mov	r3, r2
 800b344:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b346:	6020      	str	r0, [r4, #0]
 800b348:	6061      	str	r1, [r4, #4]
 800b34a:	60a2      	str	r2, [r4, #8]
 800b34c:	881b      	ldrh	r3, [r3, #0]
 800b34e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 800b350:	687b      	ldr	r3, [r7, #4]
 800b352:	33cc      	adds	r3, #204	; 0xcc
 800b354:	4aa2      	ldr	r2, [pc, #648]	; (800b5e0 <createProblem+0xa738>)
 800b356:	6810      	ldr	r0, [r2, #0]
 800b358:	6018      	str	r0, [r3, #0]
			break;
 800b35a:	f00f baeb 	b.w	801a934 <createProblem+0x19a8c>
		case 375 :
			strcpy(p->name,"COBRA REALE");
 800b35e:	687b      	ldr	r3, [r7, #4]
 800b360:	337c      	adds	r3, #124	; 0x7c
 800b362:	4aa0      	ldr	r2, [pc, #640]	; (800b5e4 <createProblem+0xa73c>)
 800b364:	461c      	mov	r4, r3
 800b366:	4613      	mov	r3, r2
 800b368:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b36a:	6020      	str	r0, [r4, #0]
 800b36c:	6061      	str	r1, [r4, #4]
 800b36e:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 800b370:	687b      	ldr	r3, [r7, #4]
 800b372:	2206      	movs	r2, #6
 800b374:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,B,E,A");
 800b376:	687b      	ldr	r3, [r7, #4]
 800b378:	3340      	adds	r3, #64	; 0x40
 800b37a:	4a9b      	ldr	r2, [pc, #620]	; (800b5e8 <createProblem+0xa740>)
 800b37c:	461c      	mov	r4, r3
 800b37e:	4613      	mov	r3, r2
 800b380:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b382:	6020      	str	r0, [r4, #0]
 800b384:	6061      	str	r1, [r4, #4]
 800b386:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,9,12,14,18");
 800b388:	687b      	ldr	r3, [r7, #4]
 800b38a:	3304      	adds	r3, #4
 800b38c:	4a97      	ldr	r2, [pc, #604]	; (800b5ec <createProblem+0xa744>)
 800b38e:	461c      	mov	r4, r3
 800b390:	4613      	mov	r3, r2
 800b392:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b394:	6020      	str	r0, [r4, #0]
 800b396:	6061      	str	r1, [r4, #4]
 800b398:	60a2      	str	r2, [r4, #8]
 800b39a:	881a      	ldrh	r2, [r3, #0]
 800b39c:	789b      	ldrb	r3, [r3, #2]
 800b39e:	81a2      	strh	r2, [r4, #12]
 800b3a0:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800b3a2:	687b      	ldr	r3, [r7, #4]
 800b3a4:	33d8      	adds	r3, #216	; 0xd8
 800b3a6:	4a92      	ldr	r2, [pc, #584]	; (800b5f0 <createProblem+0xa748>)
 800b3a8:	461c      	mov	r4, r3
 800b3aa:	4613      	mov	r3, r2
 800b3ac:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b3ae:	6020      	str	r0, [r4, #0]
 800b3b0:	6061      	str	r1, [r4, #4]
 800b3b2:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 800b3b4:	687b      	ldr	r3, [r7, #4]
 800b3b6:	33cc      	adds	r3, #204	; 0xcc
 800b3b8:	4a8e      	ldr	r2, [pc, #568]	; (800b5f4 <createProblem+0xa74c>)
 800b3ba:	6810      	ldr	r0, [r2, #0]
 800b3bc:	6018      	str	r0, [r3, #0]
			break;
 800b3be:	f00f bab9 	b.w	801a934 <createProblem+0x19a8c>
		case 376 :
			strcpy(p->name,"THE PINCH OF DEATH");
 800b3c2:	687b      	ldr	r3, [r7, #4]
 800b3c4:	337c      	adds	r3, #124	; 0x7c
 800b3c6:	4a8c      	ldr	r2, [pc, #560]	; (800b5f8 <createProblem+0xa750>)
 800b3c8:	461d      	mov	r5, r3
 800b3ca:	4614      	mov	r4, r2
 800b3cc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b3ce:	6028      	str	r0, [r5, #0]
 800b3d0:	6069      	str	r1, [r5, #4]
 800b3d2:	60aa      	str	r2, [r5, #8]
 800b3d4:	60eb      	str	r3, [r5, #12]
 800b3d6:	8823      	ldrh	r3, [r4, #0]
 800b3d8:	78a2      	ldrb	r2, [r4, #2]
 800b3da:	822b      	strh	r3, [r5, #16]
 800b3dc:	4613      	mov	r3, r2
 800b3de:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 6;
 800b3e0:	687b      	ldr	r3, [r7, #4]
 800b3e2:	2206      	movs	r2, #6
 800b3e4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,G,D,D,A");
 800b3e6:	687b      	ldr	r3, [r7, #4]
 800b3e8:	3340      	adds	r3, #64	; 0x40
 800b3ea:	4a84      	ldr	r2, [pc, #528]	; (800b5fc <createProblem+0xa754>)
 800b3ec:	461c      	mov	r4, r3
 800b3ee:	4613      	mov	r3, r2
 800b3f0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b3f2:	6020      	str	r0, [r4, #0]
 800b3f4:	6061      	str	r1, [r4, #4]
 800b3f6:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,7,10,11,15,18");
 800b3f8:	687b      	ldr	r3, [r7, #4]
 800b3fa:	3304      	adds	r3, #4
 800b3fc:	4a80      	ldr	r2, [pc, #512]	; (800b600 <createProblem+0xa758>)
 800b3fe:	461c      	mov	r4, r3
 800b400:	4615      	mov	r5, r2
 800b402:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b404:	6020      	str	r0, [r4, #0]
 800b406:	6061      	str	r1, [r4, #4]
 800b408:	60a2      	str	r2, [r4, #8]
 800b40a:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800b40c:	687b      	ldr	r3, [r7, #4]
 800b40e:	33d8      	adds	r3, #216	; 0xd8
 800b410:	4a7c      	ldr	r2, [pc, #496]	; (800b604 <createProblem+0xa75c>)
 800b412:	461c      	mov	r4, r3
 800b414:	4613      	mov	r3, r2
 800b416:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b418:	6020      	str	r0, [r4, #0]
 800b41a:	6061      	str	r1, [r4, #4]
 800b41c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 800b41e:	687b      	ldr	r3, [r7, #4]
 800b420:	33cc      	adds	r3, #204	; 0xcc
 800b422:	4a79      	ldr	r2, [pc, #484]	; (800b608 <createProblem+0xa760>)
 800b424:	8811      	ldrh	r1, [r2, #0]
 800b426:	7892      	ldrb	r2, [r2, #2]
 800b428:	8019      	strh	r1, [r3, #0]
 800b42a:	709a      	strb	r2, [r3, #2]
			break;
 800b42c:	f00f ba82 	b.w	801a934 <createProblem+0x19a8c>
		case 377 :
			strcpy(p->name,"THE FUNERAL (RIP PINCH)");
 800b430:	687b      	ldr	r3, [r7, #4]
 800b432:	337c      	adds	r3, #124	; 0x7c
 800b434:	4a75      	ldr	r2, [pc, #468]	; (800b60c <createProblem+0xa764>)
 800b436:	461d      	mov	r5, r3
 800b438:	4614      	mov	r4, r2
 800b43a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b43c:	6028      	str	r0, [r5, #0]
 800b43e:	6069      	str	r1, [r5, #4]
 800b440:	60aa      	str	r2, [r5, #8]
 800b442:	60eb      	str	r3, [r5, #12]
 800b444:	cc03      	ldmia	r4!, {r0, r1}
 800b446:	6128      	str	r0, [r5, #16]
 800b448:	6169      	str	r1, [r5, #20]
			p->moveSize = 6;
 800b44a:	687b      	ldr	r3, [r7, #4]
 800b44c:	2206      	movs	r2, #6
 800b44e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,G,D,G,I");
 800b450:	687b      	ldr	r3, [r7, #4]
 800b452:	3340      	adds	r3, #64	; 0x40
 800b454:	4a6e      	ldr	r2, [pc, #440]	; (800b610 <createProblem+0xa768>)
 800b456:	461c      	mov	r4, r3
 800b458:	4613      	mov	r3, r2
 800b45a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b45c:	6020      	str	r0, [r4, #0]
 800b45e:	6061      	str	r1, [r4, #4]
 800b460:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,7,10,11,15,18");
 800b462:	687b      	ldr	r3, [r7, #4]
 800b464:	3304      	adds	r3, #4
 800b466:	4a66      	ldr	r2, [pc, #408]	; (800b600 <createProblem+0xa758>)
 800b468:	461c      	mov	r4, r3
 800b46a:	4615      	mov	r5, r2
 800b46c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b46e:	6020      	str	r0, [r4, #0]
 800b470:	6061      	str	r1, [r4, #4]
 800b472:	60a2      	str	r2, [r4, #8]
 800b474:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800b476:	687b      	ldr	r3, [r7, #4]
 800b478:	33d8      	adds	r3, #216	; 0xd8
 800b47a:	4a62      	ldr	r2, [pc, #392]	; (800b604 <createProblem+0xa75c>)
 800b47c:	461c      	mov	r4, r3
 800b47e:	4613      	mov	r3, r2
 800b480:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b482:	6020      	str	r0, [r4, #0]
 800b484:	6061      	str	r1, [r4, #4]
 800b486:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 800b488:	687b      	ldr	r3, [r7, #4]
 800b48a:	33cc      	adds	r3, #204	; 0xcc
 800b48c:	4a54      	ldr	r2, [pc, #336]	; (800b5e0 <createProblem+0xa738>)
 800b48e:	6810      	ldr	r0, [r2, #0]
 800b490:	6018      	str	r0, [r3, #0]
			break;
 800b492:	f00f ba4f 	b.w	801a934 <createProblem+0x19a8c>
		case 378 :
			strcpy(p->name,"THE PROCESS");
 800b496:	687b      	ldr	r3, [r7, #4]
 800b498:	337c      	adds	r3, #124	; 0x7c
 800b49a:	4a5e      	ldr	r2, [pc, #376]	; (800b614 <createProblem+0xa76c>)
 800b49c:	461c      	mov	r4, r3
 800b49e:	4613      	mov	r3, r2
 800b4a0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b4a2:	6020      	str	r0, [r4, #0]
 800b4a4:	6061      	str	r1, [r4, #4]
 800b4a6:	60a2      	str	r2, [r4, #8]
			p->moveSize = 8;
 800b4a8:	687b      	ldr	r3, [r7, #4]
 800b4aa:	2208      	movs	r2, #8
 800b4ac:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,K,J,G,K,H,D");
 800b4ae:	687b      	ldr	r3, [r7, #4]
 800b4b0:	3340      	adds	r3, #64	; 0x40
 800b4b2:	4a59      	ldr	r2, [pc, #356]	; (800b618 <createProblem+0xa770>)
 800b4b4:	461c      	mov	r4, r3
 800b4b6:	4615      	mov	r5, r2
 800b4b8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b4ba:	6020      	str	r0, [r4, #0]
 800b4bc:	6061      	str	r1, [r4, #4]
 800b4be:	60a2      	str	r2, [r4, #8]
 800b4c0:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,13,17,16,16,18");
 800b4c2:	687b      	ldr	r3, [r7, #4]
 800b4c4:	3304      	adds	r3, #4
 800b4c6:	4a55      	ldr	r2, [pc, #340]	; (800b61c <createProblem+0xa774>)
 800b4c8:	461d      	mov	r5, r3
 800b4ca:	4614      	mov	r4, r2
 800b4cc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b4ce:	6028      	str	r0, [r5, #0]
 800b4d0:	6069      	str	r1, [r5, #4]
 800b4d2:	60aa      	str	r2, [r5, #8]
 800b4d4:	60eb      	str	r3, [r5, #12]
 800b4d6:	6820      	ldr	r0, [r4, #0]
 800b4d8:	6128      	str	r0, [r5, #16]
 800b4da:	7923      	ldrb	r3, [r4, #4]
 800b4dc:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800b4de:	687b      	ldr	r3, [r7, #4]
 800b4e0:	33d8      	adds	r3, #216	; 0xd8
 800b4e2:	4a4f      	ldr	r2, [pc, #316]	; (800b620 <createProblem+0xa778>)
 800b4e4:	461c      	mov	r4, r3
 800b4e6:	4615      	mov	r5, r2
 800b4e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b4ea:	6020      	str	r0, [r4, #0]
 800b4ec:	6061      	str	r1, [r4, #4]
 800b4ee:	60a2      	str	r2, [r4, #8]
 800b4f0:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 800b4f2:	687b      	ldr	r3, [r7, #4]
 800b4f4:	33cc      	adds	r3, #204	; 0xcc
 800b4f6:	4a3a      	ldr	r2, [pc, #232]	; (800b5e0 <createProblem+0xa738>)
 800b4f8:	6810      	ldr	r0, [r2, #0]
 800b4fa:	6018      	str	r0, [r3, #0]
			break;
 800b4fc:	f00f ba1a 	b.w	801a934 <createProblem+0x19a8c>
		case 379 :
			strcpy(p->name,"LAST MOMENT");
 800b500:	687b      	ldr	r3, [r7, #4]
 800b502:	337c      	adds	r3, #124	; 0x7c
 800b504:	4a47      	ldr	r2, [pc, #284]	; (800b624 <createProblem+0xa77c>)
 800b506:	461c      	mov	r4, r3
 800b508:	4613      	mov	r3, r2
 800b50a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b50c:	6020      	str	r0, [r4, #0]
 800b50e:	6061      	str	r1, [r4, #4]
 800b510:	60a2      	str	r2, [r4, #8]
			p->moveSize = 5;
 800b512:	687b      	ldr	r3, [r7, #4]
 800b514:	2205      	movs	r2, #5
 800b516:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,I,G,I");
 800b518:	687b      	ldr	r3, [r7, #4]
 800b51a:	3340      	adds	r3, #64	; 0x40
 800b51c:	4942      	ldr	r1, [pc, #264]	; (800b628 <createProblem+0xa780>)
 800b51e:	461a      	mov	r2, r3
 800b520:	460b      	mov	r3, r1
 800b522:	cb03      	ldmia	r3!, {r0, r1}
 800b524:	6010      	str	r0, [r2, #0]
 800b526:	6051      	str	r1, [r2, #4]
 800b528:	881b      	ldrh	r3, [r3, #0]
 800b52a:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,10,14,18");
 800b52c:	687b      	ldr	r3, [r7, #4]
 800b52e:	3304      	adds	r3, #4
 800b530:	4a3e      	ldr	r2, [pc, #248]	; (800b62c <createProblem+0xa784>)
 800b532:	461c      	mov	r4, r3
 800b534:	4613      	mov	r3, r2
 800b536:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b538:	6020      	str	r0, [r4, #0]
 800b53a:	6061      	str	r1, [r4, #4]
 800b53c:	60a2      	str	r2, [r4, #8]
 800b53e:	781b      	ldrb	r3, [r3, #0]
 800b540:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800b542:	687b      	ldr	r3, [r7, #4]
 800b544:	33d8      	adds	r3, #216	; 0xd8
 800b546:	493a      	ldr	r1, [pc, #232]	; (800b630 <createProblem+0xa788>)
 800b548:	461a      	mov	r2, r3
 800b54a:	460b      	mov	r3, r1
 800b54c:	cb03      	ldmia	r3!, {r0, r1}
 800b54e:	6010      	str	r0, [r2, #0]
 800b550:	6051      	str	r1, [r2, #4]
 800b552:	881b      	ldrh	r3, [r3, #0]
 800b554:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6B+");
 800b556:	687b      	ldr	r3, [r7, #4]
 800b558:	33cc      	adds	r3, #204	; 0xcc
 800b55a:	4a36      	ldr	r2, [pc, #216]	; (800b634 <createProblem+0xa78c>)
 800b55c:	6810      	ldr	r0, [r2, #0]
 800b55e:	6018      	str	r0, [r3, #0]
			break;
 800b560:	f00f b9e8 	b.w	801a934 <createProblem+0x19a8c>
		case 38 :
			strcpy(p->name,"DRAGONS DEN");
 800b564:	687b      	ldr	r3, [r7, #4]
 800b566:	337c      	adds	r3, #124	; 0x7c
 800b568:	4a33      	ldr	r2, [pc, #204]	; (800b638 <createProblem+0xa790>)
 800b56a:	461c      	mov	r4, r3
 800b56c:	4613      	mov	r3, r2
 800b56e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b570:	6020      	str	r0, [r4, #0]
 800b572:	6061      	str	r1, [r4, #4]
 800b574:	60a2      	str	r2, [r4, #8]
			p->moveSize = 7;
 800b576:	687b      	ldr	r3, [r7, #4]
 800b578:	2207      	movs	r2, #7
 800b57a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,K,H,J,G,I");
 800b57c:	687b      	ldr	r3, [r7, #4]
 800b57e:	3340      	adds	r3, #64	; 0x40
 800b580:	4a2e      	ldr	r2, [pc, #184]	; (800b63c <createProblem+0xa794>)
 800b582:	461c      	mov	r4, r3
 800b584:	4613      	mov	r3, r2
 800b586:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b588:	6020      	str	r0, [r4, #0]
 800b58a:	6061      	str	r1, [r4, #4]
 800b58c:	60a2      	str	r2, [r4, #8]
 800b58e:	881b      	ldrh	r3, [r3, #0]
 800b590:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,10,13,15,18");
 800b592:	687b      	ldr	r3, [r7, #4]
 800b594:	3304      	adds	r3, #4
 800b596:	4a2a      	ldr	r2, [pc, #168]	; (800b640 <createProblem+0xa798>)
 800b598:	461d      	mov	r5, r3
 800b59a:	4614      	mov	r4, r2
 800b59c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b59e:	6028      	str	r0, [r5, #0]
 800b5a0:	6069      	str	r1, [r5, #4]
 800b5a2:	60aa      	str	r2, [r5, #8]
 800b5a4:	60eb      	str	r3, [r5, #12]
 800b5a6:	8823      	ldrh	r3, [r4, #0]
 800b5a8:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800b5aa:	687b      	ldr	r3, [r7, #4]
 800b5ac:	33d8      	adds	r3, #216	; 0xd8
 800b5ae:	4a25      	ldr	r2, [pc, #148]	; (800b644 <createProblem+0xa79c>)
 800b5b0:	461c      	mov	r4, r3
 800b5b2:	4613      	mov	r3, r2
 800b5b4:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b5b6:	6020      	str	r0, [r4, #0]
 800b5b8:	6061      	str	r1, [r4, #4]
 800b5ba:	60a2      	str	r2, [r4, #8]
 800b5bc:	881b      	ldrh	r3, [r3, #0]
 800b5be:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800b5c0:	687b      	ldr	r3, [r7, #4]
 800b5c2:	33cc      	adds	r3, #204	; 0xcc
 800b5c4:	4a1b      	ldr	r2, [pc, #108]	; (800b634 <createProblem+0xa78c>)
 800b5c6:	6810      	ldr	r0, [r2, #0]
 800b5c8:	6018      	str	r0, [r3, #0]
			break;
 800b5ca:	f00f b9b3 	b.w	801a934 <createProblem+0x19a8c>
 800b5ce:	bf00      	nop
 800b5d0:	080242fc 	.word	0x080242fc
 800b5d4:	08024304 	.word	0x08024304
 800b5d8:	08024314 	.word	0x08024314
 800b5dc:	08020a14 	.word	0x08020a14
 800b5e0:	08020928 	.word	0x08020928
 800b5e4:	08024328 	.word	0x08024328
 800b5e8:	08024334 	.word	0x08024334
 800b5ec:	08024340 	.word	0x08024340
 800b5f0:	08020e90 	.word	0x08020e90
 800b5f4:	080209a4 	.word	0x080209a4
 800b5f8:	08024350 	.word	0x08024350
 800b5fc:	08024364 	.word	0x08024364
 800b600:	08024370 	.word	0x08024370
 800b604:	0802091c 	.word	0x0802091c
 800b608:	080208f0 	.word	0x080208f0
 800b60c:	08024380 	.word	0x08024380
 800b610:	08024398 	.word	0x08024398
 800b614:	080243a4 	.word	0x080243a4
 800b618:	080243b0 	.word	0x080243b0
 800b61c:	080243c0 	.word	0x080243c0
 800b620:	08020a4c 	.word	0x08020a4c
 800b624:	080243d8 	.word	0x080243d8
 800b628:	080243e4 	.word	0x080243e4
 800b62c:	080243f0 	.word	0x080243f0
 800b630:	080208a0 	.word	0x080208a0
 800b634:	08020830 	.word	0x08020830
 800b638:	08024400 	.word	0x08024400
 800b63c:	0802440c 	.word	0x0802440c
 800b640:	0802441c 	.word	0x0802441c
 800b644:	08020820 	.word	0x08020820
		case 380 :
			strcpy(p->name,"WITNESS THE FITNESS");
 800b648:	687b      	ldr	r3, [r7, #4]
 800b64a:	337c      	adds	r3, #124	; 0x7c
 800b64c:	4abc      	ldr	r2, [pc, #752]	; (800b940 <createProblem+0xaa98>)
 800b64e:	461d      	mov	r5, r3
 800b650:	4614      	mov	r4, r2
 800b652:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b654:	6028      	str	r0, [r5, #0]
 800b656:	6069      	str	r1, [r5, #4]
 800b658:	60aa      	str	r2, [r5, #8]
 800b65a:	60eb      	str	r3, [r5, #12]
 800b65c:	6820      	ldr	r0, [r4, #0]
 800b65e:	6128      	str	r0, [r5, #16]
			p->moveSize = 7;
 800b660:	687b      	ldr	r3, [r7, #4]
 800b662:	2207      	movs	r2, #7
 800b664:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,B,E,B,E,D");
 800b666:	687b      	ldr	r3, [r7, #4]
 800b668:	3340      	adds	r3, #64	; 0x40
 800b66a:	4ab6      	ldr	r2, [pc, #728]	; (800b944 <createProblem+0xaa9c>)
 800b66c:	461c      	mov	r4, r3
 800b66e:	4613      	mov	r3, r2
 800b670:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b672:	6020      	str	r0, [r4, #0]
 800b674:	6061      	str	r1, [r4, #4]
 800b676:	60a2      	str	r2, [r4, #8]
 800b678:	881b      	ldrh	r3, [r3, #0]
 800b67a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,10,12,15,6,18");
 800b67c:	687b      	ldr	r3, [r7, #4]
 800b67e:	3304      	adds	r3, #4
 800b680:	4ab1      	ldr	r2, [pc, #708]	; (800b948 <createProblem+0xaaa0>)
 800b682:	461d      	mov	r5, r3
 800b684:	4614      	mov	r4, r2
 800b686:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b688:	6028      	str	r0, [r5, #0]
 800b68a:	6069      	str	r1, [r5, #4]
 800b68c:	60aa      	str	r2, [r5, #8]
 800b68e:	60eb      	str	r3, [r5, #12]
 800b690:	8823      	ldrh	r3, [r4, #0]
 800b692:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800b694:	687b      	ldr	r3, [r7, #4]
 800b696:	33d8      	adds	r3, #216	; 0xd8
 800b698:	4aac      	ldr	r2, [pc, #688]	; (800b94c <createProblem+0xaaa4>)
 800b69a:	461c      	mov	r4, r3
 800b69c:	4613      	mov	r3, r2
 800b69e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b6a0:	6020      	str	r0, [r4, #0]
 800b6a2:	6061      	str	r1, [r4, #4]
 800b6a4:	60a2      	str	r2, [r4, #8]
 800b6a6:	881b      	ldrh	r3, [r3, #0]
 800b6a8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800b6aa:	687b      	ldr	r3, [r7, #4]
 800b6ac:	33cc      	adds	r3, #204	; 0xcc
 800b6ae:	4aa8      	ldr	r2, [pc, #672]	; (800b950 <createProblem+0xaaa8>)
 800b6b0:	6810      	ldr	r0, [r2, #0]
 800b6b2:	6018      	str	r0, [r3, #0]
			break;
 800b6b4:	f00f b93e 	b.w	801a934 <createProblem+0x19a8c>
		case 381 :
			strcpy(p->name,"VASIL VASIL");
 800b6b8:	687b      	ldr	r3, [r7, #4]
 800b6ba:	337c      	adds	r3, #124	; 0x7c
 800b6bc:	4aa5      	ldr	r2, [pc, #660]	; (800b954 <createProblem+0xaaac>)
 800b6be:	461c      	mov	r4, r3
 800b6c0:	4613      	mov	r3, r2
 800b6c2:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b6c4:	6020      	str	r0, [r4, #0]
 800b6c6:	6061      	str	r1, [r4, #4]
 800b6c8:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 800b6ca:	687b      	ldr	r3, [r7, #4]
 800b6cc:	2206      	movs	r2, #6
 800b6ce:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,E,J,H,I");
 800b6d0:	687b      	ldr	r3, [r7, #4]
 800b6d2:	3340      	adds	r3, #64	; 0x40
 800b6d4:	4aa0      	ldr	r2, [pc, #640]	; (800b958 <createProblem+0xaab0>)
 800b6d6:	461c      	mov	r4, r3
 800b6d8:	4613      	mov	r3, r2
 800b6da:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b6dc:	6020      	str	r0, [r4, #0]
 800b6de:	6061      	str	r1, [r4, #4]
 800b6e0:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,7,9,12,16,18");
 800b6e2:	687b      	ldr	r3, [r7, #4]
 800b6e4:	3304      	adds	r3, #4
 800b6e6:	4a9d      	ldr	r2, [pc, #628]	; (800b95c <createProblem+0xaab4>)
 800b6e8:	461c      	mov	r4, r3
 800b6ea:	4613      	mov	r3, r2
 800b6ec:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b6ee:	6020      	str	r0, [r4, #0]
 800b6f0:	6061      	str	r1, [r4, #4]
 800b6f2:	60a2      	str	r2, [r4, #8]
 800b6f4:	881a      	ldrh	r2, [r3, #0]
 800b6f6:	789b      	ldrb	r3, [r3, #2]
 800b6f8:	81a2      	strh	r2, [r4, #12]
 800b6fa:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800b6fc:	687b      	ldr	r3, [r7, #4]
 800b6fe:	33d8      	adds	r3, #216	; 0xd8
 800b700:	4a97      	ldr	r2, [pc, #604]	; (800b960 <createProblem+0xaab8>)
 800b702:	461c      	mov	r4, r3
 800b704:	4613      	mov	r3, r2
 800b706:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b708:	6020      	str	r0, [r4, #0]
 800b70a:	6061      	str	r1, [r4, #4]
 800b70c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B");
 800b70e:	687b      	ldr	r3, [r7, #4]
 800b710:	33cc      	adds	r3, #204	; 0xcc
 800b712:	4a94      	ldr	r2, [pc, #592]	; (800b964 <createProblem+0xaabc>)
 800b714:	8811      	ldrh	r1, [r2, #0]
 800b716:	7892      	ldrb	r2, [r2, #2]
 800b718:	8019      	strh	r1, [r3, #0]
 800b71a:	709a      	strb	r2, [r3, #2]
			break;
 800b71c:	f00f b90a 	b.w	801a934 <createProblem+0x19a8c>
		case 382 :
			strcpy(p->name,"THE GOLDEN GATE");
 800b720:	687b      	ldr	r3, [r7, #4]
 800b722:	337c      	adds	r3, #124	; 0x7c
 800b724:	4a90      	ldr	r2, [pc, #576]	; (800b968 <createProblem+0xaac0>)
 800b726:	461c      	mov	r4, r3
 800b728:	4615      	mov	r5, r2
 800b72a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800b72c:	6020      	str	r0, [r4, #0]
 800b72e:	6061      	str	r1, [r4, #4]
 800b730:	60a2      	str	r2, [r4, #8]
 800b732:	60e3      	str	r3, [r4, #12]
			p->moveSize = 6;
 800b734:	687b      	ldr	r3, [r7, #4]
 800b736:	2206      	movs	r2, #6
 800b738:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,C,E,B,D");
 800b73a:	687b      	ldr	r3, [r7, #4]
 800b73c:	3340      	adds	r3, #64	; 0x40
 800b73e:	4a8b      	ldr	r2, [pc, #556]	; (800b96c <createProblem+0xaac4>)
 800b740:	461c      	mov	r4, r3
 800b742:	4613      	mov	r3, r2
 800b744:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b746:	6020      	str	r0, [r4, #0]
 800b748:	6061      	str	r1, [r4, #4]
 800b74a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,8,12,15,18");
 800b74c:	687b      	ldr	r3, [r7, #4]
 800b74e:	3304      	adds	r3, #4
 800b750:	4a87      	ldr	r2, [pc, #540]	; (800b970 <createProblem+0xaac8>)
 800b752:	461c      	mov	r4, r3
 800b754:	4613      	mov	r3, r2
 800b756:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b758:	6020      	str	r0, [r4, #0]
 800b75a:	6061      	str	r1, [r4, #4]
 800b75c:	60a2      	str	r2, [r4, #8]
 800b75e:	881a      	ldrh	r2, [r3, #0]
 800b760:	789b      	ldrb	r3, [r3, #2]
 800b762:	81a2      	strh	r2, [r4, #12]
 800b764:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800b766:	687b      	ldr	r3, [r7, #4]
 800b768:	33d8      	adds	r3, #216	; 0xd8
 800b76a:	4a7d      	ldr	r2, [pc, #500]	; (800b960 <createProblem+0xaab8>)
 800b76c:	461c      	mov	r4, r3
 800b76e:	4613      	mov	r3, r2
 800b770:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b772:	6020      	str	r0, [r4, #0]
 800b774:	6061      	str	r1, [r4, #4]
 800b776:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 800b778:	687b      	ldr	r3, [r7, #4]
 800b77a:	33cc      	adds	r3, #204	; 0xcc
 800b77c:	4a74      	ldr	r2, [pc, #464]	; (800b950 <createProblem+0xaaa8>)
 800b77e:	6810      	ldr	r0, [r2, #0]
 800b780:	6018      	str	r0, [r3, #0]
			break;
 800b782:	f00f b8d7 	b.w	801a934 <createProblem+0x19a8c>
		case 383 :
			strcpy(p->name,"HOTEL SOPRAMONTE");
 800b786:	687b      	ldr	r3, [r7, #4]
 800b788:	337c      	adds	r3, #124	; 0x7c
 800b78a:	4a7a      	ldr	r2, [pc, #488]	; (800b974 <createProblem+0xaacc>)
 800b78c:	461d      	mov	r5, r3
 800b78e:	4614      	mov	r4, r2
 800b790:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b792:	6028      	str	r0, [r5, #0]
 800b794:	6069      	str	r1, [r5, #4]
 800b796:	60aa      	str	r2, [r5, #8]
 800b798:	60eb      	str	r3, [r5, #12]
 800b79a:	7823      	ldrb	r3, [r4, #0]
 800b79c:	742b      	strb	r3, [r5, #16]
			p->moveSize = 5;
 800b79e:	687b      	ldr	r3, [r7, #4]
 800b7a0:	2205      	movs	r2, #5
 800b7a2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,G,G,I");
 800b7a4:	687b      	ldr	r3, [r7, #4]
 800b7a6:	3340      	adds	r3, #64	; 0x40
 800b7a8:	4973      	ldr	r1, [pc, #460]	; (800b978 <createProblem+0xaad0>)
 800b7aa:	461a      	mov	r2, r3
 800b7ac:	460b      	mov	r3, r1
 800b7ae:	cb03      	ldmia	r3!, {r0, r1}
 800b7b0:	6010      	str	r0, [r2, #0]
 800b7b2:	6051      	str	r1, [r2, #4]
 800b7b4:	881b      	ldrh	r3, [r3, #0]
 800b7b6:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,10,15,18");
 800b7b8:	687b      	ldr	r3, [r7, #4]
 800b7ba:	3304      	adds	r3, #4
 800b7bc:	4a6f      	ldr	r2, [pc, #444]	; (800b97c <createProblem+0xaad4>)
 800b7be:	461c      	mov	r4, r3
 800b7c0:	4613      	mov	r3, r2
 800b7c2:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b7c4:	6020      	str	r0, [r4, #0]
 800b7c6:	6061      	str	r1, [r4, #4]
 800b7c8:	60a2      	str	r2, [r4, #8]
 800b7ca:	781b      	ldrb	r3, [r3, #0]
 800b7cc:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800b7ce:	687b      	ldr	r3, [r7, #4]
 800b7d0:	33d8      	adds	r3, #216	; 0xd8
 800b7d2:	496b      	ldr	r1, [pc, #428]	; (800b980 <createProblem+0xaad8>)
 800b7d4:	461a      	mov	r2, r3
 800b7d6:	460b      	mov	r3, r1
 800b7d8:	cb03      	ldmia	r3!, {r0, r1}
 800b7da:	6010      	str	r0, [r2, #0]
 800b7dc:	6051      	str	r1, [r2, #4]
 800b7de:	881b      	ldrh	r3, [r3, #0]
 800b7e0:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B");
 800b7e2:	687b      	ldr	r3, [r7, #4]
 800b7e4:	33cc      	adds	r3, #204	; 0xcc
 800b7e6:	4a5f      	ldr	r2, [pc, #380]	; (800b964 <createProblem+0xaabc>)
 800b7e8:	8811      	ldrh	r1, [r2, #0]
 800b7ea:	7892      	ldrb	r2, [r2, #2]
 800b7ec:	8019      	strh	r1, [r3, #0]
 800b7ee:	709a      	strb	r2, [r3, #2]
			break;
 800b7f0:	f00f b8a0 	b.w	801a934 <createProblem+0x19a8c>
		case 384 :
			strcpy(p->name,"CASSIN");
 800b7f4:	687b      	ldr	r3, [r7, #4]
 800b7f6:	337c      	adds	r3, #124	; 0x7c
 800b7f8:	4a62      	ldr	r2, [pc, #392]	; (800b984 <createProblem+0xaadc>)
 800b7fa:	6810      	ldr	r0, [r2, #0]
 800b7fc:	6018      	str	r0, [r3, #0]
 800b7fe:	8891      	ldrh	r1, [r2, #4]
 800b800:	7992      	ldrb	r2, [r2, #6]
 800b802:	8099      	strh	r1, [r3, #4]
 800b804:	719a      	strb	r2, [r3, #6]
			p->moveSize = 6;
 800b806:	687b      	ldr	r3, [r7, #4]
 800b808:	2206      	movs	r2, #6
 800b80a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,C,E,B,E,A");
 800b80c:	687b      	ldr	r3, [r7, #4]
 800b80e:	3340      	adds	r3, #64	; 0x40
 800b810:	4a5d      	ldr	r2, [pc, #372]	; (800b988 <createProblem+0xaae0>)
 800b812:	461c      	mov	r4, r3
 800b814:	4613      	mov	r3, r2
 800b816:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b818:	6020      	str	r0, [r4, #0]
 800b81a:	6061      	str	r1, [r4, #4]
 800b81c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,9,12,14,18");
 800b81e:	687b      	ldr	r3, [r7, #4]
 800b820:	3304      	adds	r3, #4
 800b822:	4a5a      	ldr	r2, [pc, #360]	; (800b98c <createProblem+0xaae4>)
 800b824:	461c      	mov	r4, r3
 800b826:	4613      	mov	r3, r2
 800b828:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b82a:	6020      	str	r0, [r4, #0]
 800b82c:	6061      	str	r1, [r4, #4]
 800b82e:	60a2      	str	r2, [r4, #8]
 800b830:	881a      	ldrh	r2, [r3, #0]
 800b832:	789b      	ldrb	r3, [r3, #2]
 800b834:	81a2      	strh	r2, [r4, #12]
 800b836:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800b838:	687b      	ldr	r3, [r7, #4]
 800b83a:	33d8      	adds	r3, #216	; 0xd8
 800b83c:	4a54      	ldr	r2, [pc, #336]	; (800b990 <createProblem+0xaae8>)
 800b83e:	461c      	mov	r4, r3
 800b840:	4613      	mov	r3, r2
 800b842:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b844:	6020      	str	r0, [r4, #0]
 800b846:	6061      	str	r1, [r4, #4]
 800b848:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 800b84a:	687b      	ldr	r3, [r7, #4]
 800b84c:	33cc      	adds	r3, #204	; 0xcc
 800b84e:	4a51      	ldr	r2, [pc, #324]	; (800b994 <createProblem+0xaaec>)
 800b850:	6810      	ldr	r0, [r2, #0]
 800b852:	6018      	str	r0, [r3, #0]
			break;
 800b854:	f00f b86e 	b.w	801a934 <createProblem+0x19a8c>
		case 385 :
			strcpy(p->name,"YOUR LAST PIECE OF CHALK");
 800b858:	687b      	ldr	r3, [r7, #4]
 800b85a:	337c      	adds	r3, #124	; 0x7c
 800b85c:	4a4e      	ldr	r2, [pc, #312]	; (800b998 <createProblem+0xaaf0>)
 800b85e:	461d      	mov	r5, r3
 800b860:	4614      	mov	r4, r2
 800b862:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b864:	6028      	str	r0, [r5, #0]
 800b866:	6069      	str	r1, [r5, #4]
 800b868:	60aa      	str	r2, [r5, #8]
 800b86a:	60eb      	str	r3, [r5, #12]
 800b86c:	cc03      	ldmia	r4!, {r0, r1}
 800b86e:	6128      	str	r0, [r5, #16]
 800b870:	6169      	str	r1, [r5, #20]
 800b872:	7823      	ldrb	r3, [r4, #0]
 800b874:	762b      	strb	r3, [r5, #24]
			p->moveSize = 7;
 800b876:	687b      	ldr	r3, [r7, #4]
 800b878:	2207      	movs	r2, #7
 800b87a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,K,I,F,I");
 800b87c:	687b      	ldr	r3, [r7, #4]
 800b87e:	3340      	adds	r3, #64	; 0x40
 800b880:	4a46      	ldr	r2, [pc, #280]	; (800b99c <createProblem+0xaaf4>)
 800b882:	461c      	mov	r4, r3
 800b884:	4613      	mov	r3, r2
 800b886:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b888:	6020      	str	r0, [r4, #0]
 800b88a:	6061      	str	r1, [r4, #4]
 800b88c:	60a2      	str	r2, [r4, #8]
 800b88e:	881b      	ldrh	r3, [r3, #0]
 800b890:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,12,9,14,11,18");
 800b892:	687b      	ldr	r3, [r7, #4]
 800b894:	3304      	adds	r3, #4
 800b896:	4a42      	ldr	r2, [pc, #264]	; (800b9a0 <createProblem+0xaaf8>)
 800b898:	461d      	mov	r5, r3
 800b89a:	4614      	mov	r4, r2
 800b89c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b89e:	6028      	str	r0, [r5, #0]
 800b8a0:	6069      	str	r1, [r5, #4]
 800b8a2:	60aa      	str	r2, [r5, #8]
 800b8a4:	60eb      	str	r3, [r5, #12]
 800b8a6:	8823      	ldrh	r3, [r4, #0]
 800b8a8:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800b8aa:	687b      	ldr	r3, [r7, #4]
 800b8ac:	33d8      	adds	r3, #216	; 0xd8
 800b8ae:	4a27      	ldr	r2, [pc, #156]	; (800b94c <createProblem+0xaaa4>)
 800b8b0:	461c      	mov	r4, r3
 800b8b2:	4613      	mov	r3, r2
 800b8b4:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b8b6:	6020      	str	r0, [r4, #0]
 800b8b8:	6061      	str	r1, [r4, #4]
 800b8ba:	60a2      	str	r2, [r4, #8]
 800b8bc:	881b      	ldrh	r3, [r3, #0]
 800b8be:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800b8c0:	687b      	ldr	r3, [r7, #4]
 800b8c2:	33cc      	adds	r3, #204	; 0xcc
 800b8c4:	4a22      	ldr	r2, [pc, #136]	; (800b950 <createProblem+0xaaa8>)
 800b8c6:	6810      	ldr	r0, [r2, #0]
 800b8c8:	6018      	str	r0, [r3, #0]
			break;
 800b8ca:	f00f b833 	b.w	801a934 <createProblem+0x19a8c>
		case 386 :
			strcpy(p->name,"THE 45 SECRETS");
 800b8ce:	687b      	ldr	r3, [r7, #4]
 800b8d0:	337c      	adds	r3, #124	; 0x7c
 800b8d2:	4a34      	ldr	r2, [pc, #208]	; (800b9a4 <createProblem+0xaafc>)
 800b8d4:	461c      	mov	r4, r3
 800b8d6:	4613      	mov	r3, r2
 800b8d8:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b8da:	6020      	str	r0, [r4, #0]
 800b8dc:	6061      	str	r1, [r4, #4]
 800b8de:	60a2      	str	r2, [r4, #8]
 800b8e0:	881a      	ldrh	r2, [r3, #0]
 800b8e2:	789b      	ldrb	r3, [r3, #2]
 800b8e4:	81a2      	strh	r2, [r4, #12]
 800b8e6:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 7;
 800b8e8:	687b      	ldr	r3, [r7, #4]
 800b8ea:	2207      	movs	r2, #7
 800b8ec:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,E,J,E,A,A");
 800b8ee:	687b      	ldr	r3, [r7, #4]
 800b8f0:	3340      	adds	r3, #64	; 0x40
 800b8f2:	4a2d      	ldr	r2, [pc, #180]	; (800b9a8 <createProblem+0xab00>)
 800b8f4:	461c      	mov	r4, r3
 800b8f6:	4613      	mov	r3, r2
 800b8f8:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b8fa:	6020      	str	r0, [r4, #0]
 800b8fc:	6061      	str	r1, [r4, #4]
 800b8fe:	60a2      	str	r2, [r4, #8]
 800b900:	881b      	ldrh	r3, [r3, #0]
 800b902:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,8,7,12,14,18");
 800b904:	687b      	ldr	r3, [r7, #4]
 800b906:	3304      	adds	r3, #4
 800b908:	4a28      	ldr	r2, [pc, #160]	; (800b9ac <createProblem+0xab04>)
 800b90a:	461d      	mov	r5, r3
 800b90c:	4614      	mov	r4, r2
 800b90e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800b910:	6028      	str	r0, [r5, #0]
 800b912:	6069      	str	r1, [r5, #4]
 800b914:	60aa      	str	r2, [r5, #8]
 800b916:	60eb      	str	r3, [r5, #12]
 800b918:	7823      	ldrb	r3, [r4, #0]
 800b91a:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800b91c:	687b      	ldr	r3, [r7, #4]
 800b91e:	33d8      	adds	r3, #216	; 0xd8
 800b920:	4a0a      	ldr	r2, [pc, #40]	; (800b94c <createProblem+0xaaa4>)
 800b922:	461c      	mov	r4, r3
 800b924:	4613      	mov	r3, r2
 800b926:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b928:	6020      	str	r0, [r4, #0]
 800b92a:	6061      	str	r1, [r4, #4]
 800b92c:	60a2      	str	r2, [r4, #8]
 800b92e:	881b      	ldrh	r3, [r3, #0]
 800b930:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800b932:	687b      	ldr	r3, [r7, #4]
 800b934:	33cc      	adds	r3, #204	; 0xcc
 800b936:	4a06      	ldr	r2, [pc, #24]	; (800b950 <createProblem+0xaaa8>)
 800b938:	6810      	ldr	r0, [r2, #0]
 800b93a:	6018      	str	r0, [r3, #0]
			break;
 800b93c:	f00e bffa 	b.w	801a934 <createProblem+0x19a8c>
 800b940:	08024430 	.word	0x08024430
 800b944:	08024444 	.word	0x08024444
 800b948:	08024454 	.word	0x08024454
 800b94c:	08020a14 	.word	0x08020a14
 800b950:	08020830 	.word	0x08020830
 800b954:	08024468 	.word	0x08024468
 800b958:	08024474 	.word	0x08024474
 800b95c:	08024480 	.word	0x08024480
 800b960:	0802091c 	.word	0x0802091c
 800b964:	080208ac 	.word	0x080208ac
 800b968:	08024490 	.word	0x08024490
 800b96c:	080244a0 	.word	0x080244a0
 800b970:	080244ac 	.word	0x080244ac
 800b974:	080244bc 	.word	0x080244bc
 800b978:	080244d0 	.word	0x080244d0
 800b97c:	080238d4 	.word	0x080238d4
 800b980:	080208a0 	.word	0x080208a0
 800b984:	080244dc 	.word	0x080244dc
 800b988:	080244e4 	.word	0x080244e4
 800b98c:	08024044 	.word	0x08024044
 800b990:	08020e90 	.word	0x08020e90
 800b994:	080209a4 	.word	0x080209a4
 800b998:	080244f0 	.word	0x080244f0
 800b99c:	0802450c 	.word	0x0802450c
 800b9a0:	0802451c 	.word	0x0802451c
 800b9a4:	08024530 	.word	0x08024530
 800b9a8:	08024540 	.word	0x08024540
 800b9ac:	08024550 	.word	0x08024550
		case 387 :
			strcpy(p->name,"CLASSY");
 800b9b0:	687b      	ldr	r3, [r7, #4]
 800b9b2:	337c      	adds	r3, #124	; 0x7c
 800b9b4:	4ab5      	ldr	r2, [pc, #724]	; (800bc8c <createProblem+0xade4>)
 800b9b6:	6810      	ldr	r0, [r2, #0]
 800b9b8:	6018      	str	r0, [r3, #0]
 800b9ba:	8891      	ldrh	r1, [r2, #4]
 800b9bc:	7992      	ldrb	r2, [r2, #6]
 800b9be:	8099      	strh	r1, [r3, #4]
 800b9c0:	719a      	strb	r2, [r3, #6]
			p->moveSize = 5;
 800b9c2:	687b      	ldr	r3, [r7, #4]
 800b9c4:	2205      	movs	r2, #5
 800b9c6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,F,C,D");
 800b9c8:	687b      	ldr	r3, [r7, #4]
 800b9ca:	3340      	adds	r3, #64	; 0x40
 800b9cc:	49b0      	ldr	r1, [pc, #704]	; (800bc90 <createProblem+0xade8>)
 800b9ce:	461a      	mov	r2, r3
 800b9d0:	460b      	mov	r3, r1
 800b9d2:	cb03      	ldmia	r3!, {r0, r1}
 800b9d4:	6010      	str	r0, [r2, #0]
 800b9d6:	6051      	str	r1, [r2, #4]
 800b9d8:	881b      	ldrh	r3, [r3, #0]
 800b9da:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,11,13,18");
 800b9dc:	687b      	ldr	r3, [r7, #4]
 800b9de:	3304      	adds	r3, #4
 800b9e0:	4aac      	ldr	r2, [pc, #688]	; (800bc94 <createProblem+0xadec>)
 800b9e2:	461c      	mov	r4, r3
 800b9e4:	4613      	mov	r3, r2
 800b9e6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800b9e8:	6020      	str	r0, [r4, #0]
 800b9ea:	6061      	str	r1, [r4, #4]
 800b9ec:	60a2      	str	r2, [r4, #8]
 800b9ee:	781b      	ldrb	r3, [r3, #0]
 800b9f0:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800b9f2:	687b      	ldr	r3, [r7, #4]
 800b9f4:	33d8      	adds	r3, #216	; 0xd8
 800b9f6:	49a8      	ldr	r1, [pc, #672]	; (800bc98 <createProblem+0xadf0>)
 800b9f8:	461a      	mov	r2, r3
 800b9fa:	460b      	mov	r3, r1
 800b9fc:	cb03      	ldmia	r3!, {r0, r1}
 800b9fe:	6010      	str	r0, [r2, #0]
 800ba00:	6051      	str	r1, [r2, #4]
 800ba02:	881b      	ldrh	r3, [r3, #0]
 800ba04:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6B+");
 800ba06:	687b      	ldr	r3, [r7, #4]
 800ba08:	33cc      	adds	r3, #204	; 0xcc
 800ba0a:	4aa4      	ldr	r2, [pc, #656]	; (800bc9c <createProblem+0xadf4>)
 800ba0c:	6810      	ldr	r0, [r2, #0]
 800ba0e:	6018      	str	r0, [r3, #0]
			break;
 800ba10:	f00e bf90 	b.w	801a934 <createProblem+0x19a8c>
		case 388 :
			strcpy(p->name,"BLACK BEAN");
 800ba14:	687b      	ldr	r3, [r7, #4]
 800ba16:	337c      	adds	r3, #124	; 0x7c
 800ba18:	49a1      	ldr	r1, [pc, #644]	; (800bca0 <createProblem+0xadf8>)
 800ba1a:	461a      	mov	r2, r3
 800ba1c:	460b      	mov	r3, r1
 800ba1e:	cb03      	ldmia	r3!, {r0, r1}
 800ba20:	6010      	str	r0, [r2, #0]
 800ba22:	6051      	str	r1, [r2, #4]
 800ba24:	8819      	ldrh	r1, [r3, #0]
 800ba26:	789b      	ldrb	r3, [r3, #2]
 800ba28:	8111      	strh	r1, [r2, #8]
 800ba2a:	7293      	strb	r3, [r2, #10]
			p->moveSize = 8;
 800ba2c:	687b      	ldr	r3, [r7, #4]
 800ba2e:	2208      	movs	r2, #8
 800ba30:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,H,K,E,I,J,I");
 800ba32:	687b      	ldr	r3, [r7, #4]
 800ba34:	3340      	adds	r3, #64	; 0x40
 800ba36:	4a9b      	ldr	r2, [pc, #620]	; (800bca4 <createProblem+0xadfc>)
 800ba38:	461c      	mov	r4, r3
 800ba3a:	4615      	mov	r5, r2
 800ba3c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ba3e:	6020      	str	r0, [r4, #0]
 800ba40:	6061      	str	r1, [r4, #4]
 800ba42:	60a2      	str	r2, [r4, #8]
 800ba44:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,12,14,9,9,5,18");
 800ba46:	687b      	ldr	r3, [r7, #4]
 800ba48:	3304      	adds	r3, #4
 800ba4a:	4a97      	ldr	r2, [pc, #604]	; (800bca8 <createProblem+0xae00>)
 800ba4c:	461d      	mov	r5, r3
 800ba4e:	4614      	mov	r4, r2
 800ba50:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ba52:	6028      	str	r0, [r5, #0]
 800ba54:	6069      	str	r1, [r5, #4]
 800ba56:	60aa      	str	r2, [r5, #8]
 800ba58:	60eb      	str	r3, [r5, #12]
 800ba5a:	8823      	ldrh	r3, [r4, #0]
 800ba5c:	78a2      	ldrb	r2, [r4, #2]
 800ba5e:	822b      	strh	r3, [r5, #16]
 800ba60:	4613      	mov	r3, r2
 800ba62:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800ba64:	687b      	ldr	r3, [r7, #4]
 800ba66:	33d8      	adds	r3, #216	; 0xd8
 800ba68:	4a90      	ldr	r2, [pc, #576]	; (800bcac <createProblem+0xae04>)
 800ba6a:	461c      	mov	r4, r3
 800ba6c:	4615      	mov	r5, r2
 800ba6e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ba70:	6020      	str	r0, [r4, #0]
 800ba72:	6061      	str	r1, [r4, #4]
 800ba74:	60a2      	str	r2, [r4, #8]
 800ba76:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 800ba78:	687b      	ldr	r3, [r7, #4]
 800ba7a:	33cc      	adds	r3, #204	; 0xcc
 800ba7c:	4a8c      	ldr	r2, [pc, #560]	; (800bcb0 <createProblem+0xae08>)
 800ba7e:	6810      	ldr	r0, [r2, #0]
 800ba80:	6018      	str	r0, [r3, #0]
			break;
 800ba82:	f00e bf57 	b.w	801a934 <createProblem+0x19a8c>
		case 389 :
			strcpy(p->name,"IL DOMANI");
 800ba86:	687b      	ldr	r3, [r7, #4]
 800ba88:	337c      	adds	r3, #124	; 0x7c
 800ba8a:	498a      	ldr	r1, [pc, #552]	; (800bcb4 <createProblem+0xae0c>)
 800ba8c:	461a      	mov	r2, r3
 800ba8e:	460b      	mov	r3, r1
 800ba90:	cb03      	ldmia	r3!, {r0, r1}
 800ba92:	6010      	str	r0, [r2, #0]
 800ba94:	6051      	str	r1, [r2, #4]
 800ba96:	881b      	ldrh	r3, [r3, #0]
 800ba98:	8113      	strh	r3, [r2, #8]
			p->moveSize = 5;
 800ba9a:	687b      	ldr	r3, [r7, #4]
 800ba9c:	2205      	movs	r2, #5
 800ba9e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,E,H,E,I");
 800baa0:	687b      	ldr	r3, [r7, #4]
 800baa2:	3340      	adds	r3, #64	; 0x40
 800baa4:	4984      	ldr	r1, [pc, #528]	; (800bcb8 <createProblem+0xae10>)
 800baa6:	461a      	mov	r2, r3
 800baa8:	460b      	mov	r3, r1
 800baaa:	cb03      	ldmia	r3!, {r0, r1}
 800baac:	6010      	str	r0, [r2, #0]
 800baae:	6051      	str	r1, [r2, #4]
 800bab0:	881b      	ldrh	r3, [r3, #0]
 800bab2:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,9,12,14,18");
 800bab4:	687b      	ldr	r3, [r7, #4]
 800bab6:	3304      	adds	r3, #4
 800bab8:	4a80      	ldr	r2, [pc, #512]	; (800bcbc <createProblem+0xae14>)
 800baba:	461c      	mov	r4, r3
 800babc:	4613      	mov	r3, r2
 800babe:	cb07      	ldmia	r3!, {r0, r1, r2}
 800bac0:	6020      	str	r0, [r4, #0]
 800bac2:	6061      	str	r1, [r4, #4]
 800bac4:	60a2      	str	r2, [r4, #8]
 800bac6:	781b      	ldrb	r3, [r3, #0]
 800bac8:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800baca:	687b      	ldr	r3, [r7, #4]
 800bacc:	33d8      	adds	r3, #216	; 0xd8
 800bace:	4972      	ldr	r1, [pc, #456]	; (800bc98 <createProblem+0xadf0>)
 800bad0:	461a      	mov	r2, r3
 800bad2:	460b      	mov	r3, r1
 800bad4:	cb03      	ldmia	r3!, {r0, r1}
 800bad6:	6010      	str	r0, [r2, #0]
 800bad8:	6051      	str	r1, [r2, #4]
 800bada:	881b      	ldrh	r3, [r3, #0]
 800badc:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7C");
 800bade:	687b      	ldr	r3, [r7, #4]
 800bae0:	33cc      	adds	r3, #204	; 0xcc
 800bae2:	4a77      	ldr	r2, [pc, #476]	; (800bcc0 <createProblem+0xae18>)
 800bae4:	8811      	ldrh	r1, [r2, #0]
 800bae6:	7892      	ldrb	r2, [r2, #2]
 800bae8:	8019      	strh	r1, [r3, #0]
 800baea:	709a      	strb	r2, [r3, #2]
			break;
 800baec:	f00e bf22 	b.w	801a934 <createProblem+0x19a8c>
		case 39 :
			strcpy(p->name,"ONE");
 800baf0:	687b      	ldr	r3, [r7, #4]
 800baf2:	337c      	adds	r3, #124	; 0x7c
 800baf4:	4a73      	ldr	r2, [pc, #460]	; (800bcc4 <createProblem+0xae1c>)
 800baf6:	6810      	ldr	r0, [r2, #0]
 800baf8:	6018      	str	r0, [r3, #0]
			p->moveSize = 6;
 800bafa:	687b      	ldr	r3, [r7, #4]
 800bafc:	2206      	movs	r2, #6
 800bafe:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,C,E,I");
 800bb00:	687b      	ldr	r3, [r7, #4]
 800bb02:	3340      	adds	r3, #64	; 0x40
 800bb04:	4a70      	ldr	r2, [pc, #448]	; (800bcc8 <createProblem+0xae20>)
 800bb06:	461c      	mov	r4, r3
 800bb08:	4613      	mov	r3, r2
 800bb0a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800bb0c:	6020      	str	r0, [r4, #0]
 800bb0e:	6061      	str	r1, [r4, #4]
 800bb10:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,9,13,16,18");
 800bb12:	687b      	ldr	r3, [r7, #4]
 800bb14:	3304      	adds	r3, #4
 800bb16:	4a6d      	ldr	r2, [pc, #436]	; (800bccc <createProblem+0xae24>)
 800bb18:	461c      	mov	r4, r3
 800bb1a:	4613      	mov	r3, r2
 800bb1c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800bb1e:	6020      	str	r0, [r4, #0]
 800bb20:	6061      	str	r1, [r4, #4]
 800bb22:	60a2      	str	r2, [r4, #8]
 800bb24:	881a      	ldrh	r2, [r3, #0]
 800bb26:	789b      	ldrb	r3, [r3, #2]
 800bb28:	81a2      	strh	r2, [r4, #12]
 800bb2a:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800bb2c:	687b      	ldr	r3, [r7, #4]
 800bb2e:	33d8      	adds	r3, #216	; 0xd8
 800bb30:	4a67      	ldr	r2, [pc, #412]	; (800bcd0 <createProblem+0xae28>)
 800bb32:	461c      	mov	r4, r3
 800bb34:	4613      	mov	r3, r2
 800bb36:	cb07      	ldmia	r3!, {r0, r1, r2}
 800bb38:	6020      	str	r0, [r4, #0]
 800bb3a:	6061      	str	r1, [r4, #4]
 800bb3c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 800bb3e:	687b      	ldr	r3, [r7, #4]
 800bb40:	33cc      	adds	r3, #204	; 0xcc
 800bb42:	4a56      	ldr	r2, [pc, #344]	; (800bc9c <createProblem+0xadf4>)
 800bb44:	6810      	ldr	r0, [r2, #0]
 800bb46:	6018      	str	r0, [r3, #0]
			break;
 800bb48:	f00e bef4 	b.w	801a934 <createProblem+0x19a8c>
		case 390 :
			strcpy(p->name,"LAPINERIE");
 800bb4c:	687b      	ldr	r3, [r7, #4]
 800bb4e:	337c      	adds	r3, #124	; 0x7c
 800bb50:	4960      	ldr	r1, [pc, #384]	; (800bcd4 <createProblem+0xae2c>)
 800bb52:	461a      	mov	r2, r3
 800bb54:	460b      	mov	r3, r1
 800bb56:	cb03      	ldmia	r3!, {r0, r1}
 800bb58:	6010      	str	r0, [r2, #0]
 800bb5a:	6051      	str	r1, [r2, #4]
 800bb5c:	881b      	ldrh	r3, [r3, #0]
 800bb5e:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 800bb60:	687b      	ldr	r3, [r7, #4]
 800bb62:	2206      	movs	r2, #6
 800bb64:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,B,E,E,I");
 800bb66:	687b      	ldr	r3, [r7, #4]
 800bb68:	3340      	adds	r3, #64	; 0x40
 800bb6a:	4a5b      	ldr	r2, [pc, #364]	; (800bcd8 <createProblem+0xae30>)
 800bb6c:	461c      	mov	r4, r3
 800bb6e:	4613      	mov	r3, r2
 800bb70:	cb07      	ldmia	r3!, {r0, r1, r2}
 800bb72:	6020      	str	r0, [r4, #0]
 800bb74:	6061      	str	r1, [r4, #4]
 800bb76:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,12,14,16,18");
 800bb78:	687b      	ldr	r3, [r7, #4]
 800bb7a:	3304      	adds	r3, #4
 800bb7c:	4a57      	ldr	r2, [pc, #348]	; (800bcdc <createProblem+0xae34>)
 800bb7e:	461c      	mov	r4, r3
 800bb80:	4615      	mov	r5, r2
 800bb82:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800bb84:	6020      	str	r0, [r4, #0]
 800bb86:	6061      	str	r1, [r4, #4]
 800bb88:	60a2      	str	r2, [r4, #8]
 800bb8a:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800bb8c:	687b      	ldr	r3, [r7, #4]
 800bb8e:	33d8      	adds	r3, #216	; 0xd8
 800bb90:	4a4f      	ldr	r2, [pc, #316]	; (800bcd0 <createProblem+0xae28>)
 800bb92:	461c      	mov	r4, r3
 800bb94:	4613      	mov	r3, r2
 800bb96:	cb07      	ldmia	r3!, {r0, r1, r2}
 800bb98:	6020      	str	r0, [r4, #0]
 800bb9a:	6061      	str	r1, [r4, #4]
 800bb9c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 800bb9e:	687b      	ldr	r3, [r7, #4]
 800bba0:	33cc      	adds	r3, #204	; 0xcc
 800bba2:	4a4f      	ldr	r2, [pc, #316]	; (800bce0 <createProblem+0xae38>)
 800bba4:	6810      	ldr	r0, [r2, #0]
 800bba6:	6018      	str	r0, [r3, #0]
			break;
 800bba8:	f00e bec4 	b.w	801a934 <createProblem+0x19a8c>
		case 391 :
			strcpy(p->name,"LE DOIGHT");
 800bbac:	687b      	ldr	r3, [r7, #4]
 800bbae:	337c      	adds	r3, #124	; 0x7c
 800bbb0:	494c      	ldr	r1, [pc, #304]	; (800bce4 <createProblem+0xae3c>)
 800bbb2:	461a      	mov	r2, r3
 800bbb4:	460b      	mov	r3, r1
 800bbb6:	cb03      	ldmia	r3!, {r0, r1}
 800bbb8:	6010      	str	r0, [r2, #0]
 800bbba:	6051      	str	r1, [r2, #4]
 800bbbc:	881b      	ldrh	r3, [r3, #0]
 800bbbe:	8113      	strh	r3, [r2, #8]
			p->moveSize = 8;
 800bbc0:	687b      	ldr	r3, [r7, #4]
 800bbc2:	2208      	movs	r2, #8
 800bbc4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,D,B,E,C,G,I");
 800bbc6:	687b      	ldr	r3, [r7, #4]
 800bbc8:	3340      	adds	r3, #64	; 0x40
 800bbca:	4a47      	ldr	r2, [pc, #284]	; (800bce8 <createProblem+0xae40>)
 800bbcc:	461c      	mov	r4, r3
 800bbce:	4615      	mov	r5, r2
 800bbd0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800bbd2:	6020      	str	r0, [r4, #0]
 800bbd4:	6061      	str	r1, [r4, #4]
 800bbd6:	60a2      	str	r2, [r4, #8]
 800bbd8:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,7,10,12,16,17,18");
 800bbda:	687b      	ldr	r3, [r7, #4]
 800bbdc:	3304      	adds	r3, #4
 800bbde:	4a43      	ldr	r2, [pc, #268]	; (800bcec <createProblem+0xae44>)
 800bbe0:	461d      	mov	r5, r3
 800bbe2:	4614      	mov	r4, r2
 800bbe4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bbe6:	6028      	str	r0, [r5, #0]
 800bbe8:	6069      	str	r1, [r5, #4]
 800bbea:	60aa      	str	r2, [r5, #8]
 800bbec:	60eb      	str	r3, [r5, #12]
 800bbee:	6820      	ldr	r0, [r4, #0]
 800bbf0:	6128      	str	r0, [r5, #16]
 800bbf2:	7923      	ldrb	r3, [r4, #4]
 800bbf4:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800bbf6:	687b      	ldr	r3, [r7, #4]
 800bbf8:	33d8      	adds	r3, #216	; 0xd8
 800bbfa:	4a2c      	ldr	r2, [pc, #176]	; (800bcac <createProblem+0xae04>)
 800bbfc:	461c      	mov	r4, r3
 800bbfe:	4615      	mov	r5, r2
 800bc00:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800bc02:	6020      	str	r0, [r4, #0]
 800bc04:	6061      	str	r1, [r4, #4]
 800bc06:	60a2      	str	r2, [r4, #8]
 800bc08:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 800bc0a:	687b      	ldr	r3, [r7, #4]
 800bc0c:	33cc      	adds	r3, #204	; 0xcc
 800bc0e:	4a38      	ldr	r2, [pc, #224]	; (800bcf0 <createProblem+0xae48>)
 800bc10:	8811      	ldrh	r1, [r2, #0]
 800bc12:	7892      	ldrb	r2, [r2, #2]
 800bc14:	8019      	strh	r1, [r3, #0]
 800bc16:	709a      	strb	r2, [r3, #2]
			break;
 800bc18:	f00e be8c 	b.w	801a934 <createProblem+0x19a8c>
		case 392 :
			strcpy(p->name,"CHRIS THE STRONGEST");
 800bc1c:	687b      	ldr	r3, [r7, #4]
 800bc1e:	337c      	adds	r3, #124	; 0x7c
 800bc20:	4a34      	ldr	r2, [pc, #208]	; (800bcf4 <createProblem+0xae4c>)
 800bc22:	461d      	mov	r5, r3
 800bc24:	4614      	mov	r4, r2
 800bc26:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bc28:	6028      	str	r0, [r5, #0]
 800bc2a:	6069      	str	r1, [r5, #4]
 800bc2c:	60aa      	str	r2, [r5, #8]
 800bc2e:	60eb      	str	r3, [r5, #12]
 800bc30:	6820      	ldr	r0, [r4, #0]
 800bc32:	6128      	str	r0, [r5, #16]
			p->moveSize = 5;
 800bc34:	687b      	ldr	r3, [r7, #4]
 800bc36:	2205      	movs	r2, #5
 800bc38:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,F,G,D");
 800bc3a:	687b      	ldr	r3, [r7, #4]
 800bc3c:	3340      	adds	r3, #64	; 0x40
 800bc3e:	492e      	ldr	r1, [pc, #184]	; (800bcf8 <createProblem+0xae50>)
 800bc40:	461a      	mov	r2, r3
 800bc42:	460b      	mov	r3, r1
 800bc44:	cb03      	ldmia	r3!, {r0, r1}
 800bc46:	6010      	str	r0, [r2, #0]
 800bc48:	6051      	str	r1, [r2, #4]
 800bc4a:	881b      	ldrh	r3, [r3, #0]
 800bc4c:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,5,11,14,18");
 800bc4e:	687b      	ldr	r3, [r7, #4]
 800bc50:	3304      	adds	r3, #4
 800bc52:	4a2a      	ldr	r2, [pc, #168]	; (800bcfc <createProblem+0xae54>)
 800bc54:	461c      	mov	r4, r3
 800bc56:	4613      	mov	r3, r2
 800bc58:	cb07      	ldmia	r3!, {r0, r1, r2}
 800bc5a:	6020      	str	r0, [r4, #0]
 800bc5c:	6061      	str	r1, [r4, #4]
 800bc5e:	60a2      	str	r2, [r4, #8]
 800bc60:	781b      	ldrb	r3, [r3, #0]
 800bc62:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,e");
 800bc64:	687b      	ldr	r3, [r7, #4]
 800bc66:	33d8      	adds	r3, #216	; 0xd8
 800bc68:	4925      	ldr	r1, [pc, #148]	; (800bd00 <createProblem+0xae58>)
 800bc6a:	461a      	mov	r2, r3
 800bc6c:	460b      	mov	r3, r1
 800bc6e:	cb03      	ldmia	r3!, {r0, r1}
 800bc70:	6010      	str	r0, [r2, #0]
 800bc72:	6051      	str	r1, [r2, #4]
 800bc74:	881b      	ldrh	r3, [r3, #0]
 800bc76:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7C");
 800bc78:	687b      	ldr	r3, [r7, #4]
 800bc7a:	33cc      	adds	r3, #204	; 0xcc
 800bc7c:	4a10      	ldr	r2, [pc, #64]	; (800bcc0 <createProblem+0xae18>)
 800bc7e:	8811      	ldrh	r1, [r2, #0]
 800bc80:	7892      	ldrb	r2, [r2, #2]
 800bc82:	8019      	strh	r1, [r3, #0]
 800bc84:	709a      	strb	r2, [r3, #2]
			break;
 800bc86:	f00e be55 	b.w	801a934 <createProblem+0x19a8c>
 800bc8a:	bf00      	nop
 800bc8c:	08024564 	.word	0x08024564
 800bc90:	0802456c 	.word	0x0802456c
 800bc94:	08024578 	.word	0x08024578
 800bc98:	080208a0 	.word	0x080208a0
 800bc9c:	08020830 	.word	0x08020830
 800bca0:	08024588 	.word	0x08024588
 800bca4:	08024594 	.word	0x08024594
 800bca8:	080245a4 	.word	0x080245a4
 800bcac:	08020a4c 	.word	0x08020a4c
 800bcb0:	080209a4 	.word	0x080209a4
 800bcb4:	080245b8 	.word	0x080245b8
 800bcb8:	080245c4 	.word	0x080245c4
 800bcbc:	080222e4 	.word	0x080222e4
 800bcc0:	08020b0c 	.word	0x08020b0c
 800bcc4:	080245d0 	.word	0x080245d0
 800bcc8:	080245d4 	.word	0x080245d4
 800bccc:	080245e0 	.word	0x080245e0
 800bcd0:	0802091c 	.word	0x0802091c
 800bcd4:	080245f0 	.word	0x080245f0
 800bcd8:	080245fc 	.word	0x080245fc
 800bcdc:	08021184 	.word	0x08021184
 800bce0:	08020dc8 	.word	0x08020dc8
 800bce4:	08024608 	.word	0x08024608
 800bce8:	08024614 	.word	0x08024614
 800bcec:	08023fe0 	.word	0x08023fe0
 800bcf0:	08020874 	.word	0x08020874
 800bcf4:	08024624 	.word	0x08024624
 800bcf8:	08024638 	.word	0x08024638
 800bcfc:	08024644 	.word	0x08024644
 800bd00:	08021748 	.word	0x08021748
		case 393 :
			strcpy(p->name,"HYPNOTIZED MINDS");
 800bd04:	687b      	ldr	r3, [r7, #4]
 800bd06:	337c      	adds	r3, #124	; 0x7c
 800bd08:	4ac1      	ldr	r2, [pc, #772]	; (800c010 <createProblem+0xb168>)
 800bd0a:	461d      	mov	r5, r3
 800bd0c:	4614      	mov	r4, r2
 800bd0e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bd10:	6028      	str	r0, [r5, #0]
 800bd12:	6069      	str	r1, [r5, #4]
 800bd14:	60aa      	str	r2, [r5, #8]
 800bd16:	60eb      	str	r3, [r5, #12]
 800bd18:	7823      	ldrb	r3, [r4, #0]
 800bd1a:	742b      	strb	r3, [r5, #16]
			p->moveSize = 9;
 800bd1c:	687b      	ldr	r3, [r7, #4]
 800bd1e:	2209      	movs	r2, #9
 800bd20:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,C,G,J,I,C,H,J,I");
 800bd22:	687b      	ldr	r3, [r7, #4]
 800bd24:	3340      	adds	r3, #64	; 0x40
 800bd26:	4abb      	ldr	r2, [pc, #748]	; (800c014 <createProblem+0xb16c>)
 800bd28:	461d      	mov	r5, r3
 800bd2a:	4614      	mov	r4, r2
 800bd2c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bd2e:	6028      	str	r0, [r5, #0]
 800bd30:	6069      	str	r1, [r5, #4]
 800bd32:	60aa      	str	r2, [r5, #8]
 800bd34:	60eb      	str	r3, [r5, #12]
 800bd36:	8823      	ldrh	r3, [r4, #0]
 800bd38:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"6,5,9,12,15,8,8,5,18");
 800bd3a:	687b      	ldr	r3, [r7, #4]
 800bd3c:	3304      	adds	r3, #4
 800bd3e:	4ab6      	ldr	r2, [pc, #728]	; (800c018 <createProblem+0xb170>)
 800bd40:	461d      	mov	r5, r3
 800bd42:	4614      	mov	r4, r2
 800bd44:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bd46:	6028      	str	r0, [r5, #0]
 800bd48:	6069      	str	r1, [r5, #4]
 800bd4a:	60aa      	str	r2, [r5, #8]
 800bd4c:	60eb      	str	r3, [r5, #12]
 800bd4e:	6820      	ldr	r0, [r4, #0]
 800bd50:	6128      	str	r0, [r5, #16]
 800bd52:	7923      	ldrb	r3, [r4, #4]
 800bd54:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 800bd56:	687b      	ldr	r3, [r7, #4]
 800bd58:	33d8      	adds	r3, #216	; 0xd8
 800bd5a:	4ab0      	ldr	r2, [pc, #704]	; (800c01c <createProblem+0xb174>)
 800bd5c:	461d      	mov	r5, r3
 800bd5e:	4614      	mov	r4, r2
 800bd60:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bd62:	6028      	str	r0, [r5, #0]
 800bd64:	6069      	str	r1, [r5, #4]
 800bd66:	60aa      	str	r2, [r5, #8]
 800bd68:	60eb      	str	r3, [r5, #12]
 800bd6a:	8823      	ldrh	r3, [r4, #0]
 800bd6c:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 800bd6e:	687b      	ldr	r3, [r7, #4]
 800bd70:	33cc      	adds	r3, #204	; 0xcc
 800bd72:	4aab      	ldr	r2, [pc, #684]	; (800c020 <createProblem+0xb178>)
 800bd74:	6810      	ldr	r0, [r2, #0]
 800bd76:	6018      	str	r0, [r3, #0]
			break;
 800bd78:	f00e bddc 	b.w	801a934 <createProblem+0x19a8c>
		case 394 :
			strcpy(p->name,"BLACK CAVIAR");
 800bd7c:	687b      	ldr	r3, [r7, #4]
 800bd7e:	337c      	adds	r3, #124	; 0x7c
 800bd80:	4aa8      	ldr	r2, [pc, #672]	; (800c024 <createProblem+0xb17c>)
 800bd82:	461c      	mov	r4, r3
 800bd84:	4613      	mov	r3, r2
 800bd86:	cb07      	ldmia	r3!, {r0, r1, r2}
 800bd88:	6020      	str	r0, [r4, #0]
 800bd8a:	6061      	str	r1, [r4, #4]
 800bd8c:	60a2      	str	r2, [r4, #8]
 800bd8e:	781b      	ldrb	r3, [r3, #0]
 800bd90:	7323      	strb	r3, [r4, #12]
			p->moveSize = 8;
 800bd92:	687b      	ldr	r3, [r7, #4]
 800bd94:	2208      	movs	r2, #8
 800bd96:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,E,A,A,H,F,D");
 800bd98:	687b      	ldr	r3, [r7, #4]
 800bd9a:	3340      	adds	r3, #64	; 0x40
 800bd9c:	4aa2      	ldr	r2, [pc, #648]	; (800c028 <createProblem+0xb180>)
 800bd9e:	461c      	mov	r4, r3
 800bda0:	4615      	mov	r5, r2
 800bda2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800bda4:	6020      	str	r0, [r4, #0]
 800bda6:	6061      	str	r1, [r4, #4]
 800bda8:	60a2      	str	r2, [r4, #8]
 800bdaa:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,5,6,9,14,8,11,18");
 800bdac:	687b      	ldr	r3, [r7, #4]
 800bdae:	3304      	adds	r3, #4
 800bdb0:	4a9e      	ldr	r2, [pc, #632]	; (800c02c <createProblem+0xb184>)
 800bdb2:	461d      	mov	r5, r3
 800bdb4:	4614      	mov	r4, r2
 800bdb6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bdb8:	6028      	str	r0, [r5, #0]
 800bdba:	6069      	str	r1, [r5, #4]
 800bdbc:	60aa      	str	r2, [r5, #8]
 800bdbe:	60eb      	str	r3, [r5, #12]
 800bdc0:	8823      	ldrh	r3, [r4, #0]
 800bdc2:	78a2      	ldrb	r2, [r4, #2]
 800bdc4:	822b      	strh	r3, [r5, #16]
 800bdc6:	4613      	mov	r3, r2
 800bdc8:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 800bdca:	687b      	ldr	r3, [r7, #4]
 800bdcc:	33d8      	adds	r3, #216	; 0xd8
 800bdce:	4a98      	ldr	r2, [pc, #608]	; (800c030 <createProblem+0xb188>)
 800bdd0:	461c      	mov	r4, r3
 800bdd2:	4615      	mov	r5, r2
 800bdd4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800bdd6:	6020      	str	r0, [r4, #0]
 800bdd8:	6061      	str	r1, [r4, #4]
 800bdda:	60a2      	str	r2, [r4, #8]
 800bddc:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 800bdde:	687b      	ldr	r3, [r7, #4]
 800bde0:	33cc      	adds	r3, #204	; 0xcc
 800bde2:	4a94      	ldr	r2, [pc, #592]	; (800c034 <createProblem+0xb18c>)
 800bde4:	8811      	ldrh	r1, [r2, #0]
 800bde6:	7892      	ldrb	r2, [r2, #2]
 800bde8:	8019      	strh	r1, [r3, #0]
 800bdea:	709a      	strb	r2, [r3, #2]
			break;
 800bdec:	f00e bda2 	b.w	801a934 <createProblem+0x19a8c>
		case 395 :
			strcpy(p->name,"BAGHEERA");
 800bdf0:	687b      	ldr	r3, [r7, #4]
 800bdf2:	337c      	adds	r3, #124	; 0x7c
 800bdf4:	4990      	ldr	r1, [pc, #576]	; (800c038 <createProblem+0xb190>)
 800bdf6:	461a      	mov	r2, r3
 800bdf8:	460b      	mov	r3, r1
 800bdfa:	cb03      	ldmia	r3!, {r0, r1}
 800bdfc:	6010      	str	r0, [r2, #0]
 800bdfe:	6051      	str	r1, [r2, #4]
 800be00:	781b      	ldrb	r3, [r3, #0]
 800be02:	7213      	strb	r3, [r2, #8]
			p->moveSize = 7;
 800be04:	687b      	ldr	r3, [r7, #4]
 800be06:	2207      	movs	r2, #7
 800be08:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,D,G,I,G,G,D");
 800be0a:	687b      	ldr	r3, [r7, #4]
 800be0c:	3340      	adds	r3, #64	; 0x40
 800be0e:	4a8b      	ldr	r2, [pc, #556]	; (800c03c <createProblem+0xb194>)
 800be10:	461c      	mov	r4, r3
 800be12:	4613      	mov	r3, r2
 800be14:	cb07      	ldmia	r3!, {r0, r1, r2}
 800be16:	6020      	str	r0, [r4, #0]
 800be18:	6061      	str	r1, [r4, #4]
 800be1a:	60a2      	str	r2, [r4, #8]
 800be1c:	881b      	ldrh	r3, [r3, #0]
 800be1e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,7,9,14,14,17,18");
 800be20:	687b      	ldr	r3, [r7, #4]
 800be22:	3304      	adds	r3, #4
 800be24:	4a86      	ldr	r2, [pc, #536]	; (800c040 <createProblem+0xb198>)
 800be26:	461d      	mov	r5, r3
 800be28:	4614      	mov	r4, r2
 800be2a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800be2c:	6028      	str	r0, [r5, #0]
 800be2e:	6069      	str	r1, [r5, #4]
 800be30:	60aa      	str	r2, [r5, #8]
 800be32:	60eb      	str	r3, [r5, #12]
 800be34:	8823      	ldrh	r3, [r4, #0]
 800be36:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800be38:	687b      	ldr	r3, [r7, #4]
 800be3a:	33d8      	adds	r3, #216	; 0xd8
 800be3c:	4a81      	ldr	r2, [pc, #516]	; (800c044 <createProblem+0xb19c>)
 800be3e:	461c      	mov	r4, r3
 800be40:	4613      	mov	r3, r2
 800be42:	cb07      	ldmia	r3!, {r0, r1, r2}
 800be44:	6020      	str	r0, [r4, #0]
 800be46:	6061      	str	r1, [r4, #4]
 800be48:	60a2      	str	r2, [r4, #8]
 800be4a:	881b      	ldrh	r3, [r3, #0]
 800be4c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 800be4e:	687b      	ldr	r3, [r7, #4]
 800be50:	33cc      	adds	r3, #204	; 0xcc
 800be52:	4a7d      	ldr	r2, [pc, #500]	; (800c048 <createProblem+0xb1a0>)
 800be54:	8811      	ldrh	r1, [r2, #0]
 800be56:	7892      	ldrb	r2, [r2, #2]
 800be58:	8019      	strh	r1, [r3, #0]
 800be5a:	709a      	strb	r2, [r3, #2]
			break;
 800be5c:	f00e bd6a 	b.w	801a934 <createProblem+0x19a8c>
		case 396 :
			strcpy(p->name,"MADISH");
 800be60:	687b      	ldr	r3, [r7, #4]
 800be62:	337c      	adds	r3, #124	; 0x7c
 800be64:	4a79      	ldr	r2, [pc, #484]	; (800c04c <createProblem+0xb1a4>)
 800be66:	6810      	ldr	r0, [r2, #0]
 800be68:	6018      	str	r0, [r3, #0]
 800be6a:	8891      	ldrh	r1, [r2, #4]
 800be6c:	7992      	ldrb	r2, [r2, #6]
 800be6e:	8099      	strh	r1, [r3, #4]
 800be70:	719a      	strb	r2, [r3, #6]
			p->moveSize = 7;
 800be72:	687b      	ldr	r3, [r7, #4]
 800be74:	2207      	movs	r2, #7
 800be76:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,C,E,F,C,E,D");
 800be78:	687b      	ldr	r3, [r7, #4]
 800be7a:	3340      	adds	r3, #64	; 0x40
 800be7c:	4a74      	ldr	r2, [pc, #464]	; (800c050 <createProblem+0xb1a8>)
 800be7e:	461c      	mov	r4, r3
 800be80:	4613      	mov	r3, r2
 800be82:	cb07      	ldmia	r3!, {r0, r1, r2}
 800be84:	6020      	str	r0, [r4, #0]
 800be86:	6061      	str	r1, [r4, #4]
 800be88:	60a2      	str	r2, [r4, #8]
 800be8a:	881b      	ldrh	r3, [r3, #0]
 800be8c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,8,11,13,16,18");
 800be8e:	687b      	ldr	r3, [r7, #4]
 800be90:	3304      	adds	r3, #4
 800be92:	4a70      	ldr	r2, [pc, #448]	; (800c054 <createProblem+0xb1ac>)
 800be94:	461d      	mov	r5, r3
 800be96:	4614      	mov	r4, r2
 800be98:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800be9a:	6028      	str	r0, [r5, #0]
 800be9c:	6069      	str	r1, [r5, #4]
 800be9e:	60aa      	str	r2, [r5, #8]
 800bea0:	60eb      	str	r3, [r5, #12]
 800bea2:	8823      	ldrh	r3, [r4, #0]
 800bea4:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800bea6:	687b      	ldr	r3, [r7, #4]
 800bea8:	33d8      	adds	r3, #216	; 0xd8
 800beaa:	4a6b      	ldr	r2, [pc, #428]	; (800c058 <createProblem+0xb1b0>)
 800beac:	461c      	mov	r4, r3
 800beae:	4613      	mov	r3, r2
 800beb0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800beb2:	6020      	str	r0, [r4, #0]
 800beb4:	6061      	str	r1, [r4, #4]
 800beb6:	60a2      	str	r2, [r4, #8]
 800beb8:	881b      	ldrh	r3, [r3, #0]
 800beba:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800bebc:	687b      	ldr	r3, [r7, #4]
 800bebe:	33cc      	adds	r3, #204	; 0xcc
 800bec0:	4a57      	ldr	r2, [pc, #348]	; (800c020 <createProblem+0xb178>)
 800bec2:	6810      	ldr	r0, [r2, #0]
 800bec4:	6018      	str	r0, [r3, #0]
			break;
 800bec6:	f00e bd35 	b.w	801a934 <createProblem+0x19a8c>
		case 397 :
			strcpy(p->name,"RAINING MEANS TRAINING");
 800beca:	687b      	ldr	r3, [r7, #4]
 800becc:	337c      	adds	r3, #124	; 0x7c
 800bece:	4a63      	ldr	r2, [pc, #396]	; (800c05c <createProblem+0xb1b4>)
 800bed0:	461c      	mov	r4, r3
 800bed2:	4615      	mov	r5, r2
 800bed4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800bed6:	6020      	str	r0, [r4, #0]
 800bed8:	6061      	str	r1, [r4, #4]
 800beda:	60a2      	str	r2, [r4, #8]
 800bedc:	60e3      	str	r3, [r4, #12]
 800bede:	6828      	ldr	r0, [r5, #0]
 800bee0:	6120      	str	r0, [r4, #16]
 800bee2:	88ab      	ldrh	r3, [r5, #4]
 800bee4:	79aa      	ldrb	r2, [r5, #6]
 800bee6:	82a3      	strh	r3, [r4, #20]
 800bee8:	4613      	mov	r3, r2
 800beea:	75a3      	strb	r3, [r4, #22]
			p->moveSize = 7;
 800beec:	687b      	ldr	r3, [r7, #4]
 800beee:	2207      	movs	r2, #7
 800bef0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,I,H,H,I,D");
 800bef2:	687b      	ldr	r3, [r7, #4]
 800bef4:	3340      	adds	r3, #64	; 0x40
 800bef6:	4a5a      	ldr	r2, [pc, #360]	; (800c060 <createProblem+0xb1b8>)
 800bef8:	461c      	mov	r4, r3
 800befa:	4613      	mov	r3, r2
 800befc:	cb07      	ldmia	r3!, {r0, r1, r2}
 800befe:	6020      	str	r0, [r4, #0]
 800bf00:	6061      	str	r1, [r4, #4]
 800bf02:	60a2      	str	r2, [r4, #8]
 800bf04:	881b      	ldrh	r3, [r3, #0]
 800bf06:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,9,12,16,7,18");
 800bf08:	687b      	ldr	r3, [r7, #4]
 800bf0a:	3304      	adds	r3, #4
 800bf0c:	4a55      	ldr	r2, [pc, #340]	; (800c064 <createProblem+0xb1bc>)
 800bf0e:	461d      	mov	r5, r3
 800bf10:	4614      	mov	r4, r2
 800bf12:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800bf14:	6028      	str	r0, [r5, #0]
 800bf16:	6069      	str	r1, [r5, #4]
 800bf18:	60aa      	str	r2, [r5, #8]
 800bf1a:	60eb      	str	r3, [r5, #12]
 800bf1c:	7823      	ldrb	r3, [r4, #0]
 800bf1e:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800bf20:	687b      	ldr	r3, [r7, #4]
 800bf22:	33d8      	adds	r3, #216	; 0xd8
 800bf24:	4a47      	ldr	r2, [pc, #284]	; (800c044 <createProblem+0xb19c>)
 800bf26:	461c      	mov	r4, r3
 800bf28:	4613      	mov	r3, r2
 800bf2a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800bf2c:	6020      	str	r0, [r4, #0]
 800bf2e:	6061      	str	r1, [r4, #4]
 800bf30:	60a2      	str	r2, [r4, #8]
 800bf32:	881b      	ldrh	r3, [r3, #0]
 800bf34:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 800bf36:	687b      	ldr	r3, [r7, #4]
 800bf38:	33cc      	adds	r3, #204	; 0xcc
 800bf3a:	4a4b      	ldr	r2, [pc, #300]	; (800c068 <createProblem+0xb1c0>)
 800bf3c:	6810      	ldr	r0, [r2, #0]
 800bf3e:	6018      	str	r0, [r3, #0]
			break;
 800bf40:	f00e bcf8 	b.w	801a934 <createProblem+0x19a8c>
		case 398 :
			strcpy(p->name,"LAST HOPE");
 800bf44:	687b      	ldr	r3, [r7, #4]
 800bf46:	337c      	adds	r3, #124	; 0x7c
 800bf48:	4948      	ldr	r1, [pc, #288]	; (800c06c <createProblem+0xb1c4>)
 800bf4a:	461a      	mov	r2, r3
 800bf4c:	460b      	mov	r3, r1
 800bf4e:	cb03      	ldmia	r3!, {r0, r1}
 800bf50:	6010      	str	r0, [r2, #0]
 800bf52:	6051      	str	r1, [r2, #4]
 800bf54:	881b      	ldrh	r3, [r3, #0]
 800bf56:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 800bf58:	687b      	ldr	r3, [r7, #4]
 800bf5a:	2206      	movs	r2, #6
 800bf5c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,I,H,K,I");
 800bf5e:	687b      	ldr	r3, [r7, #4]
 800bf60:	3340      	adds	r3, #64	; 0x40
 800bf62:	4a43      	ldr	r2, [pc, #268]	; (800c070 <createProblem+0xb1c8>)
 800bf64:	461c      	mov	r4, r3
 800bf66:	4613      	mov	r3, r2
 800bf68:	cb07      	ldmia	r3!, {r0, r1, r2}
 800bf6a:	6020      	str	r0, [r4, #0]
 800bf6c:	6061      	str	r1, [r4, #4]
 800bf6e:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,9,12,14,18");
 800bf70:	687b      	ldr	r3, [r7, #4]
 800bf72:	3304      	adds	r3, #4
 800bf74:	4a3f      	ldr	r2, [pc, #252]	; (800c074 <createProblem+0xb1cc>)
 800bf76:	461c      	mov	r4, r3
 800bf78:	4613      	mov	r3, r2
 800bf7a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800bf7c:	6020      	str	r0, [r4, #0]
 800bf7e:	6061      	str	r1, [r4, #4]
 800bf80:	60a2      	str	r2, [r4, #8]
 800bf82:	881a      	ldrh	r2, [r3, #0]
 800bf84:	789b      	ldrb	r3, [r3, #2]
 800bf86:	81a2      	strh	r2, [r4, #12]
 800bf88:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800bf8a:	687b      	ldr	r3, [r7, #4]
 800bf8c:	33d8      	adds	r3, #216	; 0xd8
 800bf8e:	4a3a      	ldr	r2, [pc, #232]	; (800c078 <createProblem+0xb1d0>)
 800bf90:	461c      	mov	r4, r3
 800bf92:	4613      	mov	r3, r2
 800bf94:	cb07      	ldmia	r3!, {r0, r1, r2}
 800bf96:	6020      	str	r0, [r4, #0]
 800bf98:	6061      	str	r1, [r4, #4]
 800bf9a:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 800bf9c:	687b      	ldr	r3, [r7, #4]
 800bf9e:	33cc      	adds	r3, #204	; 0xcc
 800bfa0:	4a31      	ldr	r2, [pc, #196]	; (800c068 <createProblem+0xb1c0>)
 800bfa2:	6810      	ldr	r0, [r2, #0]
 800bfa4:	6018      	str	r0, [r3, #0]
			break;
 800bfa6:	f00e bcc5 	b.w	801a934 <createProblem+0x19a8c>
		case 399 :
			strcpy(p->name,"FREERIDER");
 800bfaa:	687b      	ldr	r3, [r7, #4]
 800bfac:	337c      	adds	r3, #124	; 0x7c
 800bfae:	4933      	ldr	r1, [pc, #204]	; (800c07c <createProblem+0xb1d4>)
 800bfb0:	461a      	mov	r2, r3
 800bfb2:	460b      	mov	r3, r1
 800bfb4:	cb03      	ldmia	r3!, {r0, r1}
 800bfb6:	6010      	str	r0, [r2, #0]
 800bfb8:	6051      	str	r1, [r2, #4]
 800bfba:	881b      	ldrh	r3, [r3, #0]
 800bfbc:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 800bfbe:	687b      	ldr	r3, [r7, #4]
 800bfc0:	2206      	movs	r2, #6
 800bfc2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,I,H,H,D");
 800bfc4:	687b      	ldr	r3, [r7, #4]
 800bfc6:	3340      	adds	r3, #64	; 0x40
 800bfc8:	4a2d      	ldr	r2, [pc, #180]	; (800c080 <createProblem+0xb1d8>)
 800bfca:	461c      	mov	r4, r3
 800bfcc:	4613      	mov	r3, r2
 800bfce:	cb07      	ldmia	r3!, {r0, r1, r2}
 800bfd0:	6020      	str	r0, [r4, #0]
 800bfd2:	6061      	str	r1, [r4, #4]
 800bfd4:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,9,12,16,18");
 800bfd6:	687b      	ldr	r3, [r7, #4]
 800bfd8:	3304      	adds	r3, #4
 800bfda:	4a2a      	ldr	r2, [pc, #168]	; (800c084 <createProblem+0xb1dc>)
 800bfdc:	461c      	mov	r4, r3
 800bfde:	4613      	mov	r3, r2
 800bfe0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800bfe2:	6020      	str	r0, [r4, #0]
 800bfe4:	6061      	str	r1, [r4, #4]
 800bfe6:	60a2      	str	r2, [r4, #8]
 800bfe8:	881a      	ldrh	r2, [r3, #0]
 800bfea:	789b      	ldrb	r3, [r3, #2]
 800bfec:	81a2      	strh	r2, [r4, #12]
 800bfee:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800bff0:	687b      	ldr	r3, [r7, #4]
 800bff2:	33d8      	adds	r3, #216	; 0xd8
 800bff4:	4a20      	ldr	r2, [pc, #128]	; (800c078 <createProblem+0xb1d0>)
 800bff6:	461c      	mov	r4, r3
 800bff8:	4613      	mov	r3, r2
 800bffa:	cb07      	ldmia	r3!, {r0, r1, r2}
 800bffc:	6020      	str	r0, [r4, #0]
 800bffe:	6061      	str	r1, [r4, #4]
 800c000:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 800c002:	687b      	ldr	r3, [r7, #4]
 800c004:	33cc      	adds	r3, #204	; 0xcc
 800c006:	4a18      	ldr	r2, [pc, #96]	; (800c068 <createProblem+0xb1c0>)
 800c008:	6810      	ldr	r0, [r2, #0]
 800c00a:	6018      	str	r0, [r3, #0]
			break;
 800c00c:	f00e bc92 	b.w	801a934 <createProblem+0x19a8c>
 800c010:	08024654 	.word	0x08024654
 800c014:	08024668 	.word	0x08024668
 800c018:	0802467c 	.word	0x0802467c
 800c01c:	08020dfc 	.word	0x08020dfc
 800c020:	08020830 	.word	0x08020830
 800c024:	08024694 	.word	0x08024694
 800c028:	080246a4 	.word	0x080246a4
 800c02c:	080246b4 	.word	0x080246b4
 800c030:	080209d8 	.word	0x080209d8
 800c034:	080208f0 	.word	0x080208f0
 800c038:	080246c8 	.word	0x080246c8
 800c03c:	080246d4 	.word	0x080246d4
 800c040:	080246e4 	.word	0x080246e4
 800c044:	08020a14 	.word	0x08020a14
 800c048:	08020874 	.word	0x08020874
 800c04c:	080246f8 	.word	0x080246f8
 800c050:	08024700 	.word	0x08024700
 800c054:	08024710 	.word	0x08024710
 800c058:	08020820 	.word	0x08020820
 800c05c:	08024724 	.word	0x08024724
 800c060:	0802473c 	.word	0x0802473c
 800c064:	0802474c 	.word	0x0802474c
 800c068:	080209a4 	.word	0x080209a4
 800c06c:	08024760 	.word	0x08024760
 800c070:	0802476c 	.word	0x0802476c
 800c074:	08024778 	.word	0x08024778
 800c078:	0802091c 	.word	0x0802091c
 800c07c:	08024788 	.word	0x08024788
 800c080:	08021370 	.word	0x08021370
 800c084:	0802362c 	.word	0x0802362c
		case 4 :
			strcpy(p->name,"PROBLEM 12");
 800c088:	687b      	ldr	r3, [r7, #4]
 800c08a:	337c      	adds	r3, #124	; 0x7c
 800c08c:	49b5      	ldr	r1, [pc, #724]	; (800c364 <createProblem+0xb4bc>)
 800c08e:	461a      	mov	r2, r3
 800c090:	460b      	mov	r3, r1
 800c092:	cb03      	ldmia	r3!, {r0, r1}
 800c094:	6010      	str	r0, [r2, #0]
 800c096:	6051      	str	r1, [r2, #4]
 800c098:	8819      	ldrh	r1, [r3, #0]
 800c09a:	789b      	ldrb	r3, [r3, #2]
 800c09c:	8111      	strh	r1, [r2, #8]
 800c09e:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 800c0a0:	687b      	ldr	r3, [r7, #4]
 800c0a2:	2206      	movs	r2, #6
 800c0a4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,K,H,G,B,A");
 800c0a6:	687b      	ldr	r3, [r7, #4]
 800c0a8:	3340      	adds	r3, #64	; 0x40
 800c0aa:	4aaf      	ldr	r2, [pc, #700]	; (800c368 <createProblem+0xb4c0>)
 800c0ac:	461c      	mov	r4, r3
 800c0ae:	4613      	mov	r3, r2
 800c0b0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c0b2:	6020      	str	r0, [r4, #0]
 800c0b4:	6061      	str	r1, [r4, #4]
 800c0b6:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,9,12,14,15,18");
 800c0b8:	687b      	ldr	r3, [r7, #4]
 800c0ba:	3304      	adds	r3, #4
 800c0bc:	4aab      	ldr	r2, [pc, #684]	; (800c36c <createProblem+0xb4c4>)
 800c0be:	461c      	mov	r4, r3
 800c0c0:	4615      	mov	r5, r2
 800c0c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c0c4:	6020      	str	r0, [r4, #0]
 800c0c6:	6061      	str	r1, [r4, #4]
 800c0c8:	60a2      	str	r2, [r4, #8]
 800c0ca:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800c0cc:	687b      	ldr	r3, [r7, #4]
 800c0ce:	33d8      	adds	r3, #216	; 0xd8
 800c0d0:	4aa7      	ldr	r2, [pc, #668]	; (800c370 <createProblem+0xb4c8>)
 800c0d2:	461c      	mov	r4, r3
 800c0d4:	4613      	mov	r3, r2
 800c0d6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c0d8:	6020      	str	r0, [r4, #0]
 800c0da:	6061      	str	r1, [r4, #4]
 800c0dc:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 800c0de:	687b      	ldr	r3, [r7, #4]
 800c0e0:	33cc      	adds	r3, #204	; 0xcc
 800c0e2:	4aa4      	ldr	r2, [pc, #656]	; (800c374 <createProblem+0xb4cc>)
 800c0e4:	6810      	ldr	r0, [r2, #0]
 800c0e6:	6018      	str	r0, [r3, #0]
			break;
 800c0e8:	f00e bc24 	b.w	801a934 <createProblem+0x19a8c>
		case 40 :
			strcpy(p->name,"SALAD NIGHTS");
 800c0ec:	687b      	ldr	r3, [r7, #4]
 800c0ee:	337c      	adds	r3, #124	; 0x7c
 800c0f0:	4aa1      	ldr	r2, [pc, #644]	; (800c378 <createProblem+0xb4d0>)
 800c0f2:	461c      	mov	r4, r3
 800c0f4:	4613      	mov	r3, r2
 800c0f6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c0f8:	6020      	str	r0, [r4, #0]
 800c0fa:	6061      	str	r1, [r4, #4]
 800c0fc:	60a2      	str	r2, [r4, #8]
 800c0fe:	781b      	ldrb	r3, [r3, #0]
 800c100:	7323      	strb	r3, [r4, #12]
			p->moveSize = 8;
 800c102:	687b      	ldr	r3, [r7, #4]
 800c104:	2208      	movs	r2, #8
 800c106:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,E,K,H,I,E,D");
 800c108:	687b      	ldr	r3, [r7, #4]
 800c10a:	3340      	adds	r3, #64	; 0x40
 800c10c:	4a9b      	ldr	r2, [pc, #620]	; (800c37c <createProblem+0xb4d4>)
 800c10e:	461c      	mov	r4, r3
 800c110:	4615      	mov	r5, r2
 800c112:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c114:	6020      	str	r0, [r4, #0]
 800c116:	6061      	str	r1, [r4, #4]
 800c118:	60a2      	str	r2, [r4, #8]
 800c11a:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,9,12,14,14,18");
 800c11c:	687b      	ldr	r3, [r7, #4]
 800c11e:	3304      	adds	r3, #4
 800c120:	4a97      	ldr	r2, [pc, #604]	; (800c380 <createProblem+0xb4d8>)
 800c122:	461d      	mov	r5, r3
 800c124:	4614      	mov	r4, r2
 800c126:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c128:	6028      	str	r0, [r5, #0]
 800c12a:	6069      	str	r1, [r5, #4]
 800c12c:	60aa      	str	r2, [r5, #8]
 800c12e:	60eb      	str	r3, [r5, #12]
 800c130:	6820      	ldr	r0, [r4, #0]
 800c132:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800c134:	687b      	ldr	r3, [r7, #4]
 800c136:	33d8      	adds	r3, #216	; 0xd8
 800c138:	4a92      	ldr	r2, [pc, #584]	; (800c384 <createProblem+0xb4dc>)
 800c13a:	461c      	mov	r4, r3
 800c13c:	4615      	mov	r5, r2
 800c13e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c140:	6020      	str	r0, [r4, #0]
 800c142:	6061      	str	r1, [r4, #4]
 800c144:	60a2      	str	r2, [r4, #8]
 800c146:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 800c148:	687b      	ldr	r3, [r7, #4]
 800c14a:	33cc      	adds	r3, #204	; 0xcc
 800c14c:	4a89      	ldr	r2, [pc, #548]	; (800c374 <createProblem+0xb4cc>)
 800c14e:	6810      	ldr	r0, [r2, #0]
 800c150:	6018      	str	r0, [r3, #0]
			break;
 800c152:	f00e bbef 	b.w	801a934 <createProblem+0x19a8c>
		case 400 :
			strcpy(p->name,"HUBBLE");
 800c156:	687b      	ldr	r3, [r7, #4]
 800c158:	337c      	adds	r3, #124	; 0x7c
 800c15a:	4a8b      	ldr	r2, [pc, #556]	; (800c388 <createProblem+0xb4e0>)
 800c15c:	6810      	ldr	r0, [r2, #0]
 800c15e:	6018      	str	r0, [r3, #0]
 800c160:	8891      	ldrh	r1, [r2, #4]
 800c162:	7992      	ldrb	r2, [r2, #6]
 800c164:	8099      	strh	r1, [r3, #4]
 800c166:	719a      	strb	r2, [r3, #6]
			p->moveSize = 6;
 800c168:	687b      	ldr	r3, [r7, #4]
 800c16a:	2206      	movs	r2, #6
 800c16c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,I,H,K,I");
 800c16e:	687b      	ldr	r3, [r7, #4]
 800c170:	3340      	adds	r3, #64	; 0x40
 800c172:	4a86      	ldr	r2, [pc, #536]	; (800c38c <createProblem+0xb4e4>)
 800c174:	461c      	mov	r4, r3
 800c176:	4613      	mov	r3, r2
 800c178:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c17a:	6020      	str	r0, [r4, #0]
 800c17c:	6061      	str	r1, [r4, #4]
 800c17e:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,9,12,14,18");
 800c180:	687b      	ldr	r3, [r7, #4]
 800c182:	3304      	adds	r3, #4
 800c184:	4a82      	ldr	r2, [pc, #520]	; (800c390 <createProblem+0xb4e8>)
 800c186:	461c      	mov	r4, r3
 800c188:	4613      	mov	r3, r2
 800c18a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c18c:	6020      	str	r0, [r4, #0]
 800c18e:	6061      	str	r1, [r4, #4]
 800c190:	60a2      	str	r2, [r4, #8]
 800c192:	881a      	ldrh	r2, [r3, #0]
 800c194:	789b      	ldrb	r3, [r3, #2]
 800c196:	81a2      	strh	r2, [r4, #12]
 800c198:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800c19a:	687b      	ldr	r3, [r7, #4]
 800c19c:	33d8      	adds	r3, #216	; 0xd8
 800c19e:	4a7d      	ldr	r2, [pc, #500]	; (800c394 <createProblem+0xb4ec>)
 800c1a0:	461c      	mov	r4, r3
 800c1a2:	4613      	mov	r3, r2
 800c1a4:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c1a6:	6020      	str	r0, [r4, #0]
 800c1a8:	6061      	str	r1, [r4, #4]
 800c1aa:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 800c1ac:	687b      	ldr	r3, [r7, #4]
 800c1ae:	33cc      	adds	r3, #204	; 0xcc
 800c1b0:	4a70      	ldr	r2, [pc, #448]	; (800c374 <createProblem+0xb4cc>)
 800c1b2:	6810      	ldr	r0, [r2, #0]
 800c1b4:	6018      	str	r0, [r3, #0]
			break;
 800c1b6:	f00e bbbd 	b.w	801a934 <createProblem+0x19a8c>
		case 401 :
			strcpy(p->name,"IMPACT");
 800c1ba:	687b      	ldr	r3, [r7, #4]
 800c1bc:	337c      	adds	r3, #124	; 0x7c
 800c1be:	4a76      	ldr	r2, [pc, #472]	; (800c398 <createProblem+0xb4f0>)
 800c1c0:	6810      	ldr	r0, [r2, #0]
 800c1c2:	6018      	str	r0, [r3, #0]
 800c1c4:	8891      	ldrh	r1, [r2, #4]
 800c1c6:	7992      	ldrb	r2, [r2, #6]
 800c1c8:	8099      	strh	r1, [r3, #4]
 800c1ca:	719a      	strb	r2, [r3, #6]
			p->moveSize = 8;
 800c1cc:	687b      	ldr	r3, [r7, #4]
 800c1ce:	2208      	movs	r2, #8
 800c1d0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,E,J,E,B,E,D");
 800c1d2:	687b      	ldr	r3, [r7, #4]
 800c1d4:	3340      	adds	r3, #64	; 0x40
 800c1d6:	4a71      	ldr	r2, [pc, #452]	; (800c39c <createProblem+0xb4f4>)
 800c1d8:	461c      	mov	r4, r3
 800c1da:	4615      	mov	r5, r2
 800c1dc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c1de:	6020      	str	r0, [r4, #0]
 800c1e0:	6061      	str	r1, [r4, #4]
 800c1e2:	60a2      	str	r2, [r4, #8]
 800c1e4:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,8,7,12,15,14,18");
 800c1e6:	687b      	ldr	r3, [r7, #4]
 800c1e8:	3304      	adds	r3, #4
 800c1ea:	4a6d      	ldr	r2, [pc, #436]	; (800c3a0 <createProblem+0xb4f8>)
 800c1ec:	461d      	mov	r5, r3
 800c1ee:	4614      	mov	r4, r2
 800c1f0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c1f2:	6028      	str	r0, [r5, #0]
 800c1f4:	6069      	str	r1, [r5, #4]
 800c1f6:	60aa      	str	r2, [r5, #8]
 800c1f8:	60eb      	str	r3, [r5, #12]
 800c1fa:	6820      	ldr	r0, [r4, #0]
 800c1fc:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 800c1fe:	687b      	ldr	r3, [r7, #4]
 800c200:	33d8      	adds	r3, #216	; 0xd8
 800c202:	4a68      	ldr	r2, [pc, #416]	; (800c3a4 <createProblem+0xb4fc>)
 800c204:	461c      	mov	r4, r3
 800c206:	4615      	mov	r5, r2
 800c208:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c20a:	6020      	str	r0, [r4, #0]
 800c20c:	6061      	str	r1, [r4, #4]
 800c20e:	60a2      	str	r2, [r4, #8]
 800c210:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800c212:	687b      	ldr	r3, [r7, #4]
 800c214:	33cc      	adds	r3, #204	; 0xcc
 800c216:	4a64      	ldr	r2, [pc, #400]	; (800c3a8 <createProblem+0xb500>)
 800c218:	6810      	ldr	r0, [r2, #0]
 800c21a:	6018      	str	r0, [r3, #0]
			break;
 800c21c:	f00e bb8a 	b.w	801a934 <createProblem+0x19a8c>
		case 402 :
			strcpy(p->name,"WEEL OF WOLVO");
 800c220:	687b      	ldr	r3, [r7, #4]
 800c222:	337c      	adds	r3, #124	; 0x7c
 800c224:	4a61      	ldr	r2, [pc, #388]	; (800c3ac <createProblem+0xb504>)
 800c226:	461c      	mov	r4, r3
 800c228:	4613      	mov	r3, r2
 800c22a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c22c:	6020      	str	r0, [r4, #0]
 800c22e:	6061      	str	r1, [r4, #4]
 800c230:	60a2      	str	r2, [r4, #8]
 800c232:	881b      	ldrh	r3, [r3, #0]
 800c234:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 800c236:	687b      	ldr	r3, [r7, #4]
 800c238:	2207      	movs	r2, #7
 800c23a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,H,F,H,G,I");
 800c23c:	687b      	ldr	r3, [r7, #4]
 800c23e:	3340      	adds	r3, #64	; 0x40
 800c240:	4a5b      	ldr	r2, [pc, #364]	; (800c3b0 <createProblem+0xb508>)
 800c242:	461c      	mov	r4, r3
 800c244:	4613      	mov	r3, r2
 800c246:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c248:	6020      	str	r0, [r4, #0]
 800c24a:	6061      	str	r1, [r4, #4]
 800c24c:	60a2      	str	r2, [r4, #8]
 800c24e:	881b      	ldrh	r3, [r3, #0]
 800c250:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,5,11,12,15,18");
 800c252:	687b      	ldr	r3, [r7, #4]
 800c254:	3304      	adds	r3, #4
 800c256:	4a57      	ldr	r2, [pc, #348]	; (800c3b4 <createProblem+0xb50c>)
 800c258:	461d      	mov	r5, r3
 800c25a:	4614      	mov	r4, r2
 800c25c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c25e:	6028      	str	r0, [r5, #0]
 800c260:	6069      	str	r1, [r5, #4]
 800c262:	60aa      	str	r2, [r5, #8]
 800c264:	60eb      	str	r3, [r5, #12]
 800c266:	8823      	ldrh	r3, [r4, #0]
 800c268:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800c26a:	687b      	ldr	r3, [r7, #4]
 800c26c:	33d8      	adds	r3, #216	; 0xd8
 800c26e:	4a52      	ldr	r2, [pc, #328]	; (800c3b8 <createProblem+0xb510>)
 800c270:	461c      	mov	r4, r3
 800c272:	4613      	mov	r3, r2
 800c274:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c276:	6020      	str	r0, [r4, #0]
 800c278:	6061      	str	r1, [r4, #4]
 800c27a:	60a2      	str	r2, [r4, #8]
 800c27c:	881b      	ldrh	r3, [r3, #0]
 800c27e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B");
 800c280:	687b      	ldr	r3, [r7, #4]
 800c282:	33cc      	adds	r3, #204	; 0xcc
 800c284:	4a4d      	ldr	r2, [pc, #308]	; (800c3bc <createProblem+0xb514>)
 800c286:	8811      	ldrh	r1, [r2, #0]
 800c288:	7892      	ldrb	r2, [r2, #2]
 800c28a:	8019      	strh	r1, [r3, #0]
 800c28c:	709a      	strb	r2, [r3, #2]
			break;
 800c28e:	f00e bb51 	b.w	801a934 <createProblem+0x19a8c>
		case 403 :
			strcpy(p->name,"(S)ENDING");
 800c292:	687b      	ldr	r3, [r7, #4]
 800c294:	337c      	adds	r3, #124	; 0x7c
 800c296:	494a      	ldr	r1, [pc, #296]	; (800c3c0 <createProblem+0xb518>)
 800c298:	461a      	mov	r2, r3
 800c29a:	460b      	mov	r3, r1
 800c29c:	cb03      	ldmia	r3!, {r0, r1}
 800c29e:	6010      	str	r0, [r2, #0]
 800c2a0:	6051      	str	r1, [r2, #4]
 800c2a2:	881b      	ldrh	r3, [r3, #0]
 800c2a4:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 800c2a6:	687b      	ldr	r3, [r7, #4]
 800c2a8:	2207      	movs	r2, #7
 800c2aa:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,I,E,J,G,G,D");
 800c2ac:	687b      	ldr	r3, [r7, #4]
 800c2ae:	3340      	adds	r3, #64	; 0x40
 800c2b0:	4a44      	ldr	r2, [pc, #272]	; (800c3c4 <createProblem+0xb51c>)
 800c2b2:	461c      	mov	r4, r3
 800c2b4:	4613      	mov	r3, r2
 800c2b6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c2b8:	6020      	str	r0, [r4, #0]
 800c2ba:	6061      	str	r1, [r4, #4]
 800c2bc:	60a2      	str	r2, [r4, #8]
 800c2be:	881b      	ldrh	r3, [r3, #0]
 800c2c0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,7,9,12,15,17,18");
 800c2c2:	687b      	ldr	r3, [r7, #4]
 800c2c4:	3304      	adds	r3, #4
 800c2c6:	4a40      	ldr	r2, [pc, #256]	; (800c3c8 <createProblem+0xb520>)
 800c2c8:	461d      	mov	r5, r3
 800c2ca:	4614      	mov	r4, r2
 800c2cc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c2ce:	6028      	str	r0, [r5, #0]
 800c2d0:	6069      	str	r1, [r5, #4]
 800c2d2:	60aa      	str	r2, [r5, #8]
 800c2d4:	60eb      	str	r3, [r5, #12]
 800c2d6:	8823      	ldrh	r3, [r4, #0]
 800c2d8:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800c2da:	687b      	ldr	r3, [r7, #4]
 800c2dc:	33d8      	adds	r3, #216	; 0xd8
 800c2de:	4a36      	ldr	r2, [pc, #216]	; (800c3b8 <createProblem+0xb510>)
 800c2e0:	461c      	mov	r4, r3
 800c2e2:	4613      	mov	r3, r2
 800c2e4:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c2e6:	6020      	str	r0, [r4, #0]
 800c2e8:	6061      	str	r1, [r4, #4]
 800c2ea:	60a2      	str	r2, [r4, #8]
 800c2ec:	881b      	ldrh	r3, [r3, #0]
 800c2ee:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 800c2f0:	687b      	ldr	r3, [r7, #4]
 800c2f2:	33cc      	adds	r3, #204	; 0xcc
 800c2f4:	4a1f      	ldr	r2, [pc, #124]	; (800c374 <createProblem+0xb4cc>)
 800c2f6:	6810      	ldr	r0, [r2, #0]
 800c2f8:	6018      	str	r0, [r3, #0]
			break;
 800c2fa:	f00e bb1b 	b.w	801a934 <createProblem+0x19a8c>
		case 404 :
			strcpy(p->name,"CHARGER");
 800c2fe:	687b      	ldr	r3, [r7, #4]
 800c300:	337c      	adds	r3, #124	; 0x7c
 800c302:	4932      	ldr	r1, [pc, #200]	; (800c3cc <createProblem+0xb524>)
 800c304:	461a      	mov	r2, r3
 800c306:	460b      	mov	r3, r1
 800c308:	cb03      	ldmia	r3!, {r0, r1}
 800c30a:	6010      	str	r0, [r2, #0]
 800c30c:	6051      	str	r1, [r2, #4]
			p->moveSize = 6;
 800c30e:	687b      	ldr	r3, [r7, #4]
 800c310:	2206      	movs	r2, #6
 800c312:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,E,E,B,D");
 800c314:	687b      	ldr	r3, [r7, #4]
 800c316:	3340      	adds	r3, #64	; 0x40
 800c318:	4a2d      	ldr	r2, [pc, #180]	; (800c3d0 <createProblem+0xb528>)
 800c31a:	461c      	mov	r4, r3
 800c31c:	4613      	mov	r3, r2
 800c31e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c320:	6020      	str	r0, [r4, #0]
 800c322:	6061      	str	r1, [r4, #4]
 800c324:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,7,8,12,15,18");
 800c326:	687b      	ldr	r3, [r7, #4]
 800c328:	3304      	adds	r3, #4
 800c32a:	4a2a      	ldr	r2, [pc, #168]	; (800c3d4 <createProblem+0xb52c>)
 800c32c:	461c      	mov	r4, r3
 800c32e:	4613      	mov	r3, r2
 800c330:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c332:	6020      	str	r0, [r4, #0]
 800c334:	6061      	str	r1, [r4, #4]
 800c336:	60a2      	str	r2, [r4, #8]
 800c338:	881a      	ldrh	r2, [r3, #0]
 800c33a:	789b      	ldrb	r3, [r3, #2]
 800c33c:	81a2      	strh	r2, [r4, #12]
 800c33e:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800c340:	687b      	ldr	r3, [r7, #4]
 800c342:	33d8      	adds	r3, #216	; 0xd8
 800c344:	4a0a      	ldr	r2, [pc, #40]	; (800c370 <createProblem+0xb4c8>)
 800c346:	461c      	mov	r4, r3
 800c348:	4613      	mov	r3, r2
 800c34a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c34c:	6020      	str	r0, [r4, #0]
 800c34e:	6061      	str	r1, [r4, #4]
 800c350:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 800c352:	687b      	ldr	r3, [r7, #4]
 800c354:	33cc      	adds	r3, #204	; 0xcc
 800c356:	4a20      	ldr	r2, [pc, #128]	; (800c3d8 <createProblem+0xb530>)
 800c358:	8811      	ldrh	r1, [r2, #0]
 800c35a:	7892      	ldrb	r2, [r2, #2]
 800c35c:	8019      	strh	r1, [r3, #0]
 800c35e:	709a      	strb	r2, [r3, #2]
			break;
 800c360:	f00e bae8 	b.w	801a934 <createProblem+0x19a8c>
 800c364:	08024794 	.word	0x08024794
 800c368:	080247a0 	.word	0x080247a0
 800c36c:	080247ac 	.word	0x080247ac
 800c370:	0802091c 	.word	0x0802091c
 800c374:	080209a4 	.word	0x080209a4
 800c378:	080247bc 	.word	0x080247bc
 800c37c:	080247cc 	.word	0x080247cc
 800c380:	080247dc 	.word	0x080247dc
 800c384:	08020a4c 	.word	0x08020a4c
 800c388:	080247f0 	.word	0x080247f0
 800c38c:	080247f8 	.word	0x080247f8
 800c390:	08021714 	.word	0x08021714
 800c394:	08020e90 	.word	0x08020e90
 800c398:	08024804 	.word	0x08024804
 800c39c:	0802480c 	.word	0x0802480c
 800c3a0:	0802481c 	.word	0x0802481c
 800c3a4:	080209d8 	.word	0x080209d8
 800c3a8:	08020830 	.word	0x08020830
 800c3ac:	08024830 	.word	0x08024830
 800c3b0:	08024840 	.word	0x08024840
 800c3b4:	08024850 	.word	0x08024850
 800c3b8:	08020a14 	.word	0x08020a14
 800c3bc:	080208ac 	.word	0x080208ac
 800c3c0:	08024864 	.word	0x08024864
 800c3c4:	08024870 	.word	0x08024870
 800c3c8:	08024880 	.word	0x08024880
 800c3cc:	08024894 	.word	0x08024894
 800c3d0:	0802489c 	.word	0x0802489c
 800c3d4:	080248a8 	.word	0x080248a8
 800c3d8:	080208f0 	.word	0x080208f0
		case 405 :
			strcpy(p->name,"CHAMONIX BAD DAY");
 800c3dc:	687b      	ldr	r3, [r7, #4]
 800c3de:	337c      	adds	r3, #124	; 0x7c
 800c3e0:	4ac3      	ldr	r2, [pc, #780]	; (800c6f0 <createProblem+0xb848>)
 800c3e2:	461d      	mov	r5, r3
 800c3e4:	4614      	mov	r4, r2
 800c3e6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c3e8:	6028      	str	r0, [r5, #0]
 800c3ea:	6069      	str	r1, [r5, #4]
 800c3ec:	60aa      	str	r2, [r5, #8]
 800c3ee:	60eb      	str	r3, [r5, #12]
 800c3f0:	7823      	ldrb	r3, [r4, #0]
 800c3f2:	742b      	strb	r3, [r5, #16]
			p->moveSize = 6;
 800c3f4:	687b      	ldr	r3, [r7, #4]
 800c3f6:	2206      	movs	r2, #6
 800c3f8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,E,A,D");
 800c3fa:	687b      	ldr	r3, [r7, #4]
 800c3fc:	3340      	adds	r3, #64	; 0x40
 800c3fe:	4abd      	ldr	r2, [pc, #756]	; (800c6f4 <createProblem+0xb84c>)
 800c400:	461c      	mov	r4, r3
 800c402:	4613      	mov	r3, r2
 800c404:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c406:	6020      	str	r0, [r4, #0]
 800c408:	6061      	str	r1, [r4, #4]
 800c40a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,8,12,14,18");
 800c40c:	687b      	ldr	r3, [r7, #4]
 800c40e:	3304      	adds	r3, #4
 800c410:	4ab9      	ldr	r2, [pc, #740]	; (800c6f8 <createProblem+0xb850>)
 800c412:	461c      	mov	r4, r3
 800c414:	4613      	mov	r3, r2
 800c416:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c418:	6020      	str	r0, [r4, #0]
 800c41a:	6061      	str	r1, [r4, #4]
 800c41c:	60a2      	str	r2, [r4, #8]
 800c41e:	881a      	ldrh	r2, [r3, #0]
 800c420:	789b      	ldrb	r3, [r3, #2]
 800c422:	81a2      	strh	r2, [r4, #12]
 800c424:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800c426:	687b      	ldr	r3, [r7, #4]
 800c428:	33d8      	adds	r3, #216	; 0xd8
 800c42a:	4ab4      	ldr	r2, [pc, #720]	; (800c6fc <createProblem+0xb854>)
 800c42c:	461c      	mov	r4, r3
 800c42e:	4613      	mov	r3, r2
 800c430:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c432:	6020      	str	r0, [r4, #0]
 800c434:	6061      	str	r1, [r4, #4]
 800c436:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 800c438:	687b      	ldr	r3, [r7, #4]
 800c43a:	33cc      	adds	r3, #204	; 0xcc
 800c43c:	4ab0      	ldr	r2, [pc, #704]	; (800c700 <createProblem+0xb858>)
 800c43e:	8811      	ldrh	r1, [r2, #0]
 800c440:	7892      	ldrb	r2, [r2, #2]
 800c442:	8019      	strh	r1, [r3, #0]
 800c444:	709a      	strb	r2, [r3, #2]
			break;
 800c446:	f00e ba75 	b.w	801a934 <createProblem+0x19a8c>
		case 406 :
			strcpy(p->name,"LAPPNOR");
 800c44a:	687b      	ldr	r3, [r7, #4]
 800c44c:	337c      	adds	r3, #124	; 0x7c
 800c44e:	49ad      	ldr	r1, [pc, #692]	; (800c704 <createProblem+0xb85c>)
 800c450:	461a      	mov	r2, r3
 800c452:	460b      	mov	r3, r1
 800c454:	cb03      	ldmia	r3!, {r0, r1}
 800c456:	6010      	str	r0, [r2, #0]
 800c458:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 800c45a:	687b      	ldr	r3, [r7, #4]
 800c45c:	2207      	movs	r2, #7
 800c45e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,I,H,J,G,I");
 800c460:	687b      	ldr	r3, [r7, #4]
 800c462:	3340      	adds	r3, #64	; 0x40
 800c464:	4aa8      	ldr	r2, [pc, #672]	; (800c708 <createProblem+0xb860>)
 800c466:	461c      	mov	r4, r3
 800c468:	4613      	mov	r3, r2
 800c46a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c46c:	6020      	str	r0, [r4, #0]
 800c46e:	6061      	str	r1, [r4, #4]
 800c470:	60a2      	str	r2, [r4, #8]
 800c472:	881b      	ldrh	r3, [r3, #0]
 800c474:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,9,12,12,15,18");
 800c476:	687b      	ldr	r3, [r7, #4]
 800c478:	3304      	adds	r3, #4
 800c47a:	4aa4      	ldr	r2, [pc, #656]	; (800c70c <createProblem+0xb864>)
 800c47c:	461d      	mov	r5, r3
 800c47e:	4614      	mov	r4, r2
 800c480:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c482:	6028      	str	r0, [r5, #0]
 800c484:	6069      	str	r1, [r5, #4]
 800c486:	60aa      	str	r2, [r5, #8]
 800c488:	60eb      	str	r3, [r5, #12]
 800c48a:	8823      	ldrh	r3, [r4, #0]
 800c48c:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800c48e:	687b      	ldr	r3, [r7, #4]
 800c490:	33d8      	adds	r3, #216	; 0xd8
 800c492:	4a9f      	ldr	r2, [pc, #636]	; (800c710 <createProblem+0xb868>)
 800c494:	461c      	mov	r4, r3
 800c496:	4613      	mov	r3, r2
 800c498:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c49a:	6020      	str	r0, [r4, #0]
 800c49c:	6061      	str	r1, [r4, #4]
 800c49e:	60a2      	str	r2, [r4, #8]
 800c4a0:	881b      	ldrh	r3, [r3, #0]
 800c4a2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 800c4a4:	687b      	ldr	r3, [r7, #4]
 800c4a6:	33cc      	adds	r3, #204	; 0xcc
 800c4a8:	4a9a      	ldr	r2, [pc, #616]	; (800c714 <createProblem+0xb86c>)
 800c4aa:	8811      	ldrh	r1, [r2, #0]
 800c4ac:	7892      	ldrb	r2, [r2, #2]
 800c4ae:	8019      	strh	r1, [r3, #0]
 800c4b0:	709a      	strb	r2, [r3, #2]
			break;
 800c4b2:	f00e ba3f 	b.w	801a934 <createProblem+0x19a8c>
		case 407 :
			strcpy(p->name,"CHALK DUST");
 800c4b6:	687b      	ldr	r3, [r7, #4]
 800c4b8:	337c      	adds	r3, #124	; 0x7c
 800c4ba:	4997      	ldr	r1, [pc, #604]	; (800c718 <createProblem+0xb870>)
 800c4bc:	461a      	mov	r2, r3
 800c4be:	460b      	mov	r3, r1
 800c4c0:	cb03      	ldmia	r3!, {r0, r1}
 800c4c2:	6010      	str	r0, [r2, #0]
 800c4c4:	6051      	str	r1, [r2, #4]
 800c4c6:	8819      	ldrh	r1, [r3, #0]
 800c4c8:	789b      	ldrb	r3, [r3, #2]
 800c4ca:	8111      	strh	r1, [r2, #8]
 800c4cc:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 800c4ce:	687b      	ldr	r3, [r7, #4]
 800c4d0:	2207      	movs	r2, #7
 800c4d2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,E,B,E,E,I");
 800c4d4:	687b      	ldr	r3, [r7, #4]
 800c4d6:	3340      	adds	r3, #64	; 0x40
 800c4d8:	4a90      	ldr	r2, [pc, #576]	; (800c71c <createProblem+0xb874>)
 800c4da:	461c      	mov	r4, r3
 800c4dc:	4613      	mov	r3, r2
 800c4de:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c4e0:	6020      	str	r0, [r4, #0]
 800c4e2:	6061      	str	r1, [r4, #4]
 800c4e4:	60a2      	str	r2, [r4, #8]
 800c4e6:	881b      	ldrh	r3, [r3, #0]
 800c4e8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,10,12,16,18");
 800c4ea:	687b      	ldr	r3, [r7, #4]
 800c4ec:	3304      	adds	r3, #4
 800c4ee:	4a8c      	ldr	r2, [pc, #560]	; (800c720 <createProblem+0xb878>)
 800c4f0:	461d      	mov	r5, r3
 800c4f2:	4614      	mov	r4, r2
 800c4f4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c4f6:	6028      	str	r0, [r5, #0]
 800c4f8:	6069      	str	r1, [r5, #4]
 800c4fa:	60aa      	str	r2, [r5, #8]
 800c4fc:	60eb      	str	r3, [r5, #12]
 800c4fe:	8823      	ldrh	r3, [r4, #0]
 800c500:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800c502:	687b      	ldr	r3, [r7, #4]
 800c504:	33d8      	adds	r3, #216	; 0xd8
 800c506:	4a87      	ldr	r2, [pc, #540]	; (800c724 <createProblem+0xb87c>)
 800c508:	461c      	mov	r4, r3
 800c50a:	4613      	mov	r3, r2
 800c50c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c50e:	6020      	str	r0, [r4, #0]
 800c510:	6061      	str	r1, [r4, #4]
 800c512:	60a2      	str	r2, [r4, #8]
 800c514:	881b      	ldrh	r3, [r3, #0]
 800c516:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800c518:	687b      	ldr	r3, [r7, #4]
 800c51a:	33cc      	adds	r3, #204	; 0xcc
 800c51c:	4a82      	ldr	r2, [pc, #520]	; (800c728 <createProblem+0xb880>)
 800c51e:	6810      	ldr	r0, [r2, #0]
 800c520:	6018      	str	r0, [r3, #0]
			break;
 800c522:	f00e ba07 	b.w	801a934 <createProblem+0x19a8c>
		case 408 :
			strcpy(p->name,"MAIDENATOR2");
 800c526:	687b      	ldr	r3, [r7, #4]
 800c528:	337c      	adds	r3, #124	; 0x7c
 800c52a:	4a80      	ldr	r2, [pc, #512]	; (800c72c <createProblem+0xb884>)
 800c52c:	461c      	mov	r4, r3
 800c52e:	4613      	mov	r3, r2
 800c530:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c532:	6020      	str	r0, [r4, #0]
 800c534:	6061      	str	r1, [r4, #4]
 800c536:	60a2      	str	r2, [r4, #8]
			p->moveSize = 9;
 800c538:	687b      	ldr	r3, [r7, #4]
 800c53a:	2209      	movs	r2, #9
 800c53c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,C,H,C,F,A,B,A");
 800c53e:	687b      	ldr	r3, [r7, #4]
 800c540:	3340      	adds	r3, #64	; 0x40
 800c542:	4a7b      	ldr	r2, [pc, #492]	; (800c730 <createProblem+0xb888>)
 800c544:	461d      	mov	r5, r3
 800c546:	4614      	mov	r4, r2
 800c548:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c54a:	6028      	str	r0, [r5, #0]
 800c54c:	6069      	str	r1, [r5, #4]
 800c54e:	60aa      	str	r2, [r5, #8]
 800c550:	60eb      	str	r3, [r5, #12]
 800c552:	8823      	ldrh	r3, [r4, #0]
 800c554:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,5,8,8,13,11,14,15,18");
 800c556:	687b      	ldr	r3, [r7, #4]
 800c558:	3304      	adds	r3, #4
 800c55a:	4a76      	ldr	r2, [pc, #472]	; (800c734 <createProblem+0xb88c>)
 800c55c:	461c      	mov	r4, r3
 800c55e:	4615      	mov	r5, r2
 800c560:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c562:	6020      	str	r0, [r4, #0]
 800c564:	6061      	str	r1, [r4, #4]
 800c566:	60a2      	str	r2, [r4, #8]
 800c568:	60e3      	str	r3, [r4, #12]
 800c56a:	6828      	ldr	r0, [r5, #0]
 800c56c:	6120      	str	r0, [r4, #16]
 800c56e:	88ab      	ldrh	r3, [r5, #4]
 800c570:	79aa      	ldrb	r2, [r5, #6]
 800c572:	82a3      	strh	r3, [r4, #20]
 800c574:	4613      	mov	r3, r2
 800c576:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 800c578:	687b      	ldr	r3, [r7, #4]
 800c57a:	33d8      	adds	r3, #216	; 0xd8
 800c57c:	4a6e      	ldr	r2, [pc, #440]	; (800c738 <createProblem+0xb890>)
 800c57e:	461d      	mov	r5, r3
 800c580:	4614      	mov	r4, r2
 800c582:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c584:	6028      	str	r0, [r5, #0]
 800c586:	6069      	str	r1, [r5, #4]
 800c588:	60aa      	str	r2, [r5, #8]
 800c58a:	60eb      	str	r3, [r5, #12]
 800c58c:	8823      	ldrh	r3, [r4, #0]
 800c58e:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6C");
 800c590:	687b      	ldr	r3, [r7, #4]
 800c592:	33cc      	adds	r3, #204	; 0xcc
 800c594:	4a5a      	ldr	r2, [pc, #360]	; (800c700 <createProblem+0xb858>)
 800c596:	8811      	ldrh	r1, [r2, #0]
 800c598:	7892      	ldrb	r2, [r2, #2]
 800c59a:	8019      	strh	r1, [r3, #0]
 800c59c:	709a      	strb	r2, [r3, #2]
			break;
 800c59e:	f00e b9c9 	b.w	801a934 <createProblem+0x19a8c>
		case 409 :
			strcpy(p->name,"TURKMENISTAN");
 800c5a2:	687b      	ldr	r3, [r7, #4]
 800c5a4:	337c      	adds	r3, #124	; 0x7c
 800c5a6:	4a65      	ldr	r2, [pc, #404]	; (800c73c <createProblem+0xb894>)
 800c5a8:	461c      	mov	r4, r3
 800c5aa:	4613      	mov	r3, r2
 800c5ac:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c5ae:	6020      	str	r0, [r4, #0]
 800c5b0:	6061      	str	r1, [r4, #4]
 800c5b2:	60a2      	str	r2, [r4, #8]
 800c5b4:	781b      	ldrb	r3, [r3, #0]
 800c5b6:	7323      	strb	r3, [r4, #12]
			p->moveSize = 7;
 800c5b8:	687b      	ldr	r3, [r7, #4]
 800c5ba:	2207      	movs	r2, #7
 800c5bc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,I,J,E,H,D");
 800c5be:	687b      	ldr	r3, [r7, #4]
 800c5c0:	3340      	adds	r3, #64	; 0x40
 800c5c2:	4a5f      	ldr	r2, [pc, #380]	; (800c740 <createProblem+0xb898>)
 800c5c4:	461c      	mov	r4, r3
 800c5c6:	4613      	mov	r3, r2
 800c5c8:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c5ca:	6020      	str	r0, [r4, #0]
 800c5cc:	6061      	str	r1, [r4, #4]
 800c5ce:	60a2      	str	r2, [r4, #8]
 800c5d0:	881b      	ldrh	r3, [r3, #0]
 800c5d2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,10,7,12,16,18");
 800c5d4:	687b      	ldr	r3, [r7, #4]
 800c5d6:	3304      	adds	r3, #4
 800c5d8:	4a5a      	ldr	r2, [pc, #360]	; (800c744 <createProblem+0xb89c>)
 800c5da:	461d      	mov	r5, r3
 800c5dc:	4614      	mov	r4, r2
 800c5de:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c5e0:	6028      	str	r0, [r5, #0]
 800c5e2:	6069      	str	r1, [r5, #4]
 800c5e4:	60aa      	str	r2, [r5, #8]
 800c5e6:	60eb      	str	r3, [r5, #12]
 800c5e8:	8823      	ldrh	r3, [r4, #0]
 800c5ea:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800c5ec:	687b      	ldr	r3, [r7, #4]
 800c5ee:	33d8      	adds	r3, #216	; 0xd8
 800c5f0:	4a47      	ldr	r2, [pc, #284]	; (800c710 <createProblem+0xb868>)
 800c5f2:	461c      	mov	r4, r3
 800c5f4:	4613      	mov	r3, r2
 800c5f6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c5f8:	6020      	str	r0, [r4, #0]
 800c5fa:	6061      	str	r1, [r4, #4]
 800c5fc:	60a2      	str	r2, [r4, #8]
 800c5fe:	881b      	ldrh	r3, [r3, #0]
 800c600:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800c602:	687b      	ldr	r3, [r7, #4]
 800c604:	33cc      	adds	r3, #204	; 0xcc
 800c606:	4a48      	ldr	r2, [pc, #288]	; (800c728 <createProblem+0xb880>)
 800c608:	6810      	ldr	r0, [r2, #0]
 800c60a:	6018      	str	r0, [r3, #0]
			break;
 800c60c:	f00e b992 	b.w	801a934 <createProblem+0x19a8c>
		case 41 :
			strcpy(p->name,"LINK TO THE PAST");
 800c610:	687b      	ldr	r3, [r7, #4]
 800c612:	337c      	adds	r3, #124	; 0x7c
 800c614:	4a4c      	ldr	r2, [pc, #304]	; (800c748 <createProblem+0xb8a0>)
 800c616:	461d      	mov	r5, r3
 800c618:	4614      	mov	r4, r2
 800c61a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c61c:	6028      	str	r0, [r5, #0]
 800c61e:	6069      	str	r1, [r5, #4]
 800c620:	60aa      	str	r2, [r5, #8]
 800c622:	60eb      	str	r3, [r5, #12]
 800c624:	7823      	ldrb	r3, [r4, #0]
 800c626:	742b      	strb	r3, [r5, #16]
			p->moveSize = 7;
 800c628:	687b      	ldr	r3, [r7, #4]
 800c62a:	2207      	movs	r2, #7
 800c62c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,A,E,E,H,D");
 800c62e:	687b      	ldr	r3, [r7, #4]
 800c630:	3340      	adds	r3, #64	; 0x40
 800c632:	4a46      	ldr	r2, [pc, #280]	; (800c74c <createProblem+0xb8a4>)
 800c634:	461c      	mov	r4, r3
 800c636:	4613      	mov	r3, r2
 800c638:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c63a:	6020      	str	r0, [r4, #0]
 800c63c:	6061      	str	r1, [r4, #4]
 800c63e:	60a2      	str	r2, [r4, #8]
 800c640:	881b      	ldrh	r3, [r3, #0]
 800c642:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,12,14,16,18");
 800c644:	687b      	ldr	r3, [r7, #4]
 800c646:	3304      	adds	r3, #4
 800c648:	4a41      	ldr	r2, [pc, #260]	; (800c750 <createProblem+0xb8a8>)
 800c64a:	461d      	mov	r5, r3
 800c64c:	4614      	mov	r4, r2
 800c64e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c650:	6028      	str	r0, [r5, #0]
 800c652:	6069      	str	r1, [r5, #4]
 800c654:	60aa      	str	r2, [r5, #8]
 800c656:	60eb      	str	r3, [r5, #12]
 800c658:	8823      	ldrh	r3, [r4, #0]
 800c65a:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800c65c:	687b      	ldr	r3, [r7, #4]
 800c65e:	33d8      	adds	r3, #216	; 0xd8
 800c660:	4a30      	ldr	r2, [pc, #192]	; (800c724 <createProblem+0xb87c>)
 800c662:	461c      	mov	r4, r3
 800c664:	4613      	mov	r3, r2
 800c666:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c668:	6020      	str	r0, [r4, #0]
 800c66a:	6061      	str	r1, [r4, #4]
 800c66c:	60a2      	str	r2, [r4, #8]
 800c66e:	881b      	ldrh	r3, [r3, #0]
 800c670:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 800c672:	687b      	ldr	r3, [r7, #4]
 800c674:	33cc      	adds	r3, #204	; 0xcc
 800c676:	4a27      	ldr	r2, [pc, #156]	; (800c714 <createProblem+0xb86c>)
 800c678:	8811      	ldrh	r1, [r2, #0]
 800c67a:	7892      	ldrb	r2, [r2, #2]
 800c67c:	8019      	strh	r1, [r3, #0]
 800c67e:	709a      	strb	r2, [r3, #2]
			break;
 800c680:	f00e b958 	b.w	801a934 <createProblem+0x19a8c>
		case 410 :
			strcpy(p->name,"RASTAMAN");
 800c684:	687b      	ldr	r3, [r7, #4]
 800c686:	337c      	adds	r3, #124	; 0x7c
 800c688:	4932      	ldr	r1, [pc, #200]	; (800c754 <createProblem+0xb8ac>)
 800c68a:	461a      	mov	r2, r3
 800c68c:	460b      	mov	r3, r1
 800c68e:	cb03      	ldmia	r3!, {r0, r1}
 800c690:	6010      	str	r0, [r2, #0]
 800c692:	6051      	str	r1, [r2, #4]
 800c694:	781b      	ldrb	r3, [r3, #0]
 800c696:	7213      	strb	r3, [r2, #8]
			p->moveSize = 7;
 800c698:	687b      	ldr	r3, [r7, #4]
 800c69a:	2207      	movs	r2, #7
 800c69c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,F,C,E,A");
 800c69e:	687b      	ldr	r3, [r7, #4]
 800c6a0:	3340      	adds	r3, #64	; 0x40
 800c6a2:	4a2d      	ldr	r2, [pc, #180]	; (800c758 <createProblem+0xb8b0>)
 800c6a4:	461c      	mov	r4, r3
 800c6a6:	4613      	mov	r3, r2
 800c6a8:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c6aa:	6020      	str	r0, [r4, #0]
 800c6ac:	6061      	str	r1, [r4, #4]
 800c6ae:	60a2      	str	r2, [r4, #8]
 800c6b0:	881b      	ldrh	r3, [r3, #0]
 800c6b2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,8,11,13,16,18");
 800c6b4:	687b      	ldr	r3, [r7, #4]
 800c6b6:	3304      	adds	r3, #4
 800c6b8:	4a28      	ldr	r2, [pc, #160]	; (800c75c <createProblem+0xb8b4>)
 800c6ba:	461d      	mov	r5, r3
 800c6bc:	4614      	mov	r4, r2
 800c6be:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c6c0:	6028      	str	r0, [r5, #0]
 800c6c2:	6069      	str	r1, [r5, #4]
 800c6c4:	60aa      	str	r2, [r5, #8]
 800c6c6:	60eb      	str	r3, [r5, #12]
 800c6c8:	8823      	ldrh	r3, [r4, #0]
 800c6ca:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800c6cc:	687b      	ldr	r3, [r7, #4]
 800c6ce:	33d8      	adds	r3, #216	; 0xd8
 800c6d0:	4a0f      	ldr	r2, [pc, #60]	; (800c710 <createProblem+0xb868>)
 800c6d2:	461c      	mov	r4, r3
 800c6d4:	4613      	mov	r3, r2
 800c6d6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c6d8:	6020      	str	r0, [r4, #0]
 800c6da:	6061      	str	r1, [r4, #4]
 800c6dc:	60a2      	str	r2, [r4, #8]
 800c6de:	881b      	ldrh	r3, [r3, #0]
 800c6e0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800c6e2:	687b      	ldr	r3, [r7, #4]
 800c6e4:	33cc      	adds	r3, #204	; 0xcc
 800c6e6:	4a10      	ldr	r2, [pc, #64]	; (800c728 <createProblem+0xb880>)
 800c6e8:	6810      	ldr	r0, [r2, #0]
 800c6ea:	6018      	str	r0, [r3, #0]
			break;
 800c6ec:	f00e b922 	b.w	801a934 <createProblem+0x19a8c>
 800c6f0:	080248b8 	.word	0x080248b8
 800c6f4:	080248cc 	.word	0x080248cc
 800c6f8:	080248d8 	.word	0x080248d8
 800c6fc:	0802091c 	.word	0x0802091c
 800c700:	080208f0 	.word	0x080208f0
 800c704:	080248e8 	.word	0x080248e8
 800c708:	080248f0 	.word	0x080248f0
 800c70c:	08024900 	.word	0x08024900
 800c710:	08020a14 	.word	0x08020a14
 800c714:	08020874 	.word	0x08020874
 800c718:	08024914 	.word	0x08024914
 800c71c:	08023314 	.word	0x08023314
 800c720:	08024920 	.word	0x08024920
 800c724:	08020820 	.word	0x08020820
 800c728:	08020830 	.word	0x08020830
 800c72c:	08024934 	.word	0x08024934
 800c730:	08024940 	.word	0x08024940
 800c734:	08024954 	.word	0x08024954
 800c738:	08020dfc 	.word	0x08020dfc
 800c73c:	0802496c 	.word	0x0802496c
 800c740:	0802497c 	.word	0x0802497c
 800c744:	0802498c 	.word	0x0802498c
 800c748:	080249a0 	.word	0x080249a0
 800c74c:	080249b4 	.word	0x080249b4
 800c750:	080249c4 	.word	0x080249c4
 800c754:	080249d8 	.word	0x080249d8
 800c758:	080249e4 	.word	0x080249e4
 800c75c:	08022a4c 	.word	0x08022a4c
		case 411 :
			strcpy(p->name,"ONE LINE");
 800c760:	687b      	ldr	r3, [r7, #4]
 800c762:	337c      	adds	r3, #124	; 0x7c
 800c764:	49b9      	ldr	r1, [pc, #740]	; (800ca4c <createProblem+0xbba4>)
 800c766:	461a      	mov	r2, r3
 800c768:	460b      	mov	r3, r1
 800c76a:	cb03      	ldmia	r3!, {r0, r1}
 800c76c:	6010      	str	r0, [r2, #0]
 800c76e:	6051      	str	r1, [r2, #4]
 800c770:	781b      	ldrb	r3, [r3, #0]
 800c772:	7213      	strb	r3, [r2, #8]
			p->moveSize = 8;
 800c774:	687b      	ldr	r3, [r7, #4]
 800c776:	2208      	movs	r2, #8
 800c778:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,H,K,E,I,J,I");
 800c77a:	687b      	ldr	r3, [r7, #4]
 800c77c:	3340      	adds	r3, #64	; 0x40
 800c77e:	4ab4      	ldr	r2, [pc, #720]	; (800ca50 <createProblem+0xbba8>)
 800c780:	461c      	mov	r4, r3
 800c782:	4615      	mov	r5, r2
 800c784:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c786:	6020      	str	r0, [r4, #0]
 800c788:	6061      	str	r1, [r4, #4]
 800c78a:	60a2      	str	r2, [r4, #8]
 800c78c:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,12,16,9,9,5,18");
 800c78e:	687b      	ldr	r3, [r7, #4]
 800c790:	3304      	adds	r3, #4
 800c792:	4ab0      	ldr	r2, [pc, #704]	; (800ca54 <createProblem+0xbbac>)
 800c794:	461d      	mov	r5, r3
 800c796:	4614      	mov	r4, r2
 800c798:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c79a:	6028      	str	r0, [r5, #0]
 800c79c:	6069      	str	r1, [r5, #4]
 800c79e:	60aa      	str	r2, [r5, #8]
 800c7a0:	60eb      	str	r3, [r5, #12]
 800c7a2:	8823      	ldrh	r3, [r4, #0]
 800c7a4:	78a2      	ldrb	r2, [r4, #2]
 800c7a6:	822b      	strh	r3, [r5, #16]
 800c7a8:	4613      	mov	r3, r2
 800c7aa:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800c7ac:	687b      	ldr	r3, [r7, #4]
 800c7ae:	33d8      	adds	r3, #216	; 0xd8
 800c7b0:	4aa9      	ldr	r2, [pc, #676]	; (800ca58 <createProblem+0xbbb0>)
 800c7b2:	461c      	mov	r4, r3
 800c7b4:	4615      	mov	r5, r2
 800c7b6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c7b8:	6020      	str	r0, [r4, #0]
 800c7ba:	6061      	str	r1, [r4, #4]
 800c7bc:	60a2      	str	r2, [r4, #8]
 800c7be:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 800c7c0:	687b      	ldr	r3, [r7, #4]
 800c7c2:	33cc      	adds	r3, #204	; 0xcc
 800c7c4:	4aa5      	ldr	r2, [pc, #660]	; (800ca5c <createProblem+0xbbb4>)
 800c7c6:	6810      	ldr	r0, [r2, #0]
 800c7c8:	6018      	str	r0, [r3, #0]
			break;
 800c7ca:	f00e b8b3 	b.w	801a934 <createProblem+0x19a8c>
		case 412 :
			strcpy(p->name,"PINCHY PINCH");
 800c7ce:	687b      	ldr	r3, [r7, #4]
 800c7d0:	337c      	adds	r3, #124	; 0x7c
 800c7d2:	4aa3      	ldr	r2, [pc, #652]	; (800ca60 <createProblem+0xbbb8>)
 800c7d4:	461c      	mov	r4, r3
 800c7d6:	4613      	mov	r3, r2
 800c7d8:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c7da:	6020      	str	r0, [r4, #0]
 800c7dc:	6061      	str	r1, [r4, #4]
 800c7de:	60a2      	str	r2, [r4, #8]
 800c7e0:	781b      	ldrb	r3, [r3, #0]
 800c7e2:	7323      	strb	r3, [r4, #12]
			p->moveSize = 7;
 800c7e4:	687b      	ldr	r3, [r7, #4]
 800c7e6:	2207      	movs	r2, #7
 800c7e8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,C,F,C,D,A");
 800c7ea:	687b      	ldr	r3, [r7, #4]
 800c7ec:	3340      	adds	r3, #64	; 0x40
 800c7ee:	4a9d      	ldr	r2, [pc, #628]	; (800ca64 <createProblem+0xbbbc>)
 800c7f0:	461c      	mov	r4, r3
 800c7f2:	4613      	mov	r3, r2
 800c7f4:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c7f6:	6020      	str	r0, [r4, #0]
 800c7f8:	6061      	str	r1, [r4, #4]
 800c7fa:	60a2      	str	r2, [r4, #8]
 800c7fc:	881b      	ldrh	r3, [r3, #0]
 800c7fe:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,8,11,13,15,18");
 800c800:	687b      	ldr	r3, [r7, #4]
 800c802:	3304      	adds	r3, #4
 800c804:	4a98      	ldr	r2, [pc, #608]	; (800ca68 <createProblem+0xbbc0>)
 800c806:	461d      	mov	r5, r3
 800c808:	4614      	mov	r4, r2
 800c80a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c80c:	6028      	str	r0, [r5, #0]
 800c80e:	6069      	str	r1, [r5, #4]
 800c810:	60aa      	str	r2, [r5, #8]
 800c812:	60eb      	str	r3, [r5, #12]
 800c814:	8823      	ldrh	r3, [r4, #0]
 800c816:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800c818:	687b      	ldr	r3, [r7, #4]
 800c81a:	33d8      	adds	r3, #216	; 0xd8
 800c81c:	4a93      	ldr	r2, [pc, #588]	; (800ca6c <createProblem+0xbbc4>)
 800c81e:	461c      	mov	r4, r3
 800c820:	4613      	mov	r3, r2
 800c822:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c824:	6020      	str	r0, [r4, #0]
 800c826:	6061      	str	r1, [r4, #4]
 800c828:	60a2      	str	r2, [r4, #8]
 800c82a:	881b      	ldrh	r3, [r3, #0]
 800c82c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 800c82e:	687b      	ldr	r3, [r7, #4]
 800c830:	33cc      	adds	r3, #204	; 0xcc
 800c832:	4a8f      	ldr	r2, [pc, #572]	; (800ca70 <createProblem+0xbbc8>)
 800c834:	6810      	ldr	r0, [r2, #0]
 800c836:	6018      	str	r0, [r3, #0]
			break;
 800c838:	f00e b87c 	b.w	801a934 <createProblem+0x19a8c>
		case 413 :
			strcpy(p->name,"SOFT LIKE BUTTER");
 800c83c:	687b      	ldr	r3, [r7, #4]
 800c83e:	337c      	adds	r3, #124	; 0x7c
 800c840:	4a8c      	ldr	r2, [pc, #560]	; (800ca74 <createProblem+0xbbcc>)
 800c842:	461d      	mov	r5, r3
 800c844:	4614      	mov	r4, r2
 800c846:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c848:	6028      	str	r0, [r5, #0]
 800c84a:	6069      	str	r1, [r5, #4]
 800c84c:	60aa      	str	r2, [r5, #8]
 800c84e:	60eb      	str	r3, [r5, #12]
 800c850:	7823      	ldrb	r3, [r4, #0]
 800c852:	742b      	strb	r3, [r5, #16]
			p->moveSize = 8;
 800c854:	687b      	ldr	r3, [r7, #4]
 800c856:	2208      	movs	r2, #8
 800c858:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,I,H,J,E,G,D");
 800c85a:	687b      	ldr	r3, [r7, #4]
 800c85c:	3340      	adds	r3, #64	; 0x40
 800c85e:	4a86      	ldr	r2, [pc, #536]	; (800ca78 <createProblem+0xbbd0>)
 800c860:	461c      	mov	r4, r3
 800c862:	4615      	mov	r5, r2
 800c864:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c866:	6020      	str	r0, [r4, #0]
 800c868:	6061      	str	r1, [r4, #4]
 800c86a:	60a2      	str	r2, [r4, #8]
 800c86c:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,10,12,13,14,17,18");
 800c86e:	687b      	ldr	r3, [r7, #4]
 800c870:	3304      	adds	r3, #4
 800c872:	4a82      	ldr	r2, [pc, #520]	; (800ca7c <createProblem+0xbbd4>)
 800c874:	461d      	mov	r5, r3
 800c876:	4614      	mov	r4, r2
 800c878:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c87a:	6028      	str	r0, [r5, #0]
 800c87c:	6069      	str	r1, [r5, #4]
 800c87e:	60aa      	str	r2, [r5, #8]
 800c880:	60eb      	str	r3, [r5, #12]
 800c882:	6820      	ldr	r0, [r4, #0]
 800c884:	6128      	str	r0, [r5, #16]
 800c886:	88a3      	ldrh	r3, [r4, #4]
 800c888:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 800c88a:	687b      	ldr	r3, [r7, #4]
 800c88c:	33d8      	adds	r3, #216	; 0xd8
 800c88e:	4a7c      	ldr	r2, [pc, #496]	; (800ca80 <createProblem+0xbbd8>)
 800c890:	461c      	mov	r4, r3
 800c892:	4615      	mov	r5, r2
 800c894:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c896:	6020      	str	r0, [r4, #0]
 800c898:	6061      	str	r1, [r4, #4]
 800c89a:	60a2      	str	r2, [r4, #8]
 800c89c:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 800c89e:	687b      	ldr	r3, [r7, #4]
 800c8a0:	33cc      	adds	r3, #204	; 0xcc
 800c8a2:	4a78      	ldr	r2, [pc, #480]	; (800ca84 <createProblem+0xbbdc>)
 800c8a4:	8811      	ldrh	r1, [r2, #0]
 800c8a6:	7892      	ldrb	r2, [r2, #2]
 800c8a8:	8019      	strh	r1, [r3, #0]
 800c8aa:	709a      	strb	r2, [r3, #2]
			break;
 800c8ac:	f00e b842 	b.w	801a934 <createProblem+0x19a8c>
		case 414 :
			strcpy(p->name,"LE VOYAGE");
 800c8b0:	687b      	ldr	r3, [r7, #4]
 800c8b2:	337c      	adds	r3, #124	; 0x7c
 800c8b4:	4974      	ldr	r1, [pc, #464]	; (800ca88 <createProblem+0xbbe0>)
 800c8b6:	461a      	mov	r2, r3
 800c8b8:	460b      	mov	r3, r1
 800c8ba:	cb03      	ldmia	r3!, {r0, r1}
 800c8bc:	6010      	str	r0, [r2, #0]
 800c8be:	6051      	str	r1, [r2, #4]
 800c8c0:	881b      	ldrh	r3, [r3, #0]
 800c8c2:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 800c8c4:	687b      	ldr	r3, [r7, #4]
 800c8c6:	2206      	movs	r2, #6
 800c8c8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,E,A,C,D");
 800c8ca:	687b      	ldr	r3, [r7, #4]
 800c8cc:	3340      	adds	r3, #64	; 0x40
 800c8ce:	4a6f      	ldr	r2, [pc, #444]	; (800ca8c <createProblem+0xbbe4>)
 800c8d0:	461c      	mov	r4, r3
 800c8d2:	4613      	mov	r3, r2
 800c8d4:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c8d6:	6020      	str	r0, [r4, #0]
 800c8d8:	6061      	str	r1, [r4, #4]
 800c8da:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,12,14,8,18");
 800c8dc:	687b      	ldr	r3, [r7, #4]
 800c8de:	3304      	adds	r3, #4
 800c8e0:	4a6b      	ldr	r2, [pc, #428]	; (800ca90 <createProblem+0xbbe8>)
 800c8e2:	461c      	mov	r4, r3
 800c8e4:	4613      	mov	r3, r2
 800c8e6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c8e8:	6020      	str	r0, [r4, #0]
 800c8ea:	6061      	str	r1, [r4, #4]
 800c8ec:	60a2      	str	r2, [r4, #8]
 800c8ee:	881a      	ldrh	r2, [r3, #0]
 800c8f0:	789b      	ldrb	r3, [r3, #2]
 800c8f2:	81a2      	strh	r2, [r4, #12]
 800c8f4:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800c8f6:	687b      	ldr	r3, [r7, #4]
 800c8f8:	33d8      	adds	r3, #216	; 0xd8
 800c8fa:	4a66      	ldr	r2, [pc, #408]	; (800ca94 <createProblem+0xbbec>)
 800c8fc:	461c      	mov	r4, r3
 800c8fe:	4613      	mov	r3, r2
 800c900:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c902:	6020      	str	r0, [r4, #0]
 800c904:	6061      	str	r1, [r4, #4]
 800c906:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 800c908:	687b      	ldr	r3, [r7, #4]
 800c90a:	33cc      	adds	r3, #204	; 0xcc
 800c90c:	4a5d      	ldr	r2, [pc, #372]	; (800ca84 <createProblem+0xbbdc>)
 800c90e:	8811      	ldrh	r1, [r2, #0]
 800c910:	7892      	ldrb	r2, [r2, #2]
 800c912:	8019      	strh	r1, [r3, #0]
 800c914:	709a      	strb	r2, [r3, #2]
			break;
 800c916:	f00e b80d 	b.w	801a934 <createProblem+0x19a8c>
		case 415 :
			strcpy(p->name,"SPAIN IN VAIN");
 800c91a:	687b      	ldr	r3, [r7, #4]
 800c91c:	337c      	adds	r3, #124	; 0x7c
 800c91e:	4a5e      	ldr	r2, [pc, #376]	; (800ca98 <createProblem+0xbbf0>)
 800c920:	461c      	mov	r4, r3
 800c922:	4613      	mov	r3, r2
 800c924:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c926:	6020      	str	r0, [r4, #0]
 800c928:	6061      	str	r1, [r4, #4]
 800c92a:	60a2      	str	r2, [r4, #8]
 800c92c:	881b      	ldrh	r3, [r3, #0]
 800c92e:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 800c930:	687b      	ldr	r3, [r7, #4]
 800c932:	2206      	movs	r2, #6
 800c934:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,F,E,A,D");
 800c936:	687b      	ldr	r3, [r7, #4]
 800c938:	3340      	adds	r3, #64	; 0x40
 800c93a:	4a58      	ldr	r2, [pc, #352]	; (800ca9c <createProblem+0xbbf4>)
 800c93c:	461c      	mov	r4, r3
 800c93e:	4613      	mov	r3, r2
 800c940:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c942:	6020      	str	r0, [r4, #0]
 800c944:	6061      	str	r1, [r4, #4]
 800c946:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,11,12,14,18");
 800c948:	687b      	ldr	r3, [r7, #4]
 800c94a:	3304      	adds	r3, #4
 800c94c:	4a54      	ldr	r2, [pc, #336]	; (800caa0 <createProblem+0xbbf8>)
 800c94e:	461c      	mov	r4, r3
 800c950:	4615      	mov	r5, r2
 800c952:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800c954:	6020      	str	r0, [r4, #0]
 800c956:	6061      	str	r1, [r4, #4]
 800c958:	60a2      	str	r2, [r4, #8]
 800c95a:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800c95c:	687b      	ldr	r3, [r7, #4]
 800c95e:	33d8      	adds	r3, #216	; 0xd8
 800c960:	4a4c      	ldr	r2, [pc, #304]	; (800ca94 <createProblem+0xbbec>)
 800c962:	461c      	mov	r4, r3
 800c964:	4613      	mov	r3, r2
 800c966:	cb07      	ldmia	r3!, {r0, r1, r2}
 800c968:	6020      	str	r0, [r4, #0]
 800c96a:	6061      	str	r1, [r4, #4]
 800c96c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 800c96e:	687b      	ldr	r3, [r7, #4]
 800c970:	33cc      	adds	r3, #204	; 0xcc
 800c972:	4a4c      	ldr	r2, [pc, #304]	; (800caa4 <createProblem+0xbbfc>)
 800c974:	8811      	ldrh	r1, [r2, #0]
 800c976:	7892      	ldrb	r2, [r2, #2]
 800c978:	8019      	strh	r1, [r3, #0]
 800c97a:	709a      	strb	r2, [r3, #2]
			break;
 800c97c:	f00d bfda 	b.w	801a934 <createProblem+0x19a8c>
		case 416 :
			strcpy(p->name,"CHIVAS");
 800c980:	687b      	ldr	r3, [r7, #4]
 800c982:	337c      	adds	r3, #124	; 0x7c
 800c984:	4a48      	ldr	r2, [pc, #288]	; (800caa8 <createProblem+0xbc00>)
 800c986:	6810      	ldr	r0, [r2, #0]
 800c988:	6018      	str	r0, [r3, #0]
 800c98a:	8891      	ldrh	r1, [r2, #4]
 800c98c:	7992      	ldrb	r2, [r2, #6]
 800c98e:	8099      	strh	r1, [r3, #4]
 800c990:	719a      	strb	r2, [r3, #6]
			p->moveSize = 4;
 800c992:	687b      	ldr	r3, [r7, #4]
 800c994:	2204      	movs	r2, #4
 800c996:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,F,A,A");
 800c998:	687b      	ldr	r3, [r7, #4]
 800c99a:	3340      	adds	r3, #64	; 0x40
 800c99c:	4943      	ldr	r1, [pc, #268]	; (800caac <createProblem+0xbc04>)
 800c99e:	461a      	mov	r2, r3
 800c9a0:	460b      	mov	r3, r1
 800c9a2:	cb03      	ldmia	r3!, {r0, r1}
 800c9a4:	6010      	str	r0, [r2, #0]
 800c9a6:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"6,11,14,18");
 800c9a8:	687b      	ldr	r3, [r7, #4]
 800c9aa:	3304      	adds	r3, #4
 800c9ac:	4940      	ldr	r1, [pc, #256]	; (800cab0 <createProblem+0xbc08>)
 800c9ae:	461a      	mov	r2, r3
 800c9b0:	460b      	mov	r3, r1
 800c9b2:	cb03      	ldmia	r3!, {r0, r1}
 800c9b4:	6010      	str	r0, [r2, #0]
 800c9b6:	6051      	str	r1, [r2, #4]
 800c9b8:	8819      	ldrh	r1, [r3, #0]
 800c9ba:	789b      	ldrb	r3, [r3, #2]
 800c9bc:	8111      	strh	r1, [r2, #8]
 800c9be:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 800c9c0:	687b      	ldr	r3, [r7, #4]
 800c9c2:	33d8      	adds	r3, #216	; 0xd8
 800c9c4:	493b      	ldr	r1, [pc, #236]	; (800cab4 <createProblem+0xbc0c>)
 800c9c6:	461a      	mov	r2, r3
 800c9c8:	460b      	mov	r3, r1
 800c9ca:	cb03      	ldmia	r3!, {r0, r1}
 800c9cc:	6010      	str	r0, [r2, #0]
 800c9ce:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7B");
 800c9d0:	687b      	ldr	r3, [r7, #4]
 800c9d2:	33cc      	adds	r3, #204	; 0xcc
 800c9d4:	4a38      	ldr	r2, [pc, #224]	; (800cab8 <createProblem+0xbc10>)
 800c9d6:	8811      	ldrh	r1, [r2, #0]
 800c9d8:	7892      	ldrb	r2, [r2, #2]
 800c9da:	8019      	strh	r1, [r3, #0]
 800c9dc:	709a      	strb	r2, [r3, #2]
			break;
 800c9de:	f00d bfa9 	b.w	801a934 <createProblem+0x19a8c>
		case 417 :
			strcpy(p->name,"REACH FOR THE SKY");
 800c9e2:	687b      	ldr	r3, [r7, #4]
 800c9e4:	337c      	adds	r3, #124	; 0x7c
 800c9e6:	4a35      	ldr	r2, [pc, #212]	; (800cabc <createProblem+0xbc14>)
 800c9e8:	461d      	mov	r5, r3
 800c9ea:	4614      	mov	r4, r2
 800c9ec:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800c9ee:	6028      	str	r0, [r5, #0]
 800c9f0:	6069      	str	r1, [r5, #4]
 800c9f2:	60aa      	str	r2, [r5, #8]
 800c9f4:	60eb      	str	r3, [r5, #12]
 800c9f6:	8823      	ldrh	r3, [r4, #0]
 800c9f8:	822b      	strh	r3, [r5, #16]
			p->moveSize = 5;
 800c9fa:	687b      	ldr	r3, [r7, #4]
 800c9fc:	2205      	movs	r2, #5
 800c9fe:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,G,C,D");
 800ca00:	687b      	ldr	r3, [r7, #4]
 800ca02:	3340      	adds	r3, #64	; 0x40
 800ca04:	492e      	ldr	r1, [pc, #184]	; (800cac0 <createProblem+0xbc18>)
 800ca06:	461a      	mov	r2, r3
 800ca08:	460b      	mov	r3, r1
 800ca0a:	cb03      	ldmia	r3!, {r0, r1}
 800ca0c:	6010      	str	r0, [r2, #0]
 800ca0e:	6051      	str	r1, [r2, #4]
 800ca10:	881b      	ldrh	r3, [r3, #0]
 800ca12:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,9,13,18");
 800ca14:	687b      	ldr	r3, [r7, #4]
 800ca16:	3304      	adds	r3, #4
 800ca18:	4a2a      	ldr	r2, [pc, #168]	; (800cac4 <createProblem+0xbc1c>)
 800ca1a:	461c      	mov	r4, r3
 800ca1c:	4613      	mov	r3, r2
 800ca1e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ca20:	6020      	str	r0, [r4, #0]
 800ca22:	6061      	str	r1, [r4, #4]
 800ca24:	60a2      	str	r2, [r4, #8]
			strcpy(p->startFinish, "s,d,d,d,e");
 800ca26:	687b      	ldr	r3, [r7, #4]
 800ca28:	33d8      	adds	r3, #216	; 0xd8
 800ca2a:	4927      	ldr	r1, [pc, #156]	; (800cac8 <createProblem+0xbc20>)
 800ca2c:	461a      	mov	r2, r3
 800ca2e:	460b      	mov	r3, r1
 800ca30:	cb03      	ldmia	r3!, {r0, r1}
 800ca32:	6010      	str	r0, [r2, #0]
 800ca34:	6051      	str	r1, [r2, #4]
 800ca36:	881b      	ldrh	r3, [r3, #0]
 800ca38:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 800ca3a:	687b      	ldr	r3, [r7, #4]
 800ca3c:	33cc      	adds	r3, #204	; 0xcc
 800ca3e:	4a19      	ldr	r2, [pc, #100]	; (800caa4 <createProblem+0xbbfc>)
 800ca40:	8811      	ldrh	r1, [r2, #0]
 800ca42:	7892      	ldrb	r2, [r2, #2]
 800ca44:	8019      	strh	r1, [r3, #0]
 800ca46:	709a      	strb	r2, [r3, #2]
			break;
 800ca48:	f00d bf74 	b.w	801a934 <createProblem+0x19a8c>
 800ca4c:	080249f4 	.word	0x080249f4
 800ca50:	08024594 	.word	0x08024594
 800ca54:	08024a00 	.word	0x08024a00
 800ca58:	08020a4c 	.word	0x08020a4c
 800ca5c:	080209a4 	.word	0x080209a4
 800ca60:	08024a14 	.word	0x08024a14
 800ca64:	08024a24 	.word	0x08024a24
 800ca68:	08021d9c 	.word	0x08021d9c
 800ca6c:	08020a14 	.word	0x08020a14
 800ca70:	08020928 	.word	0x08020928
 800ca74:	08024a34 	.word	0x08024a34
 800ca78:	08024a48 	.word	0x08024a48
 800ca7c:	08024a58 	.word	0x08024a58
 800ca80:	080209d8 	.word	0x080209d8
 800ca84:	080208f0 	.word	0x080208f0
 800ca88:	08024a70 	.word	0x08024a70
 800ca8c:	08024a7c 	.word	0x08024a7c
 800ca90:	08024a88 	.word	0x08024a88
 800ca94:	0802091c 	.word	0x0802091c
 800ca98:	08024a98 	.word	0x08024a98
 800ca9c:	08024aa8 	.word	0x08024aa8
 800caa0:	08024ab4 	.word	0x08024ab4
 800caa4:	08020874 	.word	0x08020874
 800caa8:	08024ac4 	.word	0x08024ac4
 800caac:	08024acc 	.word	0x08024acc
 800cab0:	08024ad4 	.word	0x08024ad4
 800cab4:	080215a8 	.word	0x080215a8
 800cab8:	080208ac 	.word	0x080208ac
 800cabc:	08024ae0 	.word	0x08024ae0
 800cac0:	08024af4 	.word	0x08024af4
 800cac4:	08024b00 	.word	0x08024b00
 800cac8:	080208a0 	.word	0x080208a0
		case 418 :
			strcpy(p->name,"BO");
 800cacc:	687b      	ldr	r3, [r7, #4]
 800cace:	337c      	adds	r3, #124	; 0x7c
 800cad0:	4aa8      	ldr	r2, [pc, #672]	; (800cd74 <createProblem+0xbecc>)
 800cad2:	8811      	ldrh	r1, [r2, #0]
 800cad4:	7892      	ldrb	r2, [r2, #2]
 800cad6:	8019      	strh	r1, [r3, #0]
 800cad8:	709a      	strb	r2, [r3, #2]
			p->moveSize = 4;
 800cada:	687b      	ldr	r3, [r7, #4]
 800cadc:	2204      	movs	r2, #4
 800cade:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,I,G,I");
 800cae0:	687b      	ldr	r3, [r7, #4]
 800cae2:	3340      	adds	r3, #64	; 0x40
 800cae4:	49a4      	ldr	r1, [pc, #656]	; (800cd78 <createProblem+0xbed0>)
 800cae6:	461a      	mov	r2, r3
 800cae8:	460b      	mov	r3, r1
 800caea:	cb03      	ldmia	r3!, {r0, r1}
 800caec:	6010      	str	r0, [r2, #0]
 800caee:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"6,10,14,18");
 800caf0:	687b      	ldr	r3, [r7, #4]
 800caf2:	3304      	adds	r3, #4
 800caf4:	49a1      	ldr	r1, [pc, #644]	; (800cd7c <createProblem+0xbed4>)
 800caf6:	461a      	mov	r2, r3
 800caf8:	460b      	mov	r3, r1
 800cafa:	cb03      	ldmia	r3!, {r0, r1}
 800cafc:	6010      	str	r0, [r2, #0]
 800cafe:	6051      	str	r1, [r2, #4]
 800cb00:	8819      	ldrh	r1, [r3, #0]
 800cb02:	789b      	ldrb	r3, [r3, #2]
 800cb04:	8111      	strh	r1, [r2, #8]
 800cb06:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 800cb08:	687b      	ldr	r3, [r7, #4]
 800cb0a:	33d8      	adds	r3, #216	; 0xd8
 800cb0c:	499c      	ldr	r1, [pc, #624]	; (800cd80 <createProblem+0xbed8>)
 800cb0e:	461a      	mov	r2, r3
 800cb10:	460b      	mov	r3, r1
 800cb12:	cb03      	ldmia	r3!, {r0, r1}
 800cb14:	6010      	str	r0, [r2, #0]
 800cb16:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "6C+");
 800cb18:	687b      	ldr	r3, [r7, #4]
 800cb1a:	33cc      	adds	r3, #204	; 0xcc
 800cb1c:	4a99      	ldr	r2, [pc, #612]	; (800cd84 <createProblem+0xbedc>)
 800cb1e:	6810      	ldr	r0, [r2, #0]
 800cb20:	6018      	str	r0, [r3, #0]
			break;
 800cb22:	f00d bf07 	b.w	801a934 <createProblem+0x19a8c>
		case 419 :
			strcpy(p->name,"BAMBA");
 800cb26:	687b      	ldr	r3, [r7, #4]
 800cb28:	337c      	adds	r3, #124	; 0x7c
 800cb2a:	4a97      	ldr	r2, [pc, #604]	; (800cd88 <createProblem+0xbee0>)
 800cb2c:	6810      	ldr	r0, [r2, #0]
 800cb2e:	6018      	str	r0, [r3, #0]
 800cb30:	8892      	ldrh	r2, [r2, #4]
 800cb32:	809a      	strh	r2, [r3, #4]
			p->moveSize = 5;
 800cb34:	687b      	ldr	r3, [r7, #4]
 800cb36:	2205      	movs	r2, #5
 800cb38:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,I,E,D");
 800cb3a:	687b      	ldr	r3, [r7, #4]
 800cb3c:	3340      	adds	r3, #64	; 0x40
 800cb3e:	4993      	ldr	r1, [pc, #588]	; (800cd8c <createProblem+0xbee4>)
 800cb40:	461a      	mov	r2, r3
 800cb42:	460b      	mov	r3, r1
 800cb44:	cb03      	ldmia	r3!, {r0, r1}
 800cb46:	6010      	str	r0, [r2, #0]
 800cb48:	6051      	str	r1, [r2, #4]
 800cb4a:	881b      	ldrh	r3, [r3, #0]
 800cb4c:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,14,16,18");
 800cb4e:	687b      	ldr	r3, [r7, #4]
 800cb50:	3304      	adds	r3, #4
 800cb52:	4a8f      	ldr	r2, [pc, #572]	; (800cd90 <createProblem+0xbee8>)
 800cb54:	461c      	mov	r4, r3
 800cb56:	4613      	mov	r3, r2
 800cb58:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cb5a:	6020      	str	r0, [r4, #0]
 800cb5c:	6061      	str	r1, [r4, #4]
 800cb5e:	60a2      	str	r2, [r4, #8]
 800cb60:	881b      	ldrh	r3, [r3, #0]
 800cb62:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800cb64:	687b      	ldr	r3, [r7, #4]
 800cb66:	33d8      	adds	r3, #216	; 0xd8
 800cb68:	498a      	ldr	r1, [pc, #552]	; (800cd94 <createProblem+0xbeec>)
 800cb6a:	461a      	mov	r2, r3
 800cb6c:	460b      	mov	r3, r1
 800cb6e:	cb03      	ldmia	r3!, {r0, r1}
 800cb70:	6010      	str	r0, [r2, #0]
 800cb72:	6051      	str	r1, [r2, #4]
 800cb74:	881b      	ldrh	r3, [r3, #0]
 800cb76:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C");
 800cb78:	687b      	ldr	r3, [r7, #4]
 800cb7a:	33cc      	adds	r3, #204	; 0xcc
 800cb7c:	4a86      	ldr	r2, [pc, #536]	; (800cd98 <createProblem+0xbef0>)
 800cb7e:	8811      	ldrh	r1, [r2, #0]
 800cb80:	7892      	ldrb	r2, [r2, #2]
 800cb82:	8019      	strh	r1, [r3, #0]
 800cb84:	709a      	strb	r2, [r3, #2]
			break;
 800cb86:	f00d bed5 	b.w	801a934 <createProblem+0x19a8c>
		case 42 :
			strcpy(p->name,"SUBMARINE");
 800cb8a:	687b      	ldr	r3, [r7, #4]
 800cb8c:	337c      	adds	r3, #124	; 0x7c
 800cb8e:	4983      	ldr	r1, [pc, #524]	; (800cd9c <createProblem+0xbef4>)
 800cb90:	461a      	mov	r2, r3
 800cb92:	460b      	mov	r3, r1
 800cb94:	cb03      	ldmia	r3!, {r0, r1}
 800cb96:	6010      	str	r0, [r2, #0]
 800cb98:	6051      	str	r1, [r2, #4]
 800cb9a:	881b      	ldrh	r3, [r3, #0]
 800cb9c:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 800cb9e:	687b      	ldr	r3, [r7, #4]
 800cba0:	2206      	movs	r2, #6
 800cba2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,E,E,I,I");
 800cba4:	687b      	ldr	r3, [r7, #4]
 800cba6:	3340      	adds	r3, #64	; 0x40
 800cba8:	4a7d      	ldr	r2, [pc, #500]	; (800cda0 <createProblem+0xbef8>)
 800cbaa:	461c      	mov	r4, r3
 800cbac:	4613      	mov	r3, r2
 800cbae:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cbb0:	6020      	str	r0, [r4, #0]
 800cbb2:	6061      	str	r1, [r4, #4]
 800cbb4:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,12,14,15,18");
 800cbb6:	687b      	ldr	r3, [r7, #4]
 800cbb8:	3304      	adds	r3, #4
 800cbba:	4a7a      	ldr	r2, [pc, #488]	; (800cda4 <createProblem+0xbefc>)
 800cbbc:	461c      	mov	r4, r3
 800cbbe:	4615      	mov	r5, r2
 800cbc0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800cbc2:	6020      	str	r0, [r4, #0]
 800cbc4:	6061      	str	r1, [r4, #4]
 800cbc6:	60a2      	str	r2, [r4, #8]
 800cbc8:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800cbca:	687b      	ldr	r3, [r7, #4]
 800cbcc:	33d8      	adds	r3, #216	; 0xd8
 800cbce:	4a76      	ldr	r2, [pc, #472]	; (800cda8 <createProblem+0xbf00>)
 800cbd0:	461c      	mov	r4, r3
 800cbd2:	4613      	mov	r3, r2
 800cbd4:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cbd6:	6020      	str	r0, [r4, #0]
 800cbd8:	6061      	str	r1, [r4, #4]
 800cbda:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 800cbdc:	687b      	ldr	r3, [r7, #4]
 800cbde:	33cc      	adds	r3, #204	; 0xcc
 800cbe0:	4a72      	ldr	r2, [pc, #456]	; (800cdac <createProblem+0xbf04>)
 800cbe2:	6810      	ldr	r0, [r2, #0]
 800cbe4:	6018      	str	r0, [r3, #0]
			break;
 800cbe6:	f00d bea5 	b.w	801a934 <createProblem+0x19a8c>
		case 420 :
			strcpy(p->name,"JUMP MAN");
 800cbea:	687b      	ldr	r3, [r7, #4]
 800cbec:	337c      	adds	r3, #124	; 0x7c
 800cbee:	4970      	ldr	r1, [pc, #448]	; (800cdb0 <createProblem+0xbf08>)
 800cbf0:	461a      	mov	r2, r3
 800cbf2:	460b      	mov	r3, r1
 800cbf4:	cb03      	ldmia	r3!, {r0, r1}
 800cbf6:	6010      	str	r0, [r2, #0]
 800cbf8:	6051      	str	r1, [r2, #4]
 800cbfa:	781b      	ldrb	r3, [r3, #0]
 800cbfc:	7213      	strb	r3, [r2, #8]
			p->moveSize = 6;
 800cbfe:	687b      	ldr	r3, [r7, #4]
 800cc00:	2206      	movs	r2, #6
 800cc02:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,I,G,D,D");
 800cc04:	687b      	ldr	r3, [r7, #4]
 800cc06:	3340      	adds	r3, #64	; 0x40
 800cc08:	4a6a      	ldr	r2, [pc, #424]	; (800cdb4 <createProblem+0xbf0c>)
 800cc0a:	461c      	mov	r4, r3
 800cc0c:	4613      	mov	r3, r2
 800cc0e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cc10:	6020      	str	r0, [r4, #0]
 800cc12:	6061      	str	r1, [r4, #4]
 800cc14:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,10,9,15,15,18");
 800cc16:	687b      	ldr	r3, [r7, #4]
 800cc18:	3304      	adds	r3, #4
 800cc1a:	4a67      	ldr	r2, [pc, #412]	; (800cdb8 <createProblem+0xbf10>)
 800cc1c:	461c      	mov	r4, r3
 800cc1e:	4615      	mov	r5, r2
 800cc20:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800cc22:	6020      	str	r0, [r4, #0]
 800cc24:	6061      	str	r1, [r4, #4]
 800cc26:	60a2      	str	r2, [r4, #8]
 800cc28:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800cc2a:	687b      	ldr	r3, [r7, #4]
 800cc2c:	33d8      	adds	r3, #216	; 0xd8
 800cc2e:	4a5e      	ldr	r2, [pc, #376]	; (800cda8 <createProblem+0xbf00>)
 800cc30:	461c      	mov	r4, r3
 800cc32:	4613      	mov	r3, r2
 800cc34:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cc36:	6020      	str	r0, [r4, #0]
 800cc38:	6061      	str	r1, [r4, #4]
 800cc3a:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 800cc3c:	687b      	ldr	r3, [r7, #4]
 800cc3e:	33cc      	adds	r3, #204	; 0xcc
 800cc40:	4a5a      	ldr	r2, [pc, #360]	; (800cdac <createProblem+0xbf04>)
 800cc42:	6810      	ldr	r0, [r2, #0]
 800cc44:	6018      	str	r0, [r3, #0]
			break;
 800cc46:	f00d be75 	b.w	801a934 <createProblem+0x19a8c>
		case 421 :
			strcpy(p->name,"JUST JUMP AND PINCH");
 800cc4a:	687b      	ldr	r3, [r7, #4]
 800cc4c:	337c      	adds	r3, #124	; 0x7c
 800cc4e:	4a5b      	ldr	r2, [pc, #364]	; (800cdbc <createProblem+0xbf14>)
 800cc50:	461d      	mov	r5, r3
 800cc52:	4614      	mov	r4, r2
 800cc54:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800cc56:	6028      	str	r0, [r5, #0]
 800cc58:	6069      	str	r1, [r5, #4]
 800cc5a:	60aa      	str	r2, [r5, #8]
 800cc5c:	60eb      	str	r3, [r5, #12]
 800cc5e:	6820      	ldr	r0, [r4, #0]
 800cc60:	6128      	str	r0, [r5, #16]
			p->moveSize = 5;
 800cc62:	687b      	ldr	r3, [r7, #4]
 800cc64:	2205      	movs	r2, #5
 800cc66:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,F,A,D");
 800cc68:	687b      	ldr	r3, [r7, #4]
 800cc6a:	3340      	adds	r3, #64	; 0x40
 800cc6c:	4954      	ldr	r1, [pc, #336]	; (800cdc0 <createProblem+0xbf18>)
 800cc6e:	461a      	mov	r2, r3
 800cc70:	460b      	mov	r3, r1
 800cc72:	cb03      	ldmia	r3!, {r0, r1}
 800cc74:	6010      	str	r0, [r2, #0]
 800cc76:	6051      	str	r1, [r2, #4]
 800cc78:	881b      	ldrh	r3, [r3, #0]
 800cc7a:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,5,11,14,18");
 800cc7c:	687b      	ldr	r3, [r7, #4]
 800cc7e:	3304      	adds	r3, #4
 800cc80:	4a50      	ldr	r2, [pc, #320]	; (800cdc4 <createProblem+0xbf1c>)
 800cc82:	461c      	mov	r4, r3
 800cc84:	4613      	mov	r3, r2
 800cc86:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cc88:	6020      	str	r0, [r4, #0]
 800cc8a:	6061      	str	r1, [r4, #4]
 800cc8c:	60a2      	str	r2, [r4, #8]
 800cc8e:	781b      	ldrb	r3, [r3, #0]
 800cc90:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,e");
 800cc92:	687b      	ldr	r3, [r7, #4]
 800cc94:	33d8      	adds	r3, #216	; 0xd8
 800cc96:	494c      	ldr	r1, [pc, #304]	; (800cdc8 <createProblem+0xbf20>)
 800cc98:	461a      	mov	r2, r3
 800cc9a:	460b      	mov	r3, r1
 800cc9c:	cb03      	ldmia	r3!, {r0, r1}
 800cc9e:	6010      	str	r0, [r2, #0]
 800cca0:	6051      	str	r1, [r2, #4]
 800cca2:	881b      	ldrh	r3, [r3, #0]
 800cca4:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 800cca6:	687b      	ldr	r3, [r7, #4]
 800cca8:	33cc      	adds	r3, #204	; 0xcc
 800ccaa:	4a40      	ldr	r2, [pc, #256]	; (800cdac <createProblem+0xbf04>)
 800ccac:	6810      	ldr	r0, [r2, #0]
 800ccae:	6018      	str	r0, [r3, #0]
			break;
 800ccb0:	f00d be40 	b.w	801a934 <createProblem+0x19a8c>
		case 422 :
			strcpy(p->name,"REACHY");
 800ccb4:	687b      	ldr	r3, [r7, #4]
 800ccb6:	337c      	adds	r3, #124	; 0x7c
 800ccb8:	4a44      	ldr	r2, [pc, #272]	; (800cdcc <createProblem+0xbf24>)
 800ccba:	6810      	ldr	r0, [r2, #0]
 800ccbc:	6018      	str	r0, [r3, #0]
 800ccbe:	8891      	ldrh	r1, [r2, #4]
 800ccc0:	7992      	ldrb	r2, [r2, #6]
 800ccc2:	8099      	strh	r1, [r3, #4]
 800ccc4:	719a      	strb	r2, [r3, #6]
			p->moveSize = 6;
 800ccc6:	687b      	ldr	r3, [r7, #4]
 800ccc8:	2206      	movs	r2, #6
 800ccca:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,D,D,A");
 800cccc:	687b      	ldr	r3, [r7, #4]
 800ccce:	3340      	adds	r3, #64	; 0x40
 800ccd0:	4a3f      	ldr	r2, [pc, #252]	; (800cdd0 <createProblem+0xbf28>)
 800ccd2:	461c      	mov	r4, r3
 800ccd4:	4613      	mov	r3, r2
 800ccd6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ccd8:	6020      	str	r0, [r4, #0]
 800ccda:	6061      	str	r1, [r4, #4]
 800ccdc:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,10,11,15,18");
 800ccde:	687b      	ldr	r3, [r7, #4]
 800cce0:	3304      	adds	r3, #4
 800cce2:	4a3c      	ldr	r2, [pc, #240]	; (800cdd4 <createProblem+0xbf2c>)
 800cce4:	461c      	mov	r4, r3
 800cce6:	4615      	mov	r5, r2
 800cce8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ccea:	6020      	str	r0, [r4, #0]
 800ccec:	6061      	str	r1, [r4, #4]
 800ccee:	60a2      	str	r2, [r4, #8]
 800ccf0:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800ccf2:	687b      	ldr	r3, [r7, #4]
 800ccf4:	33d8      	adds	r3, #216	; 0xd8
 800ccf6:	4a38      	ldr	r2, [pc, #224]	; (800cdd8 <createProblem+0xbf30>)
 800ccf8:	461c      	mov	r4, r3
 800ccfa:	4613      	mov	r3, r2
 800ccfc:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ccfe:	6020      	str	r0, [r4, #0]
 800cd00:	6061      	str	r1, [r4, #4]
 800cd02:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 800cd04:	687b      	ldr	r3, [r7, #4]
 800cd06:	33cc      	adds	r3, #204	; 0xcc
 800cd08:	4a34      	ldr	r2, [pc, #208]	; (800cddc <createProblem+0xbf34>)
 800cd0a:	6810      	ldr	r0, [r2, #0]
 800cd0c:	6018      	str	r0, [r3, #0]
			break;
 800cd0e:	f00d be11 	b.w	801a934 <createProblem+0x19a8c>
		case 423 :
			strcpy(p->name,"POLARIS");
 800cd12:	687b      	ldr	r3, [r7, #4]
 800cd14:	337c      	adds	r3, #124	; 0x7c
 800cd16:	4932      	ldr	r1, [pc, #200]	; (800cde0 <createProblem+0xbf38>)
 800cd18:	461a      	mov	r2, r3
 800cd1a:	460b      	mov	r3, r1
 800cd1c:	cb03      	ldmia	r3!, {r0, r1}
 800cd1e:	6010      	str	r0, [r2, #0]
 800cd20:	6051      	str	r1, [r2, #4]
			p->moveSize = 6;
 800cd22:	687b      	ldr	r3, [r7, #4]
 800cd24:	2206      	movs	r2, #6
 800cd26:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,F,A,D");
 800cd28:	687b      	ldr	r3, [r7, #4]
 800cd2a:	3340      	adds	r3, #64	; 0x40
 800cd2c:	4a2d      	ldr	r2, [pc, #180]	; (800cde4 <createProblem+0xbf3c>)
 800cd2e:	461c      	mov	r4, r3
 800cd30:	4613      	mov	r3, r2
 800cd32:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cd34:	6020      	str	r0, [r4, #0]
 800cd36:	6061      	str	r1, [r4, #4]
 800cd38:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,8,11,14,18");
 800cd3a:	687b      	ldr	r3, [r7, #4]
 800cd3c:	3304      	adds	r3, #4
 800cd3e:	4a2a      	ldr	r2, [pc, #168]	; (800cde8 <createProblem+0xbf40>)
 800cd40:	461c      	mov	r4, r3
 800cd42:	4613      	mov	r3, r2
 800cd44:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cd46:	6020      	str	r0, [r4, #0]
 800cd48:	6061      	str	r1, [r4, #4]
 800cd4a:	60a2      	str	r2, [r4, #8]
 800cd4c:	881a      	ldrh	r2, [r3, #0]
 800cd4e:	789b      	ldrb	r3, [r3, #2]
 800cd50:	81a2      	strh	r2, [r4, #12]
 800cd52:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800cd54:	687b      	ldr	r3, [r7, #4]
 800cd56:	33d8      	adds	r3, #216	; 0xd8
 800cd58:	4a13      	ldr	r2, [pc, #76]	; (800cda8 <createProblem+0xbf00>)
 800cd5a:	461c      	mov	r4, r3
 800cd5c:	4613      	mov	r3, r2
 800cd5e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cd60:	6020      	str	r0, [r4, #0]
 800cd62:	6061      	str	r1, [r4, #4]
 800cd64:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 800cd66:	687b      	ldr	r3, [r7, #4]
 800cd68:	33cc      	adds	r3, #204	; 0xcc
 800cd6a:	4a20      	ldr	r2, [pc, #128]	; (800cdec <createProblem+0xbf44>)
 800cd6c:	6810      	ldr	r0, [r2, #0]
 800cd6e:	6018      	str	r0, [r3, #0]
			break;
 800cd70:	f00d bde0 	b.w	801a934 <createProblem+0x19a8c>
 800cd74:	08024b0c 	.word	0x08024b0c
 800cd78:	08024b10 	.word	0x08024b10
 800cd7c:	08021c10 	.word	0x08021c10
 800cd80:	080215a8 	.word	0x080215a8
 800cd84:	08020928 	.word	0x08020928
 800cd88:	08024b18 	.word	0x08024b18
 800cd8c:	08024b20 	.word	0x08024b20
 800cd90:	08024b2c 	.word	0x08024b2c
 800cd94:	080208a0 	.word	0x080208a0
 800cd98:	080208f0 	.word	0x080208f0
 800cd9c:	08024b3c 	.word	0x08024b3c
 800cda0:	0802156c 	.word	0x0802156c
 800cda4:	08024b48 	.word	0x08024b48
 800cda8:	0802091c 	.word	0x0802091c
 800cdac:	08020dc8 	.word	0x08020dc8
 800cdb0:	08024b58 	.word	0x08024b58
 800cdb4:	08024b64 	.word	0x08024b64
 800cdb8:	08024b70 	.word	0x08024b70
 800cdbc:	08024b80 	.word	0x08024b80
 800cdc0:	08024b94 	.word	0x08024b94
 800cdc4:	08024ba0 	.word	0x08024ba0
 800cdc8:	08021748 	.word	0x08021748
 800cdcc:	08024bb0 	.word	0x08024bb0
 800cdd0:	08024bb8 	.word	0x08024bb8
 800cdd4:	08024bc4 	.word	0x08024bc4
 800cdd8:	08020e90 	.word	0x08020e90
 800cddc:	08020830 	.word	0x08020830
 800cde0:	08024bd4 	.word	0x08024bd4
 800cde4:	08024bdc 	.word	0x08024bdc
 800cde8:	08024be8 	.word	0x08024be8
 800cdec:	080209a4 	.word	0x080209a4
		case 424 :
			strcpy(p->name,"HOLE IN FOUR");
 800cdf0:	687b      	ldr	r3, [r7, #4]
 800cdf2:	337c      	adds	r3, #124	; 0x7c
 800cdf4:	4aa8      	ldr	r2, [pc, #672]	; (800d098 <createProblem+0xc1f0>)
 800cdf6:	461c      	mov	r4, r3
 800cdf8:	4613      	mov	r3, r2
 800cdfa:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cdfc:	6020      	str	r0, [r4, #0]
 800cdfe:	6061      	str	r1, [r4, #4]
 800ce00:	60a2      	str	r2, [r4, #8]
 800ce02:	781b      	ldrb	r3, [r3, #0]
 800ce04:	7323      	strb	r3, [r4, #12]
			p->moveSize = 5;
 800ce06:	687b      	ldr	r3, [r7, #4]
 800ce08:	2205      	movs	r2, #5
 800ce0a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,B,D,A");
 800ce0c:	687b      	ldr	r3, [r7, #4]
 800ce0e:	3340      	adds	r3, #64	; 0x40
 800ce10:	49a2      	ldr	r1, [pc, #648]	; (800d09c <createProblem+0xc1f4>)
 800ce12:	461a      	mov	r2, r3
 800ce14:	460b      	mov	r3, r1
 800ce16:	cb03      	ldmia	r3!, {r0, r1}
 800ce18:	6010      	str	r0, [r2, #0]
 800ce1a:	6051      	str	r1, [r2, #4]
 800ce1c:	881b      	ldrh	r3, [r3, #0]
 800ce1e:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,10,10,15,18");
 800ce20:	687b      	ldr	r3, [r7, #4]
 800ce22:	3304      	adds	r3, #4
 800ce24:	4a9e      	ldr	r2, [pc, #632]	; (800d0a0 <createProblem+0xc1f8>)
 800ce26:	461c      	mov	r4, r3
 800ce28:	4613      	mov	r3, r2
 800ce2a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ce2c:	6020      	str	r0, [r4, #0]
 800ce2e:	6061      	str	r1, [r4, #4]
 800ce30:	60a2      	str	r2, [r4, #8]
 800ce32:	881b      	ldrh	r3, [r3, #0]
 800ce34:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800ce36:	687b      	ldr	r3, [r7, #4]
 800ce38:	33d8      	adds	r3, #216	; 0xd8
 800ce3a:	499a      	ldr	r1, [pc, #616]	; (800d0a4 <createProblem+0xc1fc>)
 800ce3c:	461a      	mov	r2, r3
 800ce3e:	460b      	mov	r3, r1
 800ce40:	cb03      	ldmia	r3!, {r0, r1}
 800ce42:	6010      	str	r0, [r2, #0]
 800ce44:	6051      	str	r1, [r2, #4]
 800ce46:	881b      	ldrh	r3, [r3, #0]
 800ce48:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 800ce4a:	687b      	ldr	r3, [r7, #4]
 800ce4c:	33cc      	adds	r3, #204	; 0xcc
 800ce4e:	4a96      	ldr	r2, [pc, #600]	; (800d0a8 <createProblem+0xc200>)
 800ce50:	6810      	ldr	r0, [r2, #0]
 800ce52:	6018      	str	r0, [r3, #0]
			break;
 800ce54:	f00d bd6e 	b.w	801a934 <createProblem+0x19a8c>
		case 425 :
			strcpy(p->name,"BLACK PANTHER");
 800ce58:	687b      	ldr	r3, [r7, #4]
 800ce5a:	337c      	adds	r3, #124	; 0x7c
 800ce5c:	4a93      	ldr	r2, [pc, #588]	; (800d0ac <createProblem+0xc204>)
 800ce5e:	461c      	mov	r4, r3
 800ce60:	4613      	mov	r3, r2
 800ce62:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ce64:	6020      	str	r0, [r4, #0]
 800ce66:	6061      	str	r1, [r4, #4]
 800ce68:	60a2      	str	r2, [r4, #8]
 800ce6a:	881b      	ldrh	r3, [r3, #0]
 800ce6c:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 13;
 800ce6e:	687b      	ldr	r3, [r7, #4]
 800ce70:	220d      	movs	r2, #13
 800ce72:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,E,G,C,B,H,C,D,D,F,G,A");
 800ce74:	687b      	ldr	r3, [r7, #4]
 800ce76:	3340      	adds	r3, #64	; 0x40
 800ce78:	4a8d      	ldr	r2, [pc, #564]	; (800d0b0 <createProblem+0xc208>)
 800ce7a:	461d      	mov	r5, r3
 800ce7c:	4614      	mov	r4, r2
 800ce7e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ce80:	6028      	str	r0, [r5, #0]
 800ce82:	6069      	str	r1, [r5, #4]
 800ce84:	60aa      	str	r2, [r5, #8]
 800ce86:	60eb      	str	r3, [r5, #12]
 800ce88:	cc03      	ldmia	r4!, {r0, r1}
 800ce8a:	6128      	str	r0, [r5, #16]
 800ce8c:	6169      	str	r1, [r5, #20]
 800ce8e:	8823      	ldrh	r3, [r4, #0]
 800ce90:	832b      	strh	r3, [r5, #24]
			strcpy(p->moveNumbers,"4,5,8,9,16,15,8,13,11,15,11,6,18");
 800ce92:	687b      	ldr	r3, [r7, #4]
 800ce94:	3304      	adds	r3, #4
 800ce96:	4a87      	ldr	r2, [pc, #540]	; (800d0b4 <createProblem+0xc20c>)
 800ce98:	4614      	mov	r4, r2
 800ce9a:	469c      	mov	ip, r3
 800ce9c:	f104 0e20 	add.w	lr, r4, #32
 800cea0:	4665      	mov	r5, ip
 800cea2:	4626      	mov	r6, r4
 800cea4:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 800cea6:	6028      	str	r0, [r5, #0]
 800cea8:	6069      	str	r1, [r5, #4]
 800ceaa:	60aa      	str	r2, [r5, #8]
 800ceac:	60eb      	str	r3, [r5, #12]
 800ceae:	3410      	adds	r4, #16
 800ceb0:	f10c 0c10 	add.w	ip, ip, #16
 800ceb4:	4574      	cmp	r4, lr
 800ceb6:	d1f3      	bne.n	800cea0 <createProblem+0xbff8>
 800ceb8:	4663      	mov	r3, ip
 800ceba:	4622      	mov	r2, r4
 800cebc:	7812      	ldrb	r2, [r2, #0]
 800cebe:	701a      	strb	r2, [r3, #0]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,d,d,d,e");
 800cec0:	687b      	ldr	r3, [r7, #4]
 800cec2:	33d8      	adds	r3, #216	; 0xd8
 800cec4:	4a7c      	ldr	r2, [pc, #496]	; (800d0b8 <createProblem+0xc210>)
 800cec6:	461d      	mov	r5, r3
 800cec8:	4614      	mov	r4, r2
 800ceca:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800cecc:	6028      	str	r0, [r5, #0]
 800cece:	6069      	str	r1, [r5, #4]
 800ced0:	60aa      	str	r2, [r5, #8]
 800ced2:	60eb      	str	r3, [r5, #12]
 800ced4:	cc03      	ldmia	r4!, {r0, r1}
 800ced6:	6128      	str	r0, [r5, #16]
 800ced8:	6169      	str	r1, [r5, #20]
 800ceda:	8823      	ldrh	r3, [r4, #0]
 800cedc:	832b      	strh	r3, [r5, #24]
			strcpy(p->grade, "6B+");
 800cede:	687b      	ldr	r3, [r7, #4]
 800cee0:	33cc      	adds	r3, #204	; 0xcc
 800cee2:	4a76      	ldr	r2, [pc, #472]	; (800d0bc <createProblem+0xc214>)
 800cee4:	6810      	ldr	r0, [r2, #0]
 800cee6:	6018      	str	r0, [r3, #0]
			break;
 800cee8:	f00d bd24 	b.w	801a934 <createProblem+0x19a8c>
		case 426 :
			strcpy(p->name,"BIROBIDJAN");
 800ceec:	687b      	ldr	r3, [r7, #4]
 800ceee:	337c      	adds	r3, #124	; 0x7c
 800cef0:	4973      	ldr	r1, [pc, #460]	; (800d0c0 <createProblem+0xc218>)
 800cef2:	461a      	mov	r2, r3
 800cef4:	460b      	mov	r3, r1
 800cef6:	cb03      	ldmia	r3!, {r0, r1}
 800cef8:	6010      	str	r0, [r2, #0]
 800cefa:	6051      	str	r1, [r2, #4]
 800cefc:	8819      	ldrh	r1, [r3, #0]
 800cefe:	789b      	ldrb	r3, [r3, #2]
 800cf00:	8111      	strh	r1, [r2, #8]
 800cf02:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 800cf04:	687b      	ldr	r3, [r7, #4]
 800cf06:	2206      	movs	r2, #6
 800cf08:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,C,E,A");
 800cf0a:	687b      	ldr	r3, [r7, #4]
 800cf0c:	3340      	adds	r3, #64	; 0x40
 800cf0e:	4a6d      	ldr	r2, [pc, #436]	; (800d0c4 <createProblem+0xc21c>)
 800cf10:	461c      	mov	r4, r3
 800cf12:	4613      	mov	r3, r2
 800cf14:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cf16:	6020      	str	r0, [r4, #0]
 800cf18:	6061      	str	r1, [r4, #4]
 800cf1a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,9,13,16,18");
 800cf1c:	687b      	ldr	r3, [r7, #4]
 800cf1e:	3304      	adds	r3, #4
 800cf20:	4a69      	ldr	r2, [pc, #420]	; (800d0c8 <createProblem+0xc220>)
 800cf22:	461c      	mov	r4, r3
 800cf24:	4613      	mov	r3, r2
 800cf26:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cf28:	6020      	str	r0, [r4, #0]
 800cf2a:	6061      	str	r1, [r4, #4]
 800cf2c:	60a2      	str	r2, [r4, #8]
 800cf2e:	881a      	ldrh	r2, [r3, #0]
 800cf30:	789b      	ldrb	r3, [r3, #2]
 800cf32:	81a2      	strh	r2, [r4, #12]
 800cf34:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800cf36:	687b      	ldr	r3, [r7, #4]
 800cf38:	33d8      	adds	r3, #216	; 0xd8
 800cf3a:	4a64      	ldr	r2, [pc, #400]	; (800d0cc <createProblem+0xc224>)
 800cf3c:	461c      	mov	r4, r3
 800cf3e:	4613      	mov	r3, r2
 800cf40:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cf42:	6020      	str	r0, [r4, #0]
 800cf44:	6061      	str	r1, [r4, #4]
 800cf46:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 800cf48:	687b      	ldr	r3, [r7, #4]
 800cf4a:	33cc      	adds	r3, #204	; 0xcc
 800cf4c:	4a60      	ldr	r2, [pc, #384]	; (800d0d0 <createProblem+0xc228>)
 800cf4e:	6810      	ldr	r0, [r2, #0]
 800cf50:	6018      	str	r0, [r3, #0]
			break;
 800cf52:	f00d bcef 	b.w	801a934 <createProblem+0x19a8c>
		case 427 :
			strcpy(p->name,"MOLOTOV COCKTEASE");
 800cf56:	687b      	ldr	r3, [r7, #4]
 800cf58:	337c      	adds	r3, #124	; 0x7c
 800cf5a:	4a5e      	ldr	r2, [pc, #376]	; (800d0d4 <createProblem+0xc22c>)
 800cf5c:	461d      	mov	r5, r3
 800cf5e:	4614      	mov	r4, r2
 800cf60:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800cf62:	6028      	str	r0, [r5, #0]
 800cf64:	6069      	str	r1, [r5, #4]
 800cf66:	60aa      	str	r2, [r5, #8]
 800cf68:	60eb      	str	r3, [r5, #12]
 800cf6a:	8823      	ldrh	r3, [r4, #0]
 800cf6c:	822b      	strh	r3, [r5, #16]
			p->moveSize = 6;
 800cf6e:	687b      	ldr	r3, [r7, #4]
 800cf70:	2206      	movs	r2, #6
 800cf72:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,I,G,K,I");
 800cf74:	687b      	ldr	r3, [r7, #4]
 800cf76:	3340      	adds	r3, #64	; 0x40
 800cf78:	4a57      	ldr	r2, [pc, #348]	; (800d0d8 <createProblem+0xc230>)
 800cf7a:	461c      	mov	r4, r3
 800cf7c:	4613      	mov	r3, r2
 800cf7e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cf80:	6020      	str	r0, [r4, #0]
 800cf82:	6061      	str	r1, [r4, #4]
 800cf84:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,9,7,14,14,18");
 800cf86:	687b      	ldr	r3, [r7, #4]
 800cf88:	3304      	adds	r3, #4
 800cf8a:	4a54      	ldr	r2, [pc, #336]	; (800d0dc <createProblem+0xc234>)
 800cf8c:	461c      	mov	r4, r3
 800cf8e:	4613      	mov	r3, r2
 800cf90:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cf92:	6020      	str	r0, [r4, #0]
 800cf94:	6061      	str	r1, [r4, #4]
 800cf96:	60a2      	str	r2, [r4, #8]
 800cf98:	881a      	ldrh	r2, [r3, #0]
 800cf9a:	789b      	ldrb	r3, [r3, #2]
 800cf9c:	81a2      	strh	r2, [r4, #12]
 800cf9e:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800cfa0:	687b      	ldr	r3, [r7, #4]
 800cfa2:	33d8      	adds	r3, #216	; 0xd8
 800cfa4:	4a49      	ldr	r2, [pc, #292]	; (800d0cc <createProblem+0xc224>)
 800cfa6:	461c      	mov	r4, r3
 800cfa8:	4613      	mov	r3, r2
 800cfaa:	cb07      	ldmia	r3!, {r0, r1, r2}
 800cfac:	6020      	str	r0, [r4, #0]
 800cfae:	6061      	str	r1, [r4, #4]
 800cfb0:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7C+");
 800cfb2:	687b      	ldr	r3, [r7, #4]
 800cfb4:	33cc      	adds	r3, #204	; 0xcc
 800cfb6:	4a4a      	ldr	r2, [pc, #296]	; (800d0e0 <createProblem+0xc238>)
 800cfb8:	6810      	ldr	r0, [r2, #0]
 800cfba:	6018      	str	r0, [r3, #0]
			break;
 800cfbc:	f00d bcba 	b.w	801a934 <createProblem+0x19a8c>
		case 428 :
			strcpy(p->name,"LIZARD 3");
 800cfc0:	687b      	ldr	r3, [r7, #4]
 800cfc2:	337c      	adds	r3, #124	; 0x7c
 800cfc4:	4947      	ldr	r1, [pc, #284]	; (800d0e4 <createProblem+0xc23c>)
 800cfc6:	461a      	mov	r2, r3
 800cfc8:	460b      	mov	r3, r1
 800cfca:	cb03      	ldmia	r3!, {r0, r1}
 800cfcc:	6010      	str	r0, [r2, #0]
 800cfce:	6051      	str	r1, [r2, #4]
 800cfd0:	781b      	ldrb	r3, [r3, #0]
 800cfd2:	7213      	strb	r3, [r2, #8]
			p->moveSize = 12;
 800cfd4:	687b      	ldr	r3, [r7, #4]
 800cfd6:	220c      	movs	r2, #12
 800cfd8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,J,I,H,F,E,C,D,B,A,A");
 800cfda:	687b      	ldr	r3, [r7, #4]
 800cfdc:	3340      	adds	r3, #64	; 0x40
 800cfde:	4a42      	ldr	r2, [pc, #264]	; (800d0e8 <createProblem+0xc240>)
 800cfe0:	461d      	mov	r5, r3
 800cfe2:	4614      	mov	r4, r2
 800cfe4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800cfe6:	6028      	str	r0, [r5, #0]
 800cfe8:	6069      	str	r1, [r5, #4]
 800cfea:	60aa      	str	r2, [r5, #8]
 800cfec:	60eb      	str	r3, [r5, #12]
 800cfee:	cc03      	ldmia	r4!, {r0, r1}
 800cff0:	6128      	str	r0, [r5, #16]
 800cff2:	6169      	str	r1, [r5, #20]
			strcpy(p->moveNumbers,"4,5,5,10,10,11,12,13,15,15,9,18");
 800cff4:	687b      	ldr	r3, [r7, #4]
 800cff6:	3304      	adds	r3, #4
 800cff8:	4a3c      	ldr	r2, [pc, #240]	; (800d0ec <createProblem+0xc244>)
 800cffa:	461c      	mov	r4, r3
 800cffc:	4615      	mov	r5, r2
 800cffe:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d000:	6020      	str	r0, [r4, #0]
 800d002:	6061      	str	r1, [r4, #4]
 800d004:	60a2      	str	r2, [r4, #8]
 800d006:	60e3      	str	r3, [r4, #12]
 800d008:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d00a:	6120      	str	r0, [r4, #16]
 800d00c:	6161      	str	r1, [r4, #20]
 800d00e:	61a2      	str	r2, [r4, #24]
 800d010:	61e3      	str	r3, [r4, #28]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,d,d,d,d,e");
 800d012:	687b      	ldr	r3, [r7, #4]
 800d014:	33d8      	adds	r3, #216	; 0xd8
 800d016:	4a36      	ldr	r2, [pc, #216]	; (800d0f0 <createProblem+0xc248>)
 800d018:	461d      	mov	r5, r3
 800d01a:	4614      	mov	r4, r2
 800d01c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d01e:	6028      	str	r0, [r5, #0]
 800d020:	6069      	str	r1, [r5, #4]
 800d022:	60aa      	str	r2, [r5, #8]
 800d024:	60eb      	str	r3, [r5, #12]
 800d026:	cc03      	ldmia	r4!, {r0, r1}
 800d028:	6128      	str	r0, [r5, #16]
 800d02a:	6169      	str	r1, [r5, #20]
			strcpy(p->grade, "6C+");
 800d02c:	687b      	ldr	r3, [r7, #4]
 800d02e:	33cc      	adds	r3, #204	; 0xcc
 800d030:	4a27      	ldr	r2, [pc, #156]	; (800d0d0 <createProblem+0xc228>)
 800d032:	6810      	ldr	r0, [r2, #0]
 800d034:	6018      	str	r0, [r3, #0]
			break;
 800d036:	f00d bc7d 	b.w	801a934 <createProblem+0x19a8c>
		case 429 :
			strcpy(p->name,"BIT OF SIDE");
 800d03a:	687b      	ldr	r3, [r7, #4]
 800d03c:	337c      	adds	r3, #124	; 0x7c
 800d03e:	4a2d      	ldr	r2, [pc, #180]	; (800d0f4 <createProblem+0xc24c>)
 800d040:	461c      	mov	r4, r3
 800d042:	4613      	mov	r3, r2
 800d044:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d046:	6020      	str	r0, [r4, #0]
 800d048:	6061      	str	r1, [r4, #4]
 800d04a:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 800d04c:	687b      	ldr	r3, [r7, #4]
 800d04e:	2206      	movs	r2, #6
 800d050:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,H,C,D,A");
 800d052:	687b      	ldr	r3, [r7, #4]
 800d054:	3340      	adds	r3, #64	; 0x40
 800d056:	4a28      	ldr	r2, [pc, #160]	; (800d0f8 <createProblem+0xc250>)
 800d058:	461c      	mov	r4, r3
 800d05a:	4613      	mov	r3, r2
 800d05c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d05e:	6020      	str	r0, [r4, #0]
 800d060:	6061      	str	r1, [r4, #4]
 800d062:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,10,13,15,18");
 800d064:	687b      	ldr	r3, [r7, #4]
 800d066:	3304      	adds	r3, #4
 800d068:	4a24      	ldr	r2, [pc, #144]	; (800d0fc <createProblem+0xc254>)
 800d06a:	461c      	mov	r4, r3
 800d06c:	4615      	mov	r5, r2
 800d06e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d070:	6020      	str	r0, [r4, #0]
 800d072:	6061      	str	r1, [r4, #4]
 800d074:	60a2      	str	r2, [r4, #8]
 800d076:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800d078:	687b      	ldr	r3, [r7, #4]
 800d07a:	33d8      	adds	r3, #216	; 0xd8
 800d07c:	4a20      	ldr	r2, [pc, #128]	; (800d100 <createProblem+0xc258>)
 800d07e:	461c      	mov	r4, r3
 800d080:	4613      	mov	r3, r2
 800d082:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d084:	6020      	str	r0, [r4, #0]
 800d086:	6061      	str	r1, [r4, #4]
 800d088:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 800d08a:	687b      	ldr	r3, [r7, #4]
 800d08c:	33cc      	adds	r3, #204	; 0xcc
 800d08e:	4a0b      	ldr	r2, [pc, #44]	; (800d0bc <createProblem+0xc214>)
 800d090:	6810      	ldr	r0, [r2, #0]
 800d092:	6018      	str	r0, [r3, #0]
			break;
 800d094:	f00d bc4e 	b.w	801a934 <createProblem+0x19a8c>
 800d098:	08024bf8 	.word	0x08024bf8
 800d09c:	08024c08 	.word	0x08024c08
 800d0a0:	08020d94 	.word	0x08020d94
 800d0a4:	080208a0 	.word	0x080208a0
 800d0a8:	080209a4 	.word	0x080209a4
 800d0ac:	08024c14 	.word	0x08024c14
 800d0b0:	08024c24 	.word	0x08024c24
 800d0b4:	08024c40 	.word	0x08024c40
 800d0b8:	08022e3c 	.word	0x08022e3c
 800d0bc:	08020830 	.word	0x08020830
 800d0c0:	08024c64 	.word	0x08024c64
 800d0c4:	08024c70 	.word	0x08024c70
 800d0c8:	080245e0 	.word	0x080245e0
 800d0cc:	0802091c 	.word	0x0802091c
 800d0d0:	08020928 	.word	0x08020928
 800d0d4:	08024c7c 	.word	0x08024c7c
 800d0d8:	08024c90 	.word	0x08024c90
 800d0dc:	08024c9c 	.word	0x08024c9c
 800d0e0:	080226f0 	.word	0x080226f0
 800d0e4:	08024cac 	.word	0x08024cac
 800d0e8:	08024cb8 	.word	0x08024cb8
 800d0ec:	08024cd0 	.word	0x08024cd0
 800d0f0:	08024cf0 	.word	0x08024cf0
 800d0f4:	08024d08 	.word	0x08024d08
 800d0f8:	08024d14 	.word	0x08024d14
 800d0fc:	08022340 	.word	0x08022340
 800d100:	08020e90 	.word	0x08020e90
		case 43 :
			strcpy(p->name,"BLACK CAT'S");
 800d104:	687b      	ldr	r3, [r7, #4]
 800d106:	337c      	adds	r3, #124	; 0x7c
 800d108:	4ab5      	ldr	r2, [pc, #724]	; (800d3e0 <createProblem+0xc538>)
 800d10a:	461c      	mov	r4, r3
 800d10c:	4613      	mov	r3, r2
 800d10e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d110:	6020      	str	r0, [r4, #0]
 800d112:	6061      	str	r1, [r4, #4]
 800d114:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 800d116:	687b      	ldr	r3, [r7, #4]
 800d118:	2206      	movs	r2, #6
 800d11a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,D,J,I,I");
 800d11c:	687b      	ldr	r3, [r7, #4]
 800d11e:	3340      	adds	r3, #64	; 0x40
 800d120:	4ab0      	ldr	r2, [pc, #704]	; (800d3e4 <createProblem+0xc53c>)
 800d122:	461c      	mov	r4, r3
 800d124:	4613      	mov	r3, r2
 800d126:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d128:	6020      	str	r0, [r4, #0]
 800d12a:	6061      	str	r1, [r4, #4]
 800d12c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,11,12,15,18");
 800d12e:	687b      	ldr	r3, [r7, #4]
 800d130:	3304      	adds	r3, #4
 800d132:	4aad      	ldr	r2, [pc, #692]	; (800d3e8 <createProblem+0xc540>)
 800d134:	461c      	mov	r4, r3
 800d136:	4615      	mov	r5, r2
 800d138:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d13a:	6020      	str	r0, [r4, #0]
 800d13c:	6061      	str	r1, [r4, #4]
 800d13e:	60a2      	str	r2, [r4, #8]
 800d140:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800d142:	687b      	ldr	r3, [r7, #4]
 800d144:	33d8      	adds	r3, #216	; 0xd8
 800d146:	4aa9      	ldr	r2, [pc, #676]	; (800d3ec <createProblem+0xc544>)
 800d148:	461c      	mov	r4, r3
 800d14a:	4613      	mov	r3, r2
 800d14c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d14e:	6020      	str	r0, [r4, #0]
 800d150:	6061      	str	r1, [r4, #4]
 800d152:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7C+");
 800d154:	687b      	ldr	r3, [r7, #4]
 800d156:	33cc      	adds	r3, #204	; 0xcc
 800d158:	4aa5      	ldr	r2, [pc, #660]	; (800d3f0 <createProblem+0xc548>)
 800d15a:	6810      	ldr	r0, [r2, #0]
 800d15c:	6018      	str	r0, [r3, #0]
			break;
 800d15e:	f00d bbe9 	b.w	801a934 <createProblem+0x19a8c>
		case 430 :
			strcpy(p->name,"BITE YOUR NAILS");
 800d162:	687b      	ldr	r3, [r7, #4]
 800d164:	337c      	adds	r3, #124	; 0x7c
 800d166:	4aa3      	ldr	r2, [pc, #652]	; (800d3f4 <createProblem+0xc54c>)
 800d168:	461c      	mov	r4, r3
 800d16a:	4615      	mov	r5, r2
 800d16c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d16e:	6020      	str	r0, [r4, #0]
 800d170:	6061      	str	r1, [r4, #4]
 800d172:	60a2      	str	r2, [r4, #8]
 800d174:	60e3      	str	r3, [r4, #12]
			p->moveSize = 6;
 800d176:	687b      	ldr	r3, [r7, #4]
 800d178:	2206      	movs	r2, #6
 800d17a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,B,E,C,E,D");
 800d17c:	687b      	ldr	r3, [r7, #4]
 800d17e:	3340      	adds	r3, #64	; 0x40
 800d180:	4a9d      	ldr	r2, [pc, #628]	; (800d3f8 <createProblem+0xc550>)
 800d182:	461c      	mov	r4, r3
 800d184:	4613      	mov	r3, r2
 800d186:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d188:	6020      	str	r0, [r4, #0]
 800d18a:	6061      	str	r1, [r4, #4]
 800d18c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,9,13,16,18");
 800d18e:	687b      	ldr	r3, [r7, #4]
 800d190:	3304      	adds	r3, #4
 800d192:	4a9a      	ldr	r2, [pc, #616]	; (800d3fc <createProblem+0xc554>)
 800d194:	461c      	mov	r4, r3
 800d196:	4613      	mov	r3, r2
 800d198:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d19a:	6020      	str	r0, [r4, #0]
 800d19c:	6061      	str	r1, [r4, #4]
 800d19e:	60a2      	str	r2, [r4, #8]
 800d1a0:	881a      	ldrh	r2, [r3, #0]
 800d1a2:	789b      	ldrb	r3, [r3, #2]
 800d1a4:	81a2      	strh	r2, [r4, #12]
 800d1a6:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800d1a8:	687b      	ldr	r3, [r7, #4]
 800d1aa:	33d8      	adds	r3, #216	; 0xd8
 800d1ac:	4a94      	ldr	r2, [pc, #592]	; (800d400 <createProblem+0xc558>)
 800d1ae:	461c      	mov	r4, r3
 800d1b0:	4613      	mov	r3, r2
 800d1b2:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d1b4:	6020      	str	r0, [r4, #0]
 800d1b6:	6061      	str	r1, [r4, #4]
 800d1b8:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B");
 800d1ba:	687b      	ldr	r3, [r7, #4]
 800d1bc:	33cc      	adds	r3, #204	; 0xcc
 800d1be:	4a91      	ldr	r2, [pc, #580]	; (800d404 <createProblem+0xc55c>)
 800d1c0:	8811      	ldrh	r1, [r2, #0]
 800d1c2:	7892      	ldrb	r2, [r2, #2]
 800d1c4:	8019      	strh	r1, [r3, #0]
 800d1c6:	709a      	strb	r2, [r3, #2]
			break;
 800d1c8:	f00d bbb4 	b.w	801a934 <createProblem+0x19a8c>
		case 431 :
			strcpy(p->name,"TE LA TAMALANCH");
 800d1cc:	687b      	ldr	r3, [r7, #4]
 800d1ce:	337c      	adds	r3, #124	; 0x7c
 800d1d0:	4a8d      	ldr	r2, [pc, #564]	; (800d408 <createProblem+0xc560>)
 800d1d2:	461c      	mov	r4, r3
 800d1d4:	4615      	mov	r5, r2
 800d1d6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d1d8:	6020      	str	r0, [r4, #0]
 800d1da:	6061      	str	r1, [r4, #4]
 800d1dc:	60a2      	str	r2, [r4, #8]
 800d1de:	60e3      	str	r3, [r4, #12]
			p->moveSize = 6;
 800d1e0:	687b      	ldr	r3, [r7, #4]
 800d1e2:	2206      	movs	r2, #6
 800d1e4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,G,D,D,A");
 800d1e6:	687b      	ldr	r3, [r7, #4]
 800d1e8:	3340      	adds	r3, #64	; 0x40
 800d1ea:	4a88      	ldr	r2, [pc, #544]	; (800d40c <createProblem+0xc564>)
 800d1ec:	461c      	mov	r4, r3
 800d1ee:	4613      	mov	r3, r2
 800d1f0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d1f2:	6020      	str	r0, [r4, #0]
 800d1f4:	6061      	str	r1, [r4, #4]
 800d1f6:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,9,11,15,18");
 800d1f8:	687b      	ldr	r3, [r7, #4]
 800d1fa:	3304      	adds	r3, #4
 800d1fc:	4a84      	ldr	r2, [pc, #528]	; (800d410 <createProblem+0xc568>)
 800d1fe:	461c      	mov	r4, r3
 800d200:	4613      	mov	r3, r2
 800d202:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d204:	6020      	str	r0, [r4, #0]
 800d206:	6061      	str	r1, [r4, #4]
 800d208:	60a2      	str	r2, [r4, #8]
 800d20a:	881a      	ldrh	r2, [r3, #0]
 800d20c:	789b      	ldrb	r3, [r3, #2]
 800d20e:	81a2      	strh	r2, [r4, #12]
 800d210:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800d212:	687b      	ldr	r3, [r7, #4]
 800d214:	33d8      	adds	r3, #216	; 0xd8
 800d216:	4a75      	ldr	r2, [pc, #468]	; (800d3ec <createProblem+0xc544>)
 800d218:	461c      	mov	r4, r3
 800d21a:	4613      	mov	r3, r2
 800d21c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d21e:	6020      	str	r0, [r4, #0]
 800d220:	6061      	str	r1, [r4, #4]
 800d222:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 800d224:	687b      	ldr	r3, [r7, #4]
 800d226:	33cc      	adds	r3, #204	; 0xcc
 800d228:	4a7a      	ldr	r2, [pc, #488]	; (800d414 <createProblem+0xc56c>)
 800d22a:	6810      	ldr	r0, [r2, #0]
 800d22c:	6018      	str	r0, [r3, #0]
			break;
 800d22e:	f00d bb81 	b.w	801a934 <createProblem+0x19a8c>
		case 432 :
			strcpy(p->name,"MEH");
 800d232:	687b      	ldr	r3, [r7, #4]
 800d234:	337c      	adds	r3, #124	; 0x7c
 800d236:	4a78      	ldr	r2, [pc, #480]	; (800d418 <createProblem+0xc570>)
 800d238:	6810      	ldr	r0, [r2, #0]
 800d23a:	6018      	str	r0, [r3, #0]
			p->moveSize = 7;
 800d23c:	687b      	ldr	r3, [r7, #4]
 800d23e:	2207      	movs	r2, #7
 800d240:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,E,D,F,G,I");
 800d242:	687b      	ldr	r3, [r7, #4]
 800d244:	3340      	adds	r3, #64	; 0x40
 800d246:	4a75      	ldr	r2, [pc, #468]	; (800d41c <createProblem+0xc574>)
 800d248:	461c      	mov	r4, r3
 800d24a:	4613      	mov	r3, r2
 800d24c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d24e:	6020      	str	r0, [r4, #0]
 800d250:	6061      	str	r1, [r4, #4]
 800d252:	60a2      	str	r2, [r4, #8]
 800d254:	881b      	ldrh	r3, [r3, #0]
 800d256:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,11,13,15,18");
 800d258:	687b      	ldr	r3, [r7, #4]
 800d25a:	3304      	adds	r3, #4
 800d25c:	4a70      	ldr	r2, [pc, #448]	; (800d420 <createProblem+0xc578>)
 800d25e:	461d      	mov	r5, r3
 800d260:	4614      	mov	r4, r2
 800d262:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d264:	6028      	str	r0, [r5, #0]
 800d266:	6069      	str	r1, [r5, #4]
 800d268:	60aa      	str	r2, [r5, #8]
 800d26a:	60eb      	str	r3, [r5, #12]
 800d26c:	8823      	ldrh	r3, [r4, #0]
 800d26e:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800d270:	687b      	ldr	r3, [r7, #4]
 800d272:	33d8      	adds	r3, #216	; 0xd8
 800d274:	4a6b      	ldr	r2, [pc, #428]	; (800d424 <createProblem+0xc57c>)
 800d276:	461c      	mov	r4, r3
 800d278:	4613      	mov	r3, r2
 800d27a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d27c:	6020      	str	r0, [r4, #0]
 800d27e:	6061      	str	r1, [r4, #4]
 800d280:	60a2      	str	r2, [r4, #8]
 800d282:	881b      	ldrh	r3, [r3, #0]
 800d284:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800d286:	687b      	ldr	r3, [r7, #4]
 800d288:	33cc      	adds	r3, #204	; 0xcc
 800d28a:	4a67      	ldr	r2, [pc, #412]	; (800d428 <createProblem+0xc580>)
 800d28c:	6810      	ldr	r0, [r2, #0]
 800d28e:	6018      	str	r0, [r3, #0]
			break;
 800d290:	f00d bb50 	b.w	801a934 <createProblem+0x19a8c>
		case 433 :
			strcpy(p->name,"APEX");
 800d294:	687b      	ldr	r3, [r7, #4]
 800d296:	337c      	adds	r3, #124	; 0x7c
 800d298:	4a64      	ldr	r2, [pc, #400]	; (800d42c <createProblem+0xc584>)
 800d29a:	6810      	ldr	r0, [r2, #0]
 800d29c:	6018      	str	r0, [r3, #0]
 800d29e:	7912      	ldrb	r2, [r2, #4]
 800d2a0:	711a      	strb	r2, [r3, #4]
			p->moveSize = 4;
 800d2a2:	687b      	ldr	r3, [r7, #4]
 800d2a4:	2204      	movs	r2, #4
 800d2a6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,F,E,I");
 800d2a8:	687b      	ldr	r3, [r7, #4]
 800d2aa:	3340      	adds	r3, #64	; 0x40
 800d2ac:	4960      	ldr	r1, [pc, #384]	; (800d430 <createProblem+0xc588>)
 800d2ae:	461a      	mov	r2, r3
 800d2b0:	460b      	mov	r3, r1
 800d2b2:	cb03      	ldmia	r3!, {r0, r1}
 800d2b4:	6010      	str	r0, [r2, #0]
 800d2b6:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"6,11,14,18");
 800d2b8:	687b      	ldr	r3, [r7, #4]
 800d2ba:	3304      	adds	r3, #4
 800d2bc:	495d      	ldr	r1, [pc, #372]	; (800d434 <createProblem+0xc58c>)
 800d2be:	461a      	mov	r2, r3
 800d2c0:	460b      	mov	r3, r1
 800d2c2:	cb03      	ldmia	r3!, {r0, r1}
 800d2c4:	6010      	str	r0, [r2, #0]
 800d2c6:	6051      	str	r1, [r2, #4]
 800d2c8:	8819      	ldrh	r1, [r3, #0]
 800d2ca:	789b      	ldrb	r3, [r3, #2]
 800d2cc:	8111      	strh	r1, [r2, #8]
 800d2ce:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 800d2d0:	687b      	ldr	r3, [r7, #4]
 800d2d2:	33d8      	adds	r3, #216	; 0xd8
 800d2d4:	4958      	ldr	r1, [pc, #352]	; (800d438 <createProblem+0xc590>)
 800d2d6:	461a      	mov	r2, r3
 800d2d8:	460b      	mov	r3, r1
 800d2da:	cb03      	ldmia	r3!, {r0, r1}
 800d2dc:	6010      	str	r0, [r2, #0]
 800d2de:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7C");
 800d2e0:	687b      	ldr	r3, [r7, #4]
 800d2e2:	33cc      	adds	r3, #204	; 0xcc
 800d2e4:	4a55      	ldr	r2, [pc, #340]	; (800d43c <createProblem+0xc594>)
 800d2e6:	8811      	ldrh	r1, [r2, #0]
 800d2e8:	7892      	ldrb	r2, [r2, #2]
 800d2ea:	8019      	strh	r1, [r3, #0]
 800d2ec:	709a      	strb	r2, [r3, #2]
			break;
 800d2ee:	f00d bb21 	b.w	801a934 <createProblem+0x19a8c>
		case 434 :
			strcpy(p->name,"COMMITTING WARM UP");
 800d2f2:	687b      	ldr	r3, [r7, #4]
 800d2f4:	337c      	adds	r3, #124	; 0x7c
 800d2f6:	4a52      	ldr	r2, [pc, #328]	; (800d440 <createProblem+0xc598>)
 800d2f8:	461d      	mov	r5, r3
 800d2fa:	4614      	mov	r4, r2
 800d2fc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d2fe:	6028      	str	r0, [r5, #0]
 800d300:	6069      	str	r1, [r5, #4]
 800d302:	60aa      	str	r2, [r5, #8]
 800d304:	60eb      	str	r3, [r5, #12]
 800d306:	8823      	ldrh	r3, [r4, #0]
 800d308:	78a2      	ldrb	r2, [r4, #2]
 800d30a:	822b      	strh	r3, [r5, #16]
 800d30c:	4613      	mov	r3, r2
 800d30e:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 7;
 800d310:	687b      	ldr	r3, [r7, #4]
 800d312:	2207      	movs	r2, #7
 800d314:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,D,C,I,D");
 800d316:	687b      	ldr	r3, [r7, #4]
 800d318:	3340      	adds	r3, #64	; 0x40
 800d31a:	4a4a      	ldr	r2, [pc, #296]	; (800d444 <createProblem+0xc59c>)
 800d31c:	461c      	mov	r4, r3
 800d31e:	4613      	mov	r3, r2
 800d320:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d322:	6020      	str	r0, [r4, #0]
 800d324:	6061      	str	r1, [r4, #4]
 800d326:	60a2      	str	r2, [r4, #8]
 800d328:	881b      	ldrh	r3, [r3, #0]
 800d32a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,10,11,13,14,18");
 800d32c:	687b      	ldr	r3, [r7, #4]
 800d32e:	3304      	adds	r3, #4
 800d330:	4a45      	ldr	r2, [pc, #276]	; (800d448 <createProblem+0xc5a0>)
 800d332:	461d      	mov	r5, r3
 800d334:	4614      	mov	r4, r2
 800d336:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d338:	6028      	str	r0, [r5, #0]
 800d33a:	6069      	str	r1, [r5, #4]
 800d33c:	60aa      	str	r2, [r5, #8]
 800d33e:	60eb      	str	r3, [r5, #12]
 800d340:	8823      	ldrh	r3, [r4, #0]
 800d342:	78a2      	ldrb	r2, [r4, #2]
 800d344:	822b      	strh	r3, [r5, #16]
 800d346:	4613      	mov	r3, r2
 800d348:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800d34a:	687b      	ldr	r3, [r7, #4]
 800d34c:	33d8      	adds	r3, #216	; 0xd8
 800d34e:	4a35      	ldr	r2, [pc, #212]	; (800d424 <createProblem+0xc57c>)
 800d350:	461c      	mov	r4, r3
 800d352:	4613      	mov	r3, r2
 800d354:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d356:	6020      	str	r0, [r4, #0]
 800d358:	6061      	str	r1, [r4, #4]
 800d35a:	60a2      	str	r2, [r4, #8]
 800d35c:	881b      	ldrh	r3, [r3, #0]
 800d35e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800d360:	687b      	ldr	r3, [r7, #4]
 800d362:	33cc      	adds	r3, #204	; 0xcc
 800d364:	4a30      	ldr	r2, [pc, #192]	; (800d428 <createProblem+0xc580>)
 800d366:	6810      	ldr	r0, [r2, #0]
 800d368:	6018      	str	r0, [r3, #0]
			break;
 800d36a:	f00d bae3 	b.w	801a934 <createProblem+0x19a8c>
		case 435 :
			strcpy(p->name,"LAYBACK WARM UP");
 800d36e:	687b      	ldr	r3, [r7, #4]
 800d370:	337c      	adds	r3, #124	; 0x7c
 800d372:	4a36      	ldr	r2, [pc, #216]	; (800d44c <createProblem+0xc5a4>)
 800d374:	461c      	mov	r4, r3
 800d376:	4615      	mov	r5, r2
 800d378:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d37a:	6020      	str	r0, [r4, #0]
 800d37c:	6061      	str	r1, [r4, #4]
 800d37e:	60a2      	str	r2, [r4, #8]
 800d380:	60e3      	str	r3, [r4, #12]
			p->moveSize = 7;
 800d382:	687b      	ldr	r3, [r7, #4]
 800d384:	2207      	movs	r2, #7
 800d386:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,C,D,A,D");
 800d388:	687b      	ldr	r3, [r7, #4]
 800d38a:	3340      	adds	r3, #64	; 0x40
 800d38c:	4a30      	ldr	r2, [pc, #192]	; (800d450 <createProblem+0xc5a8>)
 800d38e:	461c      	mov	r4, r3
 800d390:	4613      	mov	r3, r2
 800d392:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d394:	6020      	str	r0, [r4, #0]
 800d396:	6061      	str	r1, [r4, #4]
 800d398:	60a2      	str	r2, [r4, #8]
 800d39a:	881b      	ldrh	r3, [r3, #0]
 800d39c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,10,13,11,14,18");
 800d39e:	687b      	ldr	r3, [r7, #4]
 800d3a0:	3304      	adds	r3, #4
 800d3a2:	4a2c      	ldr	r2, [pc, #176]	; (800d454 <createProblem+0xc5ac>)
 800d3a4:	461d      	mov	r5, r3
 800d3a6:	4614      	mov	r4, r2
 800d3a8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d3aa:	6028      	str	r0, [r5, #0]
 800d3ac:	6069      	str	r1, [r5, #4]
 800d3ae:	60aa      	str	r2, [r5, #8]
 800d3b0:	60eb      	str	r3, [r5, #12]
 800d3b2:	8823      	ldrh	r3, [r4, #0]
 800d3b4:	78a2      	ldrb	r2, [r4, #2]
 800d3b6:	822b      	strh	r3, [r5, #16]
 800d3b8:	4613      	mov	r3, r2
 800d3ba:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800d3bc:	687b      	ldr	r3, [r7, #4]
 800d3be:	33d8      	adds	r3, #216	; 0xd8
 800d3c0:	4a18      	ldr	r2, [pc, #96]	; (800d424 <createProblem+0xc57c>)
 800d3c2:	461c      	mov	r4, r3
 800d3c4:	4613      	mov	r3, r2
 800d3c6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d3c8:	6020      	str	r0, [r4, #0]
 800d3ca:	6061      	str	r1, [r4, #4]
 800d3cc:	60a2      	str	r2, [r4, #8]
 800d3ce:	881b      	ldrh	r3, [r3, #0]
 800d3d0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800d3d2:	687b      	ldr	r3, [r7, #4]
 800d3d4:	33cc      	adds	r3, #204	; 0xcc
 800d3d6:	4a14      	ldr	r2, [pc, #80]	; (800d428 <createProblem+0xc580>)
 800d3d8:	6810      	ldr	r0, [r2, #0]
 800d3da:	6018      	str	r0, [r3, #0]
			break;
 800d3dc:	f00d baaa 	b.w	801a934 <createProblem+0x19a8c>
 800d3e0:	08024d20 	.word	0x08024d20
 800d3e4:	08024d2c 	.word	0x08024d2c
 800d3e8:	08024070 	.word	0x08024070
 800d3ec:	0802091c 	.word	0x0802091c
 800d3f0:	080226f0 	.word	0x080226f0
 800d3f4:	08024d38 	.word	0x08024d38
 800d3f8:	08024d48 	.word	0x08024d48
 800d3fc:	08024d54 	.word	0x08024d54
 800d400:	08020e90 	.word	0x08020e90
 800d404:	080208ac 	.word	0x080208ac
 800d408:	08024d64 	.word	0x08024d64
 800d40c:	08024d74 	.word	0x08024d74
 800d410:	08024d80 	.word	0x08024d80
 800d414:	080209a4 	.word	0x080209a4
 800d418:	08024d90 	.word	0x08024d90
 800d41c:	08024d94 	.word	0x08024d94
 800d420:	08024da4 	.word	0x08024da4
 800d424:	08020820 	.word	0x08020820
 800d428:	08020830 	.word	0x08020830
 800d42c:	08024db8 	.word	0x08024db8
 800d430:	08024dc0 	.word	0x08024dc0
 800d434:	08024ad4 	.word	0x08024ad4
 800d438:	080215a8 	.word	0x080215a8
 800d43c:	08020b0c 	.word	0x08020b0c
 800d440:	08024dc8 	.word	0x08024dc8
 800d444:	08024ddc 	.word	0x08024ddc
 800d448:	08024dec 	.word	0x08024dec
 800d44c:	08024e00 	.word	0x08024e00
 800d450:	08024e10 	.word	0x08024e10
 800d454:	08024e20 	.word	0x08024e20
		case 436 :
			strcpy(p->name,"PINCH &AMP; REACH");
 800d458:	687b      	ldr	r3, [r7, #4]
 800d45a:	337c      	adds	r3, #124	; 0x7c
 800d45c:	4ab9      	ldr	r2, [pc, #740]	; (800d744 <createProblem+0xc89c>)
 800d45e:	461d      	mov	r5, r3
 800d460:	4614      	mov	r4, r2
 800d462:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d464:	6028      	str	r0, [r5, #0]
 800d466:	6069      	str	r1, [r5, #4]
 800d468:	60aa      	str	r2, [r5, #8]
 800d46a:	60eb      	str	r3, [r5, #12]
 800d46c:	8823      	ldrh	r3, [r4, #0]
 800d46e:	822b      	strh	r3, [r5, #16]
			p->moveSize = 7;
 800d470:	687b      	ldr	r3, [r7, #4]
 800d472:	2207      	movs	r2, #7
 800d474:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,D,C,D,D");
 800d476:	687b      	ldr	r3, [r7, #4]
 800d478:	3340      	adds	r3, #64	; 0x40
 800d47a:	4ab3      	ldr	r2, [pc, #716]	; (800d748 <createProblem+0xc8a0>)
 800d47c:	461c      	mov	r4, r3
 800d47e:	4613      	mov	r3, r2
 800d480:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d482:	6020      	str	r0, [r4, #0]
 800d484:	6061      	str	r1, [r4, #4]
 800d486:	60a2      	str	r2, [r4, #8]
 800d488:	881b      	ldrh	r3, [r3, #0]
 800d48a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,10,11,13,15,18");
 800d48c:	687b      	ldr	r3, [r7, #4]
 800d48e:	3304      	adds	r3, #4
 800d490:	4aae      	ldr	r2, [pc, #696]	; (800d74c <createProblem+0xc8a4>)
 800d492:	461d      	mov	r5, r3
 800d494:	4614      	mov	r4, r2
 800d496:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d498:	6028      	str	r0, [r5, #0]
 800d49a:	6069      	str	r1, [r5, #4]
 800d49c:	60aa      	str	r2, [r5, #8]
 800d49e:	60eb      	str	r3, [r5, #12]
 800d4a0:	8823      	ldrh	r3, [r4, #0]
 800d4a2:	78a2      	ldrb	r2, [r4, #2]
 800d4a4:	822b      	strh	r3, [r5, #16]
 800d4a6:	4613      	mov	r3, r2
 800d4a8:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800d4aa:	687b      	ldr	r3, [r7, #4]
 800d4ac:	33d8      	adds	r3, #216	; 0xd8
 800d4ae:	4aa8      	ldr	r2, [pc, #672]	; (800d750 <createProblem+0xc8a8>)
 800d4b0:	461c      	mov	r4, r3
 800d4b2:	4613      	mov	r3, r2
 800d4b4:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d4b6:	6020      	str	r0, [r4, #0]
 800d4b8:	6061      	str	r1, [r4, #4]
 800d4ba:	60a2      	str	r2, [r4, #8]
 800d4bc:	881b      	ldrh	r3, [r3, #0]
 800d4be:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800d4c0:	687b      	ldr	r3, [r7, #4]
 800d4c2:	33cc      	adds	r3, #204	; 0xcc
 800d4c4:	4aa3      	ldr	r2, [pc, #652]	; (800d754 <createProblem+0xc8ac>)
 800d4c6:	6810      	ldr	r0, [r2, #0]
 800d4c8:	6018      	str	r0, [r3, #0]
			break;
 800d4ca:	f00d ba33 	b.w	801a934 <createProblem+0x19a8c>
		case 437 :
			strcpy(p->name,"PINCH WARM UP");
 800d4ce:	687b      	ldr	r3, [r7, #4]
 800d4d0:	337c      	adds	r3, #124	; 0x7c
 800d4d2:	4aa1      	ldr	r2, [pc, #644]	; (800d758 <createProblem+0xc8b0>)
 800d4d4:	461c      	mov	r4, r3
 800d4d6:	4613      	mov	r3, r2
 800d4d8:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d4da:	6020      	str	r0, [r4, #0]
 800d4dc:	6061      	str	r1, [r4, #4]
 800d4de:	60a2      	str	r2, [r4, #8]
 800d4e0:	881b      	ldrh	r3, [r3, #0]
 800d4e2:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 8;
 800d4e4:	687b      	ldr	r3, [r7, #4]
 800d4e6:	2208      	movs	r2, #8
 800d4e8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,D,C,D,A,D");
 800d4ea:	687b      	ldr	r3, [r7, #4]
 800d4ec:	3340      	adds	r3, #64	; 0x40
 800d4ee:	4a9b      	ldr	r2, [pc, #620]	; (800d75c <createProblem+0xc8b4>)
 800d4f0:	461c      	mov	r4, r3
 800d4f2:	4615      	mov	r5, r2
 800d4f4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d4f6:	6020      	str	r0, [r4, #0]
 800d4f8:	6061      	str	r1, [r4, #4]
 800d4fa:	60a2      	str	r2, [r4, #8]
 800d4fc:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,10,11,13,15,14,18");
 800d4fe:	687b      	ldr	r3, [r7, #4]
 800d500:	3304      	adds	r3, #4
 800d502:	4a97      	ldr	r2, [pc, #604]	; (800d760 <createProblem+0xc8b8>)
 800d504:	461d      	mov	r5, r3
 800d506:	4614      	mov	r4, r2
 800d508:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d50a:	6028      	str	r0, [r5, #0]
 800d50c:	6069      	str	r1, [r5, #4]
 800d50e:	60aa      	str	r2, [r5, #8]
 800d510:	60eb      	str	r3, [r5, #12]
 800d512:	6820      	ldr	r0, [r4, #0]
 800d514:	6128      	str	r0, [r5, #16]
 800d516:	88a3      	ldrh	r3, [r4, #4]
 800d518:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800d51a:	687b      	ldr	r3, [r7, #4]
 800d51c:	33d8      	adds	r3, #216	; 0xd8
 800d51e:	4a91      	ldr	r2, [pc, #580]	; (800d764 <createProblem+0xc8bc>)
 800d520:	461c      	mov	r4, r3
 800d522:	4615      	mov	r5, r2
 800d524:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d526:	6020      	str	r0, [r4, #0]
 800d528:	6061      	str	r1, [r4, #4]
 800d52a:	60a2      	str	r2, [r4, #8]
 800d52c:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800d52e:	687b      	ldr	r3, [r7, #4]
 800d530:	33cc      	adds	r3, #204	; 0xcc
 800d532:	4a88      	ldr	r2, [pc, #544]	; (800d754 <createProblem+0xc8ac>)
 800d534:	6810      	ldr	r0, [r2, #0]
 800d536:	6018      	str	r0, [r3, #0]
			break;
 800d538:	f00d b9fc 	b.w	801a934 <createProblem+0x19a8c>
		case 438 :
			strcpy(p->name,"A SIDE OF FRIES?");
 800d53c:	687b      	ldr	r3, [r7, #4]
 800d53e:	337c      	adds	r3, #124	; 0x7c
 800d540:	4a89      	ldr	r2, [pc, #548]	; (800d768 <createProblem+0xc8c0>)
 800d542:	461d      	mov	r5, r3
 800d544:	4614      	mov	r4, r2
 800d546:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d548:	6028      	str	r0, [r5, #0]
 800d54a:	6069      	str	r1, [r5, #4]
 800d54c:	60aa      	str	r2, [r5, #8]
 800d54e:	60eb      	str	r3, [r5, #12]
 800d550:	7823      	ldrb	r3, [r4, #0]
 800d552:	742b      	strb	r3, [r5, #16]
			p->moveSize = 5;
 800d554:	687b      	ldr	r3, [r7, #4]
 800d556:	2205      	movs	r2, #5
 800d558:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,E,G,I");
 800d55a:	687b      	ldr	r3, [r7, #4]
 800d55c:	3340      	adds	r3, #64	; 0x40
 800d55e:	4983      	ldr	r1, [pc, #524]	; (800d76c <createProblem+0xc8c4>)
 800d560:	461a      	mov	r2, r3
 800d562:	460b      	mov	r3, r1
 800d564:	cb03      	ldmia	r3!, {r0, r1}
 800d566:	6010      	str	r0, [r2, #0]
 800d568:	6051      	str	r1, [r2, #4]
 800d56a:	881b      	ldrh	r3, [r3, #0]
 800d56c:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,8,12,14,18");
 800d56e:	687b      	ldr	r3, [r7, #4]
 800d570:	3304      	adds	r3, #4
 800d572:	4a7f      	ldr	r2, [pc, #508]	; (800d770 <createProblem+0xc8c8>)
 800d574:	461c      	mov	r4, r3
 800d576:	4613      	mov	r3, r2
 800d578:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d57a:	6020      	str	r0, [r4, #0]
 800d57c:	6061      	str	r1, [r4, #4]
 800d57e:	60a2      	str	r2, [r4, #8]
 800d580:	781b      	ldrb	r3, [r3, #0]
 800d582:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800d584:	687b      	ldr	r3, [r7, #4]
 800d586:	33d8      	adds	r3, #216	; 0xd8
 800d588:	497a      	ldr	r1, [pc, #488]	; (800d774 <createProblem+0xc8cc>)
 800d58a:	461a      	mov	r2, r3
 800d58c:	460b      	mov	r3, r1
 800d58e:	cb03      	ldmia	r3!, {r0, r1}
 800d590:	6010      	str	r0, [r2, #0]
 800d592:	6051      	str	r1, [r2, #4]
 800d594:	881b      	ldrh	r3, [r3, #0]
 800d596:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 800d598:	687b      	ldr	r3, [r7, #4]
 800d59a:	33cc      	adds	r3, #204	; 0xcc
 800d59c:	4a76      	ldr	r2, [pc, #472]	; (800d778 <createProblem+0xc8d0>)
 800d59e:	8811      	ldrh	r1, [r2, #0]
 800d5a0:	7892      	ldrb	r2, [r2, #2]
 800d5a2:	8019      	strh	r1, [r3, #0]
 800d5a4:	709a      	strb	r2, [r3, #2]
			break;
 800d5a6:	f00d b9c5 	b.w	801a934 <createProblem+0x19a8c>
		case 439 :
			strcpy(p->name,"HUFFING BUBBLES");
 800d5aa:	687b      	ldr	r3, [r7, #4]
 800d5ac:	337c      	adds	r3, #124	; 0x7c
 800d5ae:	4a73      	ldr	r2, [pc, #460]	; (800d77c <createProblem+0xc8d4>)
 800d5b0:	461c      	mov	r4, r3
 800d5b2:	4615      	mov	r5, r2
 800d5b4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d5b6:	6020      	str	r0, [r4, #0]
 800d5b8:	6061      	str	r1, [r4, #4]
 800d5ba:	60a2      	str	r2, [r4, #8]
 800d5bc:	60e3      	str	r3, [r4, #12]
			p->moveSize = 6;
 800d5be:	687b      	ldr	r3, [r7, #4]
 800d5c0:	2206      	movs	r2, #6
 800d5c2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,F,B,D,E,A");
 800d5c4:	687b      	ldr	r3, [r7, #4]
 800d5c6:	3340      	adds	r3, #64	; 0x40
 800d5c8:	4a6d      	ldr	r2, [pc, #436]	; (800d780 <createProblem+0xc8d8>)
 800d5ca:	461c      	mov	r4, r3
 800d5cc:	4613      	mov	r3, r2
 800d5ce:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d5d0:	6020      	str	r0, [r4, #0]
 800d5d2:	6061      	str	r1, [r4, #4]
 800d5d4:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,11,10,15,6,18");
 800d5d6:	687b      	ldr	r3, [r7, #4]
 800d5d8:	3304      	adds	r3, #4
 800d5da:	4a6a      	ldr	r2, [pc, #424]	; (800d784 <createProblem+0xc8dc>)
 800d5dc:	461c      	mov	r4, r3
 800d5de:	4615      	mov	r5, r2
 800d5e0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d5e2:	6020      	str	r0, [r4, #0]
 800d5e4:	6061      	str	r1, [r4, #4]
 800d5e6:	60a2      	str	r2, [r4, #8]
 800d5e8:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800d5ea:	687b      	ldr	r3, [r7, #4]
 800d5ec:	33d8      	adds	r3, #216	; 0xd8
 800d5ee:	4a66      	ldr	r2, [pc, #408]	; (800d788 <createProblem+0xc8e0>)
 800d5f0:	461c      	mov	r4, r3
 800d5f2:	4613      	mov	r3, r2
 800d5f4:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d5f6:	6020      	str	r0, [r4, #0]
 800d5f8:	6061      	str	r1, [r4, #4]
 800d5fa:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 800d5fc:	687b      	ldr	r3, [r7, #4]
 800d5fe:	33cc      	adds	r3, #204	; 0xcc
 800d600:	4a62      	ldr	r2, [pc, #392]	; (800d78c <createProblem+0xc8e4>)
 800d602:	6810      	ldr	r0, [r2, #0]
 800d604:	6018      	str	r0, [r3, #0]
			break;
 800d606:	f00d b995 	b.w	801a934 <createProblem+0x19a8c>
		case 44 :
			strcpy(p->name,"ACG19");
 800d60a:	687b      	ldr	r3, [r7, #4]
 800d60c:	337c      	adds	r3, #124	; 0x7c
 800d60e:	4a60      	ldr	r2, [pc, #384]	; (800d790 <createProblem+0xc8e8>)
 800d610:	6810      	ldr	r0, [r2, #0]
 800d612:	6018      	str	r0, [r3, #0]
 800d614:	8892      	ldrh	r2, [r2, #4]
 800d616:	809a      	strh	r2, [r3, #4]
			p->moveSize = 8;
 800d618:	687b      	ldr	r3, [r7, #4]
 800d61a:	2208      	movs	r2, #8
 800d61c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,J,G,B,E,E,I,I");
 800d61e:	687b      	ldr	r3, [r7, #4]
 800d620:	3340      	adds	r3, #64	; 0x40
 800d622:	4a5c      	ldr	r2, [pc, #368]	; (800d794 <createProblem+0xc8ec>)
 800d624:	461c      	mov	r4, r3
 800d626:	4615      	mov	r5, r2
 800d628:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d62a:	6020      	str	r0, [r4, #0]
 800d62c:	6061      	str	r1, [r4, #4]
 800d62e:	60a2      	str	r2, [r4, #8]
 800d630:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,9,10,12,14,14,18");
 800d632:	687b      	ldr	r3, [r7, #4]
 800d634:	3304      	adds	r3, #4
 800d636:	4a58      	ldr	r2, [pc, #352]	; (800d798 <createProblem+0xc8f0>)
 800d638:	461d      	mov	r5, r3
 800d63a:	4614      	mov	r4, r2
 800d63c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d63e:	6028      	str	r0, [r5, #0]
 800d640:	6069      	str	r1, [r5, #4]
 800d642:	60aa      	str	r2, [r5, #8]
 800d644:	60eb      	str	r3, [r5, #12]
 800d646:	6820      	ldr	r0, [r4, #0]
 800d648:	6128      	str	r0, [r5, #16]
 800d64a:	7923      	ldrb	r3, [r4, #4]
 800d64c:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800d64e:	687b      	ldr	r3, [r7, #4]
 800d650:	33d8      	adds	r3, #216	; 0xd8
 800d652:	4a44      	ldr	r2, [pc, #272]	; (800d764 <createProblem+0xc8bc>)
 800d654:	461c      	mov	r4, r3
 800d656:	4615      	mov	r5, r2
 800d658:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d65a:	6020      	str	r0, [r4, #0]
 800d65c:	6061      	str	r1, [r4, #4]
 800d65e:	60a2      	str	r2, [r4, #8]
 800d660:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800d662:	687b      	ldr	r3, [r7, #4]
 800d664:	33cc      	adds	r3, #204	; 0xcc
 800d666:	4a3b      	ldr	r2, [pc, #236]	; (800d754 <createProblem+0xc8ac>)
 800d668:	6810      	ldr	r0, [r2, #0]
 800d66a:	6018      	str	r0, [r3, #0]
			break;
 800d66c:	f00d b962 	b.w	801a934 <createProblem+0x19a8c>
		case 440 :
			strcpy(p->name,"VITAMIN B12");
 800d670:	687b      	ldr	r3, [r7, #4]
 800d672:	337c      	adds	r3, #124	; 0x7c
 800d674:	4a49      	ldr	r2, [pc, #292]	; (800d79c <createProblem+0xc8f4>)
 800d676:	461c      	mov	r4, r3
 800d678:	4613      	mov	r3, r2
 800d67a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d67c:	6020      	str	r0, [r4, #0]
 800d67e:	6061      	str	r1, [r4, #4]
 800d680:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 800d682:	687b      	ldr	r3, [r7, #4]
 800d684:	2206      	movs	r2, #6
 800d686:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,A,F,B,E,I");
 800d688:	687b      	ldr	r3, [r7, #4]
 800d68a:	3340      	adds	r3, #64	; 0x40
 800d68c:	4a44      	ldr	r2, [pc, #272]	; (800d7a0 <createProblem+0xc8f8>)
 800d68e:	461c      	mov	r4, r3
 800d690:	4613      	mov	r3, r2
 800d692:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d694:	6020      	str	r0, [r4, #0]
 800d696:	6061      	str	r1, [r4, #4]
 800d698:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,11,12,16,18");
 800d69a:	687b      	ldr	r3, [r7, #4]
 800d69c:	3304      	adds	r3, #4
 800d69e:	4a41      	ldr	r2, [pc, #260]	; (800d7a4 <createProblem+0xc8fc>)
 800d6a0:	461c      	mov	r4, r3
 800d6a2:	4615      	mov	r5, r2
 800d6a4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d6a6:	6020      	str	r0, [r4, #0]
 800d6a8:	6061      	str	r1, [r4, #4]
 800d6aa:	60a2      	str	r2, [r4, #8]
 800d6ac:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800d6ae:	687b      	ldr	r3, [r7, #4]
 800d6b0:	33d8      	adds	r3, #216	; 0xd8
 800d6b2:	4a35      	ldr	r2, [pc, #212]	; (800d788 <createProblem+0xc8e0>)
 800d6b4:	461c      	mov	r4, r3
 800d6b6:	4613      	mov	r3, r2
 800d6b8:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d6ba:	6020      	str	r0, [r4, #0]
 800d6bc:	6061      	str	r1, [r4, #4]
 800d6be:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 800d6c0:	687b      	ldr	r3, [r7, #4]
 800d6c2:	33cc      	adds	r3, #204	; 0xcc
 800d6c4:	4a38      	ldr	r2, [pc, #224]	; (800d7a8 <createProblem+0xc900>)
 800d6c6:	6810      	ldr	r0, [r2, #0]
 800d6c8:	6018      	str	r0, [r3, #0]
			break;
 800d6ca:	f00d b933 	b.w	801a934 <createProblem+0x19a8c>
		case 441 :
			strcpy(p->name,"FUDGE YEAH");
 800d6ce:	687b      	ldr	r3, [r7, #4]
 800d6d0:	337c      	adds	r3, #124	; 0x7c
 800d6d2:	4936      	ldr	r1, [pc, #216]	; (800d7ac <createProblem+0xc904>)
 800d6d4:	461a      	mov	r2, r3
 800d6d6:	460b      	mov	r3, r1
 800d6d8:	cb03      	ldmia	r3!, {r0, r1}
 800d6da:	6010      	str	r0, [r2, #0]
 800d6dc:	6051      	str	r1, [r2, #4]
 800d6de:	8819      	ldrh	r1, [r3, #0]
 800d6e0:	789b      	ldrb	r3, [r3, #2]
 800d6e2:	8111      	strh	r1, [r2, #8]
 800d6e4:	7293      	strb	r3, [r2, #10]
			p->moveSize = 9;
 800d6e6:	687b      	ldr	r3, [r7, #4]
 800d6e8:	2209      	movs	r2, #9
 800d6ea:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,H,G,H,G,I,H,I");
 800d6ec:	687b      	ldr	r3, [r7, #4]
 800d6ee:	3340      	adds	r3, #64	; 0x40
 800d6f0:	4a2f      	ldr	r2, [pc, #188]	; (800d7b0 <createProblem+0xc908>)
 800d6f2:	461d      	mov	r5, r3
 800d6f4:	4614      	mov	r4, r2
 800d6f6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d6f8:	6028      	str	r0, [r5, #0]
 800d6fa:	6069      	str	r1, [r5, #4]
 800d6fc:	60aa      	str	r2, [r5, #8]
 800d6fe:	60eb      	str	r3, [r5, #12]
 800d700:	8823      	ldrh	r3, [r4, #0]
 800d702:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,6,8,10,12,14,14,16,18");
 800d704:	687b      	ldr	r3, [r7, #4]
 800d706:	3304      	adds	r3, #4
 800d708:	4a2a      	ldr	r2, [pc, #168]	; (800d7b4 <createProblem+0xc90c>)
 800d70a:	461d      	mov	r5, r3
 800d70c:	4614      	mov	r4, r2
 800d70e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d710:	6028      	str	r0, [r5, #0]
 800d712:	6069      	str	r1, [r5, #4]
 800d714:	60aa      	str	r2, [r5, #8]
 800d716:	60eb      	str	r3, [r5, #12]
 800d718:	cc03      	ldmia	r4!, {r0, r1}
 800d71a:	6128      	str	r0, [r5, #16]
 800d71c:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 800d71e:	687b      	ldr	r3, [r7, #4]
 800d720:	33d8      	adds	r3, #216	; 0xd8
 800d722:	4a25      	ldr	r2, [pc, #148]	; (800d7b8 <createProblem+0xc910>)
 800d724:	461d      	mov	r5, r3
 800d726:	4614      	mov	r4, r2
 800d728:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d72a:	6028      	str	r0, [r5, #0]
 800d72c:	6069      	str	r1, [r5, #4]
 800d72e:	60aa      	str	r2, [r5, #8]
 800d730:	60eb      	str	r3, [r5, #12]
 800d732:	8823      	ldrh	r3, [r4, #0]
 800d734:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 800d736:	687b      	ldr	r3, [r7, #4]
 800d738:	33cc      	adds	r3, #204	; 0xcc
 800d73a:	4a06      	ldr	r2, [pc, #24]	; (800d754 <createProblem+0xc8ac>)
 800d73c:	6810      	ldr	r0, [r2, #0]
 800d73e:	6018      	str	r0, [r3, #0]
			break;
 800d740:	f00d b8f8 	b.w	801a934 <createProblem+0x19a8c>
 800d744:	08024e34 	.word	0x08024e34
 800d748:	08024e48 	.word	0x08024e48
 800d74c:	08024e58 	.word	0x08024e58
 800d750:	08020820 	.word	0x08020820
 800d754:	08020830 	.word	0x08020830
 800d758:	08024e6c 	.word	0x08024e6c
 800d75c:	08024e7c 	.word	0x08024e7c
 800d760:	08024e8c 	.word	0x08024e8c
 800d764:	08020a4c 	.word	0x08020a4c
 800d768:	08024ea4 	.word	0x08024ea4
 800d76c:	08024eb8 	.word	0x08024eb8
 800d770:	08022f5c 	.word	0x08022f5c
 800d774:	080208a0 	.word	0x080208a0
 800d778:	08020874 	.word	0x08020874
 800d77c:	08024ec4 	.word	0x08024ec4
 800d780:	08024ed4 	.word	0x08024ed4
 800d784:	08024ee0 	.word	0x08024ee0
 800d788:	0802091c 	.word	0x0802091c
 800d78c:	08020dc8 	.word	0x08020dc8
 800d790:	08024ef0 	.word	0x08024ef0
 800d794:	08024ef8 	.word	0x08024ef8
 800d798:	08024f08 	.word	0x08024f08
 800d79c:	08024f20 	.word	0x08024f20
 800d7a0:	08024f2c 	.word	0x08024f2c
 800d7a4:	08024f38 	.word	0x08024f38
 800d7a8:	080209a4 	.word	0x080209a4
 800d7ac:	08024f48 	.word	0x08024f48
 800d7b0:	08024f54 	.word	0x08024f54
 800d7b4:	08024f68 	.word	0x08024f68
 800d7b8:	08020dfc 	.word	0x08020dfc
		case 442 :
			strcpy(p->name,"SHARK FIN");
 800d7bc:	687b      	ldr	r3, [r7, #4]
 800d7be:	337c      	adds	r3, #124	; 0x7c
 800d7c0:	49bf      	ldr	r1, [pc, #764]	; (800dac0 <createProblem+0xcc18>)
 800d7c2:	461a      	mov	r2, r3
 800d7c4:	460b      	mov	r3, r1
 800d7c6:	cb03      	ldmia	r3!, {r0, r1}
 800d7c8:	6010      	str	r0, [r2, #0]
 800d7ca:	6051      	str	r1, [r2, #4]
 800d7cc:	881b      	ldrh	r3, [r3, #0]
 800d7ce:	8113      	strh	r3, [r2, #8]
			p->moveSize = 9;
 800d7d0:	687b      	ldr	r3, [r7, #4]
 800d7d2:	2209      	movs	r2, #9
 800d7d4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,C,G,D,H,G,C,I");
 800d7d6:	687b      	ldr	r3, [r7, #4]
 800d7d8:	3340      	adds	r3, #64	; 0x40
 800d7da:	4aba      	ldr	r2, [pc, #744]	; (800dac4 <createProblem+0xcc1c>)
 800d7dc:	461d      	mov	r5, r3
 800d7de:	4614      	mov	r4, r2
 800d7e0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d7e2:	6028      	str	r0, [r5, #0]
 800d7e4:	6069      	str	r1, [r5, #4]
 800d7e6:	60aa      	str	r2, [r5, #8]
 800d7e8:	60eb      	str	r3, [r5, #12]
 800d7ea:	8823      	ldrh	r3, [r4, #0]
 800d7ec:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,5,8,9,11,13,15,5,18");
 800d7ee:	687b      	ldr	r3, [r7, #4]
 800d7f0:	3304      	adds	r3, #4
 800d7f2:	4ab5      	ldr	r2, [pc, #724]	; (800dac8 <createProblem+0xcc20>)
 800d7f4:	461d      	mov	r5, r3
 800d7f6:	4614      	mov	r4, r2
 800d7f8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d7fa:	6028      	str	r0, [r5, #0]
 800d7fc:	6069      	str	r1, [r5, #4]
 800d7fe:	60aa      	str	r2, [r5, #8]
 800d800:	60eb      	str	r3, [r5, #12]
 800d802:	6820      	ldr	r0, [r4, #0]
 800d804:	6128      	str	r0, [r5, #16]
 800d806:	88a3      	ldrh	r3, [r4, #4]
 800d808:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 800d80a:	687b      	ldr	r3, [r7, #4]
 800d80c:	33d8      	adds	r3, #216	; 0xd8
 800d80e:	4aaf      	ldr	r2, [pc, #700]	; (800dacc <createProblem+0xcc24>)
 800d810:	461d      	mov	r5, r3
 800d812:	4614      	mov	r4, r2
 800d814:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d816:	6028      	str	r0, [r5, #0]
 800d818:	6069      	str	r1, [r5, #4]
 800d81a:	60aa      	str	r2, [r5, #8]
 800d81c:	60eb      	str	r3, [r5, #12]
 800d81e:	8823      	ldrh	r3, [r4, #0]
 800d820:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 800d822:	687b      	ldr	r3, [r7, #4]
 800d824:	33cc      	adds	r3, #204	; 0xcc
 800d826:	4aaa      	ldr	r2, [pc, #680]	; (800dad0 <createProblem+0xcc28>)
 800d828:	6810      	ldr	r0, [r2, #0]
 800d82a:	6018      	str	r0, [r3, #0]
			break;
 800d82c:	f00d b882 	b.w	801a934 <createProblem+0x19a8c>
		case 443 :
			strcpy(p->name,"WARM UP BB");
 800d830:	687b      	ldr	r3, [r7, #4]
 800d832:	337c      	adds	r3, #124	; 0x7c
 800d834:	49a7      	ldr	r1, [pc, #668]	; (800dad4 <createProblem+0xcc2c>)
 800d836:	461a      	mov	r2, r3
 800d838:	460b      	mov	r3, r1
 800d83a:	cb03      	ldmia	r3!, {r0, r1}
 800d83c:	6010      	str	r0, [r2, #0]
 800d83e:	6051      	str	r1, [r2, #4]
 800d840:	8819      	ldrh	r1, [r3, #0]
 800d842:	789b      	ldrb	r3, [r3, #2]
 800d844:	8111      	strh	r1, [r2, #8]
 800d846:	7293      	strb	r3, [r2, #10]
			p->moveSize = 8;
 800d848:	687b      	ldr	r3, [r7, #4]
 800d84a:	2208      	movs	r2, #8
 800d84c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,G,E,G,D,G,D");
 800d84e:	687b      	ldr	r3, [r7, #4]
 800d850:	3340      	adds	r3, #64	; 0x40
 800d852:	4aa1      	ldr	r2, [pc, #644]	; (800dad8 <createProblem+0xcc30>)
 800d854:	461c      	mov	r4, r3
 800d856:	4615      	mov	r5, r2
 800d858:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d85a:	6020      	str	r0, [r4, #0]
 800d85c:	6061      	str	r1, [r4, #4]
 800d85e:	60a2      	str	r2, [r4, #8]
 800d860:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,4,9,8,14,15,17,18");
 800d862:	687b      	ldr	r3, [r7, #4]
 800d864:	3304      	adds	r3, #4
 800d866:	4a9d      	ldr	r2, [pc, #628]	; (800dadc <createProblem+0xcc34>)
 800d868:	461d      	mov	r5, r3
 800d86a:	4614      	mov	r4, r2
 800d86c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d86e:	6028      	str	r0, [r5, #0]
 800d870:	6069      	str	r1, [r5, #4]
 800d872:	60aa      	str	r2, [r5, #8]
 800d874:	60eb      	str	r3, [r5, #12]
 800d876:	6820      	ldr	r0, [r4, #0]
 800d878:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800d87a:	687b      	ldr	r3, [r7, #4]
 800d87c:	33d8      	adds	r3, #216	; 0xd8
 800d87e:	4a98      	ldr	r2, [pc, #608]	; (800dae0 <createProblem+0xcc38>)
 800d880:	461c      	mov	r4, r3
 800d882:	4615      	mov	r5, r2
 800d884:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d886:	6020      	str	r0, [r4, #0]
 800d888:	6061      	str	r1, [r4, #4]
 800d88a:	60a2      	str	r2, [r4, #8]
 800d88c:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800d88e:	687b      	ldr	r3, [r7, #4]
 800d890:	33cc      	adds	r3, #204	; 0xcc
 800d892:	4a8f      	ldr	r2, [pc, #572]	; (800dad0 <createProblem+0xcc28>)
 800d894:	6810      	ldr	r0, [r2, #0]
 800d896:	6018      	str	r0, [r3, #0]
			break;
 800d898:	f00d b84c 	b.w	801a934 <createProblem+0x19a8c>
		case 444 :
			strcpy(p->name,"VANDO");
 800d89c:	687b      	ldr	r3, [r7, #4]
 800d89e:	337c      	adds	r3, #124	; 0x7c
 800d8a0:	4a90      	ldr	r2, [pc, #576]	; (800dae4 <createProblem+0xcc3c>)
 800d8a2:	6810      	ldr	r0, [r2, #0]
 800d8a4:	6018      	str	r0, [r3, #0]
 800d8a6:	8892      	ldrh	r2, [r2, #4]
 800d8a8:	809a      	strh	r2, [r3, #4]
			p->moveSize = 5;
 800d8aa:	687b      	ldr	r3, [r7, #4]
 800d8ac:	2205      	movs	r2, #5
 800d8ae:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,G,D,D");
 800d8b0:	687b      	ldr	r3, [r7, #4]
 800d8b2:	3340      	adds	r3, #64	; 0x40
 800d8b4:	498c      	ldr	r1, [pc, #560]	; (800dae8 <createProblem+0xcc40>)
 800d8b6:	461a      	mov	r2, r3
 800d8b8:	460b      	mov	r3, r1
 800d8ba:	cb03      	ldmia	r3!, {r0, r1}
 800d8bc:	6010      	str	r0, [r2, #0]
 800d8be:	6051      	str	r1, [r2, #4]
 800d8c0:	881b      	ldrh	r3, [r3, #0]
 800d8c2:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,14,15,18");
 800d8c4:	687b      	ldr	r3, [r7, #4]
 800d8c6:	3304      	adds	r3, #4
 800d8c8:	4a88      	ldr	r2, [pc, #544]	; (800daec <createProblem+0xcc44>)
 800d8ca:	461c      	mov	r4, r3
 800d8cc:	4613      	mov	r3, r2
 800d8ce:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d8d0:	6020      	str	r0, [r4, #0]
 800d8d2:	6061      	str	r1, [r4, #4]
 800d8d4:	60a2      	str	r2, [r4, #8]
 800d8d6:	881b      	ldrh	r3, [r3, #0]
 800d8d8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800d8da:	687b      	ldr	r3, [r7, #4]
 800d8dc:	33d8      	adds	r3, #216	; 0xd8
 800d8de:	4984      	ldr	r1, [pc, #528]	; (800daf0 <createProblem+0xcc48>)
 800d8e0:	461a      	mov	r2, r3
 800d8e2:	460b      	mov	r3, r1
 800d8e4:	cb03      	ldmia	r3!, {r0, r1}
 800d8e6:	6010      	str	r0, [r2, #0]
 800d8e8:	6051      	str	r1, [r2, #4]
 800d8ea:	881b      	ldrh	r3, [r3, #0]
 800d8ec:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6B+");
 800d8ee:	687b      	ldr	r3, [r7, #4]
 800d8f0:	33cc      	adds	r3, #204	; 0xcc
 800d8f2:	4a77      	ldr	r2, [pc, #476]	; (800dad0 <createProblem+0xcc28>)
 800d8f4:	6810      	ldr	r0, [r2, #0]
 800d8f6:	6018      	str	r0, [r3, #0]
			break;
 800d8f8:	f00d b81c 	b.w	801a934 <createProblem+0x19a8c>
		case 445 :
			strcpy(p->name,"SLING SHOT");
 800d8fc:	687b      	ldr	r3, [r7, #4]
 800d8fe:	337c      	adds	r3, #124	; 0x7c
 800d900:	497c      	ldr	r1, [pc, #496]	; (800daf4 <createProblem+0xcc4c>)
 800d902:	461a      	mov	r2, r3
 800d904:	460b      	mov	r3, r1
 800d906:	cb03      	ldmia	r3!, {r0, r1}
 800d908:	6010      	str	r0, [r2, #0]
 800d90a:	6051      	str	r1, [r2, #4]
 800d90c:	8819      	ldrh	r1, [r3, #0]
 800d90e:	789b      	ldrb	r3, [r3, #2]
 800d910:	8111      	strh	r1, [r2, #8]
 800d912:	7293      	strb	r3, [r2, #10]
			p->moveSize = 5;
 800d914:	687b      	ldr	r3, [r7, #4]
 800d916:	2205      	movs	r2, #5
 800d918:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,F,G,I");
 800d91a:	687b      	ldr	r3, [r7, #4]
 800d91c:	3340      	adds	r3, #64	; 0x40
 800d91e:	4976      	ldr	r1, [pc, #472]	; (800daf8 <createProblem+0xcc50>)
 800d920:	461a      	mov	r2, r3
 800d922:	460b      	mov	r3, r1
 800d924:	cb03      	ldmia	r3!, {r0, r1}
 800d926:	6010      	str	r0, [r2, #0]
 800d928:	6051      	str	r1, [r2, #4]
 800d92a:	881b      	ldrh	r3, [r3, #0]
 800d92c:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,11,14,18");
 800d92e:	687b      	ldr	r3, [r7, #4]
 800d930:	3304      	adds	r3, #4
 800d932:	4a72      	ldr	r2, [pc, #456]	; (800dafc <createProblem+0xcc54>)
 800d934:	461c      	mov	r4, r3
 800d936:	4613      	mov	r3, r2
 800d938:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d93a:	6020      	str	r0, [r4, #0]
 800d93c:	6061      	str	r1, [r4, #4]
 800d93e:	60a2      	str	r2, [r4, #8]
 800d940:	781b      	ldrb	r3, [r3, #0]
 800d942:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800d944:	687b      	ldr	r3, [r7, #4]
 800d946:	33d8      	adds	r3, #216	; 0xd8
 800d948:	4969      	ldr	r1, [pc, #420]	; (800daf0 <createProblem+0xcc48>)
 800d94a:	461a      	mov	r2, r3
 800d94c:	460b      	mov	r3, r1
 800d94e:	cb03      	ldmia	r3!, {r0, r1}
 800d950:	6010      	str	r0, [r2, #0]
 800d952:	6051      	str	r1, [r2, #4]
 800d954:	881b      	ldrh	r3, [r3, #0]
 800d956:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C");
 800d958:	687b      	ldr	r3, [r7, #4]
 800d95a:	33cc      	adds	r3, #204	; 0xcc
 800d95c:	4a68      	ldr	r2, [pc, #416]	; (800db00 <createProblem+0xcc58>)
 800d95e:	8811      	ldrh	r1, [r2, #0]
 800d960:	7892      	ldrb	r2, [r2, #2]
 800d962:	8019      	strh	r1, [r3, #0]
 800d964:	709a      	strb	r2, [r3, #2]
			break;
 800d966:	f00c bfe5 	b.w	801a934 <createProblem+0x19a8c>
		case 446 :
			strcpy(p->name,"FROCENZO A ROCCAMORICE");
 800d96a:	687b      	ldr	r3, [r7, #4]
 800d96c:	337c      	adds	r3, #124	; 0x7c
 800d96e:	4a65      	ldr	r2, [pc, #404]	; (800db04 <createProblem+0xcc5c>)
 800d970:	461c      	mov	r4, r3
 800d972:	4615      	mov	r5, r2
 800d974:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800d976:	6020      	str	r0, [r4, #0]
 800d978:	6061      	str	r1, [r4, #4]
 800d97a:	60a2      	str	r2, [r4, #8]
 800d97c:	60e3      	str	r3, [r4, #12]
 800d97e:	6828      	ldr	r0, [r5, #0]
 800d980:	6120      	str	r0, [r4, #16]
 800d982:	88ab      	ldrh	r3, [r5, #4]
 800d984:	79aa      	ldrb	r2, [r5, #6]
 800d986:	82a3      	strh	r3, [r4, #20]
 800d988:	4613      	mov	r3, r2
 800d98a:	75a3      	strb	r3, [r4, #22]
			p->moveSize = 5;
 800d98c:	687b      	ldr	r3, [r7, #4]
 800d98e:	2205      	movs	r2, #5
 800d990:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,E,B,D,A");
 800d992:	687b      	ldr	r3, [r7, #4]
 800d994:	3340      	adds	r3, #64	; 0x40
 800d996:	495c      	ldr	r1, [pc, #368]	; (800db08 <createProblem+0xcc60>)
 800d998:	461a      	mov	r2, r3
 800d99a:	460b      	mov	r3, r1
 800d99c:	cb03      	ldmia	r3!, {r0, r1}
 800d99e:	6010      	str	r0, [r2, #0]
 800d9a0:	6051      	str	r1, [r2, #4]
 800d9a2:	881b      	ldrh	r3, [r3, #0]
 800d9a4:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,8,12,15,18");
 800d9a6:	687b      	ldr	r3, [r7, #4]
 800d9a8:	3304      	adds	r3, #4
 800d9aa:	4a58      	ldr	r2, [pc, #352]	; (800db0c <createProblem+0xcc64>)
 800d9ac:	461c      	mov	r4, r3
 800d9ae:	4613      	mov	r3, r2
 800d9b0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800d9b2:	6020      	str	r0, [r4, #0]
 800d9b4:	6061      	str	r1, [r4, #4]
 800d9b6:	60a2      	str	r2, [r4, #8]
 800d9b8:	781b      	ldrb	r3, [r3, #0]
 800d9ba:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800d9bc:	687b      	ldr	r3, [r7, #4]
 800d9be:	33d8      	adds	r3, #216	; 0xd8
 800d9c0:	494b      	ldr	r1, [pc, #300]	; (800daf0 <createProblem+0xcc48>)
 800d9c2:	461a      	mov	r2, r3
 800d9c4:	460b      	mov	r3, r1
 800d9c6:	cb03      	ldmia	r3!, {r0, r1}
 800d9c8:	6010      	str	r0, [r2, #0]
 800d9ca:	6051      	str	r1, [r2, #4]
 800d9cc:	881b      	ldrh	r3, [r3, #0]
 800d9ce:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 800d9d0:	687b      	ldr	r3, [r7, #4]
 800d9d2:	33cc      	adds	r3, #204	; 0xcc
 800d9d4:	4a4e      	ldr	r2, [pc, #312]	; (800db10 <createProblem+0xcc68>)
 800d9d6:	8811      	ldrh	r1, [r2, #0]
 800d9d8:	7892      	ldrb	r2, [r2, #2]
 800d9da:	8019      	strh	r1, [r3, #0]
 800d9dc:	709a      	strb	r2, [r3, #2]
			break;
 800d9de:	f00c bfa9 	b.w	801a934 <createProblem+0x19a8c>
		case 447 :
			strcpy(p->name,"FINGERY BY NATURE");
 800d9e2:	687b      	ldr	r3, [r7, #4]
 800d9e4:	337c      	adds	r3, #124	; 0x7c
 800d9e6:	4a4b      	ldr	r2, [pc, #300]	; (800db14 <createProblem+0xcc6c>)
 800d9e8:	461d      	mov	r5, r3
 800d9ea:	4614      	mov	r4, r2
 800d9ec:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800d9ee:	6028      	str	r0, [r5, #0]
 800d9f0:	6069      	str	r1, [r5, #4]
 800d9f2:	60aa      	str	r2, [r5, #8]
 800d9f4:	60eb      	str	r3, [r5, #12]
 800d9f6:	8823      	ldrh	r3, [r4, #0]
 800d9f8:	822b      	strh	r3, [r5, #16]
			p->moveSize = 6;
 800d9fa:	687b      	ldr	r3, [r7, #4]
 800d9fc:	2206      	movs	r2, #6
 800d9fe:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,G,B,E,D");
 800da00:	687b      	ldr	r3, [r7, #4]
 800da02:	3340      	adds	r3, #64	; 0x40
 800da04:	4a44      	ldr	r2, [pc, #272]	; (800db18 <createProblem+0xcc70>)
 800da06:	461c      	mov	r4, r3
 800da08:	4613      	mov	r3, r2
 800da0a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800da0c:	6020      	str	r0, [r4, #0]
 800da0e:	6061      	str	r1, [r4, #4]
 800da10:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,10,10,14,18");
 800da12:	687b      	ldr	r3, [r7, #4]
 800da14:	3304      	adds	r3, #4
 800da16:	4a41      	ldr	r2, [pc, #260]	; (800db1c <createProblem+0xcc74>)
 800da18:	461c      	mov	r4, r3
 800da1a:	4615      	mov	r5, r2
 800da1c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800da1e:	6020      	str	r0, [r4, #0]
 800da20:	6061      	str	r1, [r4, #4]
 800da22:	60a2      	str	r2, [r4, #8]
 800da24:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800da26:	687b      	ldr	r3, [r7, #4]
 800da28:	33d8      	adds	r3, #216	; 0xd8
 800da2a:	4a3d      	ldr	r2, [pc, #244]	; (800db20 <createProblem+0xcc78>)
 800da2c:	461c      	mov	r4, r3
 800da2e:	4613      	mov	r3, r2
 800da30:	cb07      	ldmia	r3!, {r0, r1, r2}
 800da32:	6020      	str	r0, [r4, #0]
 800da34:	6061      	str	r1, [r4, #4]
 800da36:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 800da38:	687b      	ldr	r3, [r7, #4]
 800da3a:	33cc      	adds	r3, #204	; 0xcc
 800da3c:	4a34      	ldr	r2, [pc, #208]	; (800db10 <createProblem+0xcc68>)
 800da3e:	8811      	ldrh	r1, [r2, #0]
 800da40:	7892      	ldrb	r2, [r2, #2]
 800da42:	8019      	strh	r1, [r3, #0]
 800da44:	709a      	strb	r2, [r3, #2]
			break;
 800da46:	f00c bf75 	b.w	801a934 <createProblem+0x19a8c>
		case 448 :
			strcpy(p->name,"QUARTER PAST MIDNIGHT");
 800da4a:	687b      	ldr	r3, [r7, #4]
 800da4c:	337c      	adds	r3, #124	; 0x7c
 800da4e:	4a35      	ldr	r2, [pc, #212]	; (800db24 <createProblem+0xcc7c>)
 800da50:	461d      	mov	r5, r3
 800da52:	4614      	mov	r4, r2
 800da54:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800da56:	6028      	str	r0, [r5, #0]
 800da58:	6069      	str	r1, [r5, #4]
 800da5a:	60aa      	str	r2, [r5, #8]
 800da5c:	60eb      	str	r3, [r5, #12]
 800da5e:	6820      	ldr	r0, [r4, #0]
 800da60:	6128      	str	r0, [r5, #16]
 800da62:	88a3      	ldrh	r3, [r4, #4]
 800da64:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 7;
 800da66:	687b      	ldr	r3, [r7, #4]
 800da68:	2207      	movs	r2, #7
 800da6a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,G,F,J,G,I");
 800da6c:	687b      	ldr	r3, [r7, #4]
 800da6e:	3340      	adds	r3, #64	; 0x40
 800da70:	4a2d      	ldr	r2, [pc, #180]	; (800db28 <createProblem+0xcc80>)
 800da72:	461c      	mov	r4, r3
 800da74:	4613      	mov	r3, r2
 800da76:	cb07      	ldmia	r3!, {r0, r1, r2}
 800da78:	6020      	str	r0, [r4, #0]
 800da7a:	6061      	str	r1, [r4, #4]
 800da7c:	60a2      	str	r2, [r4, #8]
 800da7e:	881b      	ldrh	r3, [r3, #0]
 800da80:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,9,11,13,15,18");
 800da82:	687b      	ldr	r3, [r7, #4]
 800da84:	3304      	adds	r3, #4
 800da86:	4a29      	ldr	r2, [pc, #164]	; (800db2c <createProblem+0xcc84>)
 800da88:	461d      	mov	r5, r3
 800da8a:	4614      	mov	r4, r2
 800da8c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800da8e:	6028      	str	r0, [r5, #0]
 800da90:	6069      	str	r1, [r5, #4]
 800da92:	60aa      	str	r2, [r5, #8]
 800da94:	60eb      	str	r3, [r5, #12]
 800da96:	8823      	ldrh	r3, [r4, #0]
 800da98:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800da9a:	687b      	ldr	r3, [r7, #4]
 800da9c:	33d8      	adds	r3, #216	; 0xd8
 800da9e:	4a24      	ldr	r2, [pc, #144]	; (800db30 <createProblem+0xcc88>)
 800daa0:	461c      	mov	r4, r3
 800daa2:	4613      	mov	r3, r2
 800daa4:	cb07      	ldmia	r3!, {r0, r1, r2}
 800daa6:	6020      	str	r0, [r4, #0]
 800daa8:	6061      	str	r1, [r4, #4]
 800daaa:	60a2      	str	r2, [r4, #8]
 800daac:	881b      	ldrh	r3, [r3, #0]
 800daae:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 800dab0:	687b      	ldr	r3, [r7, #4]
 800dab2:	33cc      	adds	r3, #204	; 0xcc
 800dab4:	4a1f      	ldr	r2, [pc, #124]	; (800db34 <createProblem+0xcc8c>)
 800dab6:	6810      	ldr	r0, [r2, #0]
 800dab8:	6018      	str	r0, [r3, #0]
			break;
 800daba:	f00c bf3b 	b.w	801a934 <createProblem+0x19a8c>
 800dabe:	bf00      	nop
 800dac0:	08024f80 	.word	0x08024f80
 800dac4:	08024f8c 	.word	0x08024f8c
 800dac8:	08024fa0 	.word	0x08024fa0
 800dacc:	08020dfc 	.word	0x08020dfc
 800dad0:	08020830 	.word	0x08020830
 800dad4:	08024fb8 	.word	0x08024fb8
 800dad8:	08024fc4 	.word	0x08024fc4
 800dadc:	08024fd4 	.word	0x08024fd4
 800dae0:	08020a4c 	.word	0x08020a4c
 800dae4:	08024fe8 	.word	0x08024fe8
 800dae8:	08024ff0 	.word	0x08024ff0
 800daec:	080229fc 	.word	0x080229fc
 800daf0:	080208a0 	.word	0x080208a0
 800daf4:	08024ffc 	.word	0x08024ffc
 800daf8:	08025008 	.word	0x08025008
 800dafc:	0802140c 	.word	0x0802140c
 800db00:	080208f0 	.word	0x080208f0
 800db04:	08025014 	.word	0x08025014
 800db08:	0802502c 	.word	0x0802502c
 800db0c:	08025038 	.word	0x08025038
 800db10:	08020874 	.word	0x08020874
 800db14:	08025048 	.word	0x08025048
 800db18:	0802505c 	.word	0x0802505c
 800db1c:	08025068 	.word	0x08025068
 800db20:	0802091c 	.word	0x0802091c
 800db24:	08025078 	.word	0x08025078
 800db28:	08025090 	.word	0x08025090
 800db2c:	080250a0 	.word	0x080250a0
 800db30:	08020820 	.word	0x08020820
 800db34:	08020928 	.word	0x08020928
		case 449 :
			strcpy(p->name,"RECHARGE");
 800db38:	687b      	ldr	r3, [r7, #4]
 800db3a:	337c      	adds	r3, #124	; 0x7c
 800db3c:	49b5      	ldr	r1, [pc, #724]	; (800de14 <createProblem+0xcf6c>)
 800db3e:	461a      	mov	r2, r3
 800db40:	460b      	mov	r3, r1
 800db42:	cb03      	ldmia	r3!, {r0, r1}
 800db44:	6010      	str	r0, [r2, #0]
 800db46:	6051      	str	r1, [r2, #4]
 800db48:	781b      	ldrb	r3, [r3, #0]
 800db4a:	7213      	strb	r3, [r2, #8]
			p->moveSize = 5;
 800db4c:	687b      	ldr	r3, [r7, #4]
 800db4e:	2205      	movs	r2, #5
 800db50:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,G,G,A");
 800db52:	687b      	ldr	r3, [r7, #4]
 800db54:	3340      	adds	r3, #64	; 0x40
 800db56:	49b0      	ldr	r1, [pc, #704]	; (800de18 <createProblem+0xcf70>)
 800db58:	461a      	mov	r2, r3
 800db5a:	460b      	mov	r3, r1
 800db5c:	cb03      	ldmia	r3!, {r0, r1}
 800db5e:	6010      	str	r0, [r2, #0]
 800db60:	6051      	str	r1, [r2, #4]
 800db62:	881b      	ldrh	r3, [r3, #0]
 800db64:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,10,14,17,18");
 800db66:	687b      	ldr	r3, [r7, #4]
 800db68:	3304      	adds	r3, #4
 800db6a:	4aac      	ldr	r2, [pc, #688]	; (800de1c <createProblem+0xcf74>)
 800db6c:	461c      	mov	r4, r3
 800db6e:	4613      	mov	r3, r2
 800db70:	cb07      	ldmia	r3!, {r0, r1, r2}
 800db72:	6020      	str	r0, [r4, #0]
 800db74:	6061      	str	r1, [r4, #4]
 800db76:	60a2      	str	r2, [r4, #8]
 800db78:	881b      	ldrh	r3, [r3, #0]
 800db7a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800db7c:	687b      	ldr	r3, [r7, #4]
 800db7e:	33d8      	adds	r3, #216	; 0xd8
 800db80:	49a7      	ldr	r1, [pc, #668]	; (800de20 <createProblem+0xcf78>)
 800db82:	461a      	mov	r2, r3
 800db84:	460b      	mov	r3, r1
 800db86:	cb03      	ldmia	r3!, {r0, r1}
 800db88:	6010      	str	r0, [r2, #0]
 800db8a:	6051      	str	r1, [r2, #4]
 800db8c:	881b      	ldrh	r3, [r3, #0]
 800db8e:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 800db90:	687b      	ldr	r3, [r7, #4]
 800db92:	33cc      	adds	r3, #204	; 0xcc
 800db94:	4aa3      	ldr	r2, [pc, #652]	; (800de24 <createProblem+0xcf7c>)
 800db96:	6810      	ldr	r0, [r2, #0]
 800db98:	6018      	str	r0, [r3, #0]
			break;
 800db9a:	f00c becb 	b.w	801a934 <createProblem+0x19a8c>
		case 45 :
			strcpy(p->name,"TESS WIDE");
 800db9e:	687b      	ldr	r3, [r7, #4]
 800dba0:	337c      	adds	r3, #124	; 0x7c
 800dba2:	49a1      	ldr	r1, [pc, #644]	; (800de28 <createProblem+0xcf80>)
 800dba4:	461a      	mov	r2, r3
 800dba6:	460b      	mov	r3, r1
 800dba8:	cb03      	ldmia	r3!, {r0, r1}
 800dbaa:	6010      	str	r0, [r2, #0]
 800dbac:	6051      	str	r1, [r2, #4]
 800dbae:	881b      	ldrh	r3, [r3, #0]
 800dbb0:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 800dbb2:	687b      	ldr	r3, [r7, #4]
 800dbb4:	2207      	movs	r2, #7
 800dbb6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,E,H,C,D,D");
 800dbb8:	687b      	ldr	r3, [r7, #4]
 800dbba:	3340      	adds	r3, #64	; 0x40
 800dbbc:	4a9b      	ldr	r2, [pc, #620]	; (800de2c <createProblem+0xcf84>)
 800dbbe:	461c      	mov	r4, r3
 800dbc0:	4613      	mov	r3, r2
 800dbc2:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dbc4:	6020      	str	r0, [r4, #0]
 800dbc6:	6061      	str	r1, [r4, #4]
 800dbc8:	60a2      	str	r2, [r4, #8]
 800dbca:	881b      	ldrh	r3, [r3, #0]
 800dbcc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,10,13,15,18");
 800dbce:	687b      	ldr	r3, [r7, #4]
 800dbd0:	3304      	adds	r3, #4
 800dbd2:	4a97      	ldr	r2, [pc, #604]	; (800de30 <createProblem+0xcf88>)
 800dbd4:	461d      	mov	r5, r3
 800dbd6:	4614      	mov	r4, r2
 800dbd8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800dbda:	6028      	str	r0, [r5, #0]
 800dbdc:	6069      	str	r1, [r5, #4]
 800dbde:	60aa      	str	r2, [r5, #8]
 800dbe0:	60eb      	str	r3, [r5, #12]
 800dbe2:	8823      	ldrh	r3, [r4, #0]
 800dbe4:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800dbe6:	687b      	ldr	r3, [r7, #4]
 800dbe8:	33d8      	adds	r3, #216	; 0xd8
 800dbea:	4a92      	ldr	r2, [pc, #584]	; (800de34 <createProblem+0xcf8c>)
 800dbec:	461c      	mov	r4, r3
 800dbee:	4613      	mov	r3, r2
 800dbf0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dbf2:	6020      	str	r0, [r4, #0]
 800dbf4:	6061      	str	r1, [r4, #4]
 800dbf6:	60a2      	str	r2, [r4, #8]
 800dbf8:	881b      	ldrh	r3, [r3, #0]
 800dbfa:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 800dbfc:	687b      	ldr	r3, [r7, #4]
 800dbfe:	33cc      	adds	r3, #204	; 0xcc
 800dc00:	4a8d      	ldr	r2, [pc, #564]	; (800de38 <createProblem+0xcf90>)
 800dc02:	8811      	ldrh	r1, [r2, #0]
 800dc04:	7892      	ldrb	r2, [r2, #2]
 800dc06:	8019      	strh	r1, [r3, #0]
 800dc08:	709a      	strb	r2, [r3, #2]
			break;
 800dc0a:	f00c be93 	b.w	801a934 <createProblem+0x19a8c>
		case 450 :
			strcpy(p->name,"LOCK IT DOWN");
 800dc0e:	687b      	ldr	r3, [r7, #4]
 800dc10:	337c      	adds	r3, #124	; 0x7c
 800dc12:	4a8a      	ldr	r2, [pc, #552]	; (800de3c <createProblem+0xcf94>)
 800dc14:	461c      	mov	r4, r3
 800dc16:	4613      	mov	r3, r2
 800dc18:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dc1a:	6020      	str	r0, [r4, #0]
 800dc1c:	6061      	str	r1, [r4, #4]
 800dc1e:	60a2      	str	r2, [r4, #8]
 800dc20:	781b      	ldrb	r3, [r3, #0]
 800dc22:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 800dc24:	687b      	ldr	r3, [r7, #4]
 800dc26:	2206      	movs	r2, #6
 800dc28:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,K,J,E,H,D");
 800dc2a:	687b      	ldr	r3, [r7, #4]
 800dc2c:	3340      	adds	r3, #64	; 0x40
 800dc2e:	4a84      	ldr	r2, [pc, #528]	; (800de40 <createProblem+0xcf98>)
 800dc30:	461c      	mov	r4, r3
 800dc32:	4613      	mov	r3, r2
 800dc34:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dc36:	6020      	str	r0, [r4, #0]
 800dc38:	6061      	str	r1, [r4, #4]
 800dc3a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,12,12,16,18");
 800dc3c:	687b      	ldr	r3, [r7, #4]
 800dc3e:	3304      	adds	r3, #4
 800dc40:	4a80      	ldr	r2, [pc, #512]	; (800de44 <createProblem+0xcf9c>)
 800dc42:	461c      	mov	r4, r3
 800dc44:	4615      	mov	r5, r2
 800dc46:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800dc48:	6020      	str	r0, [r4, #0]
 800dc4a:	6061      	str	r1, [r4, #4]
 800dc4c:	60a2      	str	r2, [r4, #8]
 800dc4e:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800dc50:	687b      	ldr	r3, [r7, #4]
 800dc52:	33d8      	adds	r3, #216	; 0xd8
 800dc54:	4a7c      	ldr	r2, [pc, #496]	; (800de48 <createProblem+0xcfa0>)
 800dc56:	461c      	mov	r4, r3
 800dc58:	4613      	mov	r3, r2
 800dc5a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dc5c:	6020      	str	r0, [r4, #0]
 800dc5e:	6061      	str	r1, [r4, #4]
 800dc60:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 800dc62:	687b      	ldr	r3, [r7, #4]
 800dc64:	33cc      	adds	r3, #204	; 0xcc
 800dc66:	4a6f      	ldr	r2, [pc, #444]	; (800de24 <createProblem+0xcf7c>)
 800dc68:	6810      	ldr	r0, [r2, #0]
 800dc6a:	6018      	str	r0, [r3, #0]
			break;
 800dc6c:	f00c be62 	b.w	801a934 <createProblem+0x19a8c>
		case 451 :
			strcpy(p->name,"BOOTHY TOOTHY");
 800dc70:	687b      	ldr	r3, [r7, #4]
 800dc72:	337c      	adds	r3, #124	; 0x7c
 800dc74:	4a75      	ldr	r2, [pc, #468]	; (800de4c <createProblem+0xcfa4>)
 800dc76:	461c      	mov	r4, r3
 800dc78:	4613      	mov	r3, r2
 800dc7a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dc7c:	6020      	str	r0, [r4, #0]
 800dc7e:	6061      	str	r1, [r4, #4]
 800dc80:	60a2      	str	r2, [r4, #8]
 800dc82:	881b      	ldrh	r3, [r3, #0]
 800dc84:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 800dc86:	687b      	ldr	r3, [r7, #4]
 800dc88:	2206      	movs	r2, #6
 800dc8a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,G,E,J,E,I");
 800dc8c:	687b      	ldr	r3, [r7, #4]
 800dc8e:	3340      	adds	r3, #64	; 0x40
 800dc90:	4a6f      	ldr	r2, [pc, #444]	; (800de50 <createProblem+0xcfa8>)
 800dc92:	461c      	mov	r4, r3
 800dc94:	4613      	mov	r3, r2
 800dc96:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dc98:	6020      	str	r0, [r4, #0]
 800dc9a:	6061      	str	r1, [r4, #4]
 800dc9c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,6,9,12,14,18");
 800dc9e:	687b      	ldr	r3, [r7, #4]
 800dca0:	3304      	adds	r3, #4
 800dca2:	4a6c      	ldr	r2, [pc, #432]	; (800de54 <createProblem+0xcfac>)
 800dca4:	461c      	mov	r4, r3
 800dca6:	4613      	mov	r3, r2
 800dca8:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dcaa:	6020      	str	r0, [r4, #0]
 800dcac:	6061      	str	r1, [r4, #4]
 800dcae:	60a2      	str	r2, [r4, #8]
 800dcb0:	881a      	ldrh	r2, [r3, #0]
 800dcb2:	789b      	ldrb	r3, [r3, #2]
 800dcb4:	81a2      	strh	r2, [r4, #12]
 800dcb6:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800dcb8:	687b      	ldr	r3, [r7, #4]
 800dcba:	33d8      	adds	r3, #216	; 0xd8
 800dcbc:	4a66      	ldr	r2, [pc, #408]	; (800de58 <createProblem+0xcfb0>)
 800dcbe:	461c      	mov	r4, r3
 800dcc0:	4613      	mov	r3, r2
 800dcc2:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dcc4:	6020      	str	r0, [r4, #0]
 800dcc6:	6061      	str	r1, [r4, #4]
 800dcc8:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 800dcca:	687b      	ldr	r3, [r7, #4]
 800dccc:	33cc      	adds	r3, #204	; 0xcc
 800dcce:	4a63      	ldr	r2, [pc, #396]	; (800de5c <createProblem+0xcfb4>)
 800dcd0:	6810      	ldr	r0, [r2, #0]
 800dcd2:	6018      	str	r0, [r3, #0]
			break;
 800dcd4:	f00c be2e 	b.w	801a934 <createProblem+0x19a8c>
		case 452 :
			strcpy(p->name,"THE EASY EASY");
 800dcd8:	687b      	ldr	r3, [r7, #4]
 800dcda:	337c      	adds	r3, #124	; 0x7c
 800dcdc:	4a60      	ldr	r2, [pc, #384]	; (800de60 <createProblem+0xcfb8>)
 800dcde:	461c      	mov	r4, r3
 800dce0:	4613      	mov	r3, r2
 800dce2:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dce4:	6020      	str	r0, [r4, #0]
 800dce6:	6061      	str	r1, [r4, #4]
 800dce8:	60a2      	str	r2, [r4, #8]
 800dcea:	881b      	ldrh	r3, [r3, #0]
 800dcec:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 5;
 800dcee:	687b      	ldr	r3, [r7, #4]
 800dcf0:	2205      	movs	r2, #5
 800dcf2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,G,E,I");
 800dcf4:	687b      	ldr	r3, [r7, #4]
 800dcf6:	3340      	adds	r3, #64	; 0x40
 800dcf8:	495a      	ldr	r1, [pc, #360]	; (800de64 <createProblem+0xcfbc>)
 800dcfa:	461a      	mov	r2, r3
 800dcfc:	460b      	mov	r3, r1
 800dcfe:	cb03      	ldmia	r3!, {r0, r1}
 800dd00:	6010      	str	r0, [r2, #0]
 800dd02:	6051      	str	r1, [r2, #4]
 800dd04:	881b      	ldrh	r3, [r3, #0]
 800dd06:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,10,14,8,18");
 800dd08:	687b      	ldr	r3, [r7, #4]
 800dd0a:	3304      	adds	r3, #4
 800dd0c:	4a56      	ldr	r2, [pc, #344]	; (800de68 <createProblem+0xcfc0>)
 800dd0e:	461c      	mov	r4, r3
 800dd10:	4613      	mov	r3, r2
 800dd12:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dd14:	6020      	str	r0, [r4, #0]
 800dd16:	6061      	str	r1, [r4, #4]
 800dd18:	60a2      	str	r2, [r4, #8]
 800dd1a:	781b      	ldrb	r3, [r3, #0]
 800dd1c:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800dd1e:	687b      	ldr	r3, [r7, #4]
 800dd20:	33d8      	adds	r3, #216	; 0xd8
 800dd22:	493f      	ldr	r1, [pc, #252]	; (800de20 <createProblem+0xcf78>)
 800dd24:	461a      	mov	r2, r3
 800dd26:	460b      	mov	r3, r1
 800dd28:	cb03      	ldmia	r3!, {r0, r1}
 800dd2a:	6010      	str	r0, [r2, #0]
 800dd2c:	6051      	str	r1, [r2, #4]
 800dd2e:	881b      	ldrh	r3, [r3, #0]
 800dd30:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6B+");
 800dd32:	687b      	ldr	r3, [r7, #4]
 800dd34:	33cc      	adds	r3, #204	; 0xcc
 800dd36:	4a49      	ldr	r2, [pc, #292]	; (800de5c <createProblem+0xcfb4>)
 800dd38:	6810      	ldr	r0, [r2, #0]
 800dd3a:	6018      	str	r0, [r3, #0]
			break;
 800dd3c:	f00c bdfa 	b.w	801a934 <createProblem+0x19a8c>
		case 453 :
			strcpy(p->name,"BLACKLISTED");
 800dd40:	687b      	ldr	r3, [r7, #4]
 800dd42:	337c      	adds	r3, #124	; 0x7c
 800dd44:	4a49      	ldr	r2, [pc, #292]	; (800de6c <createProblem+0xcfc4>)
 800dd46:	461c      	mov	r4, r3
 800dd48:	4613      	mov	r3, r2
 800dd4a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dd4c:	6020      	str	r0, [r4, #0]
 800dd4e:	6061      	str	r1, [r4, #4]
 800dd50:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 800dd52:	687b      	ldr	r3, [r7, #4]
 800dd54:	2206      	movs	r2, #6
 800dd56:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,G,C,D,A");
 800dd58:	687b      	ldr	r3, [r7, #4]
 800dd5a:	3340      	adds	r3, #64	; 0x40
 800dd5c:	4a44      	ldr	r2, [pc, #272]	; (800de70 <createProblem+0xcfc8>)
 800dd5e:	461c      	mov	r4, r3
 800dd60:	4613      	mov	r3, r2
 800dd62:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dd64:	6020      	str	r0, [r4, #0]
 800dd66:	6061      	str	r1, [r4, #4]
 800dd68:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,10,13,15,18");
 800dd6a:	687b      	ldr	r3, [r7, #4]
 800dd6c:	3304      	adds	r3, #4
 800dd6e:	4a41      	ldr	r2, [pc, #260]	; (800de74 <createProblem+0xcfcc>)
 800dd70:	461c      	mov	r4, r3
 800dd72:	4615      	mov	r5, r2
 800dd74:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800dd76:	6020      	str	r0, [r4, #0]
 800dd78:	6061      	str	r1, [r4, #4]
 800dd7a:	60a2      	str	r2, [r4, #8]
 800dd7c:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800dd7e:	687b      	ldr	r3, [r7, #4]
 800dd80:	33d8      	adds	r3, #216	; 0xd8
 800dd82:	4a31      	ldr	r2, [pc, #196]	; (800de48 <createProblem+0xcfa0>)
 800dd84:	461c      	mov	r4, r3
 800dd86:	4613      	mov	r3, r2
 800dd88:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dd8a:	6020      	str	r0, [r4, #0]
 800dd8c:	6061      	str	r1, [r4, #4]
 800dd8e:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 800dd90:	687b      	ldr	r3, [r7, #4]
 800dd92:	33cc      	adds	r3, #204	; 0xcc
 800dd94:	4a38      	ldr	r2, [pc, #224]	; (800de78 <createProblem+0xcfd0>)
 800dd96:	6810      	ldr	r0, [r2, #0]
 800dd98:	6018      	str	r0, [r3, #0]
			break;
 800dd9a:	f00c bdcb 	b.w	801a934 <createProblem+0x19a8c>
		case 454 :
			strcpy(p->name,"BUMPIN GO");
 800dd9e:	687b      	ldr	r3, [r7, #4]
 800dda0:	337c      	adds	r3, #124	; 0x7c
 800dda2:	4936      	ldr	r1, [pc, #216]	; (800de7c <createProblem+0xcfd4>)
 800dda4:	461a      	mov	r2, r3
 800dda6:	460b      	mov	r3, r1
 800dda8:	cb03      	ldmia	r3!, {r0, r1}
 800ddaa:	6010      	str	r0, [r2, #0]
 800ddac:	6051      	str	r1, [r2, #4]
 800ddae:	881b      	ldrh	r3, [r3, #0]
 800ddb0:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 800ddb2:	687b      	ldr	r3, [r7, #4]
 800ddb4:	2207      	movs	r2, #7
 800ddb6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,H,I,G,I");
 800ddb8:	687b      	ldr	r3, [r7, #4]
 800ddba:	3340      	adds	r3, #64	; 0x40
 800ddbc:	4a30      	ldr	r2, [pc, #192]	; (800de80 <createProblem+0xcfd8>)
 800ddbe:	461c      	mov	r4, r3
 800ddc0:	4613      	mov	r3, r2
 800ddc2:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ddc4:	6020      	str	r0, [r4, #0]
 800ddc6:	6061      	str	r1, [r4, #4]
 800ddc8:	60a2      	str	r2, [r4, #8]
 800ddca:	881b      	ldrh	r3, [r3, #0]
 800ddcc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,10,12,14,17,18");
 800ddce:	687b      	ldr	r3, [r7, #4]
 800ddd0:	3304      	adds	r3, #4
 800ddd2:	4a2c      	ldr	r2, [pc, #176]	; (800de84 <createProblem+0xcfdc>)
 800ddd4:	461d      	mov	r5, r3
 800ddd6:	4614      	mov	r4, r2
 800ddd8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ddda:	6028      	str	r0, [r5, #0]
 800dddc:	6069      	str	r1, [r5, #4]
 800ddde:	60aa      	str	r2, [r5, #8]
 800dde0:	60eb      	str	r3, [r5, #12]
 800dde2:	8823      	ldrh	r3, [r4, #0]
 800dde4:	78a2      	ldrb	r2, [r4, #2]
 800dde6:	822b      	strh	r3, [r5, #16]
 800dde8:	4613      	mov	r3, r2
 800ddea:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800ddec:	687b      	ldr	r3, [r7, #4]
 800ddee:	33d8      	adds	r3, #216	; 0xd8
 800ddf0:	4a25      	ldr	r2, [pc, #148]	; (800de88 <createProblem+0xcfe0>)
 800ddf2:	461c      	mov	r4, r3
 800ddf4:	4613      	mov	r3, r2
 800ddf6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ddf8:	6020      	str	r0, [r4, #0]
 800ddfa:	6061      	str	r1, [r4, #4]
 800ddfc:	60a2      	str	r2, [r4, #8]
 800ddfe:	881b      	ldrh	r3, [r3, #0]
 800de00:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 800de02:	687b      	ldr	r3, [r7, #4]
 800de04:	33cc      	adds	r3, #204	; 0xcc
 800de06:	4a21      	ldr	r2, [pc, #132]	; (800de8c <createProblem+0xcfe4>)
 800de08:	8811      	ldrh	r1, [r2, #0]
 800de0a:	7892      	ldrb	r2, [r2, #2]
 800de0c:	8019      	strh	r1, [r3, #0]
 800de0e:	709a      	strb	r2, [r3, #2]
			break;
 800de10:	f00c bd90 	b.w	801a934 <createProblem+0x19a8c>
 800de14:	080250b4 	.word	0x080250b4
 800de18:	080250c0 	.word	0x080250c0
 800de1c:	080250cc 	.word	0x080250cc
 800de20:	080208a0 	.word	0x080208a0
 800de24:	080209a4 	.word	0x080209a4
 800de28:	080250dc 	.word	0x080250dc
 800de2c:	080250e8 	.word	0x080250e8
 800de30:	080250f8 	.word	0x080250f8
 800de34:	08020820 	.word	0x08020820
 800de38:	080208f0 	.word	0x080208f0
 800de3c:	0802510c 	.word	0x0802510c
 800de40:	0802511c 	.word	0x0802511c
 800de44:	08025128 	.word	0x08025128
 800de48:	0802091c 	.word	0x0802091c
 800de4c:	08025138 	.word	0x08025138
 800de50:	08025148 	.word	0x08025148
 800de54:	08025154 	.word	0x08025154
 800de58:	08020e90 	.word	0x08020e90
 800de5c:	08020830 	.word	0x08020830
 800de60:	08025164 	.word	0x08025164
 800de64:	08025174 	.word	0x08025174
 800de68:	08025180 	.word	0x08025180
 800de6c:	08025190 	.word	0x08025190
 800de70:	0802519c 	.word	0x0802519c
 800de74:	08020ce8 	.word	0x08020ce8
 800de78:	08020928 	.word	0x08020928
 800de7c:	080251a8 	.word	0x080251a8
 800de80:	080251b4 	.word	0x080251b4
 800de84:	080251c4 	.word	0x080251c4
 800de88:	08020a14 	.word	0x08020a14
 800de8c:	08020874 	.word	0x08020874
		case 455 :
			strcpy(p->name,"DESERT ROSE");
 800de90:	687b      	ldr	r3, [r7, #4]
 800de92:	337c      	adds	r3, #124	; 0x7c
 800de94:	4abe      	ldr	r2, [pc, #760]	; (800e190 <createProblem+0xd2e8>)
 800de96:	461c      	mov	r4, r3
 800de98:	4613      	mov	r3, r2
 800de9a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800de9c:	6020      	str	r0, [r4, #0]
 800de9e:	6061      	str	r1, [r4, #4]
 800dea0:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 800dea2:	687b      	ldr	r3, [r7, #4]
 800dea4:	2206      	movs	r2, #6
 800dea6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,G,J,G,I");
 800dea8:	687b      	ldr	r3, [r7, #4]
 800deaa:	3340      	adds	r3, #64	; 0x40
 800deac:	4ab9      	ldr	r2, [pc, #740]	; (800e194 <createProblem+0xd2ec>)
 800deae:	461c      	mov	r4, r3
 800deb0:	4613      	mov	r3, r2
 800deb2:	cb07      	ldmia	r3!, {r0, r1, r2}
 800deb4:	6020      	str	r0, [r4, #0]
 800deb6:	6061      	str	r1, [r4, #4]
 800deb8:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,9,12,15,18");
 800deba:	687b      	ldr	r3, [r7, #4]
 800debc:	3304      	adds	r3, #4
 800debe:	4ab6      	ldr	r2, [pc, #728]	; (800e198 <createProblem+0xd2f0>)
 800dec0:	461c      	mov	r4, r3
 800dec2:	4613      	mov	r3, r2
 800dec4:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dec6:	6020      	str	r0, [r4, #0]
 800dec8:	6061      	str	r1, [r4, #4]
 800deca:	60a2      	str	r2, [r4, #8]
 800decc:	881a      	ldrh	r2, [r3, #0]
 800dece:	789b      	ldrb	r3, [r3, #2]
 800ded0:	81a2      	strh	r2, [r4, #12]
 800ded2:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800ded4:	687b      	ldr	r3, [r7, #4]
 800ded6:	33d8      	adds	r3, #216	; 0xd8
 800ded8:	4ab0      	ldr	r2, [pc, #704]	; (800e19c <createProblem+0xd2f4>)
 800deda:	461c      	mov	r4, r3
 800dedc:	4613      	mov	r3, r2
 800dede:	cb07      	ldmia	r3!, {r0, r1, r2}
 800dee0:	6020      	str	r0, [r4, #0]
 800dee2:	6061      	str	r1, [r4, #4]
 800dee4:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 800dee6:	687b      	ldr	r3, [r7, #4]
 800dee8:	33cc      	adds	r3, #204	; 0xcc
 800deea:	4aad      	ldr	r2, [pc, #692]	; (800e1a0 <createProblem+0xd2f8>)
 800deec:	6810      	ldr	r0, [r2, #0]
 800deee:	6018      	str	r0, [r3, #0]
			break;
 800def0:	f00c bd20 	b.w	801a934 <createProblem+0x19a8c>
		case 456 :
			strcpy(p->name,"CALL ME A FOOL WILL YOU?");
 800def4:	687b      	ldr	r3, [r7, #4]
 800def6:	337c      	adds	r3, #124	; 0x7c
 800def8:	4aaa      	ldr	r2, [pc, #680]	; (800e1a4 <createProblem+0xd2fc>)
 800defa:	461d      	mov	r5, r3
 800defc:	4614      	mov	r4, r2
 800defe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800df00:	6028      	str	r0, [r5, #0]
 800df02:	6069      	str	r1, [r5, #4]
 800df04:	60aa      	str	r2, [r5, #8]
 800df06:	60eb      	str	r3, [r5, #12]
 800df08:	cc03      	ldmia	r4!, {r0, r1}
 800df0a:	6128      	str	r0, [r5, #16]
 800df0c:	6169      	str	r1, [r5, #20]
 800df0e:	7823      	ldrb	r3, [r4, #0]
 800df10:	762b      	strb	r3, [r5, #24]
			p->moveSize = 11;
 800df12:	687b      	ldr	r3, [r7, #4]
 800df14:	220b      	movs	r2, #11
 800df16:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,J,G,I,J,H,G,F,E,I");
 800df18:	687b      	ldr	r3, [r7, #4]
 800df1a:	3340      	adds	r3, #64	; 0x40
 800df1c:	4aa2      	ldr	r2, [pc, #648]	; (800e1a8 <createProblem+0xd300>)
 800df1e:	461d      	mov	r5, r3
 800df20:	4614      	mov	r4, r2
 800df22:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800df24:	6028      	str	r0, [r5, #0]
 800df26:	6069      	str	r1, [r5, #4]
 800df28:	60aa      	str	r2, [r5, #8]
 800df2a:	60eb      	str	r3, [r5, #12]
 800df2c:	6820      	ldr	r0, [r4, #0]
 800df2e:	6128      	str	r0, [r5, #16]
 800df30:	88a3      	ldrh	r3, [r4, #4]
 800df32:	82ab      	strh	r3, [r5, #20]
			strcpy(p->moveNumbers,"6,4,5,15,14,16,8,9,11,12,18");
 800df34:	687b      	ldr	r3, [r7, #4]
 800df36:	3304      	adds	r3, #4
 800df38:	4a9c      	ldr	r2, [pc, #624]	; (800e1ac <createProblem+0xd304>)
 800df3a:	461d      	mov	r5, r3
 800df3c:	4614      	mov	r4, r2
 800df3e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800df40:	6028      	str	r0, [r5, #0]
 800df42:	6069      	str	r1, [r5, #4]
 800df44:	60aa      	str	r2, [r5, #8]
 800df46:	60eb      	str	r3, [r5, #12]
 800df48:	cc07      	ldmia	r4!, {r0, r1, r2}
 800df4a:	6128      	str	r0, [r5, #16]
 800df4c:	6169      	str	r1, [r5, #20]
 800df4e:	61aa      	str	r2, [r5, #24]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,d,e");
 800df50:	687b      	ldr	r3, [r7, #4]
 800df52:	33d8      	adds	r3, #216	; 0xd8
 800df54:	4a96      	ldr	r2, [pc, #600]	; (800e1b0 <createProblem+0xd308>)
 800df56:	461d      	mov	r5, r3
 800df58:	4614      	mov	r4, r2
 800df5a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800df5c:	6028      	str	r0, [r5, #0]
 800df5e:	6069      	str	r1, [r5, #4]
 800df60:	60aa      	str	r2, [r5, #8]
 800df62:	60eb      	str	r3, [r5, #12]
 800df64:	6820      	ldr	r0, [r4, #0]
 800df66:	6128      	str	r0, [r5, #16]
 800df68:	88a3      	ldrh	r3, [r4, #4]
 800df6a:	82ab      	strh	r3, [r5, #20]
			strcpy(p->grade, "6B+");
 800df6c:	687b      	ldr	r3, [r7, #4]
 800df6e:	33cc      	adds	r3, #204	; 0xcc
 800df70:	4a90      	ldr	r2, [pc, #576]	; (800e1b4 <createProblem+0xd30c>)
 800df72:	6810      	ldr	r0, [r2, #0]
 800df74:	6018      	str	r0, [r3, #0]
			break;
 800df76:	f00c bcdd 	b.w	801a934 <createProblem+0x19a8c>
		case 457 :
			strcpy(p->name,"GRAPE THIEF");
 800df7a:	687b      	ldr	r3, [r7, #4]
 800df7c:	337c      	adds	r3, #124	; 0x7c
 800df7e:	4a8e      	ldr	r2, [pc, #568]	; (800e1b8 <createProblem+0xd310>)
 800df80:	461c      	mov	r4, r3
 800df82:	4613      	mov	r3, r2
 800df84:	cb07      	ldmia	r3!, {r0, r1, r2}
 800df86:	6020      	str	r0, [r4, #0]
 800df88:	6061      	str	r1, [r4, #4]
 800df8a:	60a2      	str	r2, [r4, #8]
			p->moveSize = 4;
 800df8c:	687b      	ldr	r3, [r7, #4]
 800df8e:	2204      	movs	r2, #4
 800df90:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,G,I");
 800df92:	687b      	ldr	r3, [r7, #4]
 800df94:	3340      	adds	r3, #64	; 0x40
 800df96:	4989      	ldr	r1, [pc, #548]	; (800e1bc <createProblem+0xd314>)
 800df98:	461a      	mov	r2, r3
 800df9a:	460b      	mov	r3, r1
 800df9c:	cb03      	ldmia	r3!, {r0, r1}
 800df9e:	6010      	str	r0, [r2, #0]
 800dfa0:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"6,14,9,18");
 800dfa2:	687b      	ldr	r3, [r7, #4]
 800dfa4:	3304      	adds	r3, #4
 800dfa6:	4986      	ldr	r1, [pc, #536]	; (800e1c0 <createProblem+0xd318>)
 800dfa8:	461a      	mov	r2, r3
 800dfaa:	460b      	mov	r3, r1
 800dfac:	cb03      	ldmia	r3!, {r0, r1}
 800dfae:	6010      	str	r0, [r2, #0]
 800dfb0:	6051      	str	r1, [r2, #4]
 800dfb2:	881b      	ldrh	r3, [r3, #0]
 800dfb4:	8113      	strh	r3, [r2, #8]
			strcpy(p->startFinish, "s,d,d,e");
 800dfb6:	687b      	ldr	r3, [r7, #4]
 800dfb8:	33d8      	adds	r3, #216	; 0xd8
 800dfba:	4982      	ldr	r1, [pc, #520]	; (800e1c4 <createProblem+0xd31c>)
 800dfbc:	461a      	mov	r2, r3
 800dfbe:	460b      	mov	r3, r1
 800dfc0:	cb03      	ldmia	r3!, {r0, r1}
 800dfc2:	6010      	str	r0, [r2, #0]
 800dfc4:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7C");
 800dfc6:	687b      	ldr	r3, [r7, #4]
 800dfc8:	33cc      	adds	r3, #204	; 0xcc
 800dfca:	4a7f      	ldr	r2, [pc, #508]	; (800e1c8 <createProblem+0xd320>)
 800dfcc:	8811      	ldrh	r1, [r2, #0]
 800dfce:	7892      	ldrb	r2, [r2, #2]
 800dfd0:	8019      	strh	r1, [r3, #0]
 800dfd2:	709a      	strb	r2, [r3, #2]
			break;
 800dfd4:	f00c bcae 	b.w	801a934 <createProblem+0x19a8c>
		case 458 :
			strcpy(p->name,"SLUG TRAIL");
 800dfd8:	687b      	ldr	r3, [r7, #4]
 800dfda:	337c      	adds	r3, #124	; 0x7c
 800dfdc:	497b      	ldr	r1, [pc, #492]	; (800e1cc <createProblem+0xd324>)
 800dfde:	461a      	mov	r2, r3
 800dfe0:	460b      	mov	r3, r1
 800dfe2:	cb03      	ldmia	r3!, {r0, r1}
 800dfe4:	6010      	str	r0, [r2, #0]
 800dfe6:	6051      	str	r1, [r2, #4]
 800dfe8:	8819      	ldrh	r1, [r3, #0]
 800dfea:	789b      	ldrb	r3, [r3, #2]
 800dfec:	8111      	strh	r1, [r2, #8]
 800dfee:	7293      	strb	r3, [r2, #10]
			p->moveSize = 8;
 800dff0:	687b      	ldr	r3, [r7, #4]
 800dff2:	2208      	movs	r2, #8
 800dff4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,G,E,F,A,A,E,A");
 800dff6:	687b      	ldr	r3, [r7, #4]
 800dff8:	3340      	adds	r3, #64	; 0x40
 800dffa:	4a75      	ldr	r2, [pc, #468]	; (800e1d0 <createProblem+0xd328>)
 800dffc:	461c      	mov	r4, r3
 800dffe:	4615      	mov	r5, r2
 800e000:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e002:	6020      	str	r0, [r4, #0]
 800e004:	6061      	str	r1, [r4, #4]
 800e006:	60a2      	str	r2, [r4, #8]
 800e008:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,11,9,14,14,18");
 800e00a:	687b      	ldr	r3, [r7, #4]
 800e00c:	3304      	adds	r3, #4
 800e00e:	4a71      	ldr	r2, [pc, #452]	; (800e1d4 <createProblem+0xd32c>)
 800e010:	461d      	mov	r5, r3
 800e012:	4614      	mov	r4, r2
 800e014:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e016:	6028      	str	r0, [r5, #0]
 800e018:	6069      	str	r1, [r5, #4]
 800e01a:	60aa      	str	r2, [r5, #8]
 800e01c:	60eb      	str	r3, [r5, #12]
 800e01e:	6820      	ldr	r0, [r4, #0]
 800e020:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800e022:	687b      	ldr	r3, [r7, #4]
 800e024:	33d8      	adds	r3, #216	; 0xd8
 800e026:	4a6c      	ldr	r2, [pc, #432]	; (800e1d8 <createProblem+0xd330>)
 800e028:	461c      	mov	r4, r3
 800e02a:	4615      	mov	r5, r2
 800e02c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e02e:	6020      	str	r0, [r4, #0]
 800e030:	6061      	str	r1, [r4, #4]
 800e032:	60a2      	str	r2, [r4, #8]
 800e034:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800e036:	687b      	ldr	r3, [r7, #4]
 800e038:	33cc      	adds	r3, #204	; 0xcc
 800e03a:	4a5e      	ldr	r2, [pc, #376]	; (800e1b4 <createProblem+0xd30c>)
 800e03c:	6810      	ldr	r0, [r2, #0]
 800e03e:	6018      	str	r0, [r3, #0]
			break;
 800e040:	f00c bc78 	b.w	801a934 <createProblem+0x19a8c>
		case 459 :
			strcpy(p->name,"CREAKY SQUEAKY");
 800e044:	687b      	ldr	r3, [r7, #4]
 800e046:	337c      	adds	r3, #124	; 0x7c
 800e048:	4a64      	ldr	r2, [pc, #400]	; (800e1dc <createProblem+0xd334>)
 800e04a:	461c      	mov	r4, r3
 800e04c:	4613      	mov	r3, r2
 800e04e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e050:	6020      	str	r0, [r4, #0]
 800e052:	6061      	str	r1, [r4, #4]
 800e054:	60a2      	str	r2, [r4, #8]
 800e056:	881a      	ldrh	r2, [r3, #0]
 800e058:	789b      	ldrb	r3, [r3, #2]
 800e05a:	81a2      	strh	r2, [r4, #12]
 800e05c:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 8;
 800e05e:	687b      	ldr	r3, [r7, #4]
 800e060:	2208      	movs	r2, #8
 800e062:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,B,E,B,E,F,H,D");
 800e064:	687b      	ldr	r3, [r7, #4]
 800e066:	3340      	adds	r3, #64	; 0x40
 800e068:	4a5d      	ldr	r2, [pc, #372]	; (800e1e0 <createProblem+0xd338>)
 800e06a:	461c      	mov	r4, r3
 800e06c:	4615      	mov	r5, r2
 800e06e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e070:	6020      	str	r0, [r4, #0]
 800e072:	6061      	str	r1, [r4, #4]
 800e074:	60a2      	str	r2, [r4, #8]
 800e076:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,12,12,13,16,18");
 800e078:	687b      	ldr	r3, [r7, #4]
 800e07a:	3304      	adds	r3, #4
 800e07c:	4a59      	ldr	r2, [pc, #356]	; (800e1e4 <createProblem+0xd33c>)
 800e07e:	461d      	mov	r5, r3
 800e080:	4614      	mov	r4, r2
 800e082:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e084:	6028      	str	r0, [r5, #0]
 800e086:	6069      	str	r1, [r5, #4]
 800e088:	60aa      	str	r2, [r5, #8]
 800e08a:	60eb      	str	r3, [r5, #12]
 800e08c:	6820      	ldr	r0, [r4, #0]
 800e08e:	6128      	str	r0, [r5, #16]
 800e090:	7923      	ldrb	r3, [r4, #4]
 800e092:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800e094:	687b      	ldr	r3, [r7, #4]
 800e096:	33d8      	adds	r3, #216	; 0xd8
 800e098:	4a4f      	ldr	r2, [pc, #316]	; (800e1d8 <createProblem+0xd330>)
 800e09a:	461c      	mov	r4, r3
 800e09c:	4615      	mov	r5, r2
 800e09e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e0a0:	6020      	str	r0, [r4, #0]
 800e0a2:	6061      	str	r1, [r4, #4]
 800e0a4:	60a2      	str	r2, [r4, #8]
 800e0a6:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 800e0a8:	687b      	ldr	r3, [r7, #4]
 800e0aa:	33cc      	adds	r3, #204	; 0xcc
 800e0ac:	4a3c      	ldr	r2, [pc, #240]	; (800e1a0 <createProblem+0xd2f8>)
 800e0ae:	6810      	ldr	r0, [r2, #0]
 800e0b0:	6018      	str	r0, [r3, #0]
			break;
 800e0b2:	f00c bc3f 	b.w	801a934 <createProblem+0x19a8c>
		case 46 :
			strcpy(p->name,"LANKY BASTARD");
 800e0b6:	687b      	ldr	r3, [r7, #4]
 800e0b8:	337c      	adds	r3, #124	; 0x7c
 800e0ba:	4a4b      	ldr	r2, [pc, #300]	; (800e1e8 <createProblem+0xd340>)
 800e0bc:	461c      	mov	r4, r3
 800e0be:	4613      	mov	r3, r2
 800e0c0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e0c2:	6020      	str	r0, [r4, #0]
 800e0c4:	6061      	str	r1, [r4, #4]
 800e0c6:	60a2      	str	r2, [r4, #8]
 800e0c8:	881b      	ldrh	r3, [r3, #0]
 800e0ca:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 800e0cc:	687b      	ldr	r3, [r7, #4]
 800e0ce:	2207      	movs	r2, #7
 800e0d0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,I,H,K,E,D");
 800e0d2:	687b      	ldr	r3, [r7, #4]
 800e0d4:	3340      	adds	r3, #64	; 0x40
 800e0d6:	4a45      	ldr	r2, [pc, #276]	; (800e1ec <createProblem+0xd344>)
 800e0d8:	461c      	mov	r4, r3
 800e0da:	4613      	mov	r3, r2
 800e0dc:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e0de:	6020      	str	r0, [r4, #0]
 800e0e0:	6061      	str	r1, [r4, #4]
 800e0e2:	60a2      	str	r2, [r4, #8]
 800e0e4:	881b      	ldrh	r3, [r3, #0]
 800e0e6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,9,12,14,16,18");
 800e0e8:	687b      	ldr	r3, [r7, #4]
 800e0ea:	3304      	adds	r3, #4
 800e0ec:	4a40      	ldr	r2, [pc, #256]	; (800e1f0 <createProblem+0xd348>)
 800e0ee:	461d      	mov	r5, r3
 800e0f0:	4614      	mov	r4, r2
 800e0f2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e0f4:	6028      	str	r0, [r5, #0]
 800e0f6:	6069      	str	r1, [r5, #4]
 800e0f8:	60aa      	str	r2, [r5, #8]
 800e0fa:	60eb      	str	r3, [r5, #12]
 800e0fc:	8823      	ldrh	r3, [r4, #0]
 800e0fe:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800e100:	687b      	ldr	r3, [r7, #4]
 800e102:	33d8      	adds	r3, #216	; 0xd8
 800e104:	4a3b      	ldr	r2, [pc, #236]	; (800e1f4 <createProblem+0xd34c>)
 800e106:	461c      	mov	r4, r3
 800e108:	4613      	mov	r3, r2
 800e10a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e10c:	6020      	str	r0, [r4, #0]
 800e10e:	6061      	str	r1, [r4, #4]
 800e110:	60a2      	str	r2, [r4, #8]
 800e112:	881b      	ldrh	r3, [r3, #0]
 800e114:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 800e116:	687b      	ldr	r3, [r7, #4]
 800e118:	33cc      	adds	r3, #204	; 0xcc
 800e11a:	4a37      	ldr	r2, [pc, #220]	; (800e1f8 <createProblem+0xd350>)
 800e11c:	8811      	ldrh	r1, [r2, #0]
 800e11e:	7892      	ldrb	r2, [r2, #2]
 800e120:	8019      	strh	r1, [r3, #0]
 800e122:	709a      	strb	r2, [r3, #2]
			break;
 800e124:	f00c bc06 	b.w	801a934 <createProblem+0x19a8c>
		case 460 :
			strcpy(p->name,"TAKEOFF");
 800e128:	687b      	ldr	r3, [r7, #4]
 800e12a:	337c      	adds	r3, #124	; 0x7c
 800e12c:	4933      	ldr	r1, [pc, #204]	; (800e1fc <createProblem+0xd354>)
 800e12e:	461a      	mov	r2, r3
 800e130:	460b      	mov	r3, r1
 800e132:	cb03      	ldmia	r3!, {r0, r1}
 800e134:	6010      	str	r0, [r2, #0]
 800e136:	6051      	str	r1, [r2, #4]
			p->moveSize = 5;
 800e138:	687b      	ldr	r3, [r7, #4]
 800e13a:	2205      	movs	r2, #5
 800e13c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,H,G,I");
 800e13e:	687b      	ldr	r3, [r7, #4]
 800e140:	3340      	adds	r3, #64	; 0x40
 800e142:	492f      	ldr	r1, [pc, #188]	; (800e200 <createProblem+0xd358>)
 800e144:	461a      	mov	r2, r3
 800e146:	460b      	mov	r3, r1
 800e148:	cb03      	ldmia	r3!, {r0, r1}
 800e14a:	6010      	str	r0, [r2, #0]
 800e14c:	6051      	str	r1, [r2, #4]
 800e14e:	881b      	ldrh	r3, [r3, #0]
 800e150:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,5,10,14,18");
 800e152:	687b      	ldr	r3, [r7, #4]
 800e154:	3304      	adds	r3, #4
 800e156:	4a2b      	ldr	r2, [pc, #172]	; (800e204 <createProblem+0xd35c>)
 800e158:	461c      	mov	r4, r3
 800e15a:	4613      	mov	r3, r2
 800e15c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e15e:	6020      	str	r0, [r4, #0]
 800e160:	6061      	str	r1, [r4, #4]
 800e162:	60a2      	str	r2, [r4, #8]
 800e164:	781b      	ldrb	r3, [r3, #0]
 800e166:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,e");
 800e168:	687b      	ldr	r3, [r7, #4]
 800e16a:	33d8      	adds	r3, #216	; 0xd8
 800e16c:	4926      	ldr	r1, [pc, #152]	; (800e208 <createProblem+0xd360>)
 800e16e:	461a      	mov	r2, r3
 800e170:	460b      	mov	r3, r1
 800e172:	cb03      	ldmia	r3!, {r0, r1}
 800e174:	6010      	str	r0, [r2, #0]
 800e176:	6051      	str	r1, [r2, #4]
 800e178:	881b      	ldrh	r3, [r3, #0]
 800e17a:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 800e17c:	687b      	ldr	r3, [r7, #4]
 800e17e:	33cc      	adds	r3, #204	; 0xcc
 800e180:	4a22      	ldr	r2, [pc, #136]	; (800e20c <createProblem+0xd364>)
 800e182:	8811      	ldrh	r1, [r2, #0]
 800e184:	7892      	ldrb	r2, [r2, #2]
 800e186:	8019      	strh	r1, [r3, #0]
 800e188:	709a      	strb	r2, [r3, #2]
			break;
 800e18a:	f00c bbd3 	b.w	801a934 <createProblem+0x19a8c>
 800e18e:	bf00      	nop
 800e190:	080251d8 	.word	0x080251d8
 800e194:	080251e4 	.word	0x080251e4
 800e198:	08021ad8 	.word	0x08021ad8
 800e19c:	0802091c 	.word	0x0802091c
 800e1a0:	08020928 	.word	0x08020928
 800e1a4:	080251f0 	.word	0x080251f0
 800e1a8:	0802520c 	.word	0x0802520c
 800e1ac:	08025224 	.word	0x08025224
 800e1b0:	08021f98 	.word	0x08021f98
 800e1b4:	08020830 	.word	0x08020830
 800e1b8:	08025240 	.word	0x08025240
 800e1bc:	0802524c 	.word	0x0802524c
 800e1c0:	08025254 	.word	0x08025254
 800e1c4:	080215a8 	.word	0x080215a8
 800e1c8:	08020b0c 	.word	0x08020b0c
 800e1cc:	08025260 	.word	0x08025260
 800e1d0:	0802526c 	.word	0x0802526c
 800e1d4:	0802527c 	.word	0x0802527c
 800e1d8:	08020a4c 	.word	0x08020a4c
 800e1dc:	08025290 	.word	0x08025290
 800e1e0:	080252a0 	.word	0x080252a0
 800e1e4:	080252b0 	.word	0x080252b0
 800e1e8:	080252c8 	.word	0x080252c8
 800e1ec:	080252d8 	.word	0x080252d8
 800e1f0:	080252e8 	.word	0x080252e8
 800e1f4:	08020a14 	.word	0x08020a14
 800e1f8:	080208f0 	.word	0x080208f0
 800e1fc:	080252fc 	.word	0x080252fc
 800e200:	08025304 	.word	0x08025304
 800e204:	08025310 	.word	0x08025310
 800e208:	08021748 	.word	0x08021748
 800e20c:	08020874 	.word	0x08020874
		case 461 :
			strcpy(p->name,"WIND BENEATH MY WINGS");
 800e210:	687b      	ldr	r3, [r7, #4]
 800e212:	337c      	adds	r3, #124	; 0x7c
 800e214:	4abd      	ldr	r2, [pc, #756]	; (800e50c <createProblem+0xd664>)
 800e216:	461d      	mov	r5, r3
 800e218:	4614      	mov	r4, r2
 800e21a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e21c:	6028      	str	r0, [r5, #0]
 800e21e:	6069      	str	r1, [r5, #4]
 800e220:	60aa      	str	r2, [r5, #8]
 800e222:	60eb      	str	r3, [r5, #12]
 800e224:	6820      	ldr	r0, [r4, #0]
 800e226:	6128      	str	r0, [r5, #16]
 800e228:	88a3      	ldrh	r3, [r4, #4]
 800e22a:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 4;
 800e22c:	687b      	ldr	r3, [r7, #4]
 800e22e:	2204      	movs	r2, #4
 800e230:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,G,D");
 800e232:	687b      	ldr	r3, [r7, #4]
 800e234:	3340      	adds	r3, #64	; 0x40
 800e236:	49b6      	ldr	r1, [pc, #728]	; (800e510 <createProblem+0xd668>)
 800e238:	461a      	mov	r2, r3
 800e23a:	460b      	mov	r3, r1
 800e23c:	cb03      	ldmia	r3!, {r0, r1}
 800e23e:	6010      	str	r0, [r2, #0]
 800e240:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"5,9,14,18");
 800e242:	687b      	ldr	r3, [r7, #4]
 800e244:	3304      	adds	r3, #4
 800e246:	49b3      	ldr	r1, [pc, #716]	; (800e514 <createProblem+0xd66c>)
 800e248:	461a      	mov	r2, r3
 800e24a:	460b      	mov	r3, r1
 800e24c:	cb03      	ldmia	r3!, {r0, r1}
 800e24e:	6010      	str	r0, [r2, #0]
 800e250:	6051      	str	r1, [r2, #4]
 800e252:	881b      	ldrh	r3, [r3, #0]
 800e254:	8113      	strh	r3, [r2, #8]
			strcpy(p->startFinish, "s,d,d,e");
 800e256:	687b      	ldr	r3, [r7, #4]
 800e258:	33d8      	adds	r3, #216	; 0xd8
 800e25a:	49af      	ldr	r1, [pc, #700]	; (800e518 <createProblem+0xd670>)
 800e25c:	461a      	mov	r2, r3
 800e25e:	460b      	mov	r3, r1
 800e260:	cb03      	ldmia	r3!, {r0, r1}
 800e262:	6010      	str	r0, [r2, #0]
 800e264:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7C");
 800e266:	687b      	ldr	r3, [r7, #4]
 800e268:	33cc      	adds	r3, #204	; 0xcc
 800e26a:	4aac      	ldr	r2, [pc, #688]	; (800e51c <createProblem+0xd674>)
 800e26c:	8811      	ldrh	r1, [r2, #0]
 800e26e:	7892      	ldrb	r2, [r2, #2]
 800e270:	8019      	strh	r1, [r3, #0]
 800e272:	709a      	strb	r2, [r3, #2]
			break;
 800e274:	f00c bb5e 	b.w	801a934 <createProblem+0x19a8c>
		case 462 :
			strcpy(p->name,"ELECTRIC HEEL");
 800e278:	687b      	ldr	r3, [r7, #4]
 800e27a:	337c      	adds	r3, #124	; 0x7c
 800e27c:	4aa8      	ldr	r2, [pc, #672]	; (800e520 <createProblem+0xd678>)
 800e27e:	461c      	mov	r4, r3
 800e280:	4613      	mov	r3, r2
 800e282:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e284:	6020      	str	r0, [r4, #0]
 800e286:	6061      	str	r1, [r4, #4]
 800e288:	60a2      	str	r2, [r4, #8]
 800e28a:	881b      	ldrh	r3, [r3, #0]
 800e28c:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 800e28e:	687b      	ldr	r3, [r7, #4]
 800e290:	2206      	movs	r2, #6
 800e292:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,G,E,C,D");
 800e294:	687b      	ldr	r3, [r7, #4]
 800e296:	3340      	adds	r3, #64	; 0x40
 800e298:	4aa2      	ldr	r2, [pc, #648]	; (800e524 <createProblem+0xd67c>)
 800e29a:	461c      	mov	r4, r3
 800e29c:	4613      	mov	r3, r2
 800e29e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e2a0:	6020      	str	r0, [r4, #0]
 800e2a2:	6061      	str	r1, [r4, #4]
 800e2a4:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,9,12,13,18");
 800e2a6:	687b      	ldr	r3, [r7, #4]
 800e2a8:	3304      	adds	r3, #4
 800e2aa:	4a9f      	ldr	r2, [pc, #636]	; (800e528 <createProblem+0xd680>)
 800e2ac:	461c      	mov	r4, r3
 800e2ae:	4613      	mov	r3, r2
 800e2b0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e2b2:	6020      	str	r0, [r4, #0]
 800e2b4:	6061      	str	r1, [r4, #4]
 800e2b6:	60a2      	str	r2, [r4, #8]
 800e2b8:	881a      	ldrh	r2, [r3, #0]
 800e2ba:	789b      	ldrb	r3, [r3, #2]
 800e2bc:	81a2      	strh	r2, [r4, #12]
 800e2be:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800e2c0:	687b      	ldr	r3, [r7, #4]
 800e2c2:	33d8      	adds	r3, #216	; 0xd8
 800e2c4:	4a99      	ldr	r2, [pc, #612]	; (800e52c <createProblem+0xd684>)
 800e2c6:	461c      	mov	r4, r3
 800e2c8:	4613      	mov	r3, r2
 800e2ca:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e2cc:	6020      	str	r0, [r4, #0]
 800e2ce:	6061      	str	r1, [r4, #4]
 800e2d0:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 800e2d2:	687b      	ldr	r3, [r7, #4]
 800e2d4:	33cc      	adds	r3, #204	; 0xcc
 800e2d6:	4a96      	ldr	r2, [pc, #600]	; (800e530 <createProblem+0xd688>)
 800e2d8:	8811      	ldrh	r1, [r2, #0]
 800e2da:	7892      	ldrb	r2, [r2, #2]
 800e2dc:	8019      	strh	r1, [r3, #0]
 800e2de:	709a      	strb	r2, [r3, #2]
			break;
 800e2e0:	f00c bb28 	b.w	801a934 <createProblem+0x19a8c>
		case 463 :
			strcpy(p->name,"GHASTLY");
 800e2e4:	687b      	ldr	r3, [r7, #4]
 800e2e6:	337c      	adds	r3, #124	; 0x7c
 800e2e8:	4992      	ldr	r1, [pc, #584]	; (800e534 <createProblem+0xd68c>)
 800e2ea:	461a      	mov	r2, r3
 800e2ec:	460b      	mov	r3, r1
 800e2ee:	cb03      	ldmia	r3!, {r0, r1}
 800e2f0:	6010      	str	r0, [r2, #0]
 800e2f2:	6051      	str	r1, [r2, #4]
			p->moveSize = 8;
 800e2f4:	687b      	ldr	r3, [r7, #4]
 800e2f6:	2208      	movs	r2, #8
 800e2f8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,K,J,K,E,G,D");
 800e2fa:	687b      	ldr	r3, [r7, #4]
 800e2fc:	3340      	adds	r3, #64	; 0x40
 800e2fe:	4a8e      	ldr	r2, [pc, #568]	; (800e538 <createProblem+0xd690>)
 800e300:	461c      	mov	r4, r3
 800e302:	4615      	mov	r5, r2
 800e304:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e306:	6020      	str	r0, [r4, #0]
 800e308:	6061      	str	r1, [r4, #4]
 800e30a:	60a2      	str	r2, [r4, #8]
 800e30c:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,9,12,14,14,17,18");
 800e30e:	687b      	ldr	r3, [r7, #4]
 800e310:	3304      	adds	r3, #4
 800e312:	4a8a      	ldr	r2, [pc, #552]	; (800e53c <createProblem+0xd694>)
 800e314:	461d      	mov	r5, r3
 800e316:	4614      	mov	r4, r2
 800e318:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e31a:	6028      	str	r0, [r5, #0]
 800e31c:	6069      	str	r1, [r5, #4]
 800e31e:	60aa      	str	r2, [r5, #8]
 800e320:	60eb      	str	r3, [r5, #12]
 800e322:	6820      	ldr	r0, [r4, #0]
 800e324:	6128      	str	r0, [r5, #16]
 800e326:	7923      	ldrb	r3, [r4, #4]
 800e328:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800e32a:	687b      	ldr	r3, [r7, #4]
 800e32c:	33d8      	adds	r3, #216	; 0xd8
 800e32e:	4a84      	ldr	r2, [pc, #528]	; (800e540 <createProblem+0xd698>)
 800e330:	461c      	mov	r4, r3
 800e332:	4615      	mov	r5, r2
 800e334:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e336:	6020      	str	r0, [r4, #0]
 800e338:	6061      	str	r1, [r4, #4]
 800e33a:	60a2      	str	r2, [r4, #8]
 800e33c:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 800e33e:	687b      	ldr	r3, [r7, #4]
 800e340:	33cc      	adds	r3, #204	; 0xcc
 800e342:	4a7b      	ldr	r2, [pc, #492]	; (800e530 <createProblem+0xd688>)
 800e344:	8811      	ldrh	r1, [r2, #0]
 800e346:	7892      	ldrb	r2, [r2, #2]
 800e348:	8019      	strh	r1, [r3, #0]
 800e34a:	709a      	strb	r2, [r3, #2]
			break;
 800e34c:	f00c baf2 	b.w	801a934 <createProblem+0x19a8c>
		case 464 :
			strcpy(p->name,"ONE CRIMP");
 800e350:	687b      	ldr	r3, [r7, #4]
 800e352:	337c      	adds	r3, #124	; 0x7c
 800e354:	497b      	ldr	r1, [pc, #492]	; (800e544 <createProblem+0xd69c>)
 800e356:	461a      	mov	r2, r3
 800e358:	460b      	mov	r3, r1
 800e35a:	cb03      	ldmia	r3!, {r0, r1}
 800e35c:	6010      	str	r0, [r2, #0]
 800e35e:	6051      	str	r1, [r2, #4]
 800e360:	881b      	ldrh	r3, [r3, #0]
 800e362:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 800e364:	687b      	ldr	r3, [r7, #4]
 800e366:	2207      	movs	r2, #7
 800e368:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,I,H,G,D,D");
 800e36a:	687b      	ldr	r3, [r7, #4]
 800e36c:	3340      	adds	r3, #64	; 0x40
 800e36e:	4a76      	ldr	r2, [pc, #472]	; (800e548 <createProblem+0xd6a0>)
 800e370:	461c      	mov	r4, r3
 800e372:	4613      	mov	r3, r2
 800e374:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e376:	6020      	str	r0, [r4, #0]
 800e378:	6061      	str	r1, [r4, #4]
 800e37a:	60a2      	str	r2, [r4, #8]
 800e37c:	881b      	ldrh	r3, [r3, #0]
 800e37e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,9,12,15,15,18");
 800e380:	687b      	ldr	r3, [r7, #4]
 800e382:	3304      	adds	r3, #4
 800e384:	4a71      	ldr	r2, [pc, #452]	; (800e54c <createProblem+0xd6a4>)
 800e386:	461d      	mov	r5, r3
 800e388:	4614      	mov	r4, r2
 800e38a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e38c:	6028      	str	r0, [r5, #0]
 800e38e:	6069      	str	r1, [r5, #4]
 800e390:	60aa      	str	r2, [r5, #8]
 800e392:	60eb      	str	r3, [r5, #12]
 800e394:	8823      	ldrh	r3, [r4, #0]
 800e396:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800e398:	687b      	ldr	r3, [r7, #4]
 800e39a:	33d8      	adds	r3, #216	; 0xd8
 800e39c:	4a6c      	ldr	r2, [pc, #432]	; (800e550 <createProblem+0xd6a8>)
 800e39e:	461c      	mov	r4, r3
 800e3a0:	4613      	mov	r3, r2
 800e3a2:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e3a4:	6020      	str	r0, [r4, #0]
 800e3a6:	6061      	str	r1, [r4, #4]
 800e3a8:	60a2      	str	r2, [r4, #8]
 800e3aa:	881b      	ldrh	r3, [r3, #0]
 800e3ac:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 800e3ae:	687b      	ldr	r3, [r7, #4]
 800e3b0:	33cc      	adds	r3, #204	; 0xcc
 800e3b2:	4a68      	ldr	r2, [pc, #416]	; (800e554 <createProblem+0xd6ac>)
 800e3b4:	6810      	ldr	r0, [r2, #0]
 800e3b6:	6018      	str	r0, [r3, #0]
			break;
 800e3b8:	f00c babc 	b.w	801a934 <createProblem+0x19a8c>
		case 465 :
			strcpy(p->name,"PICTURES ON MY PHONE");
 800e3bc:	687b      	ldr	r3, [r7, #4]
 800e3be:	337c      	adds	r3, #124	; 0x7c
 800e3c0:	4a65      	ldr	r2, [pc, #404]	; (800e558 <createProblem+0xd6b0>)
 800e3c2:	461d      	mov	r5, r3
 800e3c4:	4614      	mov	r4, r2
 800e3c6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e3c8:	6028      	str	r0, [r5, #0]
 800e3ca:	6069      	str	r1, [r5, #4]
 800e3cc:	60aa      	str	r2, [r5, #8]
 800e3ce:	60eb      	str	r3, [r5, #12]
 800e3d0:	6820      	ldr	r0, [r4, #0]
 800e3d2:	6128      	str	r0, [r5, #16]
 800e3d4:	7923      	ldrb	r3, [r4, #4]
 800e3d6:	752b      	strb	r3, [r5, #20]
			p->moveSize = 8;
 800e3d8:	687b      	ldr	r3, [r7, #4]
 800e3da:	2208      	movs	r2, #8
 800e3dc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,H,C,I,G,I");
 800e3de:	687b      	ldr	r3, [r7, #4]
 800e3e0:	3340      	adds	r3, #64	; 0x40
 800e3e2:	4a5e      	ldr	r2, [pc, #376]	; (800e55c <createProblem+0xd6b4>)
 800e3e4:	461c      	mov	r4, r3
 800e3e6:	4615      	mov	r5, r2
 800e3e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e3ea:	6020      	str	r0, [r4, #0]
 800e3ec:	6061      	str	r1, [r4, #4]
 800e3ee:	60a2      	str	r2, [r4, #8]
 800e3f0:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,8,10,13,14,17,18");
 800e3f2:	687b      	ldr	r3, [r7, #4]
 800e3f4:	3304      	adds	r3, #4
 800e3f6:	4a5a      	ldr	r2, [pc, #360]	; (800e560 <createProblem+0xd6b8>)
 800e3f8:	461d      	mov	r5, r3
 800e3fa:	4614      	mov	r4, r2
 800e3fc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e3fe:	6028      	str	r0, [r5, #0]
 800e400:	6069      	str	r1, [r5, #4]
 800e402:	60aa      	str	r2, [r5, #8]
 800e404:	60eb      	str	r3, [r5, #12]
 800e406:	6820      	ldr	r0, [r4, #0]
 800e408:	6128      	str	r0, [r5, #16]
 800e40a:	7923      	ldrb	r3, [r4, #4]
 800e40c:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800e40e:	687b      	ldr	r3, [r7, #4]
 800e410:	33d8      	adds	r3, #216	; 0xd8
 800e412:	4a4b      	ldr	r2, [pc, #300]	; (800e540 <createProblem+0xd698>)
 800e414:	461c      	mov	r4, r3
 800e416:	4615      	mov	r5, r2
 800e418:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e41a:	6020      	str	r0, [r4, #0]
 800e41c:	6061      	str	r1, [r4, #4]
 800e41e:	60a2      	str	r2, [r4, #8]
 800e420:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800e422:	687b      	ldr	r3, [r7, #4]
 800e424:	33cc      	adds	r3, #204	; 0xcc
 800e426:	4a4f      	ldr	r2, [pc, #316]	; (800e564 <createProblem+0xd6bc>)
 800e428:	6810      	ldr	r0, [r2, #0]
 800e42a:	6018      	str	r0, [r3, #0]
			break;
 800e42c:	f00c ba82 	b.w	801a934 <createProblem+0x19a8c>
		case 466 :
			strcpy(p->name,"NOT A FIRSTIMER");
 800e430:	687b      	ldr	r3, [r7, #4]
 800e432:	337c      	adds	r3, #124	; 0x7c
 800e434:	4a4c      	ldr	r2, [pc, #304]	; (800e568 <createProblem+0xd6c0>)
 800e436:	461c      	mov	r4, r3
 800e438:	4615      	mov	r5, r2
 800e43a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e43c:	6020      	str	r0, [r4, #0]
 800e43e:	6061      	str	r1, [r4, #4]
 800e440:	60a2      	str	r2, [r4, #8]
 800e442:	60e3      	str	r3, [r4, #12]
			p->moveSize = 10;
 800e444:	687b      	ldr	r3, [r7, #4]
 800e446:	220a      	movs	r2, #10
 800e448:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,H,E,C,I,G,G,J,I");
 800e44a:	687b      	ldr	r3, [r7, #4]
 800e44c:	3340      	adds	r3, #64	; 0x40
 800e44e:	4a47      	ldr	r2, [pc, #284]	; (800e56c <createProblem+0xd6c4>)
 800e450:	461d      	mov	r5, r3
 800e452:	4614      	mov	r4, r2
 800e454:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e456:	6028      	str	r0, [r5, #0]
 800e458:	6069      	str	r1, [r5, #4]
 800e45a:	60aa      	str	r2, [r5, #8]
 800e45c:	60eb      	str	r3, [r5, #12]
 800e45e:	6820      	ldr	r0, [r4, #0]
 800e460:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"5,6,10,8,13,14,15,17,7,18");
 800e462:	687b      	ldr	r3, [r7, #4]
 800e464:	3304      	adds	r3, #4
 800e466:	4a42      	ldr	r2, [pc, #264]	; (800e570 <createProblem+0xd6c8>)
 800e468:	461d      	mov	r5, r3
 800e46a:	4614      	mov	r4, r2
 800e46c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e46e:	6028      	str	r0, [r5, #0]
 800e470:	6069      	str	r1, [r5, #4]
 800e472:	60aa      	str	r2, [r5, #8]
 800e474:	60eb      	str	r3, [r5, #12]
 800e476:	cc03      	ldmia	r4!, {r0, r1}
 800e478:	6128      	str	r0, [r5, #16]
 800e47a:	6169      	str	r1, [r5, #20]
 800e47c:	8823      	ldrh	r3, [r4, #0]
 800e47e:	832b      	strh	r3, [r5, #24]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,e");
 800e480:	687b      	ldr	r3, [r7, #4]
 800e482:	33d8      	adds	r3, #216	; 0xd8
 800e484:	4a3b      	ldr	r2, [pc, #236]	; (800e574 <createProblem+0xd6cc>)
 800e486:	461d      	mov	r5, r3
 800e488:	4614      	mov	r4, r2
 800e48a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e48c:	6028      	str	r0, [r5, #0]
 800e48e:	6069      	str	r1, [r5, #4]
 800e490:	60aa      	str	r2, [r5, #8]
 800e492:	60eb      	str	r3, [r5, #12]
 800e494:	6820      	ldr	r0, [r4, #0]
 800e496:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "6B+");
 800e498:	687b      	ldr	r3, [r7, #4]
 800e49a:	33cc      	adds	r3, #204	; 0xcc
 800e49c:	4a31      	ldr	r2, [pc, #196]	; (800e564 <createProblem+0xd6bc>)
 800e49e:	6810      	ldr	r0, [r2, #0]
 800e4a0:	6018      	str	r0, [r3, #0]
			break;
 800e4a2:	f00c ba47 	b.w	801a934 <createProblem+0x19a8c>
		case 467 :
			strcpy(p->name,"APPLE PIE");
 800e4a6:	687b      	ldr	r3, [r7, #4]
 800e4a8:	337c      	adds	r3, #124	; 0x7c
 800e4aa:	4933      	ldr	r1, [pc, #204]	; (800e578 <createProblem+0xd6d0>)
 800e4ac:	461a      	mov	r2, r3
 800e4ae:	460b      	mov	r3, r1
 800e4b0:	cb03      	ldmia	r3!, {r0, r1}
 800e4b2:	6010      	str	r0, [r2, #0]
 800e4b4:	6051      	str	r1, [r2, #4]
 800e4b6:	881b      	ldrh	r3, [r3, #0]
 800e4b8:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 800e4ba:	687b      	ldr	r3, [r7, #4]
 800e4bc:	2206      	movs	r2, #6
 800e4be:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,I,F,J,I");
 800e4c0:	687b      	ldr	r3, [r7, #4]
 800e4c2:	3340      	adds	r3, #64	; 0x40
 800e4c4:	4a2d      	ldr	r2, [pc, #180]	; (800e57c <createProblem+0xd6d4>)
 800e4c6:	461c      	mov	r4, r3
 800e4c8:	4613      	mov	r3, r2
 800e4ca:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e4cc:	6020      	str	r0, [r4, #0]
 800e4ce:	6061      	str	r1, [r4, #4]
 800e4d0:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,10,13,16,18");
 800e4d2:	687b      	ldr	r3, [r7, #4]
 800e4d4:	3304      	adds	r3, #4
 800e4d6:	4a2a      	ldr	r2, [pc, #168]	; (800e580 <createProblem+0xd6d8>)
 800e4d8:	461c      	mov	r4, r3
 800e4da:	4615      	mov	r5, r2
 800e4dc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e4de:	6020      	str	r0, [r4, #0]
 800e4e0:	6061      	str	r1, [r4, #4]
 800e4e2:	60a2      	str	r2, [r4, #8]
 800e4e4:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800e4e6:	687b      	ldr	r3, [r7, #4]
 800e4e8:	33d8      	adds	r3, #216	; 0xd8
 800e4ea:	4a10      	ldr	r2, [pc, #64]	; (800e52c <createProblem+0xd684>)
 800e4ec:	461c      	mov	r4, r3
 800e4ee:	4613      	mov	r3, r2
 800e4f0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e4f2:	6020      	str	r0, [r4, #0]
 800e4f4:	6061      	str	r1, [r4, #4]
 800e4f6:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 800e4f8:	687b      	ldr	r3, [r7, #4]
 800e4fa:	33cc      	adds	r3, #204	; 0xcc
 800e4fc:	4a0c      	ldr	r2, [pc, #48]	; (800e530 <createProblem+0xd688>)
 800e4fe:	8811      	ldrh	r1, [r2, #0]
 800e500:	7892      	ldrb	r2, [r2, #2]
 800e502:	8019      	strh	r1, [r3, #0]
 800e504:	709a      	strb	r2, [r3, #2]
			break;
 800e506:	f00c ba15 	b.w	801a934 <createProblem+0x19a8c>
 800e50a:	bf00      	nop
 800e50c:	08025320 	.word	0x08025320
 800e510:	08025338 	.word	0x08025338
 800e514:	08025340 	.word	0x08025340
 800e518:	080215a8 	.word	0x080215a8
 800e51c:	08020b0c 	.word	0x08020b0c
 800e520:	0802534c 	.word	0x0802534c
 800e524:	0802535c 	.word	0x0802535c
 800e528:	08021814 	.word	0x08021814
 800e52c:	0802091c 	.word	0x0802091c
 800e530:	08020874 	.word	0x08020874
 800e534:	08025368 	.word	0x08025368
 800e538:	08025370 	.word	0x08025370
 800e53c:	08025380 	.word	0x08025380
 800e540:	08020a4c 	.word	0x08020a4c
 800e544:	08025398 	.word	0x08025398
 800e548:	080253a4 	.word	0x080253a4
 800e54c:	080253b4 	.word	0x080253b4
 800e550:	08020a14 	.word	0x08020a14
 800e554:	080209a4 	.word	0x080209a4
 800e558:	080253c8 	.word	0x080253c8
 800e55c:	080253e0 	.word	0x080253e0
 800e560:	080253f0 	.word	0x080253f0
 800e564:	08020830 	.word	0x08020830
 800e568:	08025408 	.word	0x08025408
 800e56c:	08025418 	.word	0x08025418
 800e570:	0802542c 	.word	0x0802542c
 800e574:	08020b7c 	.word	0x08020b7c
 800e578:	08025448 	.word	0x08025448
 800e57c:	08025454 	.word	0x08025454
 800e580:	08025460 	.word	0x08025460
		case 468 :
			strcpy(p->name,"HIGH STEP IF YOU CAN");
 800e584:	687b      	ldr	r3, [r7, #4]
 800e586:	337c      	adds	r3, #124	; 0x7c
 800e588:	4abe      	ldr	r2, [pc, #760]	; (800e884 <createProblem+0xd9dc>)
 800e58a:	461d      	mov	r5, r3
 800e58c:	4614      	mov	r4, r2
 800e58e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e590:	6028      	str	r0, [r5, #0]
 800e592:	6069      	str	r1, [r5, #4]
 800e594:	60aa      	str	r2, [r5, #8]
 800e596:	60eb      	str	r3, [r5, #12]
 800e598:	6820      	ldr	r0, [r4, #0]
 800e59a:	6128      	str	r0, [r5, #16]
 800e59c:	7923      	ldrb	r3, [r4, #4]
 800e59e:	752b      	strb	r3, [r5, #20]
			p->moveSize = 8;
 800e5a0:	687b      	ldr	r3, [r7, #4]
 800e5a2:	2208      	movs	r2, #8
 800e5a4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,B,E,E,B,E,D");
 800e5a6:	687b      	ldr	r3, [r7, #4]
 800e5a8:	3340      	adds	r3, #64	; 0x40
 800e5aa:	4ab7      	ldr	r2, [pc, #732]	; (800e888 <createProblem+0xd9e0>)
 800e5ac:	461c      	mov	r4, r3
 800e5ae:	4615      	mov	r5, r2
 800e5b0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e5b2:	6020      	str	r0, [r4, #0]
 800e5b4:	6061      	str	r1, [r4, #4]
 800e5b6:	60a2      	str	r2, [r4, #8]
 800e5b8:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,5,10,8,12,15,6,18");
 800e5ba:	687b      	ldr	r3, [r7, #4]
 800e5bc:	3304      	adds	r3, #4
 800e5be:	4ab3      	ldr	r2, [pc, #716]	; (800e88c <createProblem+0xd9e4>)
 800e5c0:	461d      	mov	r5, r3
 800e5c2:	4614      	mov	r4, r2
 800e5c4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e5c6:	6028      	str	r0, [r5, #0]
 800e5c8:	6069      	str	r1, [r5, #4]
 800e5ca:	60aa      	str	r2, [r5, #8]
 800e5cc:	60eb      	str	r3, [r5, #12]
 800e5ce:	6820      	ldr	r0, [r4, #0]
 800e5d0:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800e5d2:	687b      	ldr	r3, [r7, #4]
 800e5d4:	33d8      	adds	r3, #216	; 0xd8
 800e5d6:	4aae      	ldr	r2, [pc, #696]	; (800e890 <createProblem+0xd9e8>)
 800e5d8:	461c      	mov	r4, r3
 800e5da:	4615      	mov	r5, r2
 800e5dc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e5de:	6020      	str	r0, [r4, #0]
 800e5e0:	6061      	str	r1, [r4, #4]
 800e5e2:	60a2      	str	r2, [r4, #8]
 800e5e4:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800e5e6:	687b      	ldr	r3, [r7, #4]
 800e5e8:	33cc      	adds	r3, #204	; 0xcc
 800e5ea:	4aaa      	ldr	r2, [pc, #680]	; (800e894 <createProblem+0xd9ec>)
 800e5ec:	6810      	ldr	r0, [r2, #0]
 800e5ee:	6018      	str	r0, [r3, #0]
			break;
 800e5f0:	f00c b9a0 	b.w	801a934 <createProblem+0x19a8c>
		case 469 :
			strcpy(p->name,"TVÅ");
 800e5f4:	687b      	ldr	r3, [r7, #4]
 800e5f6:	337c      	adds	r3, #124	; 0x7c
 800e5f8:	4aa7      	ldr	r2, [pc, #668]	; (800e898 <createProblem+0xd9f0>)
 800e5fa:	6810      	ldr	r0, [r2, #0]
 800e5fc:	6018      	str	r0, [r3, #0]
 800e5fe:	7912      	ldrb	r2, [r2, #4]
 800e600:	711a      	strb	r2, [r3, #4]
			p->moveSize = 8;
 800e602:	687b      	ldr	r3, [r7, #4]
 800e604:	2208      	movs	r2, #8
 800e606:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,H,E,E,G,D,D");
 800e608:	687b      	ldr	r3, [r7, #4]
 800e60a:	3340      	adds	r3, #64	; 0x40
 800e60c:	4aa3      	ldr	r2, [pc, #652]	; (800e89c <createProblem+0xd9f4>)
 800e60e:	461c      	mov	r4, r3
 800e610:	4615      	mov	r5, r2
 800e612:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e614:	6020      	str	r0, [r4, #0]
 800e616:	6061      	str	r1, [r4, #4]
 800e618:	60a2      	str	r2, [r4, #8]
 800e61a:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,10,8,8,12,14,15,18");
 800e61c:	687b      	ldr	r3, [r7, #4]
 800e61e:	3304      	adds	r3, #4
 800e620:	4a9f      	ldr	r2, [pc, #636]	; (800e8a0 <createProblem+0xd9f8>)
 800e622:	461d      	mov	r5, r3
 800e624:	4614      	mov	r4, r2
 800e626:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e628:	6028      	str	r0, [r5, #0]
 800e62a:	6069      	str	r1, [r5, #4]
 800e62c:	60aa      	str	r2, [r5, #8]
 800e62e:	60eb      	str	r3, [r5, #12]
 800e630:	6820      	ldr	r0, [r4, #0]
 800e632:	6128      	str	r0, [r5, #16]
 800e634:	7923      	ldrb	r3, [r4, #4]
 800e636:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 800e638:	687b      	ldr	r3, [r7, #4]
 800e63a:	33d8      	adds	r3, #216	; 0xd8
 800e63c:	4a99      	ldr	r2, [pc, #612]	; (800e8a4 <createProblem+0xd9fc>)
 800e63e:	461c      	mov	r4, r3
 800e640:	4615      	mov	r5, r2
 800e642:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e644:	6020      	str	r0, [r4, #0]
 800e646:	6061      	str	r1, [r4, #4]
 800e648:	60a2      	str	r2, [r4, #8]
 800e64a:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800e64c:	687b      	ldr	r3, [r7, #4]
 800e64e:	33cc      	adds	r3, #204	; 0xcc
 800e650:	4a90      	ldr	r2, [pc, #576]	; (800e894 <createProblem+0xd9ec>)
 800e652:	6810      	ldr	r0, [r2, #0]
 800e654:	6018      	str	r0, [r3, #0]
			break;
 800e656:	f00c b96d 	b.w	801a934 <createProblem+0x19a8c>
		case 47 :
			strcpy(p->name,"ACG21");
 800e65a:	687b      	ldr	r3, [r7, #4]
 800e65c:	337c      	adds	r3, #124	; 0x7c
 800e65e:	4a92      	ldr	r2, [pc, #584]	; (800e8a8 <createProblem+0xda00>)
 800e660:	6810      	ldr	r0, [r2, #0]
 800e662:	6018      	str	r0, [r3, #0]
 800e664:	8892      	ldrh	r2, [r2, #4]
 800e666:	809a      	strh	r2, [r3, #4]
			p->moveSize = 8;
 800e668:	687b      	ldr	r3, [r7, #4]
 800e66a:	2208      	movs	r2, #8
 800e66c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,I,G,B,E,C,A");
 800e66e:	687b      	ldr	r3, [r7, #4]
 800e670:	3340      	adds	r3, #64	; 0x40
 800e672:	4a8e      	ldr	r2, [pc, #568]	; (800e8ac <createProblem+0xda04>)
 800e674:	461c      	mov	r4, r3
 800e676:	4615      	mov	r5, r2
 800e678:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e67a:	6020      	str	r0, [r4, #0]
 800e67c:	6061      	str	r1, [r4, #4]
 800e67e:	60a2      	str	r2, [r4, #8]
 800e680:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,10,10,10,14,16,18");
 800e682:	687b      	ldr	r3, [r7, #4]
 800e684:	3304      	adds	r3, #4
 800e686:	4a8a      	ldr	r2, [pc, #552]	; (800e8b0 <createProblem+0xda08>)
 800e688:	461d      	mov	r5, r3
 800e68a:	4614      	mov	r4, r2
 800e68c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e68e:	6028      	str	r0, [r5, #0]
 800e690:	6069      	str	r1, [r5, #4]
 800e692:	60aa      	str	r2, [r5, #8]
 800e694:	60eb      	str	r3, [r5, #12]
 800e696:	6820      	ldr	r0, [r4, #0]
 800e698:	6128      	str	r0, [r5, #16]
 800e69a:	88a3      	ldrh	r3, [r4, #4]
 800e69c:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 800e69e:	687b      	ldr	r3, [r7, #4]
 800e6a0:	33d8      	adds	r3, #216	; 0xd8
 800e6a2:	4a80      	ldr	r2, [pc, #512]	; (800e8a4 <createProblem+0xd9fc>)
 800e6a4:	461c      	mov	r4, r3
 800e6a6:	4615      	mov	r5, r2
 800e6a8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e6aa:	6020      	str	r0, [r4, #0]
 800e6ac:	6061      	str	r1, [r4, #4]
 800e6ae:	60a2      	str	r2, [r4, #8]
 800e6b0:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7B");
 800e6b2:	687b      	ldr	r3, [r7, #4]
 800e6b4:	33cc      	adds	r3, #204	; 0xcc
 800e6b6:	4a7f      	ldr	r2, [pc, #508]	; (800e8b4 <createProblem+0xda0c>)
 800e6b8:	8811      	ldrh	r1, [r2, #0]
 800e6ba:	7892      	ldrb	r2, [r2, #2]
 800e6bc:	8019      	strh	r1, [r3, #0]
 800e6be:	709a      	strb	r2, [r3, #2]
			break;
 800e6c0:	f00c b938 	b.w	801a934 <createProblem+0x19a8c>
		case 470 :
			strcpy(p->name,"BLACK WINGS");
 800e6c4:	687b      	ldr	r3, [r7, #4]
 800e6c6:	337c      	adds	r3, #124	; 0x7c
 800e6c8:	4a7b      	ldr	r2, [pc, #492]	; (800e8b8 <createProblem+0xda10>)
 800e6ca:	461c      	mov	r4, r3
 800e6cc:	4613      	mov	r3, r2
 800e6ce:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e6d0:	6020      	str	r0, [r4, #0]
 800e6d2:	6061      	str	r1, [r4, #4]
 800e6d4:	60a2      	str	r2, [r4, #8]
			p->moveSize = 9;
 800e6d6:	687b      	ldr	r3, [r7, #4]
 800e6d8:	2209      	movs	r2, #9
 800e6da:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,D,C,H,C,E,H,I");
 800e6dc:	687b      	ldr	r3, [r7, #4]
 800e6de:	3340      	adds	r3, #64	; 0x40
 800e6e0:	4a76      	ldr	r2, [pc, #472]	; (800e8bc <createProblem+0xda14>)
 800e6e2:	461d      	mov	r5, r3
 800e6e4:	4614      	mov	r4, r2
 800e6e6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e6e8:	6028      	str	r0, [r5, #0]
 800e6ea:	6069      	str	r1, [r5, #4]
 800e6ec:	60aa      	str	r2, [r5, #8]
 800e6ee:	60eb      	str	r3, [r5, #12]
 800e6f0:	8823      	ldrh	r3, [r4, #0]
 800e6f2:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,6,15,8,10,13,16,5,18");
 800e6f4:	687b      	ldr	r3, [r7, #4]
 800e6f6:	3304      	adds	r3, #4
 800e6f8:	4a71      	ldr	r2, [pc, #452]	; (800e8c0 <createProblem+0xda18>)
 800e6fa:	461c      	mov	r4, r3
 800e6fc:	4615      	mov	r5, r2
 800e6fe:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e700:	6020      	str	r0, [r4, #0]
 800e702:	6061      	str	r1, [r4, #4]
 800e704:	60a2      	str	r2, [r4, #8]
 800e706:	60e3      	str	r3, [r4, #12]
 800e708:	6828      	ldr	r0, [r5, #0]
 800e70a:	6120      	str	r0, [r4, #16]
 800e70c:	88ab      	ldrh	r3, [r5, #4]
 800e70e:	79aa      	ldrb	r2, [r5, #6]
 800e710:	82a3      	strh	r3, [r4, #20]
 800e712:	4613      	mov	r3, r2
 800e714:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 800e716:	687b      	ldr	r3, [r7, #4]
 800e718:	33d8      	adds	r3, #216	; 0xd8
 800e71a:	4a6a      	ldr	r2, [pc, #424]	; (800e8c4 <createProblem+0xda1c>)
 800e71c:	461d      	mov	r5, r3
 800e71e:	4614      	mov	r4, r2
 800e720:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e722:	6028      	str	r0, [r5, #0]
 800e724:	6069      	str	r1, [r5, #4]
 800e726:	60aa      	str	r2, [r5, #8]
 800e728:	60eb      	str	r3, [r5, #12]
 800e72a:	8823      	ldrh	r3, [r4, #0]
 800e72c:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 800e72e:	687b      	ldr	r3, [r7, #4]
 800e730:	33cc      	adds	r3, #204	; 0xcc
 800e732:	4a58      	ldr	r2, [pc, #352]	; (800e894 <createProblem+0xd9ec>)
 800e734:	6810      	ldr	r0, [r2, #0]
 800e736:	6018      	str	r0, [r3, #0]
			break;
 800e738:	f00c b8fc 	b.w	801a934 <createProblem+0x19a8c>
		case 471 :
			strcpy(p->name,"INTERESTING");
 800e73c:	687b      	ldr	r3, [r7, #4]
 800e73e:	337c      	adds	r3, #124	; 0x7c
 800e740:	4a61      	ldr	r2, [pc, #388]	; (800e8c8 <createProblem+0xda20>)
 800e742:	461c      	mov	r4, r3
 800e744:	4613      	mov	r3, r2
 800e746:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e748:	6020      	str	r0, [r4, #0]
 800e74a:	6061      	str	r1, [r4, #4]
 800e74c:	60a2      	str	r2, [r4, #8]
			p->moveSize = 7;
 800e74e:	687b      	ldr	r3, [r7, #4]
 800e750:	2207      	movs	r2, #7
 800e752:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,H,G,H,E,I");
 800e754:	687b      	ldr	r3, [r7, #4]
 800e756:	3340      	adds	r3, #64	; 0x40
 800e758:	4a5c      	ldr	r2, [pc, #368]	; (800e8cc <createProblem+0xda24>)
 800e75a:	461c      	mov	r4, r3
 800e75c:	4613      	mov	r3, r2
 800e75e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e760:	6020      	str	r0, [r4, #0]
 800e762:	6061      	str	r1, [r4, #4]
 800e764:	60a2      	str	r2, [r4, #8]
 800e766:	881b      	ldrh	r3, [r3, #0]
 800e768:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,8,10,13,16,18");
 800e76a:	687b      	ldr	r3, [r7, #4]
 800e76c:	3304      	adds	r3, #4
 800e76e:	4a58      	ldr	r2, [pc, #352]	; (800e8d0 <createProblem+0xda28>)
 800e770:	461d      	mov	r5, r3
 800e772:	4614      	mov	r4, r2
 800e774:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e776:	6028      	str	r0, [r5, #0]
 800e778:	6069      	str	r1, [r5, #4]
 800e77a:	60aa      	str	r2, [r5, #8]
 800e77c:	60eb      	str	r3, [r5, #12]
 800e77e:	8823      	ldrh	r3, [r4, #0]
 800e780:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800e782:	687b      	ldr	r3, [r7, #4]
 800e784:	33d8      	adds	r3, #216	; 0xd8
 800e786:	4a53      	ldr	r2, [pc, #332]	; (800e8d4 <createProblem+0xda2c>)
 800e788:	461c      	mov	r4, r3
 800e78a:	4613      	mov	r3, r2
 800e78c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e78e:	6020      	str	r0, [r4, #0]
 800e790:	6061      	str	r1, [r4, #4]
 800e792:	60a2      	str	r2, [r4, #8]
 800e794:	881b      	ldrh	r3, [r3, #0]
 800e796:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 800e798:	687b      	ldr	r3, [r7, #4]
 800e79a:	33cc      	adds	r3, #204	; 0xcc
 800e79c:	4a4e      	ldr	r2, [pc, #312]	; (800e8d8 <createProblem+0xda30>)
 800e79e:	6810      	ldr	r0, [r2, #0]
 800e7a0:	6018      	str	r0, [r3, #0]
			break;
 800e7a2:	f00c b8c7 	b.w	801a934 <createProblem+0x19a8c>
		case 472 :
			strcpy(p->name,"POWER HUNGRY");
 800e7a6:	687b      	ldr	r3, [r7, #4]
 800e7a8:	337c      	adds	r3, #124	; 0x7c
 800e7aa:	4a4c      	ldr	r2, [pc, #304]	; (800e8dc <createProblem+0xda34>)
 800e7ac:	461c      	mov	r4, r3
 800e7ae:	4613      	mov	r3, r2
 800e7b0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e7b2:	6020      	str	r0, [r4, #0]
 800e7b4:	6061      	str	r1, [r4, #4]
 800e7b6:	60a2      	str	r2, [r4, #8]
 800e7b8:	781b      	ldrb	r3, [r3, #0]
 800e7ba:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 800e7bc:	687b      	ldr	r3, [r7, #4]
 800e7be:	2206      	movs	r2, #6
 800e7c0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,G,K,D,I,D");
 800e7c2:	687b      	ldr	r3, [r7, #4]
 800e7c4:	3340      	adds	r3, #64	; 0x40
 800e7c6:	4a46      	ldr	r2, [pc, #280]	; (800e8e0 <createProblem+0xda38>)
 800e7c8:	461c      	mov	r4, r3
 800e7ca:	4613      	mov	r3, r2
 800e7cc:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e7ce:	6020      	str	r0, [r4, #0]
 800e7d0:	6061      	str	r1, [r4, #4]
 800e7d2:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,4,9,11,14,18");
 800e7d4:	687b      	ldr	r3, [r7, #4]
 800e7d6:	3304      	adds	r3, #4
 800e7d8:	4a42      	ldr	r2, [pc, #264]	; (800e8e4 <createProblem+0xda3c>)
 800e7da:	461c      	mov	r4, r3
 800e7dc:	4613      	mov	r3, r2
 800e7de:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e7e0:	6020      	str	r0, [r4, #0]
 800e7e2:	6061      	str	r1, [r4, #4]
 800e7e4:	60a2      	str	r2, [r4, #8]
 800e7e6:	881a      	ldrh	r2, [r3, #0]
 800e7e8:	789b      	ldrb	r3, [r3, #2]
 800e7ea:	81a2      	strh	r2, [r4, #12]
 800e7ec:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800e7ee:	687b      	ldr	r3, [r7, #4]
 800e7f0:	33d8      	adds	r3, #216	; 0xd8
 800e7f2:	4a3d      	ldr	r2, [pc, #244]	; (800e8e8 <createProblem+0xda40>)
 800e7f4:	461c      	mov	r4, r3
 800e7f6:	4613      	mov	r3, r2
 800e7f8:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e7fa:	6020      	str	r0, [r4, #0]
 800e7fc:	6061      	str	r1, [r4, #4]
 800e7fe:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7C");
 800e800:	687b      	ldr	r3, [r7, #4]
 800e802:	33cc      	adds	r3, #204	; 0xcc
 800e804:	4a39      	ldr	r2, [pc, #228]	; (800e8ec <createProblem+0xda44>)
 800e806:	8811      	ldrh	r1, [r2, #0]
 800e808:	7892      	ldrb	r2, [r2, #2]
 800e80a:	8019      	strh	r1, [r3, #0]
 800e80c:	709a      	strb	r2, [r3, #2]
			break;
 800e80e:	f00c b891 	b.w	801a934 <createProblem+0x19a8c>
		case 473 :
			strcpy(p->name,"VALGULIOUS");
 800e812:	687b      	ldr	r3, [r7, #4]
 800e814:	337c      	adds	r3, #124	; 0x7c
 800e816:	4936      	ldr	r1, [pc, #216]	; (800e8f0 <createProblem+0xda48>)
 800e818:	461a      	mov	r2, r3
 800e81a:	460b      	mov	r3, r1
 800e81c:	cb03      	ldmia	r3!, {r0, r1}
 800e81e:	6010      	str	r0, [r2, #0]
 800e820:	6051      	str	r1, [r2, #4]
 800e822:	8819      	ldrh	r1, [r3, #0]
 800e824:	789b      	ldrb	r3, [r3, #2]
 800e826:	8111      	strh	r1, [r2, #8]
 800e828:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 800e82a:	687b      	ldr	r3, [r7, #4]
 800e82c:	2207      	movs	r2, #7
 800e82e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,C,G,J,J,I,I");
 800e830:	687b      	ldr	r3, [r7, #4]
 800e832:	3340      	adds	r3, #64	; 0x40
 800e834:	4a2f      	ldr	r2, [pc, #188]	; (800e8f4 <createProblem+0xda4c>)
 800e836:	461c      	mov	r4, r3
 800e838:	4613      	mov	r3, r2
 800e83a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e83c:	6020      	str	r0, [r4, #0]
 800e83e:	6061      	str	r1, [r4, #4]
 800e840:	60a2      	str	r2, [r4, #8]
 800e842:	881b      	ldrh	r3, [r3, #0]
 800e844:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,9,5,12,15,18");
 800e846:	687b      	ldr	r3, [r7, #4]
 800e848:	3304      	adds	r3, #4
 800e84a:	4a2b      	ldr	r2, [pc, #172]	; (800e8f8 <createProblem+0xda50>)
 800e84c:	461d      	mov	r5, r3
 800e84e:	4614      	mov	r4, r2
 800e850:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e852:	6028      	str	r0, [r5, #0]
 800e854:	6069      	str	r1, [r5, #4]
 800e856:	60aa      	str	r2, [r5, #8]
 800e858:	60eb      	str	r3, [r5, #12]
 800e85a:	7823      	ldrb	r3, [r4, #0]
 800e85c:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800e85e:	687b      	ldr	r3, [r7, #4]
 800e860:	33d8      	adds	r3, #216	; 0xd8
 800e862:	4a26      	ldr	r2, [pc, #152]	; (800e8fc <createProblem+0xda54>)
 800e864:	461c      	mov	r4, r3
 800e866:	4613      	mov	r3, r2
 800e868:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e86a:	6020      	str	r0, [r4, #0]
 800e86c:	6061      	str	r1, [r4, #4]
 800e86e:	60a2      	str	r2, [r4, #8]
 800e870:	881b      	ldrh	r3, [r3, #0]
 800e872:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 800e874:	687b      	ldr	r3, [r7, #4]
 800e876:	33cc      	adds	r3, #204	; 0xcc
 800e878:	4a21      	ldr	r2, [pc, #132]	; (800e900 <createProblem+0xda58>)
 800e87a:	6810      	ldr	r0, [r2, #0]
 800e87c:	6018      	str	r0, [r3, #0]
			break;
 800e87e:	f00c b859 	b.w	801a934 <createProblem+0x19a8c>
 800e882:	bf00      	nop
 800e884:	08025470 	.word	0x08025470
 800e888:	08025488 	.word	0x08025488
 800e88c:	08025498 	.word	0x08025498
 800e890:	08020a4c 	.word	0x08020a4c
 800e894:	08020830 	.word	0x08020830
 800e898:	080254ac 	.word	0x080254ac
 800e89c:	080254b4 	.word	0x080254b4
 800e8a0:	080254c4 	.word	0x080254c4
 800e8a4:	080209d8 	.word	0x080209d8
 800e8a8:	080254dc 	.word	0x080254dc
 800e8ac:	080254e4 	.word	0x080254e4
 800e8b0:	080254f4 	.word	0x080254f4
 800e8b4:	080208ac 	.word	0x080208ac
 800e8b8:	0802550c 	.word	0x0802550c
 800e8bc:	08025518 	.word	0x08025518
 800e8c0:	0802552c 	.word	0x0802552c
 800e8c4:	08020dfc 	.word	0x08020dfc
 800e8c8:	08025544 	.word	0x08025544
 800e8cc:	08025550 	.word	0x08025550
 800e8d0:	08025560 	.word	0x08025560
 800e8d4:	08020820 	.word	0x08020820
 800e8d8:	08020928 	.word	0x08020928
 800e8dc:	08025574 	.word	0x08025574
 800e8e0:	08025584 	.word	0x08025584
 800e8e4:	08025590 	.word	0x08025590
 800e8e8:	08020e90 	.word	0x08020e90
 800e8ec:	08020b0c 	.word	0x08020b0c
 800e8f0:	080255a0 	.word	0x080255a0
 800e8f4:	080255ac 	.word	0x080255ac
 800e8f8:	080255bc 	.word	0x080255bc
 800e8fc:	08020a14 	.word	0x08020a14
 800e900:	080209a4 	.word	0x080209a4
		case 474 :
			strcpy(p->name,"GS");
 800e904:	687b      	ldr	r3, [r7, #4]
 800e906:	337c      	adds	r3, #124	; 0x7c
 800e908:	4aba      	ldr	r2, [pc, #744]	; (800ebf4 <createProblem+0xdd4c>)
 800e90a:	8811      	ldrh	r1, [r2, #0]
 800e90c:	7892      	ldrb	r2, [r2, #2]
 800e90e:	8019      	strh	r1, [r3, #0]
 800e910:	709a      	strb	r2, [r3, #2]
			p->moveSize = 10;
 800e912:	687b      	ldr	r3, [r7, #4]
 800e914:	220a      	movs	r2, #10
 800e916:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,H,H,F,C,E,A,E,A");
 800e918:	687b      	ldr	r3, [r7, #4]
 800e91a:	3340      	adds	r3, #64	; 0x40
 800e91c:	4ab6      	ldr	r2, [pc, #728]	; (800ebf8 <createProblem+0xdd50>)
 800e91e:	461d      	mov	r5, r3
 800e920:	4614      	mov	r4, r2
 800e922:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e924:	6028      	str	r0, [r5, #0]
 800e926:	6069      	str	r1, [r5, #4]
 800e928:	60aa      	str	r2, [r5, #8]
 800e92a:	60eb      	str	r3, [r5, #12]
 800e92c:	6820      	ldr	r0, [r4, #0]
 800e92e:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"6,5,8,10,11,13,14,14,16,18");
 800e930:	687b      	ldr	r3, [r7, #4]
 800e932:	3304      	adds	r3, #4
 800e934:	4ab1      	ldr	r2, [pc, #708]	; (800ebfc <createProblem+0xdd54>)
 800e936:	461d      	mov	r5, r3
 800e938:	4614      	mov	r4, r2
 800e93a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e93c:	6028      	str	r0, [r5, #0]
 800e93e:	6069      	str	r1, [r5, #4]
 800e940:	60aa      	str	r2, [r5, #8]
 800e942:	60eb      	str	r3, [r5, #12]
 800e944:	cc03      	ldmia	r4!, {r0, r1}
 800e946:	6128      	str	r0, [r5, #16]
 800e948:	6169      	str	r1, [r5, #20]
 800e94a:	8823      	ldrh	r3, [r4, #0]
 800e94c:	78a2      	ldrb	r2, [r4, #2]
 800e94e:	832b      	strh	r3, [r5, #24]
 800e950:	4613      	mov	r3, r2
 800e952:	76ab      	strb	r3, [r5, #26]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,e");
 800e954:	687b      	ldr	r3, [r7, #4]
 800e956:	33d8      	adds	r3, #216	; 0xd8
 800e958:	4aa9      	ldr	r2, [pc, #676]	; (800ec00 <createProblem+0xdd58>)
 800e95a:	461d      	mov	r5, r3
 800e95c:	4614      	mov	r4, r2
 800e95e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800e960:	6028      	str	r0, [r5, #0]
 800e962:	6069      	str	r1, [r5, #4]
 800e964:	60aa      	str	r2, [r5, #8]
 800e966:	60eb      	str	r3, [r5, #12]
 800e968:	6820      	ldr	r0, [r4, #0]
 800e96a:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "6C");
 800e96c:	687b      	ldr	r3, [r7, #4]
 800e96e:	33cc      	adds	r3, #204	; 0xcc
 800e970:	4aa4      	ldr	r2, [pc, #656]	; (800ec04 <createProblem+0xdd5c>)
 800e972:	8811      	ldrh	r1, [r2, #0]
 800e974:	7892      	ldrb	r2, [r2, #2]
 800e976:	8019      	strh	r1, [r3, #0]
 800e978:	709a      	strb	r2, [r3, #2]
			break;
 800e97a:	f00b bfdb 	b.w	801a934 <createProblem+0x19a8c>
		case 475 :
			strcpy(p->name,"ANY GIVEN DAY");
 800e97e:	687b      	ldr	r3, [r7, #4]
 800e980:	337c      	adds	r3, #124	; 0x7c
 800e982:	4aa1      	ldr	r2, [pc, #644]	; (800ec08 <createProblem+0xdd60>)
 800e984:	461c      	mov	r4, r3
 800e986:	4613      	mov	r3, r2
 800e988:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e98a:	6020      	str	r0, [r4, #0]
 800e98c:	6061      	str	r1, [r4, #4]
 800e98e:	60a2      	str	r2, [r4, #8]
 800e990:	881b      	ldrh	r3, [r3, #0]
 800e992:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 800e994:	687b      	ldr	r3, [r7, #4]
 800e996:	2206      	movs	r2, #6
 800e998:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,C,D,D");
 800e99a:	687b      	ldr	r3, [r7, #4]
 800e99c:	3340      	adds	r3, #64	; 0x40
 800e99e:	4a9b      	ldr	r2, [pc, #620]	; (800ec0c <createProblem+0xdd64>)
 800e9a0:	461c      	mov	r4, r3
 800e9a2:	4613      	mov	r3, r2
 800e9a4:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e9a6:	6020      	str	r0, [r4, #0]
 800e9a8:	6061      	str	r1, [r4, #4]
 800e9aa:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,10,13,15,18");
 800e9ac:	687b      	ldr	r3, [r7, #4]
 800e9ae:	3304      	adds	r3, #4
 800e9b0:	4a97      	ldr	r2, [pc, #604]	; (800ec10 <createProblem+0xdd68>)
 800e9b2:	461c      	mov	r4, r3
 800e9b4:	4615      	mov	r5, r2
 800e9b6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800e9b8:	6020      	str	r0, [r4, #0]
 800e9ba:	6061      	str	r1, [r4, #4]
 800e9bc:	60a2      	str	r2, [r4, #8]
 800e9be:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800e9c0:	687b      	ldr	r3, [r7, #4]
 800e9c2:	33d8      	adds	r3, #216	; 0xd8
 800e9c4:	4a93      	ldr	r2, [pc, #588]	; (800ec14 <createProblem+0xdd6c>)
 800e9c6:	461c      	mov	r4, r3
 800e9c8:	4613      	mov	r3, r2
 800e9ca:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e9cc:	6020      	str	r0, [r4, #0]
 800e9ce:	6061      	str	r1, [r4, #4]
 800e9d0:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 800e9d2:	687b      	ldr	r3, [r7, #4]
 800e9d4:	33cc      	adds	r3, #204	; 0xcc
 800e9d6:	4a90      	ldr	r2, [pc, #576]	; (800ec18 <createProblem+0xdd70>)
 800e9d8:	6810      	ldr	r0, [r2, #0]
 800e9da:	6018      	str	r0, [r3, #0]
			break;
 800e9dc:	f00b bfaa 	b.w	801a934 <createProblem+0x19a8c>
		case 476 :
			strcpy(p->name,"BASIC B*TCH");
 800e9e0:	687b      	ldr	r3, [r7, #4]
 800e9e2:	337c      	adds	r3, #124	; 0x7c
 800e9e4:	4a8d      	ldr	r2, [pc, #564]	; (800ec1c <createProblem+0xdd74>)
 800e9e6:	461c      	mov	r4, r3
 800e9e8:	4613      	mov	r3, r2
 800e9ea:	cb07      	ldmia	r3!, {r0, r1, r2}
 800e9ec:	6020      	str	r0, [r4, #0]
 800e9ee:	6061      	str	r1, [r4, #4]
 800e9f0:	60a2      	str	r2, [r4, #8]
			p->moveSize = 4;
 800e9f2:	687b      	ldr	r3, [r7, #4]
 800e9f4:	2204      	movs	r2, #4
 800e9f6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,C,D");
 800e9f8:	687b      	ldr	r3, [r7, #4]
 800e9fa:	3340      	adds	r3, #64	; 0x40
 800e9fc:	4988      	ldr	r1, [pc, #544]	; (800ec20 <createProblem+0xdd78>)
 800e9fe:	461a      	mov	r2, r3
 800ea00:	460b      	mov	r3, r1
 800ea02:	cb03      	ldmia	r3!, {r0, r1}
 800ea04:	6010      	str	r0, [r2, #0]
 800ea06:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"5,10,13,18");
 800ea08:	687b      	ldr	r3, [r7, #4]
 800ea0a:	3304      	adds	r3, #4
 800ea0c:	4985      	ldr	r1, [pc, #532]	; (800ec24 <createProblem+0xdd7c>)
 800ea0e:	461a      	mov	r2, r3
 800ea10:	460b      	mov	r3, r1
 800ea12:	cb03      	ldmia	r3!, {r0, r1}
 800ea14:	6010      	str	r0, [r2, #0]
 800ea16:	6051      	str	r1, [r2, #4]
 800ea18:	8819      	ldrh	r1, [r3, #0]
 800ea1a:	789b      	ldrb	r3, [r3, #2]
 800ea1c:	8111      	strh	r1, [r2, #8]
 800ea1e:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 800ea20:	687b      	ldr	r3, [r7, #4]
 800ea22:	33d8      	adds	r3, #216	; 0xd8
 800ea24:	4980      	ldr	r1, [pc, #512]	; (800ec28 <createProblem+0xdd80>)
 800ea26:	461a      	mov	r2, r3
 800ea28:	460b      	mov	r3, r1
 800ea2a:	cb03      	ldmia	r3!, {r0, r1}
 800ea2c:	6010      	str	r0, [r2, #0]
 800ea2e:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7A+");
 800ea30:	687b      	ldr	r3, [r7, #4]
 800ea32:	33cc      	adds	r3, #204	; 0xcc
 800ea34:	4a7d      	ldr	r2, [pc, #500]	; (800ec2c <createProblem+0xdd84>)
 800ea36:	6810      	ldr	r0, [r2, #0]
 800ea38:	6018      	str	r0, [r3, #0]
			break;
 800ea3a:	f00b bf7b 	b.w	801a934 <createProblem+0x19a8c>
		case 477 :
			strcpy(p->name,"SLIGHTLY LESS BASIC B*TCH");
 800ea3e:	687b      	ldr	r3, [r7, #4]
 800ea40:	337c      	adds	r3, #124	; 0x7c
 800ea42:	4a7b      	ldr	r2, [pc, #492]	; (800ec30 <createProblem+0xdd88>)
 800ea44:	461d      	mov	r5, r3
 800ea46:	4614      	mov	r4, r2
 800ea48:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ea4a:	6028      	str	r0, [r5, #0]
 800ea4c:	6069      	str	r1, [r5, #4]
 800ea4e:	60aa      	str	r2, [r5, #8]
 800ea50:	60eb      	str	r3, [r5, #12]
 800ea52:	cc03      	ldmia	r4!, {r0, r1}
 800ea54:	6128      	str	r0, [r5, #16]
 800ea56:	6169      	str	r1, [r5, #20]
 800ea58:	8823      	ldrh	r3, [r4, #0]
 800ea5a:	832b      	strh	r3, [r5, #24]
			p->moveSize = 5;
 800ea5c:	687b      	ldr	r3, [r7, #4]
 800ea5e:	2205      	movs	r2, #5
 800ea60:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,C,G,I");
 800ea62:	687b      	ldr	r3, [r7, #4]
 800ea64:	3340      	adds	r3, #64	; 0x40
 800ea66:	4973      	ldr	r1, [pc, #460]	; (800ec34 <createProblem+0xdd8c>)
 800ea68:	461a      	mov	r2, r3
 800ea6a:	460b      	mov	r3, r1
 800ea6c:	cb03      	ldmia	r3!, {r0, r1}
 800ea6e:	6010      	str	r0, [r2, #0]
 800ea70:	6051      	str	r1, [r2, #4]
 800ea72:	881b      	ldrh	r3, [r3, #0]
 800ea74:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,13,17,18");
 800ea76:	687b      	ldr	r3, [r7, #4]
 800ea78:	3304      	adds	r3, #4
 800ea7a:	4a6f      	ldr	r2, [pc, #444]	; (800ec38 <createProblem+0xdd90>)
 800ea7c:	461c      	mov	r4, r3
 800ea7e:	4613      	mov	r3, r2
 800ea80:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ea82:	6020      	str	r0, [r4, #0]
 800ea84:	6061      	str	r1, [r4, #4]
 800ea86:	60a2      	str	r2, [r4, #8]
 800ea88:	881b      	ldrh	r3, [r3, #0]
 800ea8a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800ea8c:	687b      	ldr	r3, [r7, #4]
 800ea8e:	33d8      	adds	r3, #216	; 0xd8
 800ea90:	496a      	ldr	r1, [pc, #424]	; (800ec3c <createProblem+0xdd94>)
 800ea92:	461a      	mov	r2, r3
 800ea94:	460b      	mov	r3, r1
 800ea96:	cb03      	ldmia	r3!, {r0, r1}
 800ea98:	6010      	str	r0, [r2, #0]
 800ea9a:	6051      	str	r1, [r2, #4]
 800ea9c:	881b      	ldrh	r3, [r3, #0]
 800ea9e:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 800eaa0:	687b      	ldr	r3, [r7, #4]
 800eaa2:	33cc      	adds	r3, #204	; 0xcc
 800eaa4:	4a61      	ldr	r2, [pc, #388]	; (800ec2c <createProblem+0xdd84>)
 800eaa6:	6810      	ldr	r0, [r2, #0]
 800eaa8:	6018      	str	r0, [r3, #0]
			break;
 800eaaa:	f00b bf43 	b.w	801a934 <createProblem+0x19a8c>
		case 478 :
			strcpy(p->name,"MO'RON");
 800eaae:	687b      	ldr	r3, [r7, #4]
 800eab0:	337c      	adds	r3, #124	; 0x7c
 800eab2:	4a63      	ldr	r2, [pc, #396]	; (800ec40 <createProblem+0xdd98>)
 800eab4:	6810      	ldr	r0, [r2, #0]
 800eab6:	6018      	str	r0, [r3, #0]
 800eab8:	8891      	ldrh	r1, [r2, #4]
 800eaba:	7992      	ldrb	r2, [r2, #6]
 800eabc:	8099      	strh	r1, [r3, #4]
 800eabe:	719a      	strb	r2, [r3, #6]
			p->moveSize = 8;
 800eac0:	687b      	ldr	r3, [r7, #4]
 800eac2:	2208      	movs	r2, #8
 800eac4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,E,A,E,E,G,D");
 800eac6:	687b      	ldr	r3, [r7, #4]
 800eac8:	3340      	adds	r3, #64	; 0x40
 800eaca:	4a5e      	ldr	r2, [pc, #376]	; (800ec44 <createProblem+0xdd9c>)
 800eacc:	461c      	mov	r4, r3
 800eace:	4615      	mov	r5, r2
 800ead0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ead2:	6020      	str	r0, [r4, #0]
 800ead4:	6061      	str	r1, [r4, #4]
 800ead6:	60a2      	str	r2, [r4, #8]
 800ead8:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,4,8,9,12,14,17,18");
 800eada:	687b      	ldr	r3, [r7, #4]
 800eadc:	3304      	adds	r3, #4
 800eade:	4a5a      	ldr	r2, [pc, #360]	; (800ec48 <createProblem+0xdda0>)
 800eae0:	461d      	mov	r5, r3
 800eae2:	4614      	mov	r4, r2
 800eae4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800eae6:	6028      	str	r0, [r5, #0]
 800eae8:	6069      	str	r1, [r5, #4]
 800eaea:	60aa      	str	r2, [r5, #8]
 800eaec:	60eb      	str	r3, [r5, #12]
 800eaee:	6820      	ldr	r0, [r4, #0]
 800eaf0:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 800eaf2:	687b      	ldr	r3, [r7, #4]
 800eaf4:	33d8      	adds	r3, #216	; 0xd8
 800eaf6:	4a55      	ldr	r2, [pc, #340]	; (800ec4c <createProblem+0xdda4>)
 800eaf8:	461c      	mov	r4, r3
 800eafa:	4615      	mov	r5, r2
 800eafc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800eafe:	6020      	str	r0, [r4, #0]
 800eb00:	6061      	str	r1, [r4, #4]
 800eb02:	60a2      	str	r2, [r4, #8]
 800eb04:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 800eb06:	687b      	ldr	r3, [r7, #4]
 800eb08:	33cc      	adds	r3, #204	; 0xcc
 800eb0a:	4a51      	ldr	r2, [pc, #324]	; (800ec50 <createProblem+0xdda8>)
 800eb0c:	8811      	ldrh	r1, [r2, #0]
 800eb0e:	7892      	ldrb	r2, [r2, #2]
 800eb10:	8019      	strh	r1, [r3, #0]
 800eb12:	709a      	strb	r2, [r3, #2]
			break;
 800eb14:	f00b bf0e 	b.w	801a934 <createProblem+0x19a8c>
		case 479 :
			strcpy(p->name,"RONSTOPPABLE");
 800eb18:	687b      	ldr	r3, [r7, #4]
 800eb1a:	337c      	adds	r3, #124	; 0x7c
 800eb1c:	4a4d      	ldr	r2, [pc, #308]	; (800ec54 <createProblem+0xddac>)
 800eb1e:	461c      	mov	r4, r3
 800eb20:	4613      	mov	r3, r2
 800eb22:	cb07      	ldmia	r3!, {r0, r1, r2}
 800eb24:	6020      	str	r0, [r4, #0]
 800eb26:	6061      	str	r1, [r4, #4]
 800eb28:	60a2      	str	r2, [r4, #8]
 800eb2a:	781b      	ldrb	r3, [r3, #0]
 800eb2c:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 800eb2e:	687b      	ldr	r3, [r7, #4]
 800eb30:	2206      	movs	r2, #6
 800eb32:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,E,B,D");
 800eb34:	687b      	ldr	r3, [r7, #4]
 800eb36:	3340      	adds	r3, #64	; 0x40
 800eb38:	4a47      	ldr	r2, [pc, #284]	; (800ec58 <createProblem+0xddb0>)
 800eb3a:	461c      	mov	r4, r3
 800eb3c:	4613      	mov	r3, r2
 800eb3e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800eb40:	6020      	str	r0, [r4, #0]
 800eb42:	6061      	str	r1, [r4, #4]
 800eb44:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,8,12,15,18");
 800eb46:	687b      	ldr	r3, [r7, #4]
 800eb48:	3304      	adds	r3, #4
 800eb4a:	4a44      	ldr	r2, [pc, #272]	; (800ec5c <createProblem+0xddb4>)
 800eb4c:	461c      	mov	r4, r3
 800eb4e:	4613      	mov	r3, r2
 800eb50:	cb07      	ldmia	r3!, {r0, r1, r2}
 800eb52:	6020      	str	r0, [r4, #0]
 800eb54:	6061      	str	r1, [r4, #4]
 800eb56:	60a2      	str	r2, [r4, #8]
 800eb58:	881a      	ldrh	r2, [r3, #0]
 800eb5a:	789b      	ldrb	r3, [r3, #2]
 800eb5c:	81a2      	strh	r2, [r4, #12]
 800eb5e:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800eb60:	687b      	ldr	r3, [r7, #4]
 800eb62:	33d8      	adds	r3, #216	; 0xd8
 800eb64:	4a2b      	ldr	r2, [pc, #172]	; (800ec14 <createProblem+0xdd6c>)
 800eb66:	461c      	mov	r4, r3
 800eb68:	4613      	mov	r3, r2
 800eb6a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800eb6c:	6020      	str	r0, [r4, #0]
 800eb6e:	6061      	str	r1, [r4, #4]
 800eb70:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 800eb72:	687b      	ldr	r3, [r7, #4]
 800eb74:	33cc      	adds	r3, #204	; 0xcc
 800eb76:	4a3a      	ldr	r2, [pc, #232]	; (800ec60 <createProblem+0xddb8>)
 800eb78:	6810      	ldr	r0, [r2, #0]
 800eb7a:	6018      	str	r0, [r3, #0]
			break;
 800eb7c:	f00b beda 	b.w	801a934 <createProblem+0x19a8c>
		case 48 :
			strcpy(p->name,"KANG MINA IOI");
 800eb80:	687b      	ldr	r3, [r7, #4]
 800eb82:	337c      	adds	r3, #124	; 0x7c
 800eb84:	4a37      	ldr	r2, [pc, #220]	; (800ec64 <createProblem+0xddbc>)
 800eb86:	461c      	mov	r4, r3
 800eb88:	4613      	mov	r3, r2
 800eb8a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800eb8c:	6020      	str	r0, [r4, #0]
 800eb8e:	6061      	str	r1, [r4, #4]
 800eb90:	60a2      	str	r2, [r4, #8]
 800eb92:	881b      	ldrh	r3, [r3, #0]
 800eb94:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 8;
 800eb96:	687b      	ldr	r3, [r7, #4]
 800eb98:	2208      	movs	r2, #8
 800eb9a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,E,B,B,A,D,E,I");
 800eb9c:	687b      	ldr	r3, [r7, #4]
 800eb9e:	3340      	adds	r3, #64	; 0x40
 800eba0:	4a31      	ldr	r2, [pc, #196]	; (800ec68 <createProblem+0xddc0>)
 800eba2:	461c      	mov	r4, r3
 800eba4:	4615      	mov	r5, r2
 800eba6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800eba8:	6020      	str	r0, [r4, #0]
 800ebaa:	6061      	str	r1, [r4, #4]
 800ebac:	60a2      	str	r2, [r4, #8]
 800ebae:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,9,10,12,14,15,16,18");
 800ebb0:	687b      	ldr	r3, [r7, #4]
 800ebb2:	3304      	adds	r3, #4
 800ebb4:	4a2d      	ldr	r2, [pc, #180]	; (800ec6c <createProblem+0xddc4>)
 800ebb6:	461d      	mov	r5, r3
 800ebb8:	4614      	mov	r4, r2
 800ebba:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ebbc:	6028      	str	r0, [r5, #0]
 800ebbe:	6069      	str	r1, [r5, #4]
 800ebc0:	60aa      	str	r2, [r5, #8]
 800ebc2:	60eb      	str	r3, [r5, #12]
 800ebc4:	6820      	ldr	r0, [r4, #0]
 800ebc6:	6128      	str	r0, [r5, #16]
 800ebc8:	88a3      	ldrh	r3, [r4, #4]
 800ebca:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 800ebcc:	687b      	ldr	r3, [r7, #4]
 800ebce:	33d8      	adds	r3, #216	; 0xd8
 800ebd0:	4a27      	ldr	r2, [pc, #156]	; (800ec70 <createProblem+0xddc8>)
 800ebd2:	461c      	mov	r4, r3
 800ebd4:	4615      	mov	r5, r2
 800ebd6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ebd8:	6020      	str	r0, [r4, #0]
 800ebda:	6061      	str	r1, [r4, #4]
 800ebdc:	60a2      	str	r2, [r4, #8]
 800ebde:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 800ebe0:	687b      	ldr	r3, [r7, #4]
 800ebe2:	33cc      	adds	r3, #204	; 0xcc
 800ebe4:	4a1a      	ldr	r2, [pc, #104]	; (800ec50 <createProblem+0xdda8>)
 800ebe6:	8811      	ldrh	r1, [r2, #0]
 800ebe8:	7892      	ldrb	r2, [r2, #2]
 800ebea:	8019      	strh	r1, [r3, #0]
 800ebec:	709a      	strb	r2, [r3, #2]
			break;
 800ebee:	f00b bea1 	b.w	801a934 <createProblem+0x19a8c>
 800ebf2:	bf00      	nop
 800ebf4:	080255d0 	.word	0x080255d0
 800ebf8:	080255d4 	.word	0x080255d4
 800ebfc:	080255e8 	.word	0x080255e8
 800ec00:	08020b7c 	.word	0x08020b7c
 800ec04:	080208f0 	.word	0x080208f0
 800ec08:	08025604 	.word	0x08025604
 800ec0c:	08025614 	.word	0x08025614
 800ec10:	08020ce8 	.word	0x08020ce8
 800ec14:	0802091c 	.word	0x0802091c
 800ec18:	08020830 	.word	0x08020830
 800ec1c:	08025620 	.word	0x08025620
 800ec20:	0802562c 	.word	0x0802562c
 800ec24:	08025634 	.word	0x08025634
 800ec28:	080215a8 	.word	0x080215a8
 800ec2c:	080209a4 	.word	0x080209a4
 800ec30:	08025640 	.word	0x08025640
 800ec34:	0802565c 	.word	0x0802565c
 800ec38:	08022a78 	.word	0x08022a78
 800ec3c:	080208a0 	.word	0x080208a0
 800ec40:	08025668 	.word	0x08025668
 800ec44:	08025670 	.word	0x08025670
 800ec48:	08025680 	.word	0x08025680
 800ec4c:	08020a4c 	.word	0x08020a4c
 800ec50:	08020874 	.word	0x08020874
 800ec54:	08025694 	.word	0x08025694
 800ec58:	080256a4 	.word	0x080256a4
 800ec5c:	08021be8 	.word	0x08021be8
 800ec60:	08020928 	.word	0x08020928
 800ec64:	080256b0 	.word	0x080256b0
 800ec68:	080256c0 	.word	0x080256c0
 800ec6c:	080256d0 	.word	0x080256d0
 800ec70:	080209d8 	.word	0x080209d8
		case 480 :
			strcpy(p->name,"TESSME 1");
 800ec74:	687b      	ldr	r3, [r7, #4]
 800ec76:	337c      	adds	r3, #124	; 0x7c
 800ec78:	49b6      	ldr	r1, [pc, #728]	; (800ef54 <createProblem+0xe0ac>)
 800ec7a:	461a      	mov	r2, r3
 800ec7c:	460b      	mov	r3, r1
 800ec7e:	cb03      	ldmia	r3!, {r0, r1}
 800ec80:	6010      	str	r0, [r2, #0]
 800ec82:	6051      	str	r1, [r2, #4]
 800ec84:	781b      	ldrb	r3, [r3, #0]
 800ec86:	7213      	strb	r3, [r2, #8]
			p->moveSize = 7;
 800ec88:	687b      	ldr	r3, [r7, #4]
 800ec8a:	2207      	movs	r2, #7
 800ec8c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,F,J,H,I");
 800ec8e:	687b      	ldr	r3, [r7, #4]
 800ec90:	3340      	adds	r3, #64	; 0x40
 800ec92:	4ab1      	ldr	r2, [pc, #708]	; (800ef58 <createProblem+0xe0b0>)
 800ec94:	461c      	mov	r4, r3
 800ec96:	4613      	mov	r3, r2
 800ec98:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ec9a:	6020      	str	r0, [r4, #0]
 800ec9c:	6061      	str	r1, [r4, #4]
 800ec9e:	60a2      	str	r2, [r4, #8]
 800eca0:	881b      	ldrh	r3, [r3, #0]
 800eca2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,8,11,13,16,18");
 800eca4:	687b      	ldr	r3, [r7, #4]
 800eca6:	3304      	adds	r3, #4
 800eca8:	4aac      	ldr	r2, [pc, #688]	; (800ef5c <createProblem+0xe0b4>)
 800ecaa:	461d      	mov	r5, r3
 800ecac:	4614      	mov	r4, r2
 800ecae:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ecb0:	6028      	str	r0, [r5, #0]
 800ecb2:	6069      	str	r1, [r5, #4]
 800ecb4:	60aa      	str	r2, [r5, #8]
 800ecb6:	60eb      	str	r3, [r5, #12]
 800ecb8:	8823      	ldrh	r3, [r4, #0]
 800ecba:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800ecbc:	687b      	ldr	r3, [r7, #4]
 800ecbe:	33d8      	adds	r3, #216	; 0xd8
 800ecc0:	4aa7      	ldr	r2, [pc, #668]	; (800ef60 <createProblem+0xe0b8>)
 800ecc2:	461c      	mov	r4, r3
 800ecc4:	4613      	mov	r3, r2
 800ecc6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ecc8:	6020      	str	r0, [r4, #0]
 800ecca:	6061      	str	r1, [r4, #4]
 800eccc:	60a2      	str	r2, [r4, #8]
 800ecce:	881b      	ldrh	r3, [r3, #0]
 800ecd0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800ecd2:	687b      	ldr	r3, [r7, #4]
 800ecd4:	33cc      	adds	r3, #204	; 0xcc
 800ecd6:	4aa3      	ldr	r2, [pc, #652]	; (800ef64 <createProblem+0xe0bc>)
 800ecd8:	6810      	ldr	r0, [r2, #0]
 800ecda:	6018      	str	r0, [r3, #0]
			break;
 800ecdc:	f00b be2a 	b.w	801a934 <createProblem+0x19a8c>
		case 481 :
			strcpy(p->name,"TESSME 3");
 800ece0:	687b      	ldr	r3, [r7, #4]
 800ece2:	337c      	adds	r3, #124	; 0x7c
 800ece4:	49a0      	ldr	r1, [pc, #640]	; (800ef68 <createProblem+0xe0c0>)
 800ece6:	461a      	mov	r2, r3
 800ece8:	460b      	mov	r3, r1
 800ecea:	cb03      	ldmia	r3!, {r0, r1}
 800ecec:	6010      	str	r0, [r2, #0]
 800ecee:	6051      	str	r1, [r2, #4]
 800ecf0:	781b      	ldrb	r3, [r3, #0]
 800ecf2:	7213      	strb	r3, [r2, #8]
			p->moveSize = 6;
 800ecf4:	687b      	ldr	r3, [r7, #4]
 800ecf6:	2206      	movs	r2, #6
 800ecf8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,I,E,E,I");
 800ecfa:	687b      	ldr	r3, [r7, #4]
 800ecfc:	3340      	adds	r3, #64	; 0x40
 800ecfe:	4a9b      	ldr	r2, [pc, #620]	; (800ef6c <createProblem+0xe0c4>)
 800ed00:	461c      	mov	r4, r3
 800ed02:	4613      	mov	r3, r2
 800ed04:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ed06:	6020      	str	r0, [r4, #0]
 800ed08:	6061      	str	r1, [r4, #4]
 800ed0a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,14,12,9,18");
 800ed0c:	687b      	ldr	r3, [r7, #4]
 800ed0e:	3304      	adds	r3, #4
 800ed10:	4a97      	ldr	r2, [pc, #604]	; (800ef70 <createProblem+0xe0c8>)
 800ed12:	461c      	mov	r4, r3
 800ed14:	4613      	mov	r3, r2
 800ed16:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ed18:	6020      	str	r0, [r4, #0]
 800ed1a:	6061      	str	r1, [r4, #4]
 800ed1c:	60a2      	str	r2, [r4, #8]
 800ed1e:	881a      	ldrh	r2, [r3, #0]
 800ed20:	789b      	ldrb	r3, [r3, #2]
 800ed22:	81a2      	strh	r2, [r4, #12]
 800ed24:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800ed26:	687b      	ldr	r3, [r7, #4]
 800ed28:	33d8      	adds	r3, #216	; 0xd8
 800ed2a:	4a92      	ldr	r2, [pc, #584]	; (800ef74 <createProblem+0xe0cc>)
 800ed2c:	461c      	mov	r4, r3
 800ed2e:	4613      	mov	r3, r2
 800ed30:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ed32:	6020      	str	r0, [r4, #0]
 800ed34:	6061      	str	r1, [r4, #4]
 800ed36:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 800ed38:	687b      	ldr	r3, [r7, #4]
 800ed3a:	33cc      	adds	r3, #204	; 0xcc
 800ed3c:	4a8e      	ldr	r2, [pc, #568]	; (800ef78 <createProblem+0xe0d0>)
 800ed3e:	6810      	ldr	r0, [r2, #0]
 800ed40:	6018      	str	r0, [r3, #0]
			break;
 800ed42:	f00b bdf7 	b.w	801a934 <createProblem+0x19a8c>
		case 482 :
			strcpy(p->name,"TESSME 4");
 800ed46:	687b      	ldr	r3, [r7, #4]
 800ed48:	337c      	adds	r3, #124	; 0x7c
 800ed4a:	498c      	ldr	r1, [pc, #560]	; (800ef7c <createProblem+0xe0d4>)
 800ed4c:	461a      	mov	r2, r3
 800ed4e:	460b      	mov	r3, r1
 800ed50:	cb03      	ldmia	r3!, {r0, r1}
 800ed52:	6010      	str	r0, [r2, #0]
 800ed54:	6051      	str	r1, [r2, #4]
 800ed56:	781b      	ldrb	r3, [r3, #0]
 800ed58:	7213      	strb	r3, [r2, #8]
			p->moveSize = 6;
 800ed5a:	687b      	ldr	r3, [r7, #4]
 800ed5c:	2206      	movs	r2, #6
 800ed5e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,I,D,I");
 800ed60:	687b      	ldr	r3, [r7, #4]
 800ed62:	3340      	adds	r3, #64	; 0x40
 800ed64:	4a86      	ldr	r2, [pc, #536]	; (800ef80 <createProblem+0xe0d8>)
 800ed66:	461c      	mov	r4, r3
 800ed68:	4613      	mov	r3, r2
 800ed6a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ed6c:	6020      	str	r0, [r4, #0]
 800ed6e:	6061      	str	r1, [r4, #4]
 800ed70:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,12,14,7,18");
 800ed72:	687b      	ldr	r3, [r7, #4]
 800ed74:	3304      	adds	r3, #4
 800ed76:	4a83      	ldr	r2, [pc, #524]	; (800ef84 <createProblem+0xe0dc>)
 800ed78:	461c      	mov	r4, r3
 800ed7a:	4613      	mov	r3, r2
 800ed7c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ed7e:	6020      	str	r0, [r4, #0]
 800ed80:	6061      	str	r1, [r4, #4]
 800ed82:	60a2      	str	r2, [r4, #8]
 800ed84:	881a      	ldrh	r2, [r3, #0]
 800ed86:	789b      	ldrb	r3, [r3, #2]
 800ed88:	81a2      	strh	r2, [r4, #12]
 800ed8a:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800ed8c:	687b      	ldr	r3, [r7, #4]
 800ed8e:	33d8      	adds	r3, #216	; 0xd8
 800ed90:	4a78      	ldr	r2, [pc, #480]	; (800ef74 <createProblem+0xe0cc>)
 800ed92:	461c      	mov	r4, r3
 800ed94:	4613      	mov	r3, r2
 800ed96:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ed98:	6020      	str	r0, [r4, #0]
 800ed9a:	6061      	str	r1, [r4, #4]
 800ed9c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 800ed9e:	687b      	ldr	r3, [r7, #4]
 800eda0:	33cc      	adds	r3, #204	; 0xcc
 800eda2:	4a79      	ldr	r2, [pc, #484]	; (800ef88 <createProblem+0xe0e0>)
 800eda4:	6810      	ldr	r0, [r2, #0]
 800eda6:	6018      	str	r0, [r3, #0]
			break;
 800eda8:	f00b bdc4 	b.w	801a934 <createProblem+0x19a8c>
		case 483 :
			strcpy(p->name,"KHAZAD DUM");
 800edac:	687b      	ldr	r3, [r7, #4]
 800edae:	337c      	adds	r3, #124	; 0x7c
 800edb0:	4976      	ldr	r1, [pc, #472]	; (800ef8c <createProblem+0xe0e4>)
 800edb2:	461a      	mov	r2, r3
 800edb4:	460b      	mov	r3, r1
 800edb6:	cb03      	ldmia	r3!, {r0, r1}
 800edb8:	6010      	str	r0, [r2, #0]
 800edba:	6051      	str	r1, [r2, #4]
 800edbc:	8819      	ldrh	r1, [r3, #0]
 800edbe:	789b      	ldrb	r3, [r3, #2]
 800edc0:	8111      	strh	r1, [r2, #8]
 800edc2:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 800edc4:	687b      	ldr	r3, [r7, #4]
 800edc6:	2206      	movs	r2, #6
 800edc8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,F,C,D,A");
 800edca:	687b      	ldr	r3, [r7, #4]
 800edcc:	3340      	adds	r3, #64	; 0x40
 800edce:	4a70      	ldr	r2, [pc, #448]	; (800ef90 <createProblem+0xe0e8>)
 800edd0:	461c      	mov	r4, r3
 800edd2:	4613      	mov	r3, r2
 800edd4:	cb07      	ldmia	r3!, {r0, r1, r2}
 800edd6:	6020      	str	r0, [r4, #0]
 800edd8:	6061      	str	r1, [r4, #4]
 800edda:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,11,13,15,18");
 800eddc:	687b      	ldr	r3, [r7, #4]
 800edde:	3304      	adds	r3, #4
 800ede0:	4a6c      	ldr	r2, [pc, #432]	; (800ef94 <createProblem+0xe0ec>)
 800ede2:	461c      	mov	r4, r3
 800ede4:	4615      	mov	r5, r2
 800ede6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ede8:	6020      	str	r0, [r4, #0]
 800edea:	6061      	str	r1, [r4, #4]
 800edec:	60a2      	str	r2, [r4, #8]
 800edee:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800edf0:	687b      	ldr	r3, [r7, #4]
 800edf2:	33d8      	adds	r3, #216	; 0xd8
 800edf4:	4a5f      	ldr	r2, [pc, #380]	; (800ef74 <createProblem+0xe0cc>)
 800edf6:	461c      	mov	r4, r3
 800edf8:	4613      	mov	r3, r2
 800edfa:	cb07      	ldmia	r3!, {r0, r1, r2}
 800edfc:	6020      	str	r0, [r4, #0]
 800edfe:	6061      	str	r1, [r4, #4]
 800ee00:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 800ee02:	687b      	ldr	r3, [r7, #4]
 800ee04:	33cc      	adds	r3, #204	; 0xcc
 800ee06:	4a57      	ldr	r2, [pc, #348]	; (800ef64 <createProblem+0xe0bc>)
 800ee08:	6810      	ldr	r0, [r2, #0]
 800ee0a:	6018      	str	r0, [r3, #0]
			break;
 800ee0c:	f00b bd92 	b.w	801a934 <createProblem+0x19a8c>
		case 484 :
			strcpy(p->name,"BLACK PHENOMENON");
 800ee10:	687b      	ldr	r3, [r7, #4]
 800ee12:	337c      	adds	r3, #124	; 0x7c
 800ee14:	4a60      	ldr	r2, [pc, #384]	; (800ef98 <createProblem+0xe0f0>)
 800ee16:	461d      	mov	r5, r3
 800ee18:	4614      	mov	r4, r2
 800ee1a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ee1c:	6028      	str	r0, [r5, #0]
 800ee1e:	6069      	str	r1, [r5, #4]
 800ee20:	60aa      	str	r2, [r5, #8]
 800ee22:	60eb      	str	r3, [r5, #12]
 800ee24:	7823      	ldrb	r3, [r4, #0]
 800ee26:	742b      	strb	r3, [r5, #16]
			p->moveSize = 6;
 800ee28:	687b      	ldr	r3, [r7, #4]
 800ee2a:	2206      	movs	r2, #6
 800ee2c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,B,G,B,D");
 800ee2e:	687b      	ldr	r3, [r7, #4]
 800ee30:	3340      	adds	r3, #64	; 0x40
 800ee32:	4a5a      	ldr	r2, [pc, #360]	; (800ef9c <createProblem+0xe0f4>)
 800ee34:	461c      	mov	r4, r3
 800ee36:	4613      	mov	r3, r2
 800ee38:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ee3a:	6020      	str	r0, [r4, #0]
 800ee3c:	6061      	str	r1, [r4, #4]
 800ee3e:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,6,10,10,18");
 800ee40:	687b      	ldr	r3, [r7, #4]
 800ee42:	3304      	adds	r3, #4
 800ee44:	4a56      	ldr	r2, [pc, #344]	; (800efa0 <createProblem+0xe0f8>)
 800ee46:	461c      	mov	r4, r3
 800ee48:	4613      	mov	r3, r2
 800ee4a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ee4c:	6020      	str	r0, [r4, #0]
 800ee4e:	6061      	str	r1, [r4, #4]
 800ee50:	60a2      	str	r2, [r4, #8]
 800ee52:	881a      	ldrh	r2, [r3, #0]
 800ee54:	789b      	ldrb	r3, [r3, #2]
 800ee56:	81a2      	strh	r2, [r4, #12]
 800ee58:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800ee5a:	687b      	ldr	r3, [r7, #4]
 800ee5c:	33d8      	adds	r3, #216	; 0xd8
 800ee5e:	4a45      	ldr	r2, [pc, #276]	; (800ef74 <createProblem+0xe0cc>)
 800ee60:	461c      	mov	r4, r3
 800ee62:	4613      	mov	r3, r2
 800ee64:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ee66:	6020      	str	r0, [r4, #0]
 800ee68:	6061      	str	r1, [r4, #4]
 800ee6a:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "8A");
 800ee6c:	687b      	ldr	r3, [r7, #4]
 800ee6e:	33cc      	adds	r3, #204	; 0xcc
 800ee70:	4a4c      	ldr	r2, [pc, #304]	; (800efa4 <createProblem+0xe0fc>)
 800ee72:	8811      	ldrh	r1, [r2, #0]
 800ee74:	7892      	ldrb	r2, [r2, #2]
 800ee76:	8019      	strh	r1, [r3, #0]
 800ee78:	709a      	strb	r2, [r3, #2]
			break;
 800ee7a:	f00b bd5b 	b.w	801a934 <createProblem+0x19a8c>
		case 485 :
			strcpy(p->name,"OKLAHOMA");
 800ee7e:	687b      	ldr	r3, [r7, #4]
 800ee80:	337c      	adds	r3, #124	; 0x7c
 800ee82:	4949      	ldr	r1, [pc, #292]	; (800efa8 <createProblem+0xe100>)
 800ee84:	461a      	mov	r2, r3
 800ee86:	460b      	mov	r3, r1
 800ee88:	cb03      	ldmia	r3!, {r0, r1}
 800ee8a:	6010      	str	r0, [r2, #0]
 800ee8c:	6051      	str	r1, [r2, #4]
 800ee8e:	781b      	ldrb	r3, [r3, #0]
 800ee90:	7213      	strb	r3, [r2, #8]
			p->moveSize = 5;
 800ee92:	687b      	ldr	r3, [r7, #4]
 800ee94:	2205      	movs	r2, #5
 800ee96:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,G,D,A");
 800ee98:	687b      	ldr	r3, [r7, #4]
 800ee9a:	3340      	adds	r3, #64	; 0x40
 800ee9c:	4943      	ldr	r1, [pc, #268]	; (800efac <createProblem+0xe104>)
 800ee9e:	461a      	mov	r2, r3
 800eea0:	460b      	mov	r3, r1
 800eea2:	cb03      	ldmia	r3!, {r0, r1}
 800eea4:	6010      	str	r0, [r2, #0]
 800eea6:	6051      	str	r1, [r2, #4]
 800eea8:	881b      	ldrh	r3, [r3, #0]
 800eeaa:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,14,15,18");
 800eeac:	687b      	ldr	r3, [r7, #4]
 800eeae:	3304      	adds	r3, #4
 800eeb0:	4a3f      	ldr	r2, [pc, #252]	; (800efb0 <createProblem+0xe108>)
 800eeb2:	461c      	mov	r4, r3
 800eeb4:	4613      	mov	r3, r2
 800eeb6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800eeb8:	6020      	str	r0, [r4, #0]
 800eeba:	6061      	str	r1, [r4, #4]
 800eebc:	60a2      	str	r2, [r4, #8]
 800eebe:	881b      	ldrh	r3, [r3, #0]
 800eec0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800eec2:	687b      	ldr	r3, [r7, #4]
 800eec4:	33d8      	adds	r3, #216	; 0xd8
 800eec6:	493b      	ldr	r1, [pc, #236]	; (800efb4 <createProblem+0xe10c>)
 800eec8:	461a      	mov	r2, r3
 800eeca:	460b      	mov	r3, r1
 800eecc:	cb03      	ldmia	r3!, {r0, r1}
 800eece:	6010      	str	r0, [r2, #0]
 800eed0:	6051      	str	r1, [r2, #4]
 800eed2:	881b      	ldrh	r3, [r3, #0]
 800eed4:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 800eed6:	687b      	ldr	r3, [r7, #4]
 800eed8:	33cc      	adds	r3, #204	; 0xcc
 800eeda:	4a37      	ldr	r2, [pc, #220]	; (800efb8 <createProblem+0xe110>)
 800eedc:	8811      	ldrh	r1, [r2, #0]
 800eede:	7892      	ldrb	r2, [r2, #2]
 800eee0:	8019      	strh	r1, [r3, #0]
 800eee2:	709a      	strb	r2, [r3, #2]
			break;
 800eee4:	f00b bd26 	b.w	801a934 <createProblem+0x19a8c>
		case 486 :
			strcpy(p->name,"CAPTAIN AUBREY VAR.");
 800eee8:	687b      	ldr	r3, [r7, #4]
 800eeea:	337c      	adds	r3, #124	; 0x7c
 800eeec:	4a33      	ldr	r2, [pc, #204]	; (800efbc <createProblem+0xe114>)
 800eeee:	461d      	mov	r5, r3
 800eef0:	4614      	mov	r4, r2
 800eef2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800eef4:	6028      	str	r0, [r5, #0]
 800eef6:	6069      	str	r1, [r5, #4]
 800eef8:	60aa      	str	r2, [r5, #8]
 800eefa:	60eb      	str	r3, [r5, #12]
 800eefc:	6820      	ldr	r0, [r4, #0]
 800eefe:	6128      	str	r0, [r5, #16]
			p->moveSize = 5;
 800ef00:	687b      	ldr	r3, [r7, #4]
 800ef02:	2205      	movs	r2, #5
 800ef04:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,I,I");
 800ef06:	687b      	ldr	r3, [r7, #4]
 800ef08:	3340      	adds	r3, #64	; 0x40
 800ef0a:	492d      	ldr	r1, [pc, #180]	; (800efc0 <createProblem+0xe118>)
 800ef0c:	461a      	mov	r2, r3
 800ef0e:	460b      	mov	r3, r1
 800ef10:	cb03      	ldmia	r3!, {r0, r1}
 800ef12:	6010      	str	r0, [r2, #0]
 800ef14:	6051      	str	r1, [r2, #4]
 800ef16:	881b      	ldrh	r3, [r3, #0]
 800ef18:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,8,12,14,18");
 800ef1a:	687b      	ldr	r3, [r7, #4]
 800ef1c:	3304      	adds	r3, #4
 800ef1e:	4a29      	ldr	r2, [pc, #164]	; (800efc4 <createProblem+0xe11c>)
 800ef20:	461c      	mov	r4, r3
 800ef22:	4613      	mov	r3, r2
 800ef24:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ef26:	6020      	str	r0, [r4, #0]
 800ef28:	6061      	str	r1, [r4, #4]
 800ef2a:	60a2      	str	r2, [r4, #8]
 800ef2c:	781b      	ldrb	r3, [r3, #0]
 800ef2e:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800ef30:	687b      	ldr	r3, [r7, #4]
 800ef32:	33d8      	adds	r3, #216	; 0xd8
 800ef34:	491f      	ldr	r1, [pc, #124]	; (800efb4 <createProblem+0xe10c>)
 800ef36:	461a      	mov	r2, r3
 800ef38:	460b      	mov	r3, r1
 800ef3a:	cb03      	ldmia	r3!, {r0, r1}
 800ef3c:	6010      	str	r0, [r2, #0]
 800ef3e:	6051      	str	r1, [r2, #4]
 800ef40:	881b      	ldrh	r3, [r3, #0]
 800ef42:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 800ef44:	687b      	ldr	r3, [r7, #4]
 800ef46:	33cc      	adds	r3, #204	; 0xcc
 800ef48:	4a0b      	ldr	r2, [pc, #44]	; (800ef78 <createProblem+0xe0d0>)
 800ef4a:	6810      	ldr	r0, [r2, #0]
 800ef4c:	6018      	str	r0, [r3, #0]
			break;
 800ef4e:	f00b bcf1 	b.w	801a934 <createProblem+0x19a8c>
 800ef52:	bf00      	nop
 800ef54:	080256e8 	.word	0x080256e8
 800ef58:	080256f4 	.word	0x080256f4
 800ef5c:	0802395c 	.word	0x0802395c
 800ef60:	08020a14 	.word	0x08020a14
 800ef64:	08020830 	.word	0x08020830
 800ef68:	08025704 	.word	0x08025704
 800ef6c:	08025710 	.word	0x08025710
 800ef70:	0802571c 	.word	0x0802571c
 800ef74:	0802091c 	.word	0x0802091c
 800ef78:	080209a4 	.word	0x080209a4
 800ef7c:	0802572c 	.word	0x0802572c
 800ef80:	08025738 	.word	0x08025738
 800ef84:	08025744 	.word	0x08025744
 800ef88:	08020dc8 	.word	0x08020dc8
 800ef8c:	08025754 	.word	0x08025754
 800ef90:	08025760 	.word	0x08025760
 800ef94:	0802576c 	.word	0x0802576c
 800ef98:	0802577c 	.word	0x0802577c
 800ef9c:	08025790 	.word	0x08025790
 800efa0:	0802579c 	.word	0x0802579c
 800efa4:	08020c94 	.word	0x08020c94
 800efa8:	080257ac 	.word	0x080257ac
 800efac:	080257b8 	.word	0x080257b8
 800efb0:	080229fc 	.word	0x080229fc
 800efb4:	080208a0 	.word	0x080208a0
 800efb8:	08020874 	.word	0x08020874
 800efbc:	080257c4 	.word	0x080257c4
 800efc0:	080257d8 	.word	0x080257d8
 800efc4:	08022f5c 	.word	0x08022f5c
		case 487 :
			strcpy(p->name,"MATCHCATCH");
 800efc8:	687b      	ldr	r3, [r7, #4]
 800efca:	337c      	adds	r3, #124	; 0x7c
 800efcc:	49b8      	ldr	r1, [pc, #736]	; (800f2b0 <createProblem+0xe408>)
 800efce:	461a      	mov	r2, r3
 800efd0:	460b      	mov	r3, r1
 800efd2:	cb03      	ldmia	r3!, {r0, r1}
 800efd4:	6010      	str	r0, [r2, #0]
 800efd6:	6051      	str	r1, [r2, #4]
 800efd8:	8819      	ldrh	r1, [r3, #0]
 800efda:	789b      	ldrb	r3, [r3, #2]
 800efdc:	8111      	strh	r1, [r2, #8]
 800efde:	7293      	strb	r3, [r2, #10]
			p->moveSize = 5;
 800efe0:	687b      	ldr	r3, [r7, #4]
 800efe2:	2205      	movs	r2, #5
 800efe4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,I,J,G,I");
 800efe6:	687b      	ldr	r3, [r7, #4]
 800efe8:	3340      	adds	r3, #64	; 0x40
 800efea:	49b2      	ldr	r1, [pc, #712]	; (800f2b4 <createProblem+0xe40c>)
 800efec:	461a      	mov	r2, r3
 800efee:	460b      	mov	r3, r1
 800eff0:	cb03      	ldmia	r3!, {r0, r1}
 800eff2:	6010      	str	r0, [r2, #0]
 800eff4:	6051      	str	r1, [r2, #4]
 800eff6:	881b      	ldrh	r3, [r3, #0]
 800eff8:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,13,14,18");
 800effa:	687b      	ldr	r3, [r7, #4]
 800effc:	3304      	adds	r3, #4
 800effe:	4aae      	ldr	r2, [pc, #696]	; (800f2b8 <createProblem+0xe410>)
 800f000:	461c      	mov	r4, r3
 800f002:	4613      	mov	r3, r2
 800f004:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f006:	6020      	str	r0, [r4, #0]
 800f008:	6061      	str	r1, [r4, #4]
 800f00a:	60a2      	str	r2, [r4, #8]
 800f00c:	881b      	ldrh	r3, [r3, #0]
 800f00e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800f010:	687b      	ldr	r3, [r7, #4]
 800f012:	33d8      	adds	r3, #216	; 0xd8
 800f014:	49a9      	ldr	r1, [pc, #676]	; (800f2bc <createProblem+0xe414>)
 800f016:	461a      	mov	r2, r3
 800f018:	460b      	mov	r3, r1
 800f01a:	cb03      	ldmia	r3!, {r0, r1}
 800f01c:	6010      	str	r0, [r2, #0]
 800f01e:	6051      	str	r1, [r2, #4]
 800f020:	881b      	ldrh	r3, [r3, #0]
 800f022:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C+");
 800f024:	687b      	ldr	r3, [r7, #4]
 800f026:	33cc      	adds	r3, #204	; 0xcc
 800f028:	4aa5      	ldr	r2, [pc, #660]	; (800f2c0 <createProblem+0xe418>)
 800f02a:	6810      	ldr	r0, [r2, #0]
 800f02c:	6018      	str	r0, [r3, #0]
			break;
 800f02e:	f00b bc81 	b.w	801a934 <createProblem+0x19a8c>
		case 488 :
			strcpy(p->name,"KKSBSKAN");
 800f032:	687b      	ldr	r3, [r7, #4]
 800f034:	337c      	adds	r3, #124	; 0x7c
 800f036:	49a3      	ldr	r1, [pc, #652]	; (800f2c4 <createProblem+0xe41c>)
 800f038:	461a      	mov	r2, r3
 800f03a:	460b      	mov	r3, r1
 800f03c:	cb03      	ldmia	r3!, {r0, r1}
 800f03e:	6010      	str	r0, [r2, #0]
 800f040:	6051      	str	r1, [r2, #4]
 800f042:	781b      	ldrb	r3, [r3, #0]
 800f044:	7213      	strb	r3, [r2, #8]
			p->moveSize = 5;
 800f046:	687b      	ldr	r3, [r7, #4]
 800f048:	2205      	movs	r2, #5
 800f04a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,D,C,I");
 800f04c:	687b      	ldr	r3, [r7, #4]
 800f04e:	3340      	adds	r3, #64	; 0x40
 800f050:	499d      	ldr	r1, [pc, #628]	; (800f2c8 <createProblem+0xe420>)
 800f052:	461a      	mov	r2, r3
 800f054:	460b      	mov	r3, r1
 800f056:	cb03      	ldmia	r3!, {r0, r1}
 800f058:	6010      	str	r0, [r2, #0]
 800f05a:	6051      	str	r1, [r2, #4]
 800f05c:	881b      	ldrh	r3, [r3, #0]
 800f05e:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,11,16,18");
 800f060:	687b      	ldr	r3, [r7, #4]
 800f062:	3304      	adds	r3, #4
 800f064:	4a99      	ldr	r2, [pc, #612]	; (800f2cc <createProblem+0xe424>)
 800f066:	461c      	mov	r4, r3
 800f068:	4613      	mov	r3, r2
 800f06a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f06c:	6020      	str	r0, [r4, #0]
 800f06e:	6061      	str	r1, [r4, #4]
 800f070:	60a2      	str	r2, [r4, #8]
 800f072:	781b      	ldrb	r3, [r3, #0]
 800f074:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800f076:	687b      	ldr	r3, [r7, #4]
 800f078:	33d8      	adds	r3, #216	; 0xd8
 800f07a:	4990      	ldr	r1, [pc, #576]	; (800f2bc <createProblem+0xe414>)
 800f07c:	461a      	mov	r2, r3
 800f07e:	460b      	mov	r3, r1
 800f080:	cb03      	ldmia	r3!, {r0, r1}
 800f082:	6010      	str	r0, [r2, #0]
 800f084:	6051      	str	r1, [r2, #4]
 800f086:	881b      	ldrh	r3, [r3, #0]
 800f088:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7C");
 800f08a:	687b      	ldr	r3, [r7, #4]
 800f08c:	33cc      	adds	r3, #204	; 0xcc
 800f08e:	4a90      	ldr	r2, [pc, #576]	; (800f2d0 <createProblem+0xe428>)
 800f090:	8811      	ldrh	r1, [r2, #0]
 800f092:	7892      	ldrb	r2, [r2, #2]
 800f094:	8019      	strh	r1, [r3, #0]
 800f096:	709a      	strb	r2, [r3, #2]
			break;
 800f098:	f00b bc4c 	b.w	801a934 <createProblem+0x19a8c>
		case 489 :
			strcpy(p->name,"ALLES IST MÖGLICH");
 800f09c:	687b      	ldr	r3, [r7, #4]
 800f09e:	337c      	adds	r3, #124	; 0x7c
 800f0a0:	4a8c      	ldr	r2, [pc, #560]	; (800f2d4 <createProblem+0xe42c>)
 800f0a2:	461d      	mov	r5, r3
 800f0a4:	4614      	mov	r4, r2
 800f0a6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f0a8:	6028      	str	r0, [r5, #0]
 800f0aa:	6069      	str	r1, [r5, #4]
 800f0ac:	60aa      	str	r2, [r5, #8]
 800f0ae:	60eb      	str	r3, [r5, #12]
 800f0b0:	8823      	ldrh	r3, [r4, #0]
 800f0b2:	78a2      	ldrb	r2, [r4, #2]
 800f0b4:	822b      	strh	r3, [r5, #16]
 800f0b6:	4613      	mov	r3, r2
 800f0b8:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 4;
 800f0ba:	687b      	ldr	r3, [r7, #4]
 800f0bc:	2204      	movs	r2, #4
 800f0be:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,F,E,D");
 800f0c0:	687b      	ldr	r3, [r7, #4]
 800f0c2:	3340      	adds	r3, #64	; 0x40
 800f0c4:	4984      	ldr	r1, [pc, #528]	; (800f2d8 <createProblem+0xe430>)
 800f0c6:	461a      	mov	r2, r3
 800f0c8:	460b      	mov	r3, r1
 800f0ca:	cb03      	ldmia	r3!, {r0, r1}
 800f0cc:	6010      	str	r0, [r2, #0]
 800f0ce:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"6,11,14,18");
 800f0d0:	687b      	ldr	r3, [r7, #4]
 800f0d2:	3304      	adds	r3, #4
 800f0d4:	4981      	ldr	r1, [pc, #516]	; (800f2dc <createProblem+0xe434>)
 800f0d6:	461a      	mov	r2, r3
 800f0d8:	460b      	mov	r3, r1
 800f0da:	cb03      	ldmia	r3!, {r0, r1}
 800f0dc:	6010      	str	r0, [r2, #0]
 800f0de:	6051      	str	r1, [r2, #4]
 800f0e0:	8819      	ldrh	r1, [r3, #0]
 800f0e2:	789b      	ldrb	r3, [r3, #2]
 800f0e4:	8111      	strh	r1, [r2, #8]
 800f0e6:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 800f0e8:	687b      	ldr	r3, [r7, #4]
 800f0ea:	33d8      	adds	r3, #216	; 0xd8
 800f0ec:	497c      	ldr	r1, [pc, #496]	; (800f2e0 <createProblem+0xe438>)
 800f0ee:	461a      	mov	r2, r3
 800f0f0:	460b      	mov	r3, r1
 800f0f2:	cb03      	ldmia	r3!, {r0, r1}
 800f0f4:	6010      	str	r0, [r2, #0]
 800f0f6:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7B+");
 800f0f8:	687b      	ldr	r3, [r7, #4]
 800f0fa:	33cc      	adds	r3, #204	; 0xcc
 800f0fc:	4a79      	ldr	r2, [pc, #484]	; (800f2e4 <createProblem+0xe43c>)
 800f0fe:	6810      	ldr	r0, [r2, #0]
 800f100:	6018      	str	r0, [r3, #0]
			break;
 800f102:	f00b bc17 	b.w	801a934 <createProblem+0x19a8c>
		case 49 :
			strcpy(p->name,"USE THE BIG ONES");
 800f106:	687b      	ldr	r3, [r7, #4]
 800f108:	337c      	adds	r3, #124	; 0x7c
 800f10a:	4a77      	ldr	r2, [pc, #476]	; (800f2e8 <createProblem+0xe440>)
 800f10c:	461d      	mov	r5, r3
 800f10e:	4614      	mov	r4, r2
 800f110:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f112:	6028      	str	r0, [r5, #0]
 800f114:	6069      	str	r1, [r5, #4]
 800f116:	60aa      	str	r2, [r5, #8]
 800f118:	60eb      	str	r3, [r5, #12]
 800f11a:	7823      	ldrb	r3, [r4, #0]
 800f11c:	742b      	strb	r3, [r5, #16]
			p->moveSize = 7;
 800f11e:	687b      	ldr	r3, [r7, #4]
 800f120:	2207      	movs	r2, #7
 800f122:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,G,F,C,D,A");
 800f124:	687b      	ldr	r3, [r7, #4]
 800f126:	3340      	adds	r3, #64	; 0x40
 800f128:	4a70      	ldr	r2, [pc, #448]	; (800f2ec <createProblem+0xe444>)
 800f12a:	461c      	mov	r4, r3
 800f12c:	4613      	mov	r3, r2
 800f12e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f130:	6020      	str	r0, [r4, #0]
 800f132:	6061      	str	r1, [r4, #4]
 800f134:	60a2      	str	r2, [r4, #8]
 800f136:	881b      	ldrh	r3, [r3, #0]
 800f138:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,9,11,13,15,18");
 800f13a:	687b      	ldr	r3, [r7, #4]
 800f13c:	3304      	adds	r3, #4
 800f13e:	4a6c      	ldr	r2, [pc, #432]	; (800f2f0 <createProblem+0xe448>)
 800f140:	461d      	mov	r5, r3
 800f142:	4614      	mov	r4, r2
 800f144:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f146:	6028      	str	r0, [r5, #0]
 800f148:	6069      	str	r1, [r5, #4]
 800f14a:	60aa      	str	r2, [r5, #8]
 800f14c:	60eb      	str	r3, [r5, #12]
 800f14e:	8823      	ldrh	r3, [r4, #0]
 800f150:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800f152:	687b      	ldr	r3, [r7, #4]
 800f154:	33d8      	adds	r3, #216	; 0xd8
 800f156:	4a67      	ldr	r2, [pc, #412]	; (800f2f4 <createProblem+0xe44c>)
 800f158:	461c      	mov	r4, r3
 800f15a:	4613      	mov	r3, r2
 800f15c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f15e:	6020      	str	r0, [r4, #0]
 800f160:	6061      	str	r1, [r4, #4]
 800f162:	60a2      	str	r2, [r4, #8]
 800f164:	881b      	ldrh	r3, [r3, #0]
 800f166:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800f168:	687b      	ldr	r3, [r7, #4]
 800f16a:	33cc      	adds	r3, #204	; 0xcc
 800f16c:	4a62      	ldr	r2, [pc, #392]	; (800f2f8 <createProblem+0xe450>)
 800f16e:	6810      	ldr	r0, [r2, #0]
 800f170:	6018      	str	r0, [r3, #0]
			break;
 800f172:	f00b bbdf 	b.w	801a934 <createProblem+0x19a8c>
		case 490 :
			strcpy(p->name,"CRONENBERG");
 800f176:	687b      	ldr	r3, [r7, #4]
 800f178:	337c      	adds	r3, #124	; 0x7c
 800f17a:	4960      	ldr	r1, [pc, #384]	; (800f2fc <createProblem+0xe454>)
 800f17c:	461a      	mov	r2, r3
 800f17e:	460b      	mov	r3, r1
 800f180:	cb03      	ldmia	r3!, {r0, r1}
 800f182:	6010      	str	r0, [r2, #0]
 800f184:	6051      	str	r1, [r2, #4]
 800f186:	8819      	ldrh	r1, [r3, #0]
 800f188:	789b      	ldrb	r3, [r3, #2]
 800f18a:	8111      	strh	r1, [r2, #8]
 800f18c:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 800f18e:	687b      	ldr	r3, [r7, #4]
 800f190:	2207      	movs	r2, #7
 800f192:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,A,E,E,I");
 800f194:	687b      	ldr	r3, [r7, #4]
 800f196:	3340      	adds	r3, #64	; 0x40
 800f198:	4a59      	ldr	r2, [pc, #356]	; (800f300 <createProblem+0xe458>)
 800f19a:	461c      	mov	r4, r3
 800f19c:	4613      	mov	r3, r2
 800f19e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f1a0:	6020      	str	r0, [r4, #0]
 800f1a2:	6061      	str	r1, [r4, #4]
 800f1a4:	60a2      	str	r2, [r4, #8]
 800f1a6:	881b      	ldrh	r3, [r3, #0]
 800f1a8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,9,9,12,16,18");
 800f1aa:	687b      	ldr	r3, [r7, #4]
 800f1ac:	3304      	adds	r3, #4
 800f1ae:	4a55      	ldr	r2, [pc, #340]	; (800f304 <createProblem+0xe45c>)
 800f1b0:	461d      	mov	r5, r3
 800f1b2:	4614      	mov	r4, r2
 800f1b4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f1b6:	6028      	str	r0, [r5, #0]
 800f1b8:	6069      	str	r1, [r5, #4]
 800f1ba:	60aa      	str	r2, [r5, #8]
 800f1bc:	60eb      	str	r3, [r5, #12]
 800f1be:	7823      	ldrb	r3, [r4, #0]
 800f1c0:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800f1c2:	687b      	ldr	r3, [r7, #4]
 800f1c4:	33d8      	adds	r3, #216	; 0xd8
 800f1c6:	4a4b      	ldr	r2, [pc, #300]	; (800f2f4 <createProblem+0xe44c>)
 800f1c8:	461c      	mov	r4, r3
 800f1ca:	4613      	mov	r3, r2
 800f1cc:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f1ce:	6020      	str	r0, [r4, #0]
 800f1d0:	6061      	str	r1, [r4, #4]
 800f1d2:	60a2      	str	r2, [r4, #8]
 800f1d4:	881b      	ldrh	r3, [r3, #0]
 800f1d6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 800f1d8:	687b      	ldr	r3, [r7, #4]
 800f1da:	33cc      	adds	r3, #204	; 0xcc
 800f1dc:	4a38      	ldr	r2, [pc, #224]	; (800f2c0 <createProblem+0xe418>)
 800f1de:	6810      	ldr	r0, [r2, #0]
 800f1e0:	6018      	str	r0, [r3, #0]
			break;
 800f1e2:	f00b bba7 	b.w	801a934 <createProblem+0x19a8c>
		case 491 :
			strcpy(p->name,"A SAFE PLACE");
 800f1e6:	687b      	ldr	r3, [r7, #4]
 800f1e8:	337c      	adds	r3, #124	; 0x7c
 800f1ea:	4a47      	ldr	r2, [pc, #284]	; (800f308 <createProblem+0xe460>)
 800f1ec:	461c      	mov	r4, r3
 800f1ee:	4613      	mov	r3, r2
 800f1f0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f1f2:	6020      	str	r0, [r4, #0]
 800f1f4:	6061      	str	r1, [r4, #4]
 800f1f6:	60a2      	str	r2, [r4, #8]
 800f1f8:	781b      	ldrb	r3, [r3, #0]
 800f1fa:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 800f1fc:	687b      	ldr	r3, [r7, #4]
 800f1fe:	2206      	movs	r2, #6
 800f200:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,G,D,G,E,D");
 800f202:	687b      	ldr	r3, [r7, #4]
 800f204:	3340      	adds	r3, #64	; 0x40
 800f206:	4a41      	ldr	r2, [pc, #260]	; (800f30c <createProblem+0xe464>)
 800f208:	461c      	mov	r4, r3
 800f20a:	4613      	mov	r3, r2
 800f20c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f20e:	6020      	str	r0, [r4, #0]
 800f210:	6061      	str	r1, [r4, #4]
 800f212:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,11,14,16,18");
 800f214:	687b      	ldr	r3, [r7, #4]
 800f216:	3304      	adds	r3, #4
 800f218:	4a3d      	ldr	r2, [pc, #244]	; (800f310 <createProblem+0xe468>)
 800f21a:	461c      	mov	r4, r3
 800f21c:	4615      	mov	r5, r2
 800f21e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f220:	6020      	str	r0, [r4, #0]
 800f222:	6061      	str	r1, [r4, #4]
 800f224:	60a2      	str	r2, [r4, #8]
 800f226:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800f228:	687b      	ldr	r3, [r7, #4]
 800f22a:	33d8      	adds	r3, #216	; 0xd8
 800f22c:	4a39      	ldr	r2, [pc, #228]	; (800f314 <createProblem+0xe46c>)
 800f22e:	461c      	mov	r4, r3
 800f230:	4613      	mov	r3, r2
 800f232:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f234:	6020      	str	r0, [r4, #0]
 800f236:	6061      	str	r1, [r4, #4]
 800f238:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 800f23a:	687b      	ldr	r3, [r7, #4]
 800f23c:	33cc      	adds	r3, #204	; 0xcc
 800f23e:	4a36      	ldr	r2, [pc, #216]	; (800f318 <createProblem+0xe470>)
 800f240:	8811      	ldrh	r1, [r2, #0]
 800f242:	7892      	ldrb	r2, [r2, #2]
 800f244:	8019      	strh	r1, [r3, #0]
 800f246:	709a      	strb	r2, [r3, #2]
			break;
 800f248:	f00b bb74 	b.w	801a934 <createProblem+0x19a8c>
		case 492 :
			strcpy(p->name,"GNOCCHE AL RAGÙ");
 800f24c:	687b      	ldr	r3, [r7, #4]
 800f24e:	337c      	adds	r3, #124	; 0x7c
 800f250:	4a32      	ldr	r2, [pc, #200]	; (800f31c <createProblem+0xe474>)
 800f252:	461d      	mov	r5, r3
 800f254:	4614      	mov	r4, r2
 800f256:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f258:	6028      	str	r0, [r5, #0]
 800f25a:	6069      	str	r1, [r5, #4]
 800f25c:	60aa      	str	r2, [r5, #8]
 800f25e:	60eb      	str	r3, [r5, #12]
 800f260:	7823      	ldrb	r3, [r4, #0]
 800f262:	742b      	strb	r3, [r5, #16]
			p->moveSize = 6;
 800f264:	687b      	ldr	r3, [r7, #4]
 800f266:	2206      	movs	r2, #6
 800f268:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,G,H,K,I");
 800f26a:	687b      	ldr	r3, [r7, #4]
 800f26c:	3340      	adds	r3, #64	; 0x40
 800f26e:	4a2c      	ldr	r2, [pc, #176]	; (800f320 <createProblem+0xe478>)
 800f270:	461c      	mov	r4, r3
 800f272:	4613      	mov	r3, r2
 800f274:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f276:	6020      	str	r0, [r4, #0]
 800f278:	6061      	str	r1, [r4, #4]
 800f27a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,7,10,12,14,18");
 800f27c:	687b      	ldr	r3, [r7, #4]
 800f27e:	3304      	adds	r3, #4
 800f280:	4a28      	ldr	r2, [pc, #160]	; (800f324 <createProblem+0xe47c>)
 800f282:	461c      	mov	r4, r3
 800f284:	4615      	mov	r5, r2
 800f286:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f288:	6020      	str	r0, [r4, #0]
 800f28a:	6061      	str	r1, [r4, #4]
 800f28c:	60a2      	str	r2, [r4, #8]
 800f28e:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800f290:	687b      	ldr	r3, [r7, #4]
 800f292:	33d8      	adds	r3, #216	; 0xd8
 800f294:	4a1f      	ldr	r2, [pc, #124]	; (800f314 <createProblem+0xe46c>)
 800f296:	461c      	mov	r4, r3
 800f298:	4613      	mov	r3, r2
 800f29a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f29c:	6020      	str	r0, [r4, #0]
 800f29e:	6061      	str	r1, [r4, #4]
 800f2a0:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 800f2a2:	687b      	ldr	r3, [r7, #4]
 800f2a4:	33cc      	adds	r3, #204	; 0xcc
 800f2a6:	4a20      	ldr	r2, [pc, #128]	; (800f328 <createProblem+0xe480>)
 800f2a8:	6810      	ldr	r0, [r2, #0]
 800f2aa:	6018      	str	r0, [r3, #0]
			break;
 800f2ac:	f00b bb42 	b.w	801a934 <createProblem+0x19a8c>
 800f2b0:	080257e4 	.word	0x080257e4
 800f2b4:	080257f0 	.word	0x080257f0
 800f2b8:	08021098 	.word	0x08021098
 800f2bc:	080208a0 	.word	0x080208a0
 800f2c0:	08020928 	.word	0x08020928
 800f2c4:	080257fc 	.word	0x080257fc
 800f2c8:	08025808 	.word	0x08025808
 800f2cc:	08025814 	.word	0x08025814
 800f2d0:	08020b0c 	.word	0x08020b0c
 800f2d4:	08025824 	.word	0x08025824
 800f2d8:	08025838 	.word	0x08025838
 800f2dc:	08024ad4 	.word	0x08024ad4
 800f2e0:	080215a8 	.word	0x080215a8
 800f2e4:	08020dc8 	.word	0x08020dc8
 800f2e8:	08025840 	.word	0x08025840
 800f2ec:	08025854 	.word	0x08025854
 800f2f0:	08025864 	.word	0x08025864
 800f2f4:	08020a14 	.word	0x08020a14
 800f2f8:	08020830 	.word	0x08020830
 800f2fc:	08025878 	.word	0x08025878
 800f300:	08025884 	.word	0x08025884
 800f304:	08025894 	.word	0x08025894
 800f308:	080258a8 	.word	0x080258a8
 800f30c:	080258b8 	.word	0x080258b8
 800f310:	08022b54 	.word	0x08022b54
 800f314:	0802091c 	.word	0x0802091c
 800f318:	080208f0 	.word	0x080208f0
 800f31c:	080258c4 	.word	0x080258c4
 800f320:	080258d8 	.word	0x080258d8
 800f324:	080258e4 	.word	0x080258e4
 800f328:	080209a4 	.word	0x080209a4
		case 493 :
			strcpy(p->name,"BRETT'S PROBLEM");
 800f32c:	687b      	ldr	r3, [r7, #4]
 800f32e:	337c      	adds	r3, #124	; 0x7c
 800f330:	4ab1      	ldr	r2, [pc, #708]	; (800f5f8 <createProblem+0xe750>)
 800f332:	461c      	mov	r4, r3
 800f334:	4615      	mov	r5, r2
 800f336:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f338:	6020      	str	r0, [r4, #0]
 800f33a:	6061      	str	r1, [r4, #4]
 800f33c:	60a2      	str	r2, [r4, #8]
 800f33e:	60e3      	str	r3, [r4, #12]
			p->moveSize = 6;
 800f340:	687b      	ldr	r3, [r7, #4]
 800f342:	2206      	movs	r2, #6
 800f344:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,B,G,B,C,D");
 800f346:	687b      	ldr	r3, [r7, #4]
 800f348:	3340      	adds	r3, #64	; 0x40
 800f34a:	4aac      	ldr	r2, [pc, #688]	; (800f5fc <createProblem+0xe754>)
 800f34c:	461c      	mov	r4, r3
 800f34e:	4613      	mov	r3, r2
 800f350:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f352:	6020      	str	r0, [r4, #0]
 800f354:	6061      	str	r1, [r4, #4]
 800f356:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,10,10,13,18");
 800f358:	687b      	ldr	r3, [r7, #4]
 800f35a:	3304      	adds	r3, #4
 800f35c:	4aa8      	ldr	r2, [pc, #672]	; (800f600 <createProblem+0xe758>)
 800f35e:	461c      	mov	r4, r3
 800f360:	4615      	mov	r5, r2
 800f362:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f364:	6020      	str	r0, [r4, #0]
 800f366:	6061      	str	r1, [r4, #4]
 800f368:	60a2      	str	r2, [r4, #8]
 800f36a:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800f36c:	687b      	ldr	r3, [r7, #4]
 800f36e:	33d8      	adds	r3, #216	; 0xd8
 800f370:	4aa4      	ldr	r2, [pc, #656]	; (800f604 <createProblem+0xe75c>)
 800f372:	461c      	mov	r4, r3
 800f374:	4613      	mov	r3, r2
 800f376:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f378:	6020      	str	r0, [r4, #0]
 800f37a:	6061      	str	r1, [r4, #4]
 800f37c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 800f37e:	687b      	ldr	r3, [r7, #4]
 800f380:	33cc      	adds	r3, #204	; 0xcc
 800f382:	4aa1      	ldr	r2, [pc, #644]	; (800f608 <createProblem+0xe760>)
 800f384:	6810      	ldr	r0, [r2, #0]
 800f386:	6018      	str	r0, [r3, #0]
			break;
 800f388:	f00b bad4 	b.w	801a934 <createProblem+0x19a8c>
		case 494 :
			strcpy(p->name,"THE TROLLOC WARS");
 800f38c:	687b      	ldr	r3, [r7, #4]
 800f38e:	337c      	adds	r3, #124	; 0x7c
 800f390:	4a9e      	ldr	r2, [pc, #632]	; (800f60c <createProblem+0xe764>)
 800f392:	461d      	mov	r5, r3
 800f394:	4614      	mov	r4, r2
 800f396:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f398:	6028      	str	r0, [r5, #0]
 800f39a:	6069      	str	r1, [r5, #4]
 800f39c:	60aa      	str	r2, [r5, #8]
 800f39e:	60eb      	str	r3, [r5, #12]
 800f3a0:	7823      	ldrb	r3, [r4, #0]
 800f3a2:	742b      	strb	r3, [r5, #16]
			p->moveSize = 5;
 800f3a4:	687b      	ldr	r3, [r7, #4]
 800f3a6:	2205      	movs	r2, #5
 800f3a8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,J,F,A,D");
 800f3aa:	687b      	ldr	r3, [r7, #4]
 800f3ac:	3340      	adds	r3, #64	; 0x40
 800f3ae:	4998      	ldr	r1, [pc, #608]	; (800f610 <createProblem+0xe768>)
 800f3b0:	461a      	mov	r2, r3
 800f3b2:	460b      	mov	r3, r1
 800f3b4:	cb03      	ldmia	r3!, {r0, r1}
 800f3b6:	6010      	str	r0, [r2, #0]
 800f3b8:	6051      	str	r1, [r2, #4]
 800f3ba:	881b      	ldrh	r3, [r3, #0]
 800f3bc:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,5,11,14,18");
 800f3be:	687b      	ldr	r3, [r7, #4]
 800f3c0:	3304      	adds	r3, #4
 800f3c2:	4a94      	ldr	r2, [pc, #592]	; (800f614 <createProblem+0xe76c>)
 800f3c4:	461c      	mov	r4, r3
 800f3c6:	4613      	mov	r3, r2
 800f3c8:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f3ca:	6020      	str	r0, [r4, #0]
 800f3cc:	6061      	str	r1, [r4, #4]
 800f3ce:	60a2      	str	r2, [r4, #8]
 800f3d0:	781b      	ldrb	r3, [r3, #0]
 800f3d2:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,e");
 800f3d4:	687b      	ldr	r3, [r7, #4]
 800f3d6:	33d8      	adds	r3, #216	; 0xd8
 800f3d8:	498f      	ldr	r1, [pc, #572]	; (800f618 <createProblem+0xe770>)
 800f3da:	461a      	mov	r2, r3
 800f3dc:	460b      	mov	r3, r1
 800f3de:	cb03      	ldmia	r3!, {r0, r1}
 800f3e0:	6010      	str	r0, [r2, #0]
 800f3e2:	6051      	str	r1, [r2, #4]
 800f3e4:	881b      	ldrh	r3, [r3, #0]
 800f3e6:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 800f3e8:	687b      	ldr	r3, [r7, #4]
 800f3ea:	33cc      	adds	r3, #204	; 0xcc
 800f3ec:	4a8b      	ldr	r2, [pc, #556]	; (800f61c <createProblem+0xe774>)
 800f3ee:	8811      	ldrh	r1, [r2, #0]
 800f3f0:	7892      	ldrb	r2, [r2, #2]
 800f3f2:	8019      	strh	r1, [r3, #0]
 800f3f4:	709a      	strb	r2, [r3, #2]
			break;
 800f3f6:	f00b ba9d 	b.w	801a934 <createProblem+0x19a8c>
		case 495 :
			strcpy(p->name,"SO YOU THINK YOU CAN DYNO");
 800f3fa:	687b      	ldr	r3, [r7, #4]
 800f3fc:	337c      	adds	r3, #124	; 0x7c
 800f3fe:	4a88      	ldr	r2, [pc, #544]	; (800f620 <createProblem+0xe778>)
 800f400:	461d      	mov	r5, r3
 800f402:	4614      	mov	r4, r2
 800f404:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f406:	6028      	str	r0, [r5, #0]
 800f408:	6069      	str	r1, [r5, #4]
 800f40a:	60aa      	str	r2, [r5, #8]
 800f40c:	60eb      	str	r3, [r5, #12]
 800f40e:	cc03      	ldmia	r4!, {r0, r1}
 800f410:	6128      	str	r0, [r5, #16]
 800f412:	6169      	str	r1, [r5, #20]
 800f414:	8823      	ldrh	r3, [r4, #0]
 800f416:	832b      	strh	r3, [r5, #24]
			p->moveSize = 6;
 800f418:	687b      	ldr	r3, [r7, #4]
 800f41a:	2206      	movs	r2, #6
 800f41c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,C,H,C,I");
 800f41e:	687b      	ldr	r3, [r7, #4]
 800f420:	3340      	adds	r3, #64	; 0x40
 800f422:	4a80      	ldr	r2, [pc, #512]	; (800f624 <createProblem+0xe77c>)
 800f424:	461c      	mov	r4, r3
 800f426:	4613      	mov	r3, r2
 800f428:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f42a:	6020      	str	r0, [r4, #0]
 800f42c:	6061      	str	r1, [r4, #4]
 800f42e:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,5,13,8,8,18");
 800f430:	687b      	ldr	r3, [r7, #4]
 800f432:	3304      	adds	r3, #4
 800f434:	4a7c      	ldr	r2, [pc, #496]	; (800f628 <createProblem+0xe780>)
 800f436:	461c      	mov	r4, r3
 800f438:	4613      	mov	r3, r2
 800f43a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f43c:	6020      	str	r0, [r4, #0]
 800f43e:	6061      	str	r1, [r4, #4]
 800f440:	60a2      	str	r2, [r4, #8]
 800f442:	881b      	ldrh	r3, [r3, #0]
 800f444:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800f446:	687b      	ldr	r3, [r7, #4]
 800f448:	33d8      	adds	r3, #216	; 0xd8
 800f44a:	4a78      	ldr	r2, [pc, #480]	; (800f62c <createProblem+0xe784>)
 800f44c:	461c      	mov	r4, r3
 800f44e:	4613      	mov	r3, r2
 800f450:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f452:	6020      	str	r0, [r4, #0]
 800f454:	6061      	str	r1, [r4, #4]
 800f456:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 800f458:	687b      	ldr	r3, [r7, #4]
 800f45a:	33cc      	adds	r3, #204	; 0xcc
 800f45c:	4a6a      	ldr	r2, [pc, #424]	; (800f608 <createProblem+0xe760>)
 800f45e:	6810      	ldr	r0, [r2, #0]
 800f460:	6018      	str	r0, [r3, #0]
			break;
 800f462:	f00b ba67 	b.w	801a934 <createProblem+0x19a8c>
		case 496 :
			strcpy(p->name,"MATTS");
 800f466:	687b      	ldr	r3, [r7, #4]
 800f468:	337c      	adds	r3, #124	; 0x7c
 800f46a:	4a71      	ldr	r2, [pc, #452]	; (800f630 <createProblem+0xe788>)
 800f46c:	6810      	ldr	r0, [r2, #0]
 800f46e:	6018      	str	r0, [r3, #0]
 800f470:	8892      	ldrh	r2, [r2, #4]
 800f472:	809a      	strh	r2, [r3, #4]
			p->moveSize = 6;
 800f474:	687b      	ldr	r3, [r7, #4]
 800f476:	2206      	movs	r2, #6
 800f478:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,I,K,I,I");
 800f47a:	687b      	ldr	r3, [r7, #4]
 800f47c:	3340      	adds	r3, #64	; 0x40
 800f47e:	4a6d      	ldr	r2, [pc, #436]	; (800f634 <createProblem+0xe78c>)
 800f480:	461c      	mov	r4, r3
 800f482:	4613      	mov	r3, r2
 800f484:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f486:	6020      	str	r0, [r4, #0]
 800f488:	6061      	str	r1, [r4, #4]
 800f48a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,11,7,14,9,18");
 800f48c:	687b      	ldr	r3, [r7, #4]
 800f48e:	3304      	adds	r3, #4
 800f490:	4a69      	ldr	r2, [pc, #420]	; (800f638 <createProblem+0xe790>)
 800f492:	461c      	mov	r4, r3
 800f494:	4613      	mov	r3, r2
 800f496:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f498:	6020      	str	r0, [r4, #0]
 800f49a:	6061      	str	r1, [r4, #4]
 800f49c:	60a2      	str	r2, [r4, #8]
 800f49e:	881a      	ldrh	r2, [r3, #0]
 800f4a0:	789b      	ldrb	r3, [r3, #2]
 800f4a2:	81a2      	strh	r2, [r4, #12]
 800f4a4:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800f4a6:	687b      	ldr	r3, [r7, #4]
 800f4a8:	33d8      	adds	r3, #216	; 0xd8
 800f4aa:	4a56      	ldr	r2, [pc, #344]	; (800f604 <createProblem+0xe75c>)
 800f4ac:	461c      	mov	r4, r3
 800f4ae:	4613      	mov	r3, r2
 800f4b0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f4b2:	6020      	str	r0, [r4, #0]
 800f4b4:	6061      	str	r1, [r4, #4]
 800f4b6:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "8B+");
 800f4b8:	687b      	ldr	r3, [r7, #4]
 800f4ba:	33cc      	adds	r3, #204	; 0xcc
 800f4bc:	4a5f      	ldr	r2, [pc, #380]	; (800f63c <createProblem+0xe794>)
 800f4be:	6810      	ldr	r0, [r2, #0]
 800f4c0:	6018      	str	r0, [r3, #0]
			break;
 800f4c2:	f00b ba37 	b.w	801a934 <createProblem+0x19a8c>
		case 497 :
			strcpy(p->name,"FIRSTEASY");
 800f4c6:	687b      	ldr	r3, [r7, #4]
 800f4c8:	337c      	adds	r3, #124	; 0x7c
 800f4ca:	495d      	ldr	r1, [pc, #372]	; (800f640 <createProblem+0xe798>)
 800f4cc:	461a      	mov	r2, r3
 800f4ce:	460b      	mov	r3, r1
 800f4d0:	cb03      	ldmia	r3!, {r0, r1}
 800f4d2:	6010      	str	r0, [r2, #0]
 800f4d4:	6051      	str	r1, [r2, #4]
 800f4d6:	881b      	ldrh	r3, [r3, #0]
 800f4d8:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 800f4da:	687b      	ldr	r3, [r7, #4]
 800f4dc:	2206      	movs	r2, #6
 800f4de:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,C,E,D");
 800f4e0:	687b      	ldr	r3, [r7, #4]
 800f4e2:	3340      	adds	r3, #64	; 0x40
 800f4e4:	4a57      	ldr	r2, [pc, #348]	; (800f644 <createProblem+0xe79c>)
 800f4e6:	461c      	mov	r4, r3
 800f4e8:	4613      	mov	r3, r2
 800f4ea:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f4ec:	6020      	str	r0, [r4, #0]
 800f4ee:	6061      	str	r1, [r4, #4]
 800f4f0:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,10,13,16,18");
 800f4f2:	687b      	ldr	r3, [r7, #4]
 800f4f4:	3304      	adds	r3, #4
 800f4f6:	4a54      	ldr	r2, [pc, #336]	; (800f648 <createProblem+0xe7a0>)
 800f4f8:	461c      	mov	r4, r3
 800f4fa:	4615      	mov	r5, r2
 800f4fc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f4fe:	6020      	str	r0, [r4, #0]
 800f500:	6061      	str	r1, [r4, #4]
 800f502:	60a2      	str	r2, [r4, #8]
 800f504:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800f506:	687b      	ldr	r3, [r7, #4]
 800f508:	33d8      	adds	r3, #216	; 0xd8
 800f50a:	4a3e      	ldr	r2, [pc, #248]	; (800f604 <createProblem+0xe75c>)
 800f50c:	461c      	mov	r4, r3
 800f50e:	4613      	mov	r3, r2
 800f510:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f512:	6020      	str	r0, [r4, #0]
 800f514:	6061      	str	r1, [r4, #4]
 800f516:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 800f518:	687b      	ldr	r3, [r7, #4]
 800f51a:	33cc      	adds	r3, #204	; 0xcc
 800f51c:	4a4b      	ldr	r2, [pc, #300]	; (800f64c <createProblem+0xe7a4>)
 800f51e:	6810      	ldr	r0, [r2, #0]
 800f520:	6018      	str	r0, [r3, #0]
			break;
 800f522:	f00b ba07 	b.w	801a934 <createProblem+0x19a8c>
		case 498 :
			strcpy(p->name,"KAKAKAKA");
 800f526:	687b      	ldr	r3, [r7, #4]
 800f528:	337c      	adds	r3, #124	; 0x7c
 800f52a:	4949      	ldr	r1, [pc, #292]	; (800f650 <createProblem+0xe7a8>)
 800f52c:	461a      	mov	r2, r3
 800f52e:	460b      	mov	r3, r1
 800f530:	cb03      	ldmia	r3!, {r0, r1}
 800f532:	6010      	str	r0, [r2, #0]
 800f534:	6051      	str	r1, [r2, #4]
 800f536:	781b      	ldrb	r3, [r3, #0]
 800f538:	7213      	strb	r3, [r2, #8]
			p->moveSize = 5;
 800f53a:	687b      	ldr	r3, [r7, #4]
 800f53c:	2205      	movs	r2, #5
 800f53e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,F,I,D");
 800f540:	687b      	ldr	r3, [r7, #4]
 800f542:	3340      	adds	r3, #64	; 0x40
 800f544:	4943      	ldr	r1, [pc, #268]	; (800f654 <createProblem+0xe7ac>)
 800f546:	461a      	mov	r2, r3
 800f548:	460b      	mov	r3, r1
 800f54a:	cb03      	ldmia	r3!, {r0, r1}
 800f54c:	6010      	str	r0, [r2, #0]
 800f54e:	6051      	str	r1, [r2, #4]
 800f550:	881b      	ldrh	r3, [r3, #0]
 800f552:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,13,14,18");
 800f554:	687b      	ldr	r3, [r7, #4]
 800f556:	3304      	adds	r3, #4
 800f558:	4a3f      	ldr	r2, [pc, #252]	; (800f658 <createProblem+0xe7b0>)
 800f55a:	461c      	mov	r4, r3
 800f55c:	4613      	mov	r3, r2
 800f55e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f560:	6020      	str	r0, [r4, #0]
 800f562:	6061      	str	r1, [r4, #4]
 800f564:	60a2      	str	r2, [r4, #8]
 800f566:	881b      	ldrh	r3, [r3, #0]
 800f568:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 800f56a:	687b      	ldr	r3, [r7, #4]
 800f56c:	33d8      	adds	r3, #216	; 0xd8
 800f56e:	493b      	ldr	r1, [pc, #236]	; (800f65c <createProblem+0xe7b4>)
 800f570:	461a      	mov	r2, r3
 800f572:	460b      	mov	r3, r1
 800f574:	cb03      	ldmia	r3!, {r0, r1}
 800f576:	6010      	str	r0, [r2, #0]
 800f578:	6051      	str	r1, [r2, #4]
 800f57a:	881b      	ldrh	r3, [r3, #0]
 800f57c:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C+");
 800f57e:	687b      	ldr	r3, [r7, #4]
 800f580:	33cc      	adds	r3, #204	; 0xcc
 800f582:	4a37      	ldr	r2, [pc, #220]	; (800f660 <createProblem+0xe7b8>)
 800f584:	6810      	ldr	r0, [r2, #0]
 800f586:	6018      	str	r0, [r3, #0]
			break;
 800f588:	f00b b9d4 	b.w	801a934 <createProblem+0x19a8c>
		case 499 :
			strcpy(p->name,"FLYING  BUDDAH");
 800f58c:	687b      	ldr	r3, [r7, #4]
 800f58e:	337c      	adds	r3, #124	; 0x7c
 800f590:	4a34      	ldr	r2, [pc, #208]	; (800f664 <createProblem+0xe7bc>)
 800f592:	461c      	mov	r4, r3
 800f594:	4613      	mov	r3, r2
 800f596:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f598:	6020      	str	r0, [r4, #0]
 800f59a:	6061      	str	r1, [r4, #4]
 800f59c:	60a2      	str	r2, [r4, #8]
 800f59e:	881a      	ldrh	r2, [r3, #0]
 800f5a0:	789b      	ldrb	r3, [r3, #2]
 800f5a2:	81a2      	strh	r2, [r4, #12]
 800f5a4:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 6;
 800f5a6:	687b      	ldr	r3, [r7, #4]
 800f5a8:	2206      	movs	r2, #6
 800f5aa:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,G,F,I,D");
 800f5ac:	687b      	ldr	r3, [r7, #4]
 800f5ae:	3340      	adds	r3, #64	; 0x40
 800f5b0:	4a2d      	ldr	r2, [pc, #180]	; (800f668 <createProblem+0xe7c0>)
 800f5b2:	461c      	mov	r4, r3
 800f5b4:	4613      	mov	r3, r2
 800f5b6:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f5b8:	6020      	str	r0, [r4, #0]
 800f5ba:	6061      	str	r1, [r4, #4]
 800f5bc:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,9,13,14,18");
 800f5be:	687b      	ldr	r3, [r7, #4]
 800f5c0:	3304      	adds	r3, #4
 800f5c2:	4a2a      	ldr	r2, [pc, #168]	; (800f66c <createProblem+0xe7c4>)
 800f5c4:	461c      	mov	r4, r3
 800f5c6:	4613      	mov	r3, r2
 800f5c8:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f5ca:	6020      	str	r0, [r4, #0]
 800f5cc:	6061      	str	r1, [r4, #4]
 800f5ce:	60a2      	str	r2, [r4, #8]
 800f5d0:	881a      	ldrh	r2, [r3, #0]
 800f5d2:	789b      	ldrb	r3, [r3, #2]
 800f5d4:	81a2      	strh	r2, [r4, #12]
 800f5d6:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800f5d8:	687b      	ldr	r3, [r7, #4]
 800f5da:	33d8      	adds	r3, #216	; 0xd8
 800f5dc:	4a13      	ldr	r2, [pc, #76]	; (800f62c <createProblem+0xe784>)
 800f5de:	461c      	mov	r4, r3
 800f5e0:	4613      	mov	r3, r2
 800f5e2:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f5e4:	6020      	str	r0, [r4, #0]
 800f5e6:	6061      	str	r1, [r4, #4]
 800f5e8:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 800f5ea:	687b      	ldr	r3, [r7, #4]
 800f5ec:	33cc      	adds	r3, #204	; 0xcc
 800f5ee:	4a20      	ldr	r2, [pc, #128]	; (800f670 <createProblem+0xe7c8>)
 800f5f0:	6810      	ldr	r0, [r2, #0]
 800f5f2:	6018      	str	r0, [r3, #0]
			break;
 800f5f4:	f00b b99e 	b.w	801a934 <createProblem+0x19a8c>
 800f5f8:	080258f4 	.word	0x080258f4
 800f5fc:	08025904 	.word	0x08025904
 800f600:	08025910 	.word	0x08025910
 800f604:	0802091c 	.word	0x0802091c
 800f608:	08020dc8 	.word	0x08020dc8
 800f60c:	08025920 	.word	0x08025920
 800f610:	08025934 	.word	0x08025934
 800f614:	08024ba0 	.word	0x08024ba0
 800f618:	08021748 	.word	0x08021748
 800f61c:	08020874 	.word	0x08020874
 800f620:	08025940 	.word	0x08025940
 800f624:	0802595c 	.word	0x0802595c
 800f628:	08025968 	.word	0x08025968
 800f62c:	08020e90 	.word	0x08020e90
 800f630:	08025978 	.word	0x08025978
 800f634:	08025980 	.word	0x08025980
 800f638:	0802598c 	.word	0x0802598c
 800f63c:	0802599c 	.word	0x0802599c
 800f640:	080259a0 	.word	0x080259a0
 800f644:	080259ac 	.word	0x080259ac
 800f648:	08025460 	.word	0x08025460
 800f64c:	08020830 	.word	0x08020830
 800f650:	080259b8 	.word	0x080259b8
 800f654:	080259c4 	.word	0x080259c4
 800f658:	08021098 	.word	0x08021098
 800f65c:	080208a0 	.word	0x080208a0
 800f660:	08020928 	.word	0x08020928
 800f664:	080259d0 	.word	0x080259d0
 800f668:	080259e0 	.word	0x080259e0
 800f66c:	080259ec 	.word	0x080259ec
 800f670:	080209a4 	.word	0x080209a4
		case 5 :
			strcpy(p->name,"PROBLEM 17");
 800f674:	687b      	ldr	r3, [r7, #4]
 800f676:	337c      	adds	r3, #124	; 0x7c
 800f678:	49b7      	ldr	r1, [pc, #732]	; (800f958 <createProblem+0xeab0>)
 800f67a:	461a      	mov	r2, r3
 800f67c:	460b      	mov	r3, r1
 800f67e:	cb03      	ldmia	r3!, {r0, r1}
 800f680:	6010      	str	r0, [r2, #0]
 800f682:	6051      	str	r1, [r2, #4]
 800f684:	8819      	ldrh	r1, [r3, #0]
 800f686:	789b      	ldrb	r3, [r3, #2]
 800f688:	8111      	strh	r1, [r2, #8]
 800f68a:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 800f68c:	687b      	ldr	r3, [r7, #4]
 800f68e:	2207      	movs	r2, #7
 800f690:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,B,E,E,G,C,A");
 800f692:	687b      	ldr	r3, [r7, #4]
 800f694:	3340      	adds	r3, #64	; 0x40
 800f696:	4ab1      	ldr	r2, [pc, #708]	; (800f95c <createProblem+0xeab4>)
 800f698:	461c      	mov	r4, r3
 800f69a:	4613      	mov	r3, r2
 800f69c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f69e:	6020      	str	r0, [r4, #0]
 800f6a0:	6061      	str	r1, [r4, #4]
 800f6a2:	60a2      	str	r2, [r4, #8]
 800f6a4:	881b      	ldrh	r3, [r3, #0]
 800f6a6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,12,15,16,18");
 800f6a8:	687b      	ldr	r3, [r7, #4]
 800f6aa:	3304      	adds	r3, #4
 800f6ac:	4aac      	ldr	r2, [pc, #688]	; (800f960 <createProblem+0xeab8>)
 800f6ae:	461d      	mov	r5, r3
 800f6b0:	4614      	mov	r4, r2
 800f6b2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f6b4:	6028      	str	r0, [r5, #0]
 800f6b6:	6069      	str	r1, [r5, #4]
 800f6b8:	60aa      	str	r2, [r5, #8]
 800f6ba:	60eb      	str	r3, [r5, #12]
 800f6bc:	8823      	ldrh	r3, [r4, #0]
 800f6be:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800f6c0:	687b      	ldr	r3, [r7, #4]
 800f6c2:	33d8      	adds	r3, #216	; 0xd8
 800f6c4:	4aa7      	ldr	r2, [pc, #668]	; (800f964 <createProblem+0xeabc>)
 800f6c6:	461c      	mov	r4, r3
 800f6c8:	4613      	mov	r3, r2
 800f6ca:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f6cc:	6020      	str	r0, [r4, #0]
 800f6ce:	6061      	str	r1, [r4, #4]
 800f6d0:	60a2      	str	r2, [r4, #8]
 800f6d2:	881b      	ldrh	r3, [r3, #0]
 800f6d4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 800f6d6:	687b      	ldr	r3, [r7, #4]
 800f6d8:	33cc      	adds	r3, #204	; 0xcc
 800f6da:	4aa3      	ldr	r2, [pc, #652]	; (800f968 <createProblem+0xeac0>)
 800f6dc:	8811      	ldrh	r1, [r2, #0]
 800f6de:	7892      	ldrb	r2, [r2, #2]
 800f6e0:	8019      	strh	r1, [r3, #0]
 800f6e2:	709a      	strb	r2, [r3, #2]
			break;
 800f6e4:	f00b b926 	b.w	801a934 <createProblem+0x19a8c>
		case 50 :
			strcpy(p->name,"MATCH GAME");
 800f6e8:	687b      	ldr	r3, [r7, #4]
 800f6ea:	337c      	adds	r3, #124	; 0x7c
 800f6ec:	499f      	ldr	r1, [pc, #636]	; (800f96c <createProblem+0xeac4>)
 800f6ee:	461a      	mov	r2, r3
 800f6f0:	460b      	mov	r3, r1
 800f6f2:	cb03      	ldmia	r3!, {r0, r1}
 800f6f4:	6010      	str	r0, [r2, #0]
 800f6f6:	6051      	str	r1, [r2, #4]
 800f6f8:	8819      	ldrh	r1, [r3, #0]
 800f6fa:	789b      	ldrb	r3, [r3, #2]
 800f6fc:	8111      	strh	r1, [r2, #8]
 800f6fe:	7293      	strb	r3, [r2, #10]
			p->moveSize = 5;
 800f700:	687b      	ldr	r3, [r7, #4]
 800f702:	2205      	movs	r2, #5
 800f704:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,I,G,I");
 800f706:	687b      	ldr	r3, [r7, #4]
 800f708:	3340      	adds	r3, #64	; 0x40
 800f70a:	4999      	ldr	r1, [pc, #612]	; (800f970 <createProblem+0xeac8>)
 800f70c:	461a      	mov	r2, r3
 800f70e:	460b      	mov	r3, r1
 800f710:	cb03      	ldmia	r3!, {r0, r1}
 800f712:	6010      	str	r0, [r2, #0]
 800f714:	6051      	str	r1, [r2, #4]
 800f716:	881b      	ldrh	r3, [r3, #0]
 800f718:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,6,10,14,18");
 800f71a:	687b      	ldr	r3, [r7, #4]
 800f71c:	3304      	adds	r3, #4
 800f71e:	4a95      	ldr	r2, [pc, #596]	; (800f974 <createProblem+0xeacc>)
 800f720:	461c      	mov	r4, r3
 800f722:	4613      	mov	r3, r2
 800f724:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f726:	6020      	str	r0, [r4, #0]
 800f728:	6061      	str	r1, [r4, #4]
 800f72a:	60a2      	str	r2, [r4, #8]
 800f72c:	781b      	ldrb	r3, [r3, #0]
 800f72e:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,e");
 800f730:	687b      	ldr	r3, [r7, #4]
 800f732:	33d8      	adds	r3, #216	; 0xd8
 800f734:	4990      	ldr	r1, [pc, #576]	; (800f978 <createProblem+0xead0>)
 800f736:	461a      	mov	r2, r3
 800f738:	460b      	mov	r3, r1
 800f73a:	cb03      	ldmia	r3!, {r0, r1}
 800f73c:	6010      	str	r0, [r2, #0]
 800f73e:	6051      	str	r1, [r2, #4]
 800f740:	881b      	ldrh	r3, [r3, #0]
 800f742:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6B+");
 800f744:	687b      	ldr	r3, [r7, #4]
 800f746:	33cc      	adds	r3, #204	; 0xcc
 800f748:	4a8c      	ldr	r2, [pc, #560]	; (800f97c <createProblem+0xead4>)
 800f74a:	6810      	ldr	r0, [r2, #0]
 800f74c:	6018      	str	r0, [r3, #0]
			break;
 800f74e:	f00b b8f1 	b.w	801a934 <createProblem+0x19a8c>
		case 500 :
			strcpy(p->name,"FROSTED AFRO");
 800f752:	687b      	ldr	r3, [r7, #4]
 800f754:	337c      	adds	r3, #124	; 0x7c
 800f756:	4a8a      	ldr	r2, [pc, #552]	; (800f980 <createProblem+0xead8>)
 800f758:	461c      	mov	r4, r3
 800f75a:	4613      	mov	r3, r2
 800f75c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f75e:	6020      	str	r0, [r4, #0]
 800f760:	6061      	str	r1, [r4, #4]
 800f762:	60a2      	str	r2, [r4, #8]
 800f764:	781b      	ldrb	r3, [r3, #0]
 800f766:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 800f768:	687b      	ldr	r3, [r7, #4]
 800f76a:	2206      	movs	r2, #6
 800f76c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,F,E,J,D");
 800f76e:	687b      	ldr	r3, [r7, #4]
 800f770:	3340      	adds	r3, #64	; 0x40
 800f772:	4a84      	ldr	r2, [pc, #528]	; (800f984 <createProblem+0xeadc>)
 800f774:	461c      	mov	r4, r3
 800f776:	4613      	mov	r3, r2
 800f778:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f77a:	6020      	str	r0, [r4, #0]
 800f77c:	6061      	str	r1, [r4, #4]
 800f77e:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,11,14,16,18");
 800f780:	687b      	ldr	r3, [r7, #4]
 800f782:	3304      	adds	r3, #4
 800f784:	4a80      	ldr	r2, [pc, #512]	; (800f988 <createProblem+0xeae0>)
 800f786:	461c      	mov	r4, r3
 800f788:	4615      	mov	r5, r2
 800f78a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800f78c:	6020      	str	r0, [r4, #0]
 800f78e:	6061      	str	r1, [r4, #4]
 800f790:	60a2      	str	r2, [r4, #8]
 800f792:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800f794:	687b      	ldr	r3, [r7, #4]
 800f796:	33d8      	adds	r3, #216	; 0xd8
 800f798:	4a7c      	ldr	r2, [pc, #496]	; (800f98c <createProblem+0xeae4>)
 800f79a:	461c      	mov	r4, r3
 800f79c:	4613      	mov	r3, r2
 800f79e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f7a0:	6020      	str	r0, [r4, #0]
 800f7a2:	6061      	str	r1, [r4, #4]
 800f7a4:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 800f7a6:	687b      	ldr	r3, [r7, #4]
 800f7a8:	33cc      	adds	r3, #204	; 0xcc
 800f7aa:	4a6f      	ldr	r2, [pc, #444]	; (800f968 <createProblem+0xeac0>)
 800f7ac:	8811      	ldrh	r1, [r2, #0]
 800f7ae:	7892      	ldrb	r2, [r2, #2]
 800f7b0:	8019      	strh	r1, [r3, #0]
 800f7b2:	709a      	strb	r2, [r3, #2]
			break;
 800f7b4:	f00b b8be 	b.w	801a934 <createProblem+0x19a8c>
		case 501 :
			strcpy(p->name,"JH 1.0");
 800f7b8:	687b      	ldr	r3, [r7, #4]
 800f7ba:	337c      	adds	r3, #124	; 0x7c
 800f7bc:	4a74      	ldr	r2, [pc, #464]	; (800f990 <createProblem+0xeae8>)
 800f7be:	6810      	ldr	r0, [r2, #0]
 800f7c0:	6018      	str	r0, [r3, #0]
 800f7c2:	8891      	ldrh	r1, [r2, #4]
 800f7c4:	7992      	ldrb	r2, [r2, #6]
 800f7c6:	8099      	strh	r1, [r3, #4]
 800f7c8:	719a      	strb	r2, [r3, #6]
			p->moveSize = 7;
 800f7ca:	687b      	ldr	r3, [r7, #4]
 800f7cc:	2207      	movs	r2, #7
 800f7ce:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,C,E,B,G,I");
 800f7d0:	687b      	ldr	r3, [r7, #4]
 800f7d2:	3340      	adds	r3, #64	; 0x40
 800f7d4:	4a6f      	ldr	r2, [pc, #444]	; (800f994 <createProblem+0xeaec>)
 800f7d6:	461c      	mov	r4, r3
 800f7d8:	4613      	mov	r3, r2
 800f7da:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f7dc:	6020      	str	r0, [r4, #0]
 800f7de:	6061      	str	r1, [r4, #4]
 800f7e0:	60a2      	str	r2, [r4, #8]
 800f7e2:	881b      	ldrh	r3, [r3, #0]
 800f7e4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,8,12,15,17,18");
 800f7e6:	687b      	ldr	r3, [r7, #4]
 800f7e8:	3304      	adds	r3, #4
 800f7ea:	4a6b      	ldr	r2, [pc, #428]	; (800f998 <createProblem+0xeaf0>)
 800f7ec:	461d      	mov	r5, r3
 800f7ee:	4614      	mov	r4, r2
 800f7f0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f7f2:	6028      	str	r0, [r5, #0]
 800f7f4:	6069      	str	r1, [r5, #4]
 800f7f6:	60aa      	str	r2, [r5, #8]
 800f7f8:	60eb      	str	r3, [r5, #12]
 800f7fa:	8823      	ldrh	r3, [r4, #0]
 800f7fc:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800f7fe:	687b      	ldr	r3, [r7, #4]
 800f800:	33d8      	adds	r3, #216	; 0xd8
 800f802:	4a58      	ldr	r2, [pc, #352]	; (800f964 <createProblem+0xeabc>)
 800f804:	461c      	mov	r4, r3
 800f806:	4613      	mov	r3, r2
 800f808:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f80a:	6020      	str	r0, [r4, #0]
 800f80c:	6061      	str	r1, [r4, #4]
 800f80e:	60a2      	str	r2, [r4, #8]
 800f810:	881b      	ldrh	r3, [r3, #0]
 800f812:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B+");
 800f814:	687b      	ldr	r3, [r7, #4]
 800f816:	33cc      	adds	r3, #204	; 0xcc
 800f818:	4a60      	ldr	r2, [pc, #384]	; (800f99c <createProblem+0xeaf4>)
 800f81a:	6810      	ldr	r0, [r2, #0]
 800f81c:	6018      	str	r0, [r3, #0]
			break;
 800f81e:	f00b b889 	b.w	801a934 <createProblem+0x19a8c>
		case 502 :
			strcpy(p->name,"FOLLIA1");
 800f822:	687b      	ldr	r3, [r7, #4]
 800f824:	337c      	adds	r3, #124	; 0x7c
 800f826:	495e      	ldr	r1, [pc, #376]	; (800f9a0 <createProblem+0xeaf8>)
 800f828:	461a      	mov	r2, r3
 800f82a:	460b      	mov	r3, r1
 800f82c:	cb03      	ldmia	r3!, {r0, r1}
 800f82e:	6010      	str	r0, [r2, #0]
 800f830:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 800f832:	687b      	ldr	r3, [r7, #4]
 800f834:	2207      	movs	r2, #7
 800f836:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,H,G,H,G,I");
 800f838:	687b      	ldr	r3, [r7, #4]
 800f83a:	3340      	adds	r3, #64	; 0x40
 800f83c:	4a59      	ldr	r2, [pc, #356]	; (800f9a4 <createProblem+0xeafc>)
 800f83e:	461c      	mov	r4, r3
 800f840:	4613      	mov	r3, r2
 800f842:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f844:	6020      	str	r0, [r4, #0]
 800f846:	6061      	str	r1, [r4, #4]
 800f848:	60a2      	str	r2, [r4, #8]
 800f84a:	881b      	ldrh	r3, [r3, #0]
 800f84c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,8,10,13,14,18");
 800f84e:	687b      	ldr	r3, [r7, #4]
 800f850:	3304      	adds	r3, #4
 800f852:	4a55      	ldr	r2, [pc, #340]	; (800f9a8 <createProblem+0xeb00>)
 800f854:	461d      	mov	r5, r3
 800f856:	4614      	mov	r4, r2
 800f858:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f85a:	6028      	str	r0, [r5, #0]
 800f85c:	6069      	str	r1, [r5, #4]
 800f85e:	60aa      	str	r2, [r5, #8]
 800f860:	60eb      	str	r3, [r5, #12]
 800f862:	8823      	ldrh	r3, [r4, #0]
 800f864:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800f866:	687b      	ldr	r3, [r7, #4]
 800f868:	33d8      	adds	r3, #216	; 0xd8
 800f86a:	4a50      	ldr	r2, [pc, #320]	; (800f9ac <createProblem+0xeb04>)
 800f86c:	461c      	mov	r4, r3
 800f86e:	4613      	mov	r3, r2
 800f870:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f872:	6020      	str	r0, [r4, #0]
 800f874:	6061      	str	r1, [r4, #4]
 800f876:	60a2      	str	r2, [r4, #8]
 800f878:	881b      	ldrh	r3, [r3, #0]
 800f87a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800f87c:	687b      	ldr	r3, [r7, #4]
 800f87e:	33cc      	adds	r3, #204	; 0xcc
 800f880:	4a3e      	ldr	r2, [pc, #248]	; (800f97c <createProblem+0xead4>)
 800f882:	6810      	ldr	r0, [r2, #0]
 800f884:	6018      	str	r0, [r3, #0]
			break;
 800f886:	f00b b855 	b.w	801a934 <createProblem+0x19a8c>
		case 503 :
			strcpy(p->name,"TRYTRY");
 800f88a:	687b      	ldr	r3, [r7, #4]
 800f88c:	337c      	adds	r3, #124	; 0x7c
 800f88e:	4a48      	ldr	r2, [pc, #288]	; (800f9b0 <createProblem+0xeb08>)
 800f890:	6810      	ldr	r0, [r2, #0]
 800f892:	6018      	str	r0, [r3, #0]
 800f894:	8891      	ldrh	r1, [r2, #4]
 800f896:	7992      	ldrb	r2, [r2, #6]
 800f898:	8099      	strh	r1, [r3, #4]
 800f89a:	719a      	strb	r2, [r3, #6]
			p->moveSize = 7;
 800f89c:	687b      	ldr	r3, [r7, #4]
 800f89e:	2207      	movs	r2, #7
 800f8a0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,C,B,C,C,A");
 800f8a2:	687b      	ldr	r3, [r7, #4]
 800f8a4:	3340      	adds	r3, #64	; 0x40
 800f8a6:	4a43      	ldr	r2, [pc, #268]	; (800f9b4 <createProblem+0xeb0c>)
 800f8a8:	461c      	mov	r4, r3
 800f8aa:	4613      	mov	r3, r2
 800f8ac:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f8ae:	6020      	str	r0, [r4, #0]
 800f8b0:	6061      	str	r1, [r4, #4]
 800f8b2:	60a2      	str	r2, [r4, #8]
 800f8b4:	881b      	ldrh	r3, [r3, #0]
 800f8b6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,5,8,10,13,16,18");
 800f8b8:	687b      	ldr	r3, [r7, #4]
 800f8ba:	3304      	adds	r3, #4
 800f8bc:	4a3e      	ldr	r2, [pc, #248]	; (800f9b8 <createProblem+0xeb10>)
 800f8be:	461d      	mov	r5, r3
 800f8c0:	4614      	mov	r4, r2
 800f8c2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800f8c4:	6028      	str	r0, [r5, #0]
 800f8c6:	6069      	str	r1, [r5, #4]
 800f8c8:	60aa      	str	r2, [r5, #8]
 800f8ca:	60eb      	str	r3, [r5, #12]
 800f8cc:	8823      	ldrh	r3, [r4, #0]
 800f8ce:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800f8d0:	687b      	ldr	r3, [r7, #4]
 800f8d2:	33d8      	adds	r3, #216	; 0xd8
 800f8d4:	4a35      	ldr	r2, [pc, #212]	; (800f9ac <createProblem+0xeb04>)
 800f8d6:	461c      	mov	r4, r3
 800f8d8:	4613      	mov	r3, r2
 800f8da:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f8dc:	6020      	str	r0, [r4, #0]
 800f8de:	6061      	str	r1, [r4, #4]
 800f8e0:	60a2      	str	r2, [r4, #8]
 800f8e2:	881b      	ldrh	r3, [r3, #0]
 800f8e4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800f8e6:	687b      	ldr	r3, [r7, #4]
 800f8e8:	33cc      	adds	r3, #204	; 0xcc
 800f8ea:	4a24      	ldr	r2, [pc, #144]	; (800f97c <createProblem+0xead4>)
 800f8ec:	6810      	ldr	r0, [r2, #0]
 800f8ee:	6018      	str	r0, [r3, #0]
			break;
 800f8f0:	f00b b820 	b.w	801a934 <createProblem+0x19a8c>
		case 504 :
			strcpy(p->name,"TRYTRYTRY");
 800f8f4:	687b      	ldr	r3, [r7, #4]
 800f8f6:	337c      	adds	r3, #124	; 0x7c
 800f8f8:	4930      	ldr	r1, [pc, #192]	; (800f9bc <createProblem+0xeb14>)
 800f8fa:	461a      	mov	r2, r3
 800f8fc:	460b      	mov	r3, r1
 800f8fe:	cb03      	ldmia	r3!, {r0, r1}
 800f900:	6010      	str	r0, [r2, #0]
 800f902:	6051      	str	r1, [r2, #4]
 800f904:	881b      	ldrh	r3, [r3, #0]
 800f906:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 800f908:	687b      	ldr	r3, [r7, #4]
 800f90a:	2206      	movs	r2, #6
 800f90c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,C,E,G,D");
 800f90e:	687b      	ldr	r3, [r7, #4]
 800f910:	3340      	adds	r3, #64	; 0x40
 800f912:	4a2b      	ldr	r2, [pc, #172]	; (800f9c0 <createProblem+0xeb18>)
 800f914:	461c      	mov	r4, r3
 800f916:	4613      	mov	r3, r2
 800f918:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f91a:	6020      	str	r0, [r4, #0]
 800f91c:	6061      	str	r1, [r4, #4]
 800f91e:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,13,8,9,18");
 800f920:	687b      	ldr	r3, [r7, #4]
 800f922:	3304      	adds	r3, #4
 800f924:	4a27      	ldr	r2, [pc, #156]	; (800f9c4 <createProblem+0xeb1c>)
 800f926:	461c      	mov	r4, r3
 800f928:	4613      	mov	r3, r2
 800f92a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f92c:	6020      	str	r0, [r4, #0]
 800f92e:	6061      	str	r1, [r4, #4]
 800f930:	60a2      	str	r2, [r4, #8]
 800f932:	881b      	ldrh	r3, [r3, #0]
 800f934:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800f936:	687b      	ldr	r3, [r7, #4]
 800f938:	33d8      	adds	r3, #216	; 0xd8
 800f93a:	4a14      	ldr	r2, [pc, #80]	; (800f98c <createProblem+0xeae4>)
 800f93c:	461c      	mov	r4, r3
 800f93e:	4613      	mov	r3, r2
 800f940:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f942:	6020      	str	r0, [r4, #0]
 800f944:	6061      	str	r1, [r4, #4]
 800f946:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 800f948:	687b      	ldr	r3, [r7, #4]
 800f94a:	33cc      	adds	r3, #204	; 0xcc
 800f94c:	4a0b      	ldr	r2, [pc, #44]	; (800f97c <createProblem+0xead4>)
 800f94e:	6810      	ldr	r0, [r2, #0]
 800f950:	6018      	str	r0, [r3, #0]
			break;
 800f952:	f00a bfef 	b.w	801a934 <createProblem+0x19a8c>
 800f956:	bf00      	nop
 800f958:	080259fc 	.word	0x080259fc
 800f95c:	08025a08 	.word	0x08025a08
 800f960:	08025a18 	.word	0x08025a18
 800f964:	08020a14 	.word	0x08020a14
 800f968:	08020874 	.word	0x08020874
 800f96c:	08025a2c 	.word	0x08025a2c
 800f970:	08025a38 	.word	0x08025a38
 800f974:	08025a44 	.word	0x08025a44
 800f978:	08021748 	.word	0x08021748
 800f97c:	08020830 	.word	0x08020830
 800f980:	08025a54 	.word	0x08025a54
 800f984:	08025a64 	.word	0x08025a64
 800f988:	08025a70 	.word	0x08025a70
 800f98c:	08020e90 	.word	0x08020e90
 800f990:	08025a80 	.word	0x08025a80
 800f994:	08025a88 	.word	0x08025a88
 800f998:	08025a98 	.word	0x08025a98
 800f99c:	08020dc8 	.word	0x08020dc8
 800f9a0:	08025aac 	.word	0x08025aac
 800f9a4:	08025ab4 	.word	0x08025ab4
 800f9a8:	08025ac4 	.word	0x08025ac4
 800f9ac:	08020820 	.word	0x08020820
 800f9b0:	08025ad8 	.word	0x08025ad8
 800f9b4:	08025ae0 	.word	0x08025ae0
 800f9b8:	08025af0 	.word	0x08025af0
 800f9bc:	08025b04 	.word	0x08025b04
 800f9c0:	08025b10 	.word	0x08025b10
 800f9c4:	08025b1c 	.word	0x08025b1c
		case 505 :
			strcpy(p->name,"OKTRY");
 800f9c8:	687b      	ldr	r3, [r7, #4]
 800f9ca:	337c      	adds	r3, #124	; 0x7c
 800f9cc:	4aba      	ldr	r2, [pc, #744]	; (800fcb8 <createProblem+0xee10>)
 800f9ce:	6810      	ldr	r0, [r2, #0]
 800f9d0:	6018      	str	r0, [r3, #0]
 800f9d2:	8892      	ldrh	r2, [r2, #4]
 800f9d4:	809a      	strh	r2, [r3, #4]
			p->moveSize = 5;
 800f9d6:	687b      	ldr	r3, [r7, #4]
 800f9d8:	2205      	movs	r2, #5
 800f9da:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,C,C,D");
 800f9dc:	687b      	ldr	r3, [r7, #4]
 800f9de:	3340      	adds	r3, #64	; 0x40
 800f9e0:	49b6      	ldr	r1, [pc, #728]	; (800fcbc <createProblem+0xee14>)
 800f9e2:	461a      	mov	r2, r3
 800f9e4:	460b      	mov	r3, r1
 800f9e6:	cb03      	ldmia	r3!, {r0, r1}
 800f9e8:	6010      	str	r0, [r2, #0]
 800f9ea:	6051      	str	r1, [r2, #4]
 800f9ec:	881b      	ldrh	r3, [r3, #0]
 800f9ee:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,6,8,13,18");
 800f9f0:	687b      	ldr	r3, [r7, #4]
 800f9f2:	3304      	adds	r3, #4
 800f9f4:	4ab2      	ldr	r2, [pc, #712]	; (800fcc0 <createProblem+0xee18>)
 800f9f6:	461c      	mov	r4, r3
 800f9f8:	4613      	mov	r3, r2
 800f9fa:	cb07      	ldmia	r3!, {r0, r1, r2}
 800f9fc:	6020      	str	r0, [r4, #0]
 800f9fe:	6061      	str	r1, [r4, #4]
 800fa00:	60a2      	str	r2, [r4, #8]
			strcpy(p->startFinish, "s,s,d,d,e");
 800fa02:	687b      	ldr	r3, [r7, #4]
 800fa04:	33d8      	adds	r3, #216	; 0xd8
 800fa06:	49af      	ldr	r1, [pc, #700]	; (800fcc4 <createProblem+0xee1c>)
 800fa08:	461a      	mov	r2, r3
 800fa0a:	460b      	mov	r3, r1
 800fa0c:	cb03      	ldmia	r3!, {r0, r1}
 800fa0e:	6010      	str	r0, [r2, #0]
 800fa10:	6051      	str	r1, [r2, #4]
 800fa12:	881b      	ldrh	r3, [r3, #0]
 800fa14:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6B+");
 800fa16:	687b      	ldr	r3, [r7, #4]
 800fa18:	33cc      	adds	r3, #204	; 0xcc
 800fa1a:	4aab      	ldr	r2, [pc, #684]	; (800fcc8 <createProblem+0xee20>)
 800fa1c:	6810      	ldr	r0, [r2, #0]
 800fa1e:	6018      	str	r0, [r3, #0]
			break;
 800fa20:	f00a bf88 	b.w	801a934 <createProblem+0x19a8c>
		case 506 :
			strcpy(p->name,"RON DUC DONG");
 800fa24:	687b      	ldr	r3, [r7, #4]
 800fa26:	337c      	adds	r3, #124	; 0x7c
 800fa28:	4aa8      	ldr	r2, [pc, #672]	; (800fccc <createProblem+0xee24>)
 800fa2a:	461c      	mov	r4, r3
 800fa2c:	4613      	mov	r3, r2
 800fa2e:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fa30:	6020      	str	r0, [r4, #0]
 800fa32:	6061      	str	r1, [r4, #4]
 800fa34:	60a2      	str	r2, [r4, #8]
 800fa36:	781b      	ldrb	r3, [r3, #0]
 800fa38:	7323      	strb	r3, [r4, #12]
			p->moveSize = 7;
 800fa3a:	687b      	ldr	r3, [r7, #4]
 800fa3c:	2207      	movs	r2, #7
 800fa3e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,J,G,E,I,E,D");
 800fa40:	687b      	ldr	r3, [r7, #4]
 800fa42:	3340      	adds	r3, #64	; 0x40
 800fa44:	4aa2      	ldr	r2, [pc, #648]	; (800fcd0 <createProblem+0xee28>)
 800fa46:	461c      	mov	r4, r3
 800fa48:	4613      	mov	r3, r2
 800fa4a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fa4c:	6020      	str	r0, [r4, #0]
 800fa4e:	6061      	str	r1, [r4, #4]
 800fa50:	60a2      	str	r2, [r4, #8]
 800fa52:	881b      	ldrh	r3, [r3, #0]
 800fa54:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,9,12,14,16,18");
 800fa56:	687b      	ldr	r3, [r7, #4]
 800fa58:	3304      	adds	r3, #4
 800fa5a:	4a9e      	ldr	r2, [pc, #632]	; (800fcd4 <createProblem+0xee2c>)
 800fa5c:	461d      	mov	r5, r3
 800fa5e:	4614      	mov	r4, r2
 800fa60:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800fa62:	6028      	str	r0, [r5, #0]
 800fa64:	6069      	str	r1, [r5, #4]
 800fa66:	60aa      	str	r2, [r5, #8]
 800fa68:	60eb      	str	r3, [r5, #12]
 800fa6a:	8823      	ldrh	r3, [r4, #0]
 800fa6c:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800fa6e:	687b      	ldr	r3, [r7, #4]
 800fa70:	33d8      	adds	r3, #216	; 0xd8
 800fa72:	4a99      	ldr	r2, [pc, #612]	; (800fcd8 <createProblem+0xee30>)
 800fa74:	461c      	mov	r4, r3
 800fa76:	4613      	mov	r3, r2
 800fa78:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fa7a:	6020      	str	r0, [r4, #0]
 800fa7c:	6061      	str	r1, [r4, #4]
 800fa7e:	60a2      	str	r2, [r4, #8]
 800fa80:	881b      	ldrh	r3, [r3, #0]
 800fa82:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 800fa84:	687b      	ldr	r3, [r7, #4]
 800fa86:	33cc      	adds	r3, #204	; 0xcc
 800fa88:	4a94      	ldr	r2, [pc, #592]	; (800fcdc <createProblem+0xee34>)
 800fa8a:	6810      	ldr	r0, [r2, #0]
 800fa8c:	6018      	str	r0, [r3, #0]
			break;
 800fa8e:	f00a bf51 	b.w	801a934 <createProblem+0x19a8c>
		case 507 :
			strcpy(p->name,"ENRON");
 800fa92:	687b      	ldr	r3, [r7, #4]
 800fa94:	337c      	adds	r3, #124	; 0x7c
 800fa96:	4a92      	ldr	r2, [pc, #584]	; (800fce0 <createProblem+0xee38>)
 800fa98:	6810      	ldr	r0, [r2, #0]
 800fa9a:	6018      	str	r0, [r3, #0]
 800fa9c:	8892      	ldrh	r2, [r2, #4]
 800fa9e:	809a      	strh	r2, [r3, #4]
			p->moveSize = 7;
 800faa0:	687b      	ldr	r3, [r7, #4]
 800faa2:	2207      	movs	r2, #7
 800faa4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,B,E,B,D");
 800faa6:	687b      	ldr	r3, [r7, #4]
 800faa8:	3340      	adds	r3, #64	; 0x40
 800faaa:	4a8e      	ldr	r2, [pc, #568]	; (800fce4 <createProblem+0xee3c>)
 800faac:	461c      	mov	r4, r3
 800faae:	4613      	mov	r3, r2
 800fab0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fab2:	6020      	str	r0, [r4, #0]
 800fab4:	6061      	str	r1, [r4, #4]
 800fab6:	60a2      	str	r2, [r4, #8]
 800fab8:	881b      	ldrh	r3, [r3, #0]
 800faba:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,9,12,12,15,18");
 800fabc:	687b      	ldr	r3, [r7, #4]
 800fabe:	3304      	adds	r3, #4
 800fac0:	4a89      	ldr	r2, [pc, #548]	; (800fce8 <createProblem+0xee40>)
 800fac2:	461d      	mov	r5, r3
 800fac4:	4614      	mov	r4, r2
 800fac6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800fac8:	6028      	str	r0, [r5, #0]
 800faca:	6069      	str	r1, [r5, #4]
 800facc:	60aa      	str	r2, [r5, #8]
 800face:	60eb      	str	r3, [r5, #12]
 800fad0:	8823      	ldrh	r3, [r4, #0]
 800fad2:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800fad4:	687b      	ldr	r3, [r7, #4]
 800fad6:	33d8      	adds	r3, #216	; 0xd8
 800fad8:	4a7f      	ldr	r2, [pc, #508]	; (800fcd8 <createProblem+0xee30>)
 800fada:	461c      	mov	r4, r3
 800fadc:	4613      	mov	r3, r2
 800fade:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fae0:	6020      	str	r0, [r4, #0]
 800fae2:	6061      	str	r1, [r4, #4]
 800fae4:	60a2      	str	r2, [r4, #8]
 800fae6:	881b      	ldrh	r3, [r3, #0]
 800fae8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 800faea:	687b      	ldr	r3, [r7, #4]
 800faec:	33cc      	adds	r3, #204	; 0xcc
 800faee:	4a7f      	ldr	r2, [pc, #508]	; (800fcec <createProblem+0xee44>)
 800faf0:	8811      	ldrh	r1, [r2, #0]
 800faf2:	7892      	ldrb	r2, [r2, #2]
 800faf4:	8019      	strh	r1, [r3, #0]
 800faf6:	709a      	strb	r2, [r3, #2]
			break;
 800faf8:	f00a bf1c 	b.w	801a934 <createProblem+0x19a8c>
		case 508 :
			strcpy(p->name,"BOCHANPOWER");
 800fafc:	687b      	ldr	r3, [r7, #4]
 800fafe:	337c      	adds	r3, #124	; 0x7c
 800fb00:	4a7b      	ldr	r2, [pc, #492]	; (800fcf0 <createProblem+0xee48>)
 800fb02:	461c      	mov	r4, r3
 800fb04:	4613      	mov	r3, r2
 800fb06:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fb08:	6020      	str	r0, [r4, #0]
 800fb0a:	6061      	str	r1, [r4, #4]
 800fb0c:	60a2      	str	r2, [r4, #8]
			p->moveSize = 5;
 800fb0e:	687b      	ldr	r3, [r7, #4]
 800fb10:	2205      	movs	r2, #5
 800fb12:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,E,G,D");
 800fb14:	687b      	ldr	r3, [r7, #4]
 800fb16:	3340      	adds	r3, #64	; 0x40
 800fb18:	4976      	ldr	r1, [pc, #472]	; (800fcf4 <createProblem+0xee4c>)
 800fb1a:	461a      	mov	r2, r3
 800fb1c:	460b      	mov	r3, r1
 800fb1e:	cb03      	ldmia	r3!, {r0, r1}
 800fb20:	6010      	str	r0, [r2, #0]
 800fb22:	6051      	str	r1, [r2, #4]
 800fb24:	881b      	ldrh	r3, [r3, #0]
 800fb26:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,9,8,14,18");
 800fb28:	687b      	ldr	r3, [r7, #4]
 800fb2a:	3304      	adds	r3, #4
 800fb2c:	4a72      	ldr	r2, [pc, #456]	; (800fcf8 <createProblem+0xee50>)
 800fb2e:	461c      	mov	r4, r3
 800fb30:	4613      	mov	r3, r2
 800fb32:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fb34:	6020      	str	r0, [r4, #0]
 800fb36:	6061      	str	r1, [r4, #4]
 800fb38:	60a2      	str	r2, [r4, #8]
			strcpy(p->startFinish, "s,d,d,d,e");
 800fb3a:	687b      	ldr	r3, [r7, #4]
 800fb3c:	33d8      	adds	r3, #216	; 0xd8
 800fb3e:	496f      	ldr	r1, [pc, #444]	; (800fcfc <createProblem+0xee54>)
 800fb40:	461a      	mov	r2, r3
 800fb42:	460b      	mov	r3, r1
 800fb44:	cb03      	ldmia	r3!, {r0, r1}
 800fb46:	6010      	str	r0, [r2, #0]
 800fb48:	6051      	str	r1, [r2, #4]
 800fb4a:	881b      	ldrh	r3, [r3, #0]
 800fb4c:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 800fb4e:	687b      	ldr	r3, [r7, #4]
 800fb50:	33cc      	adds	r3, #204	; 0xcc
 800fb52:	4a6b      	ldr	r2, [pc, #428]	; (800fd00 <createProblem+0xee58>)
 800fb54:	6810      	ldr	r0, [r2, #0]
 800fb56:	6018      	str	r0, [r3, #0]
			break;
 800fb58:	f00a beec 	b.w	801a934 <createProblem+0x19a8c>
		case 509 :
			strcpy(p->name,"FROGGERTON GOES TO SCHOOL");
 800fb5c:	687b      	ldr	r3, [r7, #4]
 800fb5e:	337c      	adds	r3, #124	; 0x7c
 800fb60:	4a68      	ldr	r2, [pc, #416]	; (800fd04 <createProblem+0xee5c>)
 800fb62:	461d      	mov	r5, r3
 800fb64:	4614      	mov	r4, r2
 800fb66:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800fb68:	6028      	str	r0, [r5, #0]
 800fb6a:	6069      	str	r1, [r5, #4]
 800fb6c:	60aa      	str	r2, [r5, #8]
 800fb6e:	60eb      	str	r3, [r5, #12]
 800fb70:	cc03      	ldmia	r4!, {r0, r1}
 800fb72:	6128      	str	r0, [r5, #16]
 800fb74:	6169      	str	r1, [r5, #20]
 800fb76:	8823      	ldrh	r3, [r4, #0]
 800fb78:	832b      	strh	r3, [r5, #24]
			p->moveSize = 6;
 800fb7a:	687b      	ldr	r3, [r7, #4]
 800fb7c:	2206      	movs	r2, #6
 800fb7e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,D,C,A,A");
 800fb80:	687b      	ldr	r3, [r7, #4]
 800fb82:	3340      	adds	r3, #64	; 0x40
 800fb84:	4a60      	ldr	r2, [pc, #384]	; (800fd08 <createProblem+0xee60>)
 800fb86:	461c      	mov	r4, r3
 800fb88:	4613      	mov	r3, r2
 800fb8a:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fb8c:	6020      	str	r0, [r4, #0]
 800fb8e:	6061      	str	r1, [r4, #4]
 800fb90:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,11,13,14,18");
 800fb92:	687b      	ldr	r3, [r7, #4]
 800fb94:	3304      	adds	r3, #4
 800fb96:	4a5d      	ldr	r2, [pc, #372]	; (800fd0c <createProblem+0xee64>)
 800fb98:	461c      	mov	r4, r3
 800fb9a:	4615      	mov	r5, r2
 800fb9c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800fb9e:	6020      	str	r0, [r4, #0]
 800fba0:	6061      	str	r1, [r4, #4]
 800fba2:	60a2      	str	r2, [r4, #8]
 800fba4:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800fba6:	687b      	ldr	r3, [r7, #4]
 800fba8:	33d8      	adds	r3, #216	; 0xd8
 800fbaa:	4a59      	ldr	r2, [pc, #356]	; (800fd10 <createProblem+0xee68>)
 800fbac:	461c      	mov	r4, r3
 800fbae:	4613      	mov	r3, r2
 800fbb0:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fbb2:	6020      	str	r0, [r4, #0]
 800fbb4:	6061      	str	r1, [r4, #4]
 800fbb6:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 800fbb8:	687b      	ldr	r3, [r7, #4]
 800fbba:	33cc      	adds	r3, #204	; 0xcc
 800fbbc:	4a42      	ldr	r2, [pc, #264]	; (800fcc8 <createProblem+0xee20>)
 800fbbe:	6810      	ldr	r0, [r2, #0]
 800fbc0:	6018      	str	r0, [r3, #0]
			break;
 800fbc2:	f00a beb7 	b.w	801a934 <createProblem+0x19a8c>
		case 51 :
			strcpy(p->name,"BLACK HOLE");
 800fbc6:	687b      	ldr	r3, [r7, #4]
 800fbc8:	337c      	adds	r3, #124	; 0x7c
 800fbca:	4952      	ldr	r1, [pc, #328]	; (800fd14 <createProblem+0xee6c>)
 800fbcc:	461a      	mov	r2, r3
 800fbce:	460b      	mov	r3, r1
 800fbd0:	cb03      	ldmia	r3!, {r0, r1}
 800fbd2:	6010      	str	r0, [r2, #0]
 800fbd4:	6051      	str	r1, [r2, #4]
 800fbd6:	8819      	ldrh	r1, [r3, #0]
 800fbd8:	789b      	ldrb	r3, [r3, #2]
 800fbda:	8111      	strh	r1, [r2, #8]
 800fbdc:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 800fbde:	687b      	ldr	r3, [r7, #4]
 800fbe0:	2207      	movs	r2, #7
 800fbe2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,I,J,G,G,D");
 800fbe4:	687b      	ldr	r3, [r7, #4]
 800fbe6:	3340      	adds	r3, #64	; 0x40
 800fbe8:	4a4b      	ldr	r2, [pc, #300]	; (800fd18 <createProblem+0xee70>)
 800fbea:	461c      	mov	r4, r3
 800fbec:	4613      	mov	r3, r2
 800fbee:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fbf0:	6020      	str	r0, [r4, #0]
 800fbf2:	6061      	str	r1, [r4, #4]
 800fbf4:	60a2      	str	r2, [r4, #8]
 800fbf6:	881b      	ldrh	r3, [r3, #0]
 800fbf8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,10,13,15,17,18");
 800fbfa:	687b      	ldr	r3, [r7, #4]
 800fbfc:	3304      	adds	r3, #4
 800fbfe:	4a47      	ldr	r2, [pc, #284]	; (800fd1c <createProblem+0xee74>)
 800fc00:	461d      	mov	r5, r3
 800fc02:	4614      	mov	r4, r2
 800fc04:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800fc06:	6028      	str	r0, [r5, #0]
 800fc08:	6069      	str	r1, [r5, #4]
 800fc0a:	60aa      	str	r2, [r5, #8]
 800fc0c:	60eb      	str	r3, [r5, #12]
 800fc0e:	8823      	ldrh	r3, [r4, #0]
 800fc10:	78a2      	ldrb	r2, [r4, #2]
 800fc12:	822b      	strh	r3, [r5, #16]
 800fc14:	4613      	mov	r3, r2
 800fc16:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800fc18:	687b      	ldr	r3, [r7, #4]
 800fc1a:	33d8      	adds	r3, #216	; 0xd8
 800fc1c:	4a40      	ldr	r2, [pc, #256]	; (800fd20 <createProblem+0xee78>)
 800fc1e:	461c      	mov	r4, r3
 800fc20:	4613      	mov	r3, r2
 800fc22:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fc24:	6020      	str	r0, [r4, #0]
 800fc26:	6061      	str	r1, [r4, #4]
 800fc28:	60a2      	str	r2, [r4, #8]
 800fc2a:	881b      	ldrh	r3, [r3, #0]
 800fc2c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800fc2e:	687b      	ldr	r3, [r7, #4]
 800fc30:	33cc      	adds	r3, #204	; 0xcc
 800fc32:	4a25      	ldr	r2, [pc, #148]	; (800fcc8 <createProblem+0xee20>)
 800fc34:	6810      	ldr	r0, [r2, #0]
 800fc36:	6018      	str	r0, [r3, #0]
			break;
 800fc38:	f00a be7c 	b.w	801a934 <createProblem+0x19a8c>
		case 510 :
			strcpy(p->name,"FAMILY MAN");
 800fc3c:	687b      	ldr	r3, [r7, #4]
 800fc3e:	337c      	adds	r3, #124	; 0x7c
 800fc40:	4938      	ldr	r1, [pc, #224]	; (800fd24 <createProblem+0xee7c>)
 800fc42:	461a      	mov	r2, r3
 800fc44:	460b      	mov	r3, r1
 800fc46:	cb03      	ldmia	r3!, {r0, r1}
 800fc48:	6010      	str	r0, [r2, #0]
 800fc4a:	6051      	str	r1, [r2, #4]
 800fc4c:	8819      	ldrh	r1, [r3, #0]
 800fc4e:	789b      	ldrb	r3, [r3, #2]
 800fc50:	8111      	strh	r1, [r2, #8]
 800fc52:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 800fc54:	687b      	ldr	r3, [r7, #4]
 800fc56:	2207      	movs	r2, #7
 800fc58:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,D,E,E,H,I,J");
 800fc5a:	687b      	ldr	r3, [r7, #4]
 800fc5c:	3340      	adds	r3, #64	; 0x40
 800fc5e:	4a32      	ldr	r2, [pc, #200]	; (800fd28 <createProblem+0xee80>)
 800fc60:	461c      	mov	r4, r3
 800fc62:	4613      	mov	r3, r2
 800fc64:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fc66:	6020      	str	r0, [r4, #0]
 800fc68:	6061      	str	r1, [r4, #4]
 800fc6a:	60a2      	str	r2, [r4, #8]
 800fc6c:	881b      	ldrh	r3, [r3, #0]
 800fc6e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"15,18,12,14,5,10,5");
 800fc70:	687b      	ldr	r3, [r7, #4]
 800fc72:	3304      	adds	r3, #4
 800fc74:	4a2d      	ldr	r2, [pc, #180]	; (800fd2c <createProblem+0xee84>)
 800fc76:	461d      	mov	r5, r3
 800fc78:	4614      	mov	r4, r2
 800fc7a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800fc7c:	6028      	str	r0, [r5, #0]
 800fc7e:	6069      	str	r1, [r5, #4]
 800fc80:	60aa      	str	r2, [r5, #8]
 800fc82:	60eb      	str	r3, [r5, #12]
 800fc84:	8823      	ldrh	r3, [r4, #0]
 800fc86:	78a2      	ldrb	r2, [r4, #2]
 800fc88:	822b      	strh	r3, [r5, #16]
 800fc8a:	4613      	mov	r3, r2
 800fc8c:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "d,e,d,d,s,d,s");
 800fc8e:	687b      	ldr	r3, [r7, #4]
 800fc90:	33d8      	adds	r3, #216	; 0xd8
 800fc92:	4a27      	ldr	r2, [pc, #156]	; (800fd30 <createProblem+0xee88>)
 800fc94:	461c      	mov	r4, r3
 800fc96:	4613      	mov	r3, r2
 800fc98:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fc9a:	6020      	str	r0, [r4, #0]
 800fc9c:	6061      	str	r1, [r4, #4]
 800fc9e:	60a2      	str	r2, [r4, #8]
 800fca0:	881b      	ldrh	r3, [r3, #0]
 800fca2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 800fca4:	687b      	ldr	r3, [r7, #4]
 800fca6:	33cc      	adds	r3, #204	; 0xcc
 800fca8:	4a22      	ldr	r2, [pc, #136]	; (800fd34 <createProblem+0xee8c>)
 800fcaa:	8811      	ldrh	r1, [r2, #0]
 800fcac:	7892      	ldrb	r2, [r2, #2]
 800fcae:	8019      	strh	r1, [r3, #0]
 800fcb0:	709a      	strb	r2, [r3, #2]
			break;
 800fcb2:	f00a be3f 	b.w	801a934 <createProblem+0x19a8c>
 800fcb6:	bf00      	nop
 800fcb8:	08025b2c 	.word	0x08025b2c
 800fcbc:	08025b34 	.word	0x08025b34
 800fcc0:	08025b40 	.word	0x08025b40
 800fcc4:	08021748 	.word	0x08021748
 800fcc8:	08020830 	.word	0x08020830
 800fccc:	08025b4c 	.word	0x08025b4c
 800fcd0:	08025b5c 	.word	0x08025b5c
 800fcd4:	08025b6c 	.word	0x08025b6c
 800fcd8:	08020820 	.word	0x08020820
 800fcdc:	08020928 	.word	0x08020928
 800fce0:	08025b80 	.word	0x08025b80
 800fce4:	08025b88 	.word	0x08025b88
 800fce8:	08025b98 	.word	0x08025b98
 800fcec:	08020874 	.word	0x08020874
 800fcf0:	08025bac 	.word	0x08025bac
 800fcf4:	08025bb8 	.word	0x08025bb8
 800fcf8:	08025bc4 	.word	0x08025bc4
 800fcfc:	080208a0 	.word	0x080208a0
 800fd00:	080209a4 	.word	0x080209a4
 800fd04:	08025bd0 	.word	0x08025bd0
 800fd08:	08025bec 	.word	0x08025bec
 800fd0c:	08025bf8 	.word	0x08025bf8
 800fd10:	0802091c 	.word	0x0802091c
 800fd14:	08025c08 	.word	0x08025c08
 800fd18:	08025c14 	.word	0x08025c14
 800fd1c:	08025c24 	.word	0x08025c24
 800fd20:	08020a14 	.word	0x08020a14
 800fd24:	08025c38 	.word	0x08025c38
 800fd28:	08025c44 	.word	0x08025c44
 800fd2c:	08025c54 	.word	0x08025c54
 800fd30:	08025c68 	.word	0x08025c68
 800fd34:	080208f0 	.word	0x080208f0
		case 511 :
			strcpy(p->name,"TEST111");
 800fd38:	687b      	ldr	r3, [r7, #4]
 800fd3a:	337c      	adds	r3, #124	; 0x7c
 800fd3c:	49b2      	ldr	r1, [pc, #712]	; (8010008 <createProblem+0xf160>)
 800fd3e:	461a      	mov	r2, r3
 800fd40:	460b      	mov	r3, r1
 800fd42:	cb03      	ldmia	r3!, {r0, r1}
 800fd44:	6010      	str	r0, [r2, #0]
 800fd46:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 800fd48:	687b      	ldr	r3, [r7, #4]
 800fd4a:	2207      	movs	r2, #7
 800fd4c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,H,F,E,D,A");
 800fd4e:	687b      	ldr	r3, [r7, #4]
 800fd50:	3340      	adds	r3, #64	; 0x40
 800fd52:	4aae      	ldr	r2, [pc, #696]	; (801000c <createProblem+0xf164>)
 800fd54:	461c      	mov	r4, r3
 800fd56:	4613      	mov	r3, r2
 800fd58:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fd5a:	6020      	str	r0, [r4, #0]
 800fd5c:	6061      	str	r1, [r4, #4]
 800fd5e:	60a2      	str	r2, [r4, #8]
 800fd60:	881b      	ldrh	r3, [r3, #0]
 800fd62:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,7,8,11,12,15,18");
 800fd64:	687b      	ldr	r3, [r7, #4]
 800fd66:	3304      	adds	r3, #4
 800fd68:	4aa9      	ldr	r2, [pc, #676]	; (8010010 <createProblem+0xf168>)
 800fd6a:	461d      	mov	r5, r3
 800fd6c:	4614      	mov	r4, r2
 800fd6e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800fd70:	6028      	str	r0, [r5, #0]
 800fd72:	6069      	str	r1, [r5, #4]
 800fd74:	60aa      	str	r2, [r5, #8]
 800fd76:	60eb      	str	r3, [r5, #12]
 800fd78:	8823      	ldrh	r3, [r4, #0]
 800fd7a:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800fd7c:	687b      	ldr	r3, [r7, #4]
 800fd7e:	33d8      	adds	r3, #216	; 0xd8
 800fd80:	4aa4      	ldr	r2, [pc, #656]	; (8010014 <createProblem+0xf16c>)
 800fd82:	461c      	mov	r4, r3
 800fd84:	4613      	mov	r3, r2
 800fd86:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fd88:	6020      	str	r0, [r4, #0]
 800fd8a:	6061      	str	r1, [r4, #4]
 800fd8c:	60a2      	str	r2, [r4, #8]
 800fd8e:	881b      	ldrh	r3, [r3, #0]
 800fd90:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 800fd92:	687b      	ldr	r3, [r7, #4]
 800fd94:	33cc      	adds	r3, #204	; 0xcc
 800fd96:	4aa0      	ldr	r2, [pc, #640]	; (8010018 <createProblem+0xf170>)
 800fd98:	8811      	ldrh	r1, [r2, #0]
 800fd9a:	7892      	ldrb	r2, [r2, #2]
 800fd9c:	8019      	strh	r1, [r3, #0]
 800fd9e:	709a      	strb	r2, [r3, #2]
			break;
 800fda0:	f00a bdc8 	b.w	801a934 <createProblem+0x19a8c>
		case 512 :
			strcpy(p->name,"PEAS AND GRAVY");
 800fda4:	687b      	ldr	r3, [r7, #4]
 800fda6:	337c      	adds	r3, #124	; 0x7c
 800fda8:	4a9c      	ldr	r2, [pc, #624]	; (801001c <createProblem+0xf174>)
 800fdaa:	461c      	mov	r4, r3
 800fdac:	4613      	mov	r3, r2
 800fdae:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fdb0:	6020      	str	r0, [r4, #0]
 800fdb2:	6061      	str	r1, [r4, #4]
 800fdb4:	60a2      	str	r2, [r4, #8]
 800fdb6:	881a      	ldrh	r2, [r3, #0]
 800fdb8:	789b      	ldrb	r3, [r3, #2]
 800fdba:	81a2      	strh	r2, [r4, #12]
 800fdbc:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 6;
 800fdbe:	687b      	ldr	r3, [r7, #4]
 800fdc0:	2206      	movs	r2, #6
 800fdc2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,J,H,C,D,A");
 800fdc4:	687b      	ldr	r3, [r7, #4]
 800fdc6:	3340      	adds	r3, #64	; 0x40
 800fdc8:	4a95      	ldr	r2, [pc, #596]	; (8010020 <createProblem+0xf178>)
 800fdca:	461c      	mov	r4, r3
 800fdcc:	4613      	mov	r3, r2
 800fdce:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fdd0:	6020      	str	r0, [r4, #0]
 800fdd2:	6061      	str	r1, [r4, #4]
 800fdd4:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,10,13,15,18");
 800fdd6:	687b      	ldr	r3, [r7, #4]
 800fdd8:	3304      	adds	r3, #4
 800fdda:	4a92      	ldr	r2, [pc, #584]	; (8010024 <createProblem+0xf17c>)
 800fddc:	461c      	mov	r4, r3
 800fdde:	4615      	mov	r5, r2
 800fde0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800fde2:	6020      	str	r0, [r4, #0]
 800fde4:	6061      	str	r1, [r4, #4]
 800fde6:	60a2      	str	r2, [r4, #8]
 800fde8:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 800fdea:	687b      	ldr	r3, [r7, #4]
 800fdec:	33d8      	adds	r3, #216	; 0xd8
 800fdee:	4a8e      	ldr	r2, [pc, #568]	; (8010028 <createProblem+0xf180>)
 800fdf0:	461c      	mov	r4, r3
 800fdf2:	4613      	mov	r3, r2
 800fdf4:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fdf6:	6020      	str	r0, [r4, #0]
 800fdf8:	6061      	str	r1, [r4, #4]
 800fdfa:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 800fdfc:	687b      	ldr	r3, [r7, #4]
 800fdfe:	33cc      	adds	r3, #204	; 0xcc
 800fe00:	4a85      	ldr	r2, [pc, #532]	; (8010018 <createProblem+0xf170>)
 800fe02:	8811      	ldrh	r1, [r2, #0]
 800fe04:	7892      	ldrb	r2, [r2, #2]
 800fe06:	8019      	strh	r1, [r3, #0]
 800fe08:	709a      	strb	r2, [r3, #2]
			break;
 800fe0a:	f00a bd93 	b.w	801a934 <createProblem+0x19a8c>
		case 513 :
			strcpy(p->name,"THE LAST PEA");
 800fe0e:	687b      	ldr	r3, [r7, #4]
 800fe10:	337c      	adds	r3, #124	; 0x7c
 800fe12:	4a86      	ldr	r2, [pc, #536]	; (801002c <createProblem+0xf184>)
 800fe14:	461c      	mov	r4, r3
 800fe16:	4613      	mov	r3, r2
 800fe18:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fe1a:	6020      	str	r0, [r4, #0]
 800fe1c:	6061      	str	r1, [r4, #4]
 800fe1e:	60a2      	str	r2, [r4, #8]
 800fe20:	781b      	ldrb	r3, [r3, #0]
 800fe22:	7323      	strb	r3, [r4, #12]
			p->moveSize = 7;
 800fe24:	687b      	ldr	r3, [r7, #4]
 800fe26:	2207      	movs	r2, #7
 800fe28:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,E,B,E,C,D,A");
 800fe2a:	687b      	ldr	r3, [r7, #4]
 800fe2c:	3340      	adds	r3, #64	; 0x40
 800fe2e:	4a80      	ldr	r2, [pc, #512]	; (8010030 <createProblem+0xf188>)
 800fe30:	461c      	mov	r4, r3
 800fe32:	4613      	mov	r3, r2
 800fe34:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fe36:	6020      	str	r0, [r4, #0]
 800fe38:	6061      	str	r1, [r4, #4]
 800fe3a:	60a2      	str	r2, [r4, #8]
 800fe3c:	881b      	ldrh	r3, [r3, #0]
 800fe3e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,8,10,12,13,15,18");
 800fe40:	687b      	ldr	r3, [r7, #4]
 800fe42:	3304      	adds	r3, #4
 800fe44:	4a7b      	ldr	r2, [pc, #492]	; (8010034 <createProblem+0xf18c>)
 800fe46:	461d      	mov	r5, r3
 800fe48:	4614      	mov	r4, r2
 800fe4a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800fe4c:	6028      	str	r0, [r5, #0]
 800fe4e:	6069      	str	r1, [r5, #4]
 800fe50:	60aa      	str	r2, [r5, #8]
 800fe52:	60eb      	str	r3, [r5, #12]
 800fe54:	8823      	ldrh	r3, [r4, #0]
 800fe56:	78a2      	ldrb	r2, [r4, #2]
 800fe58:	822b      	strh	r3, [r5, #16]
 800fe5a:	4613      	mov	r3, r2
 800fe5c:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 800fe5e:	687b      	ldr	r3, [r7, #4]
 800fe60:	33d8      	adds	r3, #216	; 0xd8
 800fe62:	4a6c      	ldr	r2, [pc, #432]	; (8010014 <createProblem+0xf16c>)
 800fe64:	461c      	mov	r4, r3
 800fe66:	4613      	mov	r3, r2
 800fe68:	cb07      	ldmia	r3!, {r0, r1, r2}
 800fe6a:	6020      	str	r0, [r4, #0]
 800fe6c:	6061      	str	r1, [r4, #4]
 800fe6e:	60a2      	str	r2, [r4, #8]
 800fe70:	881b      	ldrh	r3, [r3, #0]
 800fe72:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 800fe74:	687b      	ldr	r3, [r7, #4]
 800fe76:	33cc      	adds	r3, #204	; 0xcc
 800fe78:	4a6f      	ldr	r2, [pc, #444]	; (8010038 <createProblem+0xf190>)
 800fe7a:	6810      	ldr	r0, [r2, #0]
 800fe7c:	6018      	str	r0, [r3, #0]
			break;
 800fe7e:	f00a bd59 	b.w	801a934 <createProblem+0x19a8c>
		case 514 :
			strcpy(p->name,"NUN");
 800fe82:	687b      	ldr	r3, [r7, #4]
 800fe84:	337c      	adds	r3, #124	; 0x7c
 800fe86:	4a6d      	ldr	r2, [pc, #436]	; (801003c <createProblem+0xf194>)
 800fe88:	6810      	ldr	r0, [r2, #0]
 800fe8a:	6018      	str	r0, [r3, #0]
			p->moveSize = 4;
 800fe8c:	687b      	ldr	r3, [r7, #4]
 800fe8e:	2204      	movs	r2, #4
 800fe90:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,C,D");
 800fe92:	687b      	ldr	r3, [r7, #4]
 800fe94:	3340      	adds	r3, #64	; 0x40
 800fe96:	496a      	ldr	r1, [pc, #424]	; (8010040 <createProblem+0xf198>)
 800fe98:	461a      	mov	r2, r3
 800fe9a:	460b      	mov	r3, r1
 800fe9c:	cb03      	ldmia	r3!, {r0, r1}
 800fe9e:	6010      	str	r0, [r2, #0]
 800fea0:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"5,8,13,18");
 800fea2:	687b      	ldr	r3, [r7, #4]
 800fea4:	3304      	adds	r3, #4
 800fea6:	4967      	ldr	r1, [pc, #412]	; (8010044 <createProblem+0xf19c>)
 800fea8:	461a      	mov	r2, r3
 800feaa:	460b      	mov	r3, r1
 800feac:	cb03      	ldmia	r3!, {r0, r1}
 800feae:	6010      	str	r0, [r2, #0]
 800feb0:	6051      	str	r1, [r2, #4]
 800feb2:	881b      	ldrh	r3, [r3, #0]
 800feb4:	8113      	strh	r3, [r2, #8]
			strcpy(p->startFinish, "s,d,d,e");
 800feb6:	687b      	ldr	r3, [r7, #4]
 800feb8:	33d8      	adds	r3, #216	; 0xd8
 800feba:	4963      	ldr	r1, [pc, #396]	; (8010048 <createProblem+0xf1a0>)
 800febc:	461a      	mov	r2, r3
 800febe:	460b      	mov	r3, r1
 800fec0:	cb03      	ldmia	r3!, {r0, r1}
 800fec2:	6010      	str	r0, [r2, #0]
 800fec4:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7A+");
 800fec6:	687b      	ldr	r3, [r7, #4]
 800fec8:	33cc      	adds	r3, #204	; 0xcc
 800feca:	4a60      	ldr	r2, [pc, #384]	; (801004c <createProblem+0xf1a4>)
 800fecc:	6810      	ldr	r0, [r2, #0]
 800fece:	6018      	str	r0, [r3, #0]
			break;
 800fed0:	f00a bd30 	b.w	801a934 <createProblem+0x19a8c>
		case 515 :
			strcpy(p->name,"FUNNY");
 800fed4:	687b      	ldr	r3, [r7, #4]
 800fed6:	337c      	adds	r3, #124	; 0x7c
 800fed8:	4a5d      	ldr	r2, [pc, #372]	; (8010050 <createProblem+0xf1a8>)
 800feda:	6810      	ldr	r0, [r2, #0]
 800fedc:	6018      	str	r0, [r3, #0]
 800fede:	8892      	ldrh	r2, [r2, #4]
 800fee0:	809a      	strh	r2, [r3, #4]
			p->moveSize = 5;
 800fee2:	687b      	ldr	r3, [r7, #4]
 800fee4:	2205      	movs	r2, #5
 800fee6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,I,G,I");
 800fee8:	687b      	ldr	r3, [r7, #4]
 800feea:	3340      	adds	r3, #64	; 0x40
 800feec:	4959      	ldr	r1, [pc, #356]	; (8010054 <createProblem+0xf1ac>)
 800feee:	461a      	mov	r2, r3
 800fef0:	460b      	mov	r3, r1
 800fef2:	cb03      	ldmia	r3!, {r0, r1}
 800fef4:	6010      	str	r0, [r2, #0]
 800fef6:	6051      	str	r1, [r2, #4]
 800fef8:	881b      	ldrh	r3, [r3, #0]
 800fefa:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,7,14,18");
 800fefc:	687b      	ldr	r3, [r7, #4]
 800fefe:	3304      	adds	r3, #4
 800ff00:	4a55      	ldr	r2, [pc, #340]	; (8010058 <createProblem+0xf1b0>)
 800ff02:	461c      	mov	r4, r3
 800ff04:	4613      	mov	r3, r2
 800ff06:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ff08:	6020      	str	r0, [r4, #0]
 800ff0a:	6061      	str	r1, [r4, #4]
 800ff0c:	60a2      	str	r2, [r4, #8]
			strcpy(p->startFinish, "s,d,d,d,e");
 800ff0e:	687b      	ldr	r3, [r7, #4]
 800ff10:	33d8      	adds	r3, #216	; 0xd8
 800ff12:	4952      	ldr	r1, [pc, #328]	; (801005c <createProblem+0xf1b4>)
 800ff14:	461a      	mov	r2, r3
 800ff16:	460b      	mov	r3, r1
 800ff18:	cb03      	ldmia	r3!, {r0, r1}
 800ff1a:	6010      	str	r0, [r2, #0]
 800ff1c:	6051      	str	r1, [r2, #4]
 800ff1e:	881b      	ldrh	r3, [r3, #0]
 800ff20:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7C");
 800ff22:	687b      	ldr	r3, [r7, #4]
 800ff24:	33cc      	adds	r3, #204	; 0xcc
 800ff26:	4a4e      	ldr	r2, [pc, #312]	; (8010060 <createProblem+0xf1b8>)
 800ff28:	8811      	ldrh	r1, [r2, #0]
 800ff2a:	7892      	ldrb	r2, [r2, #2]
 800ff2c:	8019      	strh	r1, [r3, #0]
 800ff2e:	709a      	strb	r2, [r3, #2]
			break;
 800ff30:	f00a bd00 	b.w	801a934 <createProblem+0x19a8c>
		case 516 :
			strcpy(p->name,"I'M RON BURGUNDY?");
 800ff34:	687b      	ldr	r3, [r7, #4]
 800ff36:	337c      	adds	r3, #124	; 0x7c
 800ff38:	4a4a      	ldr	r2, [pc, #296]	; (8010064 <createProblem+0xf1bc>)
 800ff3a:	461d      	mov	r5, r3
 800ff3c:	4614      	mov	r4, r2
 800ff3e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ff40:	6028      	str	r0, [r5, #0]
 800ff42:	6069      	str	r1, [r5, #4]
 800ff44:	60aa      	str	r2, [r5, #8]
 800ff46:	60eb      	str	r3, [r5, #12]
 800ff48:	8823      	ldrh	r3, [r4, #0]
 800ff4a:	822b      	strh	r3, [r5, #16]
			p->moveSize = 6;
 800ff4c:	687b      	ldr	r3, [r7, #4]
 800ff4e:	2206      	movs	r2, #6
 800ff50:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,E,F,D,A");
 800ff52:	687b      	ldr	r3, [r7, #4]
 800ff54:	3340      	adds	r3, #64	; 0x40
 800ff56:	4a44      	ldr	r2, [pc, #272]	; (8010068 <createProblem+0xf1c0>)
 800ff58:	461c      	mov	r4, r3
 800ff5a:	4613      	mov	r3, r2
 800ff5c:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ff5e:	6020      	str	r0, [r4, #0]
 800ff60:	6061      	str	r1, [r4, #4]
 800ff62:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,9,12,13,15,18");
 800ff64:	687b      	ldr	r3, [r7, #4]
 800ff66:	3304      	adds	r3, #4
 800ff68:	4a40      	ldr	r2, [pc, #256]	; (801006c <createProblem+0xf1c4>)
 800ff6a:	461c      	mov	r4, r3
 800ff6c:	4615      	mov	r5, r2
 800ff6e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 800ff70:	6020      	str	r0, [r4, #0]
 800ff72:	6061      	str	r1, [r4, #4]
 800ff74:	60a2      	str	r2, [r4, #8]
 800ff76:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 800ff78:	687b      	ldr	r3, [r7, #4]
 800ff7a:	33d8      	adds	r3, #216	; 0xd8
 800ff7c:	4a3c      	ldr	r2, [pc, #240]	; (8010070 <createProblem+0xf1c8>)
 800ff7e:	461c      	mov	r4, r3
 800ff80:	4613      	mov	r3, r2
 800ff82:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ff84:	6020      	str	r0, [r4, #0]
 800ff86:	6061      	str	r1, [r4, #4]
 800ff88:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 800ff8a:	687b      	ldr	r3, [r7, #4]
 800ff8c:	33cc      	adds	r3, #204	; 0xcc
 800ff8e:	4a39      	ldr	r2, [pc, #228]	; (8010074 <createProblem+0xf1cc>)
 800ff90:	6810      	ldr	r0, [r2, #0]
 800ff92:	6018      	str	r0, [r3, #0]
			break;
 800ff94:	f00a bcce 	b.w	801a934 <createProblem+0x19a8c>
		case 517 :
			strcpy(p->name,"몰라여");
 800ff98:	687b      	ldr	r3, [r7, #4]
 800ff9a:	337c      	adds	r3, #124	; 0x7c
 800ff9c:	4936      	ldr	r1, [pc, #216]	; (8010078 <createProblem+0xf1d0>)
 800ff9e:	461a      	mov	r2, r3
 800ffa0:	460b      	mov	r3, r1
 800ffa2:	cb03      	ldmia	r3!, {r0, r1}
 800ffa4:	6010      	str	r0, [r2, #0]
 800ffa6:	6051      	str	r1, [r2, #4]
 800ffa8:	881b      	ldrh	r3, [r3, #0]
 800ffaa:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 800ffac:	687b      	ldr	r3, [r7, #4]
 800ffae:	2207      	movs	r2, #7
 800ffb0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,C,A,G,C,E,I");
 800ffb2:	687b      	ldr	r3, [r7, #4]
 800ffb4:	3340      	adds	r3, #64	; 0x40
 800ffb6:	4a31      	ldr	r2, [pc, #196]	; (801007c <createProblem+0xf1d4>)
 800ffb8:	461c      	mov	r4, r3
 800ffba:	4613      	mov	r3, r2
 800ffbc:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ffbe:	6020      	str	r0, [r4, #0]
 800ffc0:	6061      	str	r1, [r4, #4]
 800ffc2:	60a2      	str	r2, [r4, #8]
 800ffc4:	881b      	ldrh	r3, [r3, #0]
 800ffc6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,9,9,13,16,18");
 800ffc8:	687b      	ldr	r3, [r7, #4]
 800ffca:	3304      	adds	r3, #4
 800ffcc:	4a2c      	ldr	r2, [pc, #176]	; (8010080 <createProblem+0xf1d8>)
 800ffce:	461d      	mov	r5, r3
 800ffd0:	4614      	mov	r4, r2
 800ffd2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 800ffd4:	6028      	str	r0, [r5, #0]
 800ffd6:	6069      	str	r1, [r5, #4]
 800ffd8:	60aa      	str	r2, [r5, #8]
 800ffda:	60eb      	str	r3, [r5, #12]
 800ffdc:	7823      	ldrb	r3, [r4, #0]
 800ffde:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 800ffe0:	687b      	ldr	r3, [r7, #4]
 800ffe2:	33d8      	adds	r3, #216	; 0xd8
 800ffe4:	4a27      	ldr	r2, [pc, #156]	; (8010084 <createProblem+0xf1dc>)
 800ffe6:	461c      	mov	r4, r3
 800ffe8:	4613      	mov	r3, r2
 800ffea:	cb07      	ldmia	r3!, {r0, r1, r2}
 800ffec:	6020      	str	r0, [r4, #0]
 800ffee:	6061      	str	r1, [r4, #4]
 800fff0:	60a2      	str	r2, [r4, #8]
 800fff2:	881b      	ldrh	r3, [r3, #0]
 800fff4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 800fff6:	687b      	ldr	r3, [r7, #4]
 800fff8:	33cc      	adds	r3, #204	; 0xcc
 800fffa:	4a23      	ldr	r2, [pc, #140]	; (8010088 <createProblem+0xf1e0>)
 800fffc:	8811      	ldrh	r1, [r2, #0]
 800fffe:	7892      	ldrb	r2, [r2, #2]
 8010000:	8019      	strh	r1, [r3, #0]
 8010002:	709a      	strb	r2, [r3, #2]
			break;
 8010004:	f00a bc96 	b.w	801a934 <createProblem+0x19a8c>
 8010008:	08025c78 	.word	0x08025c78
 801000c:	08025c80 	.word	0x08025c80
 8010010:	08025c90 	.word	0x08025c90
 8010014:	08020a14 	.word	0x08020a14
 8010018:	080208f0 	.word	0x080208f0
 801001c:	08025ca4 	.word	0x08025ca4
 8010020:	08025cb4 	.word	0x08025cb4
 8010024:	08025cc0 	.word	0x08025cc0
 8010028:	08020e90 	.word	0x08020e90
 801002c:	08025cd0 	.word	0x08025cd0
 8010030:	08025ce0 	.word	0x08025ce0
 8010034:	08025cf0 	.word	0x08025cf0
 8010038:	08020830 	.word	0x08020830
 801003c:	08025d04 	.word	0x08025d04
 8010040:	08025d08 	.word	0x08025d08
 8010044:	08025d10 	.word	0x08025d10
 8010048:	080215a8 	.word	0x080215a8
 801004c:	080209a4 	.word	0x080209a4
 8010050:	08025d1c 	.word	0x08025d1c
 8010054:	08020d00 	.word	0x08020d00
 8010058:	08025d24 	.word	0x08025d24
 801005c:	080208a0 	.word	0x080208a0
 8010060:	08020b0c 	.word	0x08020b0c
 8010064:	08025d30 	.word	0x08025d30
 8010068:	08025d44 	.word	0x08025d44
 801006c:	08025d50 	.word	0x08025d50
 8010070:	0802091c 	.word	0x0802091c
 8010074:	08020928 	.word	0x08020928
 8010078:	08025d60 	.word	0x08025d60
 801007c:	08025d6c 	.word	0x08025d6c
 8010080:	08025d7c 	.word	0x08025d7c
 8010084:	08020820 	.word	0x08020820
 8010088:	08020874 	.word	0x08020874
		case 518 :
			strcpy(p->name,"SPALLA&AMP;PIATTA");
 801008c:	687b      	ldr	r3, [r7, #4]
 801008e:	337c      	adds	r3, #124	; 0x7c
 8010090:	4abf      	ldr	r2, [pc, #764]	; (8010390 <createProblem+0xf4e8>)
 8010092:	461d      	mov	r5, r3
 8010094:	4614      	mov	r4, r2
 8010096:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010098:	6028      	str	r0, [r5, #0]
 801009a:	6069      	str	r1, [r5, #4]
 801009c:	60aa      	str	r2, [r5, #8]
 801009e:	60eb      	str	r3, [r5, #12]
 80100a0:	8823      	ldrh	r3, [r4, #0]
 80100a2:	822b      	strh	r3, [r5, #16]
			p->moveSize = 7;
 80100a4:	687b      	ldr	r3, [r7, #4]
 80100a6:	2207      	movs	r2, #7
 80100a8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,K,F,G,D,D");
 80100aa:	687b      	ldr	r3, [r7, #4]
 80100ac:	3340      	adds	r3, #64	; 0x40
 80100ae:	4ab9      	ldr	r2, [pc, #740]	; (8010394 <createProblem+0xf4ec>)
 80100b0:	461c      	mov	r4, r3
 80100b2:	4613      	mov	r3, r2
 80100b4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80100b6:	6020      	str	r0, [r4, #0]
 80100b8:	6061      	str	r1, [r4, #4]
 80100ba:	60a2      	str	r2, [r4, #8]
 80100bc:	881b      	ldrh	r3, [r3, #0]
 80100be:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,5,9,11,14,15,18");
 80100c0:	687b      	ldr	r3, [r7, #4]
 80100c2:	3304      	adds	r3, #4
 80100c4:	4ab4      	ldr	r2, [pc, #720]	; (8010398 <createProblem+0xf4f0>)
 80100c6:	461d      	mov	r5, r3
 80100c8:	4614      	mov	r4, r2
 80100ca:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80100cc:	6028      	str	r0, [r5, #0]
 80100ce:	6069      	str	r1, [r5, #4]
 80100d0:	60aa      	str	r2, [r5, #8]
 80100d2:	60eb      	str	r3, [r5, #12]
 80100d4:	8823      	ldrh	r3, [r4, #0]
 80100d6:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 80100d8:	687b      	ldr	r3, [r7, #4]
 80100da:	33d8      	adds	r3, #216	; 0xd8
 80100dc:	4aaf      	ldr	r2, [pc, #700]	; (801039c <createProblem+0xf4f4>)
 80100de:	461c      	mov	r4, r3
 80100e0:	4613      	mov	r3, r2
 80100e2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80100e4:	6020      	str	r0, [r4, #0]
 80100e6:	6061      	str	r1, [r4, #4]
 80100e8:	60a2      	str	r2, [r4, #8]
 80100ea:	881b      	ldrh	r3, [r3, #0]
 80100ec:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 80100ee:	687b      	ldr	r3, [r7, #4]
 80100f0:	33cc      	adds	r3, #204	; 0xcc
 80100f2:	4aab      	ldr	r2, [pc, #684]	; (80103a0 <createProblem+0xf4f8>)
 80100f4:	6810      	ldr	r0, [r2, #0]
 80100f6:	6018      	str	r0, [r3, #0]
			break;
 80100f8:	f00a bc1c 	b.w	801a934 <createProblem+0x19a8c>
		case 519 :
			strcpy(p->name,"SUCK IT ELLIOTT");
 80100fc:	687b      	ldr	r3, [r7, #4]
 80100fe:	337c      	adds	r3, #124	; 0x7c
 8010100:	4aa8      	ldr	r2, [pc, #672]	; (80103a4 <createProblem+0xf4fc>)
 8010102:	461c      	mov	r4, r3
 8010104:	4615      	mov	r5, r2
 8010106:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010108:	6020      	str	r0, [r4, #0]
 801010a:	6061      	str	r1, [r4, #4]
 801010c:	60a2      	str	r2, [r4, #8]
 801010e:	60e3      	str	r3, [r4, #12]
			p->moveSize = 6;
 8010110:	687b      	ldr	r3, [r7, #4]
 8010112:	2206      	movs	r2, #6
 8010114:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,D,D,D");
 8010116:	687b      	ldr	r3, [r7, #4]
 8010118:	3340      	adds	r3, #64	; 0x40
 801011a:	4aa3      	ldr	r2, [pc, #652]	; (80103a8 <createProblem+0xf500>)
 801011c:	461c      	mov	r4, r3
 801011e:	4613      	mov	r3, r2
 8010120:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010122:	6020      	str	r0, [r4, #0]
 8010124:	6061      	str	r1, [r4, #4]
 8010126:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,8,11,15,18");
 8010128:	687b      	ldr	r3, [r7, #4]
 801012a:	3304      	adds	r3, #4
 801012c:	4a9f      	ldr	r2, [pc, #636]	; (80103ac <createProblem+0xf504>)
 801012e:	461c      	mov	r4, r3
 8010130:	4613      	mov	r3, r2
 8010132:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010134:	6020      	str	r0, [r4, #0]
 8010136:	6061      	str	r1, [r4, #4]
 8010138:	60a2      	str	r2, [r4, #8]
 801013a:	881a      	ldrh	r2, [r3, #0]
 801013c:	789b      	ldrb	r3, [r3, #2]
 801013e:	81a2      	strh	r2, [r4, #12]
 8010140:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8010142:	687b      	ldr	r3, [r7, #4]
 8010144:	33d8      	adds	r3, #216	; 0xd8
 8010146:	4a9a      	ldr	r2, [pc, #616]	; (80103b0 <createProblem+0xf508>)
 8010148:	461c      	mov	r4, r3
 801014a:	4613      	mov	r3, r2
 801014c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801014e:	6020      	str	r0, [r4, #0]
 8010150:	6061      	str	r1, [r4, #4]
 8010152:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8010154:	687b      	ldr	r3, [r7, #4]
 8010156:	33cc      	adds	r3, #204	; 0xcc
 8010158:	4a96      	ldr	r2, [pc, #600]	; (80103b4 <createProblem+0xf50c>)
 801015a:	8811      	ldrh	r1, [r2, #0]
 801015c:	7892      	ldrb	r2, [r2, #2]
 801015e:	8019      	strh	r1, [r3, #0]
 8010160:	709a      	strb	r2, [r3, #2]
			break;
 8010162:	f00a bbe7 	b.w	801a934 <createProblem+0x19a8c>
		case 52 :
			strcpy(p->name,"FA");
 8010166:	687b      	ldr	r3, [r7, #4]
 8010168:	337c      	adds	r3, #124	; 0x7c
 801016a:	4a93      	ldr	r2, [pc, #588]	; (80103b8 <createProblem+0xf510>)
 801016c:	8811      	ldrh	r1, [r2, #0]
 801016e:	7892      	ldrb	r2, [r2, #2]
 8010170:	8019      	strh	r1, [r3, #0]
 8010172:	709a      	strb	r2, [r3, #2]
			p->moveSize = 6;
 8010174:	687b      	ldr	r3, [r7, #4]
 8010176:	2206      	movs	r2, #6
 8010178:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,H,E,D");
 801017a:	687b      	ldr	r3, [r7, #4]
 801017c:	3340      	adds	r3, #64	; 0x40
 801017e:	4a8f      	ldr	r2, [pc, #572]	; (80103bc <createProblem+0xf514>)
 8010180:	461c      	mov	r4, r3
 8010182:	4613      	mov	r3, r2
 8010184:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010186:	6020      	str	r0, [r4, #0]
 8010188:	6061      	str	r1, [r4, #4]
 801018a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,9,13,16,18");
 801018c:	687b      	ldr	r3, [r7, #4]
 801018e:	3304      	adds	r3, #4
 8010190:	4a8b      	ldr	r2, [pc, #556]	; (80103c0 <createProblem+0xf518>)
 8010192:	461c      	mov	r4, r3
 8010194:	4613      	mov	r3, r2
 8010196:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010198:	6020      	str	r0, [r4, #0]
 801019a:	6061      	str	r1, [r4, #4]
 801019c:	60a2      	str	r2, [r4, #8]
 801019e:	881a      	ldrh	r2, [r3, #0]
 80101a0:	789b      	ldrb	r3, [r3, #2]
 80101a2:	81a2      	strh	r2, [r4, #12]
 80101a4:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80101a6:	687b      	ldr	r3, [r7, #4]
 80101a8:	33d8      	adds	r3, #216	; 0xd8
 80101aa:	4a86      	ldr	r2, [pc, #536]	; (80103c4 <createProblem+0xf51c>)
 80101ac:	461c      	mov	r4, r3
 80101ae:	4613      	mov	r3, r2
 80101b0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80101b2:	6020      	str	r0, [r4, #0]
 80101b4:	6061      	str	r1, [r4, #4]
 80101b6:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 80101b8:	687b      	ldr	r3, [r7, #4]
 80101ba:	33cc      	adds	r3, #204	; 0xcc
 80101bc:	4a82      	ldr	r2, [pc, #520]	; (80103c8 <createProblem+0xf520>)
 80101be:	6810      	ldr	r0, [r2, #0]
 80101c0:	6018      	str	r0, [r3, #0]
			break;
 80101c2:	f00a bbb7 	b.w	801a934 <createProblem+0x19a8c>
		case 520 :
			strcpy(p->name,"SIRIUS BLACK");
 80101c6:	687b      	ldr	r3, [r7, #4]
 80101c8:	337c      	adds	r3, #124	; 0x7c
 80101ca:	4a80      	ldr	r2, [pc, #512]	; (80103cc <createProblem+0xf524>)
 80101cc:	461c      	mov	r4, r3
 80101ce:	4613      	mov	r3, r2
 80101d0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80101d2:	6020      	str	r0, [r4, #0]
 80101d4:	6061      	str	r1, [r4, #4]
 80101d6:	60a2      	str	r2, [r4, #8]
 80101d8:	781b      	ldrb	r3, [r3, #0]
 80101da:	7323      	strb	r3, [r4, #12]
			p->moveSize = 7;
 80101dc:	687b      	ldr	r3, [r7, #4]
 80101de:	2207      	movs	r2, #7
 80101e0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,H,E,F,J,C,D");
 80101e2:	687b      	ldr	r3, [r7, #4]
 80101e4:	3340      	adds	r3, #64	; 0x40
 80101e6:	4a7a      	ldr	r2, [pc, #488]	; (80103d0 <createProblem+0xf528>)
 80101e8:	461c      	mov	r4, r3
 80101ea:	4613      	mov	r3, r2
 80101ec:	cb07      	ldmia	r3!, {r0, r1, r2}
 80101ee:	6020      	str	r0, [r4, #0]
 80101f0:	6061      	str	r1, [r4, #4]
 80101f2:	60a2      	str	r2, [r4, #8]
 80101f4:	881b      	ldrh	r3, [r3, #0]
 80101f6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,9,11,5,13,18");
 80101f8:	687b      	ldr	r3, [r7, #4]
 80101fa:	3304      	adds	r3, #4
 80101fc:	4a75      	ldr	r2, [pc, #468]	; (80103d4 <createProblem+0xf52c>)
 80101fe:	461d      	mov	r5, r3
 8010200:	4614      	mov	r4, r2
 8010202:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010204:	6028      	str	r0, [r5, #0]
 8010206:	6069      	str	r1, [r5, #4]
 8010208:	60aa      	str	r2, [r5, #8]
 801020a:	60eb      	str	r3, [r5, #12]
 801020c:	7823      	ldrb	r3, [r4, #0]
 801020e:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8010210:	687b      	ldr	r3, [r7, #4]
 8010212:	33d8      	adds	r3, #216	; 0xd8
 8010214:	4a61      	ldr	r2, [pc, #388]	; (801039c <createProblem+0xf4f4>)
 8010216:	461c      	mov	r4, r3
 8010218:	4613      	mov	r3, r2
 801021a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801021c:	6020      	str	r0, [r4, #0]
 801021e:	6061      	str	r1, [r4, #4]
 8010220:	60a2      	str	r2, [r4, #8]
 8010222:	881b      	ldrh	r3, [r3, #0]
 8010224:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8010226:	687b      	ldr	r3, [r7, #4]
 8010228:	33cc      	adds	r3, #204	; 0xcc
 801022a:	4a62      	ldr	r2, [pc, #392]	; (80103b4 <createProblem+0xf50c>)
 801022c:	8811      	ldrh	r1, [r2, #0]
 801022e:	7892      	ldrb	r2, [r2, #2]
 8010230:	8019      	strh	r1, [r3, #0]
 8010232:	709a      	strb	r2, [r3, #2]
			break;
 8010234:	f00a bb7e 	b.w	801a934 <createProblem+0x19a8c>
		case 521 :
			strcpy(p->name,"REAL SIRIUS BLACK");
 8010238:	687b      	ldr	r3, [r7, #4]
 801023a:	337c      	adds	r3, #124	; 0x7c
 801023c:	4a66      	ldr	r2, [pc, #408]	; (80103d8 <createProblem+0xf530>)
 801023e:	461d      	mov	r5, r3
 8010240:	4614      	mov	r4, r2
 8010242:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010244:	6028      	str	r0, [r5, #0]
 8010246:	6069      	str	r1, [r5, #4]
 8010248:	60aa      	str	r2, [r5, #8]
 801024a:	60eb      	str	r3, [r5, #12]
 801024c:	8823      	ldrh	r3, [r4, #0]
 801024e:	822b      	strh	r3, [r5, #16]
			p->moveSize = 6;
 8010250:	687b      	ldr	r3, [r7, #4]
 8010252:	2206      	movs	r2, #6
 8010254:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,E,F,C,D");
 8010256:	687b      	ldr	r3, [r7, #4]
 8010258:	3340      	adds	r3, #64	; 0x40
 801025a:	4a60      	ldr	r2, [pc, #384]	; (80103dc <createProblem+0xf534>)
 801025c:	461c      	mov	r4, r3
 801025e:	4613      	mov	r3, r2
 8010260:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010262:	6020      	str	r0, [r4, #0]
 8010264:	6061      	str	r1, [r4, #4]
 8010266:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,9,11,13,18");
 8010268:	687b      	ldr	r3, [r7, #4]
 801026a:	3304      	adds	r3, #4
 801026c:	4a5c      	ldr	r2, [pc, #368]	; (80103e0 <createProblem+0xf538>)
 801026e:	461c      	mov	r4, r3
 8010270:	4613      	mov	r3, r2
 8010272:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010274:	6020      	str	r0, [r4, #0]
 8010276:	6061      	str	r1, [r4, #4]
 8010278:	60a2      	str	r2, [r4, #8]
 801027a:	881a      	ldrh	r2, [r3, #0]
 801027c:	789b      	ldrb	r3, [r3, #2]
 801027e:	81a2      	strh	r2, [r4, #12]
 8010280:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8010282:	687b      	ldr	r3, [r7, #4]
 8010284:	33d8      	adds	r3, #216	; 0xd8
 8010286:	4a4a      	ldr	r2, [pc, #296]	; (80103b0 <createProblem+0xf508>)
 8010288:	461c      	mov	r4, r3
 801028a:	4613      	mov	r3, r2
 801028c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801028e:	6020      	str	r0, [r4, #0]
 8010290:	6061      	str	r1, [r4, #4]
 8010292:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8010294:	687b      	ldr	r3, [r7, #4]
 8010296:	33cc      	adds	r3, #204	; 0xcc
 8010298:	4a46      	ldr	r2, [pc, #280]	; (80103b4 <createProblem+0xf50c>)
 801029a:	8811      	ldrh	r1, [r2, #0]
 801029c:	7892      	ldrb	r2, [r2, #2]
 801029e:	8019      	strh	r1, [r3, #0]
 80102a0:	709a      	strb	r2, [r3, #2]
			break;
 80102a2:	f00a bb47 	b.w	801a934 <createProblem+0x19a8c>
		case 522 :
			strcpy(p->name,"THE REAL SIRIUS BLACK");
 80102a6:	687b      	ldr	r3, [r7, #4]
 80102a8:	337c      	adds	r3, #124	; 0x7c
 80102aa:	4a4e      	ldr	r2, [pc, #312]	; (80103e4 <createProblem+0xf53c>)
 80102ac:	461d      	mov	r5, r3
 80102ae:	4614      	mov	r4, r2
 80102b0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80102b2:	6028      	str	r0, [r5, #0]
 80102b4:	6069      	str	r1, [r5, #4]
 80102b6:	60aa      	str	r2, [r5, #8]
 80102b8:	60eb      	str	r3, [r5, #12]
 80102ba:	6820      	ldr	r0, [r4, #0]
 80102bc:	6128      	str	r0, [r5, #16]
 80102be:	88a3      	ldrh	r3, [r4, #4]
 80102c0:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 7;
 80102c2:	687b      	ldr	r3, [r7, #4]
 80102c4:	2207      	movs	r2, #7
 80102c6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,J,E,F,C,D");
 80102c8:	687b      	ldr	r3, [r7, #4]
 80102ca:	3340      	adds	r3, #64	; 0x40
 80102cc:	4a46      	ldr	r2, [pc, #280]	; (80103e8 <createProblem+0xf540>)
 80102ce:	461c      	mov	r4, r3
 80102d0:	4613      	mov	r3, r2
 80102d2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80102d4:	6020      	str	r0, [r4, #0]
 80102d6:	6061      	str	r1, [r4, #4]
 80102d8:	60a2      	str	r2, [r4, #8]
 80102da:	881b      	ldrh	r3, [r3, #0]
 80102dc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,5,9,11,13,18");
 80102de:	687b      	ldr	r3, [r7, #4]
 80102e0:	3304      	adds	r3, #4
 80102e2:	4a42      	ldr	r2, [pc, #264]	; (80103ec <createProblem+0xf544>)
 80102e4:	461d      	mov	r5, r3
 80102e6:	4614      	mov	r4, r2
 80102e8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80102ea:	6028      	str	r0, [r5, #0]
 80102ec:	6069      	str	r1, [r5, #4]
 80102ee:	60aa      	str	r2, [r5, #8]
 80102f0:	60eb      	str	r3, [r5, #12]
 80102f2:	7823      	ldrb	r3, [r4, #0]
 80102f4:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 80102f6:	687b      	ldr	r3, [r7, #4]
 80102f8:	33d8      	adds	r3, #216	; 0xd8
 80102fa:	4a28      	ldr	r2, [pc, #160]	; (801039c <createProblem+0xf4f4>)
 80102fc:	461c      	mov	r4, r3
 80102fe:	4613      	mov	r3, r2
 8010300:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010302:	6020      	str	r0, [r4, #0]
 8010304:	6061      	str	r1, [r4, #4]
 8010306:	60a2      	str	r2, [r4, #8]
 8010308:	881b      	ldrh	r3, [r3, #0]
 801030a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 801030c:	687b      	ldr	r3, [r7, #4]
 801030e:	33cc      	adds	r3, #204	; 0xcc
 8010310:	4a28      	ldr	r2, [pc, #160]	; (80103b4 <createProblem+0xf50c>)
 8010312:	8811      	ldrh	r1, [r2, #0]
 8010314:	7892      	ldrb	r2, [r2, #2]
 8010316:	8019      	strh	r1, [r3, #0]
 8010318:	709a      	strb	r2, [r3, #2]
			break;
 801031a:	f00a bb0b 	b.w	801a934 <createProblem+0x19a8c>
		case 523 :
			strcpy(p->name,"BACK IN ACTION");
 801031e:	687b      	ldr	r3, [r7, #4]
 8010320:	337c      	adds	r3, #124	; 0x7c
 8010322:	4a33      	ldr	r2, [pc, #204]	; (80103f0 <createProblem+0xf548>)
 8010324:	461c      	mov	r4, r3
 8010326:	4613      	mov	r3, r2
 8010328:	cb07      	ldmia	r3!, {r0, r1, r2}
 801032a:	6020      	str	r0, [r4, #0]
 801032c:	6061      	str	r1, [r4, #4]
 801032e:	60a2      	str	r2, [r4, #8]
 8010330:	881a      	ldrh	r2, [r3, #0]
 8010332:	789b      	ldrb	r3, [r3, #2]
 8010334:	81a2      	strh	r2, [r4, #12]
 8010336:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 8;
 8010338:	687b      	ldr	r3, [r7, #4]
 801033a:	2208      	movs	r2, #8
 801033c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,E,B,E,C,E,D");
 801033e:	687b      	ldr	r3, [r7, #4]
 8010340:	3340      	adds	r3, #64	; 0x40
 8010342:	4a2c      	ldr	r2, [pc, #176]	; (80103f4 <createProblem+0xf54c>)
 8010344:	461c      	mov	r4, r3
 8010346:	4615      	mov	r5, r2
 8010348:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801034a:	6020      	str	r0, [r4, #0]
 801034c:	6061      	str	r1, [r4, #4]
 801034e:	60a2      	str	r2, [r4, #8]
 8010350:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,10,12,13,16,18");
 8010352:	687b      	ldr	r3, [r7, #4]
 8010354:	3304      	adds	r3, #4
 8010356:	4a28      	ldr	r2, [pc, #160]	; (80103f8 <createProblem+0xf550>)
 8010358:	461d      	mov	r5, r3
 801035a:	4614      	mov	r4, r2
 801035c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801035e:	6028      	str	r0, [r5, #0]
 8010360:	6069      	str	r1, [r5, #4]
 8010362:	60aa      	str	r2, [r5, #8]
 8010364:	60eb      	str	r3, [r5, #12]
 8010366:	6820      	ldr	r0, [r4, #0]
 8010368:	6128      	str	r0, [r5, #16]
 801036a:	7923      	ldrb	r3, [r4, #4]
 801036c:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 801036e:	687b      	ldr	r3, [r7, #4]
 8010370:	33d8      	adds	r3, #216	; 0xd8
 8010372:	4a22      	ldr	r2, [pc, #136]	; (80103fc <createProblem+0xf554>)
 8010374:	461c      	mov	r4, r3
 8010376:	4615      	mov	r5, r2
 8010378:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801037a:	6020      	str	r0, [r4, #0]
 801037c:	6061      	str	r1, [r4, #4]
 801037e:	60a2      	str	r2, [r4, #8]
 8010380:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8010382:	687b      	ldr	r3, [r7, #4]
 8010384:	33cc      	adds	r3, #204	; 0xcc
 8010386:	4a10      	ldr	r2, [pc, #64]	; (80103c8 <createProblem+0xf520>)
 8010388:	6810      	ldr	r0, [r2, #0]
 801038a:	6018      	str	r0, [r3, #0]
			break;
 801038c:	f00a bad2 	b.w	801a934 <createProblem+0x19a8c>
 8010390:	08025d90 	.word	0x08025d90
 8010394:	08025da4 	.word	0x08025da4
 8010398:	08025db4 	.word	0x08025db4
 801039c:	08020820 	.word	0x08020820
 80103a0:	080209a4 	.word	0x080209a4
 80103a4:	08025dc8 	.word	0x08025dc8
 80103a8:	08025dd8 	.word	0x08025dd8
 80103ac:	08025de4 	.word	0x08025de4
 80103b0:	08020e90 	.word	0x08020e90
 80103b4:	08020874 	.word	0x08020874
 80103b8:	08025df4 	.word	0x08025df4
 80103bc:	08025df8 	.word	0x08025df8
 80103c0:	080245e0 	.word	0x080245e0
 80103c4:	0802091c 	.word	0x0802091c
 80103c8:	08020830 	.word	0x08020830
 80103cc:	08025e04 	.word	0x08025e04
 80103d0:	08025e14 	.word	0x08025e14
 80103d4:	08025e24 	.word	0x08025e24
 80103d8:	08025e38 	.word	0x08025e38
 80103dc:	08025e4c 	.word	0x08025e4c
 80103e0:	08025e58 	.word	0x08025e58
 80103e4:	08025e68 	.word	0x08025e68
 80103e8:	08025e80 	.word	0x08025e80
 80103ec:	08025e90 	.word	0x08025e90
 80103f0:	08025ea4 	.word	0x08025ea4
 80103f4:	08025eb4 	.word	0x08025eb4
 80103f8:	08025ec4 	.word	0x08025ec4
 80103fc:	08020a4c 	.word	0x08020a4c
		case 524 :
			strcpy(p->name,"MÄX 2");
 8010400:	687b      	ldr	r3, [r7, #4]
 8010402:	337c      	adds	r3, #124	; 0x7c
 8010404:	4aa7      	ldr	r2, [pc, #668]	; (80106a4 <createProblem+0xf7fc>)
 8010406:	6810      	ldr	r0, [r2, #0]
 8010408:	6018      	str	r0, [r3, #0]
 801040a:	8891      	ldrh	r1, [r2, #4]
 801040c:	7992      	ldrb	r2, [r2, #6]
 801040e:	8099      	strh	r1, [r3, #4]
 8010410:	719a      	strb	r2, [r3, #6]
			p->moveSize = 11;
 8010412:	687b      	ldr	r3, [r7, #4]
 8010414:	220b      	movs	r2, #11
 8010416:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,H,G,F,C,D,A,C,A,A");
 8010418:	687b      	ldr	r3, [r7, #4]
 801041a:	3340      	adds	r3, #64	; 0x40
 801041c:	4aa2      	ldr	r2, [pc, #648]	; (80106a8 <createProblem+0xf800>)
 801041e:	461d      	mov	r5, r3
 8010420:	4614      	mov	r4, r2
 8010422:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010424:	6028      	str	r0, [r5, #0]
 8010426:	6069      	str	r1, [r5, #4]
 8010428:	60aa      	str	r2, [r5, #8]
 801042a:	60eb      	str	r3, [r5, #12]
 801042c:	6820      	ldr	r0, [r4, #0]
 801042e:	6128      	str	r0, [r5, #16]
 8010430:	88a3      	ldrh	r3, [r4, #4]
 8010432:	82ab      	strh	r3, [r5, #20]
			strcpy(p->moveNumbers,"5,4,8,9,11,13,15,9,5,14,18");
 8010434:	687b      	ldr	r3, [r7, #4]
 8010436:	3304      	adds	r3, #4
 8010438:	4a9c      	ldr	r2, [pc, #624]	; (80106ac <createProblem+0xf804>)
 801043a:	461d      	mov	r5, r3
 801043c:	4614      	mov	r4, r2
 801043e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010440:	6028      	str	r0, [r5, #0]
 8010442:	6069      	str	r1, [r5, #4]
 8010444:	60aa      	str	r2, [r5, #8]
 8010446:	60eb      	str	r3, [r5, #12]
 8010448:	cc03      	ldmia	r4!, {r0, r1}
 801044a:	6128      	str	r0, [r5, #16]
 801044c:	6169      	str	r1, [r5, #20]
 801044e:	8823      	ldrh	r3, [r4, #0]
 8010450:	78a2      	ldrb	r2, [r4, #2]
 8010452:	832b      	strh	r3, [r5, #24]
 8010454:	4613      	mov	r3, r2
 8010456:	76ab      	strb	r3, [r5, #26]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,d,e");
 8010458:	687b      	ldr	r3, [r7, #4]
 801045a:	33d8      	adds	r3, #216	; 0xd8
 801045c:	4a94      	ldr	r2, [pc, #592]	; (80106b0 <createProblem+0xf808>)
 801045e:	461d      	mov	r5, r3
 8010460:	4614      	mov	r4, r2
 8010462:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010464:	6028      	str	r0, [r5, #0]
 8010466:	6069      	str	r1, [r5, #4]
 8010468:	60aa      	str	r2, [r5, #8]
 801046a:	60eb      	str	r3, [r5, #12]
 801046c:	6820      	ldr	r0, [r4, #0]
 801046e:	6128      	str	r0, [r5, #16]
 8010470:	88a3      	ldrh	r3, [r4, #4]
 8010472:	82ab      	strh	r3, [r5, #20]
			strcpy(p->grade, "6B+");
 8010474:	687b      	ldr	r3, [r7, #4]
 8010476:	33cc      	adds	r3, #204	; 0xcc
 8010478:	4a8e      	ldr	r2, [pc, #568]	; (80106b4 <createProblem+0xf80c>)
 801047a:	6810      	ldr	r0, [r2, #0]
 801047c:	6018      	str	r0, [r3, #0]
			break;
 801047e:	f00a ba59 	b.w	801a934 <createProblem+0x19a8c>
		case 525 :
			strcpy(p->name,"FIVEB PROJ 2");
 8010482:	687b      	ldr	r3, [r7, #4]
 8010484:	337c      	adds	r3, #124	; 0x7c
 8010486:	4a8c      	ldr	r2, [pc, #560]	; (80106b8 <createProblem+0xf810>)
 8010488:	461c      	mov	r4, r3
 801048a:	4613      	mov	r3, r2
 801048c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801048e:	6020      	str	r0, [r4, #0]
 8010490:	6061      	str	r1, [r4, #4]
 8010492:	60a2      	str	r2, [r4, #8]
 8010494:	781b      	ldrb	r3, [r3, #0]
 8010496:	7323      	strb	r3, [r4, #12]
			p->moveSize = 10;
 8010498:	687b      	ldr	r3, [r7, #4]
 801049a:	220a      	movs	r2, #10
 801049c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,J,H,H,F,J,G,G,D");
 801049e:	687b      	ldr	r3, [r7, #4]
 80104a0:	3340      	adds	r3, #64	; 0x40
 80104a2:	4a86      	ldr	r2, [pc, #536]	; (80106bc <createProblem+0xf814>)
 80104a4:	461d      	mov	r5, r3
 80104a6:	4614      	mov	r4, r2
 80104a8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80104aa:	6028      	str	r0, [r5, #0]
 80104ac:	6069      	str	r1, [r5, #4]
 80104ae:	60aa      	str	r2, [r5, #8]
 80104b0:	60eb      	str	r3, [r5, #12]
 80104b2:	6820      	ldr	r0, [r4, #0]
 80104b4:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"4,5,7,8,10,11,12,15,17,18");
 80104b6:	687b      	ldr	r3, [r7, #4]
 80104b8:	3304      	adds	r3, #4
 80104ba:	4a81      	ldr	r2, [pc, #516]	; (80106c0 <createProblem+0xf818>)
 80104bc:	461d      	mov	r5, r3
 80104be:	4614      	mov	r4, r2
 80104c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80104c2:	6028      	str	r0, [r5, #0]
 80104c4:	6069      	str	r1, [r5, #4]
 80104c6:	60aa      	str	r2, [r5, #8]
 80104c8:	60eb      	str	r3, [r5, #12]
 80104ca:	cc03      	ldmia	r4!, {r0, r1}
 80104cc:	6128      	str	r0, [r5, #16]
 80104ce:	6169      	str	r1, [r5, #20]
 80104d0:	8823      	ldrh	r3, [r4, #0]
 80104d2:	832b      	strh	r3, [r5, #24]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,e");
 80104d4:	687b      	ldr	r3, [r7, #4]
 80104d6:	33d8      	adds	r3, #216	; 0xd8
 80104d8:	4a7a      	ldr	r2, [pc, #488]	; (80106c4 <createProblem+0xf81c>)
 80104da:	461d      	mov	r5, r3
 80104dc:	4614      	mov	r4, r2
 80104de:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80104e0:	6028      	str	r0, [r5, #0]
 80104e2:	6069      	str	r1, [r5, #4]
 80104e4:	60aa      	str	r2, [r5, #8]
 80104e6:	60eb      	str	r3, [r5, #12]
 80104e8:	6820      	ldr	r0, [r4, #0]
 80104ea:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "7A+");
 80104ec:	687b      	ldr	r3, [r7, #4]
 80104ee:	33cc      	adds	r3, #204	; 0xcc
 80104f0:	4a75      	ldr	r2, [pc, #468]	; (80106c8 <createProblem+0xf820>)
 80104f2:	6810      	ldr	r0, [r2, #0]
 80104f4:	6018      	str	r0, [r3, #0]
			break;
 80104f6:	f00a ba1d 	b.w	801a934 <createProblem+0x19a8c>
		case 526 :
			strcpy(p->name,"BOOKA");
 80104fa:	687b      	ldr	r3, [r7, #4]
 80104fc:	337c      	adds	r3, #124	; 0x7c
 80104fe:	4a73      	ldr	r2, [pc, #460]	; (80106cc <createProblem+0xf824>)
 8010500:	6810      	ldr	r0, [r2, #0]
 8010502:	6018      	str	r0, [r3, #0]
 8010504:	8892      	ldrh	r2, [r2, #4]
 8010506:	809a      	strh	r2, [r3, #4]
			p->moveSize = 6;
 8010508:	687b      	ldr	r3, [r7, #4]
 801050a:	2206      	movs	r2, #6
 801050c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,H,E,E,A,D");
 801050e:	687b      	ldr	r3, [r7, #4]
 8010510:	3340      	adds	r3, #64	; 0x40
 8010512:	4a6f      	ldr	r2, [pc, #444]	; (80106d0 <createProblem+0xf828>)
 8010514:	461c      	mov	r4, r3
 8010516:	4613      	mov	r3, r2
 8010518:	cb07      	ldmia	r3!, {r0, r1, r2}
 801051a:	6020      	str	r0, [r4, #0]
 801051c:	6061      	str	r1, [r4, #4]
 801051e:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,9,12,14,18");
 8010520:	687b      	ldr	r3, [r7, #4]
 8010522:	3304      	adds	r3, #4
 8010524:	4a6b      	ldr	r2, [pc, #428]	; (80106d4 <createProblem+0xf82c>)
 8010526:	461c      	mov	r4, r3
 8010528:	4613      	mov	r3, r2
 801052a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801052c:	6020      	str	r0, [r4, #0]
 801052e:	6061      	str	r1, [r4, #4]
 8010530:	60a2      	str	r2, [r4, #8]
 8010532:	881a      	ldrh	r2, [r3, #0]
 8010534:	789b      	ldrb	r3, [r3, #2]
 8010536:	81a2      	strh	r2, [r4, #12]
 8010538:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 801053a:	687b      	ldr	r3, [r7, #4]
 801053c:	33d8      	adds	r3, #216	; 0xd8
 801053e:	4a66      	ldr	r2, [pc, #408]	; (80106d8 <createProblem+0xf830>)
 8010540:	461c      	mov	r4, r3
 8010542:	4613      	mov	r3, r2
 8010544:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010546:	6020      	str	r0, [r4, #0]
 8010548:	6061      	str	r1, [r4, #4]
 801054a:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 801054c:	687b      	ldr	r3, [r7, #4]
 801054e:	33cc      	adds	r3, #204	; 0xcc
 8010550:	4a62      	ldr	r2, [pc, #392]	; (80106dc <createProblem+0xf834>)
 8010552:	8811      	ldrh	r1, [r2, #0]
 8010554:	7892      	ldrb	r2, [r2, #2]
 8010556:	8019      	strh	r1, [r3, #0]
 8010558:	709a      	strb	r2, [r3, #2]
			break;
 801055a:	f00a b9eb 	b.w	801a934 <createProblem+0x19a8c>
		case 527 :
			strcpy(p->name,"LOOK UP TO ME");
 801055e:	687b      	ldr	r3, [r7, #4]
 8010560:	337c      	adds	r3, #124	; 0x7c
 8010562:	4a5f      	ldr	r2, [pc, #380]	; (80106e0 <createProblem+0xf838>)
 8010564:	461c      	mov	r4, r3
 8010566:	4613      	mov	r3, r2
 8010568:	cb07      	ldmia	r3!, {r0, r1, r2}
 801056a:	6020      	str	r0, [r4, #0]
 801056c:	6061      	str	r1, [r4, #4]
 801056e:	60a2      	str	r2, [r4, #8]
 8010570:	881b      	ldrh	r3, [r3, #0]
 8010572:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 8010574:	687b      	ldr	r3, [r7, #4]
 8010576:	2206      	movs	r2, #6
 8010578:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,H,G,G,D");
 801057a:	687b      	ldr	r3, [r7, #4]
 801057c:	3340      	adds	r3, #64	; 0x40
 801057e:	4a59      	ldr	r2, [pc, #356]	; (80106e4 <createProblem+0xf83c>)
 8010580:	461c      	mov	r4, r3
 8010582:	4613      	mov	r3, r2
 8010584:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010586:	6020      	str	r0, [r4, #0]
 8010588:	6061      	str	r1, [r4, #4]
 801058a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,10,14,17,18");
 801058c:	687b      	ldr	r3, [r7, #4]
 801058e:	3304      	adds	r3, #4
 8010590:	4a55      	ldr	r2, [pc, #340]	; (80106e8 <createProblem+0xf840>)
 8010592:	461c      	mov	r4, r3
 8010594:	4615      	mov	r5, r2
 8010596:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010598:	6020      	str	r0, [r4, #0]
 801059a:	6061      	str	r1, [r4, #4]
 801059c:	60a2      	str	r2, [r4, #8]
 801059e:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 80105a0:	687b      	ldr	r3, [r7, #4]
 80105a2:	33d8      	adds	r3, #216	; 0xd8
 80105a4:	4a51      	ldr	r2, [pc, #324]	; (80106ec <createProblem+0xf844>)
 80105a6:	461c      	mov	r4, r3
 80105a8:	4613      	mov	r3, r2
 80105aa:	cb07      	ldmia	r3!, {r0, r1, r2}
 80105ac:	6020      	str	r0, [r4, #0]
 80105ae:	6061      	str	r1, [r4, #4]
 80105b0:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 80105b2:	687b      	ldr	r3, [r7, #4]
 80105b4:	33cc      	adds	r3, #204	; 0xcc
 80105b6:	4a4e      	ldr	r2, [pc, #312]	; (80106f0 <createProblem+0xf848>)
 80105b8:	6810      	ldr	r0, [r2, #0]
 80105ba:	6018      	str	r0, [r3, #0]
			break;
 80105bc:	f00a b9ba 	b.w	801a934 <createProblem+0x19a8c>
		case 528 :
			strcpy(p->name,"BUNNY GRAHAMS");
 80105c0:	687b      	ldr	r3, [r7, #4]
 80105c2:	337c      	adds	r3, #124	; 0x7c
 80105c4:	4a4b      	ldr	r2, [pc, #300]	; (80106f4 <createProblem+0xf84c>)
 80105c6:	461c      	mov	r4, r3
 80105c8:	4613      	mov	r3, r2
 80105ca:	cb07      	ldmia	r3!, {r0, r1, r2}
 80105cc:	6020      	str	r0, [r4, #0]
 80105ce:	6061      	str	r1, [r4, #4]
 80105d0:	60a2      	str	r2, [r4, #8]
 80105d2:	881b      	ldrh	r3, [r3, #0]
 80105d4:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 80105d6:	687b      	ldr	r3, [r7, #4]
 80105d8:	2207      	movs	r2, #7
 80105da:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,H,J,K,I,H");
 80105dc:	687b      	ldr	r3, [r7, #4]
 80105de:	3340      	adds	r3, #64	; 0x40
 80105e0:	4a45      	ldr	r2, [pc, #276]	; (80106f8 <createProblem+0xf850>)
 80105e2:	461c      	mov	r4, r3
 80105e4:	4613      	mov	r3, r2
 80105e6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80105e8:	6020      	str	r0, [r4, #0]
 80105ea:	6061      	str	r1, [r4, #4]
 80105ec:	60a2      	str	r2, [r4, #8]
 80105ee:	881b      	ldrh	r3, [r3, #0]
 80105f0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,12,13,16,18,8");
 80105f2:	687b      	ldr	r3, [r7, #4]
 80105f4:	3304      	adds	r3, #4
 80105f6:	4a41      	ldr	r2, [pc, #260]	; (80106fc <createProblem+0xf854>)
 80105f8:	461d      	mov	r5, r3
 80105fa:	4614      	mov	r4, r2
 80105fc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80105fe:	6028      	str	r0, [r5, #0]
 8010600:	6069      	str	r1, [r5, #4]
 8010602:	60aa      	str	r2, [r5, #8]
 8010604:	60eb      	str	r3, [r5, #12]
 8010606:	8823      	ldrh	r3, [r4, #0]
 8010608:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,e,d");
 801060a:	687b      	ldr	r3, [r7, #4]
 801060c:	33d8      	adds	r3, #216	; 0xd8
 801060e:	4a3c      	ldr	r2, [pc, #240]	; (8010700 <createProblem+0xf858>)
 8010610:	461c      	mov	r4, r3
 8010612:	4613      	mov	r3, r2
 8010614:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010616:	6020      	str	r0, [r4, #0]
 8010618:	6061      	str	r1, [r4, #4]
 801061a:	60a2      	str	r2, [r4, #8]
 801061c:	881b      	ldrh	r3, [r3, #0]
 801061e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8010620:	687b      	ldr	r3, [r7, #4]
 8010622:	33cc      	adds	r3, #204	; 0xcc
 8010624:	4a23      	ldr	r2, [pc, #140]	; (80106b4 <createProblem+0xf80c>)
 8010626:	6810      	ldr	r0, [r2, #0]
 8010628:	6018      	str	r0, [r3, #0]
			break;
 801062a:	f00a b983 	b.w	801a934 <createProblem+0x19a8c>
		case 529 :
			strcpy(p->name,"SNEAKER JUICE");
 801062e:	687b      	ldr	r3, [r7, #4]
 8010630:	337c      	adds	r3, #124	; 0x7c
 8010632:	4a34      	ldr	r2, [pc, #208]	; (8010704 <createProblem+0xf85c>)
 8010634:	461c      	mov	r4, r3
 8010636:	4613      	mov	r3, r2
 8010638:	cb07      	ldmia	r3!, {r0, r1, r2}
 801063a:	6020      	str	r0, [r4, #0]
 801063c:	6061      	str	r1, [r4, #4]
 801063e:	60a2      	str	r2, [r4, #8]
 8010640:	881b      	ldrh	r3, [r3, #0]
 8010642:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 8010644:	687b      	ldr	r3, [r7, #4]
 8010646:	2207      	movs	r2, #7
 8010648:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,K,H,I,F,I");
 801064a:	687b      	ldr	r3, [r7, #4]
 801064c:	3340      	adds	r3, #64	; 0x40
 801064e:	4a2e      	ldr	r2, [pc, #184]	; (8010708 <createProblem+0xf860>)
 8010650:	461c      	mov	r4, r3
 8010652:	4613      	mov	r3, r2
 8010654:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010656:	6020      	str	r0, [r4, #0]
 8010658:	6061      	str	r1, [r4, #4]
 801065a:	60a2      	str	r2, [r4, #8]
 801065c:	881b      	ldrh	r3, [r3, #0]
 801065e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,14,16,18,11,10");
 8010660:	687b      	ldr	r3, [r7, #4]
 8010662:	3304      	adds	r3, #4
 8010664:	4a29      	ldr	r2, [pc, #164]	; (801070c <createProblem+0xf864>)
 8010666:	461d      	mov	r5, r3
 8010668:	4614      	mov	r4, r2
 801066a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801066c:	6028      	str	r0, [r5, #0]
 801066e:	6069      	str	r1, [r5, #4]
 8010670:	60aa      	str	r2, [r5, #8]
 8010672:	60eb      	str	r3, [r5, #12]
 8010674:	8823      	ldrh	r3, [r4, #0]
 8010676:	78a2      	ldrb	r2, [r4, #2]
 8010678:	822b      	strh	r3, [r5, #16]
 801067a:	4613      	mov	r3, r2
 801067c:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,e,d,d");
 801067e:	687b      	ldr	r3, [r7, #4]
 8010680:	33d8      	adds	r3, #216	; 0xd8
 8010682:	4a23      	ldr	r2, [pc, #140]	; (8010710 <createProblem+0xf868>)
 8010684:	461c      	mov	r4, r3
 8010686:	4613      	mov	r3, r2
 8010688:	cb07      	ldmia	r3!, {r0, r1, r2}
 801068a:	6020      	str	r0, [r4, #0]
 801068c:	6061      	str	r1, [r4, #4]
 801068e:	60a2      	str	r2, [r4, #8]
 8010690:	881b      	ldrh	r3, [r3, #0]
 8010692:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8010694:	687b      	ldr	r3, [r7, #4]
 8010696:	33cc      	adds	r3, #204	; 0xcc
 8010698:	4a06      	ldr	r2, [pc, #24]	; (80106b4 <createProblem+0xf80c>)
 801069a:	6810      	ldr	r0, [r2, #0]
 801069c:	6018      	str	r0, [r3, #0]
			break;
 801069e:	f00a b949 	b.w	801a934 <createProblem+0x19a8c>
 80106a2:	bf00      	nop
 80106a4:	08025edc 	.word	0x08025edc
 80106a8:	08025ee4 	.word	0x08025ee4
 80106ac:	08025efc 	.word	0x08025efc
 80106b0:	08021f98 	.word	0x08021f98
 80106b4:	08020830 	.word	0x08020830
 80106b8:	08025f18 	.word	0x08025f18
 80106bc:	08025f28 	.word	0x08025f28
 80106c0:	08025f3c 	.word	0x08025f3c
 80106c4:	08020b7c 	.word	0x08020b7c
 80106c8:	080209a4 	.word	0x080209a4
 80106cc:	08025f58 	.word	0x08025f58
 80106d0:	08025f60 	.word	0x08025f60
 80106d4:	08024778 	.word	0x08024778
 80106d8:	0802091c 	.word	0x0802091c
 80106dc:	08020874 	.word	0x08020874
 80106e0:	08025f6c 	.word	0x08025f6c
 80106e4:	08025f7c 	.word	0x08025f7c
 80106e8:	08025f88 	.word	0x08025f88
 80106ec:	08020e90 	.word	0x08020e90
 80106f0:	08020928 	.word	0x08020928
 80106f4:	08025f98 	.word	0x08025f98
 80106f8:	08025fa8 	.word	0x08025fa8
 80106fc:	08025fb8 	.word	0x08025fb8
 8010700:	08025fcc 	.word	0x08025fcc
 8010704:	08025fdc 	.word	0x08025fdc
 8010708:	08025fec 	.word	0x08025fec
 801070c:	08025ffc 	.word	0x08025ffc
 8010710:	08026010 	.word	0x08026010
		case 53 :
			strcpy(p->name,"CALLA");
 8010714:	687b      	ldr	r3, [r7, #4]
 8010716:	337c      	adds	r3, #124	; 0x7c
 8010718:	4abd      	ldr	r2, [pc, #756]	; (8010a10 <createProblem+0xfb68>)
 801071a:	6810      	ldr	r0, [r2, #0]
 801071c:	6018      	str	r0, [r3, #0]
 801071e:	8892      	ldrh	r2, [r2, #4]
 8010720:	809a      	strh	r2, [r3, #4]
			p->moveSize = 7;
 8010722:	687b      	ldr	r3, [r7, #4]
 8010724:	2207      	movs	r2, #7
 8010726:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,F,G,E,I");
 8010728:	687b      	ldr	r3, [r7, #4]
 801072a:	3340      	adds	r3, #64	; 0x40
 801072c:	4ab9      	ldr	r2, [pc, #740]	; (8010a14 <createProblem+0xfb6c>)
 801072e:	461c      	mov	r4, r3
 8010730:	4613      	mov	r3, r2
 8010732:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010734:	6020      	str	r0, [r4, #0]
 8010736:	6061      	str	r1, [r4, #4]
 8010738:	60a2      	str	r2, [r4, #8]
 801073a:	881b      	ldrh	r3, [r3, #0]
 801073c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,10,13,14,16,18");
 801073e:	687b      	ldr	r3, [r7, #4]
 8010740:	3304      	adds	r3, #4
 8010742:	4ab5      	ldr	r2, [pc, #724]	; (8010a18 <createProblem+0xfb70>)
 8010744:	461d      	mov	r5, r3
 8010746:	4614      	mov	r4, r2
 8010748:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801074a:	6028      	str	r0, [r5, #0]
 801074c:	6069      	str	r1, [r5, #4]
 801074e:	60aa      	str	r2, [r5, #8]
 8010750:	60eb      	str	r3, [r5, #12]
 8010752:	8823      	ldrh	r3, [r4, #0]
 8010754:	78a2      	ldrb	r2, [r4, #2]
 8010756:	822b      	strh	r3, [r5, #16]
 8010758:	4613      	mov	r3, r2
 801075a:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 801075c:	687b      	ldr	r3, [r7, #4]
 801075e:	33d8      	adds	r3, #216	; 0xd8
 8010760:	4aae      	ldr	r2, [pc, #696]	; (8010a1c <createProblem+0xfb74>)
 8010762:	461c      	mov	r4, r3
 8010764:	4613      	mov	r3, r2
 8010766:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010768:	6020      	str	r0, [r4, #0]
 801076a:	6061      	str	r1, [r4, #4]
 801076c:	60a2      	str	r2, [r4, #8]
 801076e:	881b      	ldrh	r3, [r3, #0]
 8010770:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8010772:	687b      	ldr	r3, [r7, #4]
 8010774:	33cc      	adds	r3, #204	; 0xcc
 8010776:	4aaa      	ldr	r2, [pc, #680]	; (8010a20 <createProblem+0xfb78>)
 8010778:	6810      	ldr	r0, [r2, #0]
 801077a:	6018      	str	r0, [r3, #0]
			break;
 801077c:	f00a b8da 	b.w	801a934 <createProblem+0x19a8c>
		case 530 :
			strcpy(p->name,"MOTIVATION");
 8010780:	687b      	ldr	r3, [r7, #4]
 8010782:	337c      	adds	r3, #124	; 0x7c
 8010784:	49a7      	ldr	r1, [pc, #668]	; (8010a24 <createProblem+0xfb7c>)
 8010786:	461a      	mov	r2, r3
 8010788:	460b      	mov	r3, r1
 801078a:	cb03      	ldmia	r3!, {r0, r1}
 801078c:	6010      	str	r0, [r2, #0]
 801078e:	6051      	str	r1, [r2, #4]
 8010790:	8819      	ldrh	r1, [r3, #0]
 8010792:	789b      	ldrb	r3, [r3, #2]
 8010794:	8111      	strh	r1, [r2, #8]
 8010796:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 8010798:	687b      	ldr	r3, [r7, #4]
 801079a:	2207      	movs	r2, #7
 801079c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,J,E,E,B,B,D");
 801079e:	687b      	ldr	r3, [r7, #4]
 80107a0:	3340      	adds	r3, #64	; 0x40
 80107a2:	4aa1      	ldr	r2, [pc, #644]	; (8010a28 <createProblem+0xfb80>)
 80107a4:	461c      	mov	r4, r3
 80107a6:	4613      	mov	r3, r2
 80107a8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80107aa:	6020      	str	r0, [r4, #0]
 80107ac:	6061      	str	r1, [r4, #4]
 80107ae:	60a2      	str	r2, [r4, #8]
 80107b0:	881b      	ldrh	r3, [r3, #0]
 80107b2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,8,12,12,15,18");
 80107b4:	687b      	ldr	r3, [r7, #4]
 80107b6:	3304      	adds	r3, #4
 80107b8:	4a9c      	ldr	r2, [pc, #624]	; (8010a2c <createProblem+0xfb84>)
 80107ba:	461d      	mov	r5, r3
 80107bc:	4614      	mov	r4, r2
 80107be:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80107c0:	6028      	str	r0, [r5, #0]
 80107c2:	6069      	str	r1, [r5, #4]
 80107c4:	60aa      	str	r2, [r5, #8]
 80107c6:	60eb      	str	r3, [r5, #12]
 80107c8:	8823      	ldrh	r3, [r4, #0]
 80107ca:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 80107cc:	687b      	ldr	r3, [r7, #4]
 80107ce:	33d8      	adds	r3, #216	; 0xd8
 80107d0:	4a97      	ldr	r2, [pc, #604]	; (8010a30 <createProblem+0xfb88>)
 80107d2:	461c      	mov	r4, r3
 80107d4:	4613      	mov	r3, r2
 80107d6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80107d8:	6020      	str	r0, [r4, #0]
 80107da:	6061      	str	r1, [r4, #4]
 80107dc:	60a2      	str	r2, [r4, #8]
 80107de:	881b      	ldrh	r3, [r3, #0]
 80107e0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 80107e2:	687b      	ldr	r3, [r7, #4]
 80107e4:	33cc      	adds	r3, #204	; 0xcc
 80107e6:	4a93      	ldr	r2, [pc, #588]	; (8010a34 <createProblem+0xfb8c>)
 80107e8:	6810      	ldr	r0, [r2, #0]
 80107ea:	6018      	str	r0, [r3, #0]
			break;
 80107ec:	f00a b8a2 	b.w	801a934 <createProblem+0x19a8c>
		case 531 :
			strcpy(p->name,"GET WITH IT");
 80107f0:	687b      	ldr	r3, [r7, #4]
 80107f2:	337c      	adds	r3, #124	; 0x7c
 80107f4:	4a90      	ldr	r2, [pc, #576]	; (8010a38 <createProblem+0xfb90>)
 80107f6:	461c      	mov	r4, r3
 80107f8:	4613      	mov	r3, r2
 80107fa:	cb07      	ldmia	r3!, {r0, r1, r2}
 80107fc:	6020      	str	r0, [r4, #0]
 80107fe:	6061      	str	r1, [r4, #4]
 8010800:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 8010802:	687b      	ldr	r3, [r7, #4]
 8010804:	2206      	movs	r2, #6
 8010806:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,B,A,E,D,A");
 8010808:	687b      	ldr	r3, [r7, #4]
 801080a:	3340      	adds	r3, #64	; 0x40
 801080c:	4a8b      	ldr	r2, [pc, #556]	; (8010a3c <createProblem+0xfb94>)
 801080e:	461c      	mov	r4, r3
 8010810:	4613      	mov	r3, r2
 8010812:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010814:	6020      	str	r0, [r4, #0]
 8010816:	6061      	str	r1, [r4, #4]
 8010818:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,12,14,8,18,9");
 801081a:	687b      	ldr	r3, [r7, #4]
 801081c:	3304      	adds	r3, #4
 801081e:	4a88      	ldr	r2, [pc, #544]	; (8010a40 <createProblem+0xfb98>)
 8010820:	461c      	mov	r4, r3
 8010822:	4613      	mov	r3, r2
 8010824:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010826:	6020      	str	r0, [r4, #0]
 8010828:	6061      	str	r1, [r4, #4]
 801082a:	60a2      	str	r2, [r4, #8]
 801082c:	881a      	ldrh	r2, [r3, #0]
 801082e:	789b      	ldrb	r3, [r3, #2]
 8010830:	81a2      	strh	r2, [r4, #12]
 8010832:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,e,d");
 8010834:	687b      	ldr	r3, [r7, #4]
 8010836:	33d8      	adds	r3, #216	; 0xd8
 8010838:	4a82      	ldr	r2, [pc, #520]	; (8010a44 <createProblem+0xfb9c>)
 801083a:	461c      	mov	r4, r3
 801083c:	4613      	mov	r3, r2
 801083e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010840:	6020      	str	r0, [r4, #0]
 8010842:	6061      	str	r1, [r4, #4]
 8010844:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8010846:	687b      	ldr	r3, [r7, #4]
 8010848:	33cc      	adds	r3, #204	; 0xcc
 801084a:	4a7f      	ldr	r2, [pc, #508]	; (8010a48 <createProblem+0xfba0>)
 801084c:	8811      	ldrh	r1, [r2, #0]
 801084e:	7892      	ldrb	r2, [r2, #2]
 8010850:	8019      	strh	r1, [r3, #0]
 8010852:	709a      	strb	r2, [r3, #2]
			break;
 8010854:	f00a b86e 	b.w	801a934 <createProblem+0x19a8c>
		case 532 :
			strcpy(p->name,"BRICK TAMLAND");
 8010858:	687b      	ldr	r3, [r7, #4]
 801085a:	337c      	adds	r3, #124	; 0x7c
 801085c:	4a7b      	ldr	r2, [pc, #492]	; (8010a4c <createProblem+0xfba4>)
 801085e:	461c      	mov	r4, r3
 8010860:	4613      	mov	r3, r2
 8010862:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010864:	6020      	str	r0, [r4, #0]
 8010866:	6061      	str	r1, [r4, #4]
 8010868:	60a2      	str	r2, [r4, #8]
 801086a:	881b      	ldrh	r3, [r3, #0]
 801086c:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 8;
 801086e:	687b      	ldr	r3, [r7, #4]
 8010870:	2208      	movs	r2, #8
 8010872:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,G,J,H,G,D,G");
 8010874:	687b      	ldr	r3, [r7, #4]
 8010876:	3340      	adds	r3, #64	; 0x40
 8010878:	4a75      	ldr	r2, [pc, #468]	; (8010a50 <createProblem+0xfba8>)
 801087a:	461c      	mov	r4, r3
 801087c:	4615      	mov	r5, r2
 801087e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010880:	6020      	str	r0, [r4, #0]
 8010882:	6061      	str	r1, [r4, #4]
 8010884:	60a2      	str	r2, [r4, #8]
 8010886:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,9,10,5,12,17,18,15");
 8010888:	687b      	ldr	r3, [r7, #4]
 801088a:	3304      	adds	r3, #4
 801088c:	4a71      	ldr	r2, [pc, #452]	; (8010a54 <createProblem+0xfbac>)
 801088e:	461d      	mov	r5, r3
 8010890:	4614      	mov	r4, r2
 8010892:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010894:	6028      	str	r0, [r5, #0]
 8010896:	6069      	str	r1, [r5, #4]
 8010898:	60aa      	str	r2, [r5, #8]
 801089a:	60eb      	str	r3, [r5, #12]
 801089c:	6820      	ldr	r0, [r4, #0]
 801089e:	6128      	str	r0, [r5, #16]
 80108a0:	7923      	ldrb	r3, [r4, #4]
 80108a2:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,e,d");
 80108a4:	687b      	ldr	r3, [r7, #4]
 80108a6:	33d8      	adds	r3, #216	; 0xd8
 80108a8:	4a6b      	ldr	r2, [pc, #428]	; (8010a58 <createProblem+0xfbb0>)
 80108aa:	461c      	mov	r4, r3
 80108ac:	4615      	mov	r5, r2
 80108ae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80108b0:	6020      	str	r0, [r4, #0]
 80108b2:	6061      	str	r1, [r4, #4]
 80108b4:	60a2      	str	r2, [r4, #8]
 80108b6:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 80108b8:	687b      	ldr	r3, [r7, #4]
 80108ba:	33cc      	adds	r3, #204	; 0xcc
 80108bc:	4a5d      	ldr	r2, [pc, #372]	; (8010a34 <createProblem+0xfb8c>)
 80108be:	6810      	ldr	r0, [r2, #0]
 80108c0:	6018      	str	r0, [r3, #0]
			break;
 80108c2:	f00a b837 	b.w	801a934 <createProblem+0x19a8c>
		case 533 :
			strcpy(p->name,"THREE OF CUPS");
 80108c6:	687b      	ldr	r3, [r7, #4]
 80108c8:	337c      	adds	r3, #124	; 0x7c
 80108ca:	4a64      	ldr	r2, [pc, #400]	; (8010a5c <createProblem+0xfbb4>)
 80108cc:	461c      	mov	r4, r3
 80108ce:	4613      	mov	r3, r2
 80108d0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80108d2:	6020      	str	r0, [r4, #0]
 80108d4:	6061      	str	r1, [r4, #4]
 80108d6:	60a2      	str	r2, [r4, #8]
 80108d8:	881b      	ldrh	r3, [r3, #0]
 80108da:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 5;
 80108dc:	687b      	ldr	r3, [r7, #4]
 80108de:	2205      	movs	r2, #5
 80108e0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,C,F,A,D");
 80108e2:	687b      	ldr	r3, [r7, #4]
 80108e4:	3340      	adds	r3, #64	; 0x40
 80108e6:	495e      	ldr	r1, [pc, #376]	; (8010a60 <createProblem+0xfbb8>)
 80108e8:	461a      	mov	r2, r3
 80108ea:	460b      	mov	r3, r1
 80108ec:	cb03      	ldmia	r3!, {r0, r1}
 80108ee:	6010      	str	r0, [r2, #0]
 80108f0:	6051      	str	r1, [r2, #4]
 80108f2:	881b      	ldrh	r3, [r3, #0]
 80108f4:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,8,11,14,18");
 80108f6:	687b      	ldr	r3, [r7, #4]
 80108f8:	3304      	adds	r3, #4
 80108fa:	4a5a      	ldr	r2, [pc, #360]	; (8010a64 <createProblem+0xfbbc>)
 80108fc:	461c      	mov	r4, r3
 80108fe:	4613      	mov	r3, r2
 8010900:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010902:	6020      	str	r0, [r4, #0]
 8010904:	6061      	str	r1, [r4, #4]
 8010906:	60a2      	str	r2, [r4, #8]
 8010908:	781b      	ldrb	r3, [r3, #0]
 801090a:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 801090c:	687b      	ldr	r3, [r7, #4]
 801090e:	33d8      	adds	r3, #216	; 0xd8
 8010910:	4955      	ldr	r1, [pc, #340]	; (8010a68 <createProblem+0xfbc0>)
 8010912:	461a      	mov	r2, r3
 8010914:	460b      	mov	r3, r1
 8010916:	cb03      	ldmia	r3!, {r0, r1}
 8010918:	6010      	str	r0, [r2, #0]
 801091a:	6051      	str	r1, [r2, #4]
 801091c:	881b      	ldrh	r3, [r3, #0]
 801091e:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 8010920:	687b      	ldr	r3, [r7, #4]
 8010922:	33cc      	adds	r3, #204	; 0xcc
 8010924:	4a48      	ldr	r2, [pc, #288]	; (8010a48 <createProblem+0xfba0>)
 8010926:	8811      	ldrh	r1, [r2, #0]
 8010928:	7892      	ldrb	r2, [r2, #2]
 801092a:	8019      	strh	r1, [r3, #0]
 801092c:	709a      	strb	r2, [r3, #2]
			break;
 801092e:	f00a b801 	b.w	801a934 <createProblem+0x19a8c>
		case 534 :
			strcpy(p->name,"SNEAKER JUICE DEUX");
 8010932:	687b      	ldr	r3, [r7, #4]
 8010934:	337c      	adds	r3, #124	; 0x7c
 8010936:	4a4d      	ldr	r2, [pc, #308]	; (8010a6c <createProblem+0xfbc4>)
 8010938:	461d      	mov	r5, r3
 801093a:	4614      	mov	r4, r2
 801093c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801093e:	6028      	str	r0, [r5, #0]
 8010940:	6069      	str	r1, [r5, #4]
 8010942:	60aa      	str	r2, [r5, #8]
 8010944:	60eb      	str	r3, [r5, #12]
 8010946:	8823      	ldrh	r3, [r4, #0]
 8010948:	78a2      	ldrb	r2, [r4, #2]
 801094a:	822b      	strh	r3, [r5, #16]
 801094c:	4613      	mov	r3, r2
 801094e:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 6;
 8010950:	687b      	ldr	r3, [r7, #4]
 8010952:	2206      	movs	r2, #6
 8010954:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,I,F,K,I");
 8010956:	687b      	ldr	r3, [r7, #4]
 8010958:	3340      	adds	r3, #64	; 0x40
 801095a:	4a45      	ldr	r2, [pc, #276]	; (8010a70 <createProblem+0xfbc8>)
 801095c:	461c      	mov	r4, r3
 801095e:	4613      	mov	r3, r2
 8010960:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010962:	6020      	str	r0, [r4, #0]
 8010964:	6061      	str	r1, [r4, #4]
 8010966:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,10,13,14,18");
 8010968:	687b      	ldr	r3, [r7, #4]
 801096a:	3304      	adds	r3, #4
 801096c:	4a41      	ldr	r2, [pc, #260]	; (8010a74 <createProblem+0xfbcc>)
 801096e:	461c      	mov	r4, r3
 8010970:	4615      	mov	r5, r2
 8010972:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010974:	6020      	str	r0, [r4, #0]
 8010976:	6061      	str	r1, [r4, #4]
 8010978:	60a2      	str	r2, [r4, #8]
 801097a:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 801097c:	687b      	ldr	r3, [r7, #4]
 801097e:	33d8      	adds	r3, #216	; 0xd8
 8010980:	4a3d      	ldr	r2, [pc, #244]	; (8010a78 <createProblem+0xfbd0>)
 8010982:	461c      	mov	r4, r3
 8010984:	4613      	mov	r3, r2
 8010986:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010988:	6020      	str	r0, [r4, #0]
 801098a:	6061      	str	r1, [r4, #4]
 801098c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 801098e:	687b      	ldr	r3, [r7, #4]
 8010990:	33cc      	adds	r3, #204	; 0xcc
 8010992:	4a28      	ldr	r2, [pc, #160]	; (8010a34 <createProblem+0xfb8c>)
 8010994:	6810      	ldr	r0, [r2, #0]
 8010996:	6018      	str	r0, [r3, #0]
			break;
 8010998:	f009 bfcc 	b.w	801a934 <createProblem+0x19a8c>
		case 535 :
			strcpy(p->name,"HEART OF THE SEA");
 801099c:	687b      	ldr	r3, [r7, #4]
 801099e:	337c      	adds	r3, #124	; 0x7c
 80109a0:	4a36      	ldr	r2, [pc, #216]	; (8010a7c <createProblem+0xfbd4>)
 80109a2:	461d      	mov	r5, r3
 80109a4:	4614      	mov	r4, r2
 80109a6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80109a8:	6028      	str	r0, [r5, #0]
 80109aa:	6069      	str	r1, [r5, #4]
 80109ac:	60aa      	str	r2, [r5, #8]
 80109ae:	60eb      	str	r3, [r5, #12]
 80109b0:	7823      	ldrb	r3, [r4, #0]
 80109b2:	742b      	strb	r3, [r5, #16]
			p->moveSize = 7;
 80109b4:	687b      	ldr	r3, [r7, #4]
 80109b6:	2207      	movs	r2, #7
 80109b8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,A,E,B,F,A,D");
 80109ba:	687b      	ldr	r3, [r7, #4]
 80109bc:	3340      	adds	r3, #64	; 0x40
 80109be:	4a30      	ldr	r2, [pc, #192]	; (8010a80 <createProblem+0xfbd8>)
 80109c0:	461c      	mov	r4, r3
 80109c2:	4613      	mov	r3, r2
 80109c4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80109c6:	6020      	str	r0, [r4, #0]
 80109c8:	6061      	str	r1, [r4, #4]
 80109ca:	60a2      	str	r2, [r4, #8]
 80109cc:	881b      	ldrh	r3, [r3, #0]
 80109ce:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,9,6,11,14,18");
 80109d0:	687b      	ldr	r3, [r7, #4]
 80109d2:	3304      	adds	r3, #4
 80109d4:	4a2b      	ldr	r2, [pc, #172]	; (8010a84 <createProblem+0xfbdc>)
 80109d6:	461d      	mov	r5, r3
 80109d8:	4614      	mov	r4, r2
 80109da:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80109dc:	6028      	str	r0, [r5, #0]
 80109de:	6069      	str	r1, [r5, #4]
 80109e0:	60aa      	str	r2, [r5, #8]
 80109e2:	60eb      	str	r3, [r5, #12]
 80109e4:	7823      	ldrb	r3, [r4, #0]
 80109e6:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,s,d,d,e");
 80109e8:	687b      	ldr	r3, [r7, #4]
 80109ea:	33d8      	adds	r3, #216	; 0xd8
 80109ec:	4a26      	ldr	r2, [pc, #152]	; (8010a88 <createProblem+0xfbe0>)
 80109ee:	461c      	mov	r4, r3
 80109f0:	4613      	mov	r3, r2
 80109f2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80109f4:	6020      	str	r0, [r4, #0]
 80109f6:	6061      	str	r1, [r4, #4]
 80109f8:	60a2      	str	r2, [r4, #8]
 80109fa:	881b      	ldrh	r3, [r3, #0]
 80109fc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 80109fe:	687b      	ldr	r3, [r7, #4]
 8010a00:	33cc      	adds	r3, #204	; 0xcc
 8010a02:	4a11      	ldr	r2, [pc, #68]	; (8010a48 <createProblem+0xfba0>)
 8010a04:	8811      	ldrh	r1, [r2, #0]
 8010a06:	7892      	ldrb	r2, [r2, #2]
 8010a08:	8019      	strh	r1, [r3, #0]
 8010a0a:	709a      	strb	r2, [r3, #2]
			break;
 8010a0c:	f009 bf92 	b.w	801a934 <createProblem+0x19a8c>
 8010a10:	08026020 	.word	0x08026020
 8010a14:	08026028 	.word	0x08026028
 8010a18:	08023380 	.word	0x08023380
 8010a1c:	08020a14 	.word	0x08020a14
 8010a20:	08020830 	.word	0x08020830
 8010a24:	08026038 	.word	0x08026038
 8010a28:	08026044 	.word	0x08026044
 8010a2c:	08026054 	.word	0x08026054
 8010a30:	08020820 	.word	0x08020820
 8010a34:	08020928 	.word	0x08020928
 8010a38:	08026068 	.word	0x08026068
 8010a3c:	08026074 	.word	0x08026074
 8010a40:	08026080 	.word	0x08026080
 8010a44:	08026090 	.word	0x08026090
 8010a48:	08020874 	.word	0x08020874
 8010a4c:	0802609c 	.word	0x0802609c
 8010a50:	080260ac 	.word	0x080260ac
 8010a54:	080260bc 	.word	0x080260bc
 8010a58:	080260d4 	.word	0x080260d4
 8010a5c:	080260e4 	.word	0x080260e4
 8010a60:	080260f4 	.word	0x080260f4
 8010a64:	0802221c 	.word	0x0802221c
 8010a68:	080208a0 	.word	0x080208a0
 8010a6c:	08026100 	.word	0x08026100
 8010a70:	08026114 	.word	0x08026114
 8010a74:	08026120 	.word	0x08026120
 8010a78:	0802091c 	.word	0x0802091c
 8010a7c:	08026130 	.word	0x08026130
 8010a80:	08026144 	.word	0x08026144
 8010a84:	08026154 	.word	0x08026154
 8010a88:	08026168 	.word	0x08026168
		case 536 :
			strcpy(p->name,"ONE DAY");
 8010a8c:	687b      	ldr	r3, [r7, #4]
 8010a8e:	337c      	adds	r3, #124	; 0x7c
 8010a90:	49b4      	ldr	r1, [pc, #720]	; (8010d64 <createProblem+0xfebc>)
 8010a92:	461a      	mov	r2, r3
 8010a94:	460b      	mov	r3, r1
 8010a96:	cb03      	ldmia	r3!, {r0, r1}
 8010a98:	6010      	str	r0, [r2, #0]
 8010a9a:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 8010a9c:	687b      	ldr	r3, [r7, #4]
 8010a9e:	2207      	movs	r2, #7
 8010aa0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,E,B,H,C,I");
 8010aa2:	687b      	ldr	r3, [r7, #4]
 8010aa4:	3340      	adds	r3, #64	; 0x40
 8010aa6:	4ab0      	ldr	r2, [pc, #704]	; (8010d68 <createProblem+0xfec0>)
 8010aa8:	461c      	mov	r4, r3
 8010aaa:	4613      	mov	r3, r2
 8010aac:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010aae:	6020      	str	r0, [r4, #0]
 8010ab0:	6061      	str	r1, [r4, #4]
 8010ab2:	60a2      	str	r2, [r4, #8]
 8010ab4:	881b      	ldrh	r3, [r3, #0]
 8010ab6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,9,10,13,13,18");
 8010ab8:	687b      	ldr	r3, [r7, #4]
 8010aba:	3304      	adds	r3, #4
 8010abc:	4aab      	ldr	r2, [pc, #684]	; (8010d6c <createProblem+0xfec4>)
 8010abe:	461d      	mov	r5, r3
 8010ac0:	4614      	mov	r4, r2
 8010ac2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010ac4:	6028      	str	r0, [r5, #0]
 8010ac6:	6069      	str	r1, [r5, #4]
 8010ac8:	60aa      	str	r2, [r5, #8]
 8010aca:	60eb      	str	r3, [r5, #12]
 8010acc:	8823      	ldrh	r3, [r4, #0]
 8010ace:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8010ad0:	687b      	ldr	r3, [r7, #4]
 8010ad2:	33d8      	adds	r3, #216	; 0xd8
 8010ad4:	4aa6      	ldr	r2, [pc, #664]	; (8010d70 <createProblem+0xfec8>)
 8010ad6:	461c      	mov	r4, r3
 8010ad8:	4613      	mov	r3, r2
 8010ada:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010adc:	6020      	str	r0, [r4, #0]
 8010ade:	6061      	str	r1, [r4, #4]
 8010ae0:	60a2      	str	r2, [r4, #8]
 8010ae2:	881b      	ldrh	r3, [r3, #0]
 8010ae4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8010ae6:	687b      	ldr	r3, [r7, #4]
 8010ae8:	33cc      	adds	r3, #204	; 0xcc
 8010aea:	4aa2      	ldr	r2, [pc, #648]	; (8010d74 <createProblem+0xfecc>)
 8010aec:	6810      	ldr	r0, [r2, #0]
 8010aee:	6018      	str	r0, [r3, #0]
			break;
 8010af0:	f009 bf20 	b.w	801a934 <createProblem+0x19a8c>
		case 537 :
			strcpy(p->name,"ZIO BENNY");
 8010af4:	687b      	ldr	r3, [r7, #4]
 8010af6:	337c      	adds	r3, #124	; 0x7c
 8010af8:	499f      	ldr	r1, [pc, #636]	; (8010d78 <createProblem+0xfed0>)
 8010afa:	461a      	mov	r2, r3
 8010afc:	460b      	mov	r3, r1
 8010afe:	cb03      	ldmia	r3!, {r0, r1}
 8010b00:	6010      	str	r0, [r2, #0]
 8010b02:	6051      	str	r1, [r2, #4]
 8010b04:	881b      	ldrh	r3, [r3, #0]
 8010b06:	8113      	strh	r3, [r2, #8]
			p->moveSize = 5;
 8010b08:	687b      	ldr	r3, [r7, #4]
 8010b0a:	2205      	movs	r2, #5
 8010b0c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,H,E,D");
 8010b0e:	687b      	ldr	r3, [r7, #4]
 8010b10:	3340      	adds	r3, #64	; 0x40
 8010b12:	499a      	ldr	r1, [pc, #616]	; (8010d7c <createProblem+0xfed4>)
 8010b14:	461a      	mov	r2, r3
 8010b16:	460b      	mov	r3, r1
 8010b18:	cb03      	ldmia	r3!, {r0, r1}
 8010b1a:	6010      	str	r0, [r2, #0]
 8010b1c:	6051      	str	r1, [r2, #4]
 8010b1e:	881b      	ldrh	r3, [r3, #0]
 8010b20:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,9,13,14,18");
 8010b22:	687b      	ldr	r3, [r7, #4]
 8010b24:	3304      	adds	r3, #4
 8010b26:	4a96      	ldr	r2, [pc, #600]	; (8010d80 <createProblem+0xfed8>)
 8010b28:	461c      	mov	r4, r3
 8010b2a:	4613      	mov	r3, r2
 8010b2c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010b2e:	6020      	str	r0, [r4, #0]
 8010b30:	6061      	str	r1, [r4, #4]
 8010b32:	60a2      	str	r2, [r4, #8]
 8010b34:	781b      	ldrb	r3, [r3, #0]
 8010b36:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8010b38:	687b      	ldr	r3, [r7, #4]
 8010b3a:	33d8      	adds	r3, #216	; 0xd8
 8010b3c:	4991      	ldr	r1, [pc, #580]	; (8010d84 <createProblem+0xfedc>)
 8010b3e:	461a      	mov	r2, r3
 8010b40:	460b      	mov	r3, r1
 8010b42:	cb03      	ldmia	r3!, {r0, r1}
 8010b44:	6010      	str	r0, [r2, #0]
 8010b46:	6051      	str	r1, [r2, #4]
 8010b48:	881b      	ldrh	r3, [r3, #0]
 8010b4a:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 8010b4c:	687b      	ldr	r3, [r7, #4]
 8010b4e:	33cc      	adds	r3, #204	; 0xcc
 8010b50:	4a8d      	ldr	r2, [pc, #564]	; (8010d88 <createProblem+0xfee0>)
 8010b52:	6810      	ldr	r0, [r2, #0]
 8010b54:	6018      	str	r0, [r3, #0]
			break;
 8010b56:	f009 beed 	b.w	801a934 <createProblem+0x19a8c>
		case 538 :
			strcpy(p->name,"THE PEOPLE'S HEEL HOOK");
 8010b5a:	687b      	ldr	r3, [r7, #4]
 8010b5c:	337c      	adds	r3, #124	; 0x7c
 8010b5e:	4a8b      	ldr	r2, [pc, #556]	; (8010d8c <createProblem+0xfee4>)
 8010b60:	461c      	mov	r4, r3
 8010b62:	4615      	mov	r5, r2
 8010b64:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010b66:	6020      	str	r0, [r4, #0]
 8010b68:	6061      	str	r1, [r4, #4]
 8010b6a:	60a2      	str	r2, [r4, #8]
 8010b6c:	60e3      	str	r3, [r4, #12]
 8010b6e:	6828      	ldr	r0, [r5, #0]
 8010b70:	6120      	str	r0, [r4, #16]
 8010b72:	88ab      	ldrh	r3, [r5, #4]
 8010b74:	79aa      	ldrb	r2, [r5, #6]
 8010b76:	82a3      	strh	r3, [r4, #20]
 8010b78:	4613      	mov	r3, r2
 8010b7a:	75a3      	strb	r3, [r4, #22]
			p->moveSize = 5;
 8010b7c:	687b      	ldr	r3, [r7, #4]
 8010b7e:	2205      	movs	r2, #5
 8010b80:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,E,E,I");
 8010b82:	687b      	ldr	r3, [r7, #4]
 8010b84:	3340      	adds	r3, #64	; 0x40
 8010b86:	4982      	ldr	r1, [pc, #520]	; (8010d90 <createProblem+0xfee8>)
 8010b88:	461a      	mov	r2, r3
 8010b8a:	460b      	mov	r3, r1
 8010b8c:	cb03      	ldmia	r3!, {r0, r1}
 8010b8e:	6010      	str	r0, [r2, #0]
 8010b90:	6051      	str	r1, [r2, #4]
 8010b92:	881b      	ldrh	r3, [r3, #0]
 8010b94:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,12,14,18");
 8010b96:	687b      	ldr	r3, [r7, #4]
 8010b98:	3304      	adds	r3, #4
 8010b9a:	4a7e      	ldr	r2, [pc, #504]	; (8010d94 <createProblem+0xfeec>)
 8010b9c:	461c      	mov	r4, r3
 8010b9e:	4613      	mov	r3, r2
 8010ba0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010ba2:	6020      	str	r0, [r4, #0]
 8010ba4:	6061      	str	r1, [r4, #4]
 8010ba6:	60a2      	str	r2, [r4, #8]
 8010ba8:	781b      	ldrb	r3, [r3, #0]
 8010baa:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8010bac:	687b      	ldr	r3, [r7, #4]
 8010bae:	33d8      	adds	r3, #216	; 0xd8
 8010bb0:	4974      	ldr	r1, [pc, #464]	; (8010d84 <createProblem+0xfedc>)
 8010bb2:	461a      	mov	r2, r3
 8010bb4:	460b      	mov	r3, r1
 8010bb6:	cb03      	ldmia	r3!, {r0, r1}
 8010bb8:	6010      	str	r0, [r2, #0]
 8010bba:	6051      	str	r1, [r2, #4]
 8010bbc:	881b      	ldrh	r3, [r3, #0]
 8010bbe:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 8010bc0:	687b      	ldr	r3, [r7, #4]
 8010bc2:	33cc      	adds	r3, #204	; 0xcc
 8010bc4:	4a74      	ldr	r2, [pc, #464]	; (8010d98 <createProblem+0xfef0>)
 8010bc6:	8811      	ldrh	r1, [r2, #0]
 8010bc8:	7892      	ldrb	r2, [r2, #2]
 8010bca:	8019      	strh	r1, [r3, #0]
 8010bcc:	709a      	strb	r2, [r3, #2]
			break;
 8010bce:	f009 beb1 	b.w	801a934 <createProblem+0x19a8c>
		case 539 :
			strcpy(p->name,"SOFA KING JUGGY");
 8010bd2:	687b      	ldr	r3, [r7, #4]
 8010bd4:	337c      	adds	r3, #124	; 0x7c
 8010bd6:	4a71      	ldr	r2, [pc, #452]	; (8010d9c <createProblem+0xfef4>)
 8010bd8:	461c      	mov	r4, r3
 8010bda:	4615      	mov	r5, r2
 8010bdc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010bde:	6020      	str	r0, [r4, #0]
 8010be0:	6061      	str	r1, [r4, #4]
 8010be2:	60a2      	str	r2, [r4, #8]
 8010be4:	60e3      	str	r3, [r4, #12]
			p->moveSize = 5;
 8010be6:	687b      	ldr	r3, [r7, #4]
 8010be8:	2205      	movs	r2, #5
 8010bea:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,H,H,D");
 8010bec:	687b      	ldr	r3, [r7, #4]
 8010bee:	3340      	adds	r3, #64	; 0x40
 8010bf0:	496b      	ldr	r1, [pc, #428]	; (8010da0 <createProblem+0xfef8>)
 8010bf2:	461a      	mov	r2, r3
 8010bf4:	460b      	mov	r3, r1
 8010bf6:	cb03      	ldmia	r3!, {r0, r1}
 8010bf8:	6010      	str	r0, [r2, #0]
 8010bfa:	6051      	str	r1, [r2, #4]
 8010bfc:	881b      	ldrh	r3, [r3, #0]
 8010bfe:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,10,12,16,18");
 8010c00:	687b      	ldr	r3, [r7, #4]
 8010c02:	3304      	adds	r3, #4
 8010c04:	4a67      	ldr	r2, [pc, #412]	; (8010da4 <createProblem+0xfefc>)
 8010c06:	461c      	mov	r4, r3
 8010c08:	4613      	mov	r3, r2
 8010c0a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010c0c:	6020      	str	r0, [r4, #0]
 8010c0e:	6061      	str	r1, [r4, #4]
 8010c10:	60a2      	str	r2, [r4, #8]
 8010c12:	881b      	ldrh	r3, [r3, #0]
 8010c14:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8010c16:	687b      	ldr	r3, [r7, #4]
 8010c18:	33d8      	adds	r3, #216	; 0xd8
 8010c1a:	495a      	ldr	r1, [pc, #360]	; (8010d84 <createProblem+0xfedc>)
 8010c1c:	461a      	mov	r2, r3
 8010c1e:	460b      	mov	r3, r1
 8010c20:	cb03      	ldmia	r3!, {r0, r1}
 8010c22:	6010      	str	r0, [r2, #0]
 8010c24:	6051      	str	r1, [r2, #4]
 8010c26:	881b      	ldrh	r3, [r3, #0]
 8010c28:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 8010c2a:	687b      	ldr	r3, [r7, #4]
 8010c2c:	33cc      	adds	r3, #204	; 0xcc
 8010c2e:	4a5e      	ldr	r2, [pc, #376]	; (8010da8 <createProblem+0xff00>)
 8010c30:	6810      	ldr	r0, [r2, #0]
 8010c32:	6018      	str	r0, [r3, #0]
			break;
 8010c34:	f009 be7e 	b.w	801a934 <createProblem+0x19a8c>
		case 54 :
			strcpy(p->name,"DU SPICCI");
 8010c38:	687b      	ldr	r3, [r7, #4]
 8010c3a:	337c      	adds	r3, #124	; 0x7c
 8010c3c:	495b      	ldr	r1, [pc, #364]	; (8010dac <createProblem+0xff04>)
 8010c3e:	461a      	mov	r2, r3
 8010c40:	460b      	mov	r3, r1
 8010c42:	cb03      	ldmia	r3!, {r0, r1}
 8010c44:	6010      	str	r0, [r2, #0]
 8010c46:	6051      	str	r1, [r2, #4]
 8010c48:	881b      	ldrh	r3, [r3, #0]
 8010c4a:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 8010c4c:	687b      	ldr	r3, [r7, #4]
 8010c4e:	2206      	movs	r2, #6
 8010c50:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,J,I,D,E,D");
 8010c52:	687b      	ldr	r3, [r7, #4]
 8010c54:	3340      	adds	r3, #64	; 0x40
 8010c56:	4a56      	ldr	r2, [pc, #344]	; (8010db0 <createProblem+0xff08>)
 8010c58:	461c      	mov	r4, r3
 8010c5a:	4613      	mov	r3, r2
 8010c5c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010c5e:	6020      	str	r0, [r4, #0]
 8010c60:	6061      	str	r1, [r4, #4]
 8010c62:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,10,11,14,18");
 8010c64:	687b      	ldr	r3, [r7, #4]
 8010c66:	3304      	adds	r3, #4
 8010c68:	4a52      	ldr	r2, [pc, #328]	; (8010db4 <createProblem+0xff0c>)
 8010c6a:	461c      	mov	r4, r3
 8010c6c:	4615      	mov	r5, r2
 8010c6e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010c70:	6020      	str	r0, [r4, #0]
 8010c72:	6061      	str	r1, [r4, #4]
 8010c74:	60a2      	str	r2, [r4, #8]
 8010c76:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8010c78:	687b      	ldr	r3, [r7, #4]
 8010c7a:	33d8      	adds	r3, #216	; 0xd8
 8010c7c:	4a4e      	ldr	r2, [pc, #312]	; (8010db8 <createProblem+0xff10>)
 8010c7e:	461c      	mov	r4, r3
 8010c80:	4613      	mov	r3, r2
 8010c82:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010c84:	6020      	str	r0, [r4, #0]
 8010c86:	6061      	str	r1, [r4, #4]
 8010c88:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 8010c8a:	687b      	ldr	r3, [r7, #4]
 8010c8c:	33cc      	adds	r3, #204	; 0xcc
 8010c8e:	4a4b      	ldr	r2, [pc, #300]	; (8010dbc <createProblem+0xff14>)
 8010c90:	6810      	ldr	r0, [r2, #0]
 8010c92:	6018      	str	r0, [r3, #0]
			break;
 8010c94:	f009 be4e 	b.w	801a934 <createProblem+0x19a8c>
		case 540 :
			strcpy(p->name,"SOFA KING SNAKED");
 8010c98:	687b      	ldr	r3, [r7, #4]
 8010c9a:	337c      	adds	r3, #124	; 0x7c
 8010c9c:	4a48      	ldr	r2, [pc, #288]	; (8010dc0 <createProblem+0xff18>)
 8010c9e:	461d      	mov	r5, r3
 8010ca0:	4614      	mov	r4, r2
 8010ca2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010ca4:	6028      	str	r0, [r5, #0]
 8010ca6:	6069      	str	r1, [r5, #4]
 8010ca8:	60aa      	str	r2, [r5, #8]
 8010caa:	60eb      	str	r3, [r5, #12]
 8010cac:	7823      	ldrb	r3, [r4, #0]
 8010cae:	742b      	strb	r3, [r5, #16]
			p->moveSize = 6;
 8010cb0:	687b      	ldr	r3, [r7, #4]
 8010cb2:	2206      	movs	r2, #6
 8010cb4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,E,D,I,D");
 8010cb6:	687b      	ldr	r3, [r7, #4]
 8010cb8:	3340      	adds	r3, #64	; 0x40
 8010cba:	4a42      	ldr	r2, [pc, #264]	; (8010dc4 <createProblem+0xff1c>)
 8010cbc:	461c      	mov	r4, r3
 8010cbe:	4613      	mov	r3, r2
 8010cc0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010cc2:	6020      	str	r0, [r4, #0]
 8010cc4:	6061      	str	r1, [r4, #4]
 8010cc6:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,12,11,14,18");
 8010cc8:	687b      	ldr	r3, [r7, #4]
 8010cca:	3304      	adds	r3, #4
 8010ccc:	4a3e      	ldr	r2, [pc, #248]	; (8010dc8 <createProblem+0xff20>)
 8010cce:	461c      	mov	r4, r3
 8010cd0:	4615      	mov	r5, r2
 8010cd2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010cd4:	6020      	str	r0, [r4, #0]
 8010cd6:	6061      	str	r1, [r4, #4]
 8010cd8:	60a2      	str	r2, [r4, #8]
 8010cda:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8010cdc:	687b      	ldr	r3, [r7, #4]
 8010cde:	33d8      	adds	r3, #216	; 0xd8
 8010ce0:	4a3a      	ldr	r2, [pc, #232]	; (8010dcc <createProblem+0xff24>)
 8010ce2:	461c      	mov	r4, r3
 8010ce4:	4613      	mov	r3, r2
 8010ce6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010ce8:	6020      	str	r0, [r4, #0]
 8010cea:	6061      	str	r1, [r4, #4]
 8010cec:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B");
 8010cee:	687b      	ldr	r3, [r7, #4]
 8010cf0:	33cc      	adds	r3, #204	; 0xcc
 8010cf2:	4a37      	ldr	r2, [pc, #220]	; (8010dd0 <createProblem+0xff28>)
 8010cf4:	8811      	ldrh	r1, [r2, #0]
 8010cf6:	7892      	ldrb	r2, [r2, #2]
 8010cf8:	8019      	strh	r1, [r3, #0]
 8010cfa:	709a      	strb	r2, [r3, #2]
			break;
 8010cfc:	f009 be1a 	b.w	801a934 <createProblem+0x19a8c>
		case 541 :
			strcpy(p->name,"HEAVY LIFTING");
 8010d00:	687b      	ldr	r3, [r7, #4]
 8010d02:	337c      	adds	r3, #124	; 0x7c
 8010d04:	4a33      	ldr	r2, [pc, #204]	; (8010dd4 <createProblem+0xff2c>)
 8010d06:	461c      	mov	r4, r3
 8010d08:	4613      	mov	r3, r2
 8010d0a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010d0c:	6020      	str	r0, [r4, #0]
 8010d0e:	6061      	str	r1, [r4, #4]
 8010d10:	60a2      	str	r2, [r4, #8]
 8010d12:	881b      	ldrh	r3, [r3, #0]
 8010d14:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 8010d16:	687b      	ldr	r3, [r7, #4]
 8010d18:	2206      	movs	r2, #6
 8010d1a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,H,G,D,D");
 8010d1c:	687b      	ldr	r3, [r7, #4]
 8010d1e:	3340      	adds	r3, #64	; 0x40
 8010d20:	4a2d      	ldr	r2, [pc, #180]	; (8010dd8 <createProblem+0xff30>)
 8010d22:	461c      	mov	r4, r3
 8010d24:	4613      	mov	r3, r2
 8010d26:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010d28:	6020      	str	r0, [r4, #0]
 8010d2a:	6061      	str	r1, [r4, #4]
 8010d2c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,6,10,14,15,18");
 8010d2e:	687b      	ldr	r3, [r7, #4]
 8010d30:	3304      	adds	r3, #4
 8010d32:	4a2a      	ldr	r2, [pc, #168]	; (8010ddc <createProblem+0xff34>)
 8010d34:	461c      	mov	r4, r3
 8010d36:	4615      	mov	r5, r2
 8010d38:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010d3a:	6020      	str	r0, [r4, #0]
 8010d3c:	6061      	str	r1, [r4, #4]
 8010d3e:	60a2      	str	r2, [r4, #8]
 8010d40:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8010d42:	687b      	ldr	r3, [r7, #4]
 8010d44:	33d8      	adds	r3, #216	; 0xd8
 8010d46:	4a1c      	ldr	r2, [pc, #112]	; (8010db8 <createProblem+0xff10>)
 8010d48:	461c      	mov	r4, r3
 8010d4a:	4613      	mov	r3, r2
 8010d4c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010d4e:	6020      	str	r0, [r4, #0]
 8010d50:	6061      	str	r1, [r4, #4]
 8010d52:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8010d54:	687b      	ldr	r3, [r7, #4]
 8010d56:	33cc      	adds	r3, #204	; 0xcc
 8010d58:	4a0b      	ldr	r2, [pc, #44]	; (8010d88 <createProblem+0xfee0>)
 8010d5a:	6810      	ldr	r0, [r2, #0]
 8010d5c:	6018      	str	r0, [r3, #0]
			break;
 8010d5e:	f009 bde9 	b.w	801a934 <createProblem+0x19a8c>
 8010d62:	bf00      	nop
 8010d64:	08026178 	.word	0x08026178
 8010d68:	08026180 	.word	0x08026180
 8010d6c:	08026190 	.word	0x08026190
 8010d70:	08020a14 	.word	0x08020a14
 8010d74:	08020830 	.word	0x08020830
 8010d78:	080261a4 	.word	0x080261a4
 8010d7c:	080261b0 	.word	0x080261b0
 8010d80:	08022934 	.word	0x08022934
 8010d84:	080208a0 	.word	0x080208a0
 8010d88:	080209a4 	.word	0x080209a4
 8010d8c:	080261bc 	.word	0x080261bc
 8010d90:	08022c80 	.word	0x08022c80
 8010d94:	080261d4 	.word	0x080261d4
 8010d98:	08020874 	.word	0x08020874
 8010d9c:	080261e4 	.word	0x080261e4
 8010da0:	080261f4 	.word	0x080261f4
 8010da4:	08026200 	.word	0x08026200
 8010da8:	08020dc8 	.word	0x08020dc8
 8010dac:	08026210 	.word	0x08026210
 8010db0:	0802621c 	.word	0x0802621c
 8010db4:	08026228 	.word	0x08026228
 8010db8:	08020e90 	.word	0x08020e90
 8010dbc:	08020928 	.word	0x08020928
 8010dc0:	08026238 	.word	0x08026238
 8010dc4:	0802624c 	.word	0x0802624c
 8010dc8:	08026258 	.word	0x08026258
 8010dcc:	0802091c 	.word	0x0802091c
 8010dd0:	080208ac 	.word	0x080208ac
 8010dd4:	08026268 	.word	0x08026268
 8010dd8:	08026278 	.word	0x08026278
 8010ddc:	08026284 	.word	0x08026284
		case 542 :
			strcpy(p->name,"UNSULLIED");
 8010de0:	687b      	ldr	r3, [r7, #4]
 8010de2:	337c      	adds	r3, #124	; 0x7c
 8010de4:	49aa      	ldr	r1, [pc, #680]	; (8011090 <createProblem+0x101e8>)
 8010de6:	461a      	mov	r2, r3
 8010de8:	460b      	mov	r3, r1
 8010dea:	cb03      	ldmia	r3!, {r0, r1}
 8010dec:	6010      	str	r0, [r2, #0]
 8010dee:	6051      	str	r1, [r2, #4]
 8010df0:	881b      	ldrh	r3, [r3, #0]
 8010df2:	8113      	strh	r3, [r2, #8]
			p->moveSize = 4;
 8010df4:	687b      	ldr	r3, [r7, #4]
 8010df6:	2204      	movs	r2, #4
 8010df8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,C,D");
 8010dfa:	687b      	ldr	r3, [r7, #4]
 8010dfc:	3340      	adds	r3, #64	; 0x40
 8010dfe:	49a5      	ldr	r1, [pc, #660]	; (8011094 <createProblem+0x101ec>)
 8010e00:	461a      	mov	r2, r3
 8010e02:	460b      	mov	r3, r1
 8010e04:	cb03      	ldmia	r3!, {r0, r1}
 8010e06:	6010      	str	r0, [r2, #0]
 8010e08:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"6,10,13,18");
 8010e0a:	687b      	ldr	r3, [r7, #4]
 8010e0c:	3304      	adds	r3, #4
 8010e0e:	49a2      	ldr	r1, [pc, #648]	; (8011098 <createProblem+0x101f0>)
 8010e10:	461a      	mov	r2, r3
 8010e12:	460b      	mov	r3, r1
 8010e14:	cb03      	ldmia	r3!, {r0, r1}
 8010e16:	6010      	str	r0, [r2, #0]
 8010e18:	6051      	str	r1, [r2, #4]
 8010e1a:	8819      	ldrh	r1, [r3, #0]
 8010e1c:	789b      	ldrb	r3, [r3, #2]
 8010e1e:	8111      	strh	r1, [r2, #8]
 8010e20:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 8010e22:	687b      	ldr	r3, [r7, #4]
 8010e24:	33d8      	adds	r3, #216	; 0xd8
 8010e26:	499d      	ldr	r1, [pc, #628]	; (801109c <createProblem+0x101f4>)
 8010e28:	461a      	mov	r2, r3
 8010e2a:	460b      	mov	r3, r1
 8010e2c:	cb03      	ldmia	r3!, {r0, r1}
 8010e2e:	6010      	str	r0, [r2, #0]
 8010e30:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7A");
 8010e32:	687b      	ldr	r3, [r7, #4]
 8010e34:	33cc      	adds	r3, #204	; 0xcc
 8010e36:	4a9a      	ldr	r2, [pc, #616]	; (80110a0 <createProblem+0x101f8>)
 8010e38:	8811      	ldrh	r1, [r2, #0]
 8010e3a:	7892      	ldrb	r2, [r2, #2]
 8010e3c:	8019      	strh	r1, [r3, #0]
 8010e3e:	709a      	strb	r2, [r3, #2]
			break;
 8010e40:	f009 bd78 	b.w	801a934 <createProblem+0x19a8c>
		case 543 :
			strcpy(p->name,"SLIPPERY WHEN WET");
 8010e44:	687b      	ldr	r3, [r7, #4]
 8010e46:	337c      	adds	r3, #124	; 0x7c
 8010e48:	4a96      	ldr	r2, [pc, #600]	; (80110a4 <createProblem+0x101fc>)
 8010e4a:	461d      	mov	r5, r3
 8010e4c:	4614      	mov	r4, r2
 8010e4e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010e50:	6028      	str	r0, [r5, #0]
 8010e52:	6069      	str	r1, [r5, #4]
 8010e54:	60aa      	str	r2, [r5, #8]
 8010e56:	60eb      	str	r3, [r5, #12]
 8010e58:	8823      	ldrh	r3, [r4, #0]
 8010e5a:	822b      	strh	r3, [r5, #16]
			p->moveSize = 7;
 8010e5c:	687b      	ldr	r3, [r7, #4]
 8010e5e:	2207      	movs	r2, #7
 8010e60:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,H,G,D,D,A");
 8010e62:	687b      	ldr	r3, [r7, #4]
 8010e64:	3340      	adds	r3, #64	; 0x40
 8010e66:	4a90      	ldr	r2, [pc, #576]	; (80110a8 <createProblem+0x10200>)
 8010e68:	461c      	mov	r4, r3
 8010e6a:	4613      	mov	r3, r2
 8010e6c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010e6e:	6020      	str	r0, [r4, #0]
 8010e70:	6061      	str	r1, [r4, #4]
 8010e72:	60a2      	str	r2, [r4, #8]
 8010e74:	881b      	ldrh	r3, [r3, #0]
 8010e76:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,10,14,15,18,18");
 8010e78:	687b      	ldr	r3, [r7, #4]
 8010e7a:	3304      	adds	r3, #4
 8010e7c:	4a8b      	ldr	r2, [pc, #556]	; (80110ac <createProblem+0x10204>)
 8010e7e:	461d      	mov	r5, r3
 8010e80:	4614      	mov	r4, r2
 8010e82:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010e84:	6028      	str	r0, [r5, #0]
 8010e86:	6069      	str	r1, [r5, #4]
 8010e88:	60aa      	str	r2, [r5, #8]
 8010e8a:	60eb      	str	r3, [r5, #12]
 8010e8c:	8823      	ldrh	r3, [r4, #0]
 8010e8e:	78a2      	ldrb	r2, [r4, #2]
 8010e90:	822b      	strh	r3, [r5, #16]
 8010e92:	4613      	mov	r3, r2
 8010e94:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,e,e");
 8010e96:	687b      	ldr	r3, [r7, #4]
 8010e98:	33d8      	adds	r3, #216	; 0xd8
 8010e9a:	4a85      	ldr	r2, [pc, #532]	; (80110b0 <createProblem+0x10208>)
 8010e9c:	461c      	mov	r4, r3
 8010e9e:	4613      	mov	r3, r2
 8010ea0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8010ea2:	6020      	str	r0, [r4, #0]
 8010ea4:	6061      	str	r1, [r4, #4]
 8010ea6:	60a2      	str	r2, [r4, #8]
 8010ea8:	881b      	ldrh	r3, [r3, #0]
 8010eaa:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8010eac:	687b      	ldr	r3, [r7, #4]
 8010eae:	33cc      	adds	r3, #204	; 0xcc
 8010eb0:	4a7b      	ldr	r2, [pc, #492]	; (80110a0 <createProblem+0x101f8>)
 8010eb2:	8811      	ldrh	r1, [r2, #0]
 8010eb4:	7892      	ldrb	r2, [r2, #2]
 8010eb6:	8019      	strh	r1, [r3, #0]
 8010eb8:	709a      	strb	r2, [r3, #2]
			break;
 8010eba:	f009 bd3b 	b.w	801a934 <createProblem+0x19a8c>
		case 544 :
			strcpy(p->name,"BLACK.HO");
 8010ebe:	687b      	ldr	r3, [r7, #4]
 8010ec0:	337c      	adds	r3, #124	; 0x7c
 8010ec2:	497c      	ldr	r1, [pc, #496]	; (80110b4 <createProblem+0x1020c>)
 8010ec4:	461a      	mov	r2, r3
 8010ec6:	460b      	mov	r3, r1
 8010ec8:	cb03      	ldmia	r3!, {r0, r1}
 8010eca:	6010      	str	r0, [r2, #0]
 8010ecc:	6051      	str	r1, [r2, #4]
 8010ece:	781b      	ldrb	r3, [r3, #0]
 8010ed0:	7213      	strb	r3, [r2, #8]
			p->moveSize = 9;
 8010ed2:	687b      	ldr	r3, [r7, #4]
 8010ed4:	2209      	movs	r2, #9
 8010ed6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,C,A,E,I,A,E,G,H");
 8010ed8:	687b      	ldr	r3, [r7, #4]
 8010eda:	3340      	adds	r3, #64	; 0x40
 8010edc:	4a76      	ldr	r2, [pc, #472]	; (80110b8 <createProblem+0x10210>)
 8010ede:	461d      	mov	r5, r3
 8010ee0:	4614      	mov	r4, r2
 8010ee2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010ee4:	6028      	str	r0, [r5, #0]
 8010ee6:	6069      	str	r1, [r5, #4]
 8010ee8:	60aa      	str	r2, [r5, #8]
 8010eea:	60eb      	str	r3, [r5, #12]
 8010eec:	8823      	ldrh	r3, [r4, #0]
 8010eee:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,5,9,9,18,14,16,17,12");
 8010ef0:	687b      	ldr	r3, [r7, #4]
 8010ef2:	3304      	adds	r3, #4
 8010ef4:	4a71      	ldr	r2, [pc, #452]	; (80110bc <createProblem+0x10214>)
 8010ef6:	461c      	mov	r4, r3
 8010ef8:	4615      	mov	r5, r2
 8010efa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010efc:	6020      	str	r0, [r4, #0]
 8010efe:	6061      	str	r1, [r4, #4]
 8010f00:	60a2      	str	r2, [r4, #8]
 8010f02:	60e3      	str	r3, [r4, #12]
 8010f04:	6828      	ldr	r0, [r5, #0]
 8010f06:	6120      	str	r0, [r4, #16]
 8010f08:	88ab      	ldrh	r3, [r5, #4]
 8010f0a:	79aa      	ldrb	r2, [r5, #6]
 8010f0c:	82a3      	strh	r3, [r4, #20]
 8010f0e:	4613      	mov	r3, r2
 8010f10:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,d,d,d,e,d,d,d,d");
 8010f12:	687b      	ldr	r3, [r7, #4]
 8010f14:	33d8      	adds	r3, #216	; 0xd8
 8010f16:	4a6a      	ldr	r2, [pc, #424]	; (80110c0 <createProblem+0x10218>)
 8010f18:	461d      	mov	r5, r3
 8010f1a:	4614      	mov	r4, r2
 8010f1c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010f1e:	6028      	str	r0, [r5, #0]
 8010f20:	6069      	str	r1, [r5, #4]
 8010f22:	60aa      	str	r2, [r5, #8]
 8010f24:	60eb      	str	r3, [r5, #12]
 8010f26:	8823      	ldrh	r3, [r4, #0]
 8010f28:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "7C");
 8010f2a:	687b      	ldr	r3, [r7, #4]
 8010f2c:	33cc      	adds	r3, #204	; 0xcc
 8010f2e:	4a65      	ldr	r2, [pc, #404]	; (80110c4 <createProblem+0x1021c>)
 8010f30:	8811      	ldrh	r1, [r2, #0]
 8010f32:	7892      	ldrb	r2, [r2, #2]
 8010f34:	8019      	strh	r1, [r3, #0]
 8010f36:	709a      	strb	r2, [r3, #2]
			break;
 8010f38:	f009 bcfc 	b.w	801a934 <createProblem+0x19a8c>
		case 545 :
			strcpy(p->name,"SZECHUAN");
 8010f3c:	687b      	ldr	r3, [r7, #4]
 8010f3e:	337c      	adds	r3, #124	; 0x7c
 8010f40:	4961      	ldr	r1, [pc, #388]	; (80110c8 <createProblem+0x10220>)
 8010f42:	461a      	mov	r2, r3
 8010f44:	460b      	mov	r3, r1
 8010f46:	cb03      	ldmia	r3!, {r0, r1}
 8010f48:	6010      	str	r0, [r2, #0]
 8010f4a:	6051      	str	r1, [r2, #4]
 8010f4c:	781b      	ldrb	r3, [r3, #0]
 8010f4e:	7213      	strb	r3, [r2, #8]
			p->moveSize = 9;
 8010f50:	687b      	ldr	r3, [r7, #4]
 8010f52:	2209      	movs	r2, #9
 8010f54:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,A,C,E,A,D,G,I");
 8010f56:	687b      	ldr	r3, [r7, #4]
 8010f58:	3340      	adds	r3, #64	; 0x40
 8010f5a:	4a5c      	ldr	r2, [pc, #368]	; (80110cc <createProblem+0x10224>)
 8010f5c:	461d      	mov	r5, r3
 8010f5e:	4614      	mov	r4, r2
 8010f60:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010f62:	6028      	str	r0, [r5, #0]
 8010f64:	6069      	str	r1, [r5, #4]
 8010f66:	60aa      	str	r2, [r5, #8]
 8010f68:	60eb      	str	r3, [r5, #12]
 8010f6a:	8823      	ldrh	r3, [r4, #0]
 8010f6c:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,8,9,5,12,14,15,17,18");
 8010f6e:	687b      	ldr	r3, [r7, #4]
 8010f70:	3304      	adds	r3, #4
 8010f72:	4a57      	ldr	r2, [pc, #348]	; (80110d0 <createProblem+0x10228>)
 8010f74:	461c      	mov	r4, r3
 8010f76:	4615      	mov	r5, r2
 8010f78:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010f7a:	6020      	str	r0, [r4, #0]
 8010f7c:	6061      	str	r1, [r4, #4]
 8010f7e:	60a2      	str	r2, [r4, #8]
 8010f80:	60e3      	str	r3, [r4, #12]
 8010f82:	6828      	ldr	r0, [r5, #0]
 8010f84:	6120      	str	r0, [r4, #16]
 8010f86:	88ab      	ldrh	r3, [r5, #4]
 8010f88:	79aa      	ldrb	r2, [r5, #6]
 8010f8a:	82a3      	strh	r3, [r4, #20]
 8010f8c:	4613      	mov	r3, r2
 8010f8e:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,d,e");
 8010f90:	687b      	ldr	r3, [r7, #4]
 8010f92:	33d8      	adds	r3, #216	; 0xd8
 8010f94:	4a4f      	ldr	r2, [pc, #316]	; (80110d4 <createProblem+0x1022c>)
 8010f96:	461d      	mov	r5, r3
 8010f98:	4614      	mov	r4, r2
 8010f9a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010f9c:	6028      	str	r0, [r5, #0]
 8010f9e:	6069      	str	r1, [r5, #4]
 8010fa0:	60aa      	str	r2, [r5, #8]
 8010fa2:	60eb      	str	r3, [r5, #12]
 8010fa4:	8823      	ldrh	r3, [r4, #0]
 8010fa6:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "7B");
 8010fa8:	687b      	ldr	r3, [r7, #4]
 8010faa:	33cc      	adds	r3, #204	; 0xcc
 8010fac:	4a4a      	ldr	r2, [pc, #296]	; (80110d8 <createProblem+0x10230>)
 8010fae:	8811      	ldrh	r1, [r2, #0]
 8010fb0:	7892      	ldrb	r2, [r2, #2]
 8010fb2:	8019      	strh	r1, [r3, #0]
 8010fb4:	709a      	strb	r2, [r3, #2]
			break;
 8010fb6:	f009 bcbd 	b.w	801a934 <createProblem+0x19a8c>
		case 546 :
			strcpy(p->name,"FLOOZY DOO");
 8010fba:	687b      	ldr	r3, [r7, #4]
 8010fbc:	337c      	adds	r3, #124	; 0x7c
 8010fbe:	4947      	ldr	r1, [pc, #284]	; (80110dc <createProblem+0x10234>)
 8010fc0:	461a      	mov	r2, r3
 8010fc2:	460b      	mov	r3, r1
 8010fc4:	cb03      	ldmia	r3!, {r0, r1}
 8010fc6:	6010      	str	r0, [r2, #0]
 8010fc8:	6051      	str	r1, [r2, #4]
 8010fca:	8819      	ldrh	r1, [r3, #0]
 8010fcc:	789b      	ldrb	r3, [r3, #2]
 8010fce:	8111      	strh	r1, [r2, #8]
 8010fd0:	7293      	strb	r3, [r2, #10]
			p->moveSize = 8;
 8010fd2:	687b      	ldr	r3, [r7, #4]
 8010fd4:	2208      	movs	r2, #8
 8010fd6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,G,F,A,C,A,D");
 8010fd8:	687b      	ldr	r3, [r7, #4]
 8010fda:	3340      	adds	r3, #64	; 0x40
 8010fdc:	4a40      	ldr	r2, [pc, #256]	; (80110e0 <createProblem+0x10238>)
 8010fde:	461c      	mov	r4, r3
 8010fe0:	4615      	mov	r5, r2
 8010fe2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8010fe4:	6020      	str	r0, [r4, #0]
 8010fe6:	6061      	str	r1, [r4, #4]
 8010fe8:	60a2      	str	r2, [r4, #8]
 8010fea:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,9,11,9,13,14,18");
 8010fec:	687b      	ldr	r3, [r7, #4]
 8010fee:	3304      	adds	r3, #4
 8010ff0:	4a3c      	ldr	r2, [pc, #240]	; (80110e4 <createProblem+0x1023c>)
 8010ff2:	461d      	mov	r5, r3
 8010ff4:	4614      	mov	r4, r2
 8010ff6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8010ff8:	6028      	str	r0, [r5, #0]
 8010ffa:	6069      	str	r1, [r5, #4]
 8010ffc:	60aa      	str	r2, [r5, #8]
 8010ffe:	60eb      	str	r3, [r5, #12]
 8011000:	6820      	ldr	r0, [r4, #0]
 8011002:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8011004:	687b      	ldr	r3, [r7, #4]
 8011006:	33d8      	adds	r3, #216	; 0xd8
 8011008:	4a37      	ldr	r2, [pc, #220]	; (80110e8 <createProblem+0x10240>)
 801100a:	461c      	mov	r4, r3
 801100c:	4615      	mov	r5, r2
 801100e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8011010:	6020      	str	r0, [r4, #0]
 8011012:	6061      	str	r1, [r4, #4]
 8011014:	60a2      	str	r2, [r4, #8]
 8011016:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 8011018:	687b      	ldr	r3, [r7, #4]
 801101a:	33cc      	adds	r3, #204	; 0xcc
 801101c:	4a33      	ldr	r2, [pc, #204]	; (80110ec <createProblem+0x10244>)
 801101e:	6810      	ldr	r0, [r2, #0]
 8011020:	6018      	str	r0, [r3, #0]
			break;
 8011022:	f009 bc87 	b.w	801a934 <createProblem+0x19a8c>
		case 547 :
			strcpy(p->name,"HOG TROUGH");
 8011026:	687b      	ldr	r3, [r7, #4]
 8011028:	337c      	adds	r3, #124	; 0x7c
 801102a:	4931      	ldr	r1, [pc, #196]	; (80110f0 <createProblem+0x10248>)
 801102c:	461a      	mov	r2, r3
 801102e:	460b      	mov	r3, r1
 8011030:	cb03      	ldmia	r3!, {r0, r1}
 8011032:	6010      	str	r0, [r2, #0]
 8011034:	6051      	str	r1, [r2, #4]
 8011036:	8819      	ldrh	r1, [r3, #0]
 8011038:	789b      	ldrb	r3, [r3, #2]
 801103a:	8111      	strh	r1, [r2, #8]
 801103c:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 801103e:	687b      	ldr	r3, [r7, #4]
 8011040:	2206      	movs	r2, #6
 8011042:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,G,C,D,D");
 8011044:	687b      	ldr	r3, [r7, #4]
 8011046:	3340      	adds	r3, #64	; 0x40
 8011048:	4a2a      	ldr	r2, [pc, #168]	; (80110f4 <createProblem+0x1024c>)
 801104a:	461c      	mov	r4, r3
 801104c:	4613      	mov	r3, r2
 801104e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011050:	6020      	str	r0, [r4, #0]
 8011052:	6061      	str	r1, [r4, #4]
 8011054:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,7,9,13,15,18");
 8011056:	687b      	ldr	r3, [r7, #4]
 8011058:	3304      	adds	r3, #4
 801105a:	4a27      	ldr	r2, [pc, #156]	; (80110f8 <createProblem+0x10250>)
 801105c:	461c      	mov	r4, r3
 801105e:	4613      	mov	r3, r2
 8011060:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011062:	6020      	str	r0, [r4, #0]
 8011064:	6061      	str	r1, [r4, #4]
 8011066:	60a2      	str	r2, [r4, #8]
 8011068:	881a      	ldrh	r2, [r3, #0]
 801106a:	789b      	ldrb	r3, [r3, #2]
 801106c:	81a2      	strh	r2, [r4, #12]
 801106e:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8011070:	687b      	ldr	r3, [r7, #4]
 8011072:	33d8      	adds	r3, #216	; 0xd8
 8011074:	4a21      	ldr	r2, [pc, #132]	; (80110fc <createProblem+0x10254>)
 8011076:	461c      	mov	r4, r3
 8011078:	4613      	mov	r3, r2
 801107a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801107c:	6020      	str	r0, [r4, #0]
 801107e:	6061      	str	r1, [r4, #4]
 8011080:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 8011082:	687b      	ldr	r3, [r7, #4]
 8011084:	33cc      	adds	r3, #204	; 0xcc
 8011086:	4a1e      	ldr	r2, [pc, #120]	; (8011100 <createProblem+0x10258>)
 8011088:	6810      	ldr	r0, [r2, #0]
 801108a:	6018      	str	r0, [r3, #0]
			break;
 801108c:	f009 bc52 	b.w	801a934 <createProblem+0x19a8c>
 8011090:	08026294 	.word	0x08026294
 8011094:	080262a0 	.word	0x080262a0
 8011098:	08023694 	.word	0x08023694
 801109c:	080215a8 	.word	0x080215a8
 80110a0:	08020874 	.word	0x08020874
 80110a4:	080262a8 	.word	0x080262a8
 80110a8:	080262bc 	.word	0x080262bc
 80110ac:	080262cc 	.word	0x080262cc
 80110b0:	080262e0 	.word	0x080262e0
 80110b4:	080262f0 	.word	0x080262f0
 80110b8:	080262fc 	.word	0x080262fc
 80110bc:	08026310 	.word	0x08026310
 80110c0:	08026328 	.word	0x08026328
 80110c4:	08020b0c 	.word	0x08020b0c
 80110c8:	0802633c 	.word	0x0802633c
 80110cc:	08026348 	.word	0x08026348
 80110d0:	0802635c 	.word	0x0802635c
 80110d4:	08022f10 	.word	0x08022f10
 80110d8:	080208ac 	.word	0x080208ac
 80110dc:	08026374 	.word	0x08026374
 80110e0:	08026380 	.word	0x08026380
 80110e4:	08026390 	.word	0x08026390
 80110e8:	080209d8 	.word	0x080209d8
 80110ec:	080209a4 	.word	0x080209a4
 80110f0:	080263a4 	.word	0x080263a4
 80110f4:	080263b0 	.word	0x080263b0
 80110f8:	080263bc 	.word	0x080263bc
 80110fc:	0802091c 	.word	0x0802091c
 8011100:	08020830 	.word	0x08020830
		case 548 :
			strcpy(p->name,"KILL HIM YOUR LEGS");
 8011104:	687b      	ldr	r3, [r7, #4]
 8011106:	337c      	adds	r3, #124	; 0x7c
 8011108:	4ab6      	ldr	r2, [pc, #728]	; (80113e4 <createProblem+0x1053c>)
 801110a:	461d      	mov	r5, r3
 801110c:	4614      	mov	r4, r2
 801110e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011110:	6028      	str	r0, [r5, #0]
 8011112:	6069      	str	r1, [r5, #4]
 8011114:	60aa      	str	r2, [r5, #8]
 8011116:	60eb      	str	r3, [r5, #12]
 8011118:	8823      	ldrh	r3, [r4, #0]
 801111a:	78a2      	ldrb	r2, [r4, #2]
 801111c:	822b      	strh	r3, [r5, #16]
 801111e:	4613      	mov	r3, r2
 8011120:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 4;
 8011122:	687b      	ldr	r3, [r7, #4]
 8011124:	2204      	movs	r2, #4
 8011126:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,I");
 8011128:	687b      	ldr	r3, [r7, #4]
 801112a:	3340      	adds	r3, #64	; 0x40
 801112c:	49ae      	ldr	r1, [pc, #696]	; (80113e8 <createProblem+0x10540>)
 801112e:	461a      	mov	r2, r3
 8011130:	460b      	mov	r3, r1
 8011132:	cb03      	ldmia	r3!, {r0, r1}
 8011134:	6010      	str	r0, [r2, #0]
 8011136:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"4,10,13,18");
 8011138:	687b      	ldr	r3, [r7, #4]
 801113a:	3304      	adds	r3, #4
 801113c:	49ab      	ldr	r1, [pc, #684]	; (80113ec <createProblem+0x10544>)
 801113e:	461a      	mov	r2, r3
 8011140:	460b      	mov	r3, r1
 8011142:	cb03      	ldmia	r3!, {r0, r1}
 8011144:	6010      	str	r0, [r2, #0]
 8011146:	6051      	str	r1, [r2, #4]
 8011148:	8819      	ldrh	r1, [r3, #0]
 801114a:	789b      	ldrb	r3, [r3, #2]
 801114c:	8111      	strh	r1, [r2, #8]
 801114e:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 8011150:	687b      	ldr	r3, [r7, #4]
 8011152:	33d8      	adds	r3, #216	; 0xd8
 8011154:	49a6      	ldr	r1, [pc, #664]	; (80113f0 <createProblem+0x10548>)
 8011156:	461a      	mov	r2, r3
 8011158:	460b      	mov	r3, r1
 801115a:	cb03      	ldmia	r3!, {r0, r1}
 801115c:	6010      	str	r0, [r2, #0]
 801115e:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7B");
 8011160:	687b      	ldr	r3, [r7, #4]
 8011162:	33cc      	adds	r3, #204	; 0xcc
 8011164:	4aa3      	ldr	r2, [pc, #652]	; (80113f4 <createProblem+0x1054c>)
 8011166:	8811      	ldrh	r1, [r2, #0]
 8011168:	7892      	ldrb	r2, [r2, #2]
 801116a:	8019      	strh	r1, [r3, #0]
 801116c:	709a      	strb	r2, [r3, #2]
			break;
 801116e:	f009 bbe1 	b.w	801a934 <createProblem+0x19a8c>
		case 549 :
			strcpy(p->name,"LITTLE MAN ON CAMPUS");
 8011172:	687b      	ldr	r3, [r7, #4]
 8011174:	337c      	adds	r3, #124	; 0x7c
 8011176:	4aa0      	ldr	r2, [pc, #640]	; (80113f8 <createProblem+0x10550>)
 8011178:	461d      	mov	r5, r3
 801117a:	4614      	mov	r4, r2
 801117c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801117e:	6028      	str	r0, [r5, #0]
 8011180:	6069      	str	r1, [r5, #4]
 8011182:	60aa      	str	r2, [r5, #8]
 8011184:	60eb      	str	r3, [r5, #12]
 8011186:	6820      	ldr	r0, [r4, #0]
 8011188:	6128      	str	r0, [r5, #16]
 801118a:	7923      	ldrb	r3, [r4, #4]
 801118c:	752b      	strb	r3, [r5, #20]
			p->moveSize = 6;
 801118e:	687b      	ldr	r3, [r7, #4]
 8011190:	2206      	movs	r2, #6
 8011192:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,B,F,H,K,I");
 8011194:	687b      	ldr	r3, [r7, #4]
 8011196:	3340      	adds	r3, #64	; 0x40
 8011198:	4a98      	ldr	r2, [pc, #608]	; (80113fc <createProblem+0x10554>)
 801119a:	461c      	mov	r4, r3
 801119c:	4613      	mov	r3, r2
 801119e:	cb07      	ldmia	r3!, {r0, r1, r2}
 80111a0:	6020      	str	r0, [r4, #0]
 80111a2:	6061      	str	r1, [r4, #4]
 80111a4:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,11,12,14,18");
 80111a6:	687b      	ldr	r3, [r7, #4]
 80111a8:	3304      	adds	r3, #4
 80111aa:	4a95      	ldr	r2, [pc, #596]	; (8011400 <createProblem+0x10558>)
 80111ac:	461c      	mov	r4, r3
 80111ae:	4615      	mov	r5, r2
 80111b0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80111b2:	6020      	str	r0, [r4, #0]
 80111b4:	6061      	str	r1, [r4, #4]
 80111b6:	60a2      	str	r2, [r4, #8]
 80111b8:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80111ba:	687b      	ldr	r3, [r7, #4]
 80111bc:	33d8      	adds	r3, #216	; 0xd8
 80111be:	4a91      	ldr	r2, [pc, #580]	; (8011404 <createProblem+0x1055c>)
 80111c0:	461c      	mov	r4, r3
 80111c2:	4613      	mov	r3, r2
 80111c4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80111c6:	6020      	str	r0, [r4, #0]
 80111c8:	6061      	str	r1, [r4, #4]
 80111ca:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B");
 80111cc:	687b      	ldr	r3, [r7, #4]
 80111ce:	33cc      	adds	r3, #204	; 0xcc
 80111d0:	4a88      	ldr	r2, [pc, #544]	; (80113f4 <createProblem+0x1054c>)
 80111d2:	8811      	ldrh	r1, [r2, #0]
 80111d4:	7892      	ldrb	r2, [r2, #2]
 80111d6:	8019      	strh	r1, [r3, #0]
 80111d8:	709a      	strb	r2, [r3, #2]
			break;
 80111da:	f009 bbab 	b.w	801a934 <createProblem+0x19a8c>
		case 55 :
			strcpy(p->name,"BOGLI FOR PRESIDENT");
 80111de:	687b      	ldr	r3, [r7, #4]
 80111e0:	337c      	adds	r3, #124	; 0x7c
 80111e2:	4a89      	ldr	r2, [pc, #548]	; (8011408 <createProblem+0x10560>)
 80111e4:	461d      	mov	r5, r3
 80111e6:	4614      	mov	r4, r2
 80111e8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80111ea:	6028      	str	r0, [r5, #0]
 80111ec:	6069      	str	r1, [r5, #4]
 80111ee:	60aa      	str	r2, [r5, #8]
 80111f0:	60eb      	str	r3, [r5, #12]
 80111f2:	6820      	ldr	r0, [r4, #0]
 80111f4:	6128      	str	r0, [r5, #16]
			p->moveSize = 7;
 80111f6:	687b      	ldr	r3, [r7, #4]
 80111f8:	2207      	movs	r2, #7
 80111fa:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,I,D,D,A,A");
 80111fc:	687b      	ldr	r3, [r7, #4]
 80111fe:	3340      	adds	r3, #64	; 0x40
 8011200:	4a82      	ldr	r2, [pc, #520]	; (801140c <createProblem+0x10564>)
 8011202:	461c      	mov	r4, r3
 8011204:	4613      	mov	r3, r2
 8011206:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011208:	6020      	str	r0, [r4, #0]
 801120a:	6061      	str	r1, [r4, #4]
 801120c:	60a2      	str	r2, [r4, #8]
 801120e:	881b      	ldrh	r3, [r3, #0]
 8011210:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,9,11,15,14,18");
 8011212:	687b      	ldr	r3, [r7, #4]
 8011214:	3304      	adds	r3, #4
 8011216:	4a7e      	ldr	r2, [pc, #504]	; (8011410 <createProblem+0x10568>)
 8011218:	461d      	mov	r5, r3
 801121a:	4614      	mov	r4, r2
 801121c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801121e:	6028      	str	r0, [r5, #0]
 8011220:	6069      	str	r1, [r5, #4]
 8011222:	60aa      	str	r2, [r5, #8]
 8011224:	60eb      	str	r3, [r5, #12]
 8011226:	8823      	ldrh	r3, [r4, #0]
 8011228:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 801122a:	687b      	ldr	r3, [r7, #4]
 801122c:	33d8      	adds	r3, #216	; 0xd8
 801122e:	4a79      	ldr	r2, [pc, #484]	; (8011414 <createProblem+0x1056c>)
 8011230:	461c      	mov	r4, r3
 8011232:	4613      	mov	r3, r2
 8011234:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011236:	6020      	str	r0, [r4, #0]
 8011238:	6061      	str	r1, [r4, #4]
 801123a:	60a2      	str	r2, [r4, #8]
 801123c:	881b      	ldrh	r3, [r3, #0]
 801123e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 8011240:	687b      	ldr	r3, [r7, #4]
 8011242:	33cc      	adds	r3, #204	; 0xcc
 8011244:	4a74      	ldr	r2, [pc, #464]	; (8011418 <createProblem+0x10570>)
 8011246:	6810      	ldr	r0, [r2, #0]
 8011248:	6018      	str	r0, [r3, #0]
			break;
 801124a:	f009 bb73 	b.w	801a934 <createProblem+0x19a8c>
		case 550 :
			strcpy(p->name,"XCRAG");
 801124e:	687b      	ldr	r3, [r7, #4]
 8011250:	337c      	adds	r3, #124	; 0x7c
 8011252:	4a72      	ldr	r2, [pc, #456]	; (801141c <createProblem+0x10574>)
 8011254:	6810      	ldr	r0, [r2, #0]
 8011256:	6018      	str	r0, [r3, #0]
 8011258:	8892      	ldrh	r2, [r2, #4]
 801125a:	809a      	strh	r2, [r3, #4]
			p->moveSize = 7;
 801125c:	687b      	ldr	r3, [r7, #4]
 801125e:	2207      	movs	r2, #7
 8011260:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,G,C,E,I");
 8011262:	687b      	ldr	r3, [r7, #4]
 8011264:	3340      	adds	r3, #64	; 0x40
 8011266:	4a6e      	ldr	r2, [pc, #440]	; (8011420 <createProblem+0x10578>)
 8011268:	461c      	mov	r4, r3
 801126a:	4613      	mov	r3, r2
 801126c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801126e:	6020      	str	r0, [r4, #0]
 8011270:	6061      	str	r1, [r4, #4]
 8011272:	60a2      	str	r2, [r4, #8]
 8011274:	881b      	ldrh	r3, [r3, #0]
 8011276:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,5,8,10,13,14,18");
 8011278:	687b      	ldr	r3, [r7, #4]
 801127a:	3304      	adds	r3, #4
 801127c:	4a69      	ldr	r2, [pc, #420]	; (8011424 <createProblem+0x1057c>)
 801127e:	461d      	mov	r5, r3
 8011280:	4614      	mov	r4, r2
 8011282:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011284:	6028      	str	r0, [r5, #0]
 8011286:	6069      	str	r1, [r5, #4]
 8011288:	60aa      	str	r2, [r5, #8]
 801128a:	60eb      	str	r3, [r5, #12]
 801128c:	8823      	ldrh	r3, [r4, #0]
 801128e:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8011290:	687b      	ldr	r3, [r7, #4]
 8011292:	33d8      	adds	r3, #216	; 0xd8
 8011294:	4a5f      	ldr	r2, [pc, #380]	; (8011414 <createProblem+0x1056c>)
 8011296:	461c      	mov	r4, r3
 8011298:	4613      	mov	r3, r2
 801129a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801129c:	6020      	str	r0, [r4, #0]
 801129e:	6061      	str	r1, [r4, #4]
 80112a0:	60a2      	str	r2, [r4, #8]
 80112a2:	881b      	ldrh	r3, [r3, #0]
 80112a4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 80112a6:	687b      	ldr	r3, [r7, #4]
 80112a8:	33cc      	adds	r3, #204	; 0xcc
 80112aa:	4a5f      	ldr	r2, [pc, #380]	; (8011428 <createProblem+0x10580>)
 80112ac:	8811      	ldrh	r1, [r2, #0]
 80112ae:	7892      	ldrb	r2, [r2, #2]
 80112b0:	8019      	strh	r1, [r3, #0]
 80112b2:	709a      	strb	r2, [r3, #2]
			break;
 80112b4:	f009 bb3e 	b.w	801a934 <createProblem+0x19a8c>
		case 551 :
			strcpy(p->name,"RIESKO");
 80112b8:	687b      	ldr	r3, [r7, #4]
 80112ba:	337c      	adds	r3, #124	; 0x7c
 80112bc:	4a5b      	ldr	r2, [pc, #364]	; (801142c <createProblem+0x10584>)
 80112be:	6810      	ldr	r0, [r2, #0]
 80112c0:	6018      	str	r0, [r3, #0]
 80112c2:	8891      	ldrh	r1, [r2, #4]
 80112c4:	7992      	ldrb	r2, [r2, #6]
 80112c6:	8099      	strh	r1, [r3, #4]
 80112c8:	719a      	strb	r2, [r3, #6]
			p->moveSize = 6;
 80112ca:	687b      	ldr	r3, [r7, #4]
 80112cc:	2206      	movs	r2, #6
 80112ce:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,K,F,E,A");
 80112d0:	687b      	ldr	r3, [r7, #4]
 80112d2:	3340      	adds	r3, #64	; 0x40
 80112d4:	4a56      	ldr	r2, [pc, #344]	; (8011430 <createProblem+0x10588>)
 80112d6:	461c      	mov	r4, r3
 80112d8:	4613      	mov	r3, r2
 80112da:	cb07      	ldmia	r3!, {r0, r1, r2}
 80112dc:	6020      	str	r0, [r4, #0]
 80112de:	6061      	str	r1, [r4, #4]
 80112e0:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,9,11,14,18");
 80112e2:	687b      	ldr	r3, [r7, #4]
 80112e4:	3304      	adds	r3, #4
 80112e6:	4a53      	ldr	r2, [pc, #332]	; (8011434 <createProblem+0x1058c>)
 80112e8:	461c      	mov	r4, r3
 80112ea:	4613      	mov	r3, r2
 80112ec:	cb07      	ldmia	r3!, {r0, r1, r2}
 80112ee:	6020      	str	r0, [r4, #0]
 80112f0:	6061      	str	r1, [r4, #4]
 80112f2:	60a2      	str	r2, [r4, #8]
 80112f4:	881a      	ldrh	r2, [r3, #0]
 80112f6:	789b      	ldrb	r3, [r3, #2]
 80112f8:	81a2      	strh	r2, [r4, #12]
 80112fa:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 80112fc:	687b      	ldr	r3, [r7, #4]
 80112fe:	33d8      	adds	r3, #216	; 0xd8
 8011300:	4a4d      	ldr	r2, [pc, #308]	; (8011438 <createProblem+0x10590>)
 8011302:	461c      	mov	r4, r3
 8011304:	4613      	mov	r3, r2
 8011306:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011308:	6020      	str	r0, [r4, #0]
 801130a:	6061      	str	r1, [r4, #4]
 801130c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 801130e:	687b      	ldr	r3, [r7, #4]
 8011310:	33cc      	adds	r3, #204	; 0xcc
 8011312:	4a4a      	ldr	r2, [pc, #296]	; (801143c <createProblem+0x10594>)
 8011314:	6810      	ldr	r0, [r2, #0]
 8011316:	6018      	str	r0, [r3, #0]
			break;
 8011318:	f009 bb0c 	b.w	801a934 <createProblem+0x19a8c>
		case 552 :
			strcpy(p->name,"KIWAK");
 801131c:	687b      	ldr	r3, [r7, #4]
 801131e:	337c      	adds	r3, #124	; 0x7c
 8011320:	4a47      	ldr	r2, [pc, #284]	; (8011440 <createProblem+0x10598>)
 8011322:	6810      	ldr	r0, [r2, #0]
 8011324:	6018      	str	r0, [r3, #0]
 8011326:	8892      	ldrh	r2, [r2, #4]
 8011328:	809a      	strh	r2, [r3, #4]
			p->moveSize = 7;
 801132a:	687b      	ldr	r3, [r7, #4]
 801132c:	2207      	movs	r2, #7
 801132e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,H,E,G,D,A");
 8011330:	687b      	ldr	r3, [r7, #4]
 8011332:	3340      	adds	r3, #64	; 0x40
 8011334:	4a43      	ldr	r2, [pc, #268]	; (8011444 <createProblem+0x1059c>)
 8011336:	461c      	mov	r4, r3
 8011338:	4613      	mov	r3, r2
 801133a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801133c:	6020      	str	r0, [r4, #0]
 801133e:	6061      	str	r1, [r4, #4]
 8011340:	60a2      	str	r2, [r4, #8]
 8011342:	881b      	ldrh	r3, [r3, #0]
 8011344:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,12,14,9,15,18");
 8011346:	687b      	ldr	r3, [r7, #4]
 8011348:	3304      	adds	r3, #4
 801134a:	4a3f      	ldr	r2, [pc, #252]	; (8011448 <createProblem+0x105a0>)
 801134c:	461d      	mov	r5, r3
 801134e:	4614      	mov	r4, r2
 8011350:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011352:	6028      	str	r0, [r5, #0]
 8011354:	6069      	str	r1, [r5, #4]
 8011356:	60aa      	str	r2, [r5, #8]
 8011358:	60eb      	str	r3, [r5, #12]
 801135a:	8823      	ldrh	r3, [r4, #0]
 801135c:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 801135e:	687b      	ldr	r3, [r7, #4]
 8011360:	33d8      	adds	r3, #216	; 0xd8
 8011362:	4a3a      	ldr	r2, [pc, #232]	; (801144c <createProblem+0x105a4>)
 8011364:	461c      	mov	r4, r3
 8011366:	4613      	mov	r3, r2
 8011368:	cb07      	ldmia	r3!, {r0, r1, r2}
 801136a:	6020      	str	r0, [r4, #0]
 801136c:	6061      	str	r1, [r4, #4]
 801136e:	60a2      	str	r2, [r4, #8]
 8011370:	881b      	ldrh	r3, [r3, #0]
 8011372:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8011374:	687b      	ldr	r3, [r7, #4]
 8011376:	33cc      	adds	r3, #204	; 0xcc
 8011378:	4a30      	ldr	r2, [pc, #192]	; (801143c <createProblem+0x10594>)
 801137a:	6810      	ldr	r0, [r2, #0]
 801137c:	6018      	str	r0, [r3, #0]
			break;
 801137e:	f009 bad9 	b.w	801a934 <createProblem+0x19a8c>
		case 553 :
			strcpy(p->name,"BLACK MARINO");
 8011382:	687b      	ldr	r3, [r7, #4]
 8011384:	337c      	adds	r3, #124	; 0x7c
 8011386:	4a32      	ldr	r2, [pc, #200]	; (8011450 <createProblem+0x105a8>)
 8011388:	461c      	mov	r4, r3
 801138a:	4613      	mov	r3, r2
 801138c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801138e:	6020      	str	r0, [r4, #0]
 8011390:	6061      	str	r1, [r4, #4]
 8011392:	60a2      	str	r2, [r4, #8]
 8011394:	781b      	ldrb	r3, [r3, #0]
 8011396:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 8011398:	687b      	ldr	r3, [r7, #4]
 801139a:	2206      	movs	r2, #6
 801139c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,J,H,C,E,D");
 801139e:	687b      	ldr	r3, [r7, #4]
 80113a0:	3340      	adds	r3, #64	; 0x40
 80113a2:	4a2c      	ldr	r2, [pc, #176]	; (8011454 <createProblem+0x105ac>)
 80113a4:	461c      	mov	r4, r3
 80113a6:	4613      	mov	r3, r2
 80113a8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80113aa:	6020      	str	r0, [r4, #0]
 80113ac:	6061      	str	r1, [r4, #4]
 80113ae:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,10,13,16,18");
 80113b0:	687b      	ldr	r3, [r7, #4]
 80113b2:	3304      	adds	r3, #4
 80113b4:	4a28      	ldr	r2, [pc, #160]	; (8011458 <createProblem+0x105b0>)
 80113b6:	461c      	mov	r4, r3
 80113b8:	4615      	mov	r5, r2
 80113ba:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80113bc:	6020      	str	r0, [r4, #0]
 80113be:	6061      	str	r1, [r4, #4]
 80113c0:	60a2      	str	r2, [r4, #8]
 80113c2:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 80113c4:	687b      	ldr	r3, [r7, #4]
 80113c6:	33d8      	adds	r3, #216	; 0xd8
 80113c8:	4a1b      	ldr	r2, [pc, #108]	; (8011438 <createProblem+0x10590>)
 80113ca:	461c      	mov	r4, r3
 80113cc:	4613      	mov	r3, r2
 80113ce:	cb07      	ldmia	r3!, {r0, r1, r2}
 80113d0:	6020      	str	r0, [r4, #0]
 80113d2:	6061      	str	r1, [r4, #4]
 80113d4:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 80113d6:	687b      	ldr	r3, [r7, #4]
 80113d8:	33cc      	adds	r3, #204	; 0xcc
 80113da:	4a20      	ldr	r2, [pc, #128]	; (801145c <createProblem+0x105b4>)
 80113dc:	6810      	ldr	r0, [r2, #0]
 80113de:	6018      	str	r0, [r3, #0]
			break;
 80113e0:	f009 baa8 	b.w	801a934 <createProblem+0x19a8c>
 80113e4:	080263cc 	.word	0x080263cc
 80113e8:	080263e0 	.word	0x080263e0
 80113ec:	08022fa8 	.word	0x08022fa8
 80113f0:	080215a8 	.word	0x080215a8
 80113f4:	080208ac 	.word	0x080208ac
 80113f8:	080263e8 	.word	0x080263e8
 80113fc:	08026400 	.word	0x08026400
 8011400:	0802640c 	.word	0x0802640c
 8011404:	0802091c 	.word	0x0802091c
 8011408:	0802641c 	.word	0x0802641c
 801140c:	08026430 	.word	0x08026430
 8011410:	08026440 	.word	0x08026440
 8011414:	08020820 	.word	0x08020820
 8011418:	080209a4 	.word	0x080209a4
 801141c:	08026454 	.word	0x08026454
 8011420:	0802645c 	.word	0x0802645c
 8011424:	0802646c 	.word	0x0802646c
 8011428:	080208f0 	.word	0x080208f0
 801142c:	08026480 	.word	0x08026480
 8011430:	08026488 	.word	0x08026488
 8011434:	08026494 	.word	0x08026494
 8011438:	08020e90 	.word	0x08020e90
 801143c:	08020830 	.word	0x08020830
 8011440:	080264a4 	.word	0x080264a4
 8011444:	080264ac 	.word	0x080264ac
 8011448:	080264bc 	.word	0x080264bc
 801144c:	08020a14 	.word	0x08020a14
 8011450:	080264d0 	.word	0x080264d0
 8011454:	080264e0 	.word	0x080264e0
 8011458:	08023dcc 	.word	0x08023dcc
 801145c:	08020928 	.word	0x08020928
		case 554 :
			strcpy(p->name,"JUDEMANDUD");
 8011460:	687b      	ldr	r3, [r7, #4]
 8011462:	337c      	adds	r3, #124	; 0x7c
 8011464:	49b9      	ldr	r1, [pc, #740]	; (801174c <createProblem+0x108a4>)
 8011466:	461a      	mov	r2, r3
 8011468:	460b      	mov	r3, r1
 801146a:	cb03      	ldmia	r3!, {r0, r1}
 801146c:	6010      	str	r0, [r2, #0]
 801146e:	6051      	str	r1, [r2, #4]
 8011470:	8819      	ldrh	r1, [r3, #0]
 8011472:	789b      	ldrb	r3, [r3, #2]
 8011474:	8111      	strh	r1, [r2, #8]
 8011476:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 8011478:	687b      	ldr	r3, [r7, #4]
 801147a:	2207      	movs	r2, #7
 801147c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,E,E,A,B,B,A");
 801147e:	687b      	ldr	r3, [r7, #4]
 8011480:	3340      	adds	r3, #64	; 0x40
 8011482:	4ab3      	ldr	r2, [pc, #716]	; (8011750 <createProblem+0x108a8>)
 8011484:	461c      	mov	r4, r3
 8011486:	4613      	mov	r3, r2
 8011488:	cb07      	ldmia	r3!, {r0, r1, r2}
 801148a:	6020      	str	r0, [r4, #0]
 801148c:	6061      	str	r1, [r4, #4]
 801148e:	60a2      	str	r2, [r4, #8]
 8011490:	881b      	ldrh	r3, [r3, #0]
 8011492:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,6,9,12,15,18");
 8011494:	687b      	ldr	r3, [r7, #4]
 8011496:	3304      	adds	r3, #4
 8011498:	4aae      	ldr	r2, [pc, #696]	; (8011754 <createProblem+0x108ac>)
 801149a:	461d      	mov	r5, r3
 801149c:	4614      	mov	r4, r2
 801149e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80114a0:	6028      	str	r0, [r5, #0]
 80114a2:	6069      	str	r1, [r5, #4]
 80114a4:	60aa      	str	r2, [r5, #8]
 80114a6:	60eb      	str	r3, [r5, #12]
 80114a8:	7823      	ldrb	r3, [r4, #0]
 80114aa:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,s,d,d,d,e");
 80114ac:	687b      	ldr	r3, [r7, #4]
 80114ae:	33d8      	adds	r3, #216	; 0xd8
 80114b0:	4aa9      	ldr	r2, [pc, #676]	; (8011758 <createProblem+0x108b0>)
 80114b2:	461c      	mov	r4, r3
 80114b4:	4613      	mov	r3, r2
 80114b6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80114b8:	6020      	str	r0, [r4, #0]
 80114ba:	6061      	str	r1, [r4, #4]
 80114bc:	60a2      	str	r2, [r4, #8]
 80114be:	881b      	ldrh	r3, [r3, #0]
 80114c0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 80114c2:	687b      	ldr	r3, [r7, #4]
 80114c4:	33cc      	adds	r3, #204	; 0xcc
 80114c6:	4aa5      	ldr	r2, [pc, #660]	; (801175c <createProblem+0x108b4>)
 80114c8:	8811      	ldrh	r1, [r2, #0]
 80114ca:	7892      	ldrb	r2, [r2, #2]
 80114cc:	8019      	strh	r1, [r3, #0]
 80114ce:	709a      	strb	r2, [r3, #2]
			break;
 80114d0:	f009 ba30 	b.w	801a934 <createProblem+0x19a8c>
		case 555 :
			strcpy(p->name,"ALONE IN THE DARK");
 80114d4:	687b      	ldr	r3, [r7, #4]
 80114d6:	337c      	adds	r3, #124	; 0x7c
 80114d8:	4aa1      	ldr	r2, [pc, #644]	; (8011760 <createProblem+0x108b8>)
 80114da:	461d      	mov	r5, r3
 80114dc:	4614      	mov	r4, r2
 80114de:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80114e0:	6028      	str	r0, [r5, #0]
 80114e2:	6069      	str	r1, [r5, #4]
 80114e4:	60aa      	str	r2, [r5, #8]
 80114e6:	60eb      	str	r3, [r5, #12]
 80114e8:	8823      	ldrh	r3, [r4, #0]
 80114ea:	822b      	strh	r3, [r5, #16]
			p->moveSize = 6;
 80114ec:	687b      	ldr	r3, [r7, #4]
 80114ee:	2206      	movs	r2, #6
 80114f0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,I,G,I,I");
 80114f2:	687b      	ldr	r3, [r7, #4]
 80114f4:	3340      	adds	r3, #64	; 0x40
 80114f6:	4a9b      	ldr	r2, [pc, #620]	; (8011764 <createProblem+0x108bc>)
 80114f8:	461c      	mov	r4, r3
 80114fa:	4613      	mov	r3, r2
 80114fc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80114fe:	6020      	str	r0, [r4, #0]
 8011500:	6061      	str	r1, [r4, #4]
 8011502:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,10,14,14,18");
 8011504:	687b      	ldr	r3, [r7, #4]
 8011506:	3304      	adds	r3, #4
 8011508:	4a97      	ldr	r2, [pc, #604]	; (8011768 <createProblem+0x108c0>)
 801150a:	461c      	mov	r4, r3
 801150c:	4615      	mov	r5, r2
 801150e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8011510:	6020      	str	r0, [r4, #0]
 8011512:	6061      	str	r1, [r4, #4]
 8011514:	60a2      	str	r2, [r4, #8]
 8011516:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8011518:	687b      	ldr	r3, [r7, #4]
 801151a:	33d8      	adds	r3, #216	; 0xd8
 801151c:	4a93      	ldr	r2, [pc, #588]	; (801176c <createProblem+0x108c4>)
 801151e:	461c      	mov	r4, r3
 8011520:	4613      	mov	r3, r2
 8011522:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011524:	6020      	str	r0, [r4, #0]
 8011526:	6061      	str	r1, [r4, #4]
 8011528:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 801152a:	687b      	ldr	r3, [r7, #4]
 801152c:	33cc      	adds	r3, #204	; 0xcc
 801152e:	4a8b      	ldr	r2, [pc, #556]	; (801175c <createProblem+0x108b4>)
 8011530:	8811      	ldrh	r1, [r2, #0]
 8011532:	7892      	ldrb	r2, [r2, #2]
 8011534:	8019      	strh	r1, [r3, #0]
 8011536:	709a      	strb	r2, [r3, #2]
			break;
 8011538:	f009 b9fc 	b.w	801a934 <createProblem+0x19a8c>
		case 556 :
			strcpy(p->name,"WORLD CUP");
 801153c:	687b      	ldr	r3, [r7, #4]
 801153e:	337c      	adds	r3, #124	; 0x7c
 8011540:	498b      	ldr	r1, [pc, #556]	; (8011770 <createProblem+0x108c8>)
 8011542:	461a      	mov	r2, r3
 8011544:	460b      	mov	r3, r1
 8011546:	cb03      	ldmia	r3!, {r0, r1}
 8011548:	6010      	str	r0, [r2, #0]
 801154a:	6051      	str	r1, [r2, #4]
 801154c:	881b      	ldrh	r3, [r3, #0]
 801154e:	8113      	strh	r3, [r2, #8]
			p->moveSize = 9;
 8011550:	687b      	ldr	r3, [r7, #4]
 8011552:	2209      	movs	r2, #9
 8011554:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,H,H,I,J,G,J,I");
 8011556:	687b      	ldr	r3, [r7, #4]
 8011558:	3340      	adds	r3, #64	; 0x40
 801155a:	4a86      	ldr	r2, [pc, #536]	; (8011774 <createProblem+0x108cc>)
 801155c:	461d      	mov	r5, r3
 801155e:	4614      	mov	r4, r2
 8011560:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011562:	6028      	str	r0, [r5, #0]
 8011564:	6069      	str	r1, [r5, #4]
 8011566:	60aa      	str	r2, [r5, #8]
 8011568:	60eb      	str	r3, [r5, #12]
 801156a:	8823      	ldrh	r3, [r4, #0]
 801156c:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,6,5,10,10,13,15,16,18");
 801156e:	687b      	ldr	r3, [r7, #4]
 8011570:	3304      	adds	r3, #4
 8011572:	4a81      	ldr	r2, [pc, #516]	; (8011778 <createProblem+0x108d0>)
 8011574:	461d      	mov	r5, r3
 8011576:	4614      	mov	r4, r2
 8011578:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801157a:	6028      	str	r0, [r5, #0]
 801157c:	6069      	str	r1, [r5, #4]
 801157e:	60aa      	str	r2, [r5, #8]
 8011580:	60eb      	str	r3, [r5, #12]
 8011582:	cc03      	ldmia	r4!, {r0, r1}
 8011584:	6128      	str	r0, [r5, #16]
 8011586:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8011588:	687b      	ldr	r3, [r7, #4]
 801158a:	33d8      	adds	r3, #216	; 0xd8
 801158c:	4a7b      	ldr	r2, [pc, #492]	; (801177c <createProblem+0x108d4>)
 801158e:	461d      	mov	r5, r3
 8011590:	4614      	mov	r4, r2
 8011592:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011594:	6028      	str	r0, [r5, #0]
 8011596:	6069      	str	r1, [r5, #4]
 8011598:	60aa      	str	r2, [r5, #8]
 801159a:	60eb      	str	r3, [r5, #12]
 801159c:	8823      	ldrh	r3, [r4, #0]
 801159e:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 80115a0:	687b      	ldr	r3, [r7, #4]
 80115a2:	33cc      	adds	r3, #204	; 0xcc
 80115a4:	4a76      	ldr	r2, [pc, #472]	; (8011780 <createProblem+0x108d8>)
 80115a6:	6810      	ldr	r0, [r2, #0]
 80115a8:	6018      	str	r0, [r3, #0]
			break;
 80115aa:	f009 b9c3 	b.w	801a934 <createProblem+0x19a8c>
		case 557 :
			strcpy(p->name,"BEST PROBLEM 567");
 80115ae:	687b      	ldr	r3, [r7, #4]
 80115b0:	337c      	adds	r3, #124	; 0x7c
 80115b2:	4a74      	ldr	r2, [pc, #464]	; (8011784 <createProblem+0x108dc>)
 80115b4:	461d      	mov	r5, r3
 80115b6:	4614      	mov	r4, r2
 80115b8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80115ba:	6028      	str	r0, [r5, #0]
 80115bc:	6069      	str	r1, [r5, #4]
 80115be:	60aa      	str	r2, [r5, #8]
 80115c0:	60eb      	str	r3, [r5, #12]
 80115c2:	7823      	ldrb	r3, [r4, #0]
 80115c4:	742b      	strb	r3, [r5, #16]
			p->moveSize = 6;
 80115c6:	687b      	ldr	r3, [r7, #4]
 80115c8:	2206      	movs	r2, #6
 80115ca:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,E,H,E,A,G");
 80115cc:	687b      	ldr	r3, [r7, #4]
 80115ce:	3340      	adds	r3, #64	; 0x40
 80115d0:	4a6d      	ldr	r2, [pc, #436]	; (8011788 <createProblem+0x108e0>)
 80115d2:	461c      	mov	r4, r3
 80115d4:	4613      	mov	r3, r2
 80115d6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80115d8:	6020      	str	r0, [r4, #0]
 80115da:	6061      	str	r1, [r4, #4]
 80115dc:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,8,13,14,18,4");
 80115de:	687b      	ldr	r3, [r7, #4]
 80115e0:	3304      	adds	r3, #4
 80115e2:	4a6a      	ldr	r2, [pc, #424]	; (801178c <createProblem+0x108e4>)
 80115e4:	461c      	mov	r4, r3
 80115e6:	4613      	mov	r3, r2
 80115e8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80115ea:	6020      	str	r0, [r4, #0]
 80115ec:	6061      	str	r1, [r4, #4]
 80115ee:	60a2      	str	r2, [r4, #8]
 80115f0:	881a      	ldrh	r2, [r3, #0]
 80115f2:	789b      	ldrb	r3, [r3, #2]
 80115f4:	81a2      	strh	r2, [r4, #12]
 80115f6:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "d,d,d,d,e,s");
 80115f8:	687b      	ldr	r3, [r7, #4]
 80115fa:	33d8      	adds	r3, #216	; 0xd8
 80115fc:	4a64      	ldr	r2, [pc, #400]	; (8011790 <createProblem+0x108e8>)
 80115fe:	461c      	mov	r4, r3
 8011600:	4613      	mov	r3, r2
 8011602:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011604:	6020      	str	r0, [r4, #0]
 8011606:	6061      	str	r1, [r4, #4]
 8011608:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 801160a:	687b      	ldr	r3, [r7, #4]
 801160c:	33cc      	adds	r3, #204	; 0xcc
 801160e:	4a61      	ldr	r2, [pc, #388]	; (8011794 <createProblem+0x108ec>)
 8011610:	8811      	ldrh	r1, [r2, #0]
 8011612:	7892      	ldrb	r2, [r2, #2]
 8011614:	8019      	strh	r1, [r3, #0]
 8011616:	709a      	strb	r2, [r3, #2]
			break;
 8011618:	f009 b98c 	b.w	801a934 <createProblem+0x19a8c>
		case 558 :
			strcpy(p->name,"YAYYY");
 801161c:	687b      	ldr	r3, [r7, #4]
 801161e:	337c      	adds	r3, #124	; 0x7c
 8011620:	4a5d      	ldr	r2, [pc, #372]	; (8011798 <createProblem+0x108f0>)
 8011622:	6810      	ldr	r0, [r2, #0]
 8011624:	6018      	str	r0, [r3, #0]
 8011626:	8892      	ldrh	r2, [r2, #4]
 8011628:	809a      	strh	r2, [r3, #4]
			p->moveSize = 8;
 801162a:	687b      	ldr	r3, [r7, #4]
 801162c:	2208      	movs	r2, #8
 801162e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,G,H,G,H,I");
 8011630:	687b      	ldr	r3, [r7, #4]
 8011632:	3340      	adds	r3, #64	; 0x40
 8011634:	4a59      	ldr	r2, [pc, #356]	; (801179c <createProblem+0x108f4>)
 8011636:	461c      	mov	r4, r3
 8011638:	4615      	mov	r5, r2
 801163a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801163c:	6020      	str	r0, [r4, #0]
 801163e:	6061      	str	r1, [r4, #4]
 8011640:	60a2      	str	r2, [r4, #8]
 8011642:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,5,8,9,12,15,16,18");
 8011644:	687b      	ldr	r3, [r7, #4]
 8011646:	3304      	adds	r3, #4
 8011648:	4a55      	ldr	r2, [pc, #340]	; (80117a0 <createProblem+0x108f8>)
 801164a:	461d      	mov	r5, r3
 801164c:	4614      	mov	r4, r2
 801164e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011650:	6028      	str	r0, [r5, #0]
 8011652:	6069      	str	r1, [r5, #4]
 8011654:	60aa      	str	r2, [r5, #8]
 8011656:	60eb      	str	r3, [r5, #12]
 8011658:	6820      	ldr	r0, [r4, #0]
 801165a:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 801165c:	687b      	ldr	r3, [r7, #4]
 801165e:	33d8      	adds	r3, #216	; 0xd8
 8011660:	4a50      	ldr	r2, [pc, #320]	; (80117a4 <createProblem+0x108fc>)
 8011662:	461c      	mov	r4, r3
 8011664:	4615      	mov	r5, r2
 8011666:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8011668:	6020      	str	r0, [r4, #0]
 801166a:	6061      	str	r1, [r4, #4]
 801166c:	60a2      	str	r2, [r4, #8]
 801166e:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8011670:	687b      	ldr	r3, [r7, #4]
 8011672:	33cc      	adds	r3, #204	; 0xcc
 8011674:	4a42      	ldr	r2, [pc, #264]	; (8011780 <createProblem+0x108d8>)
 8011676:	6810      	ldr	r0, [r2, #0]
 8011678:	6018      	str	r0, [r3, #0]
			break;
 801167a:	f009 b95b 	b.w	801a934 <createProblem+0x19a8c>
		case 559 :
			strcpy(p->name,"WOOO");
 801167e:	687b      	ldr	r3, [r7, #4]
 8011680:	337c      	adds	r3, #124	; 0x7c
 8011682:	4a49      	ldr	r2, [pc, #292]	; (80117a8 <createProblem+0x10900>)
 8011684:	6810      	ldr	r0, [r2, #0]
 8011686:	6018      	str	r0, [r3, #0]
 8011688:	7912      	ldrb	r2, [r2, #4]
 801168a:	711a      	strb	r2, [r3, #4]
			p->moveSize = 8;
 801168c:	687b      	ldr	r3, [r7, #4]
 801168e:	2208      	movs	r2, #8
 8011690:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,G,F,H,G,I");
 8011692:	687b      	ldr	r3, [r7, #4]
 8011694:	3340      	adds	r3, #64	; 0x40
 8011696:	4a45      	ldr	r2, [pc, #276]	; (80117ac <createProblem+0x10904>)
 8011698:	461c      	mov	r4, r3
 801169a:	4615      	mov	r5, r2
 801169c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801169e:	6020      	str	r0, [r4, #0]
 80116a0:	6061      	str	r1, [r4, #4]
 80116a2:	60a2      	str	r2, [r4, #8]
 80116a4:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,5,8,9,13,16,17,18");
 80116a6:	687b      	ldr	r3, [r7, #4]
 80116a8:	3304      	adds	r3, #4
 80116aa:	4a41      	ldr	r2, [pc, #260]	; (80117b0 <createProblem+0x10908>)
 80116ac:	461d      	mov	r5, r3
 80116ae:	4614      	mov	r4, r2
 80116b0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80116b2:	6028      	str	r0, [r5, #0]
 80116b4:	6069      	str	r1, [r5, #4]
 80116b6:	60aa      	str	r2, [r5, #8]
 80116b8:	60eb      	str	r3, [r5, #12]
 80116ba:	6820      	ldr	r0, [r4, #0]
 80116bc:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 80116be:	687b      	ldr	r3, [r7, #4]
 80116c0:	33d8      	adds	r3, #216	; 0xd8
 80116c2:	4a38      	ldr	r2, [pc, #224]	; (80117a4 <createProblem+0x108fc>)
 80116c4:	461c      	mov	r4, r3
 80116c6:	4615      	mov	r5, r2
 80116c8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80116ca:	6020      	str	r0, [r4, #0]
 80116cc:	6061      	str	r1, [r4, #4]
 80116ce:	60a2      	str	r2, [r4, #8]
 80116d0:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80116d2:	687b      	ldr	r3, [r7, #4]
 80116d4:	33cc      	adds	r3, #204	; 0xcc
 80116d6:	4a2a      	ldr	r2, [pc, #168]	; (8011780 <createProblem+0x108d8>)
 80116d8:	6810      	ldr	r0, [r2, #0]
 80116da:	6018      	str	r0, [r3, #0]
			break;
 80116dc:	f009 b92a 	b.w	801a934 <createProblem+0x19a8c>
		case 56 :
			strcpy(p->name,"SMOKING AREA");
 80116e0:	687b      	ldr	r3, [r7, #4]
 80116e2:	337c      	adds	r3, #124	; 0x7c
 80116e4:	4a33      	ldr	r2, [pc, #204]	; (80117b4 <createProblem+0x1090c>)
 80116e6:	461c      	mov	r4, r3
 80116e8:	4613      	mov	r3, r2
 80116ea:	cb07      	ldmia	r3!, {r0, r1, r2}
 80116ec:	6020      	str	r0, [r4, #0]
 80116ee:	6061      	str	r1, [r4, #4]
 80116f0:	60a2      	str	r2, [r4, #8]
 80116f2:	781b      	ldrb	r3, [r3, #0]
 80116f4:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 80116f6:	687b      	ldr	r3, [r7, #4]
 80116f8:	2206      	movs	r2, #6
 80116fa:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,E,E,I");
 80116fc:	687b      	ldr	r3, [r7, #4]
 80116fe:	3340      	adds	r3, #64	; 0x40
 8011700:	4a2d      	ldr	r2, [pc, #180]	; (80117b8 <createProblem+0x10910>)
 8011702:	461c      	mov	r4, r3
 8011704:	4613      	mov	r3, r2
 8011706:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011708:	6020      	str	r0, [r4, #0]
 801170a:	6061      	str	r1, [r4, #4]
 801170c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,8,12,16,18");
 801170e:	687b      	ldr	r3, [r7, #4]
 8011710:	3304      	adds	r3, #4
 8011712:	4a2a      	ldr	r2, [pc, #168]	; (80117bc <createProblem+0x10914>)
 8011714:	461c      	mov	r4, r3
 8011716:	4613      	mov	r3, r2
 8011718:	cb07      	ldmia	r3!, {r0, r1, r2}
 801171a:	6020      	str	r0, [r4, #0]
 801171c:	6061      	str	r1, [r4, #4]
 801171e:	60a2      	str	r2, [r4, #8]
 8011720:	881a      	ldrh	r2, [r3, #0]
 8011722:	789b      	ldrb	r3, [r3, #2]
 8011724:	81a2      	strh	r2, [r4, #12]
 8011726:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8011728:	687b      	ldr	r3, [r7, #4]
 801172a:	33d8      	adds	r3, #216	; 0xd8
 801172c:	4a0f      	ldr	r2, [pc, #60]	; (801176c <createProblem+0x108c4>)
 801172e:	461c      	mov	r4, r3
 8011730:	4613      	mov	r3, r2
 8011732:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011734:	6020      	str	r0, [r4, #0]
 8011736:	6061      	str	r1, [r4, #4]
 8011738:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 801173a:	687b      	ldr	r3, [r7, #4]
 801173c:	33cc      	adds	r3, #204	; 0xcc
 801173e:	4a15      	ldr	r2, [pc, #84]	; (8011794 <createProblem+0x108ec>)
 8011740:	8811      	ldrh	r1, [r2, #0]
 8011742:	7892      	ldrb	r2, [r2, #2]
 8011744:	8019      	strh	r1, [r3, #0]
 8011746:	709a      	strb	r2, [r3, #2]
			break;
 8011748:	f009 b8f4 	b.w	801a934 <createProblem+0x19a8c>
 801174c:	080264ec 	.word	0x080264ec
 8011750:	080264f8 	.word	0x080264f8
 8011754:	08026508 	.word	0x08026508
 8011758:	0802651c 	.word	0x0802651c
 801175c:	08020874 	.word	0x08020874
 8011760:	0802652c 	.word	0x0802652c
 8011764:	08026540 	.word	0x08026540
 8011768:	0802654c 	.word	0x0802654c
 801176c:	0802091c 	.word	0x0802091c
 8011770:	0802655c 	.word	0x0802655c
 8011774:	08026568 	.word	0x08026568
 8011778:	0802657c 	.word	0x0802657c
 801177c:	08020dfc 	.word	0x08020dfc
 8011780:	08020830 	.word	0x08020830
 8011784:	08026594 	.word	0x08026594
 8011788:	080265a8 	.word	0x080265a8
 801178c:	080265b4 	.word	0x080265b4
 8011790:	080265c4 	.word	0x080265c4
 8011794:	080208f0 	.word	0x080208f0
 8011798:	080265d0 	.word	0x080265d0
 801179c:	080265d8 	.word	0x080265d8
 80117a0:	080265e8 	.word	0x080265e8
 80117a4:	08020a4c 	.word	0x08020a4c
 80117a8:	080265fc 	.word	0x080265fc
 80117ac:	08026604 	.word	0x08026604
 80117b0:	08026614 	.word	0x08026614
 80117b4:	08026628 	.word	0x08026628
 80117b8:	08026638 	.word	0x08026638
 80117bc:	08026644 	.word	0x08026644
		case 560 :
			strcpy(p->name,"LORD VADER");
 80117c0:	687b      	ldr	r3, [r7, #4]
 80117c2:	337c      	adds	r3, #124	; 0x7c
 80117c4:	49aa      	ldr	r1, [pc, #680]	; (8011a70 <createProblem+0x10bc8>)
 80117c6:	461a      	mov	r2, r3
 80117c8:	460b      	mov	r3, r1
 80117ca:	cb03      	ldmia	r3!, {r0, r1}
 80117cc:	6010      	str	r0, [r2, #0]
 80117ce:	6051      	str	r1, [r2, #4]
 80117d0:	8819      	ldrh	r1, [r3, #0]
 80117d2:	789b      	ldrb	r3, [r3, #2]
 80117d4:	8111      	strh	r1, [r2, #8]
 80117d6:	7293      	strb	r3, [r2, #10]
			p->moveSize = 8;
 80117d8:	687b      	ldr	r3, [r7, #4]
 80117da:	2208      	movs	r2, #8
 80117dc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,C,H,F,E,G,D,D");
 80117de:	687b      	ldr	r3, [r7, #4]
 80117e0:	3340      	adds	r3, #64	; 0x40
 80117e2:	4aa4      	ldr	r2, [pc, #656]	; (8011a74 <createProblem+0x10bcc>)
 80117e4:	461c      	mov	r4, r3
 80117e6:	4615      	mov	r5, r2
 80117e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80117ea:	6020      	str	r0, [r4, #0]
 80117ec:	6061      	str	r1, [r4, #4]
 80117ee:	60a2      	str	r2, [r4, #8]
 80117f0:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,10,13,6,14,15,18");
 80117f2:	687b      	ldr	r3, [r7, #4]
 80117f4:	3304      	adds	r3, #4
 80117f6:	4aa0      	ldr	r2, [pc, #640]	; (8011a78 <createProblem+0x10bd0>)
 80117f8:	461d      	mov	r5, r3
 80117fa:	4614      	mov	r4, r2
 80117fc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80117fe:	6028      	str	r0, [r5, #0]
 8011800:	6069      	str	r1, [r5, #4]
 8011802:	60aa      	str	r2, [r5, #8]
 8011804:	60eb      	str	r3, [r5, #12]
 8011806:	6820      	ldr	r0, [r4, #0]
 8011808:	6128      	str	r0, [r5, #16]
 801180a:	7923      	ldrb	r3, [r4, #4]
 801180c:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,s,d,d,e");
 801180e:	687b      	ldr	r3, [r7, #4]
 8011810:	33d8      	adds	r3, #216	; 0xd8
 8011812:	4a9a      	ldr	r2, [pc, #616]	; (8011a7c <createProblem+0x10bd4>)
 8011814:	461c      	mov	r4, r3
 8011816:	4615      	mov	r5, r2
 8011818:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801181a:	6020      	str	r0, [r4, #0]
 801181c:	6061      	str	r1, [r4, #4]
 801181e:	60a2      	str	r2, [r4, #8]
 8011820:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8011822:	687b      	ldr	r3, [r7, #4]
 8011824:	33cc      	adds	r3, #204	; 0xcc
 8011826:	4a96      	ldr	r2, [pc, #600]	; (8011a80 <createProblem+0x10bd8>)
 8011828:	6810      	ldr	r0, [r2, #0]
 801182a:	6018      	str	r0, [r3, #0]
			break;
 801182c:	f009 b882 	b.w	801a934 <createProblem+0x19a8c>
		case 561 :
			strcpy(p->name,"BLACK IS WHERE YOU AT");
 8011830:	687b      	ldr	r3, [r7, #4]
 8011832:	337c      	adds	r3, #124	; 0x7c
 8011834:	4a93      	ldr	r2, [pc, #588]	; (8011a84 <createProblem+0x10bdc>)
 8011836:	461d      	mov	r5, r3
 8011838:	4614      	mov	r4, r2
 801183a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801183c:	6028      	str	r0, [r5, #0]
 801183e:	6069      	str	r1, [r5, #4]
 8011840:	60aa      	str	r2, [r5, #8]
 8011842:	60eb      	str	r3, [r5, #12]
 8011844:	6820      	ldr	r0, [r4, #0]
 8011846:	6128      	str	r0, [r5, #16]
 8011848:	88a3      	ldrh	r3, [r4, #4]
 801184a:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 8;
 801184c:	687b      	ldr	r3, [r7, #4]
 801184e:	2208      	movs	r2, #8
 8011850:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,E,E,B,D,B,E");
 8011852:	687b      	ldr	r3, [r7, #4]
 8011854:	3340      	adds	r3, #64	; 0x40
 8011856:	4a8c      	ldr	r2, [pc, #560]	; (8011a88 <createProblem+0x10be0>)
 8011858:	461c      	mov	r4, r3
 801185a:	4615      	mov	r5, r2
 801185c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801185e:	6020      	str	r0, [r4, #0]
 8011860:	6061      	str	r1, [r4, #4]
 8011862:	60a2      	str	r2, [r4, #8]
 8011864:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,4,9,12,15,18,12,16");
 8011866:	687b      	ldr	r3, [r7, #4]
 8011868:	3304      	adds	r3, #4
 801186a:	4a88      	ldr	r2, [pc, #544]	; (8011a8c <createProblem+0x10be4>)
 801186c:	461d      	mov	r5, r3
 801186e:	4614      	mov	r4, r2
 8011870:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011872:	6028      	str	r0, [r5, #0]
 8011874:	6069      	str	r1, [r5, #4]
 8011876:	60aa      	str	r2, [r5, #8]
 8011878:	60eb      	str	r3, [r5, #12]
 801187a:	6820      	ldr	r0, [r4, #0]
 801187c:	6128      	str	r0, [r5, #16]
 801187e:	7923      	ldrb	r3, [r4, #4]
 8011880:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,e,d,d");
 8011882:	687b      	ldr	r3, [r7, #4]
 8011884:	33d8      	adds	r3, #216	; 0xd8
 8011886:	4a82      	ldr	r2, [pc, #520]	; (8011a90 <createProblem+0x10be8>)
 8011888:	461c      	mov	r4, r3
 801188a:	4615      	mov	r5, r2
 801188c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801188e:	6020      	str	r0, [r4, #0]
 8011890:	6061      	str	r1, [r4, #4]
 8011892:	60a2      	str	r2, [r4, #8]
 8011894:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8011896:	687b      	ldr	r3, [r7, #4]
 8011898:	33cc      	adds	r3, #204	; 0xcc
 801189a:	4a7e      	ldr	r2, [pc, #504]	; (8011a94 <createProblem+0x10bec>)
 801189c:	8811      	ldrh	r1, [r2, #0]
 801189e:	7892      	ldrb	r2, [r2, #2]
 80118a0:	8019      	strh	r1, [r3, #0]
 80118a2:	709a      	strb	r2, [r3, #2]
			break;
 80118a4:	f009 b846 	b.w	801a934 <createProblem+0x19a8c>
		case 562 :
			strcpy(p->name,"WHAT IS YOUR PROBLEM???");
 80118a8:	687b      	ldr	r3, [r7, #4]
 80118aa:	337c      	adds	r3, #124	; 0x7c
 80118ac:	4a7a      	ldr	r2, [pc, #488]	; (8011a98 <createProblem+0x10bf0>)
 80118ae:	461d      	mov	r5, r3
 80118b0:	4614      	mov	r4, r2
 80118b2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80118b4:	6028      	str	r0, [r5, #0]
 80118b6:	6069      	str	r1, [r5, #4]
 80118b8:	60aa      	str	r2, [r5, #8]
 80118ba:	60eb      	str	r3, [r5, #12]
 80118bc:	cc03      	ldmia	r4!, {r0, r1}
 80118be:	6128      	str	r0, [r5, #16]
 80118c0:	6169      	str	r1, [r5, #20]
			p->moveSize = 8;
 80118c2:	687b      	ldr	r3, [r7, #4]
 80118c4:	2208      	movs	r2, #8
 80118c6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,G,E,D,F,I,F,I");
 80118c8:	687b      	ldr	r3, [r7, #4]
 80118ca:	3340      	adds	r3, #64	; 0x40
 80118cc:	4a73      	ldr	r2, [pc, #460]	; (8011a9c <createProblem+0x10bf4>)
 80118ce:	461c      	mov	r4, r3
 80118d0:	4615      	mov	r5, r2
 80118d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80118d4:	6020      	str	r0, [r4, #0]
 80118d6:	6061      	str	r1, [r4, #4]
 80118d8:	60a2      	str	r2, [r4, #8]
 80118da:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,11,11,14,13,18");
 80118dc:	687b      	ldr	r3, [r7, #4]
 80118de:	3304      	adds	r3, #4
 80118e0:	4a6f      	ldr	r2, [pc, #444]	; (8011aa0 <createProblem+0x10bf8>)
 80118e2:	461d      	mov	r5, r3
 80118e4:	4614      	mov	r4, r2
 80118e6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80118e8:	6028      	str	r0, [r5, #0]
 80118ea:	6069      	str	r1, [r5, #4]
 80118ec:	60aa      	str	r2, [r5, #8]
 80118ee:	60eb      	str	r3, [r5, #12]
 80118f0:	6820      	ldr	r0, [r4, #0]
 80118f2:	6128      	str	r0, [r5, #16]
 80118f4:	7923      	ldrb	r3, [r4, #4]
 80118f6:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "d,s,d,d,d,d,d,e");
 80118f8:	687b      	ldr	r3, [r7, #4]
 80118fa:	33d8      	adds	r3, #216	; 0xd8
 80118fc:	4a69      	ldr	r2, [pc, #420]	; (8011aa4 <createProblem+0x10bfc>)
 80118fe:	461c      	mov	r4, r3
 8011900:	4615      	mov	r5, r2
 8011902:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8011904:	6020      	str	r0, [r4, #0]
 8011906:	6061      	str	r1, [r4, #4]
 8011908:	60a2      	str	r2, [r4, #8]
 801190a:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 801190c:	687b      	ldr	r3, [r7, #4]
 801190e:	33cc      	adds	r3, #204	; 0xcc
 8011910:	4a65      	ldr	r2, [pc, #404]	; (8011aa8 <createProblem+0x10c00>)
 8011912:	8811      	ldrh	r1, [r2, #0]
 8011914:	7892      	ldrb	r2, [r2, #2]
 8011916:	8019      	strh	r1, [r3, #0]
 8011918:	709a      	strb	r2, [r3, #2]
			break;
 801191a:	f009 b80b 	b.w	801a934 <createProblem+0x19a8c>
		case 563 :
			strcpy(p->name,"FIRST SNOW");
 801191e:	687b      	ldr	r3, [r7, #4]
 8011920:	337c      	adds	r3, #124	; 0x7c
 8011922:	4962      	ldr	r1, [pc, #392]	; (8011aac <createProblem+0x10c04>)
 8011924:	461a      	mov	r2, r3
 8011926:	460b      	mov	r3, r1
 8011928:	cb03      	ldmia	r3!, {r0, r1}
 801192a:	6010      	str	r0, [r2, #0]
 801192c:	6051      	str	r1, [r2, #4]
 801192e:	8819      	ldrh	r1, [r3, #0]
 8011930:	789b      	ldrb	r3, [r3, #2]
 8011932:	8111      	strh	r1, [r2, #8]
 8011934:	7293      	strb	r3, [r2, #10]
			p->moveSize = 5;
 8011936:	687b      	ldr	r3, [r7, #4]
 8011938:	2205      	movs	r2, #5
 801193a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,B,B,B,D");
 801193c:	687b      	ldr	r3, [r7, #4]
 801193e:	3340      	adds	r3, #64	; 0x40
 8011940:	495b      	ldr	r1, [pc, #364]	; (8011ab0 <createProblem+0x10c08>)
 8011942:	461a      	mov	r2, r3
 8011944:	460b      	mov	r3, r1
 8011946:	cb03      	ldmia	r3!, {r0, r1}
 8011948:	6010      	str	r0, [r2, #0]
 801194a:	6051      	str	r1, [r2, #4]
 801194c:	881b      	ldrh	r3, [r3, #0]
 801194e:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,10,12,15,18");
 8011950:	687b      	ldr	r3, [r7, #4]
 8011952:	3304      	adds	r3, #4
 8011954:	4a57      	ldr	r2, [pc, #348]	; (8011ab4 <createProblem+0x10c0c>)
 8011956:	461c      	mov	r4, r3
 8011958:	4613      	mov	r3, r2
 801195a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801195c:	6020      	str	r0, [r4, #0]
 801195e:	6061      	str	r1, [r4, #4]
 8011960:	60a2      	str	r2, [r4, #8]
 8011962:	881b      	ldrh	r3, [r3, #0]
 8011964:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8011966:	687b      	ldr	r3, [r7, #4]
 8011968:	33d8      	adds	r3, #216	; 0xd8
 801196a:	4953      	ldr	r1, [pc, #332]	; (8011ab8 <createProblem+0x10c10>)
 801196c:	461a      	mov	r2, r3
 801196e:	460b      	mov	r3, r1
 8011970:	cb03      	ldmia	r3!, {r0, r1}
 8011972:	6010      	str	r0, [r2, #0]
 8011974:	6051      	str	r1, [r2, #4]
 8011976:	881b      	ldrh	r3, [r3, #0]
 8011978:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 801197a:	687b      	ldr	r3, [r7, #4]
 801197c:	33cc      	adds	r3, #204	; 0xcc
 801197e:	4a45      	ldr	r2, [pc, #276]	; (8011a94 <createProblem+0x10bec>)
 8011980:	8811      	ldrh	r1, [r2, #0]
 8011982:	7892      	ldrb	r2, [r2, #2]
 8011984:	8019      	strh	r1, [r3, #0]
 8011986:	709a      	strb	r2, [r3, #2]
			break;
 8011988:	f008 bfd4 	b.w	801a934 <createProblem+0x19a8c>
		case 564 :
			strcpy(p->name,"TAR");
 801198c:	687b      	ldr	r3, [r7, #4]
 801198e:	337c      	adds	r3, #124	; 0x7c
 8011990:	4a4a      	ldr	r2, [pc, #296]	; (8011abc <createProblem+0x10c14>)
 8011992:	6810      	ldr	r0, [r2, #0]
 8011994:	6018      	str	r0, [r3, #0]
			p->moveSize = 9;
 8011996:	687b      	ldr	r3, [r7, #4]
 8011998:	2209      	movs	r2, #9
 801199a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,D,B,D,I,H,E,F");
 801199c:	687b      	ldr	r3, [r7, #4]
 801199e:	3340      	adds	r3, #64	; 0x40
 80119a0:	4a47      	ldr	r2, [pc, #284]	; (8011ac0 <createProblem+0x10c18>)
 80119a2:	461d      	mov	r5, r3
 80119a4:	4614      	mov	r4, r2
 80119a6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80119a8:	6028      	str	r0, [r5, #0]
 80119aa:	6069      	str	r1, [r5, #4]
 80119ac:	60aa      	str	r2, [r5, #8]
 80119ae:	60eb      	str	r3, [r5, #12]
 80119b0:	8823      	ldrh	r3, [r4, #0]
 80119b2:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,13,15,15,18,7,8,9,11");
 80119b4:	687b      	ldr	r3, [r7, #4]
 80119b6:	3304      	adds	r3, #4
 80119b8:	4a42      	ldr	r2, [pc, #264]	; (8011ac4 <createProblem+0x10c1c>)
 80119ba:	461c      	mov	r4, r3
 80119bc:	4615      	mov	r5, r2
 80119be:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80119c0:	6020      	str	r0, [r4, #0]
 80119c2:	6061      	str	r1, [r4, #4]
 80119c4:	60a2      	str	r2, [r4, #8]
 80119c6:	60e3      	str	r3, [r4, #12]
 80119c8:	6828      	ldr	r0, [r5, #0]
 80119ca:	6120      	str	r0, [r4, #16]
 80119cc:	88ab      	ldrh	r3, [r5, #4]
 80119ce:	79aa      	ldrb	r2, [r5, #6]
 80119d0:	82a3      	strh	r3, [r4, #20]
 80119d2:	4613      	mov	r3, r2
 80119d4:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,d,d,d,e,d,d,d,d");
 80119d6:	687b      	ldr	r3, [r7, #4]
 80119d8:	33d8      	adds	r3, #216	; 0xd8
 80119da:	4a3b      	ldr	r2, [pc, #236]	; (8011ac8 <createProblem+0x10c20>)
 80119dc:	461d      	mov	r5, r3
 80119de:	4614      	mov	r4, r2
 80119e0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80119e2:	6028      	str	r0, [r5, #0]
 80119e4:	6069      	str	r1, [r5, #4]
 80119e6:	60aa      	str	r2, [r5, #8]
 80119e8:	60eb      	str	r3, [r5, #12]
 80119ea:	8823      	ldrh	r3, [r4, #0]
 80119ec:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "7A+");
 80119ee:	687b      	ldr	r3, [r7, #4]
 80119f0:	33cc      	adds	r3, #204	; 0xcc
 80119f2:	4a36      	ldr	r2, [pc, #216]	; (8011acc <createProblem+0x10c24>)
 80119f4:	6810      	ldr	r0, [r2, #0]
 80119f6:	6018      	str	r0, [r3, #0]
			break;
 80119f8:	f008 bf9c 	b.w	801a934 <createProblem+0x19a8c>
		case 565 :
			strcpy(p->name,"HOONGA");
 80119fc:	687b      	ldr	r3, [r7, #4]
 80119fe:	337c      	adds	r3, #124	; 0x7c
 8011a00:	4a33      	ldr	r2, [pc, #204]	; (8011ad0 <createProblem+0x10c28>)
 8011a02:	6810      	ldr	r0, [r2, #0]
 8011a04:	6018      	str	r0, [r3, #0]
 8011a06:	8891      	ldrh	r1, [r2, #4]
 8011a08:	7992      	ldrb	r2, [r2, #6]
 8011a0a:	8099      	strh	r1, [r3, #4]
 8011a0c:	719a      	strb	r2, [r3, #6]
			p->moveSize = 9;
 8011a0e:	687b      	ldr	r3, [r7, #4]
 8011a10:	2209      	movs	r2, #9
 8011a12:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,D,B,C,D,H,G,H,I");
 8011a14:	687b      	ldr	r3, [r7, #4]
 8011a16:	3340      	adds	r3, #64	; 0x40
 8011a18:	4a2e      	ldr	r2, [pc, #184]	; (8011ad4 <createProblem+0x10c2c>)
 8011a1a:	461d      	mov	r5, r3
 8011a1c:	4614      	mov	r4, r2
 8011a1e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011a20:	6028      	str	r0, [r5, #0]
 8011a22:	6069      	str	r1, [r5, #4]
 8011a24:	60aa      	str	r2, [r5, #8]
 8011a26:	60eb      	str	r3, [r5, #12]
 8011a28:	8823      	ldrh	r3, [r4, #0]
 8011a2a:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"6,7,10,5,11,13,14,16,18");
 8011a2c:	687b      	ldr	r3, [r7, #4]
 8011a2e:	3304      	adds	r3, #4
 8011a30:	4a29      	ldr	r2, [pc, #164]	; (8011ad8 <createProblem+0x10c30>)
 8011a32:	461d      	mov	r5, r3
 8011a34:	4614      	mov	r4, r2
 8011a36:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011a38:	6028      	str	r0, [r5, #0]
 8011a3a:	6069      	str	r1, [r5, #4]
 8011a3c:	60aa      	str	r2, [r5, #8]
 8011a3e:	60eb      	str	r3, [r5, #12]
 8011a40:	cc03      	ldmia	r4!, {r0, r1}
 8011a42:	6128      	str	r0, [r5, #16]
 8011a44:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,d,d,s,d,d,d,d,e");
 8011a46:	687b      	ldr	r3, [r7, #4]
 8011a48:	33d8      	adds	r3, #216	; 0xd8
 8011a4a:	4a24      	ldr	r2, [pc, #144]	; (8011adc <createProblem+0x10c34>)
 8011a4c:	461d      	mov	r5, r3
 8011a4e:	4614      	mov	r4, r2
 8011a50:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011a52:	6028      	str	r0, [r5, #0]
 8011a54:	6069      	str	r1, [r5, #4]
 8011a56:	60aa      	str	r2, [r5, #8]
 8011a58:	60eb      	str	r3, [r5, #12]
 8011a5a:	8823      	ldrh	r3, [r4, #0]
 8011a5c:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "7C");
 8011a5e:	687b      	ldr	r3, [r7, #4]
 8011a60:	33cc      	adds	r3, #204	; 0xcc
 8011a62:	4a1f      	ldr	r2, [pc, #124]	; (8011ae0 <createProblem+0x10c38>)
 8011a64:	8811      	ldrh	r1, [r2, #0]
 8011a66:	7892      	ldrb	r2, [r2, #2]
 8011a68:	8019      	strh	r1, [r3, #0]
 8011a6a:	709a      	strb	r2, [r3, #2]
			break;
 8011a6c:	f008 bf62 	b.w	801a934 <createProblem+0x19a8c>
 8011a70:	08026654 	.word	0x08026654
 8011a74:	08026660 	.word	0x08026660
 8011a78:	08026670 	.word	0x08026670
 8011a7c:	080208e0 	.word	0x080208e0
 8011a80:	08020928 	.word	0x08020928
 8011a84:	08026688 	.word	0x08026688
 8011a88:	080266a0 	.word	0x080266a0
 8011a8c:	080266b0 	.word	0x080266b0
 8011a90:	080266c8 	.word	0x080266c8
 8011a94:	08020874 	.word	0x08020874
 8011a98:	080266d8 	.word	0x080266d8
 8011a9c:	080266f0 	.word	0x080266f0
 8011aa0:	08026700 	.word	0x08026700
 8011aa4:	08026718 	.word	0x08026718
 8011aa8:	080208f0 	.word	0x080208f0
 8011aac:	08026728 	.word	0x08026728
 8011ab0:	08026734 	.word	0x08026734
 8011ab4:	08026740 	.word	0x08026740
 8011ab8:	080208a0 	.word	0x080208a0
 8011abc:	08026750 	.word	0x08026750
 8011ac0:	08026754 	.word	0x08026754
 8011ac4:	08026768 	.word	0x08026768
 8011ac8:	08026328 	.word	0x08026328
 8011acc:	080209a4 	.word	0x080209a4
 8011ad0:	08026780 	.word	0x08026780
 8011ad4:	08026788 	.word	0x08026788
 8011ad8:	0802679c 	.word	0x0802679c
 8011adc:	080267b4 	.word	0x080267b4
 8011ae0:	08020b0c 	.word	0x08020b0c
		case 566 :
			strcpy(p->name,"PROBLEM#148");
 8011ae4:	687b      	ldr	r3, [r7, #4]
 8011ae6:	337c      	adds	r3, #124	; 0x7c
 8011ae8:	4a9f      	ldr	r2, [pc, #636]	; (8011d68 <createProblem+0x10ec0>)
 8011aea:	461c      	mov	r4, r3
 8011aec:	4613      	mov	r3, r2
 8011aee:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011af0:	6020      	str	r0, [r4, #0]
 8011af2:	6061      	str	r1, [r4, #4]
 8011af4:	60a2      	str	r2, [r4, #8]
			p->moveSize = 10;
 8011af6:	687b      	ldr	r3, [r7, #4]
 8011af8:	220a      	movs	r2, #10
 8011afa:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,I,E,F,E,I,D,E,B,A");
 8011afc:	687b      	ldr	r3, [r7, #4]
 8011afe:	3340      	adds	r3, #64	; 0x40
 8011b00:	4a9a      	ldr	r2, [pc, #616]	; (8011d6c <createProblem+0x10ec4>)
 8011b02:	461d      	mov	r5, r3
 8011b04:	4614      	mov	r4, r2
 8011b06:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011b08:	6028      	str	r0, [r5, #0]
 8011b0a:	6069      	str	r1, [r5, #4]
 8011b0c:	60aa      	str	r2, [r5, #8]
 8011b0e:	60eb      	str	r3, [r5, #12]
 8011b10:	6820      	ldr	r0, [r4, #0]
 8011b12:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"5,7,8,11,12,14,15,16,15,18");
 8011b14:	687b      	ldr	r3, [r7, #4]
 8011b16:	3304      	adds	r3, #4
 8011b18:	4a95      	ldr	r2, [pc, #596]	; (8011d70 <createProblem+0x10ec8>)
 8011b1a:	461d      	mov	r5, r3
 8011b1c:	4614      	mov	r4, r2
 8011b1e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011b20:	6028      	str	r0, [r5, #0]
 8011b22:	6069      	str	r1, [r5, #4]
 8011b24:	60aa      	str	r2, [r5, #8]
 8011b26:	60eb      	str	r3, [r5, #12]
 8011b28:	cc03      	ldmia	r4!, {r0, r1}
 8011b2a:	6128      	str	r0, [r5, #16]
 8011b2c:	6169      	str	r1, [r5, #20]
 8011b2e:	8823      	ldrh	r3, [r4, #0]
 8011b30:	78a2      	ldrb	r2, [r4, #2]
 8011b32:	832b      	strh	r3, [r5, #24]
 8011b34:	4613      	mov	r3, r2
 8011b36:	76ab      	strb	r3, [r5, #26]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,d,d,e");
 8011b38:	687b      	ldr	r3, [r7, #4]
 8011b3a:	33d8      	adds	r3, #216	; 0xd8
 8011b3c:	4a8d      	ldr	r2, [pc, #564]	; (8011d74 <createProblem+0x10ecc>)
 8011b3e:	461d      	mov	r5, r3
 8011b40:	4614      	mov	r4, r2
 8011b42:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011b44:	6028      	str	r0, [r5, #0]
 8011b46:	6069      	str	r1, [r5, #4]
 8011b48:	60aa      	str	r2, [r5, #8]
 8011b4a:	60eb      	str	r3, [r5, #12]
 8011b4c:	6820      	ldr	r0, [r4, #0]
 8011b4e:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "6B+");
 8011b50:	687b      	ldr	r3, [r7, #4]
 8011b52:	33cc      	adds	r3, #204	; 0xcc
 8011b54:	4a88      	ldr	r2, [pc, #544]	; (8011d78 <createProblem+0x10ed0>)
 8011b56:	6810      	ldr	r0, [r2, #0]
 8011b58:	6018      	str	r0, [r3, #0]
			break;
 8011b5a:	f008 beeb 	b.w	801a934 <createProblem+0x19a8c>
		case 567 :
			strcpy(p->name,"JAM FUNK");
 8011b5e:	687b      	ldr	r3, [r7, #4]
 8011b60:	337c      	adds	r3, #124	; 0x7c
 8011b62:	4986      	ldr	r1, [pc, #536]	; (8011d7c <createProblem+0x10ed4>)
 8011b64:	461a      	mov	r2, r3
 8011b66:	460b      	mov	r3, r1
 8011b68:	cb03      	ldmia	r3!, {r0, r1}
 8011b6a:	6010      	str	r0, [r2, #0]
 8011b6c:	6051      	str	r1, [r2, #4]
 8011b6e:	781b      	ldrb	r3, [r3, #0]
 8011b70:	7213      	strb	r3, [r2, #8]
			p->moveSize = 8;
 8011b72:	687b      	ldr	r3, [r7, #4]
 8011b74:	2208      	movs	r2, #8
 8011b76:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,G,H,B,C,D,B,D");
 8011b78:	687b      	ldr	r3, [r7, #4]
 8011b7a:	3340      	adds	r3, #64	; 0x40
 8011b7c:	4a80      	ldr	r2, [pc, #512]	; (8011d80 <createProblem+0x10ed8>)
 8011b7e:	461c      	mov	r4, r3
 8011b80:	4615      	mov	r5, r2
 8011b82:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8011b84:	6020      	str	r0, [r4, #0]
 8011b86:	6061      	str	r1, [r4, #4]
 8011b88:	60a2      	str	r2, [r4, #8]
 8011b8a:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"10,10,13,12,16,18,6,7");
 8011b8c:	687b      	ldr	r3, [r7, #4]
 8011b8e:	3304      	adds	r3, #4
 8011b90:	4a7c      	ldr	r2, [pc, #496]	; (8011d84 <createProblem+0x10edc>)
 8011b92:	461d      	mov	r5, r3
 8011b94:	4614      	mov	r4, r2
 8011b96:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011b98:	6028      	str	r0, [r5, #0]
 8011b9a:	6069      	str	r1, [r5, #4]
 8011b9c:	60aa      	str	r2, [r5, #8]
 8011b9e:	60eb      	str	r3, [r5, #12]
 8011ba0:	6820      	ldr	r0, [r4, #0]
 8011ba2:	6128      	str	r0, [r5, #16]
 8011ba4:	88a3      	ldrh	r3, [r4, #4]
 8011ba6:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "d,d,d,d,d,e,s,d");
 8011ba8:	687b      	ldr	r3, [r7, #4]
 8011baa:	33d8      	adds	r3, #216	; 0xd8
 8011bac:	4a76      	ldr	r2, [pc, #472]	; (8011d88 <createProblem+0x10ee0>)
 8011bae:	461c      	mov	r4, r3
 8011bb0:	4615      	mov	r5, r2
 8011bb2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8011bb4:	6020      	str	r0, [r4, #0]
 8011bb6:	6061      	str	r1, [r4, #4]
 8011bb8:	60a2      	str	r2, [r4, #8]
 8011bba:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "8A");
 8011bbc:	687b      	ldr	r3, [r7, #4]
 8011bbe:	33cc      	adds	r3, #204	; 0xcc
 8011bc0:	4a72      	ldr	r2, [pc, #456]	; (8011d8c <createProblem+0x10ee4>)
 8011bc2:	8811      	ldrh	r1, [r2, #0]
 8011bc4:	7892      	ldrb	r2, [r2, #2]
 8011bc6:	8019      	strh	r1, [r3, #0]
 8011bc8:	709a      	strb	r2, [r3, #2]
			break;
 8011bca:	f008 beb3 	b.w	801a934 <createProblem+0x19a8c>
		case 568 :
			strcpy(p->name,"STRAIGHTER THAN YOU");
 8011bce:	687b      	ldr	r3, [r7, #4]
 8011bd0:	337c      	adds	r3, #124	; 0x7c
 8011bd2:	4a6f      	ldr	r2, [pc, #444]	; (8011d90 <createProblem+0x10ee8>)
 8011bd4:	461d      	mov	r5, r3
 8011bd6:	4614      	mov	r4, r2
 8011bd8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011bda:	6028      	str	r0, [r5, #0]
 8011bdc:	6069      	str	r1, [r5, #4]
 8011bde:	60aa      	str	r2, [r5, #8]
 8011be0:	60eb      	str	r3, [r5, #12]
 8011be2:	6820      	ldr	r0, [r4, #0]
 8011be4:	6128      	str	r0, [r5, #16]
			p->moveSize = 5;
 8011be6:	687b      	ldr	r3, [r7, #4]
 8011be8:	2205      	movs	r2, #5
 8011bea:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,H,K,I");
 8011bec:	687b      	ldr	r3, [r7, #4]
 8011bee:	3340      	adds	r3, #64	; 0x40
 8011bf0:	4968      	ldr	r1, [pc, #416]	; (8011d94 <createProblem+0x10eec>)
 8011bf2:	461a      	mov	r2, r3
 8011bf4:	460b      	mov	r3, r1
 8011bf6:	cb03      	ldmia	r3!, {r0, r1}
 8011bf8:	6010      	str	r0, [r2, #0]
 8011bfa:	6051      	str	r1, [r2, #4]
 8011bfc:	881b      	ldrh	r3, [r3, #0]
 8011bfe:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,9,13,16,18");
 8011c00:	687b      	ldr	r3, [r7, #4]
 8011c02:	3304      	adds	r3, #4
 8011c04:	4a64      	ldr	r2, [pc, #400]	; (8011d98 <createProblem+0x10ef0>)
 8011c06:	461c      	mov	r4, r3
 8011c08:	4613      	mov	r3, r2
 8011c0a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011c0c:	6020      	str	r0, [r4, #0]
 8011c0e:	6061      	str	r1, [r4, #4]
 8011c10:	60a2      	str	r2, [r4, #8]
 8011c12:	781b      	ldrb	r3, [r3, #0]
 8011c14:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8011c16:	687b      	ldr	r3, [r7, #4]
 8011c18:	33d8      	adds	r3, #216	; 0xd8
 8011c1a:	4960      	ldr	r1, [pc, #384]	; (8011d9c <createProblem+0x10ef4>)
 8011c1c:	461a      	mov	r2, r3
 8011c1e:	460b      	mov	r3, r1
 8011c20:	cb03      	ldmia	r3!, {r0, r1}
 8011c22:	6010      	str	r0, [r2, #0]
 8011c24:	6051      	str	r1, [r2, #4]
 8011c26:	881b      	ldrh	r3, [r3, #0]
 8011c28:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7C");
 8011c2a:	687b      	ldr	r3, [r7, #4]
 8011c2c:	33cc      	adds	r3, #204	; 0xcc
 8011c2e:	4a5c      	ldr	r2, [pc, #368]	; (8011da0 <createProblem+0x10ef8>)
 8011c30:	8811      	ldrh	r1, [r2, #0]
 8011c32:	7892      	ldrb	r2, [r2, #2]
 8011c34:	8019      	strh	r1, [r3, #0]
 8011c36:	709a      	strb	r2, [r3, #2]
			break;
 8011c38:	f008 be7c 	b.w	801a934 <createProblem+0x19a8c>
		case 569 :
			strcpy(p->name,"KYLO REN");
 8011c3c:	687b      	ldr	r3, [r7, #4]
 8011c3e:	337c      	adds	r3, #124	; 0x7c
 8011c40:	4958      	ldr	r1, [pc, #352]	; (8011da4 <createProblem+0x10efc>)
 8011c42:	461a      	mov	r2, r3
 8011c44:	460b      	mov	r3, r1
 8011c46:	cb03      	ldmia	r3!, {r0, r1}
 8011c48:	6010      	str	r0, [r2, #0]
 8011c4a:	6051      	str	r1, [r2, #4]
 8011c4c:	781b      	ldrb	r3, [r3, #0]
 8011c4e:	7213      	strb	r3, [r2, #8]
			p->moveSize = 8;
 8011c50:	687b      	ldr	r3, [r7, #4]
 8011c52:	2208      	movs	r2, #8
 8011c54:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,F,G,E,I,E");
 8011c56:	687b      	ldr	r3, [r7, #4]
 8011c58:	3340      	adds	r3, #64	; 0x40
 8011c5a:	4a53      	ldr	r2, [pc, #332]	; (8011da8 <createProblem+0x10f00>)
 8011c5c:	461c      	mov	r4, r3
 8011c5e:	4615      	mov	r5, r2
 8011c60:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8011c62:	6020      	str	r0, [r4, #0]
 8011c64:	6061      	str	r1, [r4, #4]
 8011c66:	60a2      	str	r2, [r4, #8]
 8011c68:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,8,11,14,16,18,9");
 8011c6a:	687b      	ldr	r3, [r7, #4]
 8011c6c:	3304      	adds	r3, #4
 8011c6e:	4a4f      	ldr	r2, [pc, #316]	; (8011dac <createProblem+0x10f04>)
 8011c70:	461d      	mov	r5, r3
 8011c72:	4614      	mov	r4, r2
 8011c74:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011c76:	6028      	str	r0, [r5, #0]
 8011c78:	6069      	str	r1, [r5, #4]
 8011c7a:	60aa      	str	r2, [r5, #8]
 8011c7c:	60eb      	str	r3, [r5, #12]
 8011c7e:	6820      	ldr	r0, [r4, #0]
 8011c80:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e,d");
 8011c82:	687b      	ldr	r3, [r7, #4]
 8011c84:	33d8      	adds	r3, #216	; 0xd8
 8011c86:	4a4a      	ldr	r2, [pc, #296]	; (8011db0 <createProblem+0x10f08>)
 8011c88:	461c      	mov	r4, r3
 8011c8a:	4615      	mov	r5, r2
 8011c8c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8011c8e:	6020      	str	r0, [r4, #0]
 8011c90:	6061      	str	r1, [r4, #4]
 8011c92:	60a2      	str	r2, [r4, #8]
 8011c94:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8011c96:	687b      	ldr	r3, [r7, #4]
 8011c98:	33cc      	adds	r3, #204	; 0xcc
 8011c9a:	4a46      	ldr	r2, [pc, #280]	; (8011db4 <createProblem+0x10f0c>)
 8011c9c:	8811      	ldrh	r1, [r2, #0]
 8011c9e:	7892      	ldrb	r2, [r2, #2]
 8011ca0:	8019      	strh	r1, [r3, #0]
 8011ca2:	709a      	strb	r2, [r3, #2]
			break;
 8011ca4:	f008 be46 	b.w	801a934 <createProblem+0x19a8c>
		case 57 :
			strcpy(p->name,"COGUARO");
 8011ca8:	687b      	ldr	r3, [r7, #4]
 8011caa:	337c      	adds	r3, #124	; 0x7c
 8011cac:	4942      	ldr	r1, [pc, #264]	; (8011db8 <createProblem+0x10f10>)
 8011cae:	461a      	mov	r2, r3
 8011cb0:	460b      	mov	r3, r1
 8011cb2:	cb03      	ldmia	r3!, {r0, r1}
 8011cb4:	6010      	str	r0, [r2, #0]
 8011cb6:	6051      	str	r1, [r2, #4]
			p->moveSize = 5;
 8011cb8:	687b      	ldr	r3, [r7, #4]
 8011cba:	2205      	movs	r2, #5
 8011cbc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,E,H,G,I");
 8011cbe:	687b      	ldr	r3, [r7, #4]
 8011cc0:	3340      	adds	r3, #64	; 0x40
 8011cc2:	493e      	ldr	r1, [pc, #248]	; (8011dbc <createProblem+0x10f14>)
 8011cc4:	461a      	mov	r2, r3
 8011cc6:	460b      	mov	r3, r1
 8011cc8:	cb03      	ldmia	r3!, {r0, r1}
 8011cca:	6010      	str	r0, [r2, #0]
 8011ccc:	6051      	str	r1, [r2, #4]
 8011cce:	881b      	ldrh	r3, [r3, #0]
 8011cd0:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,8,8,14,18");
 8011cd2:	687b      	ldr	r3, [r7, #4]
 8011cd4:	3304      	adds	r3, #4
 8011cd6:	4a3a      	ldr	r2, [pc, #232]	; (8011dc0 <createProblem+0x10f18>)
 8011cd8:	461c      	mov	r4, r3
 8011cda:	4613      	mov	r3, r2
 8011cdc:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011cde:	6020      	str	r0, [r4, #0]
 8011ce0:	6061      	str	r1, [r4, #4]
 8011ce2:	60a2      	str	r2, [r4, #8]
			strcpy(p->startFinish, "s,d,d,d,e");
 8011ce4:	687b      	ldr	r3, [r7, #4]
 8011ce6:	33d8      	adds	r3, #216	; 0xd8
 8011ce8:	492c      	ldr	r1, [pc, #176]	; (8011d9c <createProblem+0x10ef4>)
 8011cea:	461a      	mov	r2, r3
 8011cec:	460b      	mov	r3, r1
 8011cee:	cb03      	ldmia	r3!, {r0, r1}
 8011cf0:	6010      	str	r0, [r2, #0]
 8011cf2:	6051      	str	r1, [r2, #4]
 8011cf4:	881b      	ldrh	r3, [r3, #0]
 8011cf6:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 8011cf8:	687b      	ldr	r3, [r7, #4]
 8011cfa:	33cc      	adds	r3, #204	; 0xcc
 8011cfc:	4a31      	ldr	r2, [pc, #196]	; (8011dc4 <createProblem+0x10f1c>)
 8011cfe:	6810      	ldr	r0, [r2, #0]
 8011d00:	6018      	str	r0, [r3, #0]
			break;
 8011d02:	f008 be17 	b.w	801a934 <createProblem+0x19a8c>
		case 570 :
			strcpy(p->name,"MALEDICTION");
 8011d06:	687b      	ldr	r3, [r7, #4]
 8011d08:	337c      	adds	r3, #124	; 0x7c
 8011d0a:	4a2f      	ldr	r2, [pc, #188]	; (8011dc8 <createProblem+0x10f20>)
 8011d0c:	461c      	mov	r4, r3
 8011d0e:	4613      	mov	r3, r2
 8011d10:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011d12:	6020      	str	r0, [r4, #0]
 8011d14:	6061      	str	r1, [r4, #4]
 8011d16:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 8011d18:	687b      	ldr	r3, [r7, #4]
 8011d1a:	2206      	movs	r2, #6
 8011d1c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,F,B,G,I,D");
 8011d1e:	687b      	ldr	r3, [r7, #4]
 8011d20:	3340      	adds	r3, #64	; 0x40
 8011d22:	4a2a      	ldr	r2, [pc, #168]	; (8011dcc <createProblem+0x10f24>)
 8011d24:	461c      	mov	r4, r3
 8011d26:	4613      	mov	r3, r2
 8011d28:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011d2a:	6020      	str	r0, [r4, #0]
 8011d2c:	6061      	str	r1, [r4, #4]
 8011d2e:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,11,12,15,15,18");
 8011d30:	687b      	ldr	r3, [r7, #4]
 8011d32:	3304      	adds	r3, #4
 8011d34:	4a26      	ldr	r2, [pc, #152]	; (8011dd0 <createProblem+0x10f28>)
 8011d36:	461d      	mov	r5, r3
 8011d38:	4614      	mov	r4, r2
 8011d3a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011d3c:	6028      	str	r0, [r5, #0]
 8011d3e:	6069      	str	r1, [r5, #4]
 8011d40:	60aa      	str	r2, [r5, #8]
 8011d42:	60eb      	str	r3, [r5, #12]
 8011d44:	7823      	ldrb	r3, [r4, #0]
 8011d46:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8011d48:	687b      	ldr	r3, [r7, #4]
 8011d4a:	33d8      	adds	r3, #216	; 0xd8
 8011d4c:	4a21      	ldr	r2, [pc, #132]	; (8011dd4 <createProblem+0x10f2c>)
 8011d4e:	461c      	mov	r4, r3
 8011d50:	4613      	mov	r3, r2
 8011d52:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011d54:	6020      	str	r0, [r4, #0]
 8011d56:	6061      	str	r1, [r4, #4]
 8011d58:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8011d5a:	687b      	ldr	r3, [r7, #4]
 8011d5c:	33cc      	adds	r3, #204	; 0xcc
 8011d5e:	4a19      	ldr	r2, [pc, #100]	; (8011dc4 <createProblem+0x10f1c>)
 8011d60:	6810      	ldr	r0, [r2, #0]
 8011d62:	6018      	str	r0, [r3, #0]
			break;
 8011d64:	f008 bde6 	b.w	801a934 <createProblem+0x19a8c>
 8011d68:	080267c8 	.word	0x080267c8
 8011d6c:	080267d4 	.word	0x080267d4
 8011d70:	080267e8 	.word	0x080267e8
 8011d74:	08022990 	.word	0x08022990
 8011d78:	08020830 	.word	0x08020830
 8011d7c:	08026804 	.word	0x08026804
 8011d80:	08026810 	.word	0x08026810
 8011d84:	08026820 	.word	0x08026820
 8011d88:	08026838 	.word	0x08026838
 8011d8c:	08020c94 	.word	0x08020c94
 8011d90:	08026848 	.word	0x08026848
 8011d94:	0802685c 	.word	0x0802685c
 8011d98:	08026868 	.word	0x08026868
 8011d9c:	080208a0 	.word	0x080208a0
 8011da0:	08020b0c 	.word	0x08020b0c
 8011da4:	08026878 	.word	0x08026878
 8011da8:	08026884 	.word	0x08026884
 8011dac:	08026894 	.word	0x08026894
 8011db0:	080268a8 	.word	0x080268a8
 8011db4:	08020874 	.word	0x08020874
 8011db8:	080268b8 	.word	0x080268b8
 8011dbc:	080268c0 	.word	0x080268c0
 8011dc0:	080268cc 	.word	0x080268cc
 8011dc4:	080209a4 	.word	0x080209a4
 8011dc8:	080268d8 	.word	0x080268d8
 8011dcc:	080268e4 	.word	0x080268e4
 8011dd0:	080268f0 	.word	0x080268f0
 8011dd4:	0802091c 	.word	0x0802091c
		case 571 :
			strcpy(p->name,"FUN1");
 8011dd8:	687b      	ldr	r3, [r7, #4]
 8011dda:	337c      	adds	r3, #124	; 0x7c
 8011ddc:	4ab3      	ldr	r2, [pc, #716]	; (80120ac <createProblem+0x11204>)
 8011dde:	6810      	ldr	r0, [r2, #0]
 8011de0:	6018      	str	r0, [r3, #0]
 8011de2:	7912      	ldrb	r2, [r2, #4]
 8011de4:	711a      	strb	r2, [r3, #4]
			p->moveSize = 14;
 8011de6:	687b      	ldr	r3, [r7, #4]
 8011de8:	220e      	movs	r2, #14
 8011dea:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,E,C,E,D,F,H,F,I,I,G,H,I");
 8011dec:	687b      	ldr	r3, [r7, #4]
 8011dee:	3340      	adds	r3, #64	; 0x40
 8011df0:	4aaf      	ldr	r2, [pc, #700]	; (80120b0 <createProblem+0x11208>)
 8011df2:	461d      	mov	r5, r3
 8011df4:	4614      	mov	r4, r2
 8011df6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011df8:	6028      	str	r0, [r5, #0]
 8011dfa:	6069      	str	r1, [r5, #4]
 8011dfc:	60aa      	str	r2, [r5, #8]
 8011dfe:	60eb      	str	r3, [r5, #12]
 8011e00:	cc07      	ldmia	r4!, {r0, r1, r2}
 8011e02:	6128      	str	r0, [r5, #16]
 8011e04:	6169      	str	r1, [r5, #20]
 8011e06:	61aa      	str	r2, [r5, #24]
			strcpy(p->moveNumbers,"4,5,8,8,9,11,11,12,13,14,15,15,16,18");
 8011e08:	687b      	ldr	r3, [r7, #4]
 8011e0a:	3304      	adds	r3, #4
 8011e0c:	4aa9      	ldr	r2, [pc, #676]	; (80120b4 <createProblem+0x1120c>)
 8011e0e:	4614      	mov	r4, r2
 8011e10:	469c      	mov	ip, r3
 8011e12:	f104 0e20 	add.w	lr, r4, #32
 8011e16:	4665      	mov	r5, ip
 8011e18:	4626      	mov	r6, r4
 8011e1a:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 8011e1c:	6028      	str	r0, [r5, #0]
 8011e1e:	6069      	str	r1, [r5, #4]
 8011e20:	60aa      	str	r2, [r5, #8]
 8011e22:	60eb      	str	r3, [r5, #12]
 8011e24:	3410      	adds	r4, #16
 8011e26:	f10c 0c10 	add.w	ip, ip, #16
 8011e2a:	4574      	cmp	r4, lr
 8011e2c:	d1f3      	bne.n	8011e16 <createProblem+0x10f6e>
 8011e2e:	4663      	mov	r3, ip
 8011e30:	4622      	mov	r2, r4
 8011e32:	6810      	ldr	r0, [r2, #0]
 8011e34:	6018      	str	r0, [r3, #0]
 8011e36:	7912      	ldrb	r2, [r2, #4]
 8011e38:	711a      	strb	r2, [r3, #4]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,d,d,d,d,e");
 8011e3a:	687b      	ldr	r3, [r7, #4]
 8011e3c:	33d8      	adds	r3, #216	; 0xd8
 8011e3e:	4a9e      	ldr	r2, [pc, #632]	; (80120b8 <createProblem+0x11210>)
 8011e40:	461d      	mov	r5, r3
 8011e42:	4614      	mov	r4, r2
 8011e44:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011e46:	6028      	str	r0, [r5, #0]
 8011e48:	6069      	str	r1, [r5, #4]
 8011e4a:	60aa      	str	r2, [r5, #8]
 8011e4c:	60eb      	str	r3, [r5, #12]
 8011e4e:	cc07      	ldmia	r4!, {r0, r1, r2}
 8011e50:	6128      	str	r0, [r5, #16]
 8011e52:	6169      	str	r1, [r5, #20]
 8011e54:	61aa      	str	r2, [r5, #24]
			strcpy(p->grade, "6B+");
 8011e56:	687b      	ldr	r3, [r7, #4]
 8011e58:	33cc      	adds	r3, #204	; 0xcc
 8011e5a:	4a98      	ldr	r2, [pc, #608]	; (80120bc <createProblem+0x11214>)
 8011e5c:	6810      	ldr	r0, [r2, #0]
 8011e5e:	6018      	str	r0, [r3, #0]
			break;
 8011e60:	f008 bd68 	b.w	801a934 <createProblem+0x19a8c>
		case 572 :
			strcpy(p->name,"IGNORANT STYLE");
 8011e64:	687b      	ldr	r3, [r7, #4]
 8011e66:	337c      	adds	r3, #124	; 0x7c
 8011e68:	4a95      	ldr	r2, [pc, #596]	; (80120c0 <createProblem+0x11218>)
 8011e6a:	461c      	mov	r4, r3
 8011e6c:	4613      	mov	r3, r2
 8011e6e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011e70:	6020      	str	r0, [r4, #0]
 8011e72:	6061      	str	r1, [r4, #4]
 8011e74:	60a2      	str	r2, [r4, #8]
 8011e76:	881a      	ldrh	r2, [r3, #0]
 8011e78:	789b      	ldrb	r3, [r3, #2]
 8011e7a:	81a2      	strh	r2, [r4, #12]
 8011e7c:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 6;
 8011e7e:	687b      	ldr	r3, [r7, #4]
 8011e80:	2206      	movs	r2, #6
 8011e82:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,E,F,I,I");
 8011e84:	687b      	ldr	r3, [r7, #4]
 8011e86:	3340      	adds	r3, #64	; 0x40
 8011e88:	4a8e      	ldr	r2, [pc, #568]	; (80120c4 <createProblem+0x1121c>)
 8011e8a:	461c      	mov	r4, r3
 8011e8c:	4613      	mov	r3, r2
 8011e8e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011e90:	6020      	str	r0, [r4, #0]
 8011e92:	6061      	str	r1, [r4, #4]
 8011e94:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,8,11,14,18");
 8011e96:	687b      	ldr	r3, [r7, #4]
 8011e98:	3304      	adds	r3, #4
 8011e9a:	4a8b      	ldr	r2, [pc, #556]	; (80120c8 <createProblem+0x11220>)
 8011e9c:	461c      	mov	r4, r3
 8011e9e:	4613      	mov	r3, r2
 8011ea0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011ea2:	6020      	str	r0, [r4, #0]
 8011ea4:	6061      	str	r1, [r4, #4]
 8011ea6:	60a2      	str	r2, [r4, #8]
 8011ea8:	881a      	ldrh	r2, [r3, #0]
 8011eaa:	789b      	ldrb	r3, [r3, #2]
 8011eac:	81a2      	strh	r2, [r4, #12]
 8011eae:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8011eb0:	687b      	ldr	r3, [r7, #4]
 8011eb2:	33d8      	adds	r3, #216	; 0xd8
 8011eb4:	4a85      	ldr	r2, [pc, #532]	; (80120cc <createProblem+0x11224>)
 8011eb6:	461c      	mov	r4, r3
 8011eb8:	4613      	mov	r3, r2
 8011eba:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011ebc:	6020      	str	r0, [r4, #0]
 8011ebe:	6061      	str	r1, [r4, #4]
 8011ec0:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8011ec2:	687b      	ldr	r3, [r7, #4]
 8011ec4:	33cc      	adds	r3, #204	; 0xcc
 8011ec6:	4a82      	ldr	r2, [pc, #520]	; (80120d0 <createProblem+0x11228>)
 8011ec8:	8811      	ldrh	r1, [r2, #0]
 8011eca:	7892      	ldrb	r2, [r2, #2]
 8011ecc:	8019      	strh	r1, [r3, #0]
 8011ece:	709a      	strb	r2, [r3, #2]
			break;
 8011ed0:	f008 bd30 	b.w	801a934 <createProblem+0x19a8c>
		case 573 :
			strcpy(p->name,"EDITHS BOULDER");
 8011ed4:	687b      	ldr	r3, [r7, #4]
 8011ed6:	337c      	adds	r3, #124	; 0x7c
 8011ed8:	4a7e      	ldr	r2, [pc, #504]	; (80120d4 <createProblem+0x1122c>)
 8011eda:	461c      	mov	r4, r3
 8011edc:	4613      	mov	r3, r2
 8011ede:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011ee0:	6020      	str	r0, [r4, #0]
 8011ee2:	6061      	str	r1, [r4, #4]
 8011ee4:	60a2      	str	r2, [r4, #8]
 8011ee6:	881a      	ldrh	r2, [r3, #0]
 8011ee8:	789b      	ldrb	r3, [r3, #2]
 8011eea:	81a2      	strh	r2, [r4, #12]
 8011eec:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 7;
 8011eee:	687b      	ldr	r3, [r7, #4]
 8011ef0:	2207      	movs	r2, #7
 8011ef2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,I,E,J,D,E,A");
 8011ef4:	687b      	ldr	r3, [r7, #4]
 8011ef6:	3340      	adds	r3, #64	; 0x40
 8011ef8:	4a77      	ldr	r2, [pc, #476]	; (80120d8 <createProblem+0x11230>)
 8011efa:	461c      	mov	r4, r3
 8011efc:	4613      	mov	r3, r2
 8011efe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011f00:	6020      	str	r0, [r4, #0]
 8011f02:	6061      	str	r1, [r4, #4]
 8011f04:	60a2      	str	r2, [r4, #8]
 8011f06:	881b      	ldrh	r3, [r3, #0]
 8011f08:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"12,7,8,5,15,16,18");
 8011f0a:	687b      	ldr	r3, [r7, #4]
 8011f0c:	3304      	adds	r3, #4
 8011f0e:	4a73      	ldr	r2, [pc, #460]	; (80120dc <createProblem+0x11234>)
 8011f10:	461d      	mov	r5, r3
 8011f12:	4614      	mov	r4, r2
 8011f14:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011f16:	6028      	str	r0, [r5, #0]
 8011f18:	6069      	str	r1, [r5, #4]
 8011f1a:	60aa      	str	r2, [r5, #8]
 8011f1c:	60eb      	str	r3, [r5, #12]
 8011f1e:	8823      	ldrh	r3, [r4, #0]
 8011f20:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "d,d,d,s,d,d,e");
 8011f22:	687b      	ldr	r3, [r7, #4]
 8011f24:	33d8      	adds	r3, #216	; 0xd8
 8011f26:	4a6e      	ldr	r2, [pc, #440]	; (80120e0 <createProblem+0x11238>)
 8011f28:	461c      	mov	r4, r3
 8011f2a:	4613      	mov	r3, r2
 8011f2c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011f2e:	6020      	str	r0, [r4, #0]
 8011f30:	6061      	str	r1, [r4, #4]
 8011f32:	60a2      	str	r2, [r4, #8]
 8011f34:	881b      	ldrh	r3, [r3, #0]
 8011f36:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8011f38:	687b      	ldr	r3, [r7, #4]
 8011f3a:	33cc      	adds	r3, #204	; 0xcc
 8011f3c:	4a69      	ldr	r2, [pc, #420]	; (80120e4 <createProblem+0x1123c>)
 8011f3e:	6810      	ldr	r0, [r2, #0]
 8011f40:	6018      	str	r0, [r3, #0]
			break;
 8011f42:	f008 bcf7 	b.w	801a934 <createProblem+0x19a8c>
		case 574 :
			strcpy(p->name,"HOONGA (REMAKE)");
 8011f46:	687b      	ldr	r3, [r7, #4]
 8011f48:	337c      	adds	r3, #124	; 0x7c
 8011f4a:	4a67      	ldr	r2, [pc, #412]	; (80120e8 <createProblem+0x11240>)
 8011f4c:	461c      	mov	r4, r3
 8011f4e:	4615      	mov	r5, r2
 8011f50:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8011f52:	6020      	str	r0, [r4, #0]
 8011f54:	6061      	str	r1, [r4, #4]
 8011f56:	60a2      	str	r2, [r4, #8]
 8011f58:	60e3      	str	r3, [r4, #12]
			p->moveSize = 10;
 8011f5a:	687b      	ldr	r3, [r7, #4]
 8011f5c:	220a      	movs	r2, #10
 8011f5e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,C,D,B,E,D,H,G,H,I");
 8011f60:	687b      	ldr	r3, [r7, #4]
 8011f62:	3340      	adds	r3, #64	; 0x40
 8011f64:	4a61      	ldr	r2, [pc, #388]	; (80120ec <createProblem+0x11244>)
 8011f66:	461d      	mov	r5, r3
 8011f68:	4614      	mov	r4, r2
 8011f6a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011f6c:	6028      	str	r0, [r5, #0]
 8011f6e:	6069      	str	r1, [r5, #4]
 8011f70:	60aa      	str	r2, [r5, #8]
 8011f72:	60eb      	str	r3, [r5, #12]
 8011f74:	6820      	ldr	r0, [r4, #0]
 8011f76:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"6,5,7,10,12,11,13,14,16,18");
 8011f78:	687b      	ldr	r3, [r7, #4]
 8011f7a:	3304      	adds	r3, #4
 8011f7c:	4a5c      	ldr	r2, [pc, #368]	; (80120f0 <createProblem+0x11248>)
 8011f7e:	461d      	mov	r5, r3
 8011f80:	4614      	mov	r4, r2
 8011f82:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011f84:	6028      	str	r0, [r5, #0]
 8011f86:	6069      	str	r1, [r5, #4]
 8011f88:	60aa      	str	r2, [r5, #8]
 8011f8a:	60eb      	str	r3, [r5, #12]
 8011f8c:	cc03      	ldmia	r4!, {r0, r1}
 8011f8e:	6128      	str	r0, [r5, #16]
 8011f90:	6169      	str	r1, [r5, #20]
 8011f92:	8823      	ldrh	r3, [r4, #0]
 8011f94:	78a2      	ldrb	r2, [r4, #2]
 8011f96:	832b      	strh	r3, [r5, #24]
 8011f98:	4613      	mov	r3, r2
 8011f9a:	76ab      	strb	r3, [r5, #26]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,e");
 8011f9c:	687b      	ldr	r3, [r7, #4]
 8011f9e:	33d8      	adds	r3, #216	; 0xd8
 8011fa0:	4a54      	ldr	r2, [pc, #336]	; (80120f4 <createProblem+0x1124c>)
 8011fa2:	461d      	mov	r5, r3
 8011fa4:	4614      	mov	r4, r2
 8011fa6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8011fa8:	6028      	str	r0, [r5, #0]
 8011faa:	6069      	str	r1, [r5, #4]
 8011fac:	60aa      	str	r2, [r5, #8]
 8011fae:	60eb      	str	r3, [r5, #12]
 8011fb0:	6820      	ldr	r0, [r4, #0]
 8011fb2:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "7B+");
 8011fb4:	687b      	ldr	r3, [r7, #4]
 8011fb6:	33cc      	adds	r3, #204	; 0xcc
 8011fb8:	4a4f      	ldr	r2, [pc, #316]	; (80120f8 <createProblem+0x11250>)
 8011fba:	6810      	ldr	r0, [r2, #0]
 8011fbc:	6018      	str	r0, [r3, #0]
			break;
 8011fbe:	f008 bcb9 	b.w	801a934 <createProblem+0x19a8c>
		case 575 :
			strcpy(p->name,"SILENT MEDIA");
 8011fc2:	687b      	ldr	r3, [r7, #4]
 8011fc4:	337c      	adds	r3, #124	; 0x7c
 8011fc6:	4a4d      	ldr	r2, [pc, #308]	; (80120fc <createProblem+0x11254>)
 8011fc8:	461c      	mov	r4, r3
 8011fca:	4613      	mov	r3, r2
 8011fcc:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011fce:	6020      	str	r0, [r4, #0]
 8011fd0:	6061      	str	r1, [r4, #4]
 8011fd2:	60a2      	str	r2, [r4, #8]
 8011fd4:	781b      	ldrb	r3, [r3, #0]
 8011fd6:	7323      	strb	r3, [r4, #12]
			p->moveSize = 7;
 8011fd8:	687b      	ldr	r3, [r7, #4]
 8011fda:	2207      	movs	r2, #7
 8011fdc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,H,G,I,H,I");
 8011fde:	687b      	ldr	r3, [r7, #4]
 8011fe0:	3340      	adds	r3, #64	; 0x40
 8011fe2:	4a47      	ldr	r2, [pc, #284]	; (8012100 <createProblem+0x11258>)
 8011fe4:	461c      	mov	r4, r3
 8011fe6:	4613      	mov	r3, r2
 8011fe8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8011fea:	6020      	str	r0, [r4, #0]
 8011fec:	6061      	str	r1, [r4, #4]
 8011fee:	60a2      	str	r2, [r4, #8]
 8011ff0:	881b      	ldrh	r3, [r3, #0]
 8011ff2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,10,9,14,16,18");
 8011ff4:	687b      	ldr	r3, [r7, #4]
 8011ff6:	3304      	adds	r3, #4
 8011ff8:	4a42      	ldr	r2, [pc, #264]	; (8012104 <createProblem+0x1125c>)
 8011ffa:	461d      	mov	r5, r3
 8011ffc:	4614      	mov	r4, r2
 8011ffe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012000:	6028      	str	r0, [r5, #0]
 8012002:	6069      	str	r1, [r5, #4]
 8012004:	60aa      	str	r2, [r5, #8]
 8012006:	60eb      	str	r3, [r5, #12]
 8012008:	8823      	ldrh	r3, [r4, #0]
 801200a:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 801200c:	687b      	ldr	r3, [r7, #4]
 801200e:	33d8      	adds	r3, #216	; 0xd8
 8012010:	4a3d      	ldr	r2, [pc, #244]	; (8012108 <createProblem+0x11260>)
 8012012:	461c      	mov	r4, r3
 8012014:	4613      	mov	r3, r2
 8012016:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012018:	6020      	str	r0, [r4, #0]
 801201a:	6061      	str	r1, [r4, #4]
 801201c:	60a2      	str	r2, [r4, #8]
 801201e:	881b      	ldrh	r3, [r3, #0]
 8012020:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8012022:	687b      	ldr	r3, [r7, #4]
 8012024:	33cc      	adds	r3, #204	; 0xcc
 8012026:	4a25      	ldr	r2, [pc, #148]	; (80120bc <createProblem+0x11214>)
 8012028:	6810      	ldr	r0, [r2, #0]
 801202a:	6018      	str	r0, [r3, #0]
			break;
 801202c:	f008 bc82 	b.w	801a934 <createProblem+0x19a8c>
		case 576 :
			strcpy(p->name,"UPRISING");
 8012030:	687b      	ldr	r3, [r7, #4]
 8012032:	337c      	adds	r3, #124	; 0x7c
 8012034:	4935      	ldr	r1, [pc, #212]	; (801210c <createProblem+0x11264>)
 8012036:	461a      	mov	r2, r3
 8012038:	460b      	mov	r3, r1
 801203a:	cb03      	ldmia	r3!, {r0, r1}
 801203c:	6010      	str	r0, [r2, #0]
 801203e:	6051      	str	r1, [r2, #4]
 8012040:	781b      	ldrb	r3, [r3, #0]
 8012042:	7213      	strb	r3, [r2, #8]
			p->moveSize = 9;
 8012044:	687b      	ldr	r3, [r7, #4]
 8012046:	2209      	movs	r2, #9
 8012048:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,G,E,F,G,H,I");
 801204a:	687b      	ldr	r3, [r7, #4]
 801204c:	3340      	adds	r3, #64	; 0x40
 801204e:	4a30      	ldr	r2, [pc, #192]	; (8012110 <createProblem+0x11268>)
 8012050:	461d      	mov	r5, r3
 8012052:	4614      	mov	r4, r2
 8012054:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012056:	6028      	str	r0, [r5, #0]
 8012058:	6069      	str	r1, [r5, #4]
 801205a:	60aa      	str	r2, [r5, #8]
 801205c:	60eb      	str	r3, [r5, #12]
 801205e:	8823      	ldrh	r3, [r4, #0]
 8012060:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,5,8,9,12,13,14,16,18");
 8012062:	687b      	ldr	r3, [r7, #4]
 8012064:	3304      	adds	r3, #4
 8012066:	4a2b      	ldr	r2, [pc, #172]	; (8012114 <createProblem+0x1126c>)
 8012068:	461c      	mov	r4, r3
 801206a:	4615      	mov	r5, r2
 801206c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801206e:	6020      	str	r0, [r4, #0]
 8012070:	6061      	str	r1, [r4, #4]
 8012072:	60a2      	str	r2, [r4, #8]
 8012074:	60e3      	str	r3, [r4, #12]
 8012076:	6828      	ldr	r0, [r5, #0]
 8012078:	6120      	str	r0, [r4, #16]
 801207a:	88ab      	ldrh	r3, [r5, #4]
 801207c:	79aa      	ldrb	r2, [r5, #6]
 801207e:	82a3      	strh	r3, [r4, #20]
 8012080:	4613      	mov	r3, r2
 8012082:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8012084:	687b      	ldr	r3, [r7, #4]
 8012086:	33d8      	adds	r3, #216	; 0xd8
 8012088:	4a23      	ldr	r2, [pc, #140]	; (8012118 <createProblem+0x11270>)
 801208a:	461d      	mov	r5, r3
 801208c:	4614      	mov	r4, r2
 801208e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012090:	6028      	str	r0, [r5, #0]
 8012092:	6069      	str	r1, [r5, #4]
 8012094:	60aa      	str	r2, [r5, #8]
 8012096:	60eb      	str	r3, [r5, #12]
 8012098:	8823      	ldrh	r3, [r4, #0]
 801209a:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 801209c:	687b      	ldr	r3, [r7, #4]
 801209e:	33cc      	adds	r3, #204	; 0xcc
 80120a0:	4a06      	ldr	r2, [pc, #24]	; (80120bc <createProblem+0x11214>)
 80120a2:	6810      	ldr	r0, [r2, #0]
 80120a4:	6018      	str	r0, [r3, #0]
			break;
 80120a6:	f008 bc45 	b.w	801a934 <createProblem+0x19a8c>
 80120aa:	bf00      	nop
 80120ac:	08026904 	.word	0x08026904
 80120b0:	0802690c 	.word	0x0802690c
 80120b4:	08026928 	.word	0x08026928
 80120b8:	08026950 	.word	0x08026950
 80120bc:	08020830 	.word	0x08020830
 80120c0:	0802696c 	.word	0x0802696c
 80120c4:	0802697c 	.word	0x0802697c
 80120c8:	08026988 	.word	0x08026988
 80120cc:	0802091c 	.word	0x0802091c
 80120d0:	08020874 	.word	0x08020874
 80120d4:	08026998 	.word	0x08026998
 80120d8:	080269a8 	.word	0x080269a8
 80120dc:	080269b8 	.word	0x080269b8
 80120e0:	080269cc 	.word	0x080269cc
 80120e4:	08020928 	.word	0x08020928
 80120e8:	080269dc 	.word	0x080269dc
 80120ec:	080269ec 	.word	0x080269ec
 80120f0:	08026a00 	.word	0x08026a00
 80120f4:	08020b7c 	.word	0x08020b7c
 80120f8:	08020dc8 	.word	0x08020dc8
 80120fc:	08026a1c 	.word	0x08026a1c
 8012100:	08026a2c 	.word	0x08026a2c
 8012104:	08026a3c 	.word	0x08026a3c
 8012108:	08020a14 	.word	0x08020a14
 801210c:	08026a50 	.word	0x08026a50
 8012110:	08026a5c 	.word	0x08026a5c
 8012114:	08026a70 	.word	0x08026a70
 8012118:	08020dfc 	.word	0x08020dfc
		case 577 :
			strcpy(p->name,"EASY GO");
 801211c:	687b      	ldr	r3, [r7, #4]
 801211e:	337c      	adds	r3, #124	; 0x7c
 8012120:	49ba      	ldr	r1, [pc, #744]	; (801240c <createProblem+0x11564>)
 8012122:	461a      	mov	r2, r3
 8012124:	460b      	mov	r3, r1
 8012126:	cb03      	ldmia	r3!, {r0, r1}
 8012128:	6010      	str	r0, [r2, #0]
 801212a:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 801212c:	687b      	ldr	r3, [r7, #4]
 801212e:	2207      	movs	r2, #7
 8012130:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,E,H,F,C,D");
 8012132:	687b      	ldr	r3, [r7, #4]
 8012134:	3340      	adds	r3, #64	; 0x40
 8012136:	4ab6      	ldr	r2, [pc, #728]	; (8012410 <createProblem+0x11568>)
 8012138:	461c      	mov	r4, r3
 801213a:	4613      	mov	r3, r2
 801213c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801213e:	6020      	str	r0, [r4, #0]
 8012140:	6061      	str	r1, [r4, #4]
 8012142:	60a2      	str	r2, [r4, #8]
 8012144:	881b      	ldrh	r3, [r3, #0]
 8012146:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,8,11,13,18");
 8012148:	687b      	ldr	r3, [r7, #4]
 801214a:	3304      	adds	r3, #4
 801214c:	4ab1      	ldr	r2, [pc, #708]	; (8012414 <createProblem+0x1156c>)
 801214e:	461d      	mov	r5, r3
 8012150:	4614      	mov	r4, r2
 8012152:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012154:	6028      	str	r0, [r5, #0]
 8012156:	6069      	str	r1, [r5, #4]
 8012158:	60aa      	str	r2, [r5, #8]
 801215a:	60eb      	str	r3, [r5, #12]
 801215c:	7823      	ldrb	r3, [r4, #0]
 801215e:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8012160:	687b      	ldr	r3, [r7, #4]
 8012162:	33d8      	adds	r3, #216	; 0xd8
 8012164:	4aac      	ldr	r2, [pc, #688]	; (8012418 <createProblem+0x11570>)
 8012166:	461c      	mov	r4, r3
 8012168:	4613      	mov	r3, r2
 801216a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801216c:	6020      	str	r0, [r4, #0]
 801216e:	6061      	str	r1, [r4, #4]
 8012170:	60a2      	str	r2, [r4, #8]
 8012172:	881b      	ldrh	r3, [r3, #0]
 8012174:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8012176:	687b      	ldr	r3, [r7, #4]
 8012178:	33cc      	adds	r3, #204	; 0xcc
 801217a:	4aa8      	ldr	r2, [pc, #672]	; (801241c <createProblem+0x11574>)
 801217c:	6810      	ldr	r0, [r2, #0]
 801217e:	6018      	str	r0, [r3, #0]
			break;
 8012180:	f008 bbd8 	b.w	801a934 <createProblem+0x19a8c>
		case 578 :
			strcpy(p->name,"LEAVE OR FOLLOW");
 8012184:	687b      	ldr	r3, [r7, #4]
 8012186:	337c      	adds	r3, #124	; 0x7c
 8012188:	4aa5      	ldr	r2, [pc, #660]	; (8012420 <createProblem+0x11578>)
 801218a:	461c      	mov	r4, r3
 801218c:	4615      	mov	r5, r2
 801218e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8012190:	6020      	str	r0, [r4, #0]
 8012192:	6061      	str	r1, [r4, #4]
 8012194:	60a2      	str	r2, [r4, #8]
 8012196:	60e3      	str	r3, [r4, #12]
			p->moveSize = 6;
 8012198:	687b      	ldr	r3, [r7, #4]
 801219a:	2206      	movs	r2, #6
 801219c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,J,I,J,G,I");
 801219e:	687b      	ldr	r3, [r7, #4]
 80121a0:	3340      	adds	r3, #64	; 0x40
 80121a2:	4aa0      	ldr	r2, [pc, #640]	; (8012424 <createProblem+0x1157c>)
 80121a4:	461c      	mov	r4, r3
 80121a6:	4613      	mov	r3, r2
 80121a8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80121aa:	6020      	str	r0, [r4, #0]
 80121ac:	6061      	str	r1, [r4, #4]
 80121ae:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,7,10,13,15,18");
 80121b0:	687b      	ldr	r3, [r7, #4]
 80121b2:	3304      	adds	r3, #4
 80121b4:	4a9c      	ldr	r2, [pc, #624]	; (8012428 <createProblem+0x11580>)
 80121b6:	461c      	mov	r4, r3
 80121b8:	4615      	mov	r5, r2
 80121ba:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80121bc:	6020      	str	r0, [r4, #0]
 80121be:	6061      	str	r1, [r4, #4]
 80121c0:	60a2      	str	r2, [r4, #8]
 80121c2:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80121c4:	687b      	ldr	r3, [r7, #4]
 80121c6:	33d8      	adds	r3, #216	; 0xd8
 80121c8:	4a98      	ldr	r2, [pc, #608]	; (801242c <createProblem+0x11584>)
 80121ca:	461c      	mov	r4, r3
 80121cc:	4613      	mov	r3, r2
 80121ce:	cb07      	ldmia	r3!, {r0, r1, r2}
 80121d0:	6020      	str	r0, [r4, #0]
 80121d2:	6061      	str	r1, [r4, #4]
 80121d4:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 80121d6:	687b      	ldr	r3, [r7, #4]
 80121d8:	33cc      	adds	r3, #204	; 0xcc
 80121da:	4a95      	ldr	r2, [pc, #596]	; (8012430 <createProblem+0x11588>)
 80121dc:	8811      	ldrh	r1, [r2, #0]
 80121de:	7892      	ldrb	r2, [r2, #2]
 80121e0:	8019      	strh	r1, [r3, #0]
 80121e2:	709a      	strb	r2, [r3, #2]
			break;
 80121e4:	f008 bba6 	b.w	801a934 <createProblem+0x19a8c>
		case 579 :
			strcpy(p->name,"JUDGEMENT RAINS");
 80121e8:	687b      	ldr	r3, [r7, #4]
 80121ea:	337c      	adds	r3, #124	; 0x7c
 80121ec:	4a91      	ldr	r2, [pc, #580]	; (8012434 <createProblem+0x1158c>)
 80121ee:	461c      	mov	r4, r3
 80121f0:	4615      	mov	r5, r2
 80121f2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80121f4:	6020      	str	r0, [r4, #0]
 80121f6:	6061      	str	r1, [r4, #4]
 80121f8:	60a2      	str	r2, [r4, #8]
 80121fa:	60e3      	str	r3, [r4, #12]
			p->moveSize = 7;
 80121fc:	687b      	ldr	r3, [r7, #4]
 80121fe:	2207      	movs	r2, #7
 8012200:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,E,H,H,K,I");
 8012202:	687b      	ldr	r3, [r7, #4]
 8012204:	3340      	adds	r3, #64	; 0x40
 8012206:	4a8c      	ldr	r2, [pc, #560]	; (8012438 <createProblem+0x11590>)
 8012208:	461c      	mov	r4, r3
 801220a:	4613      	mov	r3, r2
 801220c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801220e:	6020      	str	r0, [r4, #0]
 8012210:	6061      	str	r1, [r4, #4]
 8012212:	60a2      	str	r2, [r4, #8]
 8012214:	881b      	ldrh	r3, [r3, #0]
 8012216:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,10,12,14,18");
 8012218:	687b      	ldr	r3, [r7, #4]
 801221a:	3304      	adds	r3, #4
 801221c:	4a87      	ldr	r2, [pc, #540]	; (801243c <createProblem+0x11594>)
 801221e:	461d      	mov	r5, r3
 8012220:	4614      	mov	r4, r2
 8012222:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012224:	6028      	str	r0, [r5, #0]
 8012226:	6069      	str	r1, [r5, #4]
 8012228:	60aa      	str	r2, [r5, #8]
 801222a:	60eb      	str	r3, [r5, #12]
 801222c:	8823      	ldrh	r3, [r4, #0]
 801222e:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8012230:	687b      	ldr	r3, [r7, #4]
 8012232:	33d8      	adds	r3, #216	; 0xd8
 8012234:	4a78      	ldr	r2, [pc, #480]	; (8012418 <createProblem+0x11570>)
 8012236:	461c      	mov	r4, r3
 8012238:	4613      	mov	r3, r2
 801223a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801223c:	6020      	str	r0, [r4, #0]
 801223e:	6061      	str	r1, [r4, #4]
 8012240:	60a2      	str	r2, [r4, #8]
 8012242:	881b      	ldrh	r3, [r3, #0]
 8012244:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 8012246:	687b      	ldr	r3, [r7, #4]
 8012248:	33cc      	adds	r3, #204	; 0xcc
 801224a:	4a7d      	ldr	r2, [pc, #500]	; (8012440 <createProblem+0x11598>)
 801224c:	6810      	ldr	r0, [r2, #0]
 801224e:	6018      	str	r0, [r3, #0]
			break;
 8012250:	f008 bb70 	b.w	801a934 <createProblem+0x19a8c>
		case 58 :
			strcpy(p->name,"UNDERTAKER");
 8012254:	687b      	ldr	r3, [r7, #4]
 8012256:	337c      	adds	r3, #124	; 0x7c
 8012258:	497a      	ldr	r1, [pc, #488]	; (8012444 <createProblem+0x1159c>)
 801225a:	461a      	mov	r2, r3
 801225c:	460b      	mov	r3, r1
 801225e:	cb03      	ldmia	r3!, {r0, r1}
 8012260:	6010      	str	r0, [r2, #0]
 8012262:	6051      	str	r1, [r2, #4]
 8012264:	8819      	ldrh	r1, [r3, #0]
 8012266:	789b      	ldrb	r3, [r3, #2]
 8012268:	8111      	strh	r1, [r2, #8]
 801226a:	7293      	strb	r3, [r2, #10]
			p->moveSize = 5;
 801226c:	687b      	ldr	r3, [r7, #4]
 801226e:	2205      	movs	r2, #5
 8012270:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,B,E,D");
 8012272:	687b      	ldr	r3, [r7, #4]
 8012274:	3340      	adds	r3, #64	; 0x40
 8012276:	4974      	ldr	r1, [pc, #464]	; (8012448 <createProblem+0x115a0>)
 8012278:	461a      	mov	r2, r3
 801227a:	460b      	mov	r3, r1
 801227c:	cb03      	ldmia	r3!, {r0, r1}
 801227e:	6010      	str	r0, [r2, #0]
 8012280:	6051      	str	r1, [r2, #4]
 8012282:	881b      	ldrh	r3, [r3, #0]
 8012284:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,9,12,14,18");
 8012286:	687b      	ldr	r3, [r7, #4]
 8012288:	3304      	adds	r3, #4
 801228a:	4a70      	ldr	r2, [pc, #448]	; (801244c <createProblem+0x115a4>)
 801228c:	461c      	mov	r4, r3
 801228e:	4613      	mov	r3, r2
 8012290:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012292:	6020      	str	r0, [r4, #0]
 8012294:	6061      	str	r1, [r4, #4]
 8012296:	60a2      	str	r2, [r4, #8]
 8012298:	781b      	ldrb	r3, [r3, #0]
 801229a:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 801229c:	687b      	ldr	r3, [r7, #4]
 801229e:	33d8      	adds	r3, #216	; 0xd8
 80122a0:	496b      	ldr	r1, [pc, #428]	; (8012450 <createProblem+0x115a8>)
 80122a2:	461a      	mov	r2, r3
 80122a4:	460b      	mov	r3, r1
 80122a6:	cb03      	ldmia	r3!, {r0, r1}
 80122a8:	6010      	str	r0, [r2, #0]
 80122aa:	6051      	str	r1, [r2, #4]
 80122ac:	881b      	ldrh	r3, [r3, #0]
 80122ae:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B");
 80122b0:	687b      	ldr	r3, [r7, #4]
 80122b2:	33cc      	adds	r3, #204	; 0xcc
 80122b4:	4a67      	ldr	r2, [pc, #412]	; (8012454 <createProblem+0x115ac>)
 80122b6:	8811      	ldrh	r1, [r2, #0]
 80122b8:	7892      	ldrb	r2, [r2, #2]
 80122ba:	8019      	strh	r1, [r3, #0]
 80122bc:	709a      	strb	r2, [r3, #2]
			break;
 80122be:	f008 bb39 	b.w	801a934 <createProblem+0x19a8c>
		case 580 :
			strcpy(p->name,"FOR BEGINNERS - 3");
 80122c2:	687b      	ldr	r3, [r7, #4]
 80122c4:	337c      	adds	r3, #124	; 0x7c
 80122c6:	4a64      	ldr	r2, [pc, #400]	; (8012458 <createProblem+0x115b0>)
 80122c8:	461d      	mov	r5, r3
 80122ca:	4614      	mov	r4, r2
 80122cc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80122ce:	6028      	str	r0, [r5, #0]
 80122d0:	6069      	str	r1, [r5, #4]
 80122d2:	60aa      	str	r2, [r5, #8]
 80122d4:	60eb      	str	r3, [r5, #12]
 80122d6:	8823      	ldrh	r3, [r4, #0]
 80122d8:	822b      	strh	r3, [r5, #16]
			p->moveSize = 8;
 80122da:	687b      	ldr	r3, [r7, #4]
 80122dc:	2208      	movs	r2, #8
 80122de:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,I,F,I,H,E,D");
 80122e0:	687b      	ldr	r3, [r7, #4]
 80122e2:	3340      	adds	r3, #64	; 0x40
 80122e4:	4a5d      	ldr	r2, [pc, #372]	; (801245c <createProblem+0x115b4>)
 80122e6:	461c      	mov	r4, r3
 80122e8:	4615      	mov	r5, r2
 80122ea:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80122ec:	6020      	str	r0, [r4, #0]
 80122ee:	6061      	str	r1, [r4, #4]
 80122f0:	60a2      	str	r2, [r4, #8]
 80122f2:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"8,4,10,13,14,12,16,18");
 80122f4:	687b      	ldr	r3, [r7, #4]
 80122f6:	3304      	adds	r3, #4
 80122f8:	4a59      	ldr	r2, [pc, #356]	; (8012460 <createProblem+0x115b8>)
 80122fa:	461d      	mov	r5, r3
 80122fc:	4614      	mov	r4, r2
 80122fe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012300:	6028      	str	r0, [r5, #0]
 8012302:	6069      	str	r1, [r5, #4]
 8012304:	60aa      	str	r2, [r5, #8]
 8012306:	60eb      	str	r3, [r5, #12]
 8012308:	6820      	ldr	r0, [r4, #0]
 801230a:	6128      	str	r0, [r5, #16]
 801230c:	88a3      	ldrh	r3, [r4, #4]
 801230e:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "d,s,d,d,d,d,d,e");
 8012310:	687b      	ldr	r3, [r7, #4]
 8012312:	33d8      	adds	r3, #216	; 0xd8
 8012314:	4a53      	ldr	r2, [pc, #332]	; (8012464 <createProblem+0x115bc>)
 8012316:	461c      	mov	r4, r3
 8012318:	4615      	mov	r5, r2
 801231a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801231c:	6020      	str	r0, [r4, #0]
 801231e:	6061      	str	r1, [r4, #4]
 8012320:	60a2      	str	r2, [r4, #8]
 8012322:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8012324:	687b      	ldr	r3, [r7, #4]
 8012326:	33cc      	adds	r3, #204	; 0xcc
 8012328:	4a3c      	ldr	r2, [pc, #240]	; (801241c <createProblem+0x11574>)
 801232a:	6810      	ldr	r0, [r2, #0]
 801232c:	6018      	str	r0, [r3, #0]
			break;
 801232e:	f008 bb01 	b.w	801a934 <createProblem+0x19a8c>
		case 581 :
			strcpy(p->name,"LOST DAY");
 8012332:	687b      	ldr	r3, [r7, #4]
 8012334:	337c      	adds	r3, #124	; 0x7c
 8012336:	494c      	ldr	r1, [pc, #304]	; (8012468 <createProblem+0x115c0>)
 8012338:	461a      	mov	r2, r3
 801233a:	460b      	mov	r3, r1
 801233c:	cb03      	ldmia	r3!, {r0, r1}
 801233e:	6010      	str	r0, [r2, #0]
 8012340:	6051      	str	r1, [r2, #4]
 8012342:	781b      	ldrb	r3, [r3, #0]
 8012344:	7213      	strb	r3, [r2, #8]
			p->moveSize = 6;
 8012346:	687b      	ldr	r3, [r7, #4]
 8012348:	2206      	movs	r2, #6
 801234a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,J,H,C,D,D");
 801234c:	687b      	ldr	r3, [r7, #4]
 801234e:	3340      	adds	r3, #64	; 0x40
 8012350:	4a46      	ldr	r2, [pc, #280]	; (801246c <createProblem+0x115c4>)
 8012352:	461c      	mov	r4, r3
 8012354:	4613      	mov	r3, r2
 8012356:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012358:	6020      	str	r0, [r4, #0]
 801235a:	6061      	str	r1, [r4, #4]
 801235c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,10,13,15,18");
 801235e:	687b      	ldr	r3, [r7, #4]
 8012360:	3304      	adds	r3, #4
 8012362:	4a43      	ldr	r2, [pc, #268]	; (8012470 <createProblem+0x115c8>)
 8012364:	461c      	mov	r4, r3
 8012366:	4615      	mov	r5, r2
 8012368:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801236a:	6020      	str	r0, [r4, #0]
 801236c:	6061      	str	r1, [r4, #4]
 801236e:	60a2      	str	r2, [r4, #8]
 8012370:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8012372:	687b      	ldr	r3, [r7, #4]
 8012374:	33d8      	adds	r3, #216	; 0xd8
 8012376:	4a3f      	ldr	r2, [pc, #252]	; (8012474 <createProblem+0x115cc>)
 8012378:	461c      	mov	r4, r3
 801237a:	4613      	mov	r3, r2
 801237c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801237e:	6020      	str	r0, [r4, #0]
 8012380:	6061      	str	r1, [r4, #4]
 8012382:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 8012384:	687b      	ldr	r3, [r7, #4]
 8012386:	33cc      	adds	r3, #204	; 0xcc
 8012388:	4a29      	ldr	r2, [pc, #164]	; (8012430 <createProblem+0x11588>)
 801238a:	8811      	ldrh	r1, [r2, #0]
 801238c:	7892      	ldrb	r2, [r2, #2]
 801238e:	8019      	strh	r1, [r3, #0]
 8012390:	709a      	strb	r2, [r3, #2]
			break;
 8012392:	f008 bacf 	b.w	801a934 <createProblem+0x19a8c>
		case 582 :
			strcpy(p->name,"GLUTAMATO MONOSODICO");
 8012396:	687b      	ldr	r3, [r7, #4]
 8012398:	337c      	adds	r3, #124	; 0x7c
 801239a:	4a37      	ldr	r2, [pc, #220]	; (8012478 <createProblem+0x115d0>)
 801239c:	461d      	mov	r5, r3
 801239e:	4614      	mov	r4, r2
 80123a0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80123a2:	6028      	str	r0, [r5, #0]
 80123a4:	6069      	str	r1, [r5, #4]
 80123a6:	60aa      	str	r2, [r5, #8]
 80123a8:	60eb      	str	r3, [r5, #12]
 80123aa:	6820      	ldr	r0, [r4, #0]
 80123ac:	6128      	str	r0, [r5, #16]
 80123ae:	7923      	ldrb	r3, [r4, #4]
 80123b0:	752b      	strb	r3, [r5, #20]
			p->moveSize = 7;
 80123b2:	687b      	ldr	r3, [r7, #4]
 80123b4:	2207      	movs	r2, #7
 80123b6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,G,C,B,E,D");
 80123b8:	687b      	ldr	r3, [r7, #4]
 80123ba:	3340      	adds	r3, #64	; 0x40
 80123bc:	4a2f      	ldr	r2, [pc, #188]	; (801247c <createProblem+0x115d4>)
 80123be:	461c      	mov	r4, r3
 80123c0:	4613      	mov	r3, r2
 80123c2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80123c4:	6020      	str	r0, [r4, #0]
 80123c6:	6061      	str	r1, [r4, #4]
 80123c8:	60a2      	str	r2, [r4, #8]
 80123ca:	881b      	ldrh	r3, [r3, #0]
 80123cc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,4,9,8,12,12,18");
 80123ce:	687b      	ldr	r3, [r7, #4]
 80123d0:	3304      	adds	r3, #4
 80123d2:	4a2b      	ldr	r2, [pc, #172]	; (8012480 <createProblem+0x115d8>)
 80123d4:	461d      	mov	r5, r3
 80123d6:	4614      	mov	r4, r2
 80123d8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80123da:	6028      	str	r0, [r5, #0]
 80123dc:	6069      	str	r1, [r5, #4]
 80123de:	60aa      	str	r2, [r5, #8]
 80123e0:	60eb      	str	r3, [r5, #12]
 80123e2:	7823      	ldrb	r3, [r4, #0]
 80123e4:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 80123e6:	687b      	ldr	r3, [r7, #4]
 80123e8:	33d8      	adds	r3, #216	; 0xd8
 80123ea:	4a0b      	ldr	r2, [pc, #44]	; (8012418 <createProblem+0x11570>)
 80123ec:	461c      	mov	r4, r3
 80123ee:	4613      	mov	r3, r2
 80123f0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80123f2:	6020      	str	r0, [r4, #0]
 80123f4:	6061      	str	r1, [r4, #4]
 80123f6:	60a2      	str	r2, [r4, #8]
 80123f8:	881b      	ldrh	r3, [r3, #0]
 80123fa:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80123fc:	687b      	ldr	r3, [r7, #4]
 80123fe:	33cc      	adds	r3, #204	; 0xcc
 8012400:	4a06      	ldr	r2, [pc, #24]	; (801241c <createProblem+0x11574>)
 8012402:	6810      	ldr	r0, [r2, #0]
 8012404:	6018      	str	r0, [r3, #0]
			break;
 8012406:	f008 ba95 	b.w	801a934 <createProblem+0x19a8c>
 801240a:	bf00      	nop
 801240c:	08026a88 	.word	0x08026a88
 8012410:	08026a90 	.word	0x08026a90
 8012414:	08026aa0 	.word	0x08026aa0
 8012418:	08020820 	.word	0x08020820
 801241c:	08020830 	.word	0x08020830
 8012420:	08026ab4 	.word	0x08026ab4
 8012424:	08026ac4 	.word	0x08026ac4
 8012428:	08026ad0 	.word	0x08026ad0
 801242c:	0802091c 	.word	0x0802091c
 8012430:	080208f0 	.word	0x080208f0
 8012434:	08026ae0 	.word	0x08026ae0
 8012438:	08026af0 	.word	0x08026af0
 801243c:	08026b00 	.word	0x08026b00
 8012440:	080209a4 	.word	0x080209a4
 8012444:	08026b14 	.word	0x08026b14
 8012448:	08026b20 	.word	0x08026b20
 801244c:	080222e4 	.word	0x080222e4
 8012450:	080208a0 	.word	0x080208a0
 8012454:	080208ac 	.word	0x080208ac
 8012458:	08026b2c 	.word	0x08026b2c
 801245c:	08026b40 	.word	0x08026b40
 8012460:	08026b50 	.word	0x08026b50
 8012464:	08026718 	.word	0x08026718
 8012468:	08026b68 	.word	0x08026b68
 801246c:	08026b74 	.word	0x08026b74
 8012470:	08025cc0 	.word	0x08025cc0
 8012474:	08020e90 	.word	0x08020e90
 8012478:	08026b80 	.word	0x08026b80
 801247c:	08026b98 	.word	0x08026b98
 8012480:	08026ba8 	.word	0x08026ba8
		case 583 :
			strcpy(p->name,"LA BANDA DEL PATIO");
 8012484:	687b      	ldr	r3, [r7, #4]
 8012486:	337c      	adds	r3, #124	; 0x7c
 8012488:	4abd      	ldr	r2, [pc, #756]	; (8012780 <createProblem+0x118d8>)
 801248a:	461d      	mov	r5, r3
 801248c:	4614      	mov	r4, r2
 801248e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012490:	6028      	str	r0, [r5, #0]
 8012492:	6069      	str	r1, [r5, #4]
 8012494:	60aa      	str	r2, [r5, #8]
 8012496:	60eb      	str	r3, [r5, #12]
 8012498:	8823      	ldrh	r3, [r4, #0]
 801249a:	78a2      	ldrb	r2, [r4, #2]
 801249c:	822b      	strh	r3, [r5, #16]
 801249e:	4613      	mov	r3, r2
 80124a0:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 8;
 80124a2:	687b      	ldr	r3, [r7, #4]
 80124a4:	2208      	movs	r2, #8
 80124a6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,G,C,B,E,A,D");
 80124a8:	687b      	ldr	r3, [r7, #4]
 80124aa:	3340      	adds	r3, #64	; 0x40
 80124ac:	4ab5      	ldr	r2, [pc, #724]	; (8012784 <createProblem+0x118dc>)
 80124ae:	461c      	mov	r4, r3
 80124b0:	4615      	mov	r5, r2
 80124b2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80124b4:	6020      	str	r0, [r4, #0]
 80124b6:	6061      	str	r1, [r4, #4]
 80124b8:	60a2      	str	r2, [r4, #8]
 80124ba:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,5,9,8,12,12,14,18");
 80124bc:	687b      	ldr	r3, [r7, #4]
 80124be:	3304      	adds	r3, #4
 80124c0:	4ab1      	ldr	r2, [pc, #708]	; (8012788 <createProblem+0x118e0>)
 80124c2:	461d      	mov	r5, r3
 80124c4:	4614      	mov	r4, r2
 80124c6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80124c8:	6028      	str	r0, [r5, #0]
 80124ca:	6069      	str	r1, [r5, #4]
 80124cc:	60aa      	str	r2, [r5, #8]
 80124ce:	60eb      	str	r3, [r5, #12]
 80124d0:	6820      	ldr	r0, [r4, #0]
 80124d2:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 80124d4:	687b      	ldr	r3, [r7, #4]
 80124d6:	33d8      	adds	r3, #216	; 0xd8
 80124d8:	4aac      	ldr	r2, [pc, #688]	; (801278c <createProblem+0x118e4>)
 80124da:	461c      	mov	r4, r3
 80124dc:	4615      	mov	r5, r2
 80124de:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80124e0:	6020      	str	r0, [r4, #0]
 80124e2:	6061      	str	r1, [r4, #4]
 80124e4:	60a2      	str	r2, [r4, #8]
 80124e6:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80124e8:	687b      	ldr	r3, [r7, #4]
 80124ea:	33cc      	adds	r3, #204	; 0xcc
 80124ec:	4aa8      	ldr	r2, [pc, #672]	; (8012790 <createProblem+0x118e8>)
 80124ee:	6810      	ldr	r0, [r2, #0]
 80124f0:	6018      	str	r0, [r3, #0]
			break;
 80124f2:	f008 ba1f 	b.w	801a934 <createProblem+0x19a8c>
		case 584 :
			strcpy(p->name,"OACHKAZL");
 80124f6:	687b      	ldr	r3, [r7, #4]
 80124f8:	337c      	adds	r3, #124	; 0x7c
 80124fa:	49a6      	ldr	r1, [pc, #664]	; (8012794 <createProblem+0x118ec>)
 80124fc:	461a      	mov	r2, r3
 80124fe:	460b      	mov	r3, r1
 8012500:	cb03      	ldmia	r3!, {r0, r1}
 8012502:	6010      	str	r0, [r2, #0]
 8012504:	6051      	str	r1, [r2, #4]
 8012506:	781b      	ldrb	r3, [r3, #0]
 8012508:	7213      	strb	r3, [r2, #8]
			p->moveSize = 8;
 801250a:	687b      	ldr	r3, [r7, #4]
 801250c:	2208      	movs	r2, #8
 801250e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,G,B,C,D,D,C");
 8012510:	687b      	ldr	r3, [r7, #4]
 8012512:	3340      	adds	r3, #64	; 0x40
 8012514:	4aa0      	ldr	r2, [pc, #640]	; (8012798 <createProblem+0x118f0>)
 8012516:	461c      	mov	r4, r3
 8012518:	4615      	mov	r5, r2
 801251a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801251c:	6020      	str	r0, [r4, #0]
 801251e:	6061      	str	r1, [r4, #4]
 8012520:	60a2      	str	r2, [r4, #8]
 8012522:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,9,12,16,18,15,8");
 8012524:	687b      	ldr	r3, [r7, #4]
 8012526:	3304      	adds	r3, #4
 8012528:	4a9c      	ldr	r2, [pc, #624]	; (801279c <createProblem+0x118f4>)
 801252a:	461d      	mov	r5, r3
 801252c:	4614      	mov	r4, r2
 801252e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012530:	6028      	str	r0, [r5, #0]
 8012532:	6069      	str	r1, [r5, #4]
 8012534:	60aa      	str	r2, [r5, #8]
 8012536:	60eb      	str	r3, [r5, #12]
 8012538:	6820      	ldr	r0, [r4, #0]
 801253a:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,e,d,d");
 801253c:	687b      	ldr	r3, [r7, #4]
 801253e:	33d8      	adds	r3, #216	; 0xd8
 8012540:	4a97      	ldr	r2, [pc, #604]	; (80127a0 <createProblem+0x118f8>)
 8012542:	461c      	mov	r4, r3
 8012544:	4615      	mov	r5, r2
 8012546:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8012548:	6020      	str	r0, [r4, #0]
 801254a:	6061      	str	r1, [r4, #4]
 801254c:	60a2      	str	r2, [r4, #8]
 801254e:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 8012550:	687b      	ldr	r3, [r7, #4]
 8012552:	33cc      	adds	r3, #204	; 0xcc
 8012554:	4a93      	ldr	r2, [pc, #588]	; (80127a4 <createProblem+0x118fc>)
 8012556:	6810      	ldr	r0, [r2, #0]
 8012558:	6018      	str	r0, [r3, #0]
			break;
 801255a:	f008 b9eb 	b.w	801a934 <createProblem+0x19a8c>
		case 585 :
			strcpy(p->name,"THE WALL 1");
 801255e:	687b      	ldr	r3, [r7, #4]
 8012560:	337c      	adds	r3, #124	; 0x7c
 8012562:	4991      	ldr	r1, [pc, #580]	; (80127a8 <createProblem+0x11900>)
 8012564:	461a      	mov	r2, r3
 8012566:	460b      	mov	r3, r1
 8012568:	cb03      	ldmia	r3!, {r0, r1}
 801256a:	6010      	str	r0, [r2, #0]
 801256c:	6051      	str	r1, [r2, #4]
 801256e:	8819      	ldrh	r1, [r3, #0]
 8012570:	789b      	ldrb	r3, [r3, #2]
 8012572:	8111      	strh	r1, [r2, #8]
 8012574:	7293      	strb	r3, [r2, #10]
			p->moveSize = 9;
 8012576:	687b      	ldr	r3, [r7, #4]
 8012578:	2209      	movs	r2, #9
 801257a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,G,G,B,F,F,I,E,I");
 801257c:	687b      	ldr	r3, [r7, #4]
 801257e:	3340      	adds	r3, #64	; 0x40
 8012580:	4a8a      	ldr	r2, [pc, #552]	; (80127ac <createProblem+0x11904>)
 8012582:	461d      	mov	r5, r3
 8012584:	4614      	mov	r4, r2
 8012586:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012588:	6028      	str	r0, [r5, #0]
 801258a:	6069      	str	r1, [r5, #4]
 801258c:	60aa      	str	r2, [r5, #8]
 801258e:	60eb      	str	r3, [r5, #12]
 8012590:	8823      	ldrh	r3, [r4, #0]
 8012592:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"6,4,9,10,11,13,14,16,18");
 8012594:	687b      	ldr	r3, [r7, #4]
 8012596:	3304      	adds	r3, #4
 8012598:	4a85      	ldr	r2, [pc, #532]	; (80127b0 <createProblem+0x11908>)
 801259a:	461d      	mov	r5, r3
 801259c:	4614      	mov	r4, r2
 801259e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80125a0:	6028      	str	r0, [r5, #0]
 80125a2:	6069      	str	r1, [r5, #4]
 80125a4:	60aa      	str	r2, [r5, #8]
 80125a6:	60eb      	str	r3, [r5, #12]
 80125a8:	cc03      	ldmia	r4!, {r0, r1}
 80125aa:	6128      	str	r0, [r5, #16]
 80125ac:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 80125ae:	687b      	ldr	r3, [r7, #4]
 80125b0:	33d8      	adds	r3, #216	; 0xd8
 80125b2:	4a80      	ldr	r2, [pc, #512]	; (80127b4 <createProblem+0x1190c>)
 80125b4:	461d      	mov	r5, r3
 80125b6:	4614      	mov	r4, r2
 80125b8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80125ba:	6028      	str	r0, [r5, #0]
 80125bc:	6069      	str	r1, [r5, #4]
 80125be:	60aa      	str	r2, [r5, #8]
 80125c0:	60eb      	str	r3, [r5, #12]
 80125c2:	8823      	ldrh	r3, [r4, #0]
 80125c4:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6C");
 80125c6:	687b      	ldr	r3, [r7, #4]
 80125c8:	33cc      	adds	r3, #204	; 0xcc
 80125ca:	4a7b      	ldr	r2, [pc, #492]	; (80127b8 <createProblem+0x11910>)
 80125cc:	8811      	ldrh	r1, [r2, #0]
 80125ce:	7892      	ldrb	r2, [r2, #2]
 80125d0:	8019      	strh	r1, [r3, #0]
 80125d2:	709a      	strb	r2, [r3, #2]
			break;
 80125d4:	f008 b9ae 	b.w	801a934 <createProblem+0x19a8c>
		case 586 :
			strcpy(p->name,"ET");
 80125d8:	687b      	ldr	r3, [r7, #4]
 80125da:	337c      	adds	r3, #124	; 0x7c
 80125dc:	4a77      	ldr	r2, [pc, #476]	; (80127bc <createProblem+0x11914>)
 80125de:	8811      	ldrh	r1, [r2, #0]
 80125e0:	7892      	ldrb	r2, [r2, #2]
 80125e2:	8019      	strh	r1, [r3, #0]
 80125e4:	709a      	strb	r2, [r3, #2]
			p->moveSize = 7;
 80125e6:	687b      	ldr	r3, [r7, #4]
 80125e8:	2207      	movs	r2, #7
 80125ea:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,E,B,E,E,I");
 80125ec:	687b      	ldr	r3, [r7, #4]
 80125ee:	3340      	adds	r3, #64	; 0x40
 80125f0:	4a73      	ldr	r2, [pc, #460]	; (80127c0 <createProblem+0x11918>)
 80125f2:	461c      	mov	r4, r3
 80125f4:	4613      	mov	r3, r2
 80125f6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80125f8:	6020      	str	r0, [r4, #0]
 80125fa:	6061      	str	r1, [r4, #4]
 80125fc:	60a2      	str	r2, [r4, #8]
 80125fe:	881b      	ldrh	r3, [r3, #0]
 8012600:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,10,12,16,18");
 8012602:	687b      	ldr	r3, [r7, #4]
 8012604:	3304      	adds	r3, #4
 8012606:	4a6f      	ldr	r2, [pc, #444]	; (80127c4 <createProblem+0x1191c>)
 8012608:	461d      	mov	r5, r3
 801260a:	4614      	mov	r4, r2
 801260c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801260e:	6028      	str	r0, [r5, #0]
 8012610:	6069      	str	r1, [r5, #4]
 8012612:	60aa      	str	r2, [r5, #8]
 8012614:	60eb      	str	r3, [r5, #12]
 8012616:	8823      	ldrh	r3, [r4, #0]
 8012618:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 801261a:	687b      	ldr	r3, [r7, #4]
 801261c:	33d8      	adds	r3, #216	; 0xd8
 801261e:	4a6a      	ldr	r2, [pc, #424]	; (80127c8 <createProblem+0x11920>)
 8012620:	461c      	mov	r4, r3
 8012622:	4613      	mov	r3, r2
 8012624:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012626:	6020      	str	r0, [r4, #0]
 8012628:	6061      	str	r1, [r4, #4]
 801262a:	60a2      	str	r2, [r4, #8]
 801262c:	881b      	ldrh	r3, [r3, #0]
 801262e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8012630:	687b      	ldr	r3, [r7, #4]
 8012632:	33cc      	adds	r3, #204	; 0xcc
 8012634:	4a60      	ldr	r2, [pc, #384]	; (80127b8 <createProblem+0x11910>)
 8012636:	8811      	ldrh	r1, [r2, #0]
 8012638:	7892      	ldrb	r2, [r2, #2]
 801263a:	8019      	strh	r1, [r3, #0]
 801263c:	709a      	strb	r2, [r3, #2]
			break;
 801263e:	f008 b979 	b.w	801a934 <createProblem+0x19a8c>
		case 587 :
			strcpy(p->name,"SOFA 3");
 8012642:	687b      	ldr	r3, [r7, #4]
 8012644:	337c      	adds	r3, #124	; 0x7c
 8012646:	4a61      	ldr	r2, [pc, #388]	; (80127cc <createProblem+0x11924>)
 8012648:	6810      	ldr	r0, [r2, #0]
 801264a:	6018      	str	r0, [r3, #0]
 801264c:	8891      	ldrh	r1, [r2, #4]
 801264e:	7992      	ldrb	r2, [r2, #6]
 8012650:	8099      	strh	r1, [r3, #4]
 8012652:	719a      	strb	r2, [r3, #6]
			p->moveSize = 5;
 8012654:	687b      	ldr	r3, [r7, #4]
 8012656:	2205      	movs	r2, #5
 8012658:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,G,H,J,I");
 801265a:	687b      	ldr	r3, [r7, #4]
 801265c:	3340      	adds	r3, #64	; 0x40
 801265e:	495c      	ldr	r1, [pc, #368]	; (80127d0 <createProblem+0x11928>)
 8012660:	461a      	mov	r2, r3
 8012662:	460b      	mov	r3, r1
 8012664:	cb03      	ldmia	r3!, {r0, r1}
 8012666:	6010      	str	r0, [r2, #0]
 8012668:	6051      	str	r1, [r2, #4]
 801266a:	881b      	ldrh	r3, [r3, #0]
 801266c:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,9,12,13,18");
 801266e:	687b      	ldr	r3, [r7, #4]
 8012670:	3304      	adds	r3, #4
 8012672:	4a58      	ldr	r2, [pc, #352]	; (80127d4 <createProblem+0x1192c>)
 8012674:	461c      	mov	r4, r3
 8012676:	4613      	mov	r3, r2
 8012678:	cb07      	ldmia	r3!, {r0, r1, r2}
 801267a:	6020      	str	r0, [r4, #0]
 801267c:	6061      	str	r1, [r4, #4]
 801267e:	60a2      	str	r2, [r4, #8]
 8012680:	781b      	ldrb	r3, [r3, #0]
 8012682:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8012684:	687b      	ldr	r3, [r7, #4]
 8012686:	33d8      	adds	r3, #216	; 0xd8
 8012688:	4953      	ldr	r1, [pc, #332]	; (80127d8 <createProblem+0x11930>)
 801268a:	461a      	mov	r2, r3
 801268c:	460b      	mov	r3, r1
 801268e:	cb03      	ldmia	r3!, {r0, r1}
 8012690:	6010      	str	r0, [r2, #0]
 8012692:	6051      	str	r1, [r2, #4]
 8012694:	881b      	ldrh	r3, [r3, #0]
 8012696:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 8012698:	687b      	ldr	r3, [r7, #4]
 801269a:	33cc      	adds	r3, #204	; 0xcc
 801269c:	4a4f      	ldr	r2, [pc, #316]	; (80127dc <createProblem+0x11934>)
 801269e:	6810      	ldr	r0, [r2, #0]
 80126a0:	6018      	str	r0, [r3, #0]
			break;
 80126a2:	f008 b947 	b.w	801a934 <createProblem+0x19a8c>
		case 588 :
			strcpy(p->name,"KLIK IT");
 80126a6:	687b      	ldr	r3, [r7, #4]
 80126a8:	337c      	adds	r3, #124	; 0x7c
 80126aa:	494d      	ldr	r1, [pc, #308]	; (80127e0 <createProblem+0x11938>)
 80126ac:	461a      	mov	r2, r3
 80126ae:	460b      	mov	r3, r1
 80126b0:	cb03      	ldmia	r3!, {r0, r1}
 80126b2:	6010      	str	r0, [r2, #0]
 80126b4:	6051      	str	r1, [r2, #4]
			p->moveSize = 5;
 80126b6:	687b      	ldr	r3, [r7, #4]
 80126b8:	2205      	movs	r2, #5
 80126ba:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,F,A,D");
 80126bc:	687b      	ldr	r3, [r7, #4]
 80126be:	3340      	adds	r3, #64	; 0x40
 80126c0:	4948      	ldr	r1, [pc, #288]	; (80127e4 <createProblem+0x1193c>)
 80126c2:	461a      	mov	r2, r3
 80126c4:	460b      	mov	r3, r1
 80126c6:	cb03      	ldmia	r3!, {r0, r1}
 80126c8:	6010      	str	r0, [r2, #0]
 80126ca:	6051      	str	r1, [r2, #4]
 80126cc:	881b      	ldrh	r3, [r3, #0]
 80126ce:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,11,14,18");
 80126d0:	687b      	ldr	r3, [r7, #4]
 80126d2:	3304      	adds	r3, #4
 80126d4:	4a44      	ldr	r2, [pc, #272]	; (80127e8 <createProblem+0x11940>)
 80126d6:	461c      	mov	r4, r3
 80126d8:	4613      	mov	r3, r2
 80126da:	cb07      	ldmia	r3!, {r0, r1, r2}
 80126dc:	6020      	str	r0, [r4, #0]
 80126de:	6061      	str	r1, [r4, #4]
 80126e0:	60a2      	str	r2, [r4, #8]
 80126e2:	781b      	ldrb	r3, [r3, #0]
 80126e4:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 80126e6:	687b      	ldr	r3, [r7, #4]
 80126e8:	33d8      	adds	r3, #216	; 0xd8
 80126ea:	493b      	ldr	r1, [pc, #236]	; (80127d8 <createProblem+0x11930>)
 80126ec:	461a      	mov	r2, r3
 80126ee:	460b      	mov	r3, r1
 80126f0:	cb03      	ldmia	r3!, {r0, r1}
 80126f2:	6010      	str	r0, [r2, #0]
 80126f4:	6051      	str	r1, [r2, #4]
 80126f6:	881b      	ldrh	r3, [r3, #0]
 80126f8:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7C");
 80126fa:	687b      	ldr	r3, [r7, #4]
 80126fc:	33cc      	adds	r3, #204	; 0xcc
 80126fe:	4a3b      	ldr	r2, [pc, #236]	; (80127ec <createProblem+0x11944>)
 8012700:	8811      	ldrh	r1, [r2, #0]
 8012702:	7892      	ldrb	r2, [r2, #2]
 8012704:	8019      	strh	r1, [r3, #0]
 8012706:	709a      	strb	r2, [r3, #2]
			break;
 8012708:	f008 b914 	b.w	801a934 <createProblem+0x19a8c>
		case 589 :
			strcpy(p->name,"THE BLACK");
 801270c:	687b      	ldr	r3, [r7, #4]
 801270e:	337c      	adds	r3, #124	; 0x7c
 8012710:	4937      	ldr	r1, [pc, #220]	; (80127f0 <createProblem+0x11948>)
 8012712:	461a      	mov	r2, r3
 8012714:	460b      	mov	r3, r1
 8012716:	cb03      	ldmia	r3!, {r0, r1}
 8012718:	6010      	str	r0, [r2, #0]
 801271a:	6051      	str	r1, [r2, #4]
 801271c:	881b      	ldrh	r3, [r3, #0]
 801271e:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 8012720:	687b      	ldr	r3, [r7, #4]
 8012722:	2207      	movs	r2, #7
 8012724:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,B,C,H,K,I");
 8012726:	687b      	ldr	r3, [r7, #4]
 8012728:	3340      	adds	r3, #64	; 0x40
 801272a:	4a32      	ldr	r2, [pc, #200]	; (80127f4 <createProblem+0x1194c>)
 801272c:	461c      	mov	r4, r3
 801272e:	4613      	mov	r3, r2
 8012730:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012732:	6020      	str	r0, [r4, #0]
 8012734:	6061      	str	r1, [r4, #4]
 8012736:	60a2      	str	r2, [r4, #8]
 8012738:	881b      	ldrh	r3, [r3, #0]
 801273a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,10,13,13,16,18");
 801273c:	687b      	ldr	r3, [r7, #4]
 801273e:	3304      	adds	r3, #4
 8012740:	4a2d      	ldr	r2, [pc, #180]	; (80127f8 <createProblem+0x11950>)
 8012742:	461d      	mov	r5, r3
 8012744:	4614      	mov	r4, r2
 8012746:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012748:	6028      	str	r0, [r5, #0]
 801274a:	6069      	str	r1, [r5, #4]
 801274c:	60aa      	str	r2, [r5, #8]
 801274e:	60eb      	str	r3, [r5, #12]
 8012750:	8823      	ldrh	r3, [r4, #0]
 8012752:	78a2      	ldrb	r2, [r4, #2]
 8012754:	822b      	strh	r3, [r5, #16]
 8012756:	4613      	mov	r3, r2
 8012758:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 801275a:	687b      	ldr	r3, [r7, #4]
 801275c:	33d8      	adds	r3, #216	; 0xd8
 801275e:	4a1a      	ldr	r2, [pc, #104]	; (80127c8 <createProblem+0x11920>)
 8012760:	461c      	mov	r4, r3
 8012762:	4613      	mov	r3, r2
 8012764:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012766:	6020      	str	r0, [r4, #0]
 8012768:	6061      	str	r1, [r4, #4]
 801276a:	60a2      	str	r2, [r4, #8]
 801276c:	881b      	ldrh	r3, [r3, #0]
 801276e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 8012770:	687b      	ldr	r3, [r7, #4]
 8012772:	33cc      	adds	r3, #204	; 0xcc
 8012774:	4a0b      	ldr	r2, [pc, #44]	; (80127a4 <createProblem+0x118fc>)
 8012776:	6810      	ldr	r0, [r2, #0]
 8012778:	6018      	str	r0, [r3, #0]
			break;
 801277a:	f008 b8db 	b.w	801a934 <createProblem+0x19a8c>
 801277e:	bf00      	nop
 8012780:	08026bbc 	.word	0x08026bbc
 8012784:	08026bd0 	.word	0x08026bd0
 8012788:	08026be0 	.word	0x08026be0
 801278c:	08020a4c 	.word	0x08020a4c
 8012790:	08020830 	.word	0x08020830
 8012794:	08026bf4 	.word	0x08026bf4
 8012798:	08026c00 	.word	0x08026c00
 801279c:	08026c10 	.word	0x08026c10
 80127a0:	08026c24 	.word	0x08026c24
 80127a4:	080209a4 	.word	0x080209a4
 80127a8:	08026c34 	.word	0x08026c34
 80127ac:	08026c40 	.word	0x08026c40
 80127b0:	08026c54 	.word	0x08026c54
 80127b4:	08020dfc 	.word	0x08020dfc
 80127b8:	080208f0 	.word	0x080208f0
 80127bc:	08026c6c 	.word	0x08026c6c
 80127c0:	08026c70 	.word	0x08026c70
 80127c4:	08024920 	.word	0x08024920
 80127c8:	08020a14 	.word	0x08020a14
 80127cc:	08026c80 	.word	0x08026c80
 80127d0:	08026c88 	.word	0x08026c88
 80127d4:	08026c94 	.word	0x08026c94
 80127d8:	080208a0 	.word	0x080208a0
 80127dc:	08020dc8 	.word	0x08020dc8
 80127e0:	08026ca4 	.word	0x08026ca4
 80127e4:	08026cac 	.word	0x08026cac
 80127e8:	0802140c 	.word	0x0802140c
 80127ec:	08020b0c 	.word	0x08020b0c
 80127f0:	08026cb8 	.word	0x08026cb8
 80127f4:	08026cc4 	.word	0x08026cc4
 80127f8:	08026cd4 	.word	0x08026cd4
		case 59 :
			strcpy(p->name,"REALE");
 80127fc:	687b      	ldr	r3, [r7, #4]
 80127fe:	337c      	adds	r3, #124	; 0x7c
 8012800:	4ab3      	ldr	r2, [pc, #716]	; (8012ad0 <createProblem+0x11c28>)
 8012802:	6810      	ldr	r0, [r2, #0]
 8012804:	6018      	str	r0, [r3, #0]
 8012806:	8892      	ldrh	r2, [r2, #4]
 8012808:	809a      	strh	r2, [r3, #4]
			p->moveSize = 7;
 801280a:	687b      	ldr	r3, [r7, #4]
 801280c:	2207      	movs	r2, #7
 801280e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,F,G,K,I");
 8012810:	687b      	ldr	r3, [r7, #4]
 8012812:	3340      	adds	r3, #64	; 0x40
 8012814:	4aaf      	ldr	r2, [pc, #700]	; (8012ad4 <createProblem+0x11c2c>)
 8012816:	461c      	mov	r4, r3
 8012818:	4613      	mov	r3, r2
 801281a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801281c:	6020      	str	r0, [r4, #0]
 801281e:	6061      	str	r1, [r4, #4]
 8012820:	60a2      	str	r2, [r4, #8]
 8012822:	881b      	ldrh	r3, [r3, #0]
 8012824:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,5,8,11,14,16,18");
 8012826:	687b      	ldr	r3, [r7, #4]
 8012828:	3304      	adds	r3, #4
 801282a:	4aab      	ldr	r2, [pc, #684]	; (8012ad8 <createProblem+0x11c30>)
 801282c:	461d      	mov	r5, r3
 801282e:	4614      	mov	r4, r2
 8012830:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012832:	6028      	str	r0, [r5, #0]
 8012834:	6069      	str	r1, [r5, #4]
 8012836:	60aa      	str	r2, [r5, #8]
 8012838:	60eb      	str	r3, [r5, #12]
 801283a:	8823      	ldrh	r3, [r4, #0]
 801283c:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 801283e:	687b      	ldr	r3, [r7, #4]
 8012840:	33d8      	adds	r3, #216	; 0xd8
 8012842:	4aa6      	ldr	r2, [pc, #664]	; (8012adc <createProblem+0x11c34>)
 8012844:	461c      	mov	r4, r3
 8012846:	4613      	mov	r3, r2
 8012848:	cb07      	ldmia	r3!, {r0, r1, r2}
 801284a:	6020      	str	r0, [r4, #0]
 801284c:	6061      	str	r1, [r4, #4]
 801284e:	60a2      	str	r2, [r4, #8]
 8012850:	881b      	ldrh	r3, [r3, #0]
 8012852:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8012854:	687b      	ldr	r3, [r7, #4]
 8012856:	33cc      	adds	r3, #204	; 0xcc
 8012858:	4aa1      	ldr	r2, [pc, #644]	; (8012ae0 <createProblem+0x11c38>)
 801285a:	8811      	ldrh	r1, [r2, #0]
 801285c:	7892      	ldrb	r2, [r2, #2]
 801285e:	8019      	strh	r1, [r3, #0]
 8012860:	709a      	strb	r2, [r3, #2]
			break;
 8012862:	f008 b867 	b.w	801a934 <createProblem+0x19a8c>
		case 590 :
			strcpy(p->name,"NEW");
 8012866:	687b      	ldr	r3, [r7, #4]
 8012868:	337c      	adds	r3, #124	; 0x7c
 801286a:	4a9e      	ldr	r2, [pc, #632]	; (8012ae4 <createProblem+0x11c3c>)
 801286c:	6810      	ldr	r0, [r2, #0]
 801286e:	6018      	str	r0, [r3, #0]
			p->moveSize = 14;
 8012870:	687b      	ldr	r3, [r7, #4]
 8012872:	220e      	movs	r2, #14
 8012874:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,G,I,H,G,H,I,H,H,I,I,I,J");
 8012876:	687b      	ldr	r3, [r7, #4]
 8012878:	3340      	adds	r3, #64	; 0x40
 801287a:	4a9b      	ldr	r2, [pc, #620]	; (8012ae8 <createProblem+0x11c40>)
 801287c:	461d      	mov	r5, r3
 801287e:	4614      	mov	r4, r2
 8012880:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012882:	6028      	str	r0, [r5, #0]
 8012884:	6069      	str	r1, [r5, #4]
 8012886:	60aa      	str	r2, [r5, #8]
 8012888:	60eb      	str	r3, [r5, #12]
 801288a:	cc07      	ldmia	r4!, {r0, r1, r2}
 801288c:	6128      	str	r0, [r5, #16]
 801288e:	6169      	str	r1, [r5, #20]
 8012890:	61aa      	str	r2, [r5, #24]
			strcpy(p->moveNumbers,"4,5,6,7,8,9,10,10,12,13,14,15,18,16");
 8012892:	687b      	ldr	r3, [r7, #4]
 8012894:	3304      	adds	r3, #4
 8012896:	4a95      	ldr	r2, [pc, #596]	; (8012aec <createProblem+0x11c44>)
 8012898:	4614      	mov	r4, r2
 801289a:	469c      	mov	ip, r3
 801289c:	f104 0e20 	add.w	lr, r4, #32
 80128a0:	4665      	mov	r5, ip
 80128a2:	4626      	mov	r6, r4
 80128a4:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80128a6:	6028      	str	r0, [r5, #0]
 80128a8:	6069      	str	r1, [r5, #4]
 80128aa:	60aa      	str	r2, [r5, #8]
 80128ac:	60eb      	str	r3, [r5, #12]
 80128ae:	3410      	adds	r4, #16
 80128b0:	f10c 0c10 	add.w	ip, ip, #16
 80128b4:	4574      	cmp	r4, lr
 80128b6:	d1f3      	bne.n	80128a0 <createProblem+0x119f8>
 80128b8:	4663      	mov	r3, ip
 80128ba:	4622      	mov	r2, r4
 80128bc:	6810      	ldr	r0, [r2, #0]
 80128be:	6018      	str	r0, [r3, #0]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,d,d,d,e,d");
 80128c0:	687b      	ldr	r3, [r7, #4]
 80128c2:	33d8      	adds	r3, #216	; 0xd8
 80128c4:	4a8a      	ldr	r2, [pc, #552]	; (8012af0 <createProblem+0x11c48>)
 80128c6:	461d      	mov	r5, r3
 80128c8:	4614      	mov	r4, r2
 80128ca:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80128cc:	6028      	str	r0, [r5, #0]
 80128ce:	6069      	str	r1, [r5, #4]
 80128d0:	60aa      	str	r2, [r5, #8]
 80128d2:	60eb      	str	r3, [r5, #12]
 80128d4:	cc07      	ldmia	r4!, {r0, r1, r2}
 80128d6:	6128      	str	r0, [r5, #16]
 80128d8:	6169      	str	r1, [r5, #20]
 80128da:	61aa      	str	r2, [r5, #24]
			strcpy(p->grade, "6B+");
 80128dc:	687b      	ldr	r3, [r7, #4]
 80128de:	33cc      	adds	r3, #204	; 0xcc
 80128e0:	4a84      	ldr	r2, [pc, #528]	; (8012af4 <createProblem+0x11c4c>)
 80128e2:	6810      	ldr	r0, [r2, #0]
 80128e4:	6018      	str	r0, [r3, #0]
			break;
 80128e6:	f008 b825 	b.w	801a934 <createProblem+0x19a8c>
		case 591 :
			strcpy(p->name,"I");
 80128ea:	687b      	ldr	r3, [r7, #4]
 80128ec:	337c      	adds	r3, #124	; 0x7c
 80128ee:	4982      	ldr	r1, [pc, #520]	; (8012af8 <createProblem+0x11c50>)
 80128f0:	461a      	mov	r2, r3
 80128f2:	460b      	mov	r3, r1
 80128f4:	881b      	ldrh	r3, [r3, #0]
 80128f6:	8013      	strh	r3, [r2, #0]
			p->moveSize = 14;
 80128f8:	687b      	ldr	r3, [r7, #4]
 80128fa:	220e      	movs	r2, #14
 80128fc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,J,G,G,J,J,I,I,E,H,E,D");
 80128fe:	687b      	ldr	r3, [r7, #4]
 8012900:	3340      	adds	r3, #64	; 0x40
 8012902:	4a7e      	ldr	r2, [pc, #504]	; (8012afc <createProblem+0x11c54>)
 8012904:	461d      	mov	r5, r3
 8012906:	4614      	mov	r4, r2
 8012908:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801290a:	6028      	str	r0, [r5, #0]
 801290c:	6069      	str	r1, [r5, #4]
 801290e:	60aa      	str	r2, [r5, #8]
 8012910:	60eb      	str	r3, [r5, #12]
 8012912:	cc07      	ldmia	r4!, {r0, r1, r2}
 8012914:	6128      	str	r0, [r5, #16]
 8012916:	6169      	str	r1, [r5, #20]
 8012918:	61aa      	str	r2, [r5, #24]
			strcpy(p->moveNumbers,"14,14,12,12,4,9,7,5,7,9,8,5,16,18");
 801291a:	687b      	ldr	r3, [r7, #4]
 801291c:	3304      	adds	r3, #4
 801291e:	4a78      	ldr	r2, [pc, #480]	; (8012b00 <createProblem+0x11c58>)
 8012920:	4614      	mov	r4, r2
 8012922:	469c      	mov	ip, r3
 8012924:	f104 0e20 	add.w	lr, r4, #32
 8012928:	4665      	mov	r5, ip
 801292a:	4626      	mov	r6, r4
 801292c:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 801292e:	6028      	str	r0, [r5, #0]
 8012930:	6069      	str	r1, [r5, #4]
 8012932:	60aa      	str	r2, [r5, #8]
 8012934:	60eb      	str	r3, [r5, #12]
 8012936:	3410      	adds	r4, #16
 8012938:	f10c 0c10 	add.w	ip, ip, #16
 801293c:	4574      	cmp	r4, lr
 801293e:	d1f3      	bne.n	8012928 <createProblem+0x11a80>
 8012940:	4662      	mov	r2, ip
 8012942:	4623      	mov	r3, r4
 8012944:	881b      	ldrh	r3, [r3, #0]
 8012946:	8013      	strh	r3, [r2, #0]
			strcpy(p->startFinish, "d,d,d,d,s,d,d,d,d,d,d,d,d,e");
 8012948:	687b      	ldr	r3, [r7, #4]
 801294a:	33d8      	adds	r3, #216	; 0xd8
 801294c:	4a6d      	ldr	r2, [pc, #436]	; (8012b04 <createProblem+0x11c5c>)
 801294e:	461d      	mov	r5, r3
 8012950:	4614      	mov	r4, r2
 8012952:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012954:	6028      	str	r0, [r5, #0]
 8012956:	6069      	str	r1, [r5, #4]
 8012958:	60aa      	str	r2, [r5, #8]
 801295a:	60eb      	str	r3, [r5, #12]
 801295c:	cc07      	ldmia	r4!, {r0, r1, r2}
 801295e:	6128      	str	r0, [r5, #16]
 8012960:	6169      	str	r1, [r5, #20]
 8012962:	61aa      	str	r2, [r5, #24]
			strcpy(p->grade, "6B+");
 8012964:	687b      	ldr	r3, [r7, #4]
 8012966:	33cc      	adds	r3, #204	; 0xcc
 8012968:	4a62      	ldr	r2, [pc, #392]	; (8012af4 <createProblem+0x11c4c>)
 801296a:	6810      	ldr	r0, [r2, #0]
 801296c:	6018      	str	r0, [r3, #0]
			break;
 801296e:	f007 bfe1 	b.w	801a934 <createProblem+0x19a8c>
		case 592 :
			strcpy(p->name,"III");
 8012972:	687b      	ldr	r3, [r7, #4]
 8012974:	337c      	adds	r3, #124	; 0x7c
 8012976:	4a64      	ldr	r2, [pc, #400]	; (8012b08 <createProblem+0x11c60>)
 8012978:	6810      	ldr	r0, [r2, #0]
 801297a:	6018      	str	r0, [r3, #0]
			p->moveSize = 14;
 801297c:	687b      	ldr	r3, [r7, #4]
 801297e:	220e      	movs	r2, #14
 8012980:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,D,G,E,C,B,C,H,H,H,K,J,J");
 8012982:	687b      	ldr	r3, [r7, #4]
 8012984:	3340      	adds	r3, #64	; 0x40
 8012986:	4a61      	ldr	r2, [pc, #388]	; (8012b0c <createProblem+0x11c64>)
 8012988:	461d      	mov	r5, r3
 801298a:	4614      	mov	r4, r2
 801298c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801298e:	6028      	str	r0, [r5, #0]
 8012990:	6069      	str	r1, [r5, #4]
 8012992:	60aa      	str	r2, [r5, #8]
 8012994:	60eb      	str	r3, [r5, #12]
 8012996:	cc07      	ldmia	r4!, {r0, r1, r2}
 8012998:	6128      	str	r0, [r5, #16]
 801299a:	6169      	str	r1, [r5, #20]
 801299c:	61aa      	str	r2, [r5, #24]
			strcpy(p->moveNumbers,"16,16,18,9,8,8,6,5,10,16,12,14,12,7");
 801299e:	687b      	ldr	r3, [r7, #4]
 80129a0:	3304      	adds	r3, #4
 80129a2:	4a5b      	ldr	r2, [pc, #364]	; (8012b10 <createProblem+0x11c68>)
 80129a4:	4614      	mov	r4, r2
 80129a6:	469c      	mov	ip, r3
 80129a8:	f104 0e20 	add.w	lr, r4, #32
 80129ac:	4665      	mov	r5, ip
 80129ae:	4626      	mov	r6, r4
 80129b0:	ce0f      	ldmia	r6!, {r0, r1, r2, r3}
 80129b2:	6028      	str	r0, [r5, #0]
 80129b4:	6069      	str	r1, [r5, #4]
 80129b6:	60aa      	str	r2, [r5, #8]
 80129b8:	60eb      	str	r3, [r5, #12]
 80129ba:	3410      	adds	r4, #16
 80129bc:	f10c 0c10 	add.w	ip, ip, #16
 80129c0:	4574      	cmp	r4, lr
 80129c2:	d1f3      	bne.n	80129ac <createProblem+0x11b04>
 80129c4:	4663      	mov	r3, ip
 80129c6:	4622      	mov	r2, r4
 80129c8:	6810      	ldr	r0, [r2, #0]
 80129ca:	6018      	str	r0, [r3, #0]
			strcpy(p->startFinish, "d,d,e,d,d,d,s,s,d,d,d,d,d,d");
 80129cc:	687b      	ldr	r3, [r7, #4]
 80129ce:	33d8      	adds	r3, #216	; 0xd8
 80129d0:	4a50      	ldr	r2, [pc, #320]	; (8012b14 <createProblem+0x11c6c>)
 80129d2:	461d      	mov	r5, r3
 80129d4:	4614      	mov	r4, r2
 80129d6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80129d8:	6028      	str	r0, [r5, #0]
 80129da:	6069      	str	r1, [r5, #4]
 80129dc:	60aa      	str	r2, [r5, #8]
 80129de:	60eb      	str	r3, [r5, #12]
 80129e0:	cc07      	ldmia	r4!, {r0, r1, r2}
 80129e2:	6128      	str	r0, [r5, #16]
 80129e4:	6169      	str	r1, [r5, #20]
 80129e6:	61aa      	str	r2, [r5, #24]
			strcpy(p->grade, "6B+");
 80129e8:	687b      	ldr	r3, [r7, #4]
 80129ea:	33cc      	adds	r3, #204	; 0xcc
 80129ec:	4a41      	ldr	r2, [pc, #260]	; (8012af4 <createProblem+0x11c4c>)
 80129ee:	6810      	ldr	r0, [r2, #0]
 80129f0:	6018      	str	r0, [r3, #0]
			break;
 80129f2:	f007 bf9f 	b.w	801a934 <createProblem+0x19a8c>
		case 593 :
			strcpy(p->name,"IV");
 80129f6:	687b      	ldr	r3, [r7, #4]
 80129f8:	337c      	adds	r3, #124	; 0x7c
 80129fa:	4a47      	ldr	r2, [pc, #284]	; (8012b18 <createProblem+0x11c70>)
 80129fc:	8811      	ldrh	r1, [r2, #0]
 80129fe:	7892      	ldrb	r2, [r2, #2]
 8012a00:	8019      	strh	r1, [r3, #0]
 8012a02:	709a      	strb	r2, [r3, #2]
			p->moveSize = 12;
 8012a04:	687b      	ldr	r3, [r7, #4]
 8012a06:	220c      	movs	r2, #12
 8012a08:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,C,E,E,A,A,B,A,D,C,J,C");
 8012a0a:	687b      	ldr	r3, [r7, #4]
 8012a0c:	3340      	adds	r3, #64	; 0x40
 8012a0e:	4a43      	ldr	r2, [pc, #268]	; (8012b1c <createProblem+0x11c74>)
 8012a10:	461d      	mov	r5, r3
 8012a12:	4614      	mov	r4, r2
 8012a14:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012a16:	6028      	str	r0, [r5, #0]
 8012a18:	6069      	str	r1, [r5, #4]
 8012a1a:	60aa      	str	r2, [r5, #8]
 8012a1c:	60eb      	str	r3, [r5, #12]
 8012a1e:	cc03      	ldmia	r4!, {r0, r1}
 8012a20:	6128      	str	r0, [r5, #16]
 8012a22:	6169      	str	r1, [r5, #20]
			strcpy(p->moveNumbers,"8,8,6,9,9,14,15,18,11,13,5,5");
 8012a24:	687b      	ldr	r3, [r7, #4]
 8012a26:	3304      	adds	r3, #4
 8012a28:	4a3d      	ldr	r2, [pc, #244]	; (8012b20 <createProblem+0x11c78>)
 8012a2a:	461d      	mov	r5, r3
 8012a2c:	4614      	mov	r4, r2
 8012a2e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012a30:	6028      	str	r0, [r5, #0]
 8012a32:	6069      	str	r1, [r5, #4]
 8012a34:	60aa      	str	r2, [r5, #8]
 8012a36:	60eb      	str	r3, [r5, #12]
 8012a38:	cc07      	ldmia	r4!, {r0, r1, r2}
 8012a3a:	6128      	str	r0, [r5, #16]
 8012a3c:	6169      	str	r1, [r5, #20]
 8012a3e:	61aa      	str	r2, [r5, #24]
 8012a40:	7823      	ldrb	r3, [r4, #0]
 8012a42:	772b      	strb	r3, [r5, #28]
			strcpy(p->startFinish, "d,d,s,d,d,d,d,e,d,d,s,d");
 8012a44:	687b      	ldr	r3, [r7, #4]
 8012a46:	33d8      	adds	r3, #216	; 0xd8
 8012a48:	4a36      	ldr	r2, [pc, #216]	; (8012b24 <createProblem+0x11c7c>)
 8012a4a:	461d      	mov	r5, r3
 8012a4c:	4614      	mov	r4, r2
 8012a4e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012a50:	6028      	str	r0, [r5, #0]
 8012a52:	6069      	str	r1, [r5, #4]
 8012a54:	60aa      	str	r2, [r5, #8]
 8012a56:	60eb      	str	r3, [r5, #12]
 8012a58:	cc03      	ldmia	r4!, {r0, r1}
 8012a5a:	6128      	str	r0, [r5, #16]
 8012a5c:	6169      	str	r1, [r5, #20]
			strcpy(p->grade, "6B+");
 8012a5e:	687b      	ldr	r3, [r7, #4]
 8012a60:	33cc      	adds	r3, #204	; 0xcc
 8012a62:	4a24      	ldr	r2, [pc, #144]	; (8012af4 <createProblem+0x11c4c>)
 8012a64:	6810      	ldr	r0, [r2, #0]
 8012a66:	6018      	str	r0, [r3, #0]
			break;
 8012a68:	f007 bf64 	b.w	801a934 <createProblem+0x19a8c>
		case 594 :
			strcpy(p->name,"DIAGO");
 8012a6c:	687b      	ldr	r3, [r7, #4]
 8012a6e:	337c      	adds	r3, #124	; 0x7c
 8012a70:	4a2d      	ldr	r2, [pc, #180]	; (8012b28 <createProblem+0x11c80>)
 8012a72:	6810      	ldr	r0, [r2, #0]
 8012a74:	6018      	str	r0, [r3, #0]
 8012a76:	8892      	ldrh	r2, [r2, #4]
 8012a78:	809a      	strh	r2, [r3, #4]
			p->moveSize = 8;
 8012a7a:	687b      	ldr	r3, [r7, #4]
 8012a7c:	2208      	movs	r2, #8
 8012a7e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,G,H,E,F,D,A");
 8012a80:	687b      	ldr	r3, [r7, #4]
 8012a82:	3340      	adds	r3, #64	; 0x40
 8012a84:	4a29      	ldr	r2, [pc, #164]	; (8012b2c <createProblem+0x11c84>)
 8012a86:	461c      	mov	r4, r3
 8012a88:	4615      	mov	r5, r2
 8012a8a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8012a8c:	6020      	str	r0, [r4, #0]
 8012a8e:	6061      	str	r1, [r4, #4]
 8012a90:	60a2      	str	r2, [r4, #8]
 8012a92:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,4,9,8,12,11,15,18");
 8012a94:	687b      	ldr	r3, [r7, #4]
 8012a96:	3304      	adds	r3, #4
 8012a98:	4a25      	ldr	r2, [pc, #148]	; (8012b30 <createProblem+0x11c88>)
 8012a9a:	461d      	mov	r5, r3
 8012a9c:	4614      	mov	r4, r2
 8012a9e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012aa0:	6028      	str	r0, [r5, #0]
 8012aa2:	6069      	str	r1, [r5, #4]
 8012aa4:	60aa      	str	r2, [r5, #8]
 8012aa6:	60eb      	str	r3, [r5, #12]
 8012aa8:	6820      	ldr	r0, [r4, #0]
 8012aaa:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8012aac:	687b      	ldr	r3, [r7, #4]
 8012aae:	33d8      	adds	r3, #216	; 0xd8
 8012ab0:	4a20      	ldr	r2, [pc, #128]	; (8012b34 <createProblem+0x11c8c>)
 8012ab2:	461c      	mov	r4, r3
 8012ab4:	4615      	mov	r5, r2
 8012ab6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8012ab8:	6020      	str	r0, [r4, #0]
 8012aba:	6061      	str	r1, [r4, #4]
 8012abc:	60a2      	str	r2, [r4, #8]
 8012abe:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7B+");
 8012ac0:	687b      	ldr	r3, [r7, #4]
 8012ac2:	33cc      	adds	r3, #204	; 0xcc
 8012ac4:	4a1c      	ldr	r2, [pc, #112]	; (8012b38 <createProblem+0x11c90>)
 8012ac6:	6810      	ldr	r0, [r2, #0]
 8012ac8:	6018      	str	r0, [r3, #0]
			break;
 8012aca:	f007 bf33 	b.w	801a934 <createProblem+0x19a8c>
 8012ace:	bf00      	nop
 8012ad0:	08026ce8 	.word	0x08026ce8
 8012ad4:	08026cf0 	.word	0x08026cf0
 8012ad8:	08026d00 	.word	0x08026d00
 8012adc:	08020820 	.word	0x08020820
 8012ae0:	080208f0 	.word	0x080208f0
 8012ae4:	08026d14 	.word	0x08026d14
 8012ae8:	08026d18 	.word	0x08026d18
 8012aec:	08026d34 	.word	0x08026d34
 8012af0:	08026d58 	.word	0x08026d58
 8012af4:	08020830 	.word	0x08020830
 8012af8:	08026d74 	.word	0x08026d74
 8012afc:	08026d78 	.word	0x08026d78
 8012b00:	08026d94 	.word	0x08026d94
 8012b04:	08026db8 	.word	0x08026db8
 8012b08:	08026dd4 	.word	0x08026dd4
 8012b0c:	08026dd8 	.word	0x08026dd8
 8012b10:	08026df4 	.word	0x08026df4
 8012b14:	08026e18 	.word	0x08026e18
 8012b18:	08026e34 	.word	0x08026e34
 8012b1c:	08026e38 	.word	0x08026e38
 8012b20:	08026e50 	.word	0x08026e50
 8012b24:	08026e70 	.word	0x08026e70
 8012b28:	08026e88 	.word	0x08026e88
 8012b2c:	08026e90 	.word	0x08026e90
 8012b30:	08026ea0 	.word	0x08026ea0
 8012b34:	08020a4c 	.word	0x08020a4c
 8012b38:	08020dc8 	.word	0x08020dc8
		case 595 :
			strcpy(p->name,"LAST PEA");
 8012b3c:	687b      	ldr	r3, [r7, #4]
 8012b3e:	337c      	adds	r3, #124	; 0x7c
 8012b40:	49be      	ldr	r1, [pc, #760]	; (8012e3c <createProblem+0x11f94>)
 8012b42:	461a      	mov	r2, r3
 8012b44:	460b      	mov	r3, r1
 8012b46:	cb03      	ldmia	r3!, {r0, r1}
 8012b48:	6010      	str	r0, [r2, #0]
 8012b4a:	6051      	str	r1, [r2, #4]
 8012b4c:	781b      	ldrb	r3, [r3, #0]
 8012b4e:	7213      	strb	r3, [r2, #8]
			p->moveSize = 9;
 8012b50:	687b      	ldr	r3, [r7, #4]
 8012b52:	2209      	movs	r2, #9
 8012b54:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,B,E,B,E,D,I,E,I");
 8012b56:	687b      	ldr	r3, [r7, #4]
 8012b58:	3340      	adds	r3, #64	; 0x40
 8012b5a:	4ab9      	ldr	r2, [pc, #740]	; (8012e40 <createProblem+0x11f98>)
 8012b5c:	461d      	mov	r5, r3
 8012b5e:	4614      	mov	r4, r2
 8012b60:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012b62:	6028      	str	r0, [r5, #0]
 8012b64:	6069      	str	r1, [r5, #4]
 8012b66:	60aa      	str	r2, [r5, #8]
 8012b68:	60eb      	str	r3, [r5, #12]
 8012b6a:	8823      	ldrh	r3, [r4, #0]
 8012b6c:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,6,8,10,12,11,14,16,18");
 8012b6e:	687b      	ldr	r3, [r7, #4]
 8012b70:	3304      	adds	r3, #4
 8012b72:	4ab4      	ldr	r2, [pc, #720]	; (8012e44 <createProblem+0x11f9c>)
 8012b74:	461d      	mov	r5, r3
 8012b76:	4614      	mov	r4, r2
 8012b78:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012b7a:	6028      	str	r0, [r5, #0]
 8012b7c:	6069      	str	r1, [r5, #4]
 8012b7e:	60aa      	str	r2, [r5, #8]
 8012b80:	60eb      	str	r3, [r5, #12]
 8012b82:	cc03      	ldmia	r4!, {r0, r1}
 8012b84:	6128      	str	r0, [r5, #16]
 8012b86:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8012b88:	687b      	ldr	r3, [r7, #4]
 8012b8a:	33d8      	adds	r3, #216	; 0xd8
 8012b8c:	4aae      	ldr	r2, [pc, #696]	; (8012e48 <createProblem+0x11fa0>)
 8012b8e:	461d      	mov	r5, r3
 8012b90:	4614      	mov	r4, r2
 8012b92:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012b94:	6028      	str	r0, [r5, #0]
 8012b96:	6069      	str	r1, [r5, #4]
 8012b98:	60aa      	str	r2, [r5, #8]
 8012b9a:	60eb      	str	r3, [r5, #12]
 8012b9c:	8823      	ldrh	r3, [r4, #0]
 8012b9e:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "7A");
 8012ba0:	687b      	ldr	r3, [r7, #4]
 8012ba2:	33cc      	adds	r3, #204	; 0xcc
 8012ba4:	4aa9      	ldr	r2, [pc, #676]	; (8012e4c <createProblem+0x11fa4>)
 8012ba6:	8811      	ldrh	r1, [r2, #0]
 8012ba8:	7892      	ldrb	r2, [r2, #2]
 8012baa:	8019      	strh	r1, [r3, #0]
 8012bac:	709a      	strb	r2, [r3, #2]
			break;
 8012bae:	f007 bec1 	b.w	801a934 <createProblem+0x19a8c>
		case 596 :
			strcpy(p->name,"SQUASHED PEAS");
 8012bb2:	687b      	ldr	r3, [r7, #4]
 8012bb4:	337c      	adds	r3, #124	; 0x7c
 8012bb6:	4aa6      	ldr	r2, [pc, #664]	; (8012e50 <createProblem+0x11fa8>)
 8012bb8:	461c      	mov	r4, r3
 8012bba:	4613      	mov	r3, r2
 8012bbc:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012bbe:	6020      	str	r0, [r4, #0]
 8012bc0:	6061      	str	r1, [r4, #4]
 8012bc2:	60a2      	str	r2, [r4, #8]
 8012bc4:	881b      	ldrh	r3, [r3, #0]
 8012bc6:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 8;
 8012bc8:	687b      	ldr	r3, [r7, #4]
 8012bca:	2208      	movs	r2, #8
 8012bcc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,I,H,I,E,G,D");
 8012bce:	687b      	ldr	r3, [r7, #4]
 8012bd0:	3340      	adds	r3, #64	; 0x40
 8012bd2:	4aa0      	ldr	r2, [pc, #640]	; (8012e54 <createProblem+0x11fac>)
 8012bd4:	461c      	mov	r4, r3
 8012bd6:	4615      	mov	r5, r2
 8012bd8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8012bda:	6020      	str	r0, [r4, #0]
 8012bdc:	6061      	str	r1, [r4, #4]
 8012bde:	60a2      	str	r2, [r4, #8]
 8012be0:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,10,12,14,14,17,18");
 8012be2:	687b      	ldr	r3, [r7, #4]
 8012be4:	3304      	adds	r3, #4
 8012be6:	4a9c      	ldr	r2, [pc, #624]	; (8012e58 <createProblem+0x11fb0>)
 8012be8:	461d      	mov	r5, r3
 8012bea:	4614      	mov	r4, r2
 8012bec:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012bee:	6028      	str	r0, [r5, #0]
 8012bf0:	6069      	str	r1, [r5, #4]
 8012bf2:	60aa      	str	r2, [r5, #8]
 8012bf4:	60eb      	str	r3, [r5, #12]
 8012bf6:	6820      	ldr	r0, [r4, #0]
 8012bf8:	6128      	str	r0, [r5, #16]
 8012bfa:	88a3      	ldrh	r3, [r4, #4]
 8012bfc:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8012bfe:	687b      	ldr	r3, [r7, #4]
 8012c00:	33d8      	adds	r3, #216	; 0xd8
 8012c02:	4a96      	ldr	r2, [pc, #600]	; (8012e5c <createProblem+0x11fb4>)
 8012c04:	461c      	mov	r4, r3
 8012c06:	4615      	mov	r5, r2
 8012c08:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8012c0a:	6020      	str	r0, [r4, #0]
 8012c0c:	6061      	str	r1, [r4, #4]
 8012c0e:	60a2      	str	r2, [r4, #8]
 8012c10:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8012c12:	687b      	ldr	r3, [r7, #4]
 8012c14:	33cc      	adds	r3, #204	; 0xcc
 8012c16:	4a92      	ldr	r2, [pc, #584]	; (8012e60 <createProblem+0x11fb8>)
 8012c18:	6810      	ldr	r0, [r2, #0]
 8012c1a:	6018      	str	r0, [r3, #0]
			break;
 8012c1c:	f007 be8a 	b.w	801a934 <createProblem+0x19a8c>
		case 597 :
			strcpy(p->name,"ROLLING PEAS");
 8012c20:	687b      	ldr	r3, [r7, #4]
 8012c22:	337c      	adds	r3, #124	; 0x7c
 8012c24:	4a8f      	ldr	r2, [pc, #572]	; (8012e64 <createProblem+0x11fbc>)
 8012c26:	461c      	mov	r4, r3
 8012c28:	4613      	mov	r3, r2
 8012c2a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012c2c:	6020      	str	r0, [r4, #0]
 8012c2e:	6061      	str	r1, [r4, #4]
 8012c30:	60a2      	str	r2, [r4, #8]
 8012c32:	781b      	ldrb	r3, [r3, #0]
 8012c34:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 8012c36:	687b      	ldr	r3, [r7, #4]
 8012c38:	2206      	movs	r2, #6
 8012c3a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,C,D,D");
 8012c3c:	687b      	ldr	r3, [r7, #4]
 8012c3e:	3340      	adds	r3, #64	; 0x40
 8012c40:	4a89      	ldr	r2, [pc, #548]	; (8012e68 <createProblem+0x11fc0>)
 8012c42:	461c      	mov	r4, r3
 8012c44:	4613      	mov	r3, r2
 8012c46:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012c48:	6020      	str	r0, [r4, #0]
 8012c4a:	6061      	str	r1, [r4, #4]
 8012c4c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,10,13,15,18");
 8012c4e:	687b      	ldr	r3, [r7, #4]
 8012c50:	3304      	adds	r3, #4
 8012c52:	4a86      	ldr	r2, [pc, #536]	; (8012e6c <createProblem+0x11fc4>)
 8012c54:	461c      	mov	r4, r3
 8012c56:	4615      	mov	r5, r2
 8012c58:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8012c5a:	6020      	str	r0, [r4, #0]
 8012c5c:	6061      	str	r1, [r4, #4]
 8012c5e:	60a2      	str	r2, [r4, #8]
 8012c60:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8012c62:	687b      	ldr	r3, [r7, #4]
 8012c64:	33d8      	adds	r3, #216	; 0xd8
 8012c66:	4a82      	ldr	r2, [pc, #520]	; (8012e70 <createProblem+0x11fc8>)
 8012c68:	461c      	mov	r4, r3
 8012c6a:	4613      	mov	r3, r2
 8012c6c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012c6e:	6020      	str	r0, [r4, #0]
 8012c70:	6061      	str	r1, [r4, #4]
 8012c72:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 8012c74:	687b      	ldr	r3, [r7, #4]
 8012c76:	33cc      	adds	r3, #204	; 0xcc
 8012c78:	4a7e      	ldr	r2, [pc, #504]	; (8012e74 <createProblem+0x11fcc>)
 8012c7a:	8811      	ldrh	r1, [r2, #0]
 8012c7c:	7892      	ldrb	r2, [r2, #2]
 8012c7e:	8019      	strh	r1, [r3, #0]
 8012c80:	709a      	strb	r2, [r3, #2]
			break;
 8012c82:	f007 be57 	b.w	801a934 <createProblem+0x19a8c>
		case 598 :
			strcpy(p->name,"BLACK 2");
 8012c86:	687b      	ldr	r3, [r7, #4]
 8012c88:	337c      	adds	r3, #124	; 0x7c
 8012c8a:	497b      	ldr	r1, [pc, #492]	; (8012e78 <createProblem+0x11fd0>)
 8012c8c:	461a      	mov	r2, r3
 8012c8e:	460b      	mov	r3, r1
 8012c90:	cb03      	ldmia	r3!, {r0, r1}
 8012c92:	6010      	str	r0, [r2, #0]
 8012c94:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 8012c96:	687b      	ldr	r3, [r7, #4]
 8012c98:	2207      	movs	r2, #7
 8012c9a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,G,H,E,G,D");
 8012c9c:	687b      	ldr	r3, [r7, #4]
 8012c9e:	3340      	adds	r3, #64	; 0x40
 8012ca0:	4a76      	ldr	r2, [pc, #472]	; (8012e7c <createProblem+0x11fd4>)
 8012ca2:	461c      	mov	r4, r3
 8012ca4:	4613      	mov	r3, r2
 8012ca6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012ca8:	6020      	str	r0, [r4, #0]
 8012caa:	6061      	str	r1, [r4, #4]
 8012cac:	60a2      	str	r2, [r4, #8]
 8012cae:	881b      	ldrh	r3, [r3, #0]
 8012cb0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,10,13,14,17,18");
 8012cb2:	687b      	ldr	r3, [r7, #4]
 8012cb4:	3304      	adds	r3, #4
 8012cb6:	4a72      	ldr	r2, [pc, #456]	; (8012e80 <createProblem+0x11fd8>)
 8012cb8:	461d      	mov	r5, r3
 8012cba:	4614      	mov	r4, r2
 8012cbc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012cbe:	6028      	str	r0, [r5, #0]
 8012cc0:	6069      	str	r1, [r5, #4]
 8012cc2:	60aa      	str	r2, [r5, #8]
 8012cc4:	60eb      	str	r3, [r5, #12]
 8012cc6:	8823      	ldrh	r3, [r4, #0]
 8012cc8:	78a2      	ldrb	r2, [r4, #2]
 8012cca:	822b      	strh	r3, [r5, #16]
 8012ccc:	4613      	mov	r3, r2
 8012cce:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8012cd0:	687b      	ldr	r3, [r7, #4]
 8012cd2:	33d8      	adds	r3, #216	; 0xd8
 8012cd4:	4a6b      	ldr	r2, [pc, #428]	; (8012e84 <createProblem+0x11fdc>)
 8012cd6:	461c      	mov	r4, r3
 8012cd8:	4613      	mov	r3, r2
 8012cda:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012cdc:	6020      	str	r0, [r4, #0]
 8012cde:	6061      	str	r1, [r4, #4]
 8012ce0:	60a2      	str	r2, [r4, #8]
 8012ce2:	881b      	ldrh	r3, [r3, #0]
 8012ce4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8012ce6:	687b      	ldr	r3, [r7, #4]
 8012ce8:	33cc      	adds	r3, #204	; 0xcc
 8012cea:	4a5d      	ldr	r2, [pc, #372]	; (8012e60 <createProblem+0x11fb8>)
 8012cec:	6810      	ldr	r0, [r2, #0]
 8012cee:	6018      	str	r0, [r3, #0]
			break;
 8012cf0:	f007 be20 	b.w	801a934 <createProblem+0x19a8c>
		case 599 :
			strcpy(p->name,"BROKEN RECORD");
 8012cf4:	687b      	ldr	r3, [r7, #4]
 8012cf6:	337c      	adds	r3, #124	; 0x7c
 8012cf8:	4a63      	ldr	r2, [pc, #396]	; (8012e88 <createProblem+0x11fe0>)
 8012cfa:	461c      	mov	r4, r3
 8012cfc:	4613      	mov	r3, r2
 8012cfe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012d00:	6020      	str	r0, [r4, #0]
 8012d02:	6061      	str	r1, [r4, #4]
 8012d04:	60a2      	str	r2, [r4, #8]
 8012d06:	881b      	ldrh	r3, [r3, #0]
 8012d08:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 8012d0a:	687b      	ldr	r3, [r7, #4]
 8012d0c:	2207      	movs	r2, #7
 8012d0e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,E,A,D,A");
 8012d10:	687b      	ldr	r3, [r7, #4]
 8012d12:	3340      	adds	r3, #64	; 0x40
 8012d14:	4a5d      	ldr	r2, [pc, #372]	; (8012e8c <createProblem+0x11fe4>)
 8012d16:	461c      	mov	r4, r3
 8012d18:	4613      	mov	r3, r2
 8012d1a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012d1c:	6020      	str	r0, [r4, #0]
 8012d1e:	6061      	str	r1, [r4, #4]
 8012d20:	60a2      	str	r2, [r4, #8]
 8012d22:	881b      	ldrh	r3, [r3, #0]
 8012d24:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,8,12,14,15,18");
 8012d26:	687b      	ldr	r3, [r7, #4]
 8012d28:	3304      	adds	r3, #4
 8012d2a:	4a59      	ldr	r2, [pc, #356]	; (8012e90 <createProblem+0x11fe8>)
 8012d2c:	461d      	mov	r5, r3
 8012d2e:	4614      	mov	r4, r2
 8012d30:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012d32:	6028      	str	r0, [r5, #0]
 8012d34:	6069      	str	r1, [r5, #4]
 8012d36:	60aa      	str	r2, [r5, #8]
 8012d38:	60eb      	str	r3, [r5, #12]
 8012d3a:	8823      	ldrh	r3, [r4, #0]
 8012d3c:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8012d3e:	687b      	ldr	r3, [r7, #4]
 8012d40:	33d8      	adds	r3, #216	; 0xd8
 8012d42:	4a50      	ldr	r2, [pc, #320]	; (8012e84 <createProblem+0x11fdc>)
 8012d44:	461c      	mov	r4, r3
 8012d46:	4613      	mov	r3, r2
 8012d48:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012d4a:	6020      	str	r0, [r4, #0]
 8012d4c:	6061      	str	r1, [r4, #4]
 8012d4e:	60a2      	str	r2, [r4, #8]
 8012d50:	881b      	ldrh	r3, [r3, #0]
 8012d52:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8012d54:	687b      	ldr	r3, [r7, #4]
 8012d56:	33cc      	adds	r3, #204	; 0xcc
 8012d58:	4a46      	ldr	r2, [pc, #280]	; (8012e74 <createProblem+0x11fcc>)
 8012d5a:	8811      	ldrh	r1, [r2, #0]
 8012d5c:	7892      	ldrb	r2, [r2, #2]
 8012d5e:	8019      	strh	r1, [r3, #0]
 8012d60:	709a      	strb	r2, [r3, #2]
			break;
 8012d62:	f007 bde7 	b.w	801a934 <createProblem+0x19a8c>
		case 6 :
			strcpy(p->name,"PROBLEM 19");
 8012d66:	687b      	ldr	r3, [r7, #4]
 8012d68:	337c      	adds	r3, #124	; 0x7c
 8012d6a:	494a      	ldr	r1, [pc, #296]	; (8012e94 <createProblem+0x11fec>)
 8012d6c:	461a      	mov	r2, r3
 8012d6e:	460b      	mov	r3, r1
 8012d70:	cb03      	ldmia	r3!, {r0, r1}
 8012d72:	6010      	str	r0, [r2, #0]
 8012d74:	6051      	str	r1, [r2, #4]
 8012d76:	8819      	ldrh	r1, [r3, #0]
 8012d78:	789b      	ldrb	r3, [r3, #2]
 8012d7a:	8111      	strh	r1, [r2, #8]
 8012d7c:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 8012d7e:	687b      	ldr	r3, [r7, #4]
 8012d80:	2207      	movs	r2, #7
 8012d82:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,D,E,F,G,H,A");
 8012d84:	687b      	ldr	r3, [r7, #4]
 8012d86:	3340      	adds	r3, #64	; 0x40
 8012d88:	4a43      	ldr	r2, [pc, #268]	; (8012e98 <createProblem+0x11ff0>)
 8012d8a:	461c      	mov	r4, r3
 8012d8c:	4613      	mov	r3, r2
 8012d8e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012d90:	6020      	str	r0, [r4, #0]
 8012d92:	6061      	str	r1, [r4, #4]
 8012d94:	60a2      	str	r2, [r4, #8]
 8012d96:	881b      	ldrh	r3, [r3, #0]
 8012d98:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,15,12,11,9,8,18");
 8012d9a:	687b      	ldr	r3, [r7, #4]
 8012d9c:	3304      	adds	r3, #4
 8012d9e:	4a3f      	ldr	r2, [pc, #252]	; (8012e9c <createProblem+0x11ff4>)
 8012da0:	461d      	mov	r5, r3
 8012da2:	4614      	mov	r4, r2
 8012da4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012da6:	6028      	str	r0, [r5, #0]
 8012da8:	6069      	str	r1, [r5, #4]
 8012daa:	60aa      	str	r2, [r5, #8]
 8012dac:	60eb      	str	r3, [r5, #12]
 8012dae:	8823      	ldrh	r3, [r4, #0]
 8012db0:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8012db2:	687b      	ldr	r3, [r7, #4]
 8012db4:	33d8      	adds	r3, #216	; 0xd8
 8012db6:	4a33      	ldr	r2, [pc, #204]	; (8012e84 <createProblem+0x11fdc>)
 8012db8:	461c      	mov	r4, r3
 8012dba:	4613      	mov	r3, r2
 8012dbc:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012dbe:	6020      	str	r0, [r4, #0]
 8012dc0:	6061      	str	r1, [r4, #4]
 8012dc2:	60a2      	str	r2, [r4, #8]
 8012dc4:	881b      	ldrh	r3, [r3, #0]
 8012dc6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8012dc8:	687b      	ldr	r3, [r7, #4]
 8012dca:	33cc      	adds	r3, #204	; 0xcc
 8012dcc:	4a29      	ldr	r2, [pc, #164]	; (8012e74 <createProblem+0x11fcc>)
 8012dce:	8811      	ldrh	r1, [r2, #0]
 8012dd0:	7892      	ldrb	r2, [r2, #2]
 8012dd2:	8019      	strh	r1, [r3, #0]
 8012dd4:	709a      	strb	r2, [r3, #2]
			break;
 8012dd6:	f007 bdad 	b.w	801a934 <createProblem+0x19a8c>
		case 60 :
			strcpy(p->name,"NANO");
 8012dda:	687b      	ldr	r3, [r7, #4]
 8012ddc:	337c      	adds	r3, #124	; 0x7c
 8012dde:	4a30      	ldr	r2, [pc, #192]	; (8012ea0 <createProblem+0x11ff8>)
 8012de0:	6810      	ldr	r0, [r2, #0]
 8012de2:	6018      	str	r0, [r3, #0]
 8012de4:	7912      	ldrb	r2, [r2, #4]
 8012de6:	711a      	strb	r2, [r3, #4]
			p->moveSize = 5;
 8012de8:	687b      	ldr	r3, [r7, #4]
 8012dea:	2205      	movs	r2, #5
 8012dec:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,I,H,K,I");
 8012dee:	687b      	ldr	r3, [r7, #4]
 8012df0:	3340      	adds	r3, #64	; 0x40
 8012df2:	492c      	ldr	r1, [pc, #176]	; (8012ea4 <createProblem+0x11ffc>)
 8012df4:	461a      	mov	r2, r3
 8012df6:	460b      	mov	r3, r1
 8012df8:	cb03      	ldmia	r3!, {r0, r1}
 8012dfa:	6010      	str	r0, [r2, #0]
 8012dfc:	6051      	str	r1, [r2, #4]
 8012dfe:	881b      	ldrh	r3, [r3, #0]
 8012e00:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,10,12,14,18");
 8012e02:	687b      	ldr	r3, [r7, #4]
 8012e04:	3304      	adds	r3, #4
 8012e06:	4a28      	ldr	r2, [pc, #160]	; (8012ea8 <createProblem+0x12000>)
 8012e08:	461c      	mov	r4, r3
 8012e0a:	4613      	mov	r3, r2
 8012e0c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012e0e:	6020      	str	r0, [r4, #0]
 8012e10:	6061      	str	r1, [r4, #4]
 8012e12:	60a2      	str	r2, [r4, #8]
 8012e14:	881b      	ldrh	r3, [r3, #0]
 8012e16:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8012e18:	687b      	ldr	r3, [r7, #4]
 8012e1a:	33d8      	adds	r3, #216	; 0xd8
 8012e1c:	4923      	ldr	r1, [pc, #140]	; (8012eac <createProblem+0x12004>)
 8012e1e:	461a      	mov	r2, r3
 8012e20:	460b      	mov	r3, r1
 8012e22:	cb03      	ldmia	r3!, {r0, r1}
 8012e24:	6010      	str	r0, [r2, #0]
 8012e26:	6051      	str	r1, [r2, #4]
 8012e28:	881b      	ldrh	r3, [r3, #0]
 8012e2a:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 8012e2c:	687b      	ldr	r3, [r7, #4]
 8012e2e:	33cc      	adds	r3, #204	; 0xcc
 8012e30:	4a1f      	ldr	r2, [pc, #124]	; (8012eb0 <createProblem+0x12008>)
 8012e32:	6810      	ldr	r0, [r2, #0]
 8012e34:	6018      	str	r0, [r3, #0]
			break;
 8012e36:	f007 bd7d 	b.w	801a934 <createProblem+0x19a8c>
 8012e3a:	bf00      	nop
 8012e3c:	08026eb4 	.word	0x08026eb4
 8012e40:	08026ec0 	.word	0x08026ec0
 8012e44:	08026ed4 	.word	0x08026ed4
 8012e48:	08020dfc 	.word	0x08020dfc
 8012e4c:	08020874 	.word	0x08020874
 8012e50:	08026eec 	.word	0x08026eec
 8012e54:	08026efc 	.word	0x08026efc
 8012e58:	08026f0c 	.word	0x08026f0c
 8012e5c:	08020a4c 	.word	0x08020a4c
 8012e60:	08020928 	.word	0x08020928
 8012e64:	08026f24 	.word	0x08026f24
 8012e68:	08025614 	.word	0x08025614
 8012e6c:	08026f34 	.word	0x08026f34
 8012e70:	08020e90 	.word	0x08020e90
 8012e74:	080208f0 	.word	0x080208f0
 8012e78:	08026f44 	.word	0x08026f44
 8012e7c:	08026f4c 	.word	0x08026f4c
 8012e80:	08020a00 	.word	0x08020a00
 8012e84:	08020a14 	.word	0x08020a14
 8012e88:	08026f5c 	.word	0x08026f5c
 8012e8c:	08026f6c 	.word	0x08026f6c
 8012e90:	08026f7c 	.word	0x08026f7c
 8012e94:	08026f90 	.word	0x08026f90
 8012e98:	08026f9c 	.word	0x08026f9c
 8012e9c:	08026fac 	.word	0x08026fac
 8012ea0:	08026fc0 	.word	0x08026fc0
 8012ea4:	08026fc8 	.word	0x08026fc8
 8012ea8:	08026fd4 	.word	0x08026fd4
 8012eac:	080208a0 	.word	0x080208a0
 8012eb0:	080209a4 	.word	0x080209a4
		case 600 :
			strcpy(p->name,"MBT1RIGHT");
 8012eb4:	687b      	ldr	r3, [r7, #4]
 8012eb6:	337c      	adds	r3, #124	; 0x7c
 8012eb8:	49b5      	ldr	r1, [pc, #724]	; (8013190 <createProblem+0x122e8>)
 8012eba:	461a      	mov	r2, r3
 8012ebc:	460b      	mov	r3, r1
 8012ebe:	cb03      	ldmia	r3!, {r0, r1}
 8012ec0:	6010      	str	r0, [r2, #0]
 8012ec2:	6051      	str	r1, [r2, #4]
 8012ec4:	881b      	ldrh	r3, [r3, #0]
 8012ec6:	8113      	strh	r3, [r2, #8]
			p->moveSize = 5;
 8012ec8:	687b      	ldr	r3, [r7, #4]
 8012eca:	2205      	movs	r2, #5
 8012ecc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,G,D,I");
 8012ece:	687b      	ldr	r3, [r7, #4]
 8012ed0:	3340      	adds	r3, #64	; 0x40
 8012ed2:	49b0      	ldr	r1, [pc, #704]	; (8013194 <createProblem+0x122ec>)
 8012ed4:	461a      	mov	r2, r3
 8012ed6:	460b      	mov	r3, r1
 8012ed8:	cb03      	ldmia	r3!, {r0, r1}
 8012eda:	6010      	str	r0, [r2, #0]
 8012edc:	6051      	str	r1, [r2, #4]
 8012ede:	881b      	ldrh	r3, [r3, #0]
 8012ee0:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,9,14,11,18");
 8012ee2:	687b      	ldr	r3, [r7, #4]
 8012ee4:	3304      	adds	r3, #4
 8012ee6:	4aac      	ldr	r2, [pc, #688]	; (8013198 <createProblem+0x122f0>)
 8012ee8:	461c      	mov	r4, r3
 8012eea:	4613      	mov	r3, r2
 8012eec:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012eee:	6020      	str	r0, [r4, #0]
 8012ef0:	6061      	str	r1, [r4, #4]
 8012ef2:	60a2      	str	r2, [r4, #8]
 8012ef4:	781b      	ldrb	r3, [r3, #0]
 8012ef6:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8012ef8:	687b      	ldr	r3, [r7, #4]
 8012efa:	33d8      	adds	r3, #216	; 0xd8
 8012efc:	49a7      	ldr	r1, [pc, #668]	; (801319c <createProblem+0x122f4>)
 8012efe:	461a      	mov	r2, r3
 8012f00:	460b      	mov	r3, r1
 8012f02:	cb03      	ldmia	r3!, {r0, r1}
 8012f04:	6010      	str	r0, [r2, #0]
 8012f06:	6051      	str	r1, [r2, #4]
 8012f08:	881b      	ldrh	r3, [r3, #0]
 8012f0a:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C+");
 8012f0c:	687b      	ldr	r3, [r7, #4]
 8012f0e:	33cc      	adds	r3, #204	; 0xcc
 8012f10:	4aa3      	ldr	r2, [pc, #652]	; (80131a0 <createProblem+0x122f8>)
 8012f12:	6810      	ldr	r0, [r2, #0]
 8012f14:	6018      	str	r0, [r3, #0]
			break;
 8012f16:	f007 bd0d 	b.w	801a934 <createProblem+0x19a8c>
		case 601 :
			strcpy(p->name,"BLACK #268162639");
 8012f1a:	687b      	ldr	r3, [r7, #4]
 8012f1c:	337c      	adds	r3, #124	; 0x7c
 8012f1e:	4aa1      	ldr	r2, [pc, #644]	; (80131a4 <createProblem+0x122fc>)
 8012f20:	461d      	mov	r5, r3
 8012f22:	4614      	mov	r4, r2
 8012f24:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012f26:	6028      	str	r0, [r5, #0]
 8012f28:	6069      	str	r1, [r5, #4]
 8012f2a:	60aa      	str	r2, [r5, #8]
 8012f2c:	60eb      	str	r3, [r5, #12]
 8012f2e:	7823      	ldrb	r3, [r4, #0]
 8012f30:	742b      	strb	r3, [r5, #16]
			p->moveSize = 5;
 8012f32:	687b      	ldr	r3, [r7, #4]
 8012f34:	2205      	movs	r2, #5
 8012f36:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,I,H,J,D");
 8012f38:	687b      	ldr	r3, [r7, #4]
 8012f3a:	3340      	adds	r3, #64	; 0x40
 8012f3c:	499a      	ldr	r1, [pc, #616]	; (80131a8 <createProblem+0x12300>)
 8012f3e:	461a      	mov	r2, r3
 8012f40:	460b      	mov	r3, r1
 8012f42:	cb03      	ldmia	r3!, {r0, r1}
 8012f44:	6010      	str	r0, [r2, #0]
 8012f46:	6051      	str	r1, [r2, #4]
 8012f48:	881b      	ldrh	r3, [r3, #0]
 8012f4a:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,10,12,16,18");
 8012f4c:	687b      	ldr	r3, [r7, #4]
 8012f4e:	3304      	adds	r3, #4
 8012f50:	4a96      	ldr	r2, [pc, #600]	; (80131ac <createProblem+0x12304>)
 8012f52:	461c      	mov	r4, r3
 8012f54:	4613      	mov	r3, r2
 8012f56:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012f58:	6020      	str	r0, [r4, #0]
 8012f5a:	6061      	str	r1, [r4, #4]
 8012f5c:	60a2      	str	r2, [r4, #8]
 8012f5e:	881b      	ldrh	r3, [r3, #0]
 8012f60:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8012f62:	687b      	ldr	r3, [r7, #4]
 8012f64:	33d8      	adds	r3, #216	; 0xd8
 8012f66:	498d      	ldr	r1, [pc, #564]	; (801319c <createProblem+0x122f4>)
 8012f68:	461a      	mov	r2, r3
 8012f6a:	460b      	mov	r3, r1
 8012f6c:	cb03      	ldmia	r3!, {r0, r1}
 8012f6e:	6010      	str	r0, [r2, #0]
 8012f70:	6051      	str	r1, [r2, #4]
 8012f72:	881b      	ldrh	r3, [r3, #0]
 8012f74:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 8012f76:	687b      	ldr	r3, [r7, #4]
 8012f78:	33cc      	adds	r3, #204	; 0xcc
 8012f7a:	4a8d      	ldr	r2, [pc, #564]	; (80131b0 <createProblem+0x12308>)
 8012f7c:	6810      	ldr	r0, [r2, #0]
 8012f7e:	6018      	str	r0, [r3, #0]
			break;
 8012f80:	f007 bcd8 	b.w	801a934 <createProblem+0x19a8c>
		case 602 :
			strcpy(p->name,"DROPPIN SOAP");
 8012f84:	687b      	ldr	r3, [r7, #4]
 8012f86:	337c      	adds	r3, #124	; 0x7c
 8012f88:	4a8a      	ldr	r2, [pc, #552]	; (80131b4 <createProblem+0x1230c>)
 8012f8a:	461c      	mov	r4, r3
 8012f8c:	4613      	mov	r3, r2
 8012f8e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012f90:	6020      	str	r0, [r4, #0]
 8012f92:	6061      	str	r1, [r4, #4]
 8012f94:	60a2      	str	r2, [r4, #8]
 8012f96:	781b      	ldrb	r3, [r3, #0]
 8012f98:	7323      	strb	r3, [r4, #12]
			p->moveSize = 5;
 8012f9a:	687b      	ldr	r3, [r7, #4]
 8012f9c:	2205      	movs	r2, #5
 8012f9e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,E,H,I");
 8012fa0:	687b      	ldr	r3, [r7, #4]
 8012fa2:	3340      	adds	r3, #64	; 0x40
 8012fa4:	4984      	ldr	r1, [pc, #528]	; (80131b8 <createProblem+0x12310>)
 8012fa6:	461a      	mov	r2, r3
 8012fa8:	460b      	mov	r3, r1
 8012faa:	cb03      	ldmia	r3!, {r0, r1}
 8012fac:	6010      	str	r0, [r2, #0]
 8012fae:	6051      	str	r1, [r2, #4]
 8012fb0:	881b      	ldrh	r3, [r3, #0]
 8012fb2:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,9,14,12,18");
 8012fb4:	687b      	ldr	r3, [r7, #4]
 8012fb6:	3304      	adds	r3, #4
 8012fb8:	4a80      	ldr	r2, [pc, #512]	; (80131bc <createProblem+0x12314>)
 8012fba:	461c      	mov	r4, r3
 8012fbc:	4613      	mov	r3, r2
 8012fbe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8012fc0:	6020      	str	r0, [r4, #0]
 8012fc2:	6061      	str	r1, [r4, #4]
 8012fc4:	60a2      	str	r2, [r4, #8]
 8012fc6:	781b      	ldrb	r3, [r3, #0]
 8012fc8:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8012fca:	687b      	ldr	r3, [r7, #4]
 8012fcc:	33d8      	adds	r3, #216	; 0xd8
 8012fce:	4973      	ldr	r1, [pc, #460]	; (801319c <createProblem+0x122f4>)
 8012fd0:	461a      	mov	r2, r3
 8012fd2:	460b      	mov	r3, r1
 8012fd4:	cb03      	ldmia	r3!, {r0, r1}
 8012fd6:	6010      	str	r0, [r2, #0]
 8012fd8:	6051      	str	r1, [r2, #4]
 8012fda:	881b      	ldrh	r3, [r3, #0]
 8012fdc:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 8012fde:	687b      	ldr	r3, [r7, #4]
 8012fe0:	33cc      	adds	r3, #204	; 0xcc
 8012fe2:	4a73      	ldr	r2, [pc, #460]	; (80131b0 <createProblem+0x12308>)
 8012fe4:	6810      	ldr	r0, [r2, #0]
 8012fe6:	6018      	str	r0, [r3, #0]
			break;
 8012fe8:	f007 bca4 	b.w	801a934 <createProblem+0x19a8c>
		case 603 :
			strcpy(p->name,"SIDEPULL SIDEWALK");
 8012fec:	687b      	ldr	r3, [r7, #4]
 8012fee:	337c      	adds	r3, #124	; 0x7c
 8012ff0:	4a73      	ldr	r2, [pc, #460]	; (80131c0 <createProblem+0x12318>)
 8012ff2:	461d      	mov	r5, r3
 8012ff4:	4614      	mov	r4, r2
 8012ff6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8012ff8:	6028      	str	r0, [r5, #0]
 8012ffa:	6069      	str	r1, [r5, #4]
 8012ffc:	60aa      	str	r2, [r5, #8]
 8012ffe:	60eb      	str	r3, [r5, #12]
 8013000:	8823      	ldrh	r3, [r4, #0]
 8013002:	822b      	strh	r3, [r5, #16]
			p->moveSize = 10;
 8013004:	687b      	ldr	r3, [r7, #4]
 8013006:	220a      	movs	r2, #10
 8013008:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,G,H,G,H,F,I,G,I");
 801300a:	687b      	ldr	r3, [r7, #4]
 801300c:	3340      	adds	r3, #64	; 0x40
 801300e:	4a6d      	ldr	r2, [pc, #436]	; (80131c4 <createProblem+0x1231c>)
 8013010:	461d      	mov	r5, r3
 8013012:	4614      	mov	r4, r2
 8013014:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013016:	6028      	str	r0, [r5, #0]
 8013018:	6069      	str	r1, [r5, #4]
 801301a:	60aa      	str	r2, [r5, #8]
 801301c:	60eb      	str	r3, [r5, #12]
 801301e:	6820      	ldr	r0, [r4, #0]
 8013020:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"4,5,6,8,9,10,11,14,15,18");
 8013022:	687b      	ldr	r3, [r7, #4]
 8013024:	3304      	adds	r3, #4
 8013026:	4a68      	ldr	r2, [pc, #416]	; (80131c8 <createProblem+0x12320>)
 8013028:	461d      	mov	r5, r3
 801302a:	4614      	mov	r4, r2
 801302c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801302e:	6028      	str	r0, [r5, #0]
 8013030:	6069      	str	r1, [r5, #4]
 8013032:	60aa      	str	r2, [r5, #8]
 8013034:	60eb      	str	r3, [r5, #12]
 8013036:	cc03      	ldmia	r4!, {r0, r1}
 8013038:	6128      	str	r0, [r5, #16]
 801303a:	6169      	str	r1, [r5, #20]
 801303c:	7823      	ldrb	r3, [r4, #0]
 801303e:	762b      	strb	r3, [r5, #24]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,e");
 8013040:	687b      	ldr	r3, [r7, #4]
 8013042:	33d8      	adds	r3, #216	; 0xd8
 8013044:	4a61      	ldr	r2, [pc, #388]	; (80131cc <createProblem+0x12324>)
 8013046:	461d      	mov	r5, r3
 8013048:	4614      	mov	r4, r2
 801304a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801304c:	6028      	str	r0, [r5, #0]
 801304e:	6069      	str	r1, [r5, #4]
 8013050:	60aa      	str	r2, [r5, #8]
 8013052:	60eb      	str	r3, [r5, #12]
 8013054:	6820      	ldr	r0, [r4, #0]
 8013056:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "6B+");
 8013058:	687b      	ldr	r3, [r7, #4]
 801305a:	33cc      	adds	r3, #204	; 0xcc
 801305c:	4a5c      	ldr	r2, [pc, #368]	; (80131d0 <createProblem+0x12328>)
 801305e:	6810      	ldr	r0, [r2, #0]
 8013060:	6018      	str	r0, [r3, #0]
			break;
 8013062:	f007 bc67 	b.w	801a934 <createProblem+0x19a8c>
		case 604 :
			strcpy(p->name,"ITIM");
 8013066:	687b      	ldr	r3, [r7, #4]
 8013068:	337c      	adds	r3, #124	; 0x7c
 801306a:	4a5a      	ldr	r2, [pc, #360]	; (80131d4 <createProblem+0x1232c>)
 801306c:	6810      	ldr	r0, [r2, #0]
 801306e:	6018      	str	r0, [r3, #0]
 8013070:	7912      	ldrb	r2, [r2, #4]
 8013072:	711a      	strb	r2, [r3, #4]
			p->moveSize = 7;
 8013074:	687b      	ldr	r3, [r7, #4]
 8013076:	2207      	movs	r2, #7
 8013078:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,I,E,E,G,E,G");
 801307a:	687b      	ldr	r3, [r7, #4]
 801307c:	3340      	adds	r3, #64	; 0x40
 801307e:	4a56      	ldr	r2, [pc, #344]	; (80131d8 <createProblem+0x12330>)
 8013080:	461c      	mov	r4, r3
 8013082:	4613      	mov	r3, r2
 8013084:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013086:	6020      	str	r0, [r4, #0]
 8013088:	6061      	str	r1, [r4, #4]
 801308a:	60a2      	str	r2, [r4, #8]
 801308c:	881b      	ldrh	r3, [r3, #0]
 801308e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"13,18,9,16,14,8,4");
 8013090:	687b      	ldr	r3, [r7, #4]
 8013092:	3304      	adds	r3, #4
 8013094:	4a51      	ldr	r2, [pc, #324]	; (80131dc <createProblem+0x12334>)
 8013096:	461d      	mov	r5, r3
 8013098:	4614      	mov	r4, r2
 801309a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801309c:	6028      	str	r0, [r5, #0]
 801309e:	6069      	str	r1, [r5, #4]
 80130a0:	60aa      	str	r2, [r5, #8]
 80130a2:	60eb      	str	r3, [r5, #12]
 80130a4:	8823      	ldrh	r3, [r4, #0]
 80130a6:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "d,e,d,d,d,d,s");
 80130a8:	687b      	ldr	r3, [r7, #4]
 80130aa:	33d8      	adds	r3, #216	; 0xd8
 80130ac:	4a4c      	ldr	r2, [pc, #304]	; (80131e0 <createProblem+0x12338>)
 80130ae:	461c      	mov	r4, r3
 80130b0:	4613      	mov	r3, r2
 80130b2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80130b4:	6020      	str	r0, [r4, #0]
 80130b6:	6061      	str	r1, [r4, #4]
 80130b8:	60a2      	str	r2, [r4, #8]
 80130ba:	881b      	ldrh	r3, [r3, #0]
 80130bc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 80130be:	687b      	ldr	r3, [r7, #4]
 80130c0:	33cc      	adds	r3, #204	; 0xcc
 80130c2:	4a3b      	ldr	r2, [pc, #236]	; (80131b0 <createProblem+0x12308>)
 80130c4:	6810      	ldr	r0, [r2, #0]
 80130c6:	6018      	str	r0, [r3, #0]
			break;
 80130c8:	f007 bc34 	b.w	801a934 <createProblem+0x19a8c>
		case 605 :
			strcpy(p->name,"MSFTS");
 80130cc:	687b      	ldr	r3, [r7, #4]
 80130ce:	337c      	adds	r3, #124	; 0x7c
 80130d0:	4a44      	ldr	r2, [pc, #272]	; (80131e4 <createProblem+0x1233c>)
 80130d2:	6810      	ldr	r0, [r2, #0]
 80130d4:	6018      	str	r0, [r3, #0]
 80130d6:	8892      	ldrh	r2, [r2, #4]
 80130d8:	809a      	strh	r2, [r3, #4]
			p->moveSize = 7;
 80130da:	687b      	ldr	r3, [r7, #4]
 80130dc:	2207      	movs	r2, #7
 80130de:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,G,E,J,J,H,I");
 80130e0:	687b      	ldr	r3, [r7, #4]
 80130e2:	3340      	adds	r3, #64	; 0x40
 80130e4:	4a40      	ldr	r2, [pc, #256]	; (80131e8 <createProblem+0x12340>)
 80130e6:	461c      	mov	r4, r3
 80130e8:	4613      	mov	r3, r2
 80130ea:	cb07      	ldmia	r3!, {r0, r1, r2}
 80130ec:	6020      	str	r0, [r4, #0]
 80130ee:	6061      	str	r1, [r4, #4]
 80130f0:	60a2      	str	r2, [r4, #8]
 80130f2:	881b      	ldrh	r3, [r3, #0]
 80130f4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,12,5,13,16,18");
 80130f6:	687b      	ldr	r3, [r7, #4]
 80130f8:	3304      	adds	r3, #4
 80130fa:	4a3c      	ldr	r2, [pc, #240]	; (80131ec <createProblem+0x12344>)
 80130fc:	461d      	mov	r5, r3
 80130fe:	4614      	mov	r4, r2
 8013100:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013102:	6028      	str	r0, [r5, #0]
 8013104:	6069      	str	r1, [r5, #4]
 8013106:	60aa      	str	r2, [r5, #8]
 8013108:	60eb      	str	r3, [r5, #12]
 801310a:	8823      	ldrh	r3, [r4, #0]
 801310c:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,s,d,d,e");
 801310e:	687b      	ldr	r3, [r7, #4]
 8013110:	33d8      	adds	r3, #216	; 0xd8
 8013112:	4a37      	ldr	r2, [pc, #220]	; (80131f0 <createProblem+0x12348>)
 8013114:	461c      	mov	r4, r3
 8013116:	4613      	mov	r3, r2
 8013118:	cb07      	ldmia	r3!, {r0, r1, r2}
 801311a:	6020      	str	r0, [r4, #0]
 801311c:	6061      	str	r1, [r4, #4]
 801311e:	60a2      	str	r2, [r4, #8]
 8013120:	881b      	ldrh	r3, [r3, #0]
 8013122:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8013124:	687b      	ldr	r3, [r7, #4]
 8013126:	33cc      	adds	r3, #204	; 0xcc
 8013128:	4a1d      	ldr	r2, [pc, #116]	; (80131a0 <createProblem+0x122f8>)
 801312a:	6810      	ldr	r0, [r2, #0]
 801312c:	6018      	str	r0, [r3, #0]
			break;
 801312e:	f007 bc01 	b.w	801a934 <createProblem+0x19a8c>
		case 606 :
			strcpy(p->name,"FAT 'N WEAK");
 8013132:	687b      	ldr	r3, [r7, #4]
 8013134:	337c      	adds	r3, #124	; 0x7c
 8013136:	4a2f      	ldr	r2, [pc, #188]	; (80131f4 <createProblem+0x1234c>)
 8013138:	461c      	mov	r4, r3
 801313a:	4613      	mov	r3, r2
 801313c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801313e:	6020      	str	r0, [r4, #0]
 8013140:	6061      	str	r1, [r4, #4]
 8013142:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 8013144:	687b      	ldr	r3, [r7, #4]
 8013146:	2206      	movs	r2, #6
 8013148:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,A,E,A");
 801314a:	687b      	ldr	r3, [r7, #4]
 801314c:	3340      	adds	r3, #64	; 0x40
 801314e:	4a2a      	ldr	r2, [pc, #168]	; (80131f8 <createProblem+0x12350>)
 8013150:	461c      	mov	r4, r3
 8013152:	4613      	mov	r3, r2
 8013154:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013156:	6020      	str	r0, [r4, #0]
 8013158:	6061      	str	r1, [r4, #4]
 801315a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,12,14,16,18");
 801315c:	687b      	ldr	r3, [r7, #4]
 801315e:	3304      	adds	r3, #4
 8013160:	4a26      	ldr	r2, [pc, #152]	; (80131fc <createProblem+0x12354>)
 8013162:	461c      	mov	r4, r3
 8013164:	4615      	mov	r5, r2
 8013166:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8013168:	6020      	str	r0, [r4, #0]
 801316a:	6061      	str	r1, [r4, #4]
 801316c:	60a2      	str	r2, [r4, #8]
 801316e:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8013170:	687b      	ldr	r3, [r7, #4]
 8013172:	33d8      	adds	r3, #216	; 0xd8
 8013174:	4a22      	ldr	r2, [pc, #136]	; (8013200 <createProblem+0x12358>)
 8013176:	461c      	mov	r4, r3
 8013178:	4613      	mov	r3, r2
 801317a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801317c:	6020      	str	r0, [r4, #0]
 801317e:	6061      	str	r1, [r4, #4]
 8013180:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 8013182:	687b      	ldr	r3, [r7, #4]
 8013184:	33cc      	adds	r3, #204	; 0xcc
 8013186:	4a06      	ldr	r2, [pc, #24]	; (80131a0 <createProblem+0x122f8>)
 8013188:	6810      	ldr	r0, [r2, #0]
 801318a:	6018      	str	r0, [r3, #0]
			break;
 801318c:	f007 bbd2 	b.w	801a934 <createProblem+0x19a8c>
 8013190:	08026fe4 	.word	0x08026fe4
 8013194:	08026ff0 	.word	0x08026ff0
 8013198:	08026ffc 	.word	0x08026ffc
 801319c:	080208a0 	.word	0x080208a0
 80131a0:	08020928 	.word	0x08020928
 80131a4:	0802700c 	.word	0x0802700c
 80131a8:	08027020 	.word	0x08027020
 80131ac:	08026200 	.word	0x08026200
 80131b0:	080209a4 	.word	0x080209a4
 80131b4:	0802702c 	.word	0x0802702c
 80131b8:	0802703c 	.word	0x0802703c
 80131bc:	08027048 	.word	0x08027048
 80131c0:	08027058 	.word	0x08027058
 80131c4:	0802706c 	.word	0x0802706c
 80131c8:	08027080 	.word	0x08027080
 80131cc:	08020b7c 	.word	0x08020b7c
 80131d0:	08020830 	.word	0x08020830
 80131d4:	0802709c 	.word	0x0802709c
 80131d8:	080270a4 	.word	0x080270a4
 80131dc:	080270b4 	.word	0x080270b4
 80131e0:	080270c8 	.word	0x080270c8
 80131e4:	080270d8 	.word	0x080270d8
 80131e8:	080270e0 	.word	0x080270e0
 80131ec:	080270f0 	.word	0x080270f0
 80131f0:	08026168 	.word	0x08026168
 80131f4:	08027104 	.word	0x08027104
 80131f8:	08027110 	.word	0x08027110
 80131fc:	0802711c 	.word	0x0802711c
 8013200:	0802091c 	.word	0x0802091c
		case 607 :
			strcpy(p->name,"SNAP");
 8013204:	687b      	ldr	r3, [r7, #4]
 8013206:	337c      	adds	r3, #124	; 0x7c
 8013208:	4aba      	ldr	r2, [pc, #744]	; (80134f4 <createProblem+0x1264c>)
 801320a:	6810      	ldr	r0, [r2, #0]
 801320c:	6018      	str	r0, [r3, #0]
 801320e:	7912      	ldrb	r2, [r2, #4]
 8013210:	711a      	strb	r2, [r3, #4]
			p->moveSize = 6;
 8013212:	687b      	ldr	r3, [r7, #4]
 8013214:	2206      	movs	r2, #6
 8013216:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,D,B,E,A,D");
 8013218:	687b      	ldr	r3, [r7, #4]
 801321a:	3340      	adds	r3, #64	; 0x40
 801321c:	4ab6      	ldr	r2, [pc, #728]	; (80134f8 <createProblem+0x12650>)
 801321e:	461c      	mov	r4, r3
 8013220:	4613      	mov	r3, r2
 8013222:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013224:	6020      	str	r0, [r4, #0]
 8013226:	6061      	str	r1, [r4, #4]
 8013228:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,7,10,12,14,18");
 801322a:	687b      	ldr	r3, [r7, #4]
 801322c:	3304      	adds	r3, #4
 801322e:	4ab3      	ldr	r2, [pc, #716]	; (80134fc <createProblem+0x12654>)
 8013230:	461c      	mov	r4, r3
 8013232:	4615      	mov	r5, r2
 8013234:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8013236:	6020      	str	r0, [r4, #0]
 8013238:	6061      	str	r1, [r4, #4]
 801323a:	60a2      	str	r2, [r4, #8]
 801323c:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 801323e:	687b      	ldr	r3, [r7, #4]
 8013240:	33d8      	adds	r3, #216	; 0xd8
 8013242:	4aaf      	ldr	r2, [pc, #700]	; (8013500 <createProblem+0x12658>)
 8013244:	461c      	mov	r4, r3
 8013246:	4613      	mov	r3, r2
 8013248:	cb07      	ldmia	r3!, {r0, r1, r2}
 801324a:	6020      	str	r0, [r4, #0]
 801324c:	6061      	str	r1, [r4, #4]
 801324e:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8013250:	687b      	ldr	r3, [r7, #4]
 8013252:	33cc      	adds	r3, #204	; 0xcc
 8013254:	4aab      	ldr	r2, [pc, #684]	; (8013504 <createProblem+0x1265c>)
 8013256:	6810      	ldr	r0, [r2, #0]
 8013258:	6018      	str	r0, [r3, #0]
			break;
 801325a:	f007 bb6b 	b.w	801a934 <createProblem+0x19a8c>
		case 608 :
			strcpy(p->name,"LUCID NONSENSE");
 801325e:	687b      	ldr	r3, [r7, #4]
 8013260:	337c      	adds	r3, #124	; 0x7c
 8013262:	4aa9      	ldr	r2, [pc, #676]	; (8013508 <createProblem+0x12660>)
 8013264:	461c      	mov	r4, r3
 8013266:	4613      	mov	r3, r2
 8013268:	cb07      	ldmia	r3!, {r0, r1, r2}
 801326a:	6020      	str	r0, [r4, #0]
 801326c:	6061      	str	r1, [r4, #4]
 801326e:	60a2      	str	r2, [r4, #8]
 8013270:	881a      	ldrh	r2, [r3, #0]
 8013272:	789b      	ldrb	r3, [r3, #2]
 8013274:	81a2      	strh	r2, [r4, #12]
 8013276:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 6;
 8013278:	687b      	ldr	r3, [r7, #4]
 801327a:	2206      	movs	r2, #6
 801327c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,D,E,B,I");
 801327e:	687b      	ldr	r3, [r7, #4]
 8013280:	3340      	adds	r3, #64	; 0x40
 8013282:	4aa2      	ldr	r2, [pc, #648]	; (801350c <createProblem+0x12664>)
 8013284:	461c      	mov	r4, r3
 8013286:	4613      	mov	r3, r2
 8013288:	cb07      	ldmia	r3!, {r0, r1, r2}
 801328a:	6020      	str	r0, [r4, #0]
 801328c:	6061      	str	r1, [r4, #4]
 801328e:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,15,16,10,18");
 8013290:	687b      	ldr	r3, [r7, #4]
 8013292:	3304      	adds	r3, #4
 8013294:	4a9e      	ldr	r2, [pc, #632]	; (8013510 <createProblem+0x12668>)
 8013296:	461c      	mov	r4, r3
 8013298:	4615      	mov	r5, r2
 801329a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801329c:	6020      	str	r0, [r4, #0]
 801329e:	6061      	str	r1, [r4, #4]
 80132a0:	60a2      	str	r2, [r4, #8]
 80132a2:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80132a4:	687b      	ldr	r3, [r7, #4]
 80132a6:	33d8      	adds	r3, #216	; 0xd8
 80132a8:	4a95      	ldr	r2, [pc, #596]	; (8013500 <createProblem+0x12658>)
 80132aa:	461c      	mov	r4, r3
 80132ac:	4613      	mov	r3, r2
 80132ae:	cb07      	ldmia	r3!, {r0, r1, r2}
 80132b0:	6020      	str	r0, [r4, #0]
 80132b2:	6061      	str	r1, [r4, #4]
 80132b4:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 80132b6:	687b      	ldr	r3, [r7, #4]
 80132b8:	33cc      	adds	r3, #204	; 0xcc
 80132ba:	4a96      	ldr	r2, [pc, #600]	; (8013514 <createProblem+0x1266c>)
 80132bc:	8811      	ldrh	r1, [r2, #0]
 80132be:	7892      	ldrb	r2, [r2, #2]
 80132c0:	8019      	strh	r1, [r3, #0]
 80132c2:	709a      	strb	r2, [r3, #2]
			break;
 80132c4:	f007 bb36 	b.w	801a934 <createProblem+0x19a8c>
		case 609 :
			strcpy(p->name,"DON'T BLACKOUT");
 80132c8:	687b      	ldr	r3, [r7, #4]
 80132ca:	337c      	adds	r3, #124	; 0x7c
 80132cc:	4a92      	ldr	r2, [pc, #584]	; (8013518 <createProblem+0x12670>)
 80132ce:	461c      	mov	r4, r3
 80132d0:	4613      	mov	r3, r2
 80132d2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80132d4:	6020      	str	r0, [r4, #0]
 80132d6:	6061      	str	r1, [r4, #4]
 80132d8:	60a2      	str	r2, [r4, #8]
 80132da:	881a      	ldrh	r2, [r3, #0]
 80132dc:	789b      	ldrb	r3, [r3, #2]
 80132de:	81a2      	strh	r2, [r4, #12]
 80132e0:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 7;
 80132e2:	687b      	ldr	r3, [r7, #4]
 80132e4:	2207      	movs	r2, #7
 80132e6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,F,A,D,H,A");
 80132e8:	687b      	ldr	r3, [r7, #4]
 80132ea:	3340      	adds	r3, #64	; 0x40
 80132ec:	4a8b      	ldr	r2, [pc, #556]	; (801351c <createProblem+0x12674>)
 80132ee:	461c      	mov	r4, r3
 80132f0:	4613      	mov	r3, r2
 80132f2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80132f4:	6020      	str	r0, [r4, #0]
 80132f6:	6061      	str	r1, [r4, #4]
 80132f8:	60a2      	str	r2, [r4, #8]
 80132fa:	881b      	ldrh	r3, [r3, #0]
 80132fc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,11,9,15,10,18");
 80132fe:	687b      	ldr	r3, [r7, #4]
 8013300:	3304      	adds	r3, #4
 8013302:	4a87      	ldr	r2, [pc, #540]	; (8013520 <createProblem+0x12678>)
 8013304:	461d      	mov	r5, r3
 8013306:	4614      	mov	r4, r2
 8013308:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801330a:	6028      	str	r0, [r5, #0]
 801330c:	6069      	str	r1, [r5, #4]
 801330e:	60aa      	str	r2, [r5, #8]
 8013310:	60eb      	str	r3, [r5, #12]
 8013312:	8823      	ldrh	r3, [r4, #0]
 8013314:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8013316:	687b      	ldr	r3, [r7, #4]
 8013318:	33d8      	adds	r3, #216	; 0xd8
 801331a:	4a82      	ldr	r2, [pc, #520]	; (8013524 <createProblem+0x1267c>)
 801331c:	461c      	mov	r4, r3
 801331e:	4613      	mov	r3, r2
 8013320:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013322:	6020      	str	r0, [r4, #0]
 8013324:	6061      	str	r1, [r4, #4]
 8013326:	60a2      	str	r2, [r4, #8]
 8013328:	881b      	ldrh	r3, [r3, #0]
 801332a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 801332c:	687b      	ldr	r3, [r7, #4]
 801332e:	33cc      	adds	r3, #204	; 0xcc
 8013330:	4a78      	ldr	r2, [pc, #480]	; (8013514 <createProblem+0x1266c>)
 8013332:	8811      	ldrh	r1, [r2, #0]
 8013334:	7892      	ldrb	r2, [r2, #2]
 8013336:	8019      	strh	r1, [r3, #0]
 8013338:	709a      	strb	r2, [r3, #2]
			break;
 801333a:	f007 bafb 	b.w	801a934 <createProblem+0x19a8c>
		case 61 :
			strcpy(p->name,"LADYBUG RIGHT VAR");
 801333e:	687b      	ldr	r3, [r7, #4]
 8013340:	337c      	adds	r3, #124	; 0x7c
 8013342:	4a79      	ldr	r2, [pc, #484]	; (8013528 <createProblem+0x12680>)
 8013344:	461d      	mov	r5, r3
 8013346:	4614      	mov	r4, r2
 8013348:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801334a:	6028      	str	r0, [r5, #0]
 801334c:	6069      	str	r1, [r5, #4]
 801334e:	60aa      	str	r2, [r5, #8]
 8013350:	60eb      	str	r3, [r5, #12]
 8013352:	8823      	ldrh	r3, [r4, #0]
 8013354:	822b      	strh	r3, [r5, #16]
			p->moveSize = 8;
 8013356:	687b      	ldr	r3, [r7, #4]
 8013358:	2208      	movs	r2, #8
 801335a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,C,F,A,E,I");
 801335c:	687b      	ldr	r3, [r7, #4]
 801335e:	3340      	adds	r3, #64	; 0x40
 8013360:	4a72      	ldr	r2, [pc, #456]	; (801352c <createProblem+0x12684>)
 8013362:	461c      	mov	r4, r3
 8013364:	4615      	mov	r5, r2
 8013366:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8013368:	6020      	str	r0, [r4, #0]
 801336a:	6061      	str	r1, [r4, #4]
 801336c:	60a2      	str	r2, [r4, #8]
 801336e:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,10,13,11,9,16,18");
 8013370:	687b      	ldr	r3, [r7, #4]
 8013372:	3304      	adds	r3, #4
 8013374:	4a6e      	ldr	r2, [pc, #440]	; (8013530 <createProblem+0x12688>)
 8013376:	461d      	mov	r5, r3
 8013378:	4614      	mov	r4, r2
 801337a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801337c:	6028      	str	r0, [r5, #0]
 801337e:	6069      	str	r1, [r5, #4]
 8013380:	60aa      	str	r2, [r5, #8]
 8013382:	60eb      	str	r3, [r5, #12]
 8013384:	6820      	ldr	r0, [r4, #0]
 8013386:	6128      	str	r0, [r5, #16]
 8013388:	7923      	ldrb	r3, [r4, #4]
 801338a:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 801338c:	687b      	ldr	r3, [r7, #4]
 801338e:	33d8      	adds	r3, #216	; 0xd8
 8013390:	4a68      	ldr	r2, [pc, #416]	; (8013534 <createProblem+0x1268c>)
 8013392:	461c      	mov	r4, r3
 8013394:	4615      	mov	r5, r2
 8013396:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8013398:	6020      	str	r0, [r4, #0]
 801339a:	6061      	str	r1, [r4, #4]
 801339c:	60a2      	str	r2, [r4, #8]
 801339e:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 80133a0:	687b      	ldr	r3, [r7, #4]
 80133a2:	33cc      	adds	r3, #204	; 0xcc
 80133a4:	4a57      	ldr	r2, [pc, #348]	; (8013504 <createProblem+0x1265c>)
 80133a6:	6810      	ldr	r0, [r2, #0]
 80133a8:	6018      	str	r0, [r3, #0]
			break;
 80133aa:	f007 bac3 	b.w	801a934 <createProblem+0x19a8c>
		case 610 :
			strcpy(p->name,"CHINGA SU ES TO MADRE");
 80133ae:	687b      	ldr	r3, [r7, #4]
 80133b0:	337c      	adds	r3, #124	; 0x7c
 80133b2:	4a61      	ldr	r2, [pc, #388]	; (8013538 <createProblem+0x12690>)
 80133b4:	461d      	mov	r5, r3
 80133b6:	4614      	mov	r4, r2
 80133b8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80133ba:	6028      	str	r0, [r5, #0]
 80133bc:	6069      	str	r1, [r5, #4]
 80133be:	60aa      	str	r2, [r5, #8]
 80133c0:	60eb      	str	r3, [r5, #12]
 80133c2:	6820      	ldr	r0, [r4, #0]
 80133c4:	6128      	str	r0, [r5, #16]
 80133c6:	88a3      	ldrh	r3, [r4, #4]
 80133c8:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 5;
 80133ca:	687b      	ldr	r3, [r7, #4]
 80133cc:	2205      	movs	r2, #5
 80133ce:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,F,B,A,B");
 80133d0:	687b      	ldr	r3, [r7, #4]
 80133d2:	3340      	adds	r3, #64	; 0x40
 80133d4:	4959      	ldr	r1, [pc, #356]	; (801353c <createProblem+0x12694>)
 80133d6:	461a      	mov	r2, r3
 80133d8:	460b      	mov	r3, r1
 80133da:	cb03      	ldmia	r3!, {r0, r1}
 80133dc:	6010      	str	r0, [r2, #0]
 80133de:	6051      	str	r1, [r2, #4]
 80133e0:	881b      	ldrh	r3, [r3, #0]
 80133e2:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,11,12,18,15");
 80133e4:	687b      	ldr	r3, [r7, #4]
 80133e6:	3304      	adds	r3, #4
 80133e8:	4a55      	ldr	r2, [pc, #340]	; (8013540 <createProblem+0x12698>)
 80133ea:	461c      	mov	r4, r3
 80133ec:	4613      	mov	r3, r2
 80133ee:	cb07      	ldmia	r3!, {r0, r1, r2}
 80133f0:	6020      	str	r0, [r4, #0]
 80133f2:	6061      	str	r1, [r4, #4]
 80133f4:	60a2      	str	r2, [r4, #8]
 80133f6:	881b      	ldrh	r3, [r3, #0]
 80133f8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,e,d");
 80133fa:	687b      	ldr	r3, [r7, #4]
 80133fc:	33d8      	adds	r3, #216	; 0xd8
 80133fe:	4951      	ldr	r1, [pc, #324]	; (8013544 <createProblem+0x1269c>)
 8013400:	461a      	mov	r2, r3
 8013402:	460b      	mov	r3, r1
 8013404:	cb03      	ldmia	r3!, {r0, r1}
 8013406:	6010      	str	r0, [r2, #0]
 8013408:	6051      	str	r1, [r2, #4]
 801340a:	881b      	ldrh	r3, [r3, #0]
 801340c:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7C");
 801340e:	687b      	ldr	r3, [r7, #4]
 8013410:	33cc      	adds	r3, #204	; 0xcc
 8013412:	4a4d      	ldr	r2, [pc, #308]	; (8013548 <createProblem+0x126a0>)
 8013414:	8811      	ldrh	r1, [r2, #0]
 8013416:	7892      	ldrb	r2, [r2, #2]
 8013418:	8019      	strh	r1, [r3, #0]
 801341a:	709a      	strb	r2, [r3, #2]
			break;
 801341c:	f007 ba8a 	b.w	801a934 <createProblem+0x19a8c>
		case 611 :
			strcpy(p->name,"TWO");
 8013420:	687b      	ldr	r3, [r7, #4]
 8013422:	337c      	adds	r3, #124	; 0x7c
 8013424:	4a49      	ldr	r2, [pc, #292]	; (801354c <createProblem+0x126a4>)
 8013426:	6810      	ldr	r0, [r2, #0]
 8013428:	6018      	str	r0, [r3, #0]
			p->moveSize = 7;
 801342a:	687b      	ldr	r3, [r7, #4]
 801342c:	2207      	movs	r2, #7
 801342e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,E,F,E,I,I");
 8013430:	687b      	ldr	r3, [r7, #4]
 8013432:	3340      	adds	r3, #64	; 0x40
 8013434:	4a46      	ldr	r2, [pc, #280]	; (8013550 <createProblem+0x126a8>)
 8013436:	461c      	mov	r4, r3
 8013438:	4613      	mov	r3, r2
 801343a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801343c:	6020      	str	r0, [r4, #0]
 801343e:	6061      	str	r1, [r4, #4]
 8013440:	60a2      	str	r2, [r4, #8]
 8013442:	881b      	ldrh	r3, [r3, #0]
 8013444:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,11,14,14,18");
 8013446:	687b      	ldr	r3, [r7, #4]
 8013448:	3304      	adds	r3, #4
 801344a:	4a42      	ldr	r2, [pc, #264]	; (8013554 <createProblem+0x126ac>)
 801344c:	461d      	mov	r5, r3
 801344e:	4614      	mov	r4, r2
 8013450:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013452:	6028      	str	r0, [r5, #0]
 8013454:	6069      	str	r1, [r5, #4]
 8013456:	60aa      	str	r2, [r5, #8]
 8013458:	60eb      	str	r3, [r5, #12]
 801345a:	8823      	ldrh	r3, [r4, #0]
 801345c:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 801345e:	687b      	ldr	r3, [r7, #4]
 8013460:	33d8      	adds	r3, #216	; 0xd8
 8013462:	4a30      	ldr	r2, [pc, #192]	; (8013524 <createProblem+0x1267c>)
 8013464:	461c      	mov	r4, r3
 8013466:	4613      	mov	r3, r2
 8013468:	cb07      	ldmia	r3!, {r0, r1, r2}
 801346a:	6020      	str	r0, [r4, #0]
 801346c:	6061      	str	r1, [r4, #4]
 801346e:	60a2      	str	r2, [r4, #8]
 8013470:	881b      	ldrh	r3, [r3, #0]
 8013472:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8013474:	687b      	ldr	r3, [r7, #4]
 8013476:	33cc      	adds	r3, #204	; 0xcc
 8013478:	4a37      	ldr	r2, [pc, #220]	; (8013558 <createProblem+0x126b0>)
 801347a:	6810      	ldr	r0, [r2, #0]
 801347c:	6018      	str	r0, [r3, #0]
			break;
 801347e:	f007 ba59 	b.w	801a934 <createProblem+0x19a8c>
		case 612 :
			strcpy(p->name,"BILLIONS AND BILLIONS");
 8013482:	687b      	ldr	r3, [r7, #4]
 8013484:	337c      	adds	r3, #124	; 0x7c
 8013486:	4a35      	ldr	r2, [pc, #212]	; (801355c <createProblem+0x126b4>)
 8013488:	461d      	mov	r5, r3
 801348a:	4614      	mov	r4, r2
 801348c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801348e:	6028      	str	r0, [r5, #0]
 8013490:	6069      	str	r1, [r5, #4]
 8013492:	60aa      	str	r2, [r5, #8]
 8013494:	60eb      	str	r3, [r5, #12]
 8013496:	6820      	ldr	r0, [r4, #0]
 8013498:	6128      	str	r0, [r5, #16]
 801349a:	88a3      	ldrh	r3, [r4, #4]
 801349c:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 6;
 801349e:	687b      	ldr	r3, [r7, #4]
 80134a0:	2206      	movs	r2, #6
 80134a2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,K,H,G,D");
 80134a4:	687b      	ldr	r3, [r7, #4]
 80134a6:	3340      	adds	r3, #64	; 0x40
 80134a8:	4a2d      	ldr	r2, [pc, #180]	; (8013560 <createProblem+0x126b8>)
 80134aa:	461c      	mov	r4, r3
 80134ac:	4613      	mov	r3, r2
 80134ae:	cb07      	ldmia	r3!, {r0, r1, r2}
 80134b0:	6020      	str	r0, [r4, #0]
 80134b2:	6061      	str	r1, [r4, #4]
 80134b4:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,5,9,12,14,18");
 80134b6:	687b      	ldr	r3, [r7, #4]
 80134b8:	3304      	adds	r3, #4
 80134ba:	4a2a      	ldr	r2, [pc, #168]	; (8013564 <createProblem+0x126bc>)
 80134bc:	461c      	mov	r4, r3
 80134be:	4613      	mov	r3, r2
 80134c0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80134c2:	6020      	str	r0, [r4, #0]
 80134c4:	6061      	str	r1, [r4, #4]
 80134c6:	60a2      	str	r2, [r4, #8]
 80134c8:	881a      	ldrh	r2, [r3, #0]
 80134ca:	789b      	ldrb	r3, [r3, #2]
 80134cc:	81a2      	strh	r2, [r4, #12]
 80134ce:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 80134d0:	687b      	ldr	r3, [r7, #4]
 80134d2:	33d8      	adds	r3, #216	; 0xd8
 80134d4:	4a24      	ldr	r2, [pc, #144]	; (8013568 <createProblem+0x126c0>)
 80134d6:	461c      	mov	r4, r3
 80134d8:	4613      	mov	r3, r2
 80134da:	cb07      	ldmia	r3!, {r0, r1, r2}
 80134dc:	6020      	str	r0, [r4, #0]
 80134de:	6061      	str	r1, [r4, #4]
 80134e0:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 80134e2:	687b      	ldr	r3, [r7, #4]
 80134e4:	33cc      	adds	r3, #204	; 0xcc
 80134e6:	4a0b      	ldr	r2, [pc, #44]	; (8013514 <createProblem+0x1266c>)
 80134e8:	8811      	ldrh	r1, [r2, #0]
 80134ea:	7892      	ldrb	r2, [r2, #2]
 80134ec:	8019      	strh	r1, [r3, #0]
 80134ee:	709a      	strb	r2, [r3, #2]
			break;
 80134f0:	f007 ba20 	b.w	801a934 <createProblem+0x19a8c>
 80134f4:	0802712c 	.word	0x0802712c
 80134f8:	08027134 	.word	0x08027134
 80134fc:	08027140 	.word	0x08027140
 8013500:	0802091c 	.word	0x0802091c
 8013504:	080209a4 	.word	0x080209a4
 8013508:	08027150 	.word	0x08027150
 801350c:	08027160 	.word	0x08027160
 8013510:	0802716c 	.word	0x0802716c
 8013514:	08020874 	.word	0x08020874
 8013518:	0802717c 	.word	0x0802717c
 801351c:	0802718c 	.word	0x0802718c
 8013520:	0802719c 	.word	0x0802719c
 8013524:	08020820 	.word	0x08020820
 8013528:	080271b0 	.word	0x080271b0
 801352c:	080271c4 	.word	0x080271c4
 8013530:	080271d4 	.word	0x080271d4
 8013534:	08020a4c 	.word	0x08020a4c
 8013538:	080271ec 	.word	0x080271ec
 801353c:	08027204 	.word	0x08027204
 8013540:	08027210 	.word	0x08027210
 8013544:	08027220 	.word	0x08027220
 8013548:	08020b0c 	.word	0x08020b0c
 801354c:	0802722c 	.word	0x0802722c
 8013550:	08027230 	.word	0x08027230
 8013554:	08027240 	.word	0x08027240
 8013558:	08020928 	.word	0x08020928
 801355c:	08027254 	.word	0x08027254
 8013560:	0802726c 	.word	0x0802726c
 8013564:	08027278 	.word	0x08027278
 8013568:	08020e90 	.word	0x08020e90
		case 613 :
			strcpy(p->name,"INTO THE SHADOW DUST");
 801356c:	687b      	ldr	r3, [r7, #4]
 801356e:	337c      	adds	r3, #124	; 0x7c
 8013570:	4ab7      	ldr	r2, [pc, #732]	; (8013850 <createProblem+0x129a8>)
 8013572:	461d      	mov	r5, r3
 8013574:	4614      	mov	r4, r2
 8013576:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013578:	6028      	str	r0, [r5, #0]
 801357a:	6069      	str	r1, [r5, #4]
 801357c:	60aa      	str	r2, [r5, #8]
 801357e:	60eb      	str	r3, [r5, #12]
 8013580:	6820      	ldr	r0, [r4, #0]
 8013582:	6128      	str	r0, [r5, #16]
 8013584:	7923      	ldrb	r3, [r4, #4]
 8013586:	752b      	strb	r3, [r5, #20]
			p->moveSize = 8;
 8013588:	687b      	ldr	r3, [r7, #4]
 801358a:	2208      	movs	r2, #8
 801358c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,F,C,G,G,I");
 801358e:	687b      	ldr	r3, [r7, #4]
 8013590:	3340      	adds	r3, #64	; 0x40
 8013592:	4ab0      	ldr	r2, [pc, #704]	; (8013854 <createProblem+0x129ac>)
 8013594:	461c      	mov	r4, r3
 8013596:	4615      	mov	r5, r2
 8013598:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801359a:	6020      	str	r0, [r4, #0]
 801359c:	6061      	str	r1, [r4, #4]
 801359e:	60a2      	str	r2, [r4, #8]
 80135a0:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,8,11,13,14,17,18");
 80135a2:	687b      	ldr	r3, [r7, #4]
 80135a4:	3304      	adds	r3, #4
 80135a6:	4aac      	ldr	r2, [pc, #688]	; (8013858 <createProblem+0x129b0>)
 80135a8:	461d      	mov	r5, r3
 80135aa:	4614      	mov	r4, r2
 80135ac:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80135ae:	6028      	str	r0, [r5, #0]
 80135b0:	6069      	str	r1, [r5, #4]
 80135b2:	60aa      	str	r2, [r5, #8]
 80135b4:	60eb      	str	r3, [r5, #12]
 80135b6:	6820      	ldr	r0, [r4, #0]
 80135b8:	6128      	str	r0, [r5, #16]
 80135ba:	7923      	ldrb	r3, [r4, #4]
 80135bc:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 80135be:	687b      	ldr	r3, [r7, #4]
 80135c0:	33d8      	adds	r3, #216	; 0xd8
 80135c2:	4aa6      	ldr	r2, [pc, #664]	; (801385c <createProblem+0x129b4>)
 80135c4:	461c      	mov	r4, r3
 80135c6:	4615      	mov	r5, r2
 80135c8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80135ca:	6020      	str	r0, [r4, #0]
 80135cc:	6061      	str	r1, [r4, #4]
 80135ce:	60a2      	str	r2, [r4, #8]
 80135d0:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80135d2:	687b      	ldr	r3, [r7, #4]
 80135d4:	33cc      	adds	r3, #204	; 0xcc
 80135d6:	4aa2      	ldr	r2, [pc, #648]	; (8013860 <createProblem+0x129b8>)
 80135d8:	6810      	ldr	r0, [r2, #0]
 80135da:	6018      	str	r0, [r3, #0]
			break;
 80135dc:	f007 b9aa 	b.w	801a934 <createProblem+0x19a8c>
		case 614 :
			strcpy(p->name,"GRO1");
 80135e0:	687b      	ldr	r3, [r7, #4]
 80135e2:	337c      	adds	r3, #124	; 0x7c
 80135e4:	4a9f      	ldr	r2, [pc, #636]	; (8013864 <createProblem+0x129bc>)
 80135e6:	6810      	ldr	r0, [r2, #0]
 80135e8:	6018      	str	r0, [r3, #0]
 80135ea:	7912      	ldrb	r2, [r2, #4]
 80135ec:	711a      	strb	r2, [r3, #4]
			p->moveSize = 6;
 80135ee:	687b      	ldr	r3, [r7, #4]
 80135f0:	2206      	movs	r2, #6
 80135f2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,H,C,E,D");
 80135f4:	687b      	ldr	r3, [r7, #4]
 80135f6:	3340      	adds	r3, #64	; 0x40
 80135f8:	4a9b      	ldr	r2, [pc, #620]	; (8013868 <createProblem+0x129c0>)
 80135fa:	461c      	mov	r4, r3
 80135fc:	4613      	mov	r3, r2
 80135fe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013600:	6020      	str	r0, [r4, #0]
 8013602:	6061      	str	r1, [r4, #4]
 8013604:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,10,13,16,18");
 8013606:	687b      	ldr	r3, [r7, #4]
 8013608:	3304      	adds	r3, #4
 801360a:	4a98      	ldr	r2, [pc, #608]	; (801386c <createProblem+0x129c4>)
 801360c:	461c      	mov	r4, r3
 801360e:	4615      	mov	r5, r2
 8013610:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8013612:	6020      	str	r0, [r4, #0]
 8013614:	6061      	str	r1, [r4, #4]
 8013616:	60a2      	str	r2, [r4, #8]
 8013618:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 801361a:	687b      	ldr	r3, [r7, #4]
 801361c:	33d8      	adds	r3, #216	; 0xd8
 801361e:	4a94      	ldr	r2, [pc, #592]	; (8013870 <createProblem+0x129c8>)
 8013620:	461c      	mov	r4, r3
 8013622:	4613      	mov	r3, r2
 8013624:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013626:	6020      	str	r0, [r4, #0]
 8013628:	6061      	str	r1, [r4, #4]
 801362a:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 801362c:	687b      	ldr	r3, [r7, #4]
 801362e:	33cc      	adds	r3, #204	; 0xcc
 8013630:	4a90      	ldr	r2, [pc, #576]	; (8013874 <createProblem+0x129cc>)
 8013632:	8811      	ldrh	r1, [r2, #0]
 8013634:	7892      	ldrb	r2, [r2, #2]
 8013636:	8019      	strh	r1, [r3, #0]
 8013638:	709a      	strb	r2, [r3, #2]
			break;
 801363a:	f007 b97b 	b.w	801a934 <createProblem+0x19a8c>
		case 615 :
			strcpy(p->name,"THREE");
 801363e:	687b      	ldr	r3, [r7, #4]
 8013640:	337c      	adds	r3, #124	; 0x7c
 8013642:	4a8d      	ldr	r2, [pc, #564]	; (8013878 <createProblem+0x129d0>)
 8013644:	6810      	ldr	r0, [r2, #0]
 8013646:	6018      	str	r0, [r3, #0]
 8013648:	8892      	ldrh	r2, [r2, #4]
 801364a:	809a      	strh	r2, [r3, #4]
			p->moveSize = 6;
 801364c:	687b      	ldr	r3, [r7, #4]
 801364e:	2206      	movs	r2, #6
 8013650:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,C,E,A");
 8013652:	687b      	ldr	r3, [r7, #4]
 8013654:	3340      	adds	r3, #64	; 0x40
 8013656:	4a89      	ldr	r2, [pc, #548]	; (801387c <createProblem+0x129d4>)
 8013658:	461c      	mov	r4, r3
 801365a:	4613      	mov	r3, r2
 801365c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801365e:	6020      	str	r0, [r4, #0]
 8013660:	6061      	str	r1, [r4, #4]
 8013662:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,10,13,16,18");
 8013664:	687b      	ldr	r3, [r7, #4]
 8013666:	3304      	adds	r3, #4
 8013668:	4a85      	ldr	r2, [pc, #532]	; (8013880 <createProblem+0x129d8>)
 801366a:	461c      	mov	r4, r3
 801366c:	4615      	mov	r5, r2
 801366e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8013670:	6020      	str	r0, [r4, #0]
 8013672:	6061      	str	r1, [r4, #4]
 8013674:	60a2      	str	r2, [r4, #8]
 8013676:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8013678:	687b      	ldr	r3, [r7, #4]
 801367a:	33d8      	adds	r3, #216	; 0xd8
 801367c:	4a81      	ldr	r2, [pc, #516]	; (8013884 <createProblem+0x129dc>)
 801367e:	461c      	mov	r4, r3
 8013680:	4613      	mov	r3, r2
 8013682:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013684:	6020      	str	r0, [r4, #0]
 8013686:	6061      	str	r1, [r4, #4]
 8013688:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 801368a:	687b      	ldr	r3, [r7, #4]
 801368c:	33cc      	adds	r3, #204	; 0xcc
 801368e:	4a7e      	ldr	r2, [pc, #504]	; (8013888 <createProblem+0x129e0>)
 8013690:	6810      	ldr	r0, [r2, #0]
 8013692:	6018      	str	r0, [r3, #0]
			break;
 8013694:	f007 b94e 	b.w	801a934 <createProblem+0x19a8c>
		case 616 :
			strcpy(p->name,"DUST IN THE WIND");
 8013698:	687b      	ldr	r3, [r7, #4]
 801369a:	337c      	adds	r3, #124	; 0x7c
 801369c:	4a7b      	ldr	r2, [pc, #492]	; (801388c <createProblem+0x129e4>)
 801369e:	461d      	mov	r5, r3
 80136a0:	4614      	mov	r4, r2
 80136a2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80136a4:	6028      	str	r0, [r5, #0]
 80136a6:	6069      	str	r1, [r5, #4]
 80136a8:	60aa      	str	r2, [r5, #8]
 80136aa:	60eb      	str	r3, [r5, #12]
 80136ac:	7823      	ldrb	r3, [r4, #0]
 80136ae:	742b      	strb	r3, [r5, #16]
			p->moveSize = 6;
 80136b0:	687b      	ldr	r3, [r7, #4]
 80136b2:	2206      	movs	r2, #6
 80136b4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,H,E,G,D");
 80136b6:	687b      	ldr	r3, [r7, #4]
 80136b8:	3340      	adds	r3, #64	; 0x40
 80136ba:	4a75      	ldr	r2, [pc, #468]	; (8013890 <createProblem+0x129e8>)
 80136bc:	461c      	mov	r4, r3
 80136be:	4613      	mov	r3, r2
 80136c0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80136c2:	6020      	str	r0, [r4, #0]
 80136c4:	6061      	str	r1, [r4, #4]
 80136c6:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,10,14,17,18");
 80136c8:	687b      	ldr	r3, [r7, #4]
 80136ca:	3304      	adds	r3, #4
 80136cc:	4a71      	ldr	r2, [pc, #452]	; (8013894 <createProblem+0x129ec>)
 80136ce:	461c      	mov	r4, r3
 80136d0:	4615      	mov	r5, r2
 80136d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80136d4:	6020      	str	r0, [r4, #0]
 80136d6:	6061      	str	r1, [r4, #4]
 80136d8:	60a2      	str	r2, [r4, #8]
 80136da:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80136dc:	687b      	ldr	r3, [r7, #4]
 80136de:	33d8      	adds	r3, #216	; 0xd8
 80136e0:	4a63      	ldr	r2, [pc, #396]	; (8013870 <createProblem+0x129c8>)
 80136e2:	461c      	mov	r4, r3
 80136e4:	4613      	mov	r3, r2
 80136e6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80136e8:	6020      	str	r0, [r4, #0]
 80136ea:	6061      	str	r1, [r4, #4]
 80136ec:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 80136ee:	687b      	ldr	r3, [r7, #4]
 80136f0:	33cc      	adds	r3, #204	; 0xcc
 80136f2:	4a65      	ldr	r2, [pc, #404]	; (8013888 <createProblem+0x129e0>)
 80136f4:	6810      	ldr	r0, [r2, #0]
 80136f6:	6018      	str	r0, [r3, #0]
			break;
 80136f8:	f007 b91c 	b.w	801a934 <createProblem+0x19a8c>
		case 617 :
			strcpy(p->name,"EM'S BUNNY");
 80136fc:	687b      	ldr	r3, [r7, #4]
 80136fe:	337c      	adds	r3, #124	; 0x7c
 8013700:	4965      	ldr	r1, [pc, #404]	; (8013898 <createProblem+0x129f0>)
 8013702:	461a      	mov	r2, r3
 8013704:	460b      	mov	r3, r1
 8013706:	cb03      	ldmia	r3!, {r0, r1}
 8013708:	6010      	str	r0, [r2, #0]
 801370a:	6051      	str	r1, [r2, #4]
 801370c:	8819      	ldrh	r1, [r3, #0]
 801370e:	789b      	ldrb	r3, [r3, #2]
 8013710:	8111      	strh	r1, [r2, #8]
 8013712:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 8013714:	687b      	ldr	r3, [r7, #4]
 8013716:	2206      	movs	r2, #6
 8013718:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,H,I,E,I");
 801371a:	687b      	ldr	r3, [r7, #4]
 801371c:	3340      	adds	r3, #64	; 0x40
 801371e:	4a5f      	ldr	r2, [pc, #380]	; (801389c <createProblem+0x129f4>)
 8013720:	461c      	mov	r4, r3
 8013722:	4613      	mov	r3, r2
 8013724:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013726:	6020      	str	r0, [r4, #0]
 8013728:	6061      	str	r1, [r4, #4]
 801372a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,7,8,10,14,18");
 801372c:	687b      	ldr	r3, [r7, #4]
 801372e:	3304      	adds	r3, #4
 8013730:	4a5b      	ldr	r2, [pc, #364]	; (80138a0 <createProblem+0x129f8>)
 8013732:	461c      	mov	r4, r3
 8013734:	4613      	mov	r3, r2
 8013736:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013738:	6020      	str	r0, [r4, #0]
 801373a:	6061      	str	r1, [r4, #4]
 801373c:	60a2      	str	r2, [r4, #8]
 801373e:	881a      	ldrh	r2, [r3, #0]
 8013740:	789b      	ldrb	r3, [r3, #2]
 8013742:	81a2      	strh	r2, [r4, #12]
 8013744:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8013746:	687b      	ldr	r3, [r7, #4]
 8013748:	33d8      	adds	r3, #216	; 0xd8
 801374a:	4a49      	ldr	r2, [pc, #292]	; (8013870 <createProblem+0x129c8>)
 801374c:	461c      	mov	r4, r3
 801374e:	4613      	mov	r3, r2
 8013750:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013752:	6020      	str	r0, [r4, #0]
 8013754:	6061      	str	r1, [r4, #4]
 8013756:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 8013758:	687b      	ldr	r3, [r7, #4]
 801375a:	33cc      	adds	r3, #204	; 0xcc
 801375c:	4a45      	ldr	r2, [pc, #276]	; (8013874 <createProblem+0x129cc>)
 801375e:	8811      	ldrh	r1, [r2, #0]
 8013760:	7892      	ldrb	r2, [r2, #2]
 8013762:	8019      	strh	r1, [r3, #0]
 8013764:	709a      	strb	r2, [r3, #2]
			break;
 8013766:	f007 b8e5 	b.w	801a934 <createProblem+0x19a8c>
		case 618 :
			strcpy(p->name,"DUDDY QUALIFIED");
 801376a:	687b      	ldr	r3, [r7, #4]
 801376c:	337c      	adds	r3, #124	; 0x7c
 801376e:	4a4d      	ldr	r2, [pc, #308]	; (80138a4 <createProblem+0x129fc>)
 8013770:	461c      	mov	r4, r3
 8013772:	4615      	mov	r5, r2
 8013774:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8013776:	6020      	str	r0, [r4, #0]
 8013778:	6061      	str	r1, [r4, #4]
 801377a:	60a2      	str	r2, [r4, #8]
 801377c:	60e3      	str	r3, [r4, #12]
			p->moveSize = 7;
 801377e:	687b      	ldr	r3, [r7, #4]
 8013780:	2207      	movs	r2, #7
 8013782:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,F,A,D,E,I");
 8013784:	687b      	ldr	r3, [r7, #4]
 8013786:	3340      	adds	r3, #64	; 0x40
 8013788:	4a47      	ldr	r2, [pc, #284]	; (80138a8 <createProblem+0x12a00>)
 801378a:	461c      	mov	r4, r3
 801378c:	4613      	mov	r3, r2
 801378e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013790:	6020      	str	r0, [r4, #0]
 8013792:	6061      	str	r1, [r4, #4]
 8013794:	60a2      	str	r2, [r4, #8]
 8013796:	881b      	ldrh	r3, [r3, #0]
 8013798:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,11,14,15,16,18");
 801379a:	687b      	ldr	r3, [r7, #4]
 801379c:	3304      	adds	r3, #4
 801379e:	4a43      	ldr	r2, [pc, #268]	; (80138ac <createProblem+0x12a04>)
 80137a0:	461d      	mov	r5, r3
 80137a2:	4614      	mov	r4, r2
 80137a4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80137a6:	6028      	str	r0, [r5, #0]
 80137a8:	6069      	str	r1, [r5, #4]
 80137aa:	60aa      	str	r2, [r5, #8]
 80137ac:	60eb      	str	r3, [r5, #12]
 80137ae:	8823      	ldrh	r3, [r4, #0]
 80137b0:	78a2      	ldrb	r2, [r4, #2]
 80137b2:	822b      	strh	r3, [r5, #16]
 80137b4:	4613      	mov	r3, r2
 80137b6:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80137b8:	687b      	ldr	r3, [r7, #4]
 80137ba:	33d8      	adds	r3, #216	; 0xd8
 80137bc:	4a3c      	ldr	r2, [pc, #240]	; (80138b0 <createProblem+0x12a08>)
 80137be:	461c      	mov	r4, r3
 80137c0:	4613      	mov	r3, r2
 80137c2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80137c4:	6020      	str	r0, [r4, #0]
 80137c6:	6061      	str	r1, [r4, #4]
 80137c8:	60a2      	str	r2, [r4, #8]
 80137ca:	881b      	ldrh	r3, [r3, #0]
 80137cc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 80137ce:	687b      	ldr	r3, [r7, #4]
 80137d0:	33cc      	adds	r3, #204	; 0xcc
 80137d2:	4a38      	ldr	r2, [pc, #224]	; (80138b4 <createProblem+0x12a0c>)
 80137d4:	6810      	ldr	r0, [r2, #0]
 80137d6:	6018      	str	r0, [r3, #0]
			break;
 80137d8:	f007 b8ac 	b.w	801a934 <createProblem+0x19a8c>
		case 619 :
			strcpy(p->name,"A MATCH MADE IN HEAVEN");
 80137dc:	687b      	ldr	r3, [r7, #4]
 80137de:	337c      	adds	r3, #124	; 0x7c
 80137e0:	4a35      	ldr	r2, [pc, #212]	; (80138b8 <createProblem+0x12a10>)
 80137e2:	461c      	mov	r4, r3
 80137e4:	4615      	mov	r5, r2
 80137e6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80137e8:	6020      	str	r0, [r4, #0]
 80137ea:	6061      	str	r1, [r4, #4]
 80137ec:	60a2      	str	r2, [r4, #8]
 80137ee:	60e3      	str	r3, [r4, #12]
 80137f0:	6828      	ldr	r0, [r5, #0]
 80137f2:	6120      	str	r0, [r4, #16]
 80137f4:	88ab      	ldrh	r3, [r5, #4]
 80137f6:	79aa      	ldrb	r2, [r5, #6]
 80137f8:	82a3      	strh	r3, [r4, #20]
 80137fa:	4613      	mov	r3, r2
 80137fc:	75a3      	strb	r3, [r4, #22]
			p->moveSize = 5;
 80137fe:	687b      	ldr	r3, [r7, #4]
 8013800:	2205      	movs	r2, #5
 8013802:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,F,D,D");
 8013804:	687b      	ldr	r3, [r7, #4]
 8013806:	3340      	adds	r3, #64	; 0x40
 8013808:	492c      	ldr	r1, [pc, #176]	; (80138bc <createProblem+0x12a14>)
 801380a:	461a      	mov	r2, r3
 801380c:	460b      	mov	r3, r1
 801380e:	cb03      	ldmia	r3!, {r0, r1}
 8013810:	6010      	str	r0, [r2, #0]
 8013812:	6051      	str	r1, [r2, #4]
 8013814:	881b      	ldrh	r3, [r3, #0]
 8013816:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,6,11,15,18");
 8013818:	687b      	ldr	r3, [r7, #4]
 801381a:	3304      	adds	r3, #4
 801381c:	4a28      	ldr	r2, [pc, #160]	; (80138c0 <createProblem+0x12a18>)
 801381e:	461c      	mov	r4, r3
 8013820:	4613      	mov	r3, r2
 8013822:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013824:	6020      	str	r0, [r4, #0]
 8013826:	6061      	str	r1, [r4, #4]
 8013828:	60a2      	str	r2, [r4, #8]
 801382a:	781b      	ldrb	r3, [r3, #0]
 801382c:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 801382e:	687b      	ldr	r3, [r7, #4]
 8013830:	33d8      	adds	r3, #216	; 0xd8
 8013832:	4924      	ldr	r1, [pc, #144]	; (80138c4 <createProblem+0x12a1c>)
 8013834:	461a      	mov	r2, r3
 8013836:	460b      	mov	r3, r1
 8013838:	cb03      	ldmia	r3!, {r0, r1}
 801383a:	6010      	str	r0, [r2, #0]
 801383c:	6051      	str	r1, [r2, #4]
 801383e:	881b      	ldrh	r3, [r3, #0]
 8013840:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 8013842:	687b      	ldr	r3, [r7, #4]
 8013844:	33cc      	adds	r3, #204	; 0xcc
 8013846:	4a20      	ldr	r2, [pc, #128]	; (80138c8 <createProblem+0x12a20>)
 8013848:	6810      	ldr	r0, [r2, #0]
 801384a:	6018      	str	r0, [r3, #0]
			break;
 801384c:	f007 b872 	b.w	801a934 <createProblem+0x19a8c>
 8013850:	08027288 	.word	0x08027288
 8013854:	080272a0 	.word	0x080272a0
 8013858:	080272b0 	.word	0x080272b0
 801385c:	080209d8 	.word	0x080209d8
 8013860:	08020830 	.word	0x08020830
 8013864:	080272c8 	.word	0x080272c8
 8013868:	080272d0 	.word	0x080272d0
 801386c:	08025460 	.word	0x08025460
 8013870:	0802091c 	.word	0x0802091c
 8013874:	080208f0 	.word	0x080208f0
 8013878:	080272dc 	.word	0x080272dc
 801387c:	080272e4 	.word	0x080272e4
 8013880:	08023dcc 	.word	0x08023dcc
 8013884:	08020e90 	.word	0x08020e90
 8013888:	08020928 	.word	0x08020928
 801388c:	080272f0 	.word	0x080272f0
 8013890:	08027304 	.word	0x08027304
 8013894:	08025f88 	.word	0x08025f88
 8013898:	08027310 	.word	0x08027310
 801389c:	0802731c 	.word	0x0802731c
 80138a0:	08027328 	.word	0x08027328
 80138a4:	08027338 	.word	0x08027338
 80138a8:	08027348 	.word	0x08027348
 80138ac:	08027358 	.word	0x08027358
 80138b0:	08020a14 	.word	0x08020a14
 80138b4:	080209a4 	.word	0x080209a4
 80138b8:	0802736c 	.word	0x0802736c
 80138bc:	08027384 	.word	0x08027384
 80138c0:	08027390 	.word	0x08027390
 80138c4:	080208a0 	.word	0x080208a0
 80138c8:	08020dc8 	.word	0x08020dc8
		case 62 :
			strcpy(p->name,"GRÜMPU-TURNIER");
 80138cc:	687b      	ldr	r3, [r7, #4]
 80138ce:	337c      	adds	r3, #124	; 0x7c
 80138d0:	4ab5      	ldr	r2, [pc, #724]	; (8013ba8 <createProblem+0x12d00>)
 80138d2:	461c      	mov	r4, r3
 80138d4:	4615      	mov	r5, r2
 80138d6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80138d8:	6020      	str	r0, [r4, #0]
 80138da:	6061      	str	r1, [r4, #4]
 80138dc:	60a2      	str	r2, [r4, #8]
 80138de:	60e3      	str	r3, [r4, #12]
			p->moveSize = 7;
 80138e0:	687b      	ldr	r3, [r7, #4]
 80138e2:	2207      	movs	r2, #7
 80138e4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,A,E,A,E,A");
 80138e6:	687b      	ldr	r3, [r7, #4]
 80138e8:	3340      	adds	r3, #64	; 0x40
 80138ea:	4ab0      	ldr	r2, [pc, #704]	; (8013bac <createProblem+0x12d04>)
 80138ec:	461c      	mov	r4, r3
 80138ee:	4613      	mov	r3, r2
 80138f0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80138f2:	6020      	str	r0, [r4, #0]
 80138f4:	6061      	str	r1, [r4, #4]
 80138f6:	60a2      	str	r2, [r4, #8]
 80138f8:	881b      	ldrh	r3, [r3, #0]
 80138fa:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,9,9,12,14,16,18");
 80138fc:	687b      	ldr	r3, [r7, #4]
 80138fe:	3304      	adds	r3, #4
 8013900:	4aab      	ldr	r2, [pc, #684]	; (8013bb0 <createProblem+0x12d08>)
 8013902:	461d      	mov	r5, r3
 8013904:	4614      	mov	r4, r2
 8013906:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013908:	6028      	str	r0, [r5, #0]
 801390a:	6069      	str	r1, [r5, #4]
 801390c:	60aa      	str	r2, [r5, #8]
 801390e:	60eb      	str	r3, [r5, #12]
 8013910:	8823      	ldrh	r3, [r4, #0]
 8013912:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8013914:	687b      	ldr	r3, [r7, #4]
 8013916:	33d8      	adds	r3, #216	; 0xd8
 8013918:	4aa6      	ldr	r2, [pc, #664]	; (8013bb4 <createProblem+0x12d0c>)
 801391a:	461c      	mov	r4, r3
 801391c:	4613      	mov	r3, r2
 801391e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013920:	6020      	str	r0, [r4, #0]
 8013922:	6061      	str	r1, [r4, #4]
 8013924:	60a2      	str	r2, [r4, #8]
 8013926:	881b      	ldrh	r3, [r3, #0]
 8013928:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 801392a:	687b      	ldr	r3, [r7, #4]
 801392c:	33cc      	adds	r3, #204	; 0xcc
 801392e:	4aa2      	ldr	r2, [pc, #648]	; (8013bb8 <createProblem+0x12d10>)
 8013930:	6810      	ldr	r0, [r2, #0]
 8013932:	6018      	str	r0, [r3, #0]
			break;
 8013934:	f006 bffe 	b.w	801a934 <createProblem+0x19a8c>
		case 620 :
			strcpy(p->name,"CHEESE AND PICKLE");
 8013938:	687b      	ldr	r3, [r7, #4]
 801393a:	337c      	adds	r3, #124	; 0x7c
 801393c:	4a9f      	ldr	r2, [pc, #636]	; (8013bbc <createProblem+0x12d14>)
 801393e:	461d      	mov	r5, r3
 8013940:	4614      	mov	r4, r2
 8013942:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013944:	6028      	str	r0, [r5, #0]
 8013946:	6069      	str	r1, [r5, #4]
 8013948:	60aa      	str	r2, [r5, #8]
 801394a:	60eb      	str	r3, [r5, #12]
 801394c:	8823      	ldrh	r3, [r4, #0]
 801394e:	822b      	strh	r3, [r5, #16]
			p->moveSize = 7;
 8013950:	687b      	ldr	r3, [r7, #4]
 8013952:	2207      	movs	r2, #7
 8013954:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,E,B,E,A,E,A");
 8013956:	687b      	ldr	r3, [r7, #4]
 8013958:	3340      	adds	r3, #64	; 0x40
 801395a:	4a99      	ldr	r2, [pc, #612]	; (8013bc0 <createProblem+0x12d18>)
 801395c:	461c      	mov	r4, r3
 801395e:	4613      	mov	r3, r2
 8013960:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013962:	6020      	str	r0, [r4, #0]
 8013964:	6061      	str	r1, [r4, #4]
 8013966:	60a2      	str	r2, [r4, #8]
 8013968:	881b      	ldrh	r3, [r3, #0]
 801396a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,9,10,12,14,16,18");
 801396c:	687b      	ldr	r3, [r7, #4]
 801396e:	3304      	adds	r3, #4
 8013970:	4a94      	ldr	r2, [pc, #592]	; (8013bc4 <createProblem+0x12d1c>)
 8013972:	461d      	mov	r5, r3
 8013974:	4614      	mov	r4, r2
 8013976:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013978:	6028      	str	r0, [r5, #0]
 801397a:	6069      	str	r1, [r5, #4]
 801397c:	60aa      	str	r2, [r5, #8]
 801397e:	60eb      	str	r3, [r5, #12]
 8013980:	8823      	ldrh	r3, [r4, #0]
 8013982:	78a2      	ldrb	r2, [r4, #2]
 8013984:	822b      	strh	r3, [r5, #16]
 8013986:	4613      	mov	r3, r2
 8013988:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 801398a:	687b      	ldr	r3, [r7, #4]
 801398c:	33d8      	adds	r3, #216	; 0xd8
 801398e:	4a89      	ldr	r2, [pc, #548]	; (8013bb4 <createProblem+0x12d0c>)
 8013990:	461c      	mov	r4, r3
 8013992:	4613      	mov	r3, r2
 8013994:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013996:	6020      	str	r0, [r4, #0]
 8013998:	6061      	str	r1, [r4, #4]
 801399a:	60a2      	str	r2, [r4, #8]
 801399c:	881b      	ldrh	r3, [r3, #0]
 801399e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 80139a0:	687b      	ldr	r3, [r7, #4]
 80139a2:	33cc      	adds	r3, #204	; 0xcc
 80139a4:	4a88      	ldr	r2, [pc, #544]	; (8013bc8 <createProblem+0x12d20>)
 80139a6:	6810      	ldr	r0, [r2, #0]
 80139a8:	6018      	str	r0, [r3, #0]
			break;
 80139aa:	f006 bfc3 	b.w	801a934 <createProblem+0x19a8c>
		case 621 :
			strcpy(p->name,"GJ2");
 80139ae:	687b      	ldr	r3, [r7, #4]
 80139b0:	337c      	adds	r3, #124	; 0x7c
 80139b2:	4a86      	ldr	r2, [pc, #536]	; (8013bcc <createProblem+0x12d24>)
 80139b4:	6810      	ldr	r0, [r2, #0]
 80139b6:	6018      	str	r0, [r3, #0]
			p->moveSize = 7;
 80139b8:	687b      	ldr	r3, [r7, #4]
 80139ba:	2207      	movs	r2, #7
 80139bc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,H,F,C,D,A");
 80139be:	687b      	ldr	r3, [r7, #4]
 80139c0:	3340      	adds	r3, #64	; 0x40
 80139c2:	4a83      	ldr	r2, [pc, #524]	; (8013bd0 <createProblem+0x12d28>)
 80139c4:	461c      	mov	r4, r3
 80139c6:	4613      	mov	r3, r2
 80139c8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80139ca:	6020      	str	r0, [r4, #0]
 80139cc:	6061      	str	r1, [r4, #4]
 80139ce:	60a2      	str	r2, [r4, #8]
 80139d0:	881b      	ldrh	r3, [r3, #0]
 80139d2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,8,11,13,15,18");
 80139d4:	687b      	ldr	r3, [r7, #4]
 80139d6:	3304      	adds	r3, #4
 80139d8:	4a7e      	ldr	r2, [pc, #504]	; (8013bd4 <createProblem+0x12d2c>)
 80139da:	461d      	mov	r5, r3
 80139dc:	4614      	mov	r4, r2
 80139de:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80139e0:	6028      	str	r0, [r5, #0]
 80139e2:	6069      	str	r1, [r5, #4]
 80139e4:	60aa      	str	r2, [r5, #8]
 80139e6:	60eb      	str	r3, [r5, #12]
 80139e8:	8823      	ldrh	r3, [r4, #0]
 80139ea:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80139ec:	687b      	ldr	r3, [r7, #4]
 80139ee:	33d8      	adds	r3, #216	; 0xd8
 80139f0:	4a70      	ldr	r2, [pc, #448]	; (8013bb4 <createProblem+0x12d0c>)
 80139f2:	461c      	mov	r4, r3
 80139f4:	4613      	mov	r3, r2
 80139f6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80139f8:	6020      	str	r0, [r4, #0]
 80139fa:	6061      	str	r1, [r4, #4]
 80139fc:	60a2      	str	r2, [r4, #8]
 80139fe:	881b      	ldrh	r3, [r3, #0]
 8013a00:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8013a02:	687b      	ldr	r3, [r7, #4]
 8013a04:	33cc      	adds	r3, #204	; 0xcc
 8013a06:	4a6c      	ldr	r2, [pc, #432]	; (8013bb8 <createProblem+0x12d10>)
 8013a08:	6810      	ldr	r0, [r2, #0]
 8013a0a:	6018      	str	r0, [r3, #0]
			break;
 8013a0c:	f006 bf92 	b.w	801a934 <createProblem+0x19a8c>
		case 622 :
			strcpy(p->name,"WOA");
 8013a10:	687b      	ldr	r3, [r7, #4]
 8013a12:	337c      	adds	r3, #124	; 0x7c
 8013a14:	4a70      	ldr	r2, [pc, #448]	; (8013bd8 <createProblem+0x12d30>)
 8013a16:	6810      	ldr	r0, [r2, #0]
 8013a18:	6018      	str	r0, [r3, #0]
			p->moveSize = 7;
 8013a1a:	687b      	ldr	r3, [r7, #4]
 8013a1c:	2207      	movs	r2, #7
 8013a1e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,E,D,F,G,I");
 8013a20:	687b      	ldr	r3, [r7, #4]
 8013a22:	3340      	adds	r3, #64	; 0x40
 8013a24:	4a6d      	ldr	r2, [pc, #436]	; (8013bdc <createProblem+0x12d34>)
 8013a26:	461c      	mov	r4, r3
 8013a28:	4613      	mov	r3, r2
 8013a2a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013a2c:	6020      	str	r0, [r4, #0]
 8013a2e:	6061      	str	r1, [r4, #4]
 8013a30:	60a2      	str	r2, [r4, #8]
 8013a32:	881b      	ldrh	r3, [r3, #0]
 8013a34:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,5,9,11,13,15,18");
 8013a36:	687b      	ldr	r3, [r7, #4]
 8013a38:	3304      	adds	r3, #4
 8013a3a:	4a69      	ldr	r2, [pc, #420]	; (8013be0 <createProblem+0x12d38>)
 8013a3c:	461d      	mov	r5, r3
 8013a3e:	4614      	mov	r4, r2
 8013a40:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013a42:	6028      	str	r0, [r5, #0]
 8013a44:	6069      	str	r1, [r5, #4]
 8013a46:	60aa      	str	r2, [r5, #8]
 8013a48:	60eb      	str	r3, [r5, #12]
 8013a4a:	8823      	ldrh	r3, [r4, #0]
 8013a4c:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8013a4e:	687b      	ldr	r3, [r7, #4]
 8013a50:	33d8      	adds	r3, #216	; 0xd8
 8013a52:	4a58      	ldr	r2, [pc, #352]	; (8013bb4 <createProblem+0x12d0c>)
 8013a54:	461c      	mov	r4, r3
 8013a56:	4613      	mov	r3, r2
 8013a58:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013a5a:	6020      	str	r0, [r4, #0]
 8013a5c:	6061      	str	r1, [r4, #4]
 8013a5e:	60a2      	str	r2, [r4, #8]
 8013a60:	881b      	ldrh	r3, [r3, #0]
 8013a62:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8013a64:	687b      	ldr	r3, [r7, #4]
 8013a66:	33cc      	adds	r3, #204	; 0xcc
 8013a68:	4a5e      	ldr	r2, [pc, #376]	; (8013be4 <createProblem+0x12d3c>)
 8013a6a:	8811      	ldrh	r1, [r2, #0]
 8013a6c:	7892      	ldrb	r2, [r2, #2]
 8013a6e:	8019      	strh	r1, [r3, #0]
 8013a70:	709a      	strb	r2, [r3, #2]
			break;
 8013a72:	f006 bf5f 	b.w	801a934 <createProblem+0x19a8c>
		case 623 :
			strcpy(p->name,"ATLANTIC SEA NETTLE");
 8013a76:	687b      	ldr	r3, [r7, #4]
 8013a78:	337c      	adds	r3, #124	; 0x7c
 8013a7a:	4a5b      	ldr	r2, [pc, #364]	; (8013be8 <createProblem+0x12d40>)
 8013a7c:	461d      	mov	r5, r3
 8013a7e:	4614      	mov	r4, r2
 8013a80:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013a82:	6028      	str	r0, [r5, #0]
 8013a84:	6069      	str	r1, [r5, #4]
 8013a86:	60aa      	str	r2, [r5, #8]
 8013a88:	60eb      	str	r3, [r5, #12]
 8013a8a:	6820      	ldr	r0, [r4, #0]
 8013a8c:	6128      	str	r0, [r5, #16]
			p->moveSize = 6;
 8013a8e:	687b      	ldr	r3, [r7, #4]
 8013a90:	2206      	movs	r2, #6
 8013a92:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,C,F,B,D,A");
 8013a94:	687b      	ldr	r3, [r7, #4]
 8013a96:	3340      	adds	r3, #64	; 0x40
 8013a98:	4a54      	ldr	r2, [pc, #336]	; (8013bec <createProblem+0x12d44>)
 8013a9a:	461c      	mov	r4, r3
 8013a9c:	4613      	mov	r3, r2
 8013a9e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013aa0:	6020      	str	r0, [r4, #0]
 8013aa2:	6061      	str	r1, [r4, #4]
 8013aa4:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,8,11,12,15,18");
 8013aa6:	687b      	ldr	r3, [r7, #4]
 8013aa8:	3304      	adds	r3, #4
 8013aaa:	4a51      	ldr	r2, [pc, #324]	; (8013bf0 <createProblem+0x12d48>)
 8013aac:	461c      	mov	r4, r3
 8013aae:	4615      	mov	r5, r2
 8013ab0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8013ab2:	6020      	str	r0, [r4, #0]
 8013ab4:	6061      	str	r1, [r4, #4]
 8013ab6:	60a2      	str	r2, [r4, #8]
 8013ab8:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8013aba:	687b      	ldr	r3, [r7, #4]
 8013abc:	33d8      	adds	r3, #216	; 0xd8
 8013abe:	4a4d      	ldr	r2, [pc, #308]	; (8013bf4 <createProblem+0x12d4c>)
 8013ac0:	461c      	mov	r4, r3
 8013ac2:	4613      	mov	r3, r2
 8013ac4:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013ac6:	6020      	str	r0, [r4, #0]
 8013ac8:	6061      	str	r1, [r4, #4]
 8013aca:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 8013acc:	687b      	ldr	r3, [r7, #4]
 8013ace:	33cc      	adds	r3, #204	; 0xcc
 8013ad0:	4a3d      	ldr	r2, [pc, #244]	; (8013bc8 <createProblem+0x12d20>)
 8013ad2:	6810      	ldr	r0, [r2, #0]
 8013ad4:	6018      	str	r0, [r3, #0]
			break;
 8013ad6:	f006 bf2d 	b.w	801a934 <createProblem+0x19a8c>
		case 624 :
			strcpy(p->name,"5WL^4/(384EI)");
 8013ada:	687b      	ldr	r3, [r7, #4]
 8013adc:	337c      	adds	r3, #124	; 0x7c
 8013ade:	4a46      	ldr	r2, [pc, #280]	; (8013bf8 <createProblem+0x12d50>)
 8013ae0:	461c      	mov	r4, r3
 8013ae2:	4613      	mov	r3, r2
 8013ae4:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013ae6:	6020      	str	r0, [r4, #0]
 8013ae8:	6061      	str	r1, [r4, #4]
 8013aea:	60a2      	str	r2, [r4, #8]
 8013aec:	881b      	ldrh	r3, [r3, #0]
 8013aee:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 8013af0:	687b      	ldr	r3, [r7, #4]
 8013af2:	2206      	movs	r2, #6
 8013af4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,F,A,B,A");
 8013af6:	687b      	ldr	r3, [r7, #4]
 8013af8:	3340      	adds	r3, #64	; 0x40
 8013afa:	4a40      	ldr	r2, [pc, #256]	; (8013bfc <createProblem+0x12d54>)
 8013afc:	461c      	mov	r4, r3
 8013afe:	4613      	mov	r3, r2
 8013b00:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013b02:	6020      	str	r0, [r4, #0]
 8013b04:	6061      	str	r1, [r4, #4]
 8013b06:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,11,14,15,18");
 8013b08:	687b      	ldr	r3, [r7, #4]
 8013b0a:	3304      	adds	r3, #4
 8013b0c:	4a3c      	ldr	r2, [pc, #240]	; (8013c00 <createProblem+0x12d58>)
 8013b0e:	461c      	mov	r4, r3
 8013b10:	4615      	mov	r5, r2
 8013b12:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8013b14:	6020      	str	r0, [r4, #0]
 8013b16:	6061      	str	r1, [r4, #4]
 8013b18:	60a2      	str	r2, [r4, #8]
 8013b1a:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8013b1c:	687b      	ldr	r3, [r7, #4]
 8013b1e:	33d8      	adds	r3, #216	; 0xd8
 8013b20:	4a34      	ldr	r2, [pc, #208]	; (8013bf4 <createProblem+0x12d4c>)
 8013b22:	461c      	mov	r4, r3
 8013b24:	4613      	mov	r3, r2
 8013b26:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013b28:	6020      	str	r0, [r4, #0]
 8013b2a:	6061      	str	r1, [r4, #4]
 8013b2c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7C");
 8013b2e:	687b      	ldr	r3, [r7, #4]
 8013b30:	33cc      	adds	r3, #204	; 0xcc
 8013b32:	4a34      	ldr	r2, [pc, #208]	; (8013c04 <createProblem+0x12d5c>)
 8013b34:	8811      	ldrh	r1, [r2, #0]
 8013b36:	7892      	ldrb	r2, [r2, #2]
 8013b38:	8019      	strh	r1, [r3, #0]
 8013b3a:	709a      	strb	r2, [r3, #2]
			break;
 8013b3c:	f006 befa 	b.w	801a934 <createProblem+0x19a8c>
		case 625 :
			strcpy(p->name,"MEK");
 8013b40:	687b      	ldr	r3, [r7, #4]
 8013b42:	337c      	adds	r3, #124	; 0x7c
 8013b44:	4a30      	ldr	r2, [pc, #192]	; (8013c08 <createProblem+0x12d60>)
 8013b46:	6810      	ldr	r0, [r2, #0]
 8013b48:	6018      	str	r0, [r3, #0]
			p->moveSize = 8;
 8013b4a:	687b      	ldr	r3, [r7, #4]
 8013b4c:	2208      	movs	r2, #8
 8013b4e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,D,B,D,G,E,I");
 8013b50:	687b      	ldr	r3, [r7, #4]
 8013b52:	3340      	adds	r3, #64	; 0x40
 8013b54:	4a2d      	ldr	r2, [pc, #180]	; (8013c0c <createProblem+0x12d64>)
 8013b56:	461c      	mov	r4, r3
 8013b58:	4615      	mov	r5, r2
 8013b5a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8013b5c:	6020      	str	r0, [r4, #0]
 8013b5e:	6061      	str	r1, [r4, #4]
 8013b60:	60a2      	str	r2, [r4, #8]
 8013b62:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"10,13,11,6,7,4,16,18");
 8013b64:	687b      	ldr	r3, [r7, #4]
 8013b66:	3304      	adds	r3, #4
 8013b68:	4a29      	ldr	r2, [pc, #164]	; (8013c10 <createProblem+0x12d68>)
 8013b6a:	461d      	mov	r5, r3
 8013b6c:	4614      	mov	r4, r2
 8013b6e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013b70:	6028      	str	r0, [r5, #0]
 8013b72:	6069      	str	r1, [r5, #4]
 8013b74:	60aa      	str	r2, [r5, #8]
 8013b76:	60eb      	str	r3, [r5, #12]
 8013b78:	6820      	ldr	r0, [r4, #0]
 8013b7a:	6128      	str	r0, [r5, #16]
 8013b7c:	7923      	ldrb	r3, [r4, #4]
 8013b7e:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "d,d,d,s,d,s,d,e");
 8013b80:	687b      	ldr	r3, [r7, #4]
 8013b82:	33d8      	adds	r3, #216	; 0xd8
 8013b84:	4a23      	ldr	r2, [pc, #140]	; (8013c14 <createProblem+0x12d6c>)
 8013b86:	461c      	mov	r4, r3
 8013b88:	4615      	mov	r5, r2
 8013b8a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8013b8c:	6020      	str	r0, [r4, #0]
 8013b8e:	6061      	str	r1, [r4, #4]
 8013b90:	60a2      	str	r2, [r4, #8]
 8013b92:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8013b94:	687b      	ldr	r3, [r7, #4]
 8013b96:	33cc      	adds	r3, #204	; 0xcc
 8013b98:	4a12      	ldr	r2, [pc, #72]	; (8013be4 <createProblem+0x12d3c>)
 8013b9a:	8811      	ldrh	r1, [r2, #0]
 8013b9c:	7892      	ldrb	r2, [r2, #2]
 8013b9e:	8019      	strh	r1, [r3, #0]
 8013ba0:	709a      	strb	r2, [r3, #2]
			break;
 8013ba2:	f006 bec7 	b.w	801a934 <createProblem+0x19a8c>
 8013ba6:	bf00      	nop
 8013ba8:	080273a0 	.word	0x080273a0
 8013bac:	080273b0 	.word	0x080273b0
 8013bb0:	080273c0 	.word	0x080273c0
 8013bb4:	08020a14 	.word	0x08020a14
 8013bb8:	08020830 	.word	0x08020830
 8013bbc:	080273d4 	.word	0x080273d4
 8013bc0:	080273e8 	.word	0x080273e8
 8013bc4:	080273f8 	.word	0x080273f8
 8013bc8:	08020928 	.word	0x08020928
 8013bcc:	0802740c 	.word	0x0802740c
 8013bd0:	08027410 	.word	0x08027410
 8013bd4:	08027420 	.word	0x08027420
 8013bd8:	08027434 	.word	0x08027434
 8013bdc:	08027438 	.word	0x08027438
 8013be0:	08027448 	.word	0x08027448
 8013be4:	08020874 	.word	0x08020874
 8013be8:	0802745c 	.word	0x0802745c
 8013bec:	08027470 	.word	0x08027470
 8013bf0:	0802747c 	.word	0x0802747c
 8013bf4:	0802091c 	.word	0x0802091c
 8013bf8:	0802748c 	.word	0x0802748c
 8013bfc:	0802749c 	.word	0x0802749c
 8013c00:	080274a8 	.word	0x080274a8
 8013c04:	08020b0c 	.word	0x08020b0c
 8013c08:	080274b8 	.word	0x080274b8
 8013c0c:	080274bc 	.word	0x080274bc
 8013c10:	080274cc 	.word	0x080274cc
 8013c14:	080274e4 	.word	0x080274e4
		case 626 :
			strcpy(p->name,"LOPPULÄMPPÄ");
 8013c18:	687b      	ldr	r3, [r7, #4]
 8013c1a:	337c      	adds	r3, #124	; 0x7c
 8013c1c:	4abd      	ldr	r2, [pc, #756]	; (8013f14 <createProblem+0x1306c>)
 8013c1e:	461c      	mov	r4, r3
 8013c20:	4613      	mov	r3, r2
 8013c22:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013c24:	6020      	str	r0, [r4, #0]
 8013c26:	6061      	str	r1, [r4, #4]
 8013c28:	60a2      	str	r2, [r4, #8]
 8013c2a:	881b      	ldrh	r3, [r3, #0]
 8013c2c:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 8013c2e:	687b      	ldr	r3, [r7, #4]
 8013c30:	2206      	movs	r2, #6
 8013c32:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,E,D,G,I");
 8013c34:	687b      	ldr	r3, [r7, #4]
 8013c36:	3340      	adds	r3, #64	; 0x40
 8013c38:	4ab7      	ldr	r2, [pc, #732]	; (8013f18 <createProblem+0x13070>)
 8013c3a:	461c      	mov	r4, r3
 8013c3c:	4613      	mov	r3, r2
 8013c3e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013c40:	6020      	str	r0, [r4, #0]
 8013c42:	6061      	str	r1, [r4, #4]
 8013c44:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,12,11,17,18");
 8013c46:	687b      	ldr	r3, [r7, #4]
 8013c48:	3304      	adds	r3, #4
 8013c4a:	4ab4      	ldr	r2, [pc, #720]	; (8013f1c <createProblem+0x13074>)
 8013c4c:	461c      	mov	r4, r3
 8013c4e:	4615      	mov	r5, r2
 8013c50:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8013c52:	6020      	str	r0, [r4, #0]
 8013c54:	6061      	str	r1, [r4, #4]
 8013c56:	60a2      	str	r2, [r4, #8]
 8013c58:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8013c5a:	687b      	ldr	r3, [r7, #4]
 8013c5c:	33d8      	adds	r3, #216	; 0xd8
 8013c5e:	4ab0      	ldr	r2, [pc, #704]	; (8013f20 <createProblem+0x13078>)
 8013c60:	461c      	mov	r4, r3
 8013c62:	4613      	mov	r3, r2
 8013c64:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013c66:	6020      	str	r0, [r4, #0]
 8013c68:	6061      	str	r1, [r4, #4]
 8013c6a:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8013c6c:	687b      	ldr	r3, [r7, #4]
 8013c6e:	33cc      	adds	r3, #204	; 0xcc
 8013c70:	4aac      	ldr	r2, [pc, #688]	; (8013f24 <createProblem+0x1307c>)
 8013c72:	6810      	ldr	r0, [r2, #0]
 8013c74:	6018      	str	r0, [r3, #0]
			break;
 8013c76:	f006 be5d 	b.w	801a934 <createProblem+0x19a8c>
		case 627 :
			strcpy(p->name,"COSTA NEGRA");
 8013c7a:	687b      	ldr	r3, [r7, #4]
 8013c7c:	337c      	adds	r3, #124	; 0x7c
 8013c7e:	4aaa      	ldr	r2, [pc, #680]	; (8013f28 <createProblem+0x13080>)
 8013c80:	461c      	mov	r4, r3
 8013c82:	4613      	mov	r3, r2
 8013c84:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013c86:	6020      	str	r0, [r4, #0]
 8013c88:	6061      	str	r1, [r4, #4]
 8013c8a:	60a2      	str	r2, [r4, #8]
			p->moveSize = 9;
 8013c8c:	687b      	ldr	r3, [r7, #4]
 8013c8e:	2209      	movs	r2, #9
 8013c90:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,B,E,C,I,G,I");
 8013c92:	687b      	ldr	r3, [r7, #4]
 8013c94:	3340      	adds	r3, #64	; 0x40
 8013c96:	4aa5      	ldr	r2, [pc, #660]	; (8013f2c <createProblem+0x13084>)
 8013c98:	461d      	mov	r5, r3
 8013c9a:	4614      	mov	r4, r2
 8013c9c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013c9e:	6028      	str	r0, [r5, #0]
 8013ca0:	6069      	str	r1, [r5, #4]
 8013ca2:	60aa      	str	r2, [r5, #8]
 8013ca4:	60eb      	str	r3, [r5, #12]
 8013ca6:	8823      	ldrh	r3, [r4, #0]
 8013ca8:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,6,8,10,12,13,14,15,18");
 8013caa:	687b      	ldr	r3, [r7, #4]
 8013cac:	3304      	adds	r3, #4
 8013cae:	4aa0      	ldr	r2, [pc, #640]	; (8013f30 <createProblem+0x13088>)
 8013cb0:	461d      	mov	r5, r3
 8013cb2:	4614      	mov	r4, r2
 8013cb4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013cb6:	6028      	str	r0, [r5, #0]
 8013cb8:	6069      	str	r1, [r5, #4]
 8013cba:	60aa      	str	r2, [r5, #8]
 8013cbc:	60eb      	str	r3, [r5, #12]
 8013cbe:	cc03      	ldmia	r4!, {r0, r1}
 8013cc0:	6128      	str	r0, [r5, #16]
 8013cc2:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8013cc4:	687b      	ldr	r3, [r7, #4]
 8013cc6:	33d8      	adds	r3, #216	; 0xd8
 8013cc8:	4a9a      	ldr	r2, [pc, #616]	; (8013f34 <createProblem+0x1308c>)
 8013cca:	461d      	mov	r5, r3
 8013ccc:	4614      	mov	r4, r2
 8013cce:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013cd0:	6028      	str	r0, [r5, #0]
 8013cd2:	6069      	str	r1, [r5, #4]
 8013cd4:	60aa      	str	r2, [r5, #8]
 8013cd6:	60eb      	str	r3, [r5, #12]
 8013cd8:	8823      	ldrh	r3, [r4, #0]
 8013cda:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6C");
 8013cdc:	687b      	ldr	r3, [r7, #4]
 8013cde:	33cc      	adds	r3, #204	; 0xcc
 8013ce0:	4a95      	ldr	r2, [pc, #596]	; (8013f38 <createProblem+0x13090>)
 8013ce2:	8811      	ldrh	r1, [r2, #0]
 8013ce4:	7892      	ldrb	r2, [r2, #2]
 8013ce6:	8019      	strh	r1, [r3, #0]
 8013ce8:	709a      	strb	r2, [r3, #2]
			break;
 8013cea:	f006 be23 	b.w	801a934 <createProblem+0x19a8c>
		case 628 :
			strcpy(p->name,"SALMON SNAKE");
 8013cee:	687b      	ldr	r3, [r7, #4]
 8013cf0:	337c      	adds	r3, #124	; 0x7c
 8013cf2:	4a92      	ldr	r2, [pc, #584]	; (8013f3c <createProblem+0x13094>)
 8013cf4:	461c      	mov	r4, r3
 8013cf6:	4613      	mov	r3, r2
 8013cf8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013cfa:	6020      	str	r0, [r4, #0]
 8013cfc:	6061      	str	r1, [r4, #4]
 8013cfe:	60a2      	str	r2, [r4, #8]
 8013d00:	781b      	ldrb	r3, [r3, #0]
 8013d02:	7323      	strb	r3, [r4, #12]
			p->moveSize = 5;
 8013d04:	687b      	ldr	r3, [r7, #4]
 8013d06:	2205      	movs	r2, #5
 8013d08:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,F,D,A");
 8013d0a:	687b      	ldr	r3, [r7, #4]
 8013d0c:	3340      	adds	r3, #64	; 0x40
 8013d0e:	498c      	ldr	r1, [pc, #560]	; (8013f40 <createProblem+0x13098>)
 8013d10:	461a      	mov	r2, r3
 8013d12:	460b      	mov	r3, r1
 8013d14:	cb03      	ldmia	r3!, {r0, r1}
 8013d16:	6010      	str	r0, [r2, #0]
 8013d18:	6051      	str	r1, [r2, #4]
 8013d1a:	881b      	ldrh	r3, [r3, #0]
 8013d1c:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,9,11,15,18");
 8013d1e:	687b      	ldr	r3, [r7, #4]
 8013d20:	3304      	adds	r3, #4
 8013d22:	4a88      	ldr	r2, [pc, #544]	; (8013f44 <createProblem+0x1309c>)
 8013d24:	461c      	mov	r4, r3
 8013d26:	4613      	mov	r3, r2
 8013d28:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013d2a:	6020      	str	r0, [r4, #0]
 8013d2c:	6061      	str	r1, [r4, #4]
 8013d2e:	60a2      	str	r2, [r4, #8]
 8013d30:	781b      	ldrb	r3, [r3, #0]
 8013d32:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8013d34:	687b      	ldr	r3, [r7, #4]
 8013d36:	33d8      	adds	r3, #216	; 0xd8
 8013d38:	4983      	ldr	r1, [pc, #524]	; (8013f48 <createProblem+0x130a0>)
 8013d3a:	461a      	mov	r2, r3
 8013d3c:	460b      	mov	r3, r1
 8013d3e:	cb03      	ldmia	r3!, {r0, r1}
 8013d40:	6010      	str	r0, [r2, #0]
 8013d42:	6051      	str	r1, [r2, #4]
 8013d44:	881b      	ldrh	r3, [r3, #0]
 8013d46:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 8013d48:	687b      	ldr	r3, [r7, #4]
 8013d4a:	33cc      	adds	r3, #204	; 0xcc
 8013d4c:	4a7f      	ldr	r2, [pc, #508]	; (8013f4c <createProblem+0x130a4>)
 8013d4e:	8811      	ldrh	r1, [r2, #0]
 8013d50:	7892      	ldrb	r2, [r2, #2]
 8013d52:	8019      	strh	r1, [r3, #0]
 8013d54:	709a      	strb	r2, [r3, #2]
			break;
 8013d56:	f006 bded 	b.w	801a934 <createProblem+0x19a8c>
		case 629 :
			strcpy(p->name,"FOUR");
 8013d5a:	687b      	ldr	r3, [r7, #4]
 8013d5c:	337c      	adds	r3, #124	; 0x7c
 8013d5e:	4a7c      	ldr	r2, [pc, #496]	; (8013f50 <createProblem+0x130a8>)
 8013d60:	6810      	ldr	r0, [r2, #0]
 8013d62:	6018      	str	r0, [r3, #0]
 8013d64:	7912      	ldrb	r2, [r2, #4]
 8013d66:	711a      	strb	r2, [r3, #4]
			p->moveSize = 7;
 8013d68:	687b      	ldr	r3, [r7, #4]
 8013d6a:	2207      	movs	r2, #7
 8013d6c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,G,E,D,I,H,I");
 8013d6e:	687b      	ldr	r3, [r7, #4]
 8013d70:	3340      	adds	r3, #64	; 0x40
 8013d72:	4a78      	ldr	r2, [pc, #480]	; (8013f54 <createProblem+0x130ac>)
 8013d74:	461c      	mov	r4, r3
 8013d76:	4613      	mov	r3, r2
 8013d78:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013d7a:	6020      	str	r0, [r4, #0]
 8013d7c:	6061      	str	r1, [r4, #4]
 8013d7e:	60a2      	str	r2, [r4, #8]
 8013d80:	881b      	ldrh	r3, [r3, #0]
 8013d82:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,4,9,11,14,16,18");
 8013d84:	687b      	ldr	r3, [r7, #4]
 8013d86:	3304      	adds	r3, #4
 8013d88:	4a73      	ldr	r2, [pc, #460]	; (8013f58 <createProblem+0x130b0>)
 8013d8a:	461d      	mov	r5, r3
 8013d8c:	4614      	mov	r4, r2
 8013d8e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013d90:	6028      	str	r0, [r5, #0]
 8013d92:	6069      	str	r1, [r5, #4]
 8013d94:	60aa      	str	r2, [r5, #8]
 8013d96:	60eb      	str	r3, [r5, #12]
 8013d98:	8823      	ldrh	r3, [r4, #0]
 8013d9a:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8013d9c:	687b      	ldr	r3, [r7, #4]
 8013d9e:	33d8      	adds	r3, #216	; 0xd8
 8013da0:	4a6e      	ldr	r2, [pc, #440]	; (8013f5c <createProblem+0x130b4>)
 8013da2:	461c      	mov	r4, r3
 8013da4:	4613      	mov	r3, r2
 8013da6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013da8:	6020      	str	r0, [r4, #0]
 8013daa:	6061      	str	r1, [r4, #4]
 8013dac:	60a2      	str	r2, [r4, #8]
 8013dae:	881b      	ldrh	r3, [r3, #0]
 8013db0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8013db2:	687b      	ldr	r3, [r7, #4]
 8013db4:	33cc      	adds	r3, #204	; 0xcc
 8013db6:	4a65      	ldr	r2, [pc, #404]	; (8013f4c <createProblem+0x130a4>)
 8013db8:	8811      	ldrh	r1, [r2, #0]
 8013dba:	7892      	ldrb	r2, [r2, #2]
 8013dbc:	8019      	strh	r1, [r3, #0]
 8013dbe:	709a      	strb	r2, [r3, #2]
			break;
 8013dc0:	f006 bdb8 	b.w	801a934 <createProblem+0x19a8c>
		case 63 :
			strcpy(p->name,"KICKER");
 8013dc4:	687b      	ldr	r3, [r7, #4]
 8013dc6:	337c      	adds	r3, #124	; 0x7c
 8013dc8:	4a65      	ldr	r2, [pc, #404]	; (8013f60 <createProblem+0x130b8>)
 8013dca:	6810      	ldr	r0, [r2, #0]
 8013dcc:	6018      	str	r0, [r3, #0]
 8013dce:	8891      	ldrh	r1, [r2, #4]
 8013dd0:	7992      	ldrb	r2, [r2, #6]
 8013dd2:	8099      	strh	r1, [r3, #4]
 8013dd4:	719a      	strb	r2, [r3, #6]
			p->moveSize = 6;
 8013dd6:	687b      	ldr	r3, [r7, #4]
 8013dd8:	2206      	movs	r2, #6
 8013dda:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,E,B,E,D");
 8013ddc:	687b      	ldr	r3, [r7, #4]
 8013dde:	3340      	adds	r3, #64	; 0x40
 8013de0:	4a60      	ldr	r2, [pc, #384]	; (8013f64 <createProblem+0x130bc>)
 8013de2:	461c      	mov	r4, r3
 8013de4:	4613      	mov	r3, r2
 8013de6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013de8:	6020      	str	r0, [r4, #0]
 8013dea:	6061      	str	r1, [r4, #4]
 8013dec:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,7,9,12,14,18");
 8013dee:	687b      	ldr	r3, [r7, #4]
 8013df0:	3304      	adds	r3, #4
 8013df2:	4a5d      	ldr	r2, [pc, #372]	; (8013f68 <createProblem+0x130c0>)
 8013df4:	461c      	mov	r4, r3
 8013df6:	4613      	mov	r3, r2
 8013df8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013dfa:	6020      	str	r0, [r4, #0]
 8013dfc:	6061      	str	r1, [r4, #4]
 8013dfe:	60a2      	str	r2, [r4, #8]
 8013e00:	881a      	ldrh	r2, [r3, #0]
 8013e02:	789b      	ldrb	r3, [r3, #2]
 8013e04:	81a2      	strh	r2, [r4, #12]
 8013e06:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8013e08:	687b      	ldr	r3, [r7, #4]
 8013e0a:	33d8      	adds	r3, #216	; 0xd8
 8013e0c:	4a44      	ldr	r2, [pc, #272]	; (8013f20 <createProblem+0x13078>)
 8013e0e:	461c      	mov	r4, r3
 8013e10:	4613      	mov	r3, r2
 8013e12:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013e14:	6020      	str	r0, [r4, #0]
 8013e16:	6061      	str	r1, [r4, #4]
 8013e18:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8013e1a:	687b      	ldr	r3, [r7, #4]
 8013e1c:	33cc      	adds	r3, #204	; 0xcc
 8013e1e:	4a41      	ldr	r2, [pc, #260]	; (8013f24 <createProblem+0x1307c>)
 8013e20:	6810      	ldr	r0, [r2, #0]
 8013e22:	6018      	str	r0, [r3, #0]
			break;
 8013e24:	f006 bd86 	b.w	801a934 <createProblem+0x19a8c>
		case 630 :
			strcpy(p->name,"CAN’T REMEMBER THE NAME");
 8013e28:	687b      	ldr	r3, [r7, #4]
 8013e2a:	337c      	adds	r3, #124	; 0x7c
 8013e2c:	4a4f      	ldr	r2, [pc, #316]	; (8013f6c <createProblem+0x130c4>)
 8013e2e:	461d      	mov	r5, r3
 8013e30:	4614      	mov	r4, r2
 8013e32:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013e34:	6028      	str	r0, [r5, #0]
 8013e36:	6069      	str	r1, [r5, #4]
 8013e38:	60aa      	str	r2, [r5, #8]
 8013e3a:	60eb      	str	r3, [r5, #12]
 8013e3c:	cc03      	ldmia	r4!, {r0, r1}
 8013e3e:	6128      	str	r0, [r5, #16]
 8013e40:	6169      	str	r1, [r5, #20]
 8013e42:	8823      	ldrh	r3, [r4, #0]
 8013e44:	832b      	strh	r3, [r5, #24]
			p->moveSize = 7;
 8013e46:	687b      	ldr	r3, [r7, #4]
 8013e48:	2207      	movs	r2, #7
 8013e4a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,E,I,G,D,E,A");
 8013e4c:	687b      	ldr	r3, [r7, #4]
 8013e4e:	3340      	adds	r3, #64	; 0x40
 8013e50:	4a47      	ldr	r2, [pc, #284]	; (8013f70 <createProblem+0x130c8>)
 8013e52:	461c      	mov	r4, r3
 8013e54:	4613      	mov	r3, r2
 8013e56:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013e58:	6020      	str	r0, [r4, #0]
 8013e5a:	6061      	str	r1, [r4, #4]
 8013e5c:	60a2      	str	r2, [r4, #8]
 8013e5e:	881b      	ldrh	r3, [r3, #0]
 8013e60:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,8,10,6,11,16,18");
 8013e62:	687b      	ldr	r3, [r7, #4]
 8013e64:	3304      	adds	r3, #4
 8013e66:	4a43      	ldr	r2, [pc, #268]	; (8013f74 <createProblem+0x130cc>)
 8013e68:	461d      	mov	r5, r3
 8013e6a:	4614      	mov	r4, r2
 8013e6c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013e6e:	6028      	str	r0, [r5, #0]
 8013e70:	6069      	str	r1, [r5, #4]
 8013e72:	60aa      	str	r2, [r5, #8]
 8013e74:	60eb      	str	r3, [r5, #12]
 8013e76:	8823      	ldrh	r3, [r4, #0]
 8013e78:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,s,d,d,e");
 8013e7a:	687b      	ldr	r3, [r7, #4]
 8013e7c:	33d8      	adds	r3, #216	; 0xd8
 8013e7e:	4a3e      	ldr	r2, [pc, #248]	; (8013f78 <createProblem+0x130d0>)
 8013e80:	461c      	mov	r4, r3
 8013e82:	4613      	mov	r3, r2
 8013e84:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013e86:	6020      	str	r0, [r4, #0]
 8013e88:	6061      	str	r1, [r4, #4]
 8013e8a:	60a2      	str	r2, [r4, #8]
 8013e8c:	881b      	ldrh	r3, [r3, #0]
 8013e8e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8013e90:	687b      	ldr	r3, [r7, #4]
 8013e92:	33cc      	adds	r3, #204	; 0xcc
 8013e94:	4a2d      	ldr	r2, [pc, #180]	; (8013f4c <createProblem+0x130a4>)
 8013e96:	8811      	ldrh	r1, [r2, #0]
 8013e98:	7892      	ldrb	r2, [r2, #2]
 8013e9a:	8019      	strh	r1, [r3, #0]
 8013e9c:	709a      	strb	r2, [r3, #2]
			break;
 8013e9e:	f006 bd49 	b.w	801a934 <createProblem+0x19a8c>
		case 631 :
			strcpy(p->name,"FREAKING MAIMED");
 8013ea2:	687b      	ldr	r3, [r7, #4]
 8013ea4:	337c      	adds	r3, #124	; 0x7c
 8013ea6:	4a35      	ldr	r2, [pc, #212]	; (8013f7c <createProblem+0x130d4>)
 8013ea8:	461c      	mov	r4, r3
 8013eaa:	4615      	mov	r5, r2
 8013eac:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8013eae:	6020      	str	r0, [r4, #0]
 8013eb0:	6061      	str	r1, [r4, #4]
 8013eb2:	60a2      	str	r2, [r4, #8]
 8013eb4:	60e3      	str	r3, [r4, #12]
			p->moveSize = 7;
 8013eb6:	687b      	ldr	r3, [r7, #4]
 8013eb8:	2207      	movs	r2, #7
 8013eba:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,E,C,G,H,I");
 8013ebc:	687b      	ldr	r3, [r7, #4]
 8013ebe:	3340      	adds	r3, #64	; 0x40
 8013ec0:	4a2f      	ldr	r2, [pc, #188]	; (8013f80 <createProblem+0x130d8>)
 8013ec2:	461c      	mov	r4, r3
 8013ec4:	4613      	mov	r3, r2
 8013ec6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013ec8:	6020      	str	r0, [r4, #0]
 8013eca:	6061      	str	r1, [r4, #4]
 8013ecc:	60a2      	str	r2, [r4, #8]
 8013ece:	881b      	ldrh	r3, [r3, #0]
 8013ed0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,9,13,17,16,18");
 8013ed2:	687b      	ldr	r3, [r7, #4]
 8013ed4:	3304      	adds	r3, #4
 8013ed6:	4a2b      	ldr	r2, [pc, #172]	; (8013f84 <createProblem+0x130dc>)
 8013ed8:	461d      	mov	r5, r3
 8013eda:	4614      	mov	r4, r2
 8013edc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013ede:	6028      	str	r0, [r5, #0]
 8013ee0:	6069      	str	r1, [r5, #4]
 8013ee2:	60aa      	str	r2, [r5, #8]
 8013ee4:	60eb      	str	r3, [r5, #12]
 8013ee6:	8823      	ldrh	r3, [r4, #0]
 8013ee8:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8013eea:	687b      	ldr	r3, [r7, #4]
 8013eec:	33d8      	adds	r3, #216	; 0xd8
 8013eee:	4a26      	ldr	r2, [pc, #152]	; (8013f88 <createProblem+0x130e0>)
 8013ef0:	461c      	mov	r4, r3
 8013ef2:	4613      	mov	r3, r2
 8013ef4:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013ef6:	6020      	str	r0, [r4, #0]
 8013ef8:	6061      	str	r1, [r4, #4]
 8013efa:	60a2      	str	r2, [r4, #8]
 8013efc:	881b      	ldrh	r3, [r3, #0]
 8013efe:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7C");
 8013f00:	687b      	ldr	r3, [r7, #4]
 8013f02:	33cc      	adds	r3, #204	; 0xcc
 8013f04:	4a21      	ldr	r2, [pc, #132]	; (8013f8c <createProblem+0x130e4>)
 8013f06:	8811      	ldrh	r1, [r2, #0]
 8013f08:	7892      	ldrb	r2, [r2, #2]
 8013f0a:	8019      	strh	r1, [r3, #0]
 8013f0c:	709a      	strb	r2, [r3, #2]
			break;
 8013f0e:	f006 bd11 	b.w	801a934 <createProblem+0x19a8c>
 8013f12:	bf00      	nop
 8013f14:	080274f4 	.word	0x080274f4
 8013f18:	08027504 	.word	0x08027504
 8013f1c:	08027510 	.word	0x08027510
 8013f20:	0802091c 	.word	0x0802091c
 8013f24:	080209a4 	.word	0x080209a4
 8013f28:	08027520 	.word	0x08027520
 8013f2c:	0802752c 	.word	0x0802752c
 8013f30:	08027540 	.word	0x08027540
 8013f34:	08020dfc 	.word	0x08020dfc
 8013f38:	080208f0 	.word	0x080208f0
 8013f3c:	08027558 	.word	0x08027558
 8013f40:	08027568 	.word	0x08027568
 8013f44:	08027574 	.word	0x08027574
 8013f48:	080208a0 	.word	0x080208a0
 8013f4c:	08020874 	.word	0x08020874
 8013f50:	08027584 	.word	0x08027584
 8013f54:	0802758c 	.word	0x0802758c
 8013f58:	0802759c 	.word	0x0802759c
 8013f5c:	08020820 	.word	0x08020820
 8013f60:	080275b0 	.word	0x080275b0
 8013f64:	080275b8 	.word	0x080275b8
 8013f68:	080275c4 	.word	0x080275c4
 8013f6c:	080275d4 	.word	0x080275d4
 8013f70:	080275f0 	.word	0x080275f0
 8013f74:	08027600 	.word	0x08027600
 8013f78:	08026168 	.word	0x08026168
 8013f7c:	08027614 	.word	0x08027614
 8013f80:	08027624 	.word	0x08027624
 8013f84:	08027634 	.word	0x08027634
 8013f88:	08020a14 	.word	0x08020a14
 8013f8c:	08020b0c 	.word	0x08020b0c
		case 632 :
			strcpy(p->name,"BLACKSWING");
 8013f90:	687b      	ldr	r3, [r7, #4]
 8013f92:	337c      	adds	r3, #124	; 0x7c
 8013f94:	49c1      	ldr	r1, [pc, #772]	; (801429c <createProblem+0x133f4>)
 8013f96:	461a      	mov	r2, r3
 8013f98:	460b      	mov	r3, r1
 8013f9a:	cb03      	ldmia	r3!, {r0, r1}
 8013f9c:	6010      	str	r0, [r2, #0]
 8013f9e:	6051      	str	r1, [r2, #4]
 8013fa0:	8819      	ldrh	r1, [r3, #0]
 8013fa2:	789b      	ldrb	r3, [r3, #2]
 8013fa4:	8111      	strh	r1, [r2, #8]
 8013fa6:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 8013fa8:	687b      	ldr	r3, [r7, #4]
 8013faa:	2207      	movs	r2, #7
 8013fac:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,A,D,C,E,D");
 8013fae:	687b      	ldr	r3, [r7, #4]
 8013fb0:	3340      	adds	r3, #64	; 0x40
 8013fb2:	4abb      	ldr	r2, [pc, #748]	; (80142a0 <createProblem+0x133f8>)
 8013fb4:	461c      	mov	r4, r3
 8013fb6:	4613      	mov	r3, r2
 8013fb8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013fba:	6020      	str	r0, [r4, #0]
 8013fbc:	6061      	str	r1, [r4, #4]
 8013fbe:	60a2      	str	r2, [r4, #8]
 8013fc0:	881b      	ldrh	r3, [r3, #0]
 8013fc2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,11,13,14,18");
 8013fc4:	687b      	ldr	r3, [r7, #4]
 8013fc6:	3304      	adds	r3, #4
 8013fc8:	4ab6      	ldr	r2, [pc, #728]	; (80142a4 <createProblem+0x133fc>)
 8013fca:	461d      	mov	r5, r3
 8013fcc:	4614      	mov	r4, r2
 8013fce:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8013fd0:	6028      	str	r0, [r5, #0]
 8013fd2:	6069      	str	r1, [r5, #4]
 8013fd4:	60aa      	str	r2, [r5, #8]
 8013fd6:	60eb      	str	r3, [r5, #12]
 8013fd8:	8823      	ldrh	r3, [r4, #0]
 8013fda:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8013fdc:	687b      	ldr	r3, [r7, #4]
 8013fde:	33d8      	adds	r3, #216	; 0xd8
 8013fe0:	4ab1      	ldr	r2, [pc, #708]	; (80142a8 <createProblem+0x13400>)
 8013fe2:	461c      	mov	r4, r3
 8013fe4:	4613      	mov	r3, r2
 8013fe6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8013fe8:	6020      	str	r0, [r4, #0]
 8013fea:	6061      	str	r1, [r4, #4]
 8013fec:	60a2      	str	r2, [r4, #8]
 8013fee:	881b      	ldrh	r3, [r3, #0]
 8013ff0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "8A");
 8013ff2:	687b      	ldr	r3, [r7, #4]
 8013ff4:	33cc      	adds	r3, #204	; 0xcc
 8013ff6:	4aad      	ldr	r2, [pc, #692]	; (80142ac <createProblem+0x13404>)
 8013ff8:	8811      	ldrh	r1, [r2, #0]
 8013ffa:	7892      	ldrb	r2, [r2, #2]
 8013ffc:	8019      	strh	r1, [r3, #0]
 8013ffe:	709a      	strb	r2, [r3, #2]
			break;
 8014000:	f006 bc98 	b.w	801a934 <createProblem+0x19a8c>
		case 633 :
			strcpy(p->name,"MÖRCSÖG");
 8014004:	687b      	ldr	r3, [r7, #4]
 8014006:	337c      	adds	r3, #124	; 0x7c
 8014008:	49a9      	ldr	r1, [pc, #676]	; (80142b0 <createProblem+0x13408>)
 801400a:	461a      	mov	r2, r3
 801400c:	460b      	mov	r3, r1
 801400e:	cb03      	ldmia	r3!, {r0, r1}
 8014010:	6010      	str	r0, [r2, #0]
 8014012:	6051      	str	r1, [r2, #4]
 8014014:	881b      	ldrh	r3, [r3, #0]
 8014016:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 8014018:	687b      	ldr	r3, [r7, #4]
 801401a:	2206      	movs	r2, #6
 801401c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,F,E,G,D");
 801401e:	687b      	ldr	r3, [r7, #4]
 8014020:	3340      	adds	r3, #64	; 0x40
 8014022:	4aa4      	ldr	r2, [pc, #656]	; (80142b4 <createProblem+0x1340c>)
 8014024:	461c      	mov	r4, r3
 8014026:	4613      	mov	r3, r2
 8014028:	cb07      	ldmia	r3!, {r0, r1, r2}
 801402a:	6020      	str	r0, [r4, #0]
 801402c:	6061      	str	r1, [r4, #4]
 801402e:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,11,14,15,18");
 8014030:	687b      	ldr	r3, [r7, #4]
 8014032:	3304      	adds	r3, #4
 8014034:	4aa0      	ldr	r2, [pc, #640]	; (80142b8 <createProblem+0x13410>)
 8014036:	461c      	mov	r4, r3
 8014038:	4615      	mov	r5, r2
 801403a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801403c:	6020      	str	r0, [r4, #0]
 801403e:	6061      	str	r1, [r4, #4]
 8014040:	60a2      	str	r2, [r4, #8]
 8014042:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8014044:	687b      	ldr	r3, [r7, #4]
 8014046:	33d8      	adds	r3, #216	; 0xd8
 8014048:	4a9c      	ldr	r2, [pc, #624]	; (80142bc <createProblem+0x13414>)
 801404a:	461c      	mov	r4, r3
 801404c:	4613      	mov	r3, r2
 801404e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014050:	6020      	str	r0, [r4, #0]
 8014052:	6061      	str	r1, [r4, #4]
 8014054:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B");
 8014056:	687b      	ldr	r3, [r7, #4]
 8014058:	33cc      	adds	r3, #204	; 0xcc
 801405a:	4a99      	ldr	r2, [pc, #612]	; (80142c0 <createProblem+0x13418>)
 801405c:	8811      	ldrh	r1, [r2, #0]
 801405e:	7892      	ldrb	r2, [r2, #2]
 8014060:	8019      	strh	r1, [r3, #0]
 8014062:	709a      	strb	r2, [r3, #2]
			break;
 8014064:	f006 bc66 	b.w	801a934 <createProblem+0x19a8c>
		case 634 :
			strcpy(p->name,"OLD SCHOOL BLACK");
 8014068:	687b      	ldr	r3, [r7, #4]
 801406a:	337c      	adds	r3, #124	; 0x7c
 801406c:	4a95      	ldr	r2, [pc, #596]	; (80142c4 <createProblem+0x1341c>)
 801406e:	461d      	mov	r5, r3
 8014070:	4614      	mov	r4, r2
 8014072:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014074:	6028      	str	r0, [r5, #0]
 8014076:	6069      	str	r1, [r5, #4]
 8014078:	60aa      	str	r2, [r5, #8]
 801407a:	60eb      	str	r3, [r5, #12]
 801407c:	7823      	ldrb	r3, [r4, #0]
 801407e:	742b      	strb	r3, [r5, #16]
			p->moveSize = 6;
 8014080:	687b      	ldr	r3, [r7, #4]
 8014082:	2206      	movs	r2, #6
 8014084:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,I,G,G,D");
 8014086:	687b      	ldr	r3, [r7, #4]
 8014088:	3340      	adds	r3, #64	; 0x40
 801408a:	4a8f      	ldr	r2, [pc, #572]	; (80142c8 <createProblem+0x13420>)
 801408c:	461c      	mov	r4, r3
 801408e:	4613      	mov	r3, r2
 8014090:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014092:	6020      	str	r0, [r4, #0]
 8014094:	6061      	str	r1, [r4, #4]
 8014096:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,5,10,14,17,18");
 8014098:	687b      	ldr	r3, [r7, #4]
 801409a:	3304      	adds	r3, #4
 801409c:	4a8b      	ldr	r2, [pc, #556]	; (80142cc <createProblem+0x13424>)
 801409e:	461c      	mov	r4, r3
 80140a0:	4615      	mov	r5, r2
 80140a2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80140a4:	6020      	str	r0, [r4, #0]
 80140a6:	6061      	str	r1, [r4, #4]
 80140a8:	60a2      	str	r2, [r4, #8]
 80140aa:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 80140ac:	687b      	ldr	r3, [r7, #4]
 80140ae:	33d8      	adds	r3, #216	; 0xd8
 80140b0:	4a87      	ldr	r2, [pc, #540]	; (80142d0 <createProblem+0x13428>)
 80140b2:	461c      	mov	r4, r3
 80140b4:	4613      	mov	r3, r2
 80140b6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80140b8:	6020      	str	r0, [r4, #0]
 80140ba:	6061      	str	r1, [r4, #4]
 80140bc:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 80140be:	687b      	ldr	r3, [r7, #4]
 80140c0:	33cc      	adds	r3, #204	; 0xcc
 80140c2:	4a84      	ldr	r2, [pc, #528]	; (80142d4 <createProblem+0x1342c>)
 80140c4:	8811      	ldrh	r1, [r2, #0]
 80140c6:	7892      	ldrb	r2, [r2, #2]
 80140c8:	8019      	strh	r1, [r3, #0]
 80140ca:	709a      	strb	r2, [r3, #2]
			break;
 80140cc:	f006 bc32 	b.w	801a934 <createProblem+0x19a8c>
		case 635 :
			strcpy(p->name,"PINCH THE PINCH");
 80140d0:	687b      	ldr	r3, [r7, #4]
 80140d2:	337c      	adds	r3, #124	; 0x7c
 80140d4:	4a80      	ldr	r2, [pc, #512]	; (80142d8 <createProblem+0x13430>)
 80140d6:	461c      	mov	r4, r3
 80140d8:	4615      	mov	r5, r2
 80140da:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80140dc:	6020      	str	r0, [r4, #0]
 80140de:	6061      	str	r1, [r4, #4]
 80140e0:	60a2      	str	r2, [r4, #8]
 80140e2:	60e3      	str	r3, [r4, #12]
			p->moveSize = 4;
 80140e4:	687b      	ldr	r3, [r7, #4]
 80140e6:	2204      	movs	r2, #4
 80140e8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,G,D");
 80140ea:	687b      	ldr	r3, [r7, #4]
 80140ec:	3340      	adds	r3, #64	; 0x40
 80140ee:	497b      	ldr	r1, [pc, #492]	; (80142dc <createProblem+0x13434>)
 80140f0:	461a      	mov	r2, r3
 80140f2:	460b      	mov	r3, r1
 80140f4:	cb03      	ldmia	r3!, {r0, r1}
 80140f6:	6010      	str	r0, [r2, #0]
 80140f8:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"5,10,14,18");
 80140fa:	687b      	ldr	r3, [r7, #4]
 80140fc:	3304      	adds	r3, #4
 80140fe:	4978      	ldr	r1, [pc, #480]	; (80142e0 <createProblem+0x13438>)
 8014100:	461a      	mov	r2, r3
 8014102:	460b      	mov	r3, r1
 8014104:	cb03      	ldmia	r3!, {r0, r1}
 8014106:	6010      	str	r0, [r2, #0]
 8014108:	6051      	str	r1, [r2, #4]
 801410a:	8819      	ldrh	r1, [r3, #0]
 801410c:	789b      	ldrb	r3, [r3, #2]
 801410e:	8111      	strh	r1, [r2, #8]
 8014110:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 8014112:	687b      	ldr	r3, [r7, #4]
 8014114:	33d8      	adds	r3, #216	; 0xd8
 8014116:	4973      	ldr	r1, [pc, #460]	; (80142e4 <createProblem+0x1343c>)
 8014118:	461a      	mov	r2, r3
 801411a:	460b      	mov	r3, r1
 801411c:	cb03      	ldmia	r3!, {r0, r1}
 801411e:	6010      	str	r0, [r2, #0]
 8014120:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7A");
 8014122:	687b      	ldr	r3, [r7, #4]
 8014124:	33cc      	adds	r3, #204	; 0xcc
 8014126:	4a6b      	ldr	r2, [pc, #428]	; (80142d4 <createProblem+0x1342c>)
 8014128:	8811      	ldrh	r1, [r2, #0]
 801412a:	7892      	ldrb	r2, [r2, #2]
 801412c:	8019      	strh	r1, [r3, #0]
 801412e:	709a      	strb	r2, [r3, #2]
			break;
 8014130:	f006 bc00 	b.w	801a934 <createProblem+0x19a8c>
		case 636 :
			strcpy(p->name,"THE BLACK MAMBA 🐍");
 8014134:	687b      	ldr	r3, [r7, #4]
 8014136:	337c      	adds	r3, #124	; 0x7c
 8014138:	4a6b      	ldr	r2, [pc, #428]	; (80142e8 <createProblem+0x13440>)
 801413a:	461d      	mov	r5, r3
 801413c:	4614      	mov	r4, r2
 801413e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014140:	6028      	str	r0, [r5, #0]
 8014142:	6069      	str	r1, [r5, #4]
 8014144:	60aa      	str	r2, [r5, #8]
 8014146:	60eb      	str	r3, [r5, #12]
 8014148:	6820      	ldr	r0, [r4, #0]
 801414a:	6128      	str	r0, [r5, #16]
 801414c:	7923      	ldrb	r3, [r4, #4]
 801414e:	752b      	strb	r3, [r5, #20]
			p->moveSize = 11;
 8014150:	687b      	ldr	r3, [r7, #4]
 8014152:	220b      	movs	r2, #11
 8014154:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,G,C,B,E,C,D,B,D,A");
 8014156:	687b      	ldr	r3, [r7, #4]
 8014158:	3340      	adds	r3, #64	; 0x40
 801415a:	4a64      	ldr	r2, [pc, #400]	; (80142ec <createProblem+0x13444>)
 801415c:	461d      	mov	r5, r3
 801415e:	4614      	mov	r4, r2
 8014160:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014162:	6028      	str	r0, [r5, #0]
 8014164:	6069      	str	r1, [r5, #4]
 8014166:	60aa      	str	r2, [r5, #8]
 8014168:	60eb      	str	r3, [r5, #12]
 801416a:	6820      	ldr	r0, [r4, #0]
 801416c:	6128      	str	r0, [r5, #16]
 801416e:	88a3      	ldrh	r3, [r4, #4]
 8014170:	82ab      	strh	r3, [r5, #20]
			strcpy(p->moveNumbers,"4,6,9,8,10,12,13,15,15,18,18");
 8014172:	687b      	ldr	r3, [r7, #4]
 8014174:	3304      	adds	r3, #4
 8014176:	4a5e      	ldr	r2, [pc, #376]	; (80142f0 <createProblem+0x13448>)
 8014178:	461d      	mov	r5, r3
 801417a:	4614      	mov	r4, r2
 801417c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801417e:	6028      	str	r0, [r5, #0]
 8014180:	6069      	str	r1, [r5, #4]
 8014182:	60aa      	str	r2, [r5, #8]
 8014184:	60eb      	str	r3, [r5, #12]
 8014186:	cc07      	ldmia	r4!, {r0, r1, r2}
 8014188:	6128      	str	r0, [r5, #16]
 801418a:	6169      	str	r1, [r5, #20]
 801418c:	61aa      	str	r2, [r5, #24]
 801418e:	7823      	ldrb	r3, [r4, #0]
 8014190:	772b      	strb	r3, [r5, #28]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,e,e");
 8014192:	687b      	ldr	r3, [r7, #4]
 8014194:	33d8      	adds	r3, #216	; 0xd8
 8014196:	4a57      	ldr	r2, [pc, #348]	; (80142f4 <createProblem+0x1344c>)
 8014198:	461d      	mov	r5, r3
 801419a:	4614      	mov	r4, r2
 801419c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801419e:	6028      	str	r0, [r5, #0]
 80141a0:	6069      	str	r1, [r5, #4]
 80141a2:	60aa      	str	r2, [r5, #8]
 80141a4:	60eb      	str	r3, [r5, #12]
 80141a6:	6820      	ldr	r0, [r4, #0]
 80141a8:	6128      	str	r0, [r5, #16]
 80141aa:	88a3      	ldrh	r3, [r4, #4]
 80141ac:	82ab      	strh	r3, [r5, #20]
			strcpy(p->grade, "6B+");
 80141ae:	687b      	ldr	r3, [r7, #4]
 80141b0:	33cc      	adds	r3, #204	; 0xcc
 80141b2:	4a51      	ldr	r2, [pc, #324]	; (80142f8 <createProblem+0x13450>)
 80141b4:	6810      	ldr	r0, [r2, #0]
 80141b6:	6018      	str	r0, [r3, #0]
			break;
 80141b8:	f006 bbbc 	b.w	801a934 <createProblem+0x19a8c>
		case 637 :
			strcpy(p->name,"SCIENTIFIC PROGRESS");
 80141bc:	687b      	ldr	r3, [r7, #4]
 80141be:	337c      	adds	r3, #124	; 0x7c
 80141c0:	4a4e      	ldr	r2, [pc, #312]	; (80142fc <createProblem+0x13454>)
 80141c2:	461d      	mov	r5, r3
 80141c4:	4614      	mov	r4, r2
 80141c6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80141c8:	6028      	str	r0, [r5, #0]
 80141ca:	6069      	str	r1, [r5, #4]
 80141cc:	60aa      	str	r2, [r5, #8]
 80141ce:	60eb      	str	r3, [r5, #12]
 80141d0:	6820      	ldr	r0, [r4, #0]
 80141d2:	6128      	str	r0, [r5, #16]
			p->moveSize = 5;
 80141d4:	687b      	ldr	r3, [r7, #4]
 80141d6:	2205      	movs	r2, #5
 80141d8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,C,F,A,A");
 80141da:	687b      	ldr	r3, [r7, #4]
 80141dc:	3340      	adds	r3, #64	; 0x40
 80141de:	4948      	ldr	r1, [pc, #288]	; (8014300 <createProblem+0x13458>)
 80141e0:	461a      	mov	r2, r3
 80141e2:	460b      	mov	r3, r1
 80141e4:	cb03      	ldmia	r3!, {r0, r1}
 80141e6:	6010      	str	r0, [r2, #0]
 80141e8:	6051      	str	r1, [r2, #4]
 80141ea:	881b      	ldrh	r3, [r3, #0]
 80141ec:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,8,11,14,18");
 80141ee:	687b      	ldr	r3, [r7, #4]
 80141f0:	3304      	adds	r3, #4
 80141f2:	4a44      	ldr	r2, [pc, #272]	; (8014304 <createProblem+0x1345c>)
 80141f4:	461c      	mov	r4, r3
 80141f6:	4613      	mov	r3, r2
 80141f8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80141fa:	6020      	str	r0, [r4, #0]
 80141fc:	6061      	str	r1, [r4, #4]
 80141fe:	60a2      	str	r2, [r4, #8]
 8014200:	781b      	ldrb	r3, [r3, #0]
 8014202:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8014204:	687b      	ldr	r3, [r7, #4]
 8014206:	33d8      	adds	r3, #216	; 0xd8
 8014208:	493f      	ldr	r1, [pc, #252]	; (8014308 <createProblem+0x13460>)
 801420a:	461a      	mov	r2, r3
 801420c:	460b      	mov	r3, r1
 801420e:	cb03      	ldmia	r3!, {r0, r1}
 8014210:	6010      	str	r0, [r2, #0]
 8014212:	6051      	str	r1, [r2, #4]
 8014214:	881b      	ldrh	r3, [r3, #0]
 8014216:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 8014218:	687b      	ldr	r3, [r7, #4]
 801421a:	33cc      	adds	r3, #204	; 0xcc
 801421c:	4a2d      	ldr	r2, [pc, #180]	; (80142d4 <createProblem+0x1342c>)
 801421e:	8811      	ldrh	r1, [r2, #0]
 8014220:	7892      	ldrb	r2, [r2, #2]
 8014222:	8019      	strh	r1, [r3, #0]
 8014224:	709a      	strb	r2, [r3, #2]
			break;
 8014226:	f006 bb85 	b.w	801a934 <createProblem+0x19a8c>
		case 638 :
			strcpy(p->name,"YET ANOTHER WASTE OF SKIN");
 801422a:	687b      	ldr	r3, [r7, #4]
 801422c:	337c      	adds	r3, #124	; 0x7c
 801422e:	4a37      	ldr	r2, [pc, #220]	; (801430c <createProblem+0x13464>)
 8014230:	461d      	mov	r5, r3
 8014232:	4614      	mov	r4, r2
 8014234:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014236:	6028      	str	r0, [r5, #0]
 8014238:	6069      	str	r1, [r5, #4]
 801423a:	60aa      	str	r2, [r5, #8]
 801423c:	60eb      	str	r3, [r5, #12]
 801423e:	cc03      	ldmia	r4!, {r0, r1}
 8014240:	6128      	str	r0, [r5, #16]
 8014242:	6169      	str	r1, [r5, #20]
 8014244:	8823      	ldrh	r3, [r4, #0]
 8014246:	832b      	strh	r3, [r5, #24]
			p->moveSize = 5;
 8014248:	687b      	ldr	r3, [r7, #4]
 801424a:	2205      	movs	r2, #5
 801424c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,E,D,A");
 801424e:	687b      	ldr	r3, [r7, #4]
 8014250:	3340      	adds	r3, #64	; 0x40
 8014252:	492f      	ldr	r1, [pc, #188]	; (8014310 <createProblem+0x13468>)
 8014254:	461a      	mov	r2, r3
 8014256:	460b      	mov	r3, r1
 8014258:	cb03      	ldmia	r3!, {r0, r1}
 801425a:	6010      	str	r0, [r2, #0]
 801425c:	6051      	str	r1, [r2, #4]
 801425e:	881b      	ldrh	r3, [r3, #0]
 8014260:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,12,15,18");
 8014262:	687b      	ldr	r3, [r7, #4]
 8014264:	3304      	adds	r3, #4
 8014266:	4a2b      	ldr	r2, [pc, #172]	; (8014314 <createProblem+0x1346c>)
 8014268:	461c      	mov	r4, r3
 801426a:	4613      	mov	r3, r2
 801426c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801426e:	6020      	str	r0, [r4, #0]
 8014270:	6061      	str	r1, [r4, #4]
 8014272:	60a2      	str	r2, [r4, #8]
 8014274:	881b      	ldrh	r3, [r3, #0]
 8014276:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8014278:	687b      	ldr	r3, [r7, #4]
 801427a:	33d8      	adds	r3, #216	; 0xd8
 801427c:	4922      	ldr	r1, [pc, #136]	; (8014308 <createProblem+0x13460>)
 801427e:	461a      	mov	r2, r3
 8014280:	460b      	mov	r3, r1
 8014282:	cb03      	ldmia	r3!, {r0, r1}
 8014284:	6010      	str	r0, [r2, #0]
 8014286:	6051      	str	r1, [r2, #4]
 8014288:	881b      	ldrh	r3, [r3, #0]
 801428a:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 801428c:	687b      	ldr	r3, [r7, #4]
 801428e:	33cc      	adds	r3, #204	; 0xcc
 8014290:	4a21      	ldr	r2, [pc, #132]	; (8014318 <createProblem+0x13470>)
 8014292:	6810      	ldr	r0, [r2, #0]
 8014294:	6018      	str	r0, [r3, #0]
			break;
 8014296:	f006 bb4d 	b.w	801a934 <createProblem+0x19a8c>
 801429a:	bf00      	nop
 801429c:	08027648 	.word	0x08027648
 80142a0:	08027654 	.word	0x08027654
 80142a4:	08027664 	.word	0x08027664
 80142a8:	08020820 	.word	0x08020820
 80142ac:	08020c94 	.word	0x08020c94
 80142b0:	08027678 	.word	0x08027678
 80142b4:	08027684 	.word	0x08027684
 80142b8:	080274a8 	.word	0x080274a8
 80142bc:	0802091c 	.word	0x0802091c
 80142c0:	080208ac 	.word	0x080208ac
 80142c4:	08027690 	.word	0x08027690
 80142c8:	080276a4 	.word	0x080276a4
 80142cc:	080276b0 	.word	0x080276b0
 80142d0:	08020e90 	.word	0x08020e90
 80142d4:	08020874 	.word	0x08020874
 80142d8:	080276c0 	.word	0x080276c0
 80142dc:	080276d0 	.word	0x080276d0
 80142e0:	080276d8 	.word	0x080276d8
 80142e4:	080215a8 	.word	0x080215a8
 80142e8:	080276e4 	.word	0x080276e4
 80142ec:	080276fc 	.word	0x080276fc
 80142f0:	08027714 	.word	0x08027714
 80142f4:	08027734 	.word	0x08027734
 80142f8:	08020830 	.word	0x08020830
 80142fc:	0802774c 	.word	0x0802774c
 8014300:	08027760 	.word	0x08027760
 8014304:	0802776c 	.word	0x0802776c
 8014308:	080208a0 	.word	0x080208a0
 801430c:	0802777c 	.word	0x0802777c
 8014310:	08027798 	.word	0x08027798
 8014314:	080277a4 	.word	0x080277a4
 8014318:	08020dc8 	.word	0x08020dc8
		case 639 :
			strcpy(p->name,"BLACK-OUT");
 801431c:	687b      	ldr	r3, [r7, #4]
 801431e:	337c      	adds	r3, #124	; 0x7c
 8014320:	49bc      	ldr	r1, [pc, #752]	; (8014614 <createProblem+0x1376c>)
 8014322:	461a      	mov	r2, r3
 8014324:	460b      	mov	r3, r1
 8014326:	cb03      	ldmia	r3!, {r0, r1}
 8014328:	6010      	str	r0, [r2, #0]
 801432a:	6051      	str	r1, [r2, #4]
 801432c:	881b      	ldrh	r3, [r3, #0]
 801432e:	8113      	strh	r3, [r2, #8]
			p->moveSize = 9;
 8014330:	687b      	ldr	r3, [r7, #4]
 8014332:	2209      	movs	r2, #9
 8014334:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,A,F,B,A,E,D");
 8014336:	687b      	ldr	r3, [r7, #4]
 8014338:	3340      	adds	r3, #64	; 0x40
 801433a:	4ab7      	ldr	r2, [pc, #732]	; (8014618 <createProblem+0x13770>)
 801433c:	461d      	mov	r5, r3
 801433e:	4614      	mov	r4, r2
 8014340:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014342:	6028      	str	r0, [r5, #0]
 8014344:	6069      	str	r1, [r5, #4]
 8014346:	60aa      	str	r2, [r5, #8]
 8014348:	60eb      	str	r3, [r5, #12]
 801434a:	8823      	ldrh	r3, [r4, #0]
 801434c:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,6,8,9,11,12,14,16,18");
 801434e:	687b      	ldr	r3, [r7, #4]
 8014350:	3304      	adds	r3, #4
 8014352:	4ab2      	ldr	r2, [pc, #712]	; (801461c <createProblem+0x13774>)
 8014354:	461c      	mov	r4, r3
 8014356:	4615      	mov	r5, r2
 8014358:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801435a:	6020      	str	r0, [r4, #0]
 801435c:	6061      	str	r1, [r4, #4]
 801435e:	60a2      	str	r2, [r4, #8]
 8014360:	60e3      	str	r3, [r4, #12]
 8014362:	6828      	ldr	r0, [r5, #0]
 8014364:	6120      	str	r0, [r4, #16]
 8014366:	88ab      	ldrh	r3, [r5, #4]
 8014368:	79aa      	ldrb	r2, [r5, #6]
 801436a:	82a3      	strh	r3, [r4, #20]
 801436c:	4613      	mov	r3, r2
 801436e:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8014370:	687b      	ldr	r3, [r7, #4]
 8014372:	33d8      	adds	r3, #216	; 0xd8
 8014374:	4aaa      	ldr	r2, [pc, #680]	; (8014620 <createProblem+0x13778>)
 8014376:	461d      	mov	r5, r3
 8014378:	4614      	mov	r4, r2
 801437a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801437c:	6028      	str	r0, [r5, #0]
 801437e:	6069      	str	r1, [r5, #4]
 8014380:	60aa      	str	r2, [r5, #8]
 8014382:	60eb      	str	r3, [r5, #12]
 8014384:	8823      	ldrh	r3, [r4, #0]
 8014386:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8014388:	687b      	ldr	r3, [r7, #4]
 801438a:	33cc      	adds	r3, #204	; 0xcc
 801438c:	4aa5      	ldr	r2, [pc, #660]	; (8014624 <createProblem+0x1377c>)
 801438e:	6810      	ldr	r0, [r2, #0]
 8014390:	6018      	str	r0, [r3, #0]
			break;
 8014392:	f006 bacf 	b.w	801a934 <createProblem+0x19a8c>
		case 64 :
			strcpy(p->name,"KICKER 2");
 8014396:	687b      	ldr	r3, [r7, #4]
 8014398:	337c      	adds	r3, #124	; 0x7c
 801439a:	49a3      	ldr	r1, [pc, #652]	; (8014628 <createProblem+0x13780>)
 801439c:	461a      	mov	r2, r3
 801439e:	460b      	mov	r3, r1
 80143a0:	cb03      	ldmia	r3!, {r0, r1}
 80143a2:	6010      	str	r0, [r2, #0]
 80143a4:	6051      	str	r1, [r2, #4]
 80143a6:	781b      	ldrb	r3, [r3, #0]
 80143a8:	7213      	strb	r3, [r2, #8]
			p->moveSize = 7;
 80143aa:	687b      	ldr	r3, [r7, #4]
 80143ac:	2207      	movs	r2, #7
 80143ae:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,E,B,G,E,I");
 80143b0:	687b      	ldr	r3, [r7, #4]
 80143b2:	3340      	adds	r3, #64	; 0x40
 80143b4:	4a9d      	ldr	r2, [pc, #628]	; (801462c <createProblem+0x13784>)
 80143b6:	461c      	mov	r4, r3
 80143b8:	4613      	mov	r3, r2
 80143ba:	cb07      	ldmia	r3!, {r0, r1, r2}
 80143bc:	6020      	str	r0, [r4, #0]
 80143be:	6061      	str	r1, [r4, #4]
 80143c0:	60a2      	str	r2, [r4, #8]
 80143c2:	881b      	ldrh	r3, [r3, #0]
 80143c4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,9,12,14,14,18");
 80143c6:	687b      	ldr	r3, [r7, #4]
 80143c8:	3304      	adds	r3, #4
 80143ca:	4a99      	ldr	r2, [pc, #612]	; (8014630 <createProblem+0x13788>)
 80143cc:	461d      	mov	r5, r3
 80143ce:	4614      	mov	r4, r2
 80143d0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80143d2:	6028      	str	r0, [r5, #0]
 80143d4:	6069      	str	r1, [r5, #4]
 80143d6:	60aa      	str	r2, [r5, #8]
 80143d8:	60eb      	str	r3, [r5, #12]
 80143da:	8823      	ldrh	r3, [r4, #0]
 80143dc:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80143de:	687b      	ldr	r3, [r7, #4]
 80143e0:	33d8      	adds	r3, #216	; 0xd8
 80143e2:	4a94      	ldr	r2, [pc, #592]	; (8014634 <createProblem+0x1378c>)
 80143e4:	461c      	mov	r4, r3
 80143e6:	4613      	mov	r3, r2
 80143e8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80143ea:	6020      	str	r0, [r4, #0]
 80143ec:	6061      	str	r1, [r4, #4]
 80143ee:	60a2      	str	r2, [r4, #8]
 80143f0:	881b      	ldrh	r3, [r3, #0]
 80143f2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 80143f4:	687b      	ldr	r3, [r7, #4]
 80143f6:	33cc      	adds	r3, #204	; 0xcc
 80143f8:	4a8f      	ldr	r2, [pc, #572]	; (8014638 <createProblem+0x13790>)
 80143fa:	8811      	ldrh	r1, [r2, #0]
 80143fc:	7892      	ldrb	r2, [r2, #2]
 80143fe:	8019      	strh	r1, [r3, #0]
 8014400:	709a      	strb	r2, [r3, #2]
			break;
 8014402:	f006 ba97 	b.w	801a934 <createProblem+0x19a8c>
		case 640 :
			strcpy(p->name,"BLACK PROJECT");
 8014406:	687b      	ldr	r3, [r7, #4]
 8014408:	337c      	adds	r3, #124	; 0x7c
 801440a:	4a8c      	ldr	r2, [pc, #560]	; (801463c <createProblem+0x13794>)
 801440c:	461c      	mov	r4, r3
 801440e:	4613      	mov	r3, r2
 8014410:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014412:	6020      	str	r0, [r4, #0]
 8014414:	6061      	str	r1, [r4, #4]
 8014416:	60a2      	str	r2, [r4, #8]
 8014418:	881b      	ldrh	r3, [r3, #0]
 801441a:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 5;
 801441c:	687b      	ldr	r3, [r7, #4]
 801441e:	2205      	movs	r2, #5
 8014420:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,H,H,H,I");
 8014422:	687b      	ldr	r3, [r7, #4]
 8014424:	3340      	adds	r3, #64	; 0x40
 8014426:	4986      	ldr	r1, [pc, #536]	; (8014640 <createProblem+0x13798>)
 8014428:	461a      	mov	r2, r3
 801442a:	460b      	mov	r3, r1
 801442c:	cb03      	ldmia	r3!, {r0, r1}
 801442e:	6010      	str	r0, [r2, #0]
 8014430:	6051      	str	r1, [r2, #4]
 8014432:	881b      	ldrh	r3, [r3, #0]
 8014434:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,12,16,18");
 8014436:	687b      	ldr	r3, [r7, #4]
 8014438:	3304      	adds	r3, #4
 801443a:	4a82      	ldr	r2, [pc, #520]	; (8014644 <createProblem+0x1379c>)
 801443c:	461c      	mov	r4, r3
 801443e:	4613      	mov	r3, r2
 8014440:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014442:	6020      	str	r0, [r4, #0]
 8014444:	6061      	str	r1, [r4, #4]
 8014446:	60a2      	str	r2, [r4, #8]
 8014448:	881b      	ldrh	r3, [r3, #0]
 801444a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 801444c:	687b      	ldr	r3, [r7, #4]
 801444e:	33d8      	adds	r3, #216	; 0xd8
 8014450:	497d      	ldr	r1, [pc, #500]	; (8014648 <createProblem+0x137a0>)
 8014452:	461a      	mov	r2, r3
 8014454:	460b      	mov	r3, r1
 8014456:	cb03      	ldmia	r3!, {r0, r1}
 8014458:	6010      	str	r0, [r2, #0]
 801445a:	6051      	str	r1, [r2, #4]
 801445c:	881b      	ldrh	r3, [r3, #0]
 801445e:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 8014460:	687b      	ldr	r3, [r7, #4]
 8014462:	33cc      	adds	r3, #204	; 0xcc
 8014464:	4a74      	ldr	r2, [pc, #464]	; (8014638 <createProblem+0x13790>)
 8014466:	8811      	ldrh	r1, [r2, #0]
 8014468:	7892      	ldrb	r2, [r2, #2]
 801446a:	8019      	strh	r1, [r3, #0]
 801446c:	709a      	strb	r2, [r3, #2]
			break;
 801446e:	f006 ba61 	b.w	801a934 <createProblem+0x19a8c>
		case 641 :
			strcpy(p->name,"TRIO TERNURA");
 8014472:	687b      	ldr	r3, [r7, #4]
 8014474:	337c      	adds	r3, #124	; 0x7c
 8014476:	4a75      	ldr	r2, [pc, #468]	; (801464c <createProblem+0x137a4>)
 8014478:	461c      	mov	r4, r3
 801447a:	4613      	mov	r3, r2
 801447c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801447e:	6020      	str	r0, [r4, #0]
 8014480:	6061      	str	r1, [r4, #4]
 8014482:	60a2      	str	r2, [r4, #8]
 8014484:	781b      	ldrb	r3, [r3, #0]
 8014486:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 8014488:	687b      	ldr	r3, [r7, #4]
 801448a:	2206      	movs	r2, #6
 801448c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,H,E,A,A");
 801448e:	687b      	ldr	r3, [r7, #4]
 8014490:	3340      	adds	r3, #64	; 0x40
 8014492:	4a6f      	ldr	r2, [pc, #444]	; (8014650 <createProblem+0x137a8>)
 8014494:	461c      	mov	r4, r3
 8014496:	4613      	mov	r3, r2
 8014498:	cb07      	ldmia	r3!, {r0, r1, r2}
 801449a:	6020      	str	r0, [r4, #0]
 801449c:	6061      	str	r1, [r4, #4]
 801449e:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,8,12,14,18");
 80144a0:	687b      	ldr	r3, [r7, #4]
 80144a2:	3304      	adds	r3, #4
 80144a4:	4a6b      	ldr	r2, [pc, #428]	; (8014654 <createProblem+0x137ac>)
 80144a6:	461c      	mov	r4, r3
 80144a8:	4613      	mov	r3, r2
 80144aa:	cb07      	ldmia	r3!, {r0, r1, r2}
 80144ac:	6020      	str	r0, [r4, #0]
 80144ae:	6061      	str	r1, [r4, #4]
 80144b0:	60a2      	str	r2, [r4, #8]
 80144b2:	881a      	ldrh	r2, [r3, #0]
 80144b4:	789b      	ldrb	r3, [r3, #2]
 80144b6:	81a2      	strh	r2, [r4, #12]
 80144b8:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80144ba:	687b      	ldr	r3, [r7, #4]
 80144bc:	33d8      	adds	r3, #216	; 0xd8
 80144be:	4a66      	ldr	r2, [pc, #408]	; (8014658 <createProblem+0x137b0>)
 80144c0:	461c      	mov	r4, r3
 80144c2:	4613      	mov	r3, r2
 80144c4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80144c6:	6020      	str	r0, [r4, #0]
 80144c8:	6061      	str	r1, [r4, #4]
 80144ca:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 80144cc:	687b      	ldr	r3, [r7, #4]
 80144ce:	33cc      	adds	r3, #204	; 0xcc
 80144d0:	4a62      	ldr	r2, [pc, #392]	; (801465c <createProblem+0x137b4>)
 80144d2:	6810      	ldr	r0, [r2, #0]
 80144d4:	6018      	str	r0, [r3, #0]
			break;
 80144d6:	f006 ba2d 	b.w	801a934 <createProblem+0x19a8c>
		case 642 :
			strcpy(p->name,"CK");
 80144da:	687b      	ldr	r3, [r7, #4]
 80144dc:	337c      	adds	r3, #124	; 0x7c
 80144de:	4a60      	ldr	r2, [pc, #384]	; (8014660 <createProblem+0x137b8>)
 80144e0:	8811      	ldrh	r1, [r2, #0]
 80144e2:	7892      	ldrb	r2, [r2, #2]
 80144e4:	8019      	strh	r1, [r3, #0]
 80144e6:	709a      	strb	r2, [r3, #2]
			p->moveSize = 6;
 80144e8:	687b      	ldr	r3, [r7, #4]
 80144ea:	2206      	movs	r2, #6
 80144ec:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,J,F,G,D");
 80144ee:	687b      	ldr	r3, [r7, #4]
 80144f0:	3340      	adds	r3, #64	; 0x40
 80144f2:	4a5c      	ldr	r2, [pc, #368]	; (8014664 <createProblem+0x137bc>)
 80144f4:	461c      	mov	r4, r3
 80144f6:	4613      	mov	r3, r2
 80144f8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80144fa:	6020      	str	r0, [r4, #0]
 80144fc:	6061      	str	r1, [r4, #4]
 80144fe:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,12,13,17,18");
 8014500:	687b      	ldr	r3, [r7, #4]
 8014502:	3304      	adds	r3, #4
 8014504:	4a58      	ldr	r2, [pc, #352]	; (8014668 <createProblem+0x137c0>)
 8014506:	461c      	mov	r4, r3
 8014508:	4615      	mov	r5, r2
 801450a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801450c:	6020      	str	r0, [r4, #0]
 801450e:	6061      	str	r1, [r4, #4]
 8014510:	60a2      	str	r2, [r4, #8]
 8014512:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8014514:	687b      	ldr	r3, [r7, #4]
 8014516:	33d8      	adds	r3, #216	; 0xd8
 8014518:	4a4f      	ldr	r2, [pc, #316]	; (8014658 <createProblem+0x137b0>)
 801451a:	461c      	mov	r4, r3
 801451c:	4613      	mov	r3, r2
 801451e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014520:	6020      	str	r0, [r4, #0]
 8014522:	6061      	str	r1, [r4, #4]
 8014524:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 8014526:	687b      	ldr	r3, [r7, #4]
 8014528:	33cc      	adds	r3, #204	; 0xcc
 801452a:	4a50      	ldr	r2, [pc, #320]	; (801466c <createProblem+0x137c4>)
 801452c:	6810      	ldr	r0, [r2, #0]
 801452e:	6018      	str	r0, [r3, #0]
			break;
 8014530:	f006 ba00 	b.w	801a934 <createProblem+0x19a8c>
		case 643 :
			strcpy(p->name,"PINPANPUN");
 8014534:	687b      	ldr	r3, [r7, #4]
 8014536:	337c      	adds	r3, #124	; 0x7c
 8014538:	494d      	ldr	r1, [pc, #308]	; (8014670 <createProblem+0x137c8>)
 801453a:	461a      	mov	r2, r3
 801453c:	460b      	mov	r3, r1
 801453e:	cb03      	ldmia	r3!, {r0, r1}
 8014540:	6010      	str	r0, [r2, #0]
 8014542:	6051      	str	r1, [r2, #4]
 8014544:	881b      	ldrh	r3, [r3, #0]
 8014546:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 8014548:	687b      	ldr	r3, [r7, #4]
 801454a:	2207      	movs	r2, #7
 801454c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,C,E,A,E,A,D");
 801454e:	687b      	ldr	r3, [r7, #4]
 8014550:	3340      	adds	r3, #64	; 0x40
 8014552:	4a48      	ldr	r2, [pc, #288]	; (8014674 <createProblem+0x137cc>)
 8014554:	461c      	mov	r4, r3
 8014556:	4613      	mov	r3, r2
 8014558:	cb07      	ldmia	r3!, {r0, r1, r2}
 801455a:	6020      	str	r0, [r4, #0]
 801455c:	6061      	str	r1, [r4, #4]
 801455e:	60a2      	str	r2, [r4, #8]
 8014560:	881b      	ldrh	r3, [r3, #0]
 8014562:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,9,9,12,14,18");
 8014564:	687b      	ldr	r3, [r7, #4]
 8014566:	3304      	adds	r3, #4
 8014568:	4a43      	ldr	r2, [pc, #268]	; (8014678 <createProblem+0x137d0>)
 801456a:	461d      	mov	r5, r3
 801456c:	4614      	mov	r4, r2
 801456e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014570:	6028      	str	r0, [r5, #0]
 8014572:	6069      	str	r1, [r5, #4]
 8014574:	60aa      	str	r2, [r5, #8]
 8014576:	60eb      	str	r3, [r5, #12]
 8014578:	7823      	ldrb	r3, [r4, #0]
 801457a:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 801457c:	687b      	ldr	r3, [r7, #4]
 801457e:	33d8      	adds	r3, #216	; 0xd8
 8014580:	4a3e      	ldr	r2, [pc, #248]	; (801467c <createProblem+0x137d4>)
 8014582:	461c      	mov	r4, r3
 8014584:	4613      	mov	r3, r2
 8014586:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014588:	6020      	str	r0, [r4, #0]
 801458a:	6061      	str	r1, [r4, #4]
 801458c:	60a2      	str	r2, [r4, #8]
 801458e:	881b      	ldrh	r3, [r3, #0]
 8014590:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 8014592:	687b      	ldr	r3, [r7, #4]
 8014594:	33cc      	adds	r3, #204	; 0xcc
 8014596:	4a3a      	ldr	r2, [pc, #232]	; (8014680 <createProblem+0x137d8>)
 8014598:	6810      	ldr	r0, [r2, #0]
 801459a:	6018      	str	r0, [r3, #0]
			break;
 801459c:	f006 b9ca 	b.w	801a934 <createProblem+0x19a8c>
		case 644 :
			strcpy(p->name,"DARK DAYS");
 80145a0:	687b      	ldr	r3, [r7, #4]
 80145a2:	337c      	adds	r3, #124	; 0x7c
 80145a4:	4937      	ldr	r1, [pc, #220]	; (8014684 <createProblem+0x137dc>)
 80145a6:	461a      	mov	r2, r3
 80145a8:	460b      	mov	r3, r1
 80145aa:	cb03      	ldmia	r3!, {r0, r1}
 80145ac:	6010      	str	r0, [r2, #0]
 80145ae:	6051      	str	r1, [r2, #4]
 80145b0:	881b      	ldrh	r3, [r3, #0]
 80145b2:	8113      	strh	r3, [r2, #8]
			p->moveSize = 9;
 80145b4:	687b      	ldr	r3, [r7, #4]
 80145b6:	2209      	movs	r2, #9
 80145b8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,D,B,E,D,I,K,I,I");
 80145ba:	687b      	ldr	r3, [r7, #4]
 80145bc:	3340      	adds	r3, #64	; 0x40
 80145be:	4a32      	ldr	r2, [pc, #200]	; (8014688 <createProblem+0x137e0>)
 80145c0:	461d      	mov	r5, r3
 80145c2:	4614      	mov	r4, r2
 80145c4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80145c6:	6028      	str	r0, [r5, #0]
 80145c8:	6069      	str	r1, [r5, #4]
 80145ca:	60aa      	str	r2, [r5, #8]
 80145cc:	60eb      	str	r3, [r5, #12]
 80145ce:	8823      	ldrh	r3, [r4, #0]
 80145d0:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"6,7,10,14,15,15,14,18,7");
 80145d2:	687b      	ldr	r3, [r7, #4]
 80145d4:	3304      	adds	r3, #4
 80145d6:	4a2d      	ldr	r2, [pc, #180]	; (801468c <createProblem+0x137e4>)
 80145d8:	461d      	mov	r5, r3
 80145da:	4614      	mov	r4, r2
 80145dc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80145de:	6028      	str	r0, [r5, #0]
 80145e0:	6069      	str	r1, [r5, #4]
 80145e2:	60aa      	str	r2, [r5, #8]
 80145e4:	60eb      	str	r3, [r5, #12]
 80145e6:	cc03      	ldmia	r4!, {r0, r1}
 80145e8:	6128      	str	r0, [r5, #16]
 80145ea:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e,d");
 80145ec:	687b      	ldr	r3, [r7, #4]
 80145ee:	33d8      	adds	r3, #216	; 0xd8
 80145f0:	4a27      	ldr	r2, [pc, #156]	; (8014690 <createProblem+0x137e8>)
 80145f2:	461d      	mov	r5, r3
 80145f4:	4614      	mov	r4, r2
 80145f6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80145f8:	6028      	str	r0, [r5, #0]
 80145fa:	6069      	str	r1, [r5, #4]
 80145fc:	60aa      	str	r2, [r5, #8]
 80145fe:	60eb      	str	r3, [r5, #12]
 8014600:	8823      	ldrh	r3, [r4, #0]
 8014602:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "7A+");
 8014604:	687b      	ldr	r3, [r7, #4]
 8014606:	33cc      	adds	r3, #204	; 0xcc
 8014608:	4a1d      	ldr	r2, [pc, #116]	; (8014680 <createProblem+0x137d8>)
 801460a:	6810      	ldr	r0, [r2, #0]
 801460c:	6018      	str	r0, [r3, #0]
			break;
 801460e:	f006 b991 	b.w	801a934 <createProblem+0x19a8c>
 8014612:	bf00      	nop
 8014614:	080277b4 	.word	0x080277b4
 8014618:	080277c0 	.word	0x080277c0
 801461c:	080277d4 	.word	0x080277d4
 8014620:	08020dfc 	.word	0x08020dfc
 8014624:	08020830 	.word	0x08020830
 8014628:	080277ec 	.word	0x080277ec
 801462c:	080277f8 	.word	0x080277f8
 8014630:	08027808 	.word	0x08027808
 8014634:	08020a14 	.word	0x08020a14
 8014638:	08020874 	.word	0x08020874
 801463c:	0802781c 	.word	0x0802781c
 8014640:	0802782c 	.word	0x0802782c
 8014644:	08027838 	.word	0x08027838
 8014648:	080208a0 	.word	0x080208a0
 801464c:	08027848 	.word	0x08027848
 8014650:	08027858 	.word	0x08027858
 8014654:	08027864 	.word	0x08027864
 8014658:	0802091c 	.word	0x0802091c
 801465c:	08020dc8 	.word	0x08020dc8
 8014660:	08027874 	.word	0x08027874
 8014664:	08027878 	.word	0x08027878
 8014668:	08027884 	.word	0x08027884
 801466c:	08020928 	.word	0x08020928
 8014670:	08027894 	.word	0x08027894
 8014674:	080278a0 	.word	0x080278a0
 8014678:	080278b0 	.word	0x080278b0
 801467c:	08020820 	.word	0x08020820
 8014680:	080209a4 	.word	0x080209a4
 8014684:	080278c4 	.word	0x080278c4
 8014688:	080278d0 	.word	0x080278d0
 801468c:	080278e4 	.word	0x080278e4
 8014690:	080278fc 	.word	0x080278fc
		case 645 :
			strcpy(p->name,"WILD BILL");
 8014694:	687b      	ldr	r3, [r7, #4]
 8014696:	337c      	adds	r3, #124	; 0x7c
 8014698:	49bc      	ldr	r1, [pc, #752]	; (801498c <createProblem+0x13ae4>)
 801469a:	461a      	mov	r2, r3
 801469c:	460b      	mov	r3, r1
 801469e:	cb03      	ldmia	r3!, {r0, r1}
 80146a0:	6010      	str	r0, [r2, #0]
 80146a2:	6051      	str	r1, [r2, #4]
 80146a4:	881b      	ldrh	r3, [r3, #0]
 80146a6:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 80146a8:	687b      	ldr	r3, [r7, #4]
 80146aa:	2206      	movs	r2, #6
 80146ac:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,K,G,D,D,A");
 80146ae:	687b      	ldr	r3, [r7, #4]
 80146b0:	3340      	adds	r3, #64	; 0x40
 80146b2:	4ab7      	ldr	r2, [pc, #732]	; (8014990 <createProblem+0x13ae8>)
 80146b4:	461c      	mov	r4, r3
 80146b6:	4613      	mov	r3, r2
 80146b8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80146ba:	6020      	str	r0, [r4, #0]
 80146bc:	6061      	str	r1, [r4, #4]
 80146be:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,14,15,18,18");
 80146c0:	687b      	ldr	r3, [r7, #4]
 80146c2:	3304      	adds	r3, #4
 80146c4:	4ab3      	ldr	r2, [pc, #716]	; (8014994 <createProblem+0x13aec>)
 80146c6:	461c      	mov	r4, r3
 80146c8:	4615      	mov	r5, r2
 80146ca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80146cc:	6020      	str	r0, [r4, #0]
 80146ce:	6061      	str	r1, [r4, #4]
 80146d0:	60a2      	str	r2, [r4, #8]
 80146d2:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e,e");
 80146d4:	687b      	ldr	r3, [r7, #4]
 80146d6:	33d8      	adds	r3, #216	; 0xd8
 80146d8:	4aaf      	ldr	r2, [pc, #700]	; (8014998 <createProblem+0x13af0>)
 80146da:	461c      	mov	r4, r3
 80146dc:	4613      	mov	r3, r2
 80146de:	cb07      	ldmia	r3!, {r0, r1, r2}
 80146e0:	6020      	str	r0, [r4, #0]
 80146e2:	6061      	str	r1, [r4, #4]
 80146e4:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B");
 80146e6:	687b      	ldr	r3, [r7, #4]
 80146e8:	33cc      	adds	r3, #204	; 0xcc
 80146ea:	4aac      	ldr	r2, [pc, #688]	; (801499c <createProblem+0x13af4>)
 80146ec:	8811      	ldrh	r1, [r2, #0]
 80146ee:	7892      	ldrb	r2, [r2, #2]
 80146f0:	8019      	strh	r1, [r3, #0]
 80146f2:	709a      	strb	r2, [r3, #2]
			break;
 80146f4:	f006 b91e 	b.w	801a934 <createProblem+0x19a8c>
		case 646 :
			strcpy(p->name,"LA MARY ME PAGA");
 80146f8:	687b      	ldr	r3, [r7, #4]
 80146fa:	337c      	adds	r3, #124	; 0x7c
 80146fc:	4aa8      	ldr	r2, [pc, #672]	; (80149a0 <createProblem+0x13af8>)
 80146fe:	461c      	mov	r4, r3
 8014700:	4615      	mov	r5, r2
 8014702:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014704:	6020      	str	r0, [r4, #0]
 8014706:	6061      	str	r1, [r4, #4]
 8014708:	60a2      	str	r2, [r4, #8]
 801470a:	60e3      	str	r3, [r4, #12]
			p->moveSize = 6;
 801470c:	687b      	ldr	r3, [r7, #4]
 801470e:	2206      	movs	r2, #6
 8014710:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,E,B,E,D");
 8014712:	687b      	ldr	r3, [r7, #4]
 8014714:	3340      	adds	r3, #64	; 0x40
 8014716:	4aa3      	ldr	r2, [pc, #652]	; (80149a4 <createProblem+0x13afc>)
 8014718:	461c      	mov	r4, r3
 801471a:	4613      	mov	r3, r2
 801471c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801471e:	6020      	str	r0, [r4, #0]
 8014720:	6061      	str	r1, [r4, #4]
 8014722:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,9,10,14,18");
 8014724:	687b      	ldr	r3, [r7, #4]
 8014726:	3304      	adds	r3, #4
 8014728:	4a9f      	ldr	r2, [pc, #636]	; (80149a8 <createProblem+0x13b00>)
 801472a:	461c      	mov	r4, r3
 801472c:	4613      	mov	r3, r2
 801472e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014730:	6020      	str	r0, [r4, #0]
 8014732:	6061      	str	r1, [r4, #4]
 8014734:	60a2      	str	r2, [r4, #8]
 8014736:	881a      	ldrh	r2, [r3, #0]
 8014738:	789b      	ldrb	r3, [r3, #2]
 801473a:	81a2      	strh	r2, [r4, #12]
 801473c:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 801473e:	687b      	ldr	r3, [r7, #4]
 8014740:	33d8      	adds	r3, #216	; 0xd8
 8014742:	4a9a      	ldr	r2, [pc, #616]	; (80149ac <createProblem+0x13b04>)
 8014744:	461c      	mov	r4, r3
 8014746:	4613      	mov	r3, r2
 8014748:	cb07      	ldmia	r3!, {r0, r1, r2}
 801474a:	6020      	str	r0, [r4, #0]
 801474c:	6061      	str	r1, [r4, #4]
 801474e:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B");
 8014750:	687b      	ldr	r3, [r7, #4]
 8014752:	33cc      	adds	r3, #204	; 0xcc
 8014754:	4a91      	ldr	r2, [pc, #580]	; (801499c <createProblem+0x13af4>)
 8014756:	8811      	ldrh	r1, [r2, #0]
 8014758:	7892      	ldrb	r2, [r2, #2]
 801475a:	8019      	strh	r1, [r3, #0]
 801475c:	709a      	strb	r2, [r3, #2]
			break;
 801475e:	f006 b8e9 	b.w	801a934 <createProblem+0x19a8c>
		case 647 :
			strcpy(p->name,"FRUIT CAKE");
 8014762:	687b      	ldr	r3, [r7, #4]
 8014764:	337c      	adds	r3, #124	; 0x7c
 8014766:	4992      	ldr	r1, [pc, #584]	; (80149b0 <createProblem+0x13b08>)
 8014768:	461a      	mov	r2, r3
 801476a:	460b      	mov	r3, r1
 801476c:	cb03      	ldmia	r3!, {r0, r1}
 801476e:	6010      	str	r0, [r2, #0]
 8014770:	6051      	str	r1, [r2, #4]
 8014772:	8819      	ldrh	r1, [r3, #0]
 8014774:	789b      	ldrb	r3, [r3, #2]
 8014776:	8111      	strh	r1, [r2, #8]
 8014778:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 801477a:	687b      	ldr	r3, [r7, #4]
 801477c:	2206      	movs	r2, #6
 801477e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,F,E,D,D");
 8014780:	687b      	ldr	r3, [r7, #4]
 8014782:	3340      	adds	r3, #64	; 0x40
 8014784:	4a8b      	ldr	r2, [pc, #556]	; (80149b4 <createProblem+0x13b0c>)
 8014786:	461c      	mov	r4, r3
 8014788:	4613      	mov	r3, r2
 801478a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801478c:	6020      	str	r0, [r4, #0]
 801478e:	6061      	str	r1, [r4, #4]
 8014790:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,11,12,15,18");
 8014792:	687b      	ldr	r3, [r7, #4]
 8014794:	3304      	adds	r3, #4
 8014796:	4a88      	ldr	r2, [pc, #544]	; (80149b8 <createProblem+0x13b10>)
 8014798:	461c      	mov	r4, r3
 801479a:	4615      	mov	r5, r2
 801479c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801479e:	6020      	str	r0, [r4, #0]
 80147a0:	6061      	str	r1, [r4, #4]
 80147a2:	60a2      	str	r2, [r4, #8]
 80147a4:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80147a6:	687b      	ldr	r3, [r7, #4]
 80147a8:	33d8      	adds	r3, #216	; 0xd8
 80147aa:	4a84      	ldr	r2, [pc, #528]	; (80149bc <createProblem+0x13b14>)
 80147ac:	461c      	mov	r4, r3
 80147ae:	4613      	mov	r3, r2
 80147b0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80147b2:	6020      	str	r0, [r4, #0]
 80147b4:	6061      	str	r1, [r4, #4]
 80147b6:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 80147b8:	687b      	ldr	r3, [r7, #4]
 80147ba:	33cc      	adds	r3, #204	; 0xcc
 80147bc:	4a80      	ldr	r2, [pc, #512]	; (80149c0 <createProblem+0x13b18>)
 80147be:	6810      	ldr	r0, [r2, #0]
 80147c0:	6018      	str	r0, [r3, #0]
			break;
 80147c2:	f006 b8b7 	b.w	801a934 <createProblem+0x19a8c>
		case 648 :
			strcpy(p->name,"OLYMPUS");
 80147c6:	687b      	ldr	r3, [r7, #4]
 80147c8:	337c      	adds	r3, #124	; 0x7c
 80147ca:	497e      	ldr	r1, [pc, #504]	; (80149c4 <createProblem+0x13b1c>)
 80147cc:	461a      	mov	r2, r3
 80147ce:	460b      	mov	r3, r1
 80147d0:	cb03      	ldmia	r3!, {r0, r1}
 80147d2:	6010      	str	r0, [r2, #0]
 80147d4:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 80147d6:	687b      	ldr	r3, [r7, #4]
 80147d8:	2207      	movs	r2, #7
 80147da:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,B,E,D,F,G,I");
 80147dc:	687b      	ldr	r3, [r7, #4]
 80147de:	3340      	adds	r3, #64	; 0x40
 80147e0:	4a79      	ldr	r2, [pc, #484]	; (80149c8 <createProblem+0x13b20>)
 80147e2:	461c      	mov	r4, r3
 80147e4:	4613      	mov	r3, r2
 80147e6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80147e8:	6020      	str	r0, [r4, #0]
 80147ea:	6061      	str	r1, [r4, #4]
 80147ec:	60a2      	str	r2, [r4, #8]
 80147ee:	881b      	ldrh	r3, [r3, #0]
 80147f0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,11,13,15,18");
 80147f2:	687b      	ldr	r3, [r7, #4]
 80147f4:	3304      	adds	r3, #4
 80147f6:	4a75      	ldr	r2, [pc, #468]	; (80149cc <createProblem+0x13b24>)
 80147f8:	461d      	mov	r5, r3
 80147fa:	4614      	mov	r4, r2
 80147fc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80147fe:	6028      	str	r0, [r5, #0]
 8014800:	6069      	str	r1, [r5, #4]
 8014802:	60aa      	str	r2, [r5, #8]
 8014804:	60eb      	str	r3, [r5, #12]
 8014806:	8823      	ldrh	r3, [r4, #0]
 8014808:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 801480a:	687b      	ldr	r3, [r7, #4]
 801480c:	33d8      	adds	r3, #216	; 0xd8
 801480e:	4a70      	ldr	r2, [pc, #448]	; (80149d0 <createProblem+0x13b28>)
 8014810:	461c      	mov	r4, r3
 8014812:	4613      	mov	r3, r2
 8014814:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014816:	6020      	str	r0, [r4, #0]
 8014818:	6061      	str	r1, [r4, #4]
 801481a:	60a2      	str	r2, [r4, #8]
 801481c:	881b      	ldrh	r3, [r3, #0]
 801481e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7C");
 8014820:	687b      	ldr	r3, [r7, #4]
 8014822:	33cc      	adds	r3, #204	; 0xcc
 8014824:	4a6b      	ldr	r2, [pc, #428]	; (80149d4 <createProblem+0x13b2c>)
 8014826:	8811      	ldrh	r1, [r2, #0]
 8014828:	7892      	ldrb	r2, [r2, #2]
 801482a:	8019      	strh	r1, [r3, #0]
 801482c:	709a      	strb	r2, [r3, #2]
			break;
 801482e:	f006 b881 	b.w	801a934 <createProblem+0x19a8c>
		case 649 :
			strcpy(p->name,"EASE OF ACCESS");
 8014832:	687b      	ldr	r3, [r7, #4]
 8014834:	337c      	adds	r3, #124	; 0x7c
 8014836:	4a68      	ldr	r2, [pc, #416]	; (80149d8 <createProblem+0x13b30>)
 8014838:	461c      	mov	r4, r3
 801483a:	4613      	mov	r3, r2
 801483c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801483e:	6020      	str	r0, [r4, #0]
 8014840:	6061      	str	r1, [r4, #4]
 8014842:	60a2      	str	r2, [r4, #8]
 8014844:	881a      	ldrh	r2, [r3, #0]
 8014846:	789b      	ldrb	r3, [r3, #2]
 8014848:	81a2      	strh	r2, [r4, #12]
 801484a:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 9;
 801484c:	687b      	ldr	r3, [r7, #4]
 801484e:	2209      	movs	r2, #9
 8014850:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,K,J,E,J,J,H,E,D");
 8014852:	687b      	ldr	r3, [r7, #4]
 8014854:	3340      	adds	r3, #64	; 0x40
 8014856:	4a61      	ldr	r2, [pc, #388]	; (80149dc <createProblem+0x13b34>)
 8014858:	461d      	mov	r5, r3
 801485a:	4614      	mov	r4, r2
 801485c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801485e:	6028      	str	r0, [r5, #0]
 8014860:	6069      	str	r1, [r5, #4]
 8014862:	60aa      	str	r2, [r5, #8]
 8014864:	60eb      	str	r3, [r5, #12]
 8014866:	8823      	ldrh	r3, [r4, #0]
 8014868:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,9,7,9,13,16,16,16,18");
 801486a:	687b      	ldr	r3, [r7, #4]
 801486c:	3304      	adds	r3, #4
 801486e:	4a5c      	ldr	r2, [pc, #368]	; (80149e0 <createProblem+0x13b38>)
 8014870:	461c      	mov	r4, r3
 8014872:	4615      	mov	r5, r2
 8014874:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014876:	6020      	str	r0, [r4, #0]
 8014878:	6061      	str	r1, [r4, #4]
 801487a:	60a2      	str	r2, [r4, #8]
 801487c:	60e3      	str	r3, [r4, #12]
 801487e:	6828      	ldr	r0, [r5, #0]
 8014880:	6120      	str	r0, [r4, #16]
 8014882:	88ab      	ldrh	r3, [r5, #4]
 8014884:	79aa      	ldrb	r2, [r5, #6]
 8014886:	82a3      	strh	r3, [r4, #20]
 8014888:	4613      	mov	r3, r2
 801488a:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,d,e");
 801488c:	687b      	ldr	r3, [r7, #4]
 801488e:	33d8      	adds	r3, #216	; 0xd8
 8014890:	4a54      	ldr	r2, [pc, #336]	; (80149e4 <createProblem+0x13b3c>)
 8014892:	461d      	mov	r5, r3
 8014894:	4614      	mov	r4, r2
 8014896:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014898:	6028      	str	r0, [r5, #0]
 801489a:	6069      	str	r1, [r5, #4]
 801489c:	60aa      	str	r2, [r5, #8]
 801489e:	60eb      	str	r3, [r5, #12]
 80148a0:	8823      	ldrh	r3, [r4, #0]
 80148a2:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6C+");
 80148a4:	687b      	ldr	r3, [r7, #4]
 80148a6:	33cc      	adds	r3, #204	; 0xcc
 80148a8:	4a4f      	ldr	r2, [pc, #316]	; (80149e8 <createProblem+0x13b40>)
 80148aa:	6810      	ldr	r0, [r2, #0]
 80148ac:	6018      	str	r0, [r3, #0]
			break;
 80148ae:	f006 b841 	b.w	801a934 <createProblem+0x19a8c>
		case 65 :
			strcpy(p->name,"FULCO");
 80148b2:	687b      	ldr	r3, [r7, #4]
 80148b4:	337c      	adds	r3, #124	; 0x7c
 80148b6:	4a4d      	ldr	r2, [pc, #308]	; (80149ec <createProblem+0x13b44>)
 80148b8:	6810      	ldr	r0, [r2, #0]
 80148ba:	6018      	str	r0, [r3, #0]
 80148bc:	8892      	ldrh	r2, [r2, #4]
 80148be:	809a      	strh	r2, [r3, #4]
			p->moveSize = 7;
 80148c0:	687b      	ldr	r3, [r7, #4]
 80148c2:	2207      	movs	r2, #7
 80148c4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,I,D,G,E,D");
 80148c6:	687b      	ldr	r3, [r7, #4]
 80148c8:	3340      	adds	r3, #64	; 0x40
 80148ca:	4a49      	ldr	r2, [pc, #292]	; (80149f0 <createProblem+0x13b48>)
 80148cc:	461c      	mov	r4, r3
 80148ce:	4613      	mov	r3, r2
 80148d0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80148d2:	6020      	str	r0, [r4, #0]
 80148d4:	6061      	str	r1, [r4, #4]
 80148d6:	60a2      	str	r2, [r4, #8]
 80148d8:	881b      	ldrh	r3, [r3, #0]
 80148da:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,9,11,14,16,18");
 80148dc:	687b      	ldr	r3, [r7, #4]
 80148de:	3304      	adds	r3, #4
 80148e0:	4a44      	ldr	r2, [pc, #272]	; (80149f4 <createProblem+0x13b4c>)
 80148e2:	461d      	mov	r5, r3
 80148e4:	4614      	mov	r4, r2
 80148e6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80148e8:	6028      	str	r0, [r5, #0]
 80148ea:	6069      	str	r1, [r5, #4]
 80148ec:	60aa      	str	r2, [r5, #8]
 80148ee:	60eb      	str	r3, [r5, #12]
 80148f0:	8823      	ldrh	r3, [r4, #0]
 80148f2:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 80148f4:	687b      	ldr	r3, [r7, #4]
 80148f6:	33d8      	adds	r3, #216	; 0xd8
 80148f8:	4a3f      	ldr	r2, [pc, #252]	; (80149f8 <createProblem+0x13b50>)
 80148fa:	461c      	mov	r4, r3
 80148fc:	4613      	mov	r3, r2
 80148fe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014900:	6020      	str	r0, [r4, #0]
 8014902:	6061      	str	r1, [r4, #4]
 8014904:	60a2      	str	r2, [r4, #8]
 8014906:	881b      	ldrh	r3, [r3, #0]
 8014908:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 801490a:	687b      	ldr	r3, [r7, #4]
 801490c:	33cc      	adds	r3, #204	; 0xcc
 801490e:	4a3b      	ldr	r2, [pc, #236]	; (80149fc <createProblem+0x13b54>)
 8014910:	8811      	ldrh	r1, [r2, #0]
 8014912:	7892      	ldrb	r2, [r2, #2]
 8014914:	8019      	strh	r1, [r3, #0]
 8014916:	709a      	strb	r2, [r3, #2]
			break;
 8014918:	f006 b80c 	b.w	801a934 <createProblem+0x19a8c>
		case 650 :
			strcpy(p->name,"LAP OF LUXURY");
 801491c:	687b      	ldr	r3, [r7, #4]
 801491e:	337c      	adds	r3, #124	; 0x7c
 8014920:	4a37      	ldr	r2, [pc, #220]	; (8014a00 <createProblem+0x13b58>)
 8014922:	461c      	mov	r4, r3
 8014924:	4613      	mov	r3, r2
 8014926:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014928:	6020      	str	r0, [r4, #0]
 801492a:	6061      	str	r1, [r4, #4]
 801492c:	60a2      	str	r2, [r4, #8]
 801492e:	881b      	ldrh	r3, [r3, #0]
 8014930:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 8014932:	687b      	ldr	r3, [r7, #4]
 8014934:	2207      	movs	r2, #7
 8014936:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,D,E,B,E,E,I");
 8014938:	687b      	ldr	r3, [r7, #4]
 801493a:	3340      	adds	r3, #64	; 0x40
 801493c:	4a31      	ldr	r2, [pc, #196]	; (8014a04 <createProblem+0x13b5c>)
 801493e:	461c      	mov	r4, r3
 8014940:	4613      	mov	r3, r2
 8014942:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014944:	6020      	str	r0, [r4, #0]
 8014946:	6061      	str	r1, [r4, #4]
 8014948:	60a2      	str	r2, [r4, #8]
 801494a:	881b      	ldrh	r3, [r3, #0]
 801494c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,7,9,10,12,16,18");
 801494e:	687b      	ldr	r3, [r7, #4]
 8014950:	3304      	adds	r3, #4
 8014952:	4a2d      	ldr	r2, [pc, #180]	; (8014a08 <createProblem+0x13b60>)
 8014954:	461d      	mov	r5, r3
 8014956:	4614      	mov	r4, r2
 8014958:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801495a:	6028      	str	r0, [r5, #0]
 801495c:	6069      	str	r1, [r5, #4]
 801495e:	60aa      	str	r2, [r5, #8]
 8014960:	60eb      	str	r3, [r5, #12]
 8014962:	8823      	ldrh	r3, [r4, #0]
 8014964:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8014966:	687b      	ldr	r3, [r7, #4]
 8014968:	33d8      	adds	r3, #216	; 0xd8
 801496a:	4a19      	ldr	r2, [pc, #100]	; (80149d0 <createProblem+0x13b28>)
 801496c:	461c      	mov	r4, r3
 801496e:	4613      	mov	r3, r2
 8014970:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014972:	6020      	str	r0, [r4, #0]
 8014974:	6061      	str	r1, [r4, #4]
 8014976:	60a2      	str	r2, [r4, #8]
 8014978:	881b      	ldrh	r3, [r3, #0]
 801497a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 801497c:	687b      	ldr	r3, [r7, #4]
 801497e:	33cc      	adds	r3, #204	; 0xcc
 8014980:	4a19      	ldr	r2, [pc, #100]	; (80149e8 <createProblem+0x13b40>)
 8014982:	6810      	ldr	r0, [r2, #0]
 8014984:	6018      	str	r0, [r3, #0]
			break;
 8014986:	f005 bfd5 	b.w	801a934 <createProblem+0x19a8c>
 801498a:	bf00      	nop
 801498c:	08027910 	.word	0x08027910
 8014990:	0802791c 	.word	0x0802791c
 8014994:	08027928 	.word	0x08027928
 8014998:	08027938 	.word	0x08027938
 801499c:	080208ac 	.word	0x080208ac
 80149a0:	08027944 	.word	0x08027944
 80149a4:	08027954 	.word	0x08027954
 80149a8:	08027960 	.word	0x08027960
 80149ac:	08020e90 	.word	0x08020e90
 80149b0:	08027970 	.word	0x08027970
 80149b4:	0802797c 	.word	0x0802797c
 80149b8:	08027988 	.word	0x08027988
 80149bc:	0802091c 	.word	0x0802091c
 80149c0:	08020830 	.word	0x08020830
 80149c4:	08027998 	.word	0x08027998
 80149c8:	080279a0 	.word	0x080279a0
 80149cc:	080279b0 	.word	0x080279b0
 80149d0:	08020a14 	.word	0x08020a14
 80149d4:	08020b0c 	.word	0x08020b0c
 80149d8:	080279c4 	.word	0x080279c4
 80149dc:	080279d4 	.word	0x080279d4
 80149e0:	080279e8 	.word	0x080279e8
 80149e4:	08022f10 	.word	0x08022f10
 80149e8:	08020928 	.word	0x08020928
 80149ec:	08027a00 	.word	0x08027a00
 80149f0:	08027a08 	.word	0x08027a08
 80149f4:	08027a18 	.word	0x08027a18
 80149f8:	08020820 	.word	0x08020820
 80149fc:	080208f0 	.word	0x080208f0
 8014a00:	08027a2c 	.word	0x08027a2c
 8014a04:	08027a3c 	.word	0x08027a3c
 8014a08:	08027a4c 	.word	0x08027a4c
		case 651 :
			strcpy(p->name,"DARK HORSE");
 8014a0c:	687b      	ldr	r3, [r7, #4]
 8014a0e:	337c      	adds	r3, #124	; 0x7c
 8014a10:	49a7      	ldr	r1, [pc, #668]	; (8014cb0 <createProblem+0x13e08>)
 8014a12:	461a      	mov	r2, r3
 8014a14:	460b      	mov	r3, r1
 8014a16:	cb03      	ldmia	r3!, {r0, r1}
 8014a18:	6010      	str	r0, [r2, #0]
 8014a1a:	6051      	str	r1, [r2, #4]
 8014a1c:	8819      	ldrh	r1, [r3, #0]
 8014a1e:	789b      	ldrb	r3, [r3, #2]
 8014a20:	8111      	strh	r1, [r2, #8]
 8014a22:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 8014a24:	687b      	ldr	r3, [r7, #4]
 8014a26:	2207      	movs	r2, #7
 8014a28:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,G,H,F,I,D,E");
 8014a2a:	687b      	ldr	r3, [r7, #4]
 8014a2c:	3340      	adds	r3, #64	; 0x40
 8014a2e:	4aa1      	ldr	r2, [pc, #644]	; (8014cb4 <createProblem+0x13e0c>)
 8014a30:	461c      	mov	r4, r3
 8014a32:	4613      	mov	r3, r2
 8014a34:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014a36:	6020      	str	r0, [r4, #0]
 8014a38:	6061      	str	r1, [r4, #4]
 8014a3a:	60a2      	str	r2, [r4, #8]
 8014a3c:	881b      	ldrh	r3, [r3, #0]
 8014a3e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,13,10,18,16");
 8014a40:	687b      	ldr	r3, [r7, #4]
 8014a42:	3304      	adds	r3, #4
 8014a44:	4a9c      	ldr	r2, [pc, #624]	; (8014cb8 <createProblem+0x13e10>)
 8014a46:	461d      	mov	r5, r3
 8014a48:	4614      	mov	r4, r2
 8014a4a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014a4c:	6028      	str	r0, [r5, #0]
 8014a4e:	6069      	str	r1, [r5, #4]
 8014a50:	60aa      	str	r2, [r5, #8]
 8014a52:	60eb      	str	r3, [r5, #12]
 8014a54:	8823      	ldrh	r3, [r4, #0]
 8014a56:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,e,d");
 8014a58:	687b      	ldr	r3, [r7, #4]
 8014a5a:	33d8      	adds	r3, #216	; 0xd8
 8014a5c:	4a97      	ldr	r2, [pc, #604]	; (8014cbc <createProblem+0x13e14>)
 8014a5e:	461c      	mov	r4, r3
 8014a60:	4613      	mov	r3, r2
 8014a62:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014a64:	6020      	str	r0, [r4, #0]
 8014a66:	6061      	str	r1, [r4, #4]
 8014a68:	60a2      	str	r2, [r4, #8]
 8014a6a:	881b      	ldrh	r3, [r3, #0]
 8014a6c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B+");
 8014a6e:	687b      	ldr	r3, [r7, #4]
 8014a70:	33cc      	adds	r3, #204	; 0xcc
 8014a72:	4a93      	ldr	r2, [pc, #588]	; (8014cc0 <createProblem+0x13e18>)
 8014a74:	6810      	ldr	r0, [r2, #0]
 8014a76:	6018      	str	r0, [r3, #0]
			break;
 8014a78:	f005 bf5c 	b.w	801a934 <createProblem+0x19a8c>
		case 652 :
			strcpy(p->name,"GILDA");
 8014a7c:	687b      	ldr	r3, [r7, #4]
 8014a7e:	337c      	adds	r3, #124	; 0x7c
 8014a80:	4a90      	ldr	r2, [pc, #576]	; (8014cc4 <createProblem+0x13e1c>)
 8014a82:	6810      	ldr	r0, [r2, #0]
 8014a84:	6018      	str	r0, [r3, #0]
 8014a86:	8892      	ldrh	r2, [r2, #4]
 8014a88:	809a      	strh	r2, [r3, #4]
			p->moveSize = 8;
 8014a8a:	687b      	ldr	r3, [r7, #4]
 8014a8c:	2208      	movs	r2, #8
 8014a8e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,J,G,E,I,H,I");
 8014a90:	687b      	ldr	r3, [r7, #4]
 8014a92:	3340      	adds	r3, #64	; 0x40
 8014a94:	4a8c      	ldr	r2, [pc, #560]	; (8014cc8 <createProblem+0x13e20>)
 8014a96:	461c      	mov	r4, r3
 8014a98:	4615      	mov	r5, r2
 8014a9a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014a9c:	6020      	str	r0, [r4, #0]
 8014a9e:	6061      	str	r1, [r4, #4]
 8014aa0:	60a2      	str	r2, [r4, #8]
 8014aa2:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,7,9,12,14,16,18");
 8014aa4:	687b      	ldr	r3, [r7, #4]
 8014aa6:	3304      	adds	r3, #4
 8014aa8:	4a88      	ldr	r2, [pc, #544]	; (8014ccc <createProblem+0x13e24>)
 8014aaa:	461d      	mov	r5, r3
 8014aac:	4614      	mov	r4, r2
 8014aae:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014ab0:	6028      	str	r0, [r5, #0]
 8014ab2:	6069      	str	r1, [r5, #4]
 8014ab4:	60aa      	str	r2, [r5, #8]
 8014ab6:	60eb      	str	r3, [r5, #12]
 8014ab8:	6820      	ldr	r0, [r4, #0]
 8014aba:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8014abc:	687b      	ldr	r3, [r7, #4]
 8014abe:	33d8      	adds	r3, #216	; 0xd8
 8014ac0:	4a83      	ldr	r2, [pc, #524]	; (8014cd0 <createProblem+0x13e28>)
 8014ac2:	461c      	mov	r4, r3
 8014ac4:	4615      	mov	r5, r2
 8014ac6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014ac8:	6020      	str	r0, [r4, #0]
 8014aca:	6061      	str	r1, [r4, #4]
 8014acc:	60a2      	str	r2, [r4, #8]
 8014ace:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8014ad0:	687b      	ldr	r3, [r7, #4]
 8014ad2:	33cc      	adds	r3, #204	; 0xcc
 8014ad4:	4a7f      	ldr	r2, [pc, #508]	; (8014cd4 <createProblem+0x13e2c>)
 8014ad6:	8811      	ldrh	r1, [r2, #0]
 8014ad8:	7892      	ldrb	r2, [r2, #2]
 8014ada:	8019      	strh	r1, [r3, #0]
 8014adc:	709a      	strb	r2, [r3, #2]
			break;
 8014ade:	f005 bf29 	b.w	801a934 <createProblem+0x19a8c>
		case 653 :
			strcpy(p->name,"BLUE BOWLS");
 8014ae2:	687b      	ldr	r3, [r7, #4]
 8014ae4:	337c      	adds	r3, #124	; 0x7c
 8014ae6:	497c      	ldr	r1, [pc, #496]	; (8014cd8 <createProblem+0x13e30>)
 8014ae8:	461a      	mov	r2, r3
 8014aea:	460b      	mov	r3, r1
 8014aec:	cb03      	ldmia	r3!, {r0, r1}
 8014aee:	6010      	str	r0, [r2, #0]
 8014af0:	6051      	str	r1, [r2, #4]
 8014af2:	8819      	ldrh	r1, [r3, #0]
 8014af4:	789b      	ldrb	r3, [r3, #2]
 8014af6:	8111      	strh	r1, [r2, #8]
 8014af8:	7293      	strb	r3, [r2, #10]
			p->moveSize = 8;
 8014afa:	687b      	ldr	r3, [r7, #4]
 8014afc:	2208      	movs	r2, #8
 8014afe:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,I,H,G,D,H,J");
 8014b00:	687b      	ldr	r3, [r7, #4]
 8014b02:	3340      	adds	r3, #64	; 0x40
 8014b04:	4a75      	ldr	r2, [pc, #468]	; (8014cdc <createProblem+0x13e34>)
 8014b06:	461c      	mov	r4, r3
 8014b08:	4615      	mov	r5, r2
 8014b0a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014b0c:	6020      	str	r0, [r4, #0]
 8014b0e:	6061      	str	r1, [r4, #4]
 8014b10:	60a2      	str	r2, [r4, #8]
 8014b12:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"9,12,14,16,17,18,5,5");
 8014b14:	687b      	ldr	r3, [r7, #4]
 8014b16:	3304      	adds	r3, #4
 8014b18:	4a71      	ldr	r2, [pc, #452]	; (8014ce0 <createProblem+0x13e38>)
 8014b1a:	461d      	mov	r5, r3
 8014b1c:	4614      	mov	r4, r2
 8014b1e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014b20:	6028      	str	r0, [r5, #0]
 8014b22:	6069      	str	r1, [r5, #4]
 8014b24:	60aa      	str	r2, [r5, #8]
 8014b26:	60eb      	str	r3, [r5, #12]
 8014b28:	6820      	ldr	r0, [r4, #0]
 8014b2a:	6128      	str	r0, [r5, #16]
 8014b2c:	7923      	ldrb	r3, [r4, #4]
 8014b2e:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "d,d,d,d,d,e,s,s");
 8014b30:	687b      	ldr	r3, [r7, #4]
 8014b32:	33d8      	adds	r3, #216	; 0xd8
 8014b34:	4a6b      	ldr	r2, [pc, #428]	; (8014ce4 <createProblem+0x13e3c>)
 8014b36:	461c      	mov	r4, r3
 8014b38:	4615      	mov	r5, r2
 8014b3a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014b3c:	6020      	str	r0, [r4, #0]
 8014b3e:	6061      	str	r1, [r4, #4]
 8014b40:	60a2      	str	r2, [r4, #8]
 8014b42:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8014b44:	687b      	ldr	r3, [r7, #4]
 8014b46:	33cc      	adds	r3, #204	; 0xcc
 8014b48:	4a67      	ldr	r2, [pc, #412]	; (8014ce8 <createProblem+0x13e40>)
 8014b4a:	6810      	ldr	r0, [r2, #0]
 8014b4c:	6018      	str	r0, [r3, #0]
			break;
 8014b4e:	f005 bef1 	b.w	801a934 <createProblem+0x19a8c>
		case 654 :
			strcpy(p->name,"THE FORGOTTEN ONES");
 8014b52:	687b      	ldr	r3, [r7, #4]
 8014b54:	337c      	adds	r3, #124	; 0x7c
 8014b56:	4a65      	ldr	r2, [pc, #404]	; (8014cec <createProblem+0x13e44>)
 8014b58:	461d      	mov	r5, r3
 8014b5a:	4614      	mov	r4, r2
 8014b5c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014b5e:	6028      	str	r0, [r5, #0]
 8014b60:	6069      	str	r1, [r5, #4]
 8014b62:	60aa      	str	r2, [r5, #8]
 8014b64:	60eb      	str	r3, [r5, #12]
 8014b66:	8823      	ldrh	r3, [r4, #0]
 8014b68:	78a2      	ldrb	r2, [r4, #2]
 8014b6a:	822b      	strh	r3, [r5, #16]
 8014b6c:	4613      	mov	r3, r2
 8014b6e:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 8;
 8014b70:	687b      	ldr	r3, [r7, #4]
 8014b72:	2208      	movs	r2, #8
 8014b74:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,A,F,F,K,I,I");
 8014b76:	687b      	ldr	r3, [r7, #4]
 8014b78:	3340      	adds	r3, #64	; 0x40
 8014b7a:	4a5d      	ldr	r2, [pc, #372]	; (8014cf0 <createProblem+0x13e48>)
 8014b7c:	461c      	mov	r4, r3
 8014b7e:	4615      	mov	r5, r2
 8014b80:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014b82:	6020      	str	r0, [r4, #0]
 8014b84:	6061      	str	r1, [r4, #4]
 8014b86:	60a2      	str	r2, [r4, #8]
 8014b88:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,11,13,14,15,18");
 8014b8a:	687b      	ldr	r3, [r7, #4]
 8014b8c:	3304      	adds	r3, #4
 8014b8e:	4a59      	ldr	r2, [pc, #356]	; (8014cf4 <createProblem+0x13e4c>)
 8014b90:	461d      	mov	r5, r3
 8014b92:	4614      	mov	r4, r2
 8014b94:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014b96:	6028      	str	r0, [r5, #0]
 8014b98:	6069      	str	r1, [r5, #4]
 8014b9a:	60aa      	str	r2, [r5, #8]
 8014b9c:	60eb      	str	r3, [r5, #12]
 8014b9e:	6820      	ldr	r0, [r4, #0]
 8014ba0:	6128      	str	r0, [r5, #16]
 8014ba2:	7923      	ldrb	r3, [r4, #4]
 8014ba4:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8014ba6:	687b      	ldr	r3, [r7, #4]
 8014ba8:	33d8      	adds	r3, #216	; 0xd8
 8014baa:	4a53      	ldr	r2, [pc, #332]	; (8014cf8 <createProblem+0x13e50>)
 8014bac:	461c      	mov	r4, r3
 8014bae:	4615      	mov	r5, r2
 8014bb0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014bb2:	6020      	str	r0, [r4, #0]
 8014bb4:	6061      	str	r1, [r4, #4]
 8014bb6:	60a2      	str	r2, [r4, #8]
 8014bb8:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 8014bba:	687b      	ldr	r3, [r7, #4]
 8014bbc:	33cc      	adds	r3, #204	; 0xcc
 8014bbe:	4a4f      	ldr	r2, [pc, #316]	; (8014cfc <createProblem+0x13e54>)
 8014bc0:	6810      	ldr	r0, [r2, #0]
 8014bc2:	6018      	str	r0, [r3, #0]
			break;
 8014bc4:	f005 beb6 	b.w	801a934 <createProblem+0x19a8c>
		case 655 :
			strcpy(p->name,"GAMBIT");
 8014bc8:	687b      	ldr	r3, [r7, #4]
 8014bca:	337c      	adds	r3, #124	; 0x7c
 8014bcc:	4a4c      	ldr	r2, [pc, #304]	; (8014d00 <createProblem+0x13e58>)
 8014bce:	6810      	ldr	r0, [r2, #0]
 8014bd0:	6018      	str	r0, [r3, #0]
 8014bd2:	8891      	ldrh	r1, [r2, #4]
 8014bd4:	7992      	ldrb	r2, [r2, #6]
 8014bd6:	8099      	strh	r1, [r3, #4]
 8014bd8:	719a      	strb	r2, [r3, #6]
			p->moveSize = 5;
 8014bda:	687b      	ldr	r3, [r7, #4]
 8014bdc:	2205      	movs	r2, #5
 8014bde:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,I,E,D,A");
 8014be0:	687b      	ldr	r3, [r7, #4]
 8014be2:	3340      	adds	r3, #64	; 0x40
 8014be4:	4947      	ldr	r1, [pc, #284]	; (8014d04 <createProblem+0x13e5c>)
 8014be6:	461a      	mov	r2, r3
 8014be8:	460b      	mov	r3, r1
 8014bea:	cb03      	ldmia	r3!, {r0, r1}
 8014bec:	6010      	str	r0, [r2, #0]
 8014bee:	6051      	str	r1, [r2, #4]
 8014bf0:	881b      	ldrh	r3, [r3, #0]
 8014bf2:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,12,15,18");
 8014bf4:	687b      	ldr	r3, [r7, #4]
 8014bf6:	3304      	adds	r3, #4
 8014bf8:	4a43      	ldr	r2, [pc, #268]	; (8014d08 <createProblem+0x13e60>)
 8014bfa:	461c      	mov	r4, r3
 8014bfc:	4613      	mov	r3, r2
 8014bfe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014c00:	6020      	str	r0, [r4, #0]
 8014c02:	6061      	str	r1, [r4, #4]
 8014c04:	60a2      	str	r2, [r4, #8]
 8014c06:	881b      	ldrh	r3, [r3, #0]
 8014c08:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8014c0a:	687b      	ldr	r3, [r7, #4]
 8014c0c:	33d8      	adds	r3, #216	; 0xd8
 8014c0e:	493f      	ldr	r1, [pc, #252]	; (8014d0c <createProblem+0x13e64>)
 8014c10:	461a      	mov	r2, r3
 8014c12:	460b      	mov	r3, r1
 8014c14:	cb03      	ldmia	r3!, {r0, r1}
 8014c16:	6010      	str	r0, [r2, #0]
 8014c18:	6051      	str	r1, [r2, #4]
 8014c1a:	881b      	ldrh	r3, [r3, #0]
 8014c1c:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 8014c1e:	687b      	ldr	r3, [r7, #4]
 8014c20:	33cc      	adds	r3, #204	; 0xcc
 8014c22:	4a3b      	ldr	r2, [pc, #236]	; (8014d10 <createProblem+0x13e68>)
 8014c24:	8811      	ldrh	r1, [r2, #0]
 8014c26:	7892      	ldrb	r2, [r2, #2]
 8014c28:	8019      	strh	r1, [r3, #0]
 8014c2a:	709a      	strb	r2, [r3, #2]
			break;
 8014c2c:	f005 be82 	b.w	801a934 <createProblem+0x19a8c>
		case 656 :
			strcpy(p->name,"OLI'S YELLOW FEVA");
 8014c30:	687b      	ldr	r3, [r7, #4]
 8014c32:	337c      	adds	r3, #124	; 0x7c
 8014c34:	4a37      	ldr	r2, [pc, #220]	; (8014d14 <createProblem+0x13e6c>)
 8014c36:	461d      	mov	r5, r3
 8014c38:	4614      	mov	r4, r2
 8014c3a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014c3c:	6028      	str	r0, [r5, #0]
 8014c3e:	6069      	str	r1, [r5, #4]
 8014c40:	60aa      	str	r2, [r5, #8]
 8014c42:	60eb      	str	r3, [r5, #12]
 8014c44:	8823      	ldrh	r3, [r4, #0]
 8014c46:	822b      	strh	r3, [r5, #16]
			p->moveSize = 9;
 8014c48:	687b      	ldr	r3, [r7, #4]
 8014c4a:	2209      	movs	r2, #9
 8014c4c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,H,H,F,G,I,I");
 8014c4e:	687b      	ldr	r3, [r7, #4]
 8014c50:	3340      	adds	r3, #64	; 0x40
 8014c52:	4a31      	ldr	r2, [pc, #196]	; (8014d18 <createProblem+0x13e70>)
 8014c54:	461d      	mov	r5, r3
 8014c56:	4614      	mov	r4, r2
 8014c58:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014c5a:	6028      	str	r0, [r5, #0]
 8014c5c:	6069      	str	r1, [r5, #4]
 8014c5e:	60aa      	str	r2, [r5, #8]
 8014c60:	60eb      	str	r3, [r5, #12]
 8014c62:	8823      	ldrh	r3, [r4, #0]
 8014c64:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,6,8,5,10,11,14,14,18");
 8014c66:	687b      	ldr	r3, [r7, #4]
 8014c68:	3304      	adds	r3, #4
 8014c6a:	4a2c      	ldr	r2, [pc, #176]	; (8014d1c <createProblem+0x13e74>)
 8014c6c:	461c      	mov	r4, r3
 8014c6e:	4615      	mov	r5, r2
 8014c70:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014c72:	6020      	str	r0, [r4, #0]
 8014c74:	6061      	str	r1, [r4, #4]
 8014c76:	60a2      	str	r2, [r4, #8]
 8014c78:	60e3      	str	r3, [r4, #12]
 8014c7a:	6828      	ldr	r0, [r5, #0]
 8014c7c:	6120      	str	r0, [r4, #16]
 8014c7e:	88ab      	ldrh	r3, [r5, #4]
 8014c80:	79aa      	ldrb	r2, [r5, #6]
 8014c82:	82a3      	strh	r3, [r4, #20]
 8014c84:	4613      	mov	r3, r2
 8014c86:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,d,e");
 8014c88:	687b      	ldr	r3, [r7, #4]
 8014c8a:	33d8      	adds	r3, #216	; 0xd8
 8014c8c:	4a24      	ldr	r2, [pc, #144]	; (8014d20 <createProblem+0x13e78>)
 8014c8e:	461d      	mov	r5, r3
 8014c90:	4614      	mov	r4, r2
 8014c92:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014c94:	6028      	str	r0, [r5, #0]
 8014c96:	6069      	str	r1, [r5, #4]
 8014c98:	60aa      	str	r2, [r5, #8]
 8014c9a:	60eb      	str	r3, [r5, #12]
 8014c9c:	8823      	ldrh	r3, [r4, #0]
 8014c9e:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8014ca0:	687b      	ldr	r3, [r7, #4]
 8014ca2:	33cc      	adds	r3, #204	; 0xcc
 8014ca4:	4a1f      	ldr	r2, [pc, #124]	; (8014d24 <createProblem+0x13e7c>)
 8014ca6:	6810      	ldr	r0, [r2, #0]
 8014ca8:	6018      	str	r0, [r3, #0]
			break;
 8014caa:	f005 be43 	b.w	801a934 <createProblem+0x19a8c>
 8014cae:	bf00      	nop
 8014cb0:	08027a60 	.word	0x08027a60
 8014cb4:	08027a6c 	.word	0x08027a6c
 8014cb8:	08027a7c 	.word	0x08027a7c
 8014cbc:	08027a90 	.word	0x08027a90
 8014cc0:	08020dc8 	.word	0x08020dc8
 8014cc4:	08027aa0 	.word	0x08027aa0
 8014cc8:	08027aa8 	.word	0x08027aa8
 8014ccc:	08027ab8 	.word	0x08027ab8
 8014cd0:	080209d8 	.word	0x080209d8
 8014cd4:	080208f0 	.word	0x080208f0
 8014cd8:	08027acc 	.word	0x08027acc
 8014cdc:	08027ad8 	.word	0x08027ad8
 8014ce0:	08027ae8 	.word	0x08027ae8
 8014ce4:	08027b00 	.word	0x08027b00
 8014ce8:	08020928 	.word	0x08020928
 8014cec:	08027b10 	.word	0x08027b10
 8014cf0:	08027b24 	.word	0x08027b24
 8014cf4:	08027b34 	.word	0x08027b34
 8014cf8:	08020a4c 	.word	0x08020a4c
 8014cfc:	080209a4 	.word	0x080209a4
 8014d00:	08027b4c 	.word	0x08027b4c
 8014d04:	08027b54 	.word	0x08027b54
 8014d08:	080277a4 	.word	0x080277a4
 8014d0c:	080208a0 	.word	0x080208a0
 8014d10:	08020874 	.word	0x08020874
 8014d14:	08027b60 	.word	0x08027b60
 8014d18:	08027b74 	.word	0x08027b74
 8014d1c:	08027b88 	.word	0x08027b88
 8014d20:	08022f10 	.word	0x08022f10
 8014d24:	08020830 	.word	0x08020830
		case 657 :
			strcpy(p->name,"ELEMENTS OF STYLE");
 8014d28:	687b      	ldr	r3, [r7, #4]
 8014d2a:	337c      	adds	r3, #124	; 0x7c
 8014d2c:	4ab8      	ldr	r2, [pc, #736]	; (8015010 <createProblem+0x14168>)
 8014d2e:	461d      	mov	r5, r3
 8014d30:	4614      	mov	r4, r2
 8014d32:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014d34:	6028      	str	r0, [r5, #0]
 8014d36:	6069      	str	r1, [r5, #4]
 8014d38:	60aa      	str	r2, [r5, #8]
 8014d3a:	60eb      	str	r3, [r5, #12]
 8014d3c:	8823      	ldrh	r3, [r4, #0]
 8014d3e:	822b      	strh	r3, [r5, #16]
			p->moveSize = 6;
 8014d40:	687b      	ldr	r3, [r7, #4]
 8014d42:	2206      	movs	r2, #6
 8014d44:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,J,D,F,A,D");
 8014d46:	687b      	ldr	r3, [r7, #4]
 8014d48:	3340      	adds	r3, #64	; 0x40
 8014d4a:	4ab2      	ldr	r2, [pc, #712]	; (8015014 <createProblem+0x1416c>)
 8014d4c:	461c      	mov	r4, r3
 8014d4e:	4613      	mov	r3, r2
 8014d50:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014d52:	6020      	str	r0, [r4, #0]
 8014d54:	6061      	str	r1, [r4, #4]
 8014d56:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,5,7,11,14,18");
 8014d58:	687b      	ldr	r3, [r7, #4]
 8014d5a:	3304      	adds	r3, #4
 8014d5c:	4aae      	ldr	r2, [pc, #696]	; (8015018 <createProblem+0x14170>)
 8014d5e:	461c      	mov	r4, r3
 8014d60:	4613      	mov	r3, r2
 8014d62:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014d64:	6020      	str	r0, [r4, #0]
 8014d66:	6061      	str	r1, [r4, #4]
 8014d68:	60a2      	str	r2, [r4, #8]
 8014d6a:	881a      	ldrh	r2, [r3, #0]
 8014d6c:	789b      	ldrb	r3, [r3, #2]
 8014d6e:	81a2      	strh	r2, [r4, #12]
 8014d70:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8014d72:	687b      	ldr	r3, [r7, #4]
 8014d74:	33d8      	adds	r3, #216	; 0xd8
 8014d76:	4aa9      	ldr	r2, [pc, #676]	; (801501c <createProblem+0x14174>)
 8014d78:	461c      	mov	r4, r3
 8014d7a:	4613      	mov	r3, r2
 8014d7c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014d7e:	6020      	str	r0, [r4, #0]
 8014d80:	6061      	str	r1, [r4, #4]
 8014d82:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8014d84:	687b      	ldr	r3, [r7, #4]
 8014d86:	33cc      	adds	r3, #204	; 0xcc
 8014d88:	4aa5      	ldr	r2, [pc, #660]	; (8015020 <createProblem+0x14178>)
 8014d8a:	8811      	ldrh	r1, [r2, #0]
 8014d8c:	7892      	ldrb	r2, [r2, #2]
 8014d8e:	8019      	strh	r1, [r3, #0]
 8014d90:	709a      	strb	r2, [r3, #2]
			break;
 8014d92:	f005 bdcf 	b.w	801a934 <createProblem+0x19a8c>
		case 658 :
			strcpy(p->name,"GARAGE DAYS");
 8014d96:	687b      	ldr	r3, [r7, #4]
 8014d98:	337c      	adds	r3, #124	; 0x7c
 8014d9a:	4aa2      	ldr	r2, [pc, #648]	; (8015024 <createProblem+0x1417c>)
 8014d9c:	461c      	mov	r4, r3
 8014d9e:	4613      	mov	r3, r2
 8014da0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014da2:	6020      	str	r0, [r4, #0]
 8014da4:	6061      	str	r1, [r4, #4]
 8014da6:	60a2      	str	r2, [r4, #8]
			p->moveSize = 7;
 8014da8:	687b      	ldr	r3, [r7, #4]
 8014daa:	2207      	movs	r2, #7
 8014dac:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,K,H,I,E,D");
 8014dae:	687b      	ldr	r3, [r7, #4]
 8014db0:	3340      	adds	r3, #64	; 0x40
 8014db2:	4a9d      	ldr	r2, [pc, #628]	; (8015028 <createProblem+0x14180>)
 8014db4:	461c      	mov	r4, r3
 8014db6:	4613      	mov	r3, r2
 8014db8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014dba:	6020      	str	r0, [r4, #0]
 8014dbc:	6061      	str	r1, [r4, #4]
 8014dbe:	60a2      	str	r2, [r4, #8]
 8014dc0:	881b      	ldrh	r3, [r3, #0]
 8014dc2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,9,12,14,16,18");
 8014dc4:	687b      	ldr	r3, [r7, #4]
 8014dc6:	3304      	adds	r3, #4
 8014dc8:	4a98      	ldr	r2, [pc, #608]	; (801502c <createProblem+0x14184>)
 8014dca:	461d      	mov	r5, r3
 8014dcc:	4614      	mov	r4, r2
 8014dce:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014dd0:	6028      	str	r0, [r5, #0]
 8014dd2:	6069      	str	r1, [r5, #4]
 8014dd4:	60aa      	str	r2, [r5, #8]
 8014dd6:	60eb      	str	r3, [r5, #12]
 8014dd8:	8823      	ldrh	r3, [r4, #0]
 8014dda:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8014ddc:	687b      	ldr	r3, [r7, #4]
 8014dde:	33d8      	adds	r3, #216	; 0xd8
 8014de0:	4a93      	ldr	r2, [pc, #588]	; (8015030 <createProblem+0x14188>)
 8014de2:	461c      	mov	r4, r3
 8014de4:	4613      	mov	r3, r2
 8014de6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014de8:	6020      	str	r0, [r4, #0]
 8014dea:	6061      	str	r1, [r4, #4]
 8014dec:	60a2      	str	r2, [r4, #8]
 8014dee:	881b      	ldrh	r3, [r3, #0]
 8014df0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8014df2:	687b      	ldr	r3, [r7, #4]
 8014df4:	33cc      	adds	r3, #204	; 0xcc
 8014df6:	4a8f      	ldr	r2, [pc, #572]	; (8015034 <createProblem+0x1418c>)
 8014df8:	8811      	ldrh	r1, [r2, #0]
 8014dfa:	7892      	ldrb	r2, [r2, #2]
 8014dfc:	8019      	strh	r1, [r3, #0]
 8014dfe:	709a      	strb	r2, [r3, #2]
			break;
 8014e00:	f005 bd98 	b.w	801a934 <createProblem+0x19a8c>
		case 659 :
			strcpy(p->name,"MÁVROS K2");
 8014e04:	687b      	ldr	r3, [r7, #4]
 8014e06:	337c      	adds	r3, #124	; 0x7c
 8014e08:	498b      	ldr	r1, [pc, #556]	; (8015038 <createProblem+0x14190>)
 8014e0a:	461a      	mov	r2, r3
 8014e0c:	460b      	mov	r3, r1
 8014e0e:	cb03      	ldmia	r3!, {r0, r1}
 8014e10:	6010      	str	r0, [r2, #0]
 8014e12:	6051      	str	r1, [r2, #4]
 8014e14:	8819      	ldrh	r1, [r3, #0]
 8014e16:	789b      	ldrb	r3, [r3, #2]
 8014e18:	8111      	strh	r1, [r2, #8]
 8014e1a:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 8014e1c:	687b      	ldr	r3, [r7, #4]
 8014e1e:	2206      	movs	r2, #6
 8014e20:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,G,C,C,D");
 8014e22:	687b      	ldr	r3, [r7, #4]
 8014e24:	3340      	adds	r3, #64	; 0x40
 8014e26:	4a85      	ldr	r2, [pc, #532]	; (801503c <createProblem+0x14194>)
 8014e28:	461c      	mov	r4, r3
 8014e2a:	4613      	mov	r3, r2
 8014e2c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014e2e:	6020      	str	r0, [r4, #0]
 8014e30:	6061      	str	r1, [r4, #4]
 8014e32:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,9,8,13,18");
 8014e34:	687b      	ldr	r3, [r7, #4]
 8014e36:	3304      	adds	r3, #4
 8014e38:	4a81      	ldr	r2, [pc, #516]	; (8015040 <createProblem+0x14198>)
 8014e3a:	461c      	mov	r4, r3
 8014e3c:	4613      	mov	r3, r2
 8014e3e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014e40:	6020      	str	r0, [r4, #0]
 8014e42:	6061      	str	r1, [r4, #4]
 8014e44:	60a2      	str	r2, [r4, #8]
 8014e46:	881b      	ldrh	r3, [r3, #0]
 8014e48:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8014e4a:	687b      	ldr	r3, [r7, #4]
 8014e4c:	33d8      	adds	r3, #216	; 0xd8
 8014e4e:	4a7d      	ldr	r2, [pc, #500]	; (8015044 <createProblem+0x1419c>)
 8014e50:	461c      	mov	r4, r3
 8014e52:	4613      	mov	r3, r2
 8014e54:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014e56:	6020      	str	r0, [r4, #0]
 8014e58:	6061      	str	r1, [r4, #4]
 8014e5a:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 8014e5c:	687b      	ldr	r3, [r7, #4]
 8014e5e:	33cc      	adds	r3, #204	; 0xcc
 8014e60:	4a79      	ldr	r2, [pc, #484]	; (8015048 <createProblem+0x141a0>)
 8014e62:	6810      	ldr	r0, [r2, #0]
 8014e64:	6018      	str	r0, [r3, #0]
			break;
 8014e66:	f005 bd65 	b.w	801a934 <createProblem+0x19a8c>
		case 66 :
			strcpy(p->name,"DUBUCHI");
 8014e6a:	687b      	ldr	r3, [r7, #4]
 8014e6c:	337c      	adds	r3, #124	; 0x7c
 8014e6e:	4977      	ldr	r1, [pc, #476]	; (801504c <createProblem+0x141a4>)
 8014e70:	461a      	mov	r2, r3
 8014e72:	460b      	mov	r3, r1
 8014e74:	cb03      	ldmia	r3!, {r0, r1}
 8014e76:	6010      	str	r0, [r2, #0]
 8014e78:	6051      	str	r1, [r2, #4]
			p->moveSize = 6;
 8014e7a:	687b      	ldr	r3, [r7, #4]
 8014e7c:	2206      	movs	r2, #6
 8014e7e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,D,G,C,C,A");
 8014e80:	687b      	ldr	r3, [r7, #4]
 8014e82:	3340      	adds	r3, #64	; 0x40
 8014e84:	4a72      	ldr	r2, [pc, #456]	; (8015050 <createProblem+0x141a8>)
 8014e86:	461c      	mov	r4, r3
 8014e88:	4613      	mov	r3, r2
 8014e8a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014e8c:	6020      	str	r0, [r4, #0]
 8014e8e:	6061      	str	r1, [r4, #4]
 8014e90:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,7,10,13,16,18");
 8014e92:	687b      	ldr	r3, [r7, #4]
 8014e94:	3304      	adds	r3, #4
 8014e96:	4a6f      	ldr	r2, [pc, #444]	; (8015054 <createProblem+0x141ac>)
 8014e98:	461c      	mov	r4, r3
 8014e9a:	4615      	mov	r5, r2
 8014e9c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014e9e:	6020      	str	r0, [r4, #0]
 8014ea0:	6061      	str	r1, [r4, #4]
 8014ea2:	60a2      	str	r2, [r4, #8]
 8014ea4:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8014ea6:	687b      	ldr	r3, [r7, #4]
 8014ea8:	33d8      	adds	r3, #216	; 0xd8
 8014eaa:	4a5c      	ldr	r2, [pc, #368]	; (801501c <createProblem+0x14174>)
 8014eac:	461c      	mov	r4, r3
 8014eae:	4613      	mov	r3, r2
 8014eb0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014eb2:	6020      	str	r0, [r4, #0]
 8014eb4:	6061      	str	r1, [r4, #4]
 8014eb6:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8014eb8:	687b      	ldr	r3, [r7, #4]
 8014eba:	33cc      	adds	r3, #204	; 0xcc
 8014ebc:	4a66      	ldr	r2, [pc, #408]	; (8015058 <createProblem+0x141b0>)
 8014ebe:	6810      	ldr	r0, [r2, #0]
 8014ec0:	6018      	str	r0, [r3, #0]
			break;
 8014ec2:	f005 bd37 	b.w	801a934 <createProblem+0x19a8c>
		case 660 :
			strcpy(p->name,"SET1");
 8014ec6:	687b      	ldr	r3, [r7, #4]
 8014ec8:	337c      	adds	r3, #124	; 0x7c
 8014eca:	4a64      	ldr	r2, [pc, #400]	; (801505c <createProblem+0x141b4>)
 8014ecc:	6810      	ldr	r0, [r2, #0]
 8014ece:	6018      	str	r0, [r3, #0]
 8014ed0:	7912      	ldrb	r2, [r2, #4]
 8014ed2:	711a      	strb	r2, [r3, #4]
			p->moveSize = 9;
 8014ed4:	687b      	ldr	r3, [r7, #4]
 8014ed6:	2209      	movs	r2, #9
 8014ed8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,E,H,F,I,G,I,J");
 8014eda:	687b      	ldr	r3, [r7, #4]
 8014edc:	3340      	adds	r3, #64	; 0x40
 8014ede:	4a60      	ldr	r2, [pc, #384]	; (8015060 <createProblem+0x141b8>)
 8014ee0:	461d      	mov	r5, r3
 8014ee2:	4614      	mov	r4, r2
 8014ee4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014ee6:	6028      	str	r0, [r5, #0]
 8014ee8:	6069      	str	r1, [r5, #4]
 8014eea:	60aa      	str	r2, [r5, #8]
 8014eec:	60eb      	str	r3, [r5, #12]
 8014eee:	8823      	ldrh	r3, [r4, #0]
 8014ef0:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,6,8,10,13,14,17,18,5");
 8014ef2:	687b      	ldr	r3, [r7, #4]
 8014ef4:	3304      	adds	r3, #4
 8014ef6:	4a5b      	ldr	r2, [pc, #364]	; (8015064 <createProblem+0x141bc>)
 8014ef8:	461c      	mov	r4, r3
 8014efa:	4615      	mov	r5, r2
 8014efc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014efe:	6020      	str	r0, [r4, #0]
 8014f00:	6061      	str	r1, [r4, #4]
 8014f02:	60a2      	str	r2, [r4, #8]
 8014f04:	60e3      	str	r3, [r4, #12]
 8014f06:	6828      	ldr	r0, [r5, #0]
 8014f08:	6120      	str	r0, [r4, #16]
 8014f0a:	88ab      	ldrh	r3, [r5, #4]
 8014f0c:	79aa      	ldrb	r2, [r5, #6]
 8014f0e:	82a3      	strh	r3, [r4, #20]
 8014f10:	4613      	mov	r3, r2
 8014f12:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e,d");
 8014f14:	687b      	ldr	r3, [r7, #4]
 8014f16:	33d8      	adds	r3, #216	; 0xd8
 8014f18:	4a53      	ldr	r2, [pc, #332]	; (8015068 <createProblem+0x141c0>)
 8014f1a:	461d      	mov	r5, r3
 8014f1c:	4614      	mov	r4, r2
 8014f1e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014f20:	6028      	str	r0, [r5, #0]
 8014f22:	6069      	str	r1, [r5, #4]
 8014f24:	60aa      	str	r2, [r5, #8]
 8014f26:	60eb      	str	r3, [r5, #12]
 8014f28:	8823      	ldrh	r3, [r4, #0]
 8014f2a:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8014f2c:	687b      	ldr	r3, [r7, #4]
 8014f2e:	33cc      	adds	r3, #204	; 0xcc
 8014f30:	4a4e      	ldr	r2, [pc, #312]	; (801506c <createProblem+0x141c4>)
 8014f32:	6810      	ldr	r0, [r2, #0]
 8014f34:	6018      	str	r0, [r3, #0]
			break;
 8014f36:	f005 bcfd 	b.w	801a934 <createProblem+0x19a8c>
		case 661 :
			strcpy(p->name,"MEN IN BLACK");
 8014f3a:	687b      	ldr	r3, [r7, #4]
 8014f3c:	337c      	adds	r3, #124	; 0x7c
 8014f3e:	4a4c      	ldr	r2, [pc, #304]	; (8015070 <createProblem+0x141c8>)
 8014f40:	461c      	mov	r4, r3
 8014f42:	4613      	mov	r3, r2
 8014f44:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014f46:	6020      	str	r0, [r4, #0]
 8014f48:	6061      	str	r1, [r4, #4]
 8014f4a:	60a2      	str	r2, [r4, #8]
 8014f4c:	781b      	ldrb	r3, [r3, #0]
 8014f4e:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 8014f50:	687b      	ldr	r3, [r7, #4]
 8014f52:	2206      	movs	r2, #6
 8014f54:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,H,I,E,D");
 8014f56:	687b      	ldr	r3, [r7, #4]
 8014f58:	3340      	adds	r3, #64	; 0x40
 8014f5a:	4a46      	ldr	r2, [pc, #280]	; (8015074 <createProblem+0x141cc>)
 8014f5c:	461c      	mov	r4, r3
 8014f5e:	4613      	mov	r3, r2
 8014f60:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014f62:	6020      	str	r0, [r4, #0]
 8014f64:	6061      	str	r1, [r4, #4]
 8014f66:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,9,12,14,16,18");
 8014f68:	687b      	ldr	r3, [r7, #4]
 8014f6a:	3304      	adds	r3, #4
 8014f6c:	4a42      	ldr	r2, [pc, #264]	; (8015078 <createProblem+0x141d0>)
 8014f6e:	461c      	mov	r4, r3
 8014f70:	4615      	mov	r5, r2
 8014f72:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8014f74:	6020      	str	r0, [r4, #0]
 8014f76:	6061      	str	r1, [r4, #4]
 8014f78:	60a2      	str	r2, [r4, #8]
 8014f7a:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8014f7c:	687b      	ldr	r3, [r7, #4]
 8014f7e:	33d8      	adds	r3, #216	; 0xd8
 8014f80:	4a26      	ldr	r2, [pc, #152]	; (801501c <createProblem+0x14174>)
 8014f82:	461c      	mov	r4, r3
 8014f84:	4613      	mov	r3, r2
 8014f86:	cb07      	ldmia	r3!, {r0, r1, r2}
 8014f88:	6020      	str	r0, [r4, #0]
 8014f8a:	6061      	str	r1, [r4, #4]
 8014f8c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8014f8e:	687b      	ldr	r3, [r7, #4]
 8014f90:	33cc      	adds	r3, #204	; 0xcc
 8014f92:	4a23      	ldr	r2, [pc, #140]	; (8015020 <createProblem+0x14178>)
 8014f94:	8811      	ldrh	r1, [r2, #0]
 8014f96:	7892      	ldrb	r2, [r2, #2]
 8014f98:	8019      	strh	r1, [r3, #0]
 8014f9a:	709a      	strb	r2, [r3, #2]
			break;
 8014f9c:	f005 bcca 	b.w	801a934 <createProblem+0x19a8c>
		case 662 :
			strcpy(p->name,"ROADWAY");
 8014fa0:	687b      	ldr	r3, [r7, #4]
 8014fa2:	337c      	adds	r3, #124	; 0x7c
 8014fa4:	4935      	ldr	r1, [pc, #212]	; (801507c <createProblem+0x141d4>)
 8014fa6:	461a      	mov	r2, r3
 8014fa8:	460b      	mov	r3, r1
 8014faa:	cb03      	ldmia	r3!, {r0, r1}
 8014fac:	6010      	str	r0, [r2, #0]
 8014fae:	6051      	str	r1, [r2, #4]
			p->moveSize = 9;
 8014fb0:	687b      	ldr	r3, [r7, #4]
 8014fb2:	2209      	movs	r2, #9
 8014fb4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,G,F,I,E,G,D,I");
 8014fb6:	687b      	ldr	r3, [r7, #4]
 8014fb8:	3340      	adds	r3, #64	; 0x40
 8014fba:	4a31      	ldr	r2, [pc, #196]	; (8015080 <createProblem+0x141d8>)
 8014fbc:	461d      	mov	r5, r3
 8014fbe:	4614      	mov	r4, r2
 8014fc0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014fc2:	6028      	str	r0, [r5, #0]
 8014fc4:	6069      	str	r1, [r5, #4]
 8014fc6:	60aa      	str	r2, [r5, #8]
 8014fc8:	60eb      	str	r3, [r5, #12]
 8014fca:	8823      	ldrh	r3, [r4, #0]
 8014fcc:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,5,9,13,14,16,17,18,10");
 8014fce:	687b      	ldr	r3, [r7, #4]
 8014fd0:	3304      	adds	r3, #4
 8014fd2:	4a2c      	ldr	r2, [pc, #176]	; (8015084 <createProblem+0x141dc>)
 8014fd4:	461d      	mov	r5, r3
 8014fd6:	4614      	mov	r4, r2
 8014fd8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014fda:	6028      	str	r0, [r5, #0]
 8014fdc:	6069      	str	r1, [r5, #4]
 8014fde:	60aa      	str	r2, [r5, #8]
 8014fe0:	60eb      	str	r3, [r5, #12]
 8014fe2:	cc03      	ldmia	r4!, {r0, r1}
 8014fe4:	6128      	str	r0, [r5, #16]
 8014fe6:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e,d");
 8014fe8:	687b      	ldr	r3, [r7, #4]
 8014fea:	33d8      	adds	r3, #216	; 0xd8
 8014fec:	4a1e      	ldr	r2, [pc, #120]	; (8015068 <createProblem+0x141c0>)
 8014fee:	461d      	mov	r5, r3
 8014ff0:	4614      	mov	r4, r2
 8014ff2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8014ff4:	6028      	str	r0, [r5, #0]
 8014ff6:	6069      	str	r1, [r5, #4]
 8014ff8:	60aa      	str	r2, [r5, #8]
 8014ffa:	60eb      	str	r3, [r5, #12]
 8014ffc:	8823      	ldrh	r3, [r4, #0]
 8014ffe:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8015000:	687b      	ldr	r3, [r7, #4]
 8015002:	33cc      	adds	r3, #204	; 0xcc
 8015004:	4a19      	ldr	r2, [pc, #100]	; (801506c <createProblem+0x141c4>)
 8015006:	6810      	ldr	r0, [r2, #0]
 8015008:	6018      	str	r0, [r3, #0]
			break;
 801500a:	f005 bc93 	b.w	801a934 <createProblem+0x19a8c>
 801500e:	bf00      	nop
 8015010:	08027ba0 	.word	0x08027ba0
 8015014:	08027bb4 	.word	0x08027bb4
 8015018:	08027bc0 	.word	0x08027bc0
 801501c:	0802091c 	.word	0x0802091c
 8015020:	08020874 	.word	0x08020874
 8015024:	08027bd0 	.word	0x08027bd0
 8015028:	08027bdc 	.word	0x08027bdc
 801502c:	08027bec 	.word	0x08027bec
 8015030:	08020820 	.word	0x08020820
 8015034:	080208f0 	.word	0x080208f0
 8015038:	08027c00 	.word	0x08027c00
 801503c:	08027c0c 	.word	0x08027c0c
 8015040:	08027c18 	.word	0x08027c18
 8015044:	08020e90 	.word	0x08020e90
 8015048:	08020928 	.word	0x08020928
 801504c:	08027c28 	.word	0x08027c28
 8015050:	08027c30 	.word	0x08027c30
 8015054:	080216c0 	.word	0x080216c0
 8015058:	080209a4 	.word	0x080209a4
 801505c:	08027c3c 	.word	0x08027c3c
 8015060:	08027c44 	.word	0x08027c44
 8015064:	08027c58 	.word	0x08027c58
 8015068:	08027c70 	.word	0x08027c70
 801506c:	08020830 	.word	0x08020830
 8015070:	08027c84 	.word	0x08027c84
 8015074:	08027c94 	.word	0x08027c94
 8015078:	08027ca0 	.word	0x08027ca0
 801507c:	08027cb0 	.word	0x08027cb0
 8015080:	08027cb8 	.word	0x08027cb8
 8015084:	08027ccc 	.word	0x08027ccc
		case 663 :
			strcpy(p->name,"BACK TO BASICS");
 8015088:	687b      	ldr	r3, [r7, #4]
 801508a:	337c      	adds	r3, #124	; 0x7c
 801508c:	4ab9      	ldr	r2, [pc, #740]	; (8015374 <createProblem+0x144cc>)
 801508e:	461c      	mov	r4, r3
 8015090:	4613      	mov	r3, r2
 8015092:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015094:	6020      	str	r0, [r4, #0]
 8015096:	6061      	str	r1, [r4, #4]
 8015098:	60a2      	str	r2, [r4, #8]
 801509a:	881a      	ldrh	r2, [r3, #0]
 801509c:	789b      	ldrb	r3, [r3, #2]
 801509e:	81a2      	strh	r2, [r4, #12]
 80150a0:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 7;
 80150a2:	687b      	ldr	r3, [r7, #4]
 80150a4:	2207      	movs	r2, #7
 80150a6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,K,H,K,G,G,D");
 80150a8:	687b      	ldr	r3, [r7, #4]
 80150aa:	3340      	adds	r3, #64	; 0x40
 80150ac:	4ab2      	ldr	r2, [pc, #712]	; (8015378 <createProblem+0x144d0>)
 80150ae:	461c      	mov	r4, r3
 80150b0:	4613      	mov	r3, r2
 80150b2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80150b4:	6020      	str	r0, [r4, #0]
 80150b6:	6061      	str	r1, [r4, #4]
 80150b8:	60a2      	str	r2, [r4, #8]
 80150ba:	881b      	ldrh	r3, [r3, #0]
 80150bc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,12,14,15,17,18");
 80150be:	687b      	ldr	r3, [r7, #4]
 80150c0:	3304      	adds	r3, #4
 80150c2:	4aae      	ldr	r2, [pc, #696]	; (801537c <createProblem+0x144d4>)
 80150c4:	461d      	mov	r5, r3
 80150c6:	4614      	mov	r4, r2
 80150c8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80150ca:	6028      	str	r0, [r5, #0]
 80150cc:	6069      	str	r1, [r5, #4]
 80150ce:	60aa      	str	r2, [r5, #8]
 80150d0:	60eb      	str	r3, [r5, #12]
 80150d2:	8823      	ldrh	r3, [r4, #0]
 80150d4:	78a2      	ldrb	r2, [r4, #2]
 80150d6:	822b      	strh	r3, [r5, #16]
 80150d8:	4613      	mov	r3, r2
 80150da:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80150dc:	687b      	ldr	r3, [r7, #4]
 80150de:	33d8      	adds	r3, #216	; 0xd8
 80150e0:	4aa7      	ldr	r2, [pc, #668]	; (8015380 <createProblem+0x144d8>)
 80150e2:	461c      	mov	r4, r3
 80150e4:	4613      	mov	r3, r2
 80150e6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80150e8:	6020      	str	r0, [r4, #0]
 80150ea:	6061      	str	r1, [r4, #4]
 80150ec:	60a2      	str	r2, [r4, #8]
 80150ee:	881b      	ldrh	r3, [r3, #0]
 80150f0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80150f2:	687b      	ldr	r3, [r7, #4]
 80150f4:	33cc      	adds	r3, #204	; 0xcc
 80150f6:	4aa3      	ldr	r2, [pc, #652]	; (8015384 <createProblem+0x144dc>)
 80150f8:	6810      	ldr	r0, [r2, #0]
 80150fa:	6018      	str	r0, [r3, #0]
			break;
 80150fc:	f005 bc1a 	b.w	801a934 <createProblem+0x19a8c>
		case 664 :
			strcpy(p->name,"BIG DAWWWWG");
 8015100:	687b      	ldr	r3, [r7, #4]
 8015102:	337c      	adds	r3, #124	; 0x7c
 8015104:	4aa0      	ldr	r2, [pc, #640]	; (8015388 <createProblem+0x144e0>)
 8015106:	461c      	mov	r4, r3
 8015108:	4613      	mov	r3, r2
 801510a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801510c:	6020      	str	r0, [r4, #0]
 801510e:	6061      	str	r1, [r4, #4]
 8015110:	60a2      	str	r2, [r4, #8]
			p->moveSize = 7;
 8015112:	687b      	ldr	r3, [r7, #4]
 8015114:	2207      	movs	r2, #7
 8015116:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,H,C,H,H,I");
 8015118:	687b      	ldr	r3, [r7, #4]
 801511a:	3340      	adds	r3, #64	; 0x40
 801511c:	4a9b      	ldr	r2, [pc, #620]	; (801538c <createProblem+0x144e4>)
 801511e:	461c      	mov	r4, r3
 8015120:	4613      	mov	r3, r2
 8015122:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015124:	6020      	str	r0, [r4, #0]
 8015126:	6061      	str	r1, [r4, #4]
 8015128:	60a2      	str	r2, [r4, #8]
 801512a:	881b      	ldrh	r3, [r3, #0]
 801512c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,10,13,13,16,18");
 801512e:	687b      	ldr	r3, [r7, #4]
 8015130:	3304      	adds	r3, #4
 8015132:	4a97      	ldr	r2, [pc, #604]	; (8015390 <createProblem+0x144e8>)
 8015134:	461d      	mov	r5, r3
 8015136:	4614      	mov	r4, r2
 8015138:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801513a:	6028      	str	r0, [r5, #0]
 801513c:	6069      	str	r1, [r5, #4]
 801513e:	60aa      	str	r2, [r5, #8]
 8015140:	60eb      	str	r3, [r5, #12]
 8015142:	8823      	ldrh	r3, [r4, #0]
 8015144:	78a2      	ldrb	r2, [r4, #2]
 8015146:	822b      	strh	r3, [r5, #16]
 8015148:	4613      	mov	r3, r2
 801514a:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 801514c:	687b      	ldr	r3, [r7, #4]
 801514e:	33d8      	adds	r3, #216	; 0xd8
 8015150:	4a8b      	ldr	r2, [pc, #556]	; (8015380 <createProblem+0x144d8>)
 8015152:	461c      	mov	r4, r3
 8015154:	4613      	mov	r3, r2
 8015156:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015158:	6020      	str	r0, [r4, #0]
 801515a:	6061      	str	r1, [r4, #4]
 801515c:	60a2      	str	r2, [r4, #8]
 801515e:	881b      	ldrh	r3, [r3, #0]
 8015160:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8015162:	687b      	ldr	r3, [r7, #4]
 8015164:	33cc      	adds	r3, #204	; 0xcc
 8015166:	4a8b      	ldr	r2, [pc, #556]	; (8015394 <createProblem+0x144ec>)
 8015168:	8811      	ldrh	r1, [r2, #0]
 801516a:	7892      	ldrb	r2, [r2, #2]
 801516c:	8019      	strh	r1, [r3, #0]
 801516e:	709a      	strb	r2, [r3, #2]
			break;
 8015170:	f005 bbe0 	b.w	801a934 <createProblem+0x19a8c>
		case 665 :
			strcpy(p->name,"RIVER RAT");
 8015174:	687b      	ldr	r3, [r7, #4]
 8015176:	337c      	adds	r3, #124	; 0x7c
 8015178:	4987      	ldr	r1, [pc, #540]	; (8015398 <createProblem+0x144f0>)
 801517a:	461a      	mov	r2, r3
 801517c:	460b      	mov	r3, r1
 801517e:	cb03      	ldmia	r3!, {r0, r1}
 8015180:	6010      	str	r0, [r2, #0]
 8015182:	6051      	str	r1, [r2, #4]
 8015184:	881b      	ldrh	r3, [r3, #0]
 8015186:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 8015188:	687b      	ldr	r3, [r7, #4]
 801518a:	2206      	movs	r2, #6
 801518c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,E,D,E,A");
 801518e:	687b      	ldr	r3, [r7, #4]
 8015190:	3340      	adds	r3, #64	; 0x40
 8015192:	4a82      	ldr	r2, [pc, #520]	; (801539c <createProblem+0x144f4>)
 8015194:	461c      	mov	r4, r3
 8015196:	4613      	mov	r3, r2
 8015198:	cb07      	ldmia	r3!, {r0, r1, r2}
 801519a:	6020      	str	r0, [r4, #0]
 801519c:	6061      	str	r1, [r4, #4]
 801519e:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,12,11,16,18");
 80151a0:	687b      	ldr	r3, [r7, #4]
 80151a2:	3304      	adds	r3, #4
 80151a4:	4a7e      	ldr	r2, [pc, #504]	; (80153a0 <createProblem+0x144f8>)
 80151a6:	461c      	mov	r4, r3
 80151a8:	4615      	mov	r5, r2
 80151aa:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80151ac:	6020      	str	r0, [r4, #0]
 80151ae:	6061      	str	r1, [r4, #4]
 80151b0:	60a2      	str	r2, [r4, #8]
 80151b2:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80151b4:	687b      	ldr	r3, [r7, #4]
 80151b6:	33d8      	adds	r3, #216	; 0xd8
 80151b8:	4a7a      	ldr	r2, [pc, #488]	; (80153a4 <createProblem+0x144fc>)
 80151ba:	461c      	mov	r4, r3
 80151bc:	4613      	mov	r3, r2
 80151be:	cb07      	ldmia	r3!, {r0, r1, r2}
 80151c0:	6020      	str	r0, [r4, #0]
 80151c2:	6061      	str	r1, [r4, #4]
 80151c4:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 80151c6:	687b      	ldr	r3, [r7, #4]
 80151c8:	33cc      	adds	r3, #204	; 0xcc
 80151ca:	4a77      	ldr	r2, [pc, #476]	; (80153a8 <createProblem+0x14500>)
 80151cc:	6810      	ldr	r0, [r2, #0]
 80151ce:	6018      	str	r0, [r3, #0]
			break;
 80151d0:	f005 bbb0 	b.w	801a934 <createProblem+0x19a8c>
		case 666 :
			strcpy(p->name,"MASTERFUL GAP ALT");
 80151d4:	687b      	ldr	r3, [r7, #4]
 80151d6:	337c      	adds	r3, #124	; 0x7c
 80151d8:	4a74      	ldr	r2, [pc, #464]	; (80153ac <createProblem+0x14504>)
 80151da:	461d      	mov	r5, r3
 80151dc:	4614      	mov	r4, r2
 80151de:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80151e0:	6028      	str	r0, [r5, #0]
 80151e2:	6069      	str	r1, [r5, #4]
 80151e4:	60aa      	str	r2, [r5, #8]
 80151e6:	60eb      	str	r3, [r5, #12]
 80151e8:	8823      	ldrh	r3, [r4, #0]
 80151ea:	822b      	strh	r3, [r5, #16]
			p->moveSize = 6;
 80151ec:	687b      	ldr	r3, [r7, #4]
 80151ee:	2206      	movs	r2, #6
 80151f0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"A,B,C,E,F,I");
 80151f2:	687b      	ldr	r3, [r7, #4]
 80151f4:	3340      	adds	r3, #64	; 0x40
 80151f6:	4a6e      	ldr	r2, [pc, #440]	; (80153b0 <createProblem+0x14508>)
 80151f8:	461c      	mov	r4, r3
 80151fa:	4613      	mov	r3, r2
 80151fc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80151fe:	6020      	str	r0, [r4, #0]
 8015200:	6061      	str	r1, [r4, #4]
 8015202:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"9,6,5,16,11,18");
 8015204:	687b      	ldr	r3, [r7, #4]
 8015206:	3304      	adds	r3, #4
 8015208:	4a6a      	ldr	r2, [pc, #424]	; (80153b4 <createProblem+0x1450c>)
 801520a:	461c      	mov	r4, r3
 801520c:	4613      	mov	r3, r2
 801520e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015210:	6020      	str	r0, [r4, #0]
 8015212:	6061      	str	r1, [r4, #4]
 8015214:	60a2      	str	r2, [r4, #8]
 8015216:	881a      	ldrh	r2, [r3, #0]
 8015218:	789b      	ldrb	r3, [r3, #2]
 801521a:	81a2      	strh	r2, [r4, #12]
 801521c:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "d,s,s,d,d,e");
 801521e:	687b      	ldr	r3, [r7, #4]
 8015220:	33d8      	adds	r3, #216	; 0xd8
 8015222:	4a65      	ldr	r2, [pc, #404]	; (80153b8 <createProblem+0x14510>)
 8015224:	461c      	mov	r4, r3
 8015226:	4613      	mov	r3, r2
 8015228:	cb07      	ldmia	r3!, {r0, r1, r2}
 801522a:	6020      	str	r0, [r4, #0]
 801522c:	6061      	str	r1, [r4, #4]
 801522e:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7C");
 8015230:	687b      	ldr	r3, [r7, #4]
 8015232:	33cc      	adds	r3, #204	; 0xcc
 8015234:	4a61      	ldr	r2, [pc, #388]	; (80153bc <createProblem+0x14514>)
 8015236:	8811      	ldrh	r1, [r2, #0]
 8015238:	7892      	ldrb	r2, [r2, #2]
 801523a:	8019      	strh	r1, [r3, #0]
 801523c:	709a      	strb	r2, [r3, #2]
			break;
 801523e:	f005 bb79 	b.w	801a934 <createProblem+0x19a8c>
		case 667 :
			strcpy(p->name,"BRUTE");
 8015242:	687b      	ldr	r3, [r7, #4]
 8015244:	337c      	adds	r3, #124	; 0x7c
 8015246:	4a5e      	ldr	r2, [pc, #376]	; (80153c0 <createProblem+0x14518>)
 8015248:	6810      	ldr	r0, [r2, #0]
 801524a:	6018      	str	r0, [r3, #0]
 801524c:	8892      	ldrh	r2, [r2, #4]
 801524e:	809a      	strh	r2, [r3, #4]
			p->moveSize = 5;
 8015250:	687b      	ldr	r3, [r7, #4]
 8015252:	2205      	movs	r2, #5
 8015254:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,B,G,I");
 8015256:	687b      	ldr	r3, [r7, #4]
 8015258:	3340      	adds	r3, #64	; 0x40
 801525a:	495a      	ldr	r1, [pc, #360]	; (80153c4 <createProblem+0x1451c>)
 801525c:	461a      	mov	r2, r3
 801525e:	460b      	mov	r3, r1
 8015260:	cb03      	ldmia	r3!, {r0, r1}
 8015262:	6010      	str	r0, [r2, #0]
 8015264:	6051      	str	r1, [r2, #4]
 8015266:	881b      	ldrh	r3, [r3, #0]
 8015268:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,6,10,14,18");
 801526a:	687b      	ldr	r3, [r7, #4]
 801526c:	3304      	adds	r3, #4
 801526e:	4a56      	ldr	r2, [pc, #344]	; (80153c8 <createProblem+0x14520>)
 8015270:	461c      	mov	r4, r3
 8015272:	4613      	mov	r3, r2
 8015274:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015276:	6020      	str	r0, [r4, #0]
 8015278:	6061      	str	r1, [r4, #4]
 801527a:	60a2      	str	r2, [r4, #8]
 801527c:	781b      	ldrb	r3, [r3, #0]
 801527e:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,e");
 8015280:	687b      	ldr	r3, [r7, #4]
 8015282:	33d8      	adds	r3, #216	; 0xd8
 8015284:	4951      	ldr	r1, [pc, #324]	; (80153cc <createProblem+0x14524>)
 8015286:	461a      	mov	r2, r3
 8015288:	460b      	mov	r3, r1
 801528a:	cb03      	ldmia	r3!, {r0, r1}
 801528c:	6010      	str	r0, [r2, #0]
 801528e:	6051      	str	r1, [r2, #4]
 8015290:	881b      	ldrh	r3, [r3, #0]
 8015292:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7C");
 8015294:	687b      	ldr	r3, [r7, #4]
 8015296:	33cc      	adds	r3, #204	; 0xcc
 8015298:	4a48      	ldr	r2, [pc, #288]	; (80153bc <createProblem+0x14514>)
 801529a:	8811      	ldrh	r1, [r2, #0]
 801529c:	7892      	ldrb	r2, [r2, #2]
 801529e:	8019      	strh	r1, [r3, #0]
 80152a0:	709a      	strb	r2, [r3, #2]
			break;
 80152a2:	f005 bb47 	b.w	801a934 <createProblem+0x19a8c>
		case 668 :
			strcpy(p->name,"EZ CLAP");
 80152a6:	687b      	ldr	r3, [r7, #4]
 80152a8:	337c      	adds	r3, #124	; 0x7c
 80152aa:	4949      	ldr	r1, [pc, #292]	; (80153d0 <createProblem+0x14528>)
 80152ac:	461a      	mov	r2, r3
 80152ae:	460b      	mov	r3, r1
 80152b0:	cb03      	ldmia	r3!, {r0, r1}
 80152b2:	6010      	str	r0, [r2, #0]
 80152b4:	6051      	str	r1, [r2, #4]
			p->moveSize = 6;
 80152b6:	687b      	ldr	r3, [r7, #4]
 80152b8:	2206      	movs	r2, #6
 80152ba:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,C,D,E");
 80152bc:	687b      	ldr	r3, [r7, #4]
 80152be:	3340      	adds	r3, #64	; 0x40
 80152c0:	4a44      	ldr	r2, [pc, #272]	; (80153d4 <createProblem+0x1452c>)
 80152c2:	461c      	mov	r4, r3
 80152c4:	4613      	mov	r3, r2
 80152c6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80152c8:	6020      	str	r0, [r4, #0]
 80152ca:	6061      	str	r1, [r4, #4]
 80152cc:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,5,10,13,18,14");
 80152ce:	687b      	ldr	r3, [r7, #4]
 80152d0:	3304      	adds	r3, #4
 80152d2:	4a41      	ldr	r2, [pc, #260]	; (80153d8 <createProblem+0x14530>)
 80152d4:	461c      	mov	r4, r3
 80152d6:	4615      	mov	r5, r2
 80152d8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80152da:	6020      	str	r0, [r4, #0]
 80152dc:	6061      	str	r1, [r4, #4]
 80152de:	60a2      	str	r2, [r4, #8]
 80152e0:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,e,d");
 80152e2:	687b      	ldr	r3, [r7, #4]
 80152e4:	33d8      	adds	r3, #216	; 0xd8
 80152e6:	4a3d      	ldr	r2, [pc, #244]	; (80153dc <createProblem+0x14534>)
 80152e8:	461c      	mov	r4, r3
 80152ea:	4613      	mov	r3, r2
 80152ec:	cb07      	ldmia	r3!, {r0, r1, r2}
 80152ee:	6020      	str	r0, [r4, #0]
 80152f0:	6061      	str	r1, [r4, #4]
 80152f2:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 80152f4:	687b      	ldr	r3, [r7, #4]
 80152f6:	33cc      	adds	r3, #204	; 0xcc
 80152f8:	4a39      	ldr	r2, [pc, #228]	; (80153e0 <createProblem+0x14538>)
 80152fa:	8811      	ldrh	r1, [r2, #0]
 80152fc:	7892      	ldrb	r2, [r2, #2]
 80152fe:	8019      	strh	r1, [r3, #0]
 8015300:	709a      	strb	r2, [r3, #2]
			break;
 8015302:	f005 bb17 	b.w	801a934 <createProblem+0x19a8c>
		case 669 :
			strcpy(p->name,"HOWARD THE ALIEN");
 8015306:	687b      	ldr	r3, [r7, #4]
 8015308:	337c      	adds	r3, #124	; 0x7c
 801530a:	4a36      	ldr	r2, [pc, #216]	; (80153e4 <createProblem+0x1453c>)
 801530c:	461d      	mov	r5, r3
 801530e:	4614      	mov	r4, r2
 8015310:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015312:	6028      	str	r0, [r5, #0]
 8015314:	6069      	str	r1, [r5, #4]
 8015316:	60aa      	str	r2, [r5, #8]
 8015318:	60eb      	str	r3, [r5, #12]
 801531a:	7823      	ldrb	r3, [r4, #0]
 801531c:	742b      	strb	r3, [r5, #16]
			p->moveSize = 5;
 801531e:	687b      	ldr	r3, [r7, #4]
 8015320:	2205      	movs	r2, #5
 8015322:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,C,I,D");
 8015324:	687b      	ldr	r3, [r7, #4]
 8015326:	3340      	adds	r3, #64	; 0x40
 8015328:	492f      	ldr	r1, [pc, #188]	; (80153e8 <createProblem+0x14540>)
 801532a:	461a      	mov	r2, r3
 801532c:	460b      	mov	r3, r1
 801532e:	cb03      	ldmia	r3!, {r0, r1}
 8015330:	6010      	str	r0, [r2, #0]
 8015332:	6051      	str	r1, [r2, #4]
 8015334:	881b      	ldrh	r3, [r3, #0]
 8015336:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,9,13,14,18");
 8015338:	687b      	ldr	r3, [r7, #4]
 801533a:	3304      	adds	r3, #4
 801533c:	4a2b      	ldr	r2, [pc, #172]	; (80153ec <createProblem+0x14544>)
 801533e:	461c      	mov	r4, r3
 8015340:	4613      	mov	r3, r2
 8015342:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015344:	6020      	str	r0, [r4, #0]
 8015346:	6061      	str	r1, [r4, #4]
 8015348:	60a2      	str	r2, [r4, #8]
 801534a:	781b      	ldrb	r3, [r3, #0]
 801534c:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 801534e:	687b      	ldr	r3, [r7, #4]
 8015350:	33d8      	adds	r3, #216	; 0xd8
 8015352:	4927      	ldr	r1, [pc, #156]	; (80153f0 <createProblem+0x14548>)
 8015354:	461a      	mov	r2, r3
 8015356:	460b      	mov	r3, r1
 8015358:	cb03      	ldmia	r3!, {r0, r1}
 801535a:	6010      	str	r0, [r2, #0]
 801535c:	6051      	str	r1, [r2, #4]
 801535e:	881b      	ldrh	r3, [r3, #0]
 8015360:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7C");
 8015362:	687b      	ldr	r3, [r7, #4]
 8015364:	33cc      	adds	r3, #204	; 0xcc
 8015366:	4a15      	ldr	r2, [pc, #84]	; (80153bc <createProblem+0x14514>)
 8015368:	8811      	ldrh	r1, [r2, #0]
 801536a:	7892      	ldrb	r2, [r2, #2]
 801536c:	8019      	strh	r1, [r3, #0]
 801536e:	709a      	strb	r2, [r3, #2]
			break;
 8015370:	f005 bae0 	b.w	801a934 <createProblem+0x19a8c>
 8015374:	08027ce4 	.word	0x08027ce4
 8015378:	08027cf4 	.word	0x08027cf4
 801537c:	08027d04 	.word	0x08027d04
 8015380:	08020a14 	.word	0x08020a14
 8015384:	08020830 	.word	0x08020830
 8015388:	08027d18 	.word	0x08027d18
 801538c:	08027d24 	.word	0x08027d24
 8015390:	08026cd4 	.word	0x08026cd4
 8015394:	080208f0 	.word	0x080208f0
 8015398:	08027d34 	.word	0x08027d34
 801539c:	08027d40 	.word	0x08027d40
 80153a0:	08027d4c 	.word	0x08027d4c
 80153a4:	0802091c 	.word	0x0802091c
 80153a8:	080209a4 	.word	0x080209a4
 80153ac:	08027d5c 	.word	0x08027d5c
 80153b0:	08027d70 	.word	0x08027d70
 80153b4:	08027d7c 	.word	0x08027d7c
 80153b8:	08027d8c 	.word	0x08027d8c
 80153bc:	08020b0c 	.word	0x08020b0c
 80153c0:	08027d98 	.word	0x08027d98
 80153c4:	08027da0 	.word	0x08027da0
 80153c8:	08027dac 	.word	0x08027dac
 80153cc:	08021748 	.word	0x08021748
 80153d0:	08027dbc 	.word	0x08027dbc
 80153d4:	08027dc4 	.word	0x08027dc4
 80153d8:	08027dd0 	.word	0x08027dd0
 80153dc:	08027de0 	.word	0x08027de0
 80153e0:	08020874 	.word	0x08020874
 80153e4:	08027dec 	.word	0x08027dec
 80153e8:	08027e00 	.word	0x08027e00
 80153ec:	08022934 	.word	0x08022934
 80153f0:	080208a0 	.word	0x080208a0
		case 67 :
			strcpy(p->name,"KIDSPROBLEM");
 80153f4:	687b      	ldr	r3, [r7, #4]
 80153f6:	337c      	adds	r3, #124	; 0x7c
 80153f8:	4ab9      	ldr	r2, [pc, #740]	; (80156e0 <createProblem+0x14838>)
 80153fa:	461c      	mov	r4, r3
 80153fc:	4613      	mov	r3, r2
 80153fe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015400:	6020      	str	r0, [r4, #0]
 8015402:	6061      	str	r1, [r4, #4]
 8015404:	60a2      	str	r2, [r4, #8]
			p->moveSize = 8;
 8015406:	687b      	ldr	r3, [r7, #4]
 8015408:	2208      	movs	r2, #8
 801540a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,G,B,C,H,E,D");
 801540c:	687b      	ldr	r3, [r7, #4]
 801540e:	3340      	adds	r3, #64	; 0x40
 8015410:	4ab4      	ldr	r2, [pc, #720]	; (80156e4 <createProblem+0x1483c>)
 8015412:	461c      	mov	r4, r3
 8015414:	4615      	mov	r5, r2
 8015416:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8015418:	6020      	str	r0, [r4, #0]
 801541a:	6061      	str	r1, [r4, #4]
 801541c:	60a2      	str	r2, [r4, #8]
 801541e:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,5,9,10,13,13,16,18");
 8015420:	687b      	ldr	r3, [r7, #4]
 8015422:	3304      	adds	r3, #4
 8015424:	4ab0      	ldr	r2, [pc, #704]	; (80156e8 <createProblem+0x14840>)
 8015426:	461d      	mov	r5, r3
 8015428:	4614      	mov	r4, r2
 801542a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801542c:	6028      	str	r0, [r5, #0]
 801542e:	6069      	str	r1, [r5, #4]
 8015430:	60aa      	str	r2, [r5, #8]
 8015432:	60eb      	str	r3, [r5, #12]
 8015434:	6820      	ldr	r0, [r4, #0]
 8015436:	6128      	str	r0, [r5, #16]
 8015438:	7923      	ldrb	r3, [r4, #4]
 801543a:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 801543c:	687b      	ldr	r3, [r7, #4]
 801543e:	33d8      	adds	r3, #216	; 0xd8
 8015440:	4aaa      	ldr	r2, [pc, #680]	; (80156ec <createProblem+0x14844>)
 8015442:	461c      	mov	r4, r3
 8015444:	4615      	mov	r5, r2
 8015446:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8015448:	6020      	str	r0, [r4, #0]
 801544a:	6061      	str	r1, [r4, #4]
 801544c:	60a2      	str	r2, [r4, #8]
 801544e:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8015450:	687b      	ldr	r3, [r7, #4]
 8015452:	33cc      	adds	r3, #204	; 0xcc
 8015454:	4aa6      	ldr	r2, [pc, #664]	; (80156f0 <createProblem+0x14848>)
 8015456:	8811      	ldrh	r1, [r2, #0]
 8015458:	7892      	ldrb	r2, [r2, #2]
 801545a:	8019      	strh	r1, [r3, #0]
 801545c:	709a      	strb	r2, [r3, #2]
			break;
 801545e:	f005 ba69 	b.w	801a934 <createProblem+0x19a8c>
		case 670 :
			strcpy(p->name,"DOMINOS PINZA");
 8015462:	687b      	ldr	r3, [r7, #4]
 8015464:	337c      	adds	r3, #124	; 0x7c
 8015466:	4aa3      	ldr	r2, [pc, #652]	; (80156f4 <createProblem+0x1484c>)
 8015468:	461c      	mov	r4, r3
 801546a:	4613      	mov	r3, r2
 801546c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801546e:	6020      	str	r0, [r4, #0]
 8015470:	6061      	str	r1, [r4, #4]
 8015472:	60a2      	str	r2, [r4, #8]
 8015474:	881b      	ldrh	r3, [r3, #0]
 8015476:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 5;
 8015478:	687b      	ldr	r3, [r7, #4]
 801547a:	2205      	movs	r2, #5
 801547c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,G,D,I,I");
 801547e:	687b      	ldr	r3, [r7, #4]
 8015480:	3340      	adds	r3, #64	; 0x40
 8015482:	499d      	ldr	r1, [pc, #628]	; (80156f8 <createProblem+0x14850>)
 8015484:	461a      	mov	r2, r3
 8015486:	460b      	mov	r3, r1
 8015488:	cb03      	ldmia	r3!, {r0, r1}
 801548a:	6010      	str	r0, [r2, #0]
 801548c:	6051      	str	r1, [r2, #4]
 801548e:	881b      	ldrh	r3, [r3, #0]
 8015490:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,9,11,14,18");
 8015492:	687b      	ldr	r3, [r7, #4]
 8015494:	3304      	adds	r3, #4
 8015496:	4a99      	ldr	r2, [pc, #612]	; (80156fc <createProblem+0x14854>)
 8015498:	461c      	mov	r4, r3
 801549a:	4613      	mov	r3, r2
 801549c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801549e:	6020      	str	r0, [r4, #0]
 80154a0:	6061      	str	r1, [r4, #4]
 80154a2:	60a2      	str	r2, [r4, #8]
 80154a4:	781b      	ldrb	r3, [r3, #0]
 80154a6:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 80154a8:	687b      	ldr	r3, [r7, #4]
 80154aa:	33d8      	adds	r3, #216	; 0xd8
 80154ac:	4994      	ldr	r1, [pc, #592]	; (8015700 <createProblem+0x14858>)
 80154ae:	461a      	mov	r2, r3
 80154b0:	460b      	mov	r3, r1
 80154b2:	cb03      	ldmia	r3!, {r0, r1}
 80154b4:	6010      	str	r0, [r2, #0]
 80154b6:	6051      	str	r1, [r2, #4]
 80154b8:	881b      	ldrh	r3, [r3, #0]
 80154ba:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 80154bc:	687b      	ldr	r3, [r7, #4]
 80154be:	33cc      	adds	r3, #204	; 0xcc
 80154c0:	4a90      	ldr	r2, [pc, #576]	; (8015704 <createProblem+0x1485c>)
 80154c2:	6810      	ldr	r0, [r2, #0]
 80154c4:	6018      	str	r0, [r3, #0]
			break;
 80154c6:	f005 ba35 	b.w	801a934 <createProblem+0x19a8c>
		case 671 :
			strcpy(p->name,"POPPED A XAN-DON");
 80154ca:	687b      	ldr	r3, [r7, #4]
 80154cc:	337c      	adds	r3, #124	; 0x7c
 80154ce:	4a8e      	ldr	r2, [pc, #568]	; (8015708 <createProblem+0x14860>)
 80154d0:	461d      	mov	r5, r3
 80154d2:	4614      	mov	r4, r2
 80154d4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80154d6:	6028      	str	r0, [r5, #0]
 80154d8:	6069      	str	r1, [r5, #4]
 80154da:	60aa      	str	r2, [r5, #8]
 80154dc:	60eb      	str	r3, [r5, #12]
 80154de:	7823      	ldrb	r3, [r4, #0]
 80154e0:	742b      	strb	r3, [r5, #16]
			p->moveSize = 5;
 80154e2:	687b      	ldr	r3, [r7, #4]
 80154e4:	2205      	movs	r2, #5
 80154e6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,G,H,K,I");
 80154e8:	687b      	ldr	r3, [r7, #4]
 80154ea:	3340      	adds	r3, #64	; 0x40
 80154ec:	4987      	ldr	r1, [pc, #540]	; (801570c <createProblem+0x14864>)
 80154ee:	461a      	mov	r2, r3
 80154f0:	460b      	mov	r3, r1
 80154f2:	cb03      	ldmia	r3!, {r0, r1}
 80154f4:	6010      	str	r0, [r2, #0]
 80154f6:	6051      	str	r1, [r2, #4]
 80154f8:	881b      	ldrh	r3, [r3, #0]
 80154fa:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,9,12,14,18");
 80154fc:	687b      	ldr	r3, [r7, #4]
 80154fe:	3304      	adds	r3, #4
 8015500:	4a83      	ldr	r2, [pc, #524]	; (8015710 <createProblem+0x14868>)
 8015502:	461c      	mov	r4, r3
 8015504:	4613      	mov	r3, r2
 8015506:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015508:	6020      	str	r0, [r4, #0]
 801550a:	6061      	str	r1, [r4, #4]
 801550c:	60a2      	str	r2, [r4, #8]
 801550e:	781b      	ldrb	r3, [r3, #0]
 8015510:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8015512:	687b      	ldr	r3, [r7, #4]
 8015514:	33d8      	adds	r3, #216	; 0xd8
 8015516:	497a      	ldr	r1, [pc, #488]	; (8015700 <createProblem+0x14858>)
 8015518:	461a      	mov	r2, r3
 801551a:	460b      	mov	r3, r1
 801551c:	cb03      	ldmia	r3!, {r0, r1}
 801551e:	6010      	str	r0, [r2, #0]
 8015520:	6051      	str	r1, [r2, #4]
 8015522:	881b      	ldrh	r3, [r3, #0]
 8015524:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 8015526:	687b      	ldr	r3, [r7, #4]
 8015528:	33cc      	adds	r3, #204	; 0xcc
 801552a:	4a76      	ldr	r2, [pc, #472]	; (8015704 <createProblem+0x1485c>)
 801552c:	6810      	ldr	r0, [r2, #0]
 801552e:	6018      	str	r0, [r3, #0]
			break;
 8015530:	f005 ba00 	b.w	801a934 <createProblem+0x19a8c>
		case 672 :
			strcpy(p->name,"ELEVATOR MUSIC");
 8015534:	687b      	ldr	r3, [r7, #4]
 8015536:	337c      	adds	r3, #124	; 0x7c
 8015538:	4a76      	ldr	r2, [pc, #472]	; (8015714 <createProblem+0x1486c>)
 801553a:	461c      	mov	r4, r3
 801553c:	4613      	mov	r3, r2
 801553e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015540:	6020      	str	r0, [r4, #0]
 8015542:	6061      	str	r1, [r4, #4]
 8015544:	60a2      	str	r2, [r4, #8]
 8015546:	881a      	ldrh	r2, [r3, #0]
 8015548:	789b      	ldrb	r3, [r3, #2]
 801554a:	81a2      	strh	r2, [r4, #12]
 801554c:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 6;
 801554e:	687b      	ldr	r3, [r7, #4]
 8015550:	2206      	movs	r2, #6
 8015552:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"D,G,K,J,F,I");
 8015554:	687b      	ldr	r3, [r7, #4]
 8015556:	3340      	adds	r3, #64	; 0x40
 8015558:	4a6f      	ldr	r2, [pc, #444]	; (8015718 <createProblem+0x14870>)
 801555a:	461c      	mov	r4, r3
 801555c:	4613      	mov	r3, r2
 801555e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015560:	6020      	str	r0, [r4, #0]
 8015562:	6061      	str	r1, [r4, #4]
 8015564:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"18,14,9,5,11,7");
 8015566:	687b      	ldr	r3, [r7, #4]
 8015568:	3304      	adds	r3, #4
 801556a:	4a6c      	ldr	r2, [pc, #432]	; (801571c <createProblem+0x14874>)
 801556c:	461c      	mov	r4, r3
 801556e:	4613      	mov	r3, r2
 8015570:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015572:	6020      	str	r0, [r4, #0]
 8015574:	6061      	str	r1, [r4, #4]
 8015576:	60a2      	str	r2, [r4, #8]
 8015578:	881a      	ldrh	r2, [r3, #0]
 801557a:	789b      	ldrb	r3, [r3, #2]
 801557c:	81a2      	strh	r2, [r4, #12]
 801557e:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "e,d,d,s,d,d");
 8015580:	687b      	ldr	r3, [r7, #4]
 8015582:	33d8      	adds	r3, #216	; 0xd8
 8015584:	4a66      	ldr	r2, [pc, #408]	; (8015720 <createProblem+0x14878>)
 8015586:	461c      	mov	r4, r3
 8015588:	4613      	mov	r3, r2
 801558a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801558c:	6020      	str	r0, [r4, #0]
 801558e:	6061      	str	r1, [r4, #4]
 8015590:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8015592:	687b      	ldr	r3, [r7, #4]
 8015594:	33cc      	adds	r3, #204	; 0xcc
 8015596:	4a63      	ldr	r2, [pc, #396]	; (8015724 <createProblem+0x1487c>)
 8015598:	8811      	ldrh	r1, [r2, #0]
 801559a:	7892      	ldrb	r2, [r2, #2]
 801559c:	8019      	strh	r1, [r3, #0]
 801559e:	709a      	strb	r2, [r3, #2]
			break;
 80155a0:	f005 b9c8 	b.w	801a934 <createProblem+0x19a8c>
		case 673 :
			strcpy(p->name,"LEVITATOR MUSIC");
 80155a4:	687b      	ldr	r3, [r7, #4]
 80155a6:	337c      	adds	r3, #124	; 0x7c
 80155a8:	4a5f      	ldr	r2, [pc, #380]	; (8015728 <createProblem+0x14880>)
 80155aa:	461c      	mov	r4, r3
 80155ac:	4615      	mov	r5, r2
 80155ae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80155b0:	6020      	str	r0, [r4, #0]
 80155b2:	6061      	str	r1, [r4, #4]
 80155b4:	60a2      	str	r2, [r4, #8]
 80155b6:	60e3      	str	r3, [r4, #12]
			p->moveSize = 7;
 80155b8:	687b      	ldr	r3, [r7, #4]
 80155ba:	2207      	movs	r2, #7
 80155bc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,A,A,F,K,J,I");
 80155be:	687b      	ldr	r3, [r7, #4]
 80155c0:	3340      	adds	r3, #64	; 0x40
 80155c2:	4a5a      	ldr	r2, [pc, #360]	; (801572c <createProblem+0x14884>)
 80155c4:	461c      	mov	r4, r3
 80155c6:	4613      	mov	r3, r2
 80155c8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80155ca:	6020      	str	r0, [r4, #0]
 80155cc:	6061      	str	r1, [r4, #4]
 80155ce:	60a2      	str	r2, [r4, #8]
 80155d0:	881b      	ldrh	r3, [r3, #0]
 80155d2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"14,14,18,11,9,5,7");
 80155d4:	687b      	ldr	r3, [r7, #4]
 80155d6:	3304      	adds	r3, #4
 80155d8:	4a55      	ldr	r2, [pc, #340]	; (8015730 <createProblem+0x14888>)
 80155da:	461d      	mov	r5, r3
 80155dc:	4614      	mov	r4, r2
 80155de:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80155e0:	6028      	str	r0, [r5, #0]
 80155e2:	6069      	str	r1, [r5, #4]
 80155e4:	60aa      	str	r2, [r5, #8]
 80155e6:	60eb      	str	r3, [r5, #12]
 80155e8:	8823      	ldrh	r3, [r4, #0]
 80155ea:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "d,d,e,d,d,s,d");
 80155ec:	687b      	ldr	r3, [r7, #4]
 80155ee:	33d8      	adds	r3, #216	; 0xd8
 80155f0:	4a50      	ldr	r2, [pc, #320]	; (8015734 <createProblem+0x1488c>)
 80155f2:	461c      	mov	r4, r3
 80155f4:	4613      	mov	r3, r2
 80155f6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80155f8:	6020      	str	r0, [r4, #0]
 80155fa:	6061      	str	r1, [r4, #4]
 80155fc:	60a2      	str	r2, [r4, #8]
 80155fe:	881b      	ldrh	r3, [r3, #0]
 8015600:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 8015602:	687b      	ldr	r3, [r7, #4]
 8015604:	33cc      	adds	r3, #204	; 0xcc
 8015606:	4a4c      	ldr	r2, [pc, #304]	; (8015738 <createProblem+0x14890>)
 8015608:	6810      	ldr	r0, [r2, #0]
 801560a:	6018      	str	r0, [r3, #0]
			break;
 801560c:	f005 b992 	b.w	801a934 <createProblem+0x19a8c>
		case 674 :
			strcpy(p->name,"TRIP3");
 8015610:	687b      	ldr	r3, [r7, #4]
 8015612:	337c      	adds	r3, #124	; 0x7c
 8015614:	4a49      	ldr	r2, [pc, #292]	; (801573c <createProblem+0x14894>)
 8015616:	6810      	ldr	r0, [r2, #0]
 8015618:	6018      	str	r0, [r3, #0]
 801561a:	8892      	ldrh	r2, [r2, #4]
 801561c:	809a      	strh	r2, [r3, #4]
			p->moveSize = 6;
 801561e:	687b      	ldr	r3, [r7, #4]
 8015620:	2206      	movs	r2, #6
 8015622:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,E,B,C,C,D");
 8015624:	687b      	ldr	r3, [r7, #4]
 8015626:	3340      	adds	r3, #64	; 0x40
 8015628:	4a45      	ldr	r2, [pc, #276]	; (8015740 <createProblem+0x14898>)
 801562a:	461c      	mov	r4, r3
 801562c:	4613      	mov	r3, r2
 801562e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015630:	6020      	str	r0, [r4, #0]
 8015632:	6061      	str	r1, [r4, #4]
 8015634:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"12,6,10,8,5,18");
 8015636:	687b      	ldr	r3, [r7, #4]
 8015638:	3304      	adds	r3, #4
 801563a:	4a42      	ldr	r2, [pc, #264]	; (8015744 <createProblem+0x1489c>)
 801563c:	461c      	mov	r4, r3
 801563e:	4613      	mov	r3, r2
 8015640:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015642:	6020      	str	r0, [r4, #0]
 8015644:	6061      	str	r1, [r4, #4]
 8015646:	60a2      	str	r2, [r4, #8]
 8015648:	881a      	ldrh	r2, [r3, #0]
 801564a:	789b      	ldrb	r3, [r3, #2]
 801564c:	81a2      	strh	r2, [r4, #12]
 801564e:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "d,s,d,d,s,e");
 8015650:	687b      	ldr	r3, [r7, #4]
 8015652:	33d8      	adds	r3, #216	; 0xd8
 8015654:	4a3c      	ldr	r2, [pc, #240]	; (8015748 <createProblem+0x148a0>)
 8015656:	461c      	mov	r4, r3
 8015658:	4613      	mov	r3, r2
 801565a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801565c:	6020      	str	r0, [r4, #0]
 801565e:	6061      	str	r1, [r4, #4]
 8015660:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8015662:	687b      	ldr	r3, [r7, #4]
 8015664:	33cc      	adds	r3, #204	; 0xcc
 8015666:	4a34      	ldr	r2, [pc, #208]	; (8015738 <createProblem+0x14890>)
 8015668:	6810      	ldr	r0, [r2, #0]
 801566a:	6018      	str	r0, [r3, #0]
			break;
 801566c:	f005 b962 	b.w	801a934 <createProblem+0x19a8c>
		case 675 :
			strcpy(p->name,"TRIP4");
 8015670:	687b      	ldr	r3, [r7, #4]
 8015672:	337c      	adds	r3, #124	; 0x7c
 8015674:	4a35      	ldr	r2, [pc, #212]	; (801574c <createProblem+0x148a4>)
 8015676:	6810      	ldr	r0, [r2, #0]
 8015678:	6018      	str	r0, [r3, #0]
 801567a:	8892      	ldrh	r2, [r2, #4]
 801567c:	809a      	strh	r2, [r3, #4]
			p->moveSize = 9;
 801567e:	687b      	ldr	r3, [r7, #4]
 8015680:	2209      	movs	r2, #9
 8015682:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,J,K,J,H,D,D,I,D");
 8015684:	687b      	ldr	r3, [r7, #4]
 8015686:	3340      	adds	r3, #64	; 0x40
 8015688:	4a31      	ldr	r2, [pc, #196]	; (8015750 <createProblem+0x148a8>)
 801568a:	461d      	mov	r5, r3
 801568c:	4614      	mov	r4, r2
 801568e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015690:	6028      	str	r0, [r5, #0]
 8015692:	6069      	str	r1, [r5, #4]
 8015694:	60aa      	str	r2, [r5, #8]
 8015696:	60eb      	str	r3, [r5, #12]
 8015698:	8823      	ldrh	r3, [r4, #0]
 801569a:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,5,9,13,12,11,7,7,18");
 801569c:	687b      	ldr	r3, [r7, #4]
 801569e:	3304      	adds	r3, #4
 80156a0:	4a2c      	ldr	r2, [pc, #176]	; (8015754 <createProblem+0x148ac>)
 80156a2:	461d      	mov	r5, r3
 80156a4:	4614      	mov	r4, r2
 80156a6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80156a8:	6028      	str	r0, [r5, #0]
 80156aa:	6069      	str	r1, [r5, #4]
 80156ac:	60aa      	str	r2, [r5, #8]
 80156ae:	60eb      	str	r3, [r5, #12]
 80156b0:	6820      	ldr	r0, [r4, #0]
 80156b2:	6128      	str	r0, [r5, #16]
 80156b4:	88a3      	ldrh	r3, [r4, #4]
 80156b6:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 80156b8:	687b      	ldr	r3, [r7, #4]
 80156ba:	33d8      	adds	r3, #216	; 0xd8
 80156bc:	4a26      	ldr	r2, [pc, #152]	; (8015758 <createProblem+0x148b0>)
 80156be:	461d      	mov	r5, r3
 80156c0:	4614      	mov	r4, r2
 80156c2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80156c4:	6028      	str	r0, [r5, #0]
 80156c6:	6069      	str	r1, [r5, #4]
 80156c8:	60aa      	str	r2, [r5, #8]
 80156ca:	60eb      	str	r3, [r5, #12]
 80156cc:	8823      	ldrh	r3, [r4, #0]
 80156ce:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "7C+");
 80156d0:	687b      	ldr	r3, [r7, #4]
 80156d2:	33cc      	adds	r3, #204	; 0xcc
 80156d4:	4a21      	ldr	r2, [pc, #132]	; (801575c <createProblem+0x148b4>)
 80156d6:	6810      	ldr	r0, [r2, #0]
 80156d8:	6018      	str	r0, [r3, #0]
			break;
 80156da:	f005 b92b 	b.w	801a934 <createProblem+0x19a8c>
 80156de:	bf00      	nop
 80156e0:	08027e0c 	.word	0x08027e0c
 80156e4:	08027e18 	.word	0x08027e18
 80156e8:	08027e28 	.word	0x08027e28
 80156ec:	08020a4c 	.word	0x08020a4c
 80156f0:	080208f0 	.word	0x080208f0
 80156f4:	08027e40 	.word	0x08027e40
 80156f8:	08027e50 	.word	0x08027e50
 80156fc:	08027e5c 	.word	0x08027e5c
 8015700:	080208a0 	.word	0x080208a0
 8015704:	08020dc8 	.word	0x08020dc8
 8015708:	08027e6c 	.word	0x08027e6c
 801570c:	08027e80 	.word	0x08027e80
 8015710:	080222e4 	.word	0x080222e4
 8015714:	08027e8c 	.word	0x08027e8c
 8015718:	08027e9c 	.word	0x08027e9c
 801571c:	08027ea8 	.word	0x08027ea8
 8015720:	08027eb8 	.word	0x08027eb8
 8015724:	08020874 	.word	0x08020874
 8015728:	08027ec4 	.word	0x08027ec4
 801572c:	08027ed4 	.word	0x08027ed4
 8015730:	08027ee4 	.word	0x08027ee4
 8015734:	08027ef8 	.word	0x08027ef8
 8015738:	080209a4 	.word	0x080209a4
 801573c:	08027f08 	.word	0x08027f08
 8015740:	08027f10 	.word	0x08027f10
 8015744:	08027f1c 	.word	0x08027f1c
 8015748:	08027f2c 	.word	0x08027f2c
 801574c:	08027f38 	.word	0x08027f38
 8015750:	08027f40 	.word	0x08027f40
 8015754:	08027f54 	.word	0x08027f54
 8015758:	08020dfc 	.word	0x08020dfc
 801575c:	080226f0 	.word	0x080226f0
		case 676 :
			strcpy(p->name,"HOJAR KLUBBEN");
 8015760:	687b      	ldr	r3, [r7, #4]
 8015762:	337c      	adds	r3, #124	; 0x7c
 8015764:	4abd      	ldr	r2, [pc, #756]	; (8015a5c <createProblem+0x14bb4>)
 8015766:	461c      	mov	r4, r3
 8015768:	4613      	mov	r3, r2
 801576a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801576c:	6020      	str	r0, [r4, #0]
 801576e:	6061      	str	r1, [r4, #4]
 8015770:	60a2      	str	r2, [r4, #8]
 8015772:	881b      	ldrh	r3, [r3, #0]
 8015774:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 8015776:	687b      	ldr	r3, [r7, #4]
 8015778:	2207      	movs	r2, #7
 801577a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,J,G,H,G,I");
 801577c:	687b      	ldr	r3, [r7, #4]
 801577e:	3340      	adds	r3, #64	; 0x40
 8015780:	4ab7      	ldr	r2, [pc, #732]	; (8015a60 <createProblem+0x14bb8>)
 8015782:	461c      	mov	r4, r3
 8015784:	4613      	mov	r3, r2
 8015786:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015788:	6020      	str	r0, [r4, #0]
 801578a:	6061      	str	r1, [r4, #4]
 801578c:	60a2      	str	r2, [r4, #8]
 801578e:	881b      	ldrh	r3, [r3, #0]
 8015790:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,10,13,15,16,17,18");
 8015792:	687b      	ldr	r3, [r7, #4]
 8015794:	3304      	adds	r3, #4
 8015796:	4ab3      	ldr	r2, [pc, #716]	; (8015a64 <createProblem+0x14bbc>)
 8015798:	461d      	mov	r5, r3
 801579a:	4614      	mov	r4, r2
 801579c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801579e:	6028      	str	r0, [r5, #0]
 80157a0:	6069      	str	r1, [r5, #4]
 80157a2:	60aa      	str	r2, [r5, #8]
 80157a4:	60eb      	str	r3, [r5, #12]
 80157a6:	6820      	ldr	r0, [r4, #0]
 80157a8:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80157aa:	687b      	ldr	r3, [r7, #4]
 80157ac:	33d8      	adds	r3, #216	; 0xd8
 80157ae:	4aae      	ldr	r2, [pc, #696]	; (8015a68 <createProblem+0x14bc0>)
 80157b0:	461c      	mov	r4, r3
 80157b2:	4613      	mov	r3, r2
 80157b4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80157b6:	6020      	str	r0, [r4, #0]
 80157b8:	6061      	str	r1, [r4, #4]
 80157ba:	60a2      	str	r2, [r4, #8]
 80157bc:	881b      	ldrh	r3, [r3, #0]
 80157be:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B");
 80157c0:	687b      	ldr	r3, [r7, #4]
 80157c2:	33cc      	adds	r3, #204	; 0xcc
 80157c4:	4aa9      	ldr	r2, [pc, #676]	; (8015a6c <createProblem+0x14bc4>)
 80157c6:	8811      	ldrh	r1, [r2, #0]
 80157c8:	7892      	ldrb	r2, [r2, #2]
 80157ca:	8019      	strh	r1, [r3, #0]
 80157cc:	709a      	strb	r2, [r3, #2]
			break;
 80157ce:	f005 b8b1 	b.w	801a934 <createProblem+0x19a8c>
		case 677 :
			strcpy(p->name,"PHILLING SHIFTS");
 80157d2:	687b      	ldr	r3, [r7, #4]
 80157d4:	337c      	adds	r3, #124	; 0x7c
 80157d6:	4aa6      	ldr	r2, [pc, #664]	; (8015a70 <createProblem+0x14bc8>)
 80157d8:	461c      	mov	r4, r3
 80157da:	4615      	mov	r5, r2
 80157dc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80157de:	6020      	str	r0, [r4, #0]
 80157e0:	6061      	str	r1, [r4, #4]
 80157e2:	60a2      	str	r2, [r4, #8]
 80157e4:	60e3      	str	r3, [r4, #12]
			p->moveSize = 7;
 80157e6:	687b      	ldr	r3, [r7, #4]
 80157e8:	2207      	movs	r2, #7
 80157ea:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"A,D,E,J,H,K,G");
 80157ec:	687b      	ldr	r3, [r7, #4]
 80157ee:	3340      	adds	r3, #64	; 0x40
 80157f0:	4aa0      	ldr	r2, [pc, #640]	; (8015a74 <createProblem+0x14bcc>)
 80157f2:	461c      	mov	r4, r3
 80157f4:	4613      	mov	r3, r2
 80157f6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80157f8:	6020      	str	r0, [r4, #0]
 80157fa:	6061      	str	r1, [r4, #4]
 80157fc:	60a2      	str	r2, [r4, #8]
 80157fe:	881b      	ldrh	r3, [r3, #0]
 8015800:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"18,18,14,12,8,9,4");
 8015802:	687b      	ldr	r3, [r7, #4]
 8015804:	3304      	adds	r3, #4
 8015806:	4a9c      	ldr	r2, [pc, #624]	; (8015a78 <createProblem+0x14bd0>)
 8015808:	461d      	mov	r5, r3
 801580a:	4614      	mov	r4, r2
 801580c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801580e:	6028      	str	r0, [r5, #0]
 8015810:	6069      	str	r1, [r5, #4]
 8015812:	60aa      	str	r2, [r5, #8]
 8015814:	60eb      	str	r3, [r5, #12]
 8015816:	8823      	ldrh	r3, [r4, #0]
 8015818:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "e,e,d,d,d,d,s");
 801581a:	687b      	ldr	r3, [r7, #4]
 801581c:	33d8      	adds	r3, #216	; 0xd8
 801581e:	4a97      	ldr	r2, [pc, #604]	; (8015a7c <createProblem+0x14bd4>)
 8015820:	461c      	mov	r4, r3
 8015822:	4613      	mov	r3, r2
 8015824:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015826:	6020      	str	r0, [r4, #0]
 8015828:	6061      	str	r1, [r4, #4]
 801582a:	60a2      	str	r2, [r4, #8]
 801582c:	881b      	ldrh	r3, [r3, #0]
 801582e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7C");
 8015830:	687b      	ldr	r3, [r7, #4]
 8015832:	33cc      	adds	r3, #204	; 0xcc
 8015834:	4a92      	ldr	r2, [pc, #584]	; (8015a80 <createProblem+0x14bd8>)
 8015836:	8811      	ldrh	r1, [r2, #0]
 8015838:	7892      	ldrb	r2, [r2, #2]
 801583a:	8019      	strh	r1, [r3, #0]
 801583c:	709a      	strb	r2, [r3, #2]
			break;
 801583e:	f005 b879 	b.w	801a934 <createProblem+0x19a8c>
		case 678 :
			strcpy(p->name,"LONG BOI 2");
 8015842:	687b      	ldr	r3, [r7, #4]
 8015844:	337c      	adds	r3, #124	; 0x7c
 8015846:	498f      	ldr	r1, [pc, #572]	; (8015a84 <createProblem+0x14bdc>)
 8015848:	461a      	mov	r2, r3
 801584a:	460b      	mov	r3, r1
 801584c:	cb03      	ldmia	r3!, {r0, r1}
 801584e:	6010      	str	r0, [r2, #0]
 8015850:	6051      	str	r1, [r2, #4]
 8015852:	8819      	ldrh	r1, [r3, #0]
 8015854:	789b      	ldrb	r3, [r3, #2]
 8015856:	8111      	strh	r1, [r2, #8]
 8015858:	7293      	strb	r3, [r2, #10]
			p->moveSize = 4;
 801585a:	687b      	ldr	r3, [r7, #4]
 801585c:	2204      	movs	r2, #4
 801585e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,G,I");
 8015860:	687b      	ldr	r3, [r7, #4]
 8015862:	3340      	adds	r3, #64	; 0x40
 8015864:	4988      	ldr	r1, [pc, #544]	; (8015a88 <createProblem+0x14be0>)
 8015866:	461a      	mov	r2, r3
 8015868:	460b      	mov	r3, r1
 801586a:	cb03      	ldmia	r3!, {r0, r1}
 801586c:	6010      	str	r0, [r2, #0]
 801586e:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"6,10,15,18");
 8015870:	687b      	ldr	r3, [r7, #4]
 8015872:	3304      	adds	r3, #4
 8015874:	4985      	ldr	r1, [pc, #532]	; (8015a8c <createProblem+0x14be4>)
 8015876:	461a      	mov	r2, r3
 8015878:	460b      	mov	r3, r1
 801587a:	cb03      	ldmia	r3!, {r0, r1}
 801587c:	6010      	str	r0, [r2, #0]
 801587e:	6051      	str	r1, [r2, #4]
 8015880:	8819      	ldrh	r1, [r3, #0]
 8015882:	789b      	ldrb	r3, [r3, #2]
 8015884:	8111      	strh	r1, [r2, #8]
 8015886:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 8015888:	687b      	ldr	r3, [r7, #4]
 801588a:	33d8      	adds	r3, #216	; 0xd8
 801588c:	4980      	ldr	r1, [pc, #512]	; (8015a90 <createProblem+0x14be8>)
 801588e:	461a      	mov	r2, r3
 8015890:	460b      	mov	r3, r1
 8015892:	cb03      	ldmia	r3!, {r0, r1}
 8015894:	6010      	str	r0, [r2, #0]
 8015896:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7A+");
 8015898:	687b      	ldr	r3, [r7, #4]
 801589a:	33cc      	adds	r3, #204	; 0xcc
 801589c:	4a7d      	ldr	r2, [pc, #500]	; (8015a94 <createProblem+0x14bec>)
 801589e:	6810      	ldr	r0, [r2, #0]
 80158a0:	6018      	str	r0, [r3, #0]
			break;
 80158a2:	f005 b847 	b.w	801a934 <createProblem+0x19a8c>
		case 679 :
			strcpy(p->name,"SUPE");
 80158a6:	687b      	ldr	r3, [r7, #4]
 80158a8:	337c      	adds	r3, #124	; 0x7c
 80158aa:	4a7b      	ldr	r2, [pc, #492]	; (8015a98 <createProblem+0x14bf0>)
 80158ac:	6810      	ldr	r0, [r2, #0]
 80158ae:	6018      	str	r0, [r3, #0]
 80158b0:	7912      	ldrb	r2, [r2, #4]
 80158b2:	711a      	strb	r2, [r3, #4]
			p->moveSize = 8;
 80158b4:	687b      	ldr	r3, [r7, #4]
 80158b6:	2208      	movs	r2, #8
 80158b8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,I,G,G,C,G,E,I");
 80158ba:	687b      	ldr	r3, [r7, #4]
 80158bc:	3340      	adds	r3, #64	; 0x40
 80158be:	4a77      	ldr	r2, [pc, #476]	; (8015a9c <createProblem+0x14bf4>)
 80158c0:	461c      	mov	r4, r3
 80158c2:	4615      	mov	r5, r2
 80158c4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80158c6:	6020      	str	r0, [r4, #0]
 80158c8:	6061      	str	r1, [r4, #4]
 80158ca:	60a2      	str	r2, [r4, #8]
 80158cc:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,6,10,13,14,16,18");
 80158ce:	687b      	ldr	r3, [r7, #4]
 80158d0:	3304      	adds	r3, #4
 80158d2:	4a73      	ldr	r2, [pc, #460]	; (8015aa0 <createProblem+0x14bf8>)
 80158d4:	461d      	mov	r5, r3
 80158d6:	4614      	mov	r4, r2
 80158d8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80158da:	6028      	str	r0, [r5, #0]
 80158dc:	6069      	str	r1, [r5, #4]
 80158de:	60aa      	str	r2, [r5, #8]
 80158e0:	60eb      	str	r3, [r5, #12]
 80158e2:	6820      	ldr	r0, [r4, #0]
 80158e4:	6128      	str	r0, [r5, #16]
 80158e6:	7923      	ldrb	r3, [r4, #4]
 80158e8:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 80158ea:	687b      	ldr	r3, [r7, #4]
 80158ec:	33d8      	adds	r3, #216	; 0xd8
 80158ee:	4a6d      	ldr	r2, [pc, #436]	; (8015aa4 <createProblem+0x14bfc>)
 80158f0:	461c      	mov	r4, r3
 80158f2:	4615      	mov	r5, r2
 80158f4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80158f6:	6020      	str	r0, [r4, #0]
 80158f8:	6061      	str	r1, [r4, #4]
 80158fa:	60a2      	str	r2, [r4, #8]
 80158fc:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 80158fe:	687b      	ldr	r3, [r7, #4]
 8015900:	33cc      	adds	r3, #204	; 0xcc
 8015902:	4a69      	ldr	r2, [pc, #420]	; (8015aa8 <createProblem+0x14c00>)
 8015904:	6810      	ldr	r0, [r2, #0]
 8015906:	6018      	str	r0, [r3, #0]
			break;
 8015908:	f005 b814 	b.w	801a934 <createProblem+0x19a8c>
		case 68 :
			strcpy(p->name,"TIME TO PLAY");
 801590c:	687b      	ldr	r3, [r7, #4]
 801590e:	337c      	adds	r3, #124	; 0x7c
 8015910:	4a66      	ldr	r2, [pc, #408]	; (8015aac <createProblem+0x14c04>)
 8015912:	461c      	mov	r4, r3
 8015914:	4613      	mov	r3, r2
 8015916:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015918:	6020      	str	r0, [r4, #0]
 801591a:	6061      	str	r1, [r4, #4]
 801591c:	60a2      	str	r2, [r4, #8]
 801591e:	781b      	ldrb	r3, [r3, #0]
 8015920:	7323      	strb	r3, [r4, #12]
			p->moveSize = 11;
 8015922:	687b      	ldr	r3, [r7, #4]
 8015924:	220b      	movs	r2, #11
 8015926:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,I,H,D,D,B,C,G,H,I");
 8015928:	687b      	ldr	r3, [r7, #4]
 801592a:	3340      	adds	r3, #64	; 0x40
 801592c:	4a60      	ldr	r2, [pc, #384]	; (8015ab0 <createProblem+0x14c08>)
 801592e:	461d      	mov	r5, r3
 8015930:	4614      	mov	r4, r2
 8015932:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015934:	6028      	str	r0, [r5, #0]
 8015936:	6069      	str	r1, [r5, #4]
 8015938:	60aa      	str	r2, [r5, #8]
 801593a:	60eb      	str	r3, [r5, #12]
 801593c:	6820      	ldr	r0, [r4, #0]
 801593e:	6128      	str	r0, [r5, #16]
 8015940:	88a3      	ldrh	r3, [r4, #4]
 8015942:	82ab      	strh	r3, [r5, #20]
			strcpy(p->moveNumbers,"4,7,10,12,11,15,6,16,17,16,18");
 8015944:	687b      	ldr	r3, [r7, #4]
 8015946:	3304      	adds	r3, #4
 8015948:	4a5a      	ldr	r2, [pc, #360]	; (8015ab4 <createProblem+0x14c0c>)
 801594a:	461d      	mov	r5, r3
 801594c:	4614      	mov	r4, r2
 801594e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015950:	6028      	str	r0, [r5, #0]
 8015952:	6069      	str	r1, [r5, #4]
 8015954:	60aa      	str	r2, [r5, #8]
 8015956:	60eb      	str	r3, [r5, #12]
 8015958:	cc07      	ldmia	r4!, {r0, r1, r2}
 801595a:	6128      	str	r0, [r5, #16]
 801595c:	6169      	str	r1, [r5, #20]
 801595e:	61aa      	str	r2, [r5, #24]
 8015960:	8823      	ldrh	r3, [r4, #0]
 8015962:	83ab      	strh	r3, [r5, #28]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,d,d,d,e");
 8015964:	687b      	ldr	r3, [r7, #4]
 8015966:	33d8      	adds	r3, #216	; 0xd8
 8015968:	4a53      	ldr	r2, [pc, #332]	; (8015ab8 <createProblem+0x14c10>)
 801596a:	461d      	mov	r5, r3
 801596c:	4614      	mov	r4, r2
 801596e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015970:	6028      	str	r0, [r5, #0]
 8015972:	6069      	str	r1, [r5, #4]
 8015974:	60aa      	str	r2, [r5, #8]
 8015976:	60eb      	str	r3, [r5, #12]
 8015978:	6820      	ldr	r0, [r4, #0]
 801597a:	6128      	str	r0, [r5, #16]
 801597c:	88a3      	ldrh	r3, [r4, #4]
 801597e:	82ab      	strh	r3, [r5, #20]
			strcpy(p->grade, "6C+");
 8015980:	687b      	ldr	r3, [r7, #4]
 8015982:	33cc      	adds	r3, #204	; 0xcc
 8015984:	4a48      	ldr	r2, [pc, #288]	; (8015aa8 <createProblem+0x14c00>)
 8015986:	6810      	ldr	r0, [r2, #0]
 8015988:	6018      	str	r0, [r3, #0]
			break;
 801598a:	f004 bfd3 	b.w	801a934 <createProblem+0x19a8c>
		case 680 :
			strcpy(p->name,"RYEBREAD");
 801598e:	687b      	ldr	r3, [r7, #4]
 8015990:	337c      	adds	r3, #124	; 0x7c
 8015992:	494a      	ldr	r1, [pc, #296]	; (8015abc <createProblem+0x14c14>)
 8015994:	461a      	mov	r2, r3
 8015996:	460b      	mov	r3, r1
 8015998:	cb03      	ldmia	r3!, {r0, r1}
 801599a:	6010      	str	r0, [r2, #0]
 801599c:	6051      	str	r1, [r2, #4]
 801599e:	781b      	ldrb	r3, [r3, #0]
 80159a0:	7213      	strb	r3, [r2, #8]
			p->moveSize = 5;
 80159a2:	687b      	ldr	r3, [r7, #4]
 80159a4:	2205      	movs	r2, #5
 80159a6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,F,C,A,A");
 80159a8:	687b      	ldr	r3, [r7, #4]
 80159aa:	3340      	adds	r3, #64	; 0x40
 80159ac:	4944      	ldr	r1, [pc, #272]	; (8015ac0 <createProblem+0x14c18>)
 80159ae:	461a      	mov	r2, r3
 80159b0:	460b      	mov	r3, r1
 80159b2:	cb03      	ldmia	r3!, {r0, r1}
 80159b4:	6010      	str	r0, [r2, #0]
 80159b6:	6051      	str	r1, [r2, #4]
 80159b8:	881b      	ldrh	r3, [r3, #0]
 80159ba:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,11,5,14,18");
 80159bc:	687b      	ldr	r3, [r7, #4]
 80159be:	3304      	adds	r3, #4
 80159c0:	4a40      	ldr	r2, [pc, #256]	; (8015ac4 <createProblem+0x14c1c>)
 80159c2:	461c      	mov	r4, r3
 80159c4:	4613      	mov	r3, r2
 80159c6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80159c8:	6020      	str	r0, [r4, #0]
 80159ca:	6061      	str	r1, [r4, #4]
 80159cc:	60a2      	str	r2, [r4, #8]
 80159ce:	781b      	ldrb	r3, [r3, #0]
 80159d0:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 80159d2:	687b      	ldr	r3, [r7, #4]
 80159d4:	33d8      	adds	r3, #216	; 0xd8
 80159d6:	493c      	ldr	r1, [pc, #240]	; (8015ac8 <createProblem+0x14c20>)
 80159d8:	461a      	mov	r2, r3
 80159da:	460b      	mov	r3, r1
 80159dc:	cb03      	ldmia	r3!, {r0, r1}
 80159de:	6010      	str	r0, [r2, #0]
 80159e0:	6051      	str	r1, [r2, #4]
 80159e2:	881b      	ldrh	r3, [r3, #0]
 80159e4:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7C+");
 80159e6:	687b      	ldr	r3, [r7, #4]
 80159e8:	33cc      	adds	r3, #204	; 0xcc
 80159ea:	4a38      	ldr	r2, [pc, #224]	; (8015acc <createProblem+0x14c24>)
 80159ec:	6810      	ldr	r0, [r2, #0]
 80159ee:	6018      	str	r0, [r3, #0]
			break;
 80159f0:	f004 bfa0 	b.w	801a934 <createProblem+0x19a8c>
		case 681 :
			strcpy(p->name,"TRØNDERSPOTT");
 80159f4:	687b      	ldr	r3, [r7, #4]
 80159f6:	337c      	adds	r3, #124	; 0x7c
 80159f8:	4a35      	ldr	r2, [pc, #212]	; (8015ad0 <createProblem+0x14c28>)
 80159fa:	461c      	mov	r4, r3
 80159fc:	4613      	mov	r3, r2
 80159fe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015a00:	6020      	str	r0, [r4, #0]
 8015a02:	6061      	str	r1, [r4, #4]
 8015a04:	60a2      	str	r2, [r4, #8]
 8015a06:	881b      	ldrh	r3, [r3, #0]
 8015a08:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 5;
 8015a0a:	687b      	ldr	r3, [r7, #4]
 8015a0c:	2205      	movs	r2, #5
 8015a0e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,C,D");
 8015a10:	687b      	ldr	r3, [r7, #4]
 8015a12:	3340      	adds	r3, #64	; 0x40
 8015a14:	492f      	ldr	r1, [pc, #188]	; (8015ad4 <createProblem+0x14c2c>)
 8015a16:	461a      	mov	r2, r3
 8015a18:	460b      	mov	r3, r1
 8015a1a:	cb03      	ldmia	r3!, {r0, r1}
 8015a1c:	6010      	str	r0, [r2, #0]
 8015a1e:	6051      	str	r1, [r2, #4]
 8015a20:	881b      	ldrh	r3, [r3, #0]
 8015a22:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,6,10,13,18");
 8015a24:	687b      	ldr	r3, [r7, #4]
 8015a26:	3304      	adds	r3, #4
 8015a28:	4a2b      	ldr	r2, [pc, #172]	; (8015ad8 <createProblem+0x14c30>)
 8015a2a:	461c      	mov	r4, r3
 8015a2c:	4613      	mov	r3, r2
 8015a2e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015a30:	6020      	str	r0, [r4, #0]
 8015a32:	6061      	str	r1, [r4, #4]
 8015a34:	60a2      	str	r2, [r4, #8]
 8015a36:	781b      	ldrb	r3, [r3, #0]
 8015a38:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,e");
 8015a3a:	687b      	ldr	r3, [r7, #4]
 8015a3c:	33d8      	adds	r3, #216	; 0xd8
 8015a3e:	4927      	ldr	r1, [pc, #156]	; (8015adc <createProblem+0x14c34>)
 8015a40:	461a      	mov	r2, r3
 8015a42:	460b      	mov	r3, r1
 8015a44:	cb03      	ldmia	r3!, {r0, r1}
 8015a46:	6010      	str	r0, [r2, #0]
 8015a48:	6051      	str	r1, [r2, #4]
 8015a4a:	881b      	ldrh	r3, [r3, #0]
 8015a4c:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6B+");
 8015a4e:	687b      	ldr	r3, [r7, #4]
 8015a50:	33cc      	adds	r3, #204	; 0xcc
 8015a52:	4a23      	ldr	r2, [pc, #140]	; (8015ae0 <createProblem+0x14c38>)
 8015a54:	6810      	ldr	r0, [r2, #0]
 8015a56:	6018      	str	r0, [r3, #0]
			break;
 8015a58:	f004 bf6c 	b.w	801a934 <createProblem+0x19a8c>
 8015a5c:	08027f6c 	.word	0x08027f6c
 8015a60:	08027f7c 	.word	0x08027f7c
 8015a64:	08027f8c 	.word	0x08027f8c
 8015a68:	08020a14 	.word	0x08020a14
 8015a6c:	080208ac 	.word	0x080208ac
 8015a70:	08027fa0 	.word	0x08027fa0
 8015a74:	08027fb0 	.word	0x08027fb0
 8015a78:	08027fc0 	.word	0x08027fc0
 8015a7c:	08027fd4 	.word	0x08027fd4
 8015a80:	08020b0c 	.word	0x08020b0c
 8015a84:	08027fe4 	.word	0x08027fe4
 8015a88:	08027ff0 	.word	0x08027ff0
 8015a8c:	08027ff8 	.word	0x08027ff8
 8015a90:	080215a8 	.word	0x080215a8
 8015a94:	080209a4 	.word	0x080209a4
 8015a98:	08028004 	.word	0x08028004
 8015a9c:	0802800c 	.word	0x0802800c
 8015aa0:	0802801c 	.word	0x0802801c
 8015aa4:	080209d8 	.word	0x080209d8
 8015aa8:	08020928 	.word	0x08020928
 8015aac:	08028034 	.word	0x08028034
 8015ab0:	08028044 	.word	0x08028044
 8015ab4:	0802805c 	.word	0x0802805c
 8015ab8:	0802807c 	.word	0x0802807c
 8015abc:	08028094 	.word	0x08028094
 8015ac0:	080280a0 	.word	0x080280a0
 8015ac4:	080280ac 	.word	0x080280ac
 8015ac8:	080208a0 	.word	0x080208a0
 8015acc:	080226f0 	.word	0x080226f0
 8015ad0:	080280bc 	.word	0x080280bc
 8015ad4:	080280cc 	.word	0x080280cc
 8015ad8:	080280d8 	.word	0x080280d8
 8015adc:	08021748 	.word	0x08021748
 8015ae0:	08020830 	.word	0x08020830
		case 682 :
			strcpy(p->name,"CATA");
 8015ae4:	687b      	ldr	r3, [r7, #4]
 8015ae6:	337c      	adds	r3, #124	; 0x7c
 8015ae8:	4abf      	ldr	r2, [pc, #764]	; (8015de8 <createProblem+0x14f40>)
 8015aea:	6810      	ldr	r0, [r2, #0]
 8015aec:	6018      	str	r0, [r3, #0]
 8015aee:	7912      	ldrb	r2, [r2, #4]
 8015af0:	711a      	strb	r2, [r3, #4]
			p->moveSize = 5;
 8015af2:	687b      	ldr	r3, [r7, #4]
 8015af4:	2205      	movs	r2, #5
 8015af6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,F,A,D");
 8015af8:	687b      	ldr	r3, [r7, #4]
 8015afa:	3340      	adds	r3, #64	; 0x40
 8015afc:	49bb      	ldr	r1, [pc, #748]	; (8015dec <createProblem+0x14f44>)
 8015afe:	461a      	mov	r2, r3
 8015b00:	460b      	mov	r3, r1
 8015b02:	cb03      	ldmia	r3!, {r0, r1}
 8015b04:	6010      	str	r0, [r2, #0]
 8015b06:	6051      	str	r1, [r2, #4]
 8015b08:	881b      	ldrh	r3, [r3, #0]
 8015b0a:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,7,11,14,18");
 8015b0c:	687b      	ldr	r3, [r7, #4]
 8015b0e:	3304      	adds	r3, #4
 8015b10:	4ab7      	ldr	r2, [pc, #732]	; (8015df0 <createProblem+0x14f48>)
 8015b12:	461c      	mov	r4, r3
 8015b14:	4613      	mov	r3, r2
 8015b16:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015b18:	6020      	str	r0, [r4, #0]
 8015b1a:	6061      	str	r1, [r4, #4]
 8015b1c:	60a2      	str	r2, [r4, #8]
 8015b1e:	781b      	ldrb	r3, [r3, #0]
 8015b20:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8015b22:	687b      	ldr	r3, [r7, #4]
 8015b24:	33d8      	adds	r3, #216	; 0xd8
 8015b26:	49b3      	ldr	r1, [pc, #716]	; (8015df4 <createProblem+0x14f4c>)
 8015b28:	461a      	mov	r2, r3
 8015b2a:	460b      	mov	r3, r1
 8015b2c:	cb03      	ldmia	r3!, {r0, r1}
 8015b2e:	6010      	str	r0, [r2, #0]
 8015b30:	6051      	str	r1, [r2, #4]
 8015b32:	881b      	ldrh	r3, [r3, #0]
 8015b34:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 8015b36:	687b      	ldr	r3, [r7, #4]
 8015b38:	33cc      	adds	r3, #204	; 0xcc
 8015b3a:	4aaf      	ldr	r2, [pc, #700]	; (8015df8 <createProblem+0x14f50>)
 8015b3c:	6810      	ldr	r0, [r2, #0]
 8015b3e:	6018      	str	r0, [r3, #0]
			break;
 8015b40:	f004 bef8 	b.w	801a934 <createProblem+0x19a8c>
		case 683 :
			strcpy(p->name,"LADYBUG DIRECT");
 8015b44:	687b      	ldr	r3, [r7, #4]
 8015b46:	337c      	adds	r3, #124	; 0x7c
 8015b48:	4aac      	ldr	r2, [pc, #688]	; (8015dfc <createProblem+0x14f54>)
 8015b4a:	461c      	mov	r4, r3
 8015b4c:	4613      	mov	r3, r2
 8015b4e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015b50:	6020      	str	r0, [r4, #0]
 8015b52:	6061      	str	r1, [r4, #4]
 8015b54:	60a2      	str	r2, [r4, #8]
 8015b56:	881a      	ldrh	r2, [r3, #0]
 8015b58:	789b      	ldrb	r3, [r3, #2]
 8015b5a:	81a2      	strh	r2, [r4, #12]
 8015b5c:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 6;
 8015b5e:	687b      	ldr	r3, [r7, #4]
 8015b60:	2206      	movs	r2, #6
 8015b62:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,C,D,A");
 8015b64:	687b      	ldr	r3, [r7, #4]
 8015b66:	3340      	adds	r3, #64	; 0x40
 8015b68:	4aa5      	ldr	r2, [pc, #660]	; (8015e00 <createProblem+0x14f58>)
 8015b6a:	461c      	mov	r4, r3
 8015b6c:	4613      	mov	r3, r2
 8015b6e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015b70:	6020      	str	r0, [r4, #0]
 8015b72:	6061      	str	r1, [r4, #4]
 8015b74:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,10,13,18,9");
 8015b76:	687b      	ldr	r3, [r7, #4]
 8015b78:	3304      	adds	r3, #4
 8015b7a:	4aa2      	ldr	r2, [pc, #648]	; (8015e04 <createProblem+0x14f5c>)
 8015b7c:	461c      	mov	r4, r3
 8015b7e:	4613      	mov	r3, r2
 8015b80:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015b82:	6020      	str	r0, [r4, #0]
 8015b84:	6061      	str	r1, [r4, #4]
 8015b86:	60a2      	str	r2, [r4, #8]
 8015b88:	881a      	ldrh	r2, [r3, #0]
 8015b8a:	789b      	ldrb	r3, [r3, #2]
 8015b8c:	81a2      	strh	r2, [r4, #12]
 8015b8e:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,e,d");
 8015b90:	687b      	ldr	r3, [r7, #4]
 8015b92:	33d8      	adds	r3, #216	; 0xd8
 8015b94:	4a9c      	ldr	r2, [pc, #624]	; (8015e08 <createProblem+0x14f60>)
 8015b96:	461c      	mov	r4, r3
 8015b98:	4613      	mov	r3, r2
 8015b9a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015b9c:	6020      	str	r0, [r4, #0]
 8015b9e:	6061      	str	r1, [r4, #4]
 8015ba0:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8015ba2:	687b      	ldr	r3, [r7, #4]
 8015ba4:	33cc      	adds	r3, #204	; 0xcc
 8015ba6:	4a94      	ldr	r2, [pc, #592]	; (8015df8 <createProblem+0x14f50>)
 8015ba8:	6810      	ldr	r0, [r2, #0]
 8015baa:	6018      	str	r0, [r3, #0]
			break;
 8015bac:	f004 bec2 	b.w	801a934 <createProblem+0x19a8c>
		case 684 :
			strcpy(p->name,"APRITI");
 8015bb0:	687b      	ldr	r3, [r7, #4]
 8015bb2:	337c      	adds	r3, #124	; 0x7c
 8015bb4:	4a95      	ldr	r2, [pc, #596]	; (8015e0c <createProblem+0x14f64>)
 8015bb6:	6810      	ldr	r0, [r2, #0]
 8015bb8:	6018      	str	r0, [r3, #0]
 8015bba:	8891      	ldrh	r1, [r2, #4]
 8015bbc:	7992      	ldrb	r2, [r2, #6]
 8015bbe:	8099      	strh	r1, [r3, #4]
 8015bc0:	719a      	strb	r2, [r3, #6]
			p->moveSize = 8;
 8015bc2:	687b      	ldr	r3, [r7, #4]
 8015bc4:	2208      	movs	r2, #8
 8015bc6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,E,H,D,C,D,D");
 8015bc8:	687b      	ldr	r3, [r7, #4]
 8015bca:	3340      	adds	r3, #64	; 0x40
 8015bcc:	4a90      	ldr	r2, [pc, #576]	; (8015e10 <createProblem+0x14f68>)
 8015bce:	461c      	mov	r4, r3
 8015bd0:	4615      	mov	r5, r2
 8015bd2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8015bd4:	6020      	str	r0, [r4, #0]
 8015bd6:	6061      	str	r1, [r4, #4]
 8015bd8:	60a2      	str	r2, [r4, #8]
 8015bda:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,10,11,13,15,18");
 8015bdc:	687b      	ldr	r3, [r7, #4]
 8015bde:	3304      	adds	r3, #4
 8015be0:	4a8c      	ldr	r2, [pc, #560]	; (8015e14 <createProblem+0x14f6c>)
 8015be2:	461d      	mov	r5, r3
 8015be4:	4614      	mov	r4, r2
 8015be6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015be8:	6028      	str	r0, [r5, #0]
 8015bea:	6069      	str	r1, [r5, #4]
 8015bec:	60aa      	str	r2, [r5, #8]
 8015bee:	60eb      	str	r3, [r5, #12]
 8015bf0:	6820      	ldr	r0, [r4, #0]
 8015bf2:	6128      	str	r0, [r5, #16]
 8015bf4:	7923      	ldrb	r3, [r4, #4]
 8015bf6:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8015bf8:	687b      	ldr	r3, [r7, #4]
 8015bfa:	33d8      	adds	r3, #216	; 0xd8
 8015bfc:	4a86      	ldr	r2, [pc, #536]	; (8015e18 <createProblem+0x14f70>)
 8015bfe:	461c      	mov	r4, r3
 8015c00:	4615      	mov	r5, r2
 8015c02:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8015c04:	6020      	str	r0, [r4, #0]
 8015c06:	6061      	str	r1, [r4, #4]
 8015c08:	60a2      	str	r2, [r4, #8]
 8015c0a:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8015c0c:	687b      	ldr	r3, [r7, #4]
 8015c0e:	33cc      	adds	r3, #204	; 0xcc
 8015c10:	4a82      	ldr	r2, [pc, #520]	; (8015e1c <createProblem+0x14f74>)
 8015c12:	8811      	ldrh	r1, [r2, #0]
 8015c14:	7892      	ldrb	r2, [r2, #2]
 8015c16:	8019      	strh	r1, [r3, #0]
 8015c18:	709a      	strb	r2, [r3, #2]
			break;
 8015c1a:	f004 be8b 	b.w	801a934 <createProblem+0x19a8c>
		case 685 :
			strcpy(p->name,"PB AND JELLY");
 8015c1e:	687b      	ldr	r3, [r7, #4]
 8015c20:	337c      	adds	r3, #124	; 0x7c
 8015c22:	4a7f      	ldr	r2, [pc, #508]	; (8015e20 <createProblem+0x14f78>)
 8015c24:	461c      	mov	r4, r3
 8015c26:	4613      	mov	r3, r2
 8015c28:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015c2a:	6020      	str	r0, [r4, #0]
 8015c2c:	6061      	str	r1, [r4, #4]
 8015c2e:	60a2      	str	r2, [r4, #8]
 8015c30:	781b      	ldrb	r3, [r3, #0]
 8015c32:	7323      	strb	r3, [r4, #12]
			p->moveSize = 7;
 8015c34:	687b      	ldr	r3, [r7, #4]
 8015c36:	2207      	movs	r2, #7
 8015c38:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,I,E,H,I,D");
 8015c3a:	687b      	ldr	r3, [r7, #4]
 8015c3c:	3340      	adds	r3, #64	; 0x40
 8015c3e:	4a79      	ldr	r2, [pc, #484]	; (8015e24 <createProblem+0x14f7c>)
 8015c40:	461c      	mov	r4, r3
 8015c42:	4613      	mov	r3, r2
 8015c44:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015c46:	6020      	str	r0, [r4, #0]
 8015c48:	6061      	str	r1, [r4, #4]
 8015c4a:	60a2      	str	r2, [r4, #8]
 8015c4c:	881b      	ldrh	r3, [r3, #0]
 8015c4e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,10,14,12,14,18");
 8015c50:	687b      	ldr	r3, [r7, #4]
 8015c52:	3304      	adds	r3, #4
 8015c54:	4a74      	ldr	r2, [pc, #464]	; (8015e28 <createProblem+0x14f80>)
 8015c56:	461d      	mov	r5, r3
 8015c58:	4614      	mov	r4, r2
 8015c5a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015c5c:	6028      	str	r0, [r5, #0]
 8015c5e:	6069      	str	r1, [r5, #4]
 8015c60:	60aa      	str	r2, [r5, #8]
 8015c62:	60eb      	str	r3, [r5, #12]
 8015c64:	8823      	ldrh	r3, [r4, #0]
 8015c66:	78a2      	ldrb	r2, [r4, #2]
 8015c68:	822b      	strh	r3, [r5, #16]
 8015c6a:	4613      	mov	r3, r2
 8015c6c:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8015c6e:	687b      	ldr	r3, [r7, #4]
 8015c70:	33d8      	adds	r3, #216	; 0xd8
 8015c72:	4a6e      	ldr	r2, [pc, #440]	; (8015e2c <createProblem+0x14f84>)
 8015c74:	461c      	mov	r4, r3
 8015c76:	4613      	mov	r3, r2
 8015c78:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015c7a:	6020      	str	r0, [r4, #0]
 8015c7c:	6061      	str	r1, [r4, #4]
 8015c7e:	60a2      	str	r2, [r4, #8]
 8015c80:	881b      	ldrh	r3, [r3, #0]
 8015c82:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8015c84:	687b      	ldr	r3, [r7, #4]
 8015c86:	33cc      	adds	r3, #204	; 0xcc
 8015c88:	4a69      	ldr	r2, [pc, #420]	; (8015e30 <createProblem+0x14f88>)
 8015c8a:	6810      	ldr	r0, [r2, #0]
 8015c8c:	6018      	str	r0, [r3, #0]
			break;
 8015c8e:	f004 be51 	b.w	801a934 <createProblem+0x19a8c>
		case 686 :
			strcpy(p->name,"INNSMOUTH HORROR");
 8015c92:	687b      	ldr	r3, [r7, #4]
 8015c94:	337c      	adds	r3, #124	; 0x7c
 8015c96:	4a67      	ldr	r2, [pc, #412]	; (8015e34 <createProblem+0x14f8c>)
 8015c98:	461d      	mov	r5, r3
 8015c9a:	4614      	mov	r4, r2
 8015c9c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015c9e:	6028      	str	r0, [r5, #0]
 8015ca0:	6069      	str	r1, [r5, #4]
 8015ca2:	60aa      	str	r2, [r5, #8]
 8015ca4:	60eb      	str	r3, [r5, #12]
 8015ca6:	7823      	ldrb	r3, [r4, #0]
 8015ca8:	742b      	strb	r3, [r5, #16]
			p->moveSize = 9;
 8015caa:	687b      	ldr	r3, [r7, #4]
 8015cac:	2209      	movs	r2, #9
 8015cae:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,F,E,G,E,I,I,E");
 8015cb0:	687b      	ldr	r3, [r7, #4]
 8015cb2:	3340      	adds	r3, #64	; 0x40
 8015cb4:	4a60      	ldr	r2, [pc, #384]	; (8015e38 <createProblem+0x14f90>)
 8015cb6:	461d      	mov	r5, r3
 8015cb8:	4614      	mov	r4, r2
 8015cba:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015cbc:	6028      	str	r0, [r5, #0]
 8015cbe:	6069      	str	r1, [r5, #4]
 8015cc0:	60aa      	str	r2, [r5, #8]
 8015cc2:	60eb      	str	r3, [r5, #12]
 8015cc4:	8823      	ldrh	r3, [r4, #0]
 8015cc6:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,8,11,12,14,16,18,7,6");
 8015cc8:	687b      	ldr	r3, [r7, #4]
 8015cca:	3304      	adds	r3, #4
 8015ccc:	4a5b      	ldr	r2, [pc, #364]	; (8015e3c <createProblem+0x14f94>)
 8015cce:	461c      	mov	r4, r3
 8015cd0:	4615      	mov	r5, r2
 8015cd2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8015cd4:	6020      	str	r0, [r4, #0]
 8015cd6:	6061      	str	r1, [r4, #4]
 8015cd8:	60a2      	str	r2, [r4, #8]
 8015cda:	60e3      	str	r3, [r4, #12]
 8015cdc:	6828      	ldr	r0, [r5, #0]
 8015cde:	6120      	str	r0, [r4, #16]
 8015ce0:	88ab      	ldrh	r3, [r5, #4]
 8015ce2:	79aa      	ldrb	r2, [r5, #6]
 8015ce4:	82a3      	strh	r3, [r4, #20]
 8015ce6:	4613      	mov	r3, r2
 8015ce8:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,d,d,d,d,d,e,d,s");
 8015cea:	687b      	ldr	r3, [r7, #4]
 8015cec:	33d8      	adds	r3, #216	; 0xd8
 8015cee:	4a54      	ldr	r2, [pc, #336]	; (8015e40 <createProblem+0x14f98>)
 8015cf0:	461d      	mov	r5, r3
 8015cf2:	4614      	mov	r4, r2
 8015cf4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015cf6:	6028      	str	r0, [r5, #0]
 8015cf8:	6069      	str	r1, [r5, #4]
 8015cfa:	60aa      	str	r2, [r5, #8]
 8015cfc:	60eb      	str	r3, [r5, #12]
 8015cfe:	8823      	ldrh	r3, [r4, #0]
 8015d00:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8015d02:	687b      	ldr	r3, [r7, #4]
 8015d04:	33cc      	adds	r3, #204	; 0xcc
 8015d06:	4a4f      	ldr	r2, [pc, #316]	; (8015e44 <createProblem+0x14f9c>)
 8015d08:	6810      	ldr	r0, [r2, #0]
 8015d0a:	6018      	str	r0, [r3, #0]
			break;
 8015d0c:	f004 be12 	b.w	801a934 <createProblem+0x19a8c>
		case 687 :
			strcpy(p->name,"BROWN DIRTY WATER");
 8015d10:	687b      	ldr	r3, [r7, #4]
 8015d12:	337c      	adds	r3, #124	; 0x7c
 8015d14:	4a4c      	ldr	r2, [pc, #304]	; (8015e48 <createProblem+0x14fa0>)
 8015d16:	461d      	mov	r5, r3
 8015d18:	4614      	mov	r4, r2
 8015d1a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015d1c:	6028      	str	r0, [r5, #0]
 8015d1e:	6069      	str	r1, [r5, #4]
 8015d20:	60aa      	str	r2, [r5, #8]
 8015d22:	60eb      	str	r3, [r5, #12]
 8015d24:	8823      	ldrh	r3, [r4, #0]
 8015d26:	822b      	strh	r3, [r5, #16]
			p->moveSize = 7;
 8015d28:	687b      	ldr	r3, [r7, #4]
 8015d2a:	2207      	movs	r2, #7
 8015d2c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,C,F,A,D");
 8015d2e:	687b      	ldr	r3, [r7, #4]
 8015d30:	3340      	adds	r3, #64	; 0x40
 8015d32:	4a46      	ldr	r2, [pc, #280]	; (8015e4c <createProblem+0x14fa4>)
 8015d34:	461c      	mov	r4, r3
 8015d36:	4613      	mov	r3, r2
 8015d38:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015d3a:	6020      	str	r0, [r4, #0]
 8015d3c:	6061      	str	r1, [r4, #4]
 8015d3e:	60a2      	str	r2, [r4, #8]
 8015d40:	881b      	ldrh	r3, [r3, #0]
 8015d42:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,8,8,11,14,18");
 8015d44:	687b      	ldr	r3, [r7, #4]
 8015d46:	3304      	adds	r3, #4
 8015d48:	4a41      	ldr	r2, [pc, #260]	; (8015e50 <createProblem+0x14fa8>)
 8015d4a:	461d      	mov	r5, r3
 8015d4c:	4614      	mov	r4, r2
 8015d4e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015d50:	6028      	str	r0, [r5, #0]
 8015d52:	6069      	str	r1, [r5, #4]
 8015d54:	60aa      	str	r2, [r5, #8]
 8015d56:	60eb      	str	r3, [r5, #12]
 8015d58:	7823      	ldrb	r3, [r4, #0]
 8015d5a:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8015d5c:	687b      	ldr	r3, [r7, #4]
 8015d5e:	33d8      	adds	r3, #216	; 0xd8
 8015d60:	4a3c      	ldr	r2, [pc, #240]	; (8015e54 <createProblem+0x14fac>)
 8015d62:	461c      	mov	r4, r3
 8015d64:	4613      	mov	r3, r2
 8015d66:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015d68:	6020      	str	r0, [r4, #0]
 8015d6a:	6061      	str	r1, [r4, #4]
 8015d6c:	60a2      	str	r2, [r4, #8]
 8015d6e:	881b      	ldrh	r3, [r3, #0]
 8015d70:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8015d72:	687b      	ldr	r3, [r7, #4]
 8015d74:	33cc      	adds	r3, #204	; 0xcc
 8015d76:	4a2e      	ldr	r2, [pc, #184]	; (8015e30 <createProblem+0x14f88>)
 8015d78:	6810      	ldr	r0, [r2, #0]
 8015d7a:	6018      	str	r0, [r3, #0]
			break;
 8015d7c:	f004 bdda 	b.w	801a934 <createProblem+0x19a8c>
		case 688 :
			strcpy(p->name,"ANTI JULIE");
 8015d80:	687b      	ldr	r3, [r7, #4]
 8015d82:	337c      	adds	r3, #124	; 0x7c
 8015d84:	4934      	ldr	r1, [pc, #208]	; (8015e58 <createProblem+0x14fb0>)
 8015d86:	461a      	mov	r2, r3
 8015d88:	460b      	mov	r3, r1
 8015d8a:	cb03      	ldmia	r3!, {r0, r1}
 8015d8c:	6010      	str	r0, [r2, #0]
 8015d8e:	6051      	str	r1, [r2, #4]
 8015d90:	8819      	ldrh	r1, [r3, #0]
 8015d92:	789b      	ldrb	r3, [r3, #2]
 8015d94:	8111      	strh	r1, [r2, #8]
 8015d96:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 8015d98:	687b      	ldr	r3, [r7, #4]
 8015d9a:	2206      	movs	r2, #6
 8015d9c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,G,A,B");
 8015d9e:	687b      	ldr	r3, [r7, #4]
 8015da0:	3340      	adds	r3, #64	; 0x40
 8015da2:	4a2e      	ldr	r2, [pc, #184]	; (8015e5c <createProblem+0x14fb4>)
 8015da4:	461c      	mov	r4, r3
 8015da6:	4613      	mov	r3, r2
 8015da8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015daa:	6020      	str	r0, [r4, #0]
 8015dac:	6061      	str	r1, [r4, #4]
 8015dae:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,10,13,17,18,6");
 8015db0:	687b      	ldr	r3, [r7, #4]
 8015db2:	3304      	adds	r3, #4
 8015db4:	4a2a      	ldr	r2, [pc, #168]	; (8015e60 <createProblem+0x14fb8>)
 8015db6:	461c      	mov	r4, r3
 8015db8:	4615      	mov	r5, r2
 8015dba:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8015dbc:	6020      	str	r0, [r4, #0]
 8015dbe:	6061      	str	r1, [r4, #4]
 8015dc0:	60a2      	str	r2, [r4, #8]
 8015dc2:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e,d");
 8015dc4:	687b      	ldr	r3, [r7, #4]
 8015dc6:	33d8      	adds	r3, #216	; 0xd8
 8015dc8:	4a26      	ldr	r2, [pc, #152]	; (8015e64 <createProblem+0x14fbc>)
 8015dca:	461c      	mov	r4, r3
 8015dcc:	4613      	mov	r3, r2
 8015dce:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015dd0:	6020      	str	r0, [r4, #0]
 8015dd2:	6061      	str	r1, [r4, #4]
 8015dd4:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8015dd6:	687b      	ldr	r3, [r7, #4]
 8015dd8:	33cc      	adds	r3, #204	; 0xcc
 8015dda:	4a23      	ldr	r2, [pc, #140]	; (8015e68 <createProblem+0x14fc0>)
 8015ddc:	8811      	ldrh	r1, [r2, #0]
 8015dde:	7892      	ldrb	r2, [r2, #2]
 8015de0:	8019      	strh	r1, [r3, #0]
 8015de2:	709a      	strb	r2, [r3, #2]
			break;
 8015de4:	f004 bda6 	b.w	801a934 <createProblem+0x19a8c>
 8015de8:	080280e8 	.word	0x080280e8
 8015dec:	080280f0 	.word	0x080280f0
 8015df0:	080280fc 	.word	0x080280fc
 8015df4:	080208a0 	.word	0x080208a0
 8015df8:	080209a4 	.word	0x080209a4
 8015dfc:	0802810c 	.word	0x0802810c
 8015e00:	0802811c 	.word	0x0802811c
 8015e04:	08028128 	.word	0x08028128
 8015e08:	08027de0 	.word	0x08027de0
 8015e0c:	08028138 	.word	0x08028138
 8015e10:	08028140 	.word	0x08028140
 8015e14:	08028150 	.word	0x08028150
 8015e18:	08020a4c 	.word	0x08020a4c
 8015e1c:	080208f0 	.word	0x080208f0
 8015e20:	08028168 	.word	0x08028168
 8015e24:	08028178 	.word	0x08028178
 8015e28:	08028188 	.word	0x08028188
 8015e2c:	08020a14 	.word	0x08020a14
 8015e30:	08020928 	.word	0x08020928
 8015e34:	0802819c 	.word	0x0802819c
 8015e38:	080281b0 	.word	0x080281b0
 8015e3c:	080281c4 	.word	0x080281c4
 8015e40:	080281dc 	.word	0x080281dc
 8015e44:	08020830 	.word	0x08020830
 8015e48:	080281f0 	.word	0x080281f0
 8015e4c:	08028204 	.word	0x08028204
 8015e50:	08028214 	.word	0x08028214
 8015e54:	08020820 	.word	0x08020820
 8015e58:	08028228 	.word	0x08028228
 8015e5c:	08028234 	.word	0x08028234
 8015e60:	08028240 	.word	0x08028240
 8015e64:	08026090 	.word	0x08026090
 8015e68:	08020874 	.word	0x08020874
		case 689 :
			strcpy(p->name,"DUMBADUMBA EASY");
 8015e6c:	687b      	ldr	r3, [r7, #4]
 8015e6e:	337c      	adds	r3, #124	; 0x7c
 8015e70:	4aa9      	ldr	r2, [pc, #676]	; (8016118 <createProblem+0x15270>)
 8015e72:	461c      	mov	r4, r3
 8015e74:	4615      	mov	r5, r2
 8015e76:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8015e78:	6020      	str	r0, [r4, #0]
 8015e7a:	6061      	str	r1, [r4, #4]
 8015e7c:	60a2      	str	r2, [r4, #8]
 8015e7e:	60e3      	str	r3, [r4, #12]
			p->moveSize = 9;
 8015e80:	687b      	ldr	r3, [r7, #4]
 8015e82:	2209      	movs	r2, #9
 8015e84:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,E,F,C,D,D,E,C");
 8015e86:	687b      	ldr	r3, [r7, #4]
 8015e88:	3340      	adds	r3, #64	; 0x40
 8015e8a:	4aa4      	ldr	r2, [pc, #656]	; (801611c <createProblem+0x15274>)
 8015e8c:	461d      	mov	r5, r3
 8015e8e:	4614      	mov	r4, r2
 8015e90:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015e92:	6028      	str	r0, [r5, #0]
 8015e94:	6069      	str	r1, [r5, #4]
 8015e96:	60aa      	str	r2, [r5, #8]
 8015e98:	60eb      	str	r3, [r5, #12]
 8015e9a:	8823      	ldrh	r3, [r4, #0]
 8015e9c:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,5,8,11,13,15,18,6,5");
 8015e9e:	687b      	ldr	r3, [r7, #4]
 8015ea0:	3304      	adds	r3, #4
 8015ea2:	4a9f      	ldr	r2, [pc, #636]	; (8016120 <createProblem+0x15278>)
 8015ea4:	461d      	mov	r5, r3
 8015ea6:	4614      	mov	r4, r2
 8015ea8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015eaa:	6028      	str	r0, [r5, #0]
 8015eac:	6069      	str	r1, [r5, #4]
 8015eae:	60aa      	str	r2, [r5, #8]
 8015eb0:	60eb      	str	r3, [r5, #12]
 8015eb2:	6820      	ldr	r0, [r4, #0]
 8015eb4:	6128      	str	r0, [r5, #16]
 8015eb6:	88a3      	ldrh	r3, [r4, #4]
 8015eb8:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,e,s,d");
 8015eba:	687b      	ldr	r3, [r7, #4]
 8015ebc:	33d8      	adds	r3, #216	; 0xd8
 8015ebe:	4a99      	ldr	r2, [pc, #612]	; (8016124 <createProblem+0x1527c>)
 8015ec0:	461d      	mov	r5, r3
 8015ec2:	4614      	mov	r4, r2
 8015ec4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015ec6:	6028      	str	r0, [r5, #0]
 8015ec8:	6069      	str	r1, [r5, #4]
 8015eca:	60aa      	str	r2, [r5, #8]
 8015ecc:	60eb      	str	r3, [r5, #12]
 8015ece:	8823      	ldrh	r3, [r4, #0]
 8015ed0:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8015ed2:	687b      	ldr	r3, [r7, #4]
 8015ed4:	33cc      	adds	r3, #204	; 0xcc
 8015ed6:	4a94      	ldr	r2, [pc, #592]	; (8016128 <createProblem+0x15280>)
 8015ed8:	6810      	ldr	r0, [r2, #0]
 8015eda:	6018      	str	r0, [r3, #0]
			break;
 8015edc:	f004 bd2a 	b.w	801a934 <createProblem+0x19a8c>
		case 69 :
			strcpy(p->name,"FROM VALCHIUSELLAWITHLOVE");
 8015ee0:	687b      	ldr	r3, [r7, #4]
 8015ee2:	337c      	adds	r3, #124	; 0x7c
 8015ee4:	4a91      	ldr	r2, [pc, #580]	; (801612c <createProblem+0x15284>)
 8015ee6:	461d      	mov	r5, r3
 8015ee8:	4614      	mov	r4, r2
 8015eea:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015eec:	6028      	str	r0, [r5, #0]
 8015eee:	6069      	str	r1, [r5, #4]
 8015ef0:	60aa      	str	r2, [r5, #8]
 8015ef2:	60eb      	str	r3, [r5, #12]
 8015ef4:	cc03      	ldmia	r4!, {r0, r1}
 8015ef6:	6128      	str	r0, [r5, #16]
 8015ef8:	6169      	str	r1, [r5, #20]
 8015efa:	8823      	ldrh	r3, [r4, #0]
 8015efc:	832b      	strh	r3, [r5, #24]
			p->moveSize = 5;
 8015efe:	687b      	ldr	r3, [r7, #4]
 8015f00:	2205      	movs	r2, #5
 8015f02:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,C,I,E,D");
 8015f04:	687b      	ldr	r3, [r7, #4]
 8015f06:	3340      	adds	r3, #64	; 0x40
 8015f08:	4989      	ldr	r1, [pc, #548]	; (8016130 <createProblem+0x15288>)
 8015f0a:	461a      	mov	r2, r3
 8015f0c:	460b      	mov	r3, r1
 8015f0e:	cb03      	ldmia	r3!, {r0, r1}
 8015f10:	6010      	str	r0, [r2, #0]
 8015f12:	6051      	str	r1, [r2, #4]
 8015f14:	881b      	ldrh	r3, [r3, #0]
 8015f16:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,8,10,14,18");
 8015f18:	687b      	ldr	r3, [r7, #4]
 8015f1a:	3304      	adds	r3, #4
 8015f1c:	4a85      	ldr	r2, [pc, #532]	; (8016134 <createProblem+0x1528c>)
 8015f1e:	461c      	mov	r4, r3
 8015f20:	4613      	mov	r3, r2
 8015f22:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015f24:	6020      	str	r0, [r4, #0]
 8015f26:	6061      	str	r1, [r4, #4]
 8015f28:	60a2      	str	r2, [r4, #8]
 8015f2a:	781b      	ldrb	r3, [r3, #0]
 8015f2c:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8015f2e:	687b      	ldr	r3, [r7, #4]
 8015f30:	33d8      	adds	r3, #216	; 0xd8
 8015f32:	4981      	ldr	r1, [pc, #516]	; (8016138 <createProblem+0x15290>)
 8015f34:	461a      	mov	r2, r3
 8015f36:	460b      	mov	r3, r1
 8015f38:	cb03      	ldmia	r3!, {r0, r1}
 8015f3a:	6010      	str	r0, [r2, #0]
 8015f3c:	6051      	str	r1, [r2, #4]
 8015f3e:	881b      	ldrh	r3, [r3, #0]
 8015f40:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 8015f42:	687b      	ldr	r3, [r7, #4]
 8015f44:	33cc      	adds	r3, #204	; 0xcc
 8015f46:	4a7d      	ldr	r2, [pc, #500]	; (801613c <createProblem+0x15294>)
 8015f48:	6810      	ldr	r0, [r2, #0]
 8015f4a:	6018      	str	r0, [r3, #0]
			break;
 8015f4c:	f004 bcf2 	b.w	801a934 <createProblem+0x19a8c>
		case 690 :
			strcpy(p->name,"PURPLE NURPLE BOYS");
 8015f50:	687b      	ldr	r3, [r7, #4]
 8015f52:	337c      	adds	r3, #124	; 0x7c
 8015f54:	4a7a      	ldr	r2, [pc, #488]	; (8016140 <createProblem+0x15298>)
 8015f56:	461d      	mov	r5, r3
 8015f58:	4614      	mov	r4, r2
 8015f5a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015f5c:	6028      	str	r0, [r5, #0]
 8015f5e:	6069      	str	r1, [r5, #4]
 8015f60:	60aa      	str	r2, [r5, #8]
 8015f62:	60eb      	str	r3, [r5, #12]
 8015f64:	8823      	ldrh	r3, [r4, #0]
 8015f66:	78a2      	ldrb	r2, [r4, #2]
 8015f68:	822b      	strh	r3, [r5, #16]
 8015f6a:	4613      	mov	r3, r2
 8015f6c:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 7;
 8015f6e:	687b      	ldr	r3, [r7, #4]
 8015f70:	2207      	movs	r2, #7
 8015f72:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,G,E,I,G,I");
 8015f74:	687b      	ldr	r3, [r7, #4]
 8015f76:	3340      	adds	r3, #64	; 0x40
 8015f78:	4a72      	ldr	r2, [pc, #456]	; (8016144 <createProblem+0x1529c>)
 8015f7a:	461c      	mov	r4, r3
 8015f7c:	4613      	mov	r3, r2
 8015f7e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015f80:	6020      	str	r0, [r4, #0]
 8015f82:	6061      	str	r1, [r4, #4]
 8015f84:	60a2      	str	r2, [r4, #8]
 8015f86:	881b      	ldrh	r3, [r3, #0]
 8015f88:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,9,12,14,15,18");
 8015f8a:	687b      	ldr	r3, [r7, #4]
 8015f8c:	3304      	adds	r3, #4
 8015f8e:	4a6e      	ldr	r2, [pc, #440]	; (8016148 <createProblem+0x152a0>)
 8015f90:	461d      	mov	r5, r3
 8015f92:	4614      	mov	r4, r2
 8015f94:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015f96:	6028      	str	r0, [r5, #0]
 8015f98:	6069      	str	r1, [r5, #4]
 8015f9a:	60aa      	str	r2, [r5, #8]
 8015f9c:	60eb      	str	r3, [r5, #12]
 8015f9e:	8823      	ldrh	r3, [r4, #0]
 8015fa0:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8015fa2:	687b      	ldr	r3, [r7, #4]
 8015fa4:	33d8      	adds	r3, #216	; 0xd8
 8015fa6:	4a69      	ldr	r2, [pc, #420]	; (801614c <createProblem+0x152a4>)
 8015fa8:	461c      	mov	r4, r3
 8015faa:	4613      	mov	r3, r2
 8015fac:	cb07      	ldmia	r3!, {r0, r1, r2}
 8015fae:	6020      	str	r0, [r4, #0]
 8015fb0:	6061      	str	r1, [r4, #4]
 8015fb2:	60a2      	str	r2, [r4, #8]
 8015fb4:	881b      	ldrh	r3, [r3, #0]
 8015fb6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8015fb8:	687b      	ldr	r3, [r7, #4]
 8015fba:	33cc      	adds	r3, #204	; 0xcc
 8015fbc:	4a64      	ldr	r2, [pc, #400]	; (8016150 <createProblem+0x152a8>)
 8015fbe:	6810      	ldr	r0, [r2, #0]
 8015fc0:	6018      	str	r0, [r3, #0]
			break;
 8015fc2:	f004 bcb7 	b.w	801a934 <createProblem+0x19a8c>
		case 691 :
			strcpy(p->name,"WHERE'S YOUR BERRY");
 8015fc6:	687b      	ldr	r3, [r7, #4]
 8015fc8:	337c      	adds	r3, #124	; 0x7c
 8015fca:	4a62      	ldr	r2, [pc, #392]	; (8016154 <createProblem+0x152ac>)
 8015fcc:	461d      	mov	r5, r3
 8015fce:	4614      	mov	r4, r2
 8015fd0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015fd2:	6028      	str	r0, [r5, #0]
 8015fd4:	6069      	str	r1, [r5, #4]
 8015fd6:	60aa      	str	r2, [r5, #8]
 8015fd8:	60eb      	str	r3, [r5, #12]
 8015fda:	8823      	ldrh	r3, [r4, #0]
 8015fdc:	78a2      	ldrb	r2, [r4, #2]
 8015fde:	822b      	strh	r3, [r5, #16]
 8015fe0:	4613      	mov	r3, r2
 8015fe2:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 9;
 8015fe4:	687b      	ldr	r3, [r7, #4]
 8015fe6:	2209      	movs	r2, #9
 8015fe8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,D,I,E,F,C,B,E,B");
 8015fea:	687b      	ldr	r3, [r7, #4]
 8015fec:	3340      	adds	r3, #64	; 0x40
 8015fee:	4a5a      	ldr	r2, [pc, #360]	; (8016158 <createProblem+0x152b0>)
 8015ff0:	461d      	mov	r5, r3
 8015ff2:	4614      	mov	r4, r2
 8015ff4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8015ff6:	6028      	str	r0, [r5, #0]
 8015ff8:	6069      	str	r1, [r5, #4]
 8015ffa:	60aa      	str	r2, [r5, #8]
 8015ffc:	60eb      	str	r3, [r5, #12]
 8015ffe:	8823      	ldrh	r3, [r4, #0]
 8016000:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,15,18,16,11,13,10,8,6");
 8016002:	687b      	ldr	r3, [r7, #4]
 8016004:	3304      	adds	r3, #4
 8016006:	4a55      	ldr	r2, [pc, #340]	; (801615c <createProblem+0x152b4>)
 8016008:	461d      	mov	r5, r3
 801600a:	4614      	mov	r4, r2
 801600c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801600e:	6028      	str	r0, [r5, #0]
 8016010:	6069      	str	r1, [r5, #4]
 8016012:	60aa      	str	r2, [r5, #8]
 8016014:	60eb      	str	r3, [r5, #12]
 8016016:	cc03      	ldmia	r4!, {r0, r1}
 8016018:	6128      	str	r0, [r5, #16]
 801601a:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,d,e,d,d,d,d,d,s");
 801601c:	687b      	ldr	r3, [r7, #4]
 801601e:	33d8      	adds	r3, #216	; 0xd8
 8016020:	4a4f      	ldr	r2, [pc, #316]	; (8016160 <createProblem+0x152b8>)
 8016022:	461d      	mov	r5, r3
 8016024:	4614      	mov	r4, r2
 8016026:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016028:	6028      	str	r0, [r5, #0]
 801602a:	6069      	str	r1, [r5, #4]
 801602c:	60aa      	str	r2, [r5, #8]
 801602e:	60eb      	str	r3, [r5, #12]
 8016030:	8823      	ldrh	r3, [r4, #0]
 8016032:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8016034:	687b      	ldr	r3, [r7, #4]
 8016036:	33cc      	adds	r3, #204	; 0xcc
 8016038:	4a3b      	ldr	r2, [pc, #236]	; (8016128 <createProblem+0x15280>)
 801603a:	6810      	ldr	r0, [r2, #0]
 801603c:	6018      	str	r0, [r3, #0]
			break;
 801603e:	f004 bc79 	b.w	801a934 <createProblem+0x19a8c>
		case 692 :
			strcpy(p->name,"CATCH AND PULL");
 8016042:	687b      	ldr	r3, [r7, #4]
 8016044:	337c      	adds	r3, #124	; 0x7c
 8016046:	4a47      	ldr	r2, [pc, #284]	; (8016164 <createProblem+0x152bc>)
 8016048:	461c      	mov	r4, r3
 801604a:	4613      	mov	r3, r2
 801604c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801604e:	6020      	str	r0, [r4, #0]
 8016050:	6061      	str	r1, [r4, #4]
 8016052:	60a2      	str	r2, [r4, #8]
 8016054:	881a      	ldrh	r2, [r3, #0]
 8016056:	789b      	ldrb	r3, [r3, #2]
 8016058:	81a2      	strh	r2, [r4, #12]
 801605a:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 5;
 801605c:	687b      	ldr	r3, [r7, #4]
 801605e:	2205      	movs	r2, #5
 8016060:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,G,D,I");
 8016062:	687b      	ldr	r3, [r7, #4]
 8016064:	3340      	adds	r3, #64	; 0x40
 8016066:	4940      	ldr	r1, [pc, #256]	; (8016168 <createProblem+0x152c0>)
 8016068:	461a      	mov	r2, r3
 801606a:	460b      	mov	r3, r1
 801606c:	cb03      	ldmia	r3!, {r0, r1}
 801606e:	6010      	str	r0, [r2, #0]
 8016070:	6051      	str	r1, [r2, #4]
 8016072:	881b      	ldrh	r3, [r3, #0]
 8016074:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"14,8,4,18,9");
 8016076:	687b      	ldr	r3, [r7, #4]
 8016078:	3304      	adds	r3, #4
 801607a:	4a3c      	ldr	r2, [pc, #240]	; (801616c <createProblem+0x152c4>)
 801607c:	461c      	mov	r4, r3
 801607e:	4613      	mov	r3, r2
 8016080:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016082:	6020      	str	r0, [r4, #0]
 8016084:	6061      	str	r1, [r4, #4]
 8016086:	60a2      	str	r2, [r4, #8]
			strcpy(p->startFinish, "d,d,s,e,d");
 8016088:	687b      	ldr	r3, [r7, #4]
 801608a:	33d8      	adds	r3, #216	; 0xd8
 801608c:	4938      	ldr	r1, [pc, #224]	; (8016170 <createProblem+0x152c8>)
 801608e:	461a      	mov	r2, r3
 8016090:	460b      	mov	r3, r1
 8016092:	cb03      	ldmia	r3!, {r0, r1}
 8016094:	6010      	str	r0, [r2, #0]
 8016096:	6051      	str	r1, [r2, #4]
 8016098:	881b      	ldrh	r3, [r3, #0]
 801609a:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B");
 801609c:	687b      	ldr	r3, [r7, #4]
 801609e:	33cc      	adds	r3, #204	; 0xcc
 80160a0:	4a34      	ldr	r2, [pc, #208]	; (8016174 <createProblem+0x152cc>)
 80160a2:	8811      	ldrh	r1, [r2, #0]
 80160a4:	7892      	ldrb	r2, [r2, #2]
 80160a6:	8019      	strh	r1, [r3, #0]
 80160a8:	709a      	strb	r2, [r3, #2]
			break;
 80160aa:	f004 bc43 	b.w	801a934 <createProblem+0x19a8c>
		case 693 :
			strcpy(p->name,"ORDERLY HOUSING");
 80160ae:	687b      	ldr	r3, [r7, #4]
 80160b0:	337c      	adds	r3, #124	; 0x7c
 80160b2:	4a31      	ldr	r2, [pc, #196]	; (8016178 <createProblem+0x152d0>)
 80160b4:	461c      	mov	r4, r3
 80160b6:	4615      	mov	r5, r2
 80160b8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80160ba:	6020      	str	r0, [r4, #0]
 80160bc:	6061      	str	r1, [r4, #4]
 80160be:	60a2      	str	r2, [r4, #8]
 80160c0:	60e3      	str	r3, [r4, #12]
			p->moveSize = 5;
 80160c2:	687b      	ldr	r3, [r7, #4]
 80160c4:	2205      	movs	r2, #5
 80160c6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,F,E,D");
 80160c8:	687b      	ldr	r3, [r7, #4]
 80160ca:	3340      	adds	r3, #64	; 0x40
 80160cc:	492b      	ldr	r1, [pc, #172]	; (801617c <createProblem+0x152d4>)
 80160ce:	461a      	mov	r2, r3
 80160d0:	460b      	mov	r3, r1
 80160d2:	cb03      	ldmia	r3!, {r0, r1}
 80160d4:	6010      	str	r0, [r2, #0]
 80160d6:	6051      	str	r1, [r2, #4]
 80160d8:	881b      	ldrh	r3, [r3, #0]
 80160da:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,11,14,18");
 80160dc:	687b      	ldr	r3, [r7, #4]
 80160de:	3304      	adds	r3, #4
 80160e0:	4a27      	ldr	r2, [pc, #156]	; (8016180 <createProblem+0x152d8>)
 80160e2:	461c      	mov	r4, r3
 80160e4:	4613      	mov	r3, r2
 80160e6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80160e8:	6020      	str	r0, [r4, #0]
 80160ea:	6061      	str	r1, [r4, #4]
 80160ec:	60a2      	str	r2, [r4, #8]
 80160ee:	781b      	ldrb	r3, [r3, #0]
 80160f0:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 80160f2:	687b      	ldr	r3, [r7, #4]
 80160f4:	33d8      	adds	r3, #216	; 0xd8
 80160f6:	4910      	ldr	r1, [pc, #64]	; (8016138 <createProblem+0x15290>)
 80160f8:	461a      	mov	r2, r3
 80160fa:	460b      	mov	r3, r1
 80160fc:	cb03      	ldmia	r3!, {r0, r1}
 80160fe:	6010      	str	r0, [r2, #0]
 8016100:	6051      	str	r1, [r2, #4]
 8016102:	881b      	ldrh	r3, [r3, #0]
 8016104:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7C");
 8016106:	687b      	ldr	r3, [r7, #4]
 8016108:	33cc      	adds	r3, #204	; 0xcc
 801610a:	4a1e      	ldr	r2, [pc, #120]	; (8016184 <createProblem+0x152dc>)
 801610c:	8811      	ldrh	r1, [r2, #0]
 801610e:	7892      	ldrb	r2, [r2, #2]
 8016110:	8019      	strh	r1, [r3, #0]
 8016112:	709a      	strb	r2, [r3, #2]
			break;
 8016114:	f004 bc0e 	b.w	801a934 <createProblem+0x19a8c>
 8016118:	08028250 	.word	0x08028250
 801611c:	08028260 	.word	0x08028260
 8016120:	08028274 	.word	0x08028274
 8016124:	0802828c 	.word	0x0802828c
 8016128:	08020830 	.word	0x08020830
 801612c:	080282a0 	.word	0x080282a0
 8016130:	080282bc 	.word	0x080282bc
 8016134:	08023908 	.word	0x08023908
 8016138:	080208a0 	.word	0x080208a0
 801613c:	080209a4 	.word	0x080209a4
 8016140:	080282c8 	.word	0x080282c8
 8016144:	080282dc 	.word	0x080282dc
 8016148:	080282ec 	.word	0x080282ec
 801614c:	08020820 	.word	0x08020820
 8016150:	08020928 	.word	0x08020928
 8016154:	08028300 	.word	0x08028300
 8016158:	08028314 	.word	0x08028314
 801615c:	08028328 	.word	0x08028328
 8016160:	08028340 	.word	0x08028340
 8016164:	08028354 	.word	0x08028354
 8016168:	08028364 	.word	0x08028364
 801616c:	08028370 	.word	0x08028370
 8016170:	0802837c 	.word	0x0802837c
 8016174:	080208ac 	.word	0x080208ac
 8016178:	08028388 	.word	0x08028388
 801617c:	08028398 	.word	0x08028398
 8016180:	0802140c 	.word	0x0802140c
 8016184:	08020b0c 	.word	0x08020b0c
		case 694 :
			strcpy(p->name,"VANTABLACK");
 8016188:	687b      	ldr	r3, [r7, #4]
 801618a:	337c      	adds	r3, #124	; 0x7c
 801618c:	49c0      	ldr	r1, [pc, #768]	; (8016490 <createProblem+0x155e8>)
 801618e:	461a      	mov	r2, r3
 8016190:	460b      	mov	r3, r1
 8016192:	cb03      	ldmia	r3!, {r0, r1}
 8016194:	6010      	str	r0, [r2, #0]
 8016196:	6051      	str	r1, [r2, #4]
 8016198:	8819      	ldrh	r1, [r3, #0]
 801619a:	789b      	ldrb	r3, [r3, #2]
 801619c:	8111      	strh	r1, [r2, #8]
 801619e:	7293      	strb	r3, [r2, #10]
			p->moveSize = 5;
 80161a0:	687b      	ldr	r3, [r7, #4]
 80161a2:	2205      	movs	r2, #5
 80161a4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,B,D,A,G");
 80161a6:	687b      	ldr	r3, [r7, #4]
 80161a8:	3340      	adds	r3, #64	; 0x40
 80161aa:	49ba      	ldr	r1, [pc, #744]	; (8016494 <createProblem+0x155ec>)
 80161ac:	461a      	mov	r2, r3
 80161ae:	460b      	mov	r3, r1
 80161b0:	cb03      	ldmia	r3!, {r0, r1}
 80161b2:	6010      	str	r0, [r2, #0]
 80161b4:	6051      	str	r1, [r2, #4]
 80161b6:	881b      	ldrh	r3, [r3, #0]
 80161b8:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"8,10,15,18,4");
 80161ba:	687b      	ldr	r3, [r7, #4]
 80161bc:	3304      	adds	r3, #4
 80161be:	4ab6      	ldr	r2, [pc, #728]	; (8016498 <createProblem+0x155f0>)
 80161c0:	461c      	mov	r4, r3
 80161c2:	4613      	mov	r3, r2
 80161c4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80161c6:	6020      	str	r0, [r4, #0]
 80161c8:	6061      	str	r1, [r4, #4]
 80161ca:	60a2      	str	r2, [r4, #8]
 80161cc:	781b      	ldrb	r3, [r3, #0]
 80161ce:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "d,d,d,e,s");
 80161d0:	687b      	ldr	r3, [r7, #4]
 80161d2:	33d8      	adds	r3, #216	; 0xd8
 80161d4:	49b1      	ldr	r1, [pc, #708]	; (801649c <createProblem+0x155f4>)
 80161d6:	461a      	mov	r2, r3
 80161d8:	460b      	mov	r3, r1
 80161da:	cb03      	ldmia	r3!, {r0, r1}
 80161dc:	6010      	str	r0, [r2, #0]
 80161de:	6051      	str	r1, [r2, #4]
 80161e0:	881b      	ldrh	r3, [r3, #0]
 80161e2:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 80161e4:	687b      	ldr	r3, [r7, #4]
 80161e6:	33cc      	adds	r3, #204	; 0xcc
 80161e8:	4aad      	ldr	r2, [pc, #692]	; (80164a0 <createProblem+0x155f8>)
 80161ea:	6810      	ldr	r0, [r2, #0]
 80161ec:	6018      	str	r0, [r3, #0]
			break;
 80161ee:	f004 bba1 	b.w	801a934 <createProblem+0x19a8c>
		case 695 :
			strcpy(p->name,"WARM UP STUFF");
 80161f2:	687b      	ldr	r3, [r7, #4]
 80161f4:	337c      	adds	r3, #124	; 0x7c
 80161f6:	4aab      	ldr	r2, [pc, #684]	; (80164a4 <createProblem+0x155fc>)
 80161f8:	461c      	mov	r4, r3
 80161fa:	4613      	mov	r3, r2
 80161fc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80161fe:	6020      	str	r0, [r4, #0]
 8016200:	6061      	str	r1, [r4, #4]
 8016202:	60a2      	str	r2, [r4, #8]
 8016204:	881b      	ldrh	r3, [r3, #0]
 8016206:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 8016208:	687b      	ldr	r3, [r7, #4]
 801620a:	2207      	movs	r2, #7
 801620c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,E,D,E,A,D");
 801620e:	687b      	ldr	r3, [r7, #4]
 8016210:	3340      	adds	r3, #64	; 0x40
 8016212:	4aa5      	ldr	r2, [pc, #660]	; (80164a8 <createProblem+0x15600>)
 8016214:	461c      	mov	r4, r3
 8016216:	4613      	mov	r3, r2
 8016218:	cb07      	ldmia	r3!, {r0, r1, r2}
 801621a:	6020      	str	r0, [r4, #0]
 801621c:	6061      	str	r1, [r4, #4]
 801621e:	60a2      	str	r2, [r4, #8]
 8016220:	881b      	ldrh	r3, [r3, #0]
 8016222:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,11,12,14,18");
 8016224:	687b      	ldr	r3, [r7, #4]
 8016226:	3304      	adds	r3, #4
 8016228:	4aa0      	ldr	r2, [pc, #640]	; (80164ac <createProblem+0x15604>)
 801622a:	461d      	mov	r5, r3
 801622c:	4614      	mov	r4, r2
 801622e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016230:	6028      	str	r0, [r5, #0]
 8016232:	6069      	str	r1, [r5, #4]
 8016234:	60aa      	str	r2, [r5, #8]
 8016236:	60eb      	str	r3, [r5, #12]
 8016238:	8823      	ldrh	r3, [r4, #0]
 801623a:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 801623c:	687b      	ldr	r3, [r7, #4]
 801623e:	33d8      	adds	r3, #216	; 0xd8
 8016240:	4a9b      	ldr	r2, [pc, #620]	; (80164b0 <createProblem+0x15608>)
 8016242:	461c      	mov	r4, r3
 8016244:	4613      	mov	r3, r2
 8016246:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016248:	6020      	str	r0, [r4, #0]
 801624a:	6061      	str	r1, [r4, #4]
 801624c:	60a2      	str	r2, [r4, #8]
 801624e:	881b      	ldrh	r3, [r3, #0]
 8016250:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8016252:	687b      	ldr	r3, [r7, #4]
 8016254:	33cc      	adds	r3, #204	; 0xcc
 8016256:	4a97      	ldr	r2, [pc, #604]	; (80164b4 <createProblem+0x1560c>)
 8016258:	6810      	ldr	r0, [r2, #0]
 801625a:	6018      	str	r0, [r3, #0]
			break;
 801625c:	f004 bb6a 	b.w	801a934 <createProblem+0x19a8c>
		case 696 :
			strcpy(p->name,"OINTMENT 007");
 8016260:	687b      	ldr	r3, [r7, #4]
 8016262:	337c      	adds	r3, #124	; 0x7c
 8016264:	4a94      	ldr	r2, [pc, #592]	; (80164b8 <createProblem+0x15610>)
 8016266:	461c      	mov	r4, r3
 8016268:	4613      	mov	r3, r2
 801626a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801626c:	6020      	str	r0, [r4, #0]
 801626e:	6061      	str	r1, [r4, #4]
 8016270:	60a2      	str	r2, [r4, #8]
 8016272:	781b      	ldrb	r3, [r3, #0]
 8016274:	7323      	strb	r3, [r4, #12]
			p->moveSize = 9;
 8016276:	687b      	ldr	r3, [r7, #4]
 8016278:	2209      	movs	r2, #9
 801627a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,G,H,G,I,G,I");
 801627c:	687b      	ldr	r3, [r7, #4]
 801627e:	3340      	adds	r3, #64	; 0x40
 8016280:	4a8e      	ldr	r2, [pc, #568]	; (80164bc <createProblem+0x15614>)
 8016282:	461d      	mov	r5, r3
 8016284:	4614      	mov	r4, r2
 8016286:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016288:	6028      	str	r0, [r5, #0]
 801628a:	6069      	str	r1, [r5, #4]
 801628c:	60aa      	str	r2, [r5, #8]
 801628e:	60eb      	str	r3, [r5, #12]
 8016290:	8823      	ldrh	r3, [r4, #0]
 8016292:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,6,8,9,10,14,14,15,18");
 8016294:	687b      	ldr	r3, [r7, #4]
 8016296:	3304      	adds	r3, #4
 8016298:	4a89      	ldr	r2, [pc, #548]	; (80164c0 <createProblem+0x15618>)
 801629a:	461c      	mov	r4, r3
 801629c:	4615      	mov	r5, r2
 801629e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80162a0:	6020      	str	r0, [r4, #0]
 80162a2:	6061      	str	r1, [r4, #4]
 80162a4:	60a2      	str	r2, [r4, #8]
 80162a6:	60e3      	str	r3, [r4, #12]
 80162a8:	6828      	ldr	r0, [r5, #0]
 80162aa:	6120      	str	r0, [r4, #16]
 80162ac:	88ab      	ldrh	r3, [r5, #4]
 80162ae:	79aa      	ldrb	r2, [r5, #6]
 80162b0:	82a3      	strh	r3, [r4, #20]
 80162b2:	4613      	mov	r3, r2
 80162b4:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 80162b6:	687b      	ldr	r3, [r7, #4]
 80162b8:	33d8      	adds	r3, #216	; 0xd8
 80162ba:	4a82      	ldr	r2, [pc, #520]	; (80164c4 <createProblem+0x1561c>)
 80162bc:	461d      	mov	r5, r3
 80162be:	4614      	mov	r4, r2
 80162c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80162c2:	6028      	str	r0, [r5, #0]
 80162c4:	6069      	str	r1, [r5, #4]
 80162c6:	60aa      	str	r2, [r5, #8]
 80162c8:	60eb      	str	r3, [r5, #12]
 80162ca:	8823      	ldrh	r3, [r4, #0]
 80162cc:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 80162ce:	687b      	ldr	r3, [r7, #4]
 80162d0:	33cc      	adds	r3, #204	; 0xcc
 80162d2:	4a78      	ldr	r2, [pc, #480]	; (80164b4 <createProblem+0x1560c>)
 80162d4:	6810      	ldr	r0, [r2, #0]
 80162d6:	6018      	str	r0, [r3, #0]
			break;
 80162d8:	f004 bb2c 	b.w	801a934 <createProblem+0x19a8c>
		case 697 :
			strcpy(p->name,"COCA COLA");
 80162dc:	687b      	ldr	r3, [r7, #4]
 80162de:	337c      	adds	r3, #124	; 0x7c
 80162e0:	4979      	ldr	r1, [pc, #484]	; (80164c8 <createProblem+0x15620>)
 80162e2:	461a      	mov	r2, r3
 80162e4:	460b      	mov	r3, r1
 80162e6:	cb03      	ldmia	r3!, {r0, r1}
 80162e8:	6010      	str	r0, [r2, #0]
 80162ea:	6051      	str	r1, [r2, #4]
 80162ec:	881b      	ldrh	r3, [r3, #0]
 80162ee:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 80162f0:	687b      	ldr	r3, [r7, #4]
 80162f2:	2207      	movs	r2, #7
 80162f4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,F,E,G,D,C");
 80162f6:	687b      	ldr	r3, [r7, #4]
 80162f8:	3340      	adds	r3, #64	; 0x40
 80162fa:	4a74      	ldr	r2, [pc, #464]	; (80164cc <createProblem+0x15624>)
 80162fc:	461c      	mov	r4, r3
 80162fe:	4613      	mov	r3, r2
 8016300:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016302:	6020      	str	r0, [r4, #0]
 8016304:	6061      	str	r1, [r4, #4]
 8016306:	60a2      	str	r2, [r4, #8]
 8016308:	881b      	ldrh	r3, [r3, #0]
 801630a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,11,12,15,18,8");
 801630c:	687b      	ldr	r3, [r7, #4]
 801630e:	3304      	adds	r3, #4
 8016310:	4a6f      	ldr	r2, [pc, #444]	; (80164d0 <createProblem+0x15628>)
 8016312:	461d      	mov	r5, r3
 8016314:	4614      	mov	r4, r2
 8016316:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016318:	6028      	str	r0, [r5, #0]
 801631a:	6069      	str	r1, [r5, #4]
 801631c:	60aa      	str	r2, [r5, #8]
 801631e:	60eb      	str	r3, [r5, #12]
 8016320:	8823      	ldrh	r3, [r4, #0]
 8016322:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,e,d");
 8016324:	687b      	ldr	r3, [r7, #4]
 8016326:	33d8      	adds	r3, #216	; 0xd8
 8016328:	4a6a      	ldr	r2, [pc, #424]	; (80164d4 <createProblem+0x1562c>)
 801632a:	461c      	mov	r4, r3
 801632c:	4613      	mov	r3, r2
 801632e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016330:	6020      	str	r0, [r4, #0]
 8016332:	6061      	str	r1, [r4, #4]
 8016334:	60a2      	str	r2, [r4, #8]
 8016336:	881b      	ldrh	r3, [r3, #0]
 8016338:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 801633a:	687b      	ldr	r3, [r7, #4]
 801633c:	33cc      	adds	r3, #204	; 0xcc
 801633e:	4a66      	ldr	r2, [pc, #408]	; (80164d8 <createProblem+0x15630>)
 8016340:	8811      	ldrh	r1, [r2, #0]
 8016342:	7892      	ldrb	r2, [r2, #2]
 8016344:	8019      	strh	r1, [r3, #0]
 8016346:	709a      	strb	r2, [r3, #2]
			break;
 8016348:	f004 baf4 	b.w	801a934 <createProblem+0x19a8c>
		case 698 :
			strcpy(p->name,"ORANGE IS THE NEW BLACK");
 801634c:	687b      	ldr	r3, [r7, #4]
 801634e:	337c      	adds	r3, #124	; 0x7c
 8016350:	4a62      	ldr	r2, [pc, #392]	; (80164dc <createProblem+0x15634>)
 8016352:	461d      	mov	r5, r3
 8016354:	4614      	mov	r4, r2
 8016356:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016358:	6028      	str	r0, [r5, #0]
 801635a:	6069      	str	r1, [r5, #4]
 801635c:	60aa      	str	r2, [r5, #8]
 801635e:	60eb      	str	r3, [r5, #12]
 8016360:	cc03      	ldmia	r4!, {r0, r1}
 8016362:	6128      	str	r0, [r5, #16]
 8016364:	6169      	str	r1, [r5, #20]
			p->moveSize = 6;
 8016366:	687b      	ldr	r3, [r7, #4]
 8016368:	2206      	movs	r2, #6
 801636a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,F,G,C,D");
 801636c:	687b      	ldr	r3, [r7, #4]
 801636e:	3340      	adds	r3, #64	; 0x40
 8016370:	4a5b      	ldr	r2, [pc, #364]	; (80164e0 <createProblem+0x15638>)
 8016372:	461c      	mov	r4, r3
 8016374:	4613      	mov	r3, r2
 8016376:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016378:	6020      	str	r0, [r4, #0]
 801637a:	6061      	str	r1, [r4, #4]
 801637c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,11,14,8,18");
 801637e:	687b      	ldr	r3, [r7, #4]
 8016380:	3304      	adds	r3, #4
 8016382:	4a58      	ldr	r2, [pc, #352]	; (80164e4 <createProblem+0x1563c>)
 8016384:	461c      	mov	r4, r3
 8016386:	4613      	mov	r3, r2
 8016388:	cb07      	ldmia	r3!, {r0, r1, r2}
 801638a:	6020      	str	r0, [r4, #0]
 801638c:	6061      	str	r1, [r4, #4]
 801638e:	60a2      	str	r2, [r4, #8]
 8016390:	881a      	ldrh	r2, [r3, #0]
 8016392:	789b      	ldrb	r3, [r3, #2]
 8016394:	81a2      	strh	r2, [r4, #12]
 8016396:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8016398:	687b      	ldr	r3, [r7, #4]
 801639a:	33d8      	adds	r3, #216	; 0xd8
 801639c:	4a52      	ldr	r2, [pc, #328]	; (80164e8 <createProblem+0x15640>)
 801639e:	461c      	mov	r4, r3
 80163a0:	4613      	mov	r3, r2
 80163a2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80163a4:	6020      	str	r0, [r4, #0]
 80163a6:	6061      	str	r1, [r4, #4]
 80163a8:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B");
 80163aa:	687b      	ldr	r3, [r7, #4]
 80163ac:	33cc      	adds	r3, #204	; 0xcc
 80163ae:	4a4f      	ldr	r2, [pc, #316]	; (80164ec <createProblem+0x15644>)
 80163b0:	8811      	ldrh	r1, [r2, #0]
 80163b2:	7892      	ldrb	r2, [r2, #2]
 80163b4:	8019      	strh	r1, [r3, #0]
 80163b6:	709a      	strb	r2, [r3, #2]
			break;
 80163b8:	f004 babc 	b.w	801a934 <createProblem+0x19a8c>
		case 699 :
			strcpy(p->name,"ZONING IN");
 80163bc:	687b      	ldr	r3, [r7, #4]
 80163be:	337c      	adds	r3, #124	; 0x7c
 80163c0:	494b      	ldr	r1, [pc, #300]	; (80164f0 <createProblem+0x15648>)
 80163c2:	461a      	mov	r2, r3
 80163c4:	460b      	mov	r3, r1
 80163c6:	cb03      	ldmia	r3!, {r0, r1}
 80163c8:	6010      	str	r0, [r2, #0]
 80163ca:	6051      	str	r1, [r2, #4]
 80163cc:	881b      	ldrh	r3, [r3, #0]
 80163ce:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 80163d0:	687b      	ldr	r3, [r7, #4]
 80163d2:	2207      	movs	r2, #7
 80163d4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,E,H,C,E,D");
 80163d6:	687b      	ldr	r3, [r7, #4]
 80163d8:	3340      	adds	r3, #64	; 0x40
 80163da:	4a46      	ldr	r2, [pc, #280]	; (80164f4 <createProblem+0x1564c>)
 80163dc:	461c      	mov	r4, r3
 80163de:	4613      	mov	r3, r2
 80163e0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80163e2:	6020      	str	r0, [r4, #0]
 80163e4:	6061      	str	r1, [r4, #4]
 80163e6:	60a2      	str	r2, [r4, #8]
 80163e8:	881b      	ldrh	r3, [r3, #0]
 80163ea:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,12,8,13,16,18");
 80163ec:	687b      	ldr	r3, [r7, #4]
 80163ee:	3304      	adds	r3, #4
 80163f0:	4a41      	ldr	r2, [pc, #260]	; (80164f8 <createProblem+0x15650>)
 80163f2:	461d      	mov	r5, r3
 80163f4:	4614      	mov	r4, r2
 80163f6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80163f8:	6028      	str	r0, [r5, #0]
 80163fa:	6069      	str	r1, [r5, #4]
 80163fc:	60aa      	str	r2, [r5, #8]
 80163fe:	60eb      	str	r3, [r5, #12]
 8016400:	8823      	ldrh	r3, [r4, #0]
 8016402:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8016404:	687b      	ldr	r3, [r7, #4]
 8016406:	33d8      	adds	r3, #216	; 0xd8
 8016408:	4a3c      	ldr	r2, [pc, #240]	; (80164fc <createProblem+0x15654>)
 801640a:	461c      	mov	r4, r3
 801640c:	4613      	mov	r3, r2
 801640e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016410:	6020      	str	r0, [r4, #0]
 8016412:	6061      	str	r1, [r4, #4]
 8016414:	60a2      	str	r2, [r4, #8]
 8016416:	881b      	ldrh	r3, [r3, #0]
 8016418:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 801641a:	687b      	ldr	r3, [r7, #4]
 801641c:	33cc      	adds	r3, #204	; 0xcc
 801641e:	4a25      	ldr	r2, [pc, #148]	; (80164b4 <createProblem+0x1560c>)
 8016420:	6810      	ldr	r0, [r2, #0]
 8016422:	6018      	str	r0, [r3, #0]
			break;
 8016424:	f004 ba86 	b.w	801a934 <createProblem+0x19a8c>
		case 7 :
			strcpy(p->name,"CHAD");
 8016428:	687b      	ldr	r3, [r7, #4]
 801642a:	337c      	adds	r3, #124	; 0x7c
 801642c:	4a34      	ldr	r2, [pc, #208]	; (8016500 <createProblem+0x15658>)
 801642e:	6810      	ldr	r0, [r2, #0]
 8016430:	6018      	str	r0, [r3, #0]
 8016432:	7912      	ldrb	r2, [r2, #4]
 8016434:	711a      	strb	r2, [r3, #4]
			p->moveSize = 7;
 8016436:	687b      	ldr	r3, [r7, #4]
 8016438:	2207      	movs	r2, #7
 801643a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,D,A,F,F,E,D");
 801643c:	687b      	ldr	r3, [r7, #4]
 801643e:	3340      	adds	r3, #64	; 0x40
 8016440:	4a30      	ldr	r2, [pc, #192]	; (8016504 <createProblem+0x1565c>)
 8016442:	461c      	mov	r4, r3
 8016444:	4613      	mov	r3, r2
 8016446:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016448:	6020      	str	r0, [r4, #0]
 801644a:	6061      	str	r1, [r4, #4]
 801644c:	60a2      	str	r2, [r4, #8]
 801644e:	881b      	ldrh	r3, [r3, #0]
 8016450:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,7,9,11,13,16,18");
 8016452:	687b      	ldr	r3, [r7, #4]
 8016454:	3304      	adds	r3, #4
 8016456:	4a2c      	ldr	r2, [pc, #176]	; (8016508 <createProblem+0x15660>)
 8016458:	461d      	mov	r5, r3
 801645a:	4614      	mov	r4, r2
 801645c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801645e:	6028      	str	r0, [r5, #0]
 8016460:	6069      	str	r1, [r5, #4]
 8016462:	60aa      	str	r2, [r5, #8]
 8016464:	60eb      	str	r3, [r5, #12]
 8016466:	8823      	ldrh	r3, [r4, #0]
 8016468:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 801646a:	687b      	ldr	r3, [r7, #4]
 801646c:	33d8      	adds	r3, #216	; 0xd8
 801646e:	4a23      	ldr	r2, [pc, #140]	; (80164fc <createProblem+0x15654>)
 8016470:	461c      	mov	r4, r3
 8016472:	4613      	mov	r3, r2
 8016474:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016476:	6020      	str	r0, [r4, #0]
 8016478:	6061      	str	r1, [r4, #4]
 801647a:	60a2      	str	r2, [r4, #8]
 801647c:	881b      	ldrh	r3, [r3, #0]
 801647e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B+");
 8016480:	687b      	ldr	r3, [r7, #4]
 8016482:	33cc      	adds	r3, #204	; 0xcc
 8016484:	4a06      	ldr	r2, [pc, #24]	; (80164a0 <createProblem+0x155f8>)
 8016486:	6810      	ldr	r0, [r2, #0]
 8016488:	6018      	str	r0, [r3, #0]
			break;
 801648a:	f004 ba53 	b.w	801a934 <createProblem+0x19a8c>
 801648e:	bf00      	nop
 8016490:	080283a4 	.word	0x080283a4
 8016494:	080283b0 	.word	0x080283b0
 8016498:	080283bc 	.word	0x080283bc
 801649c:	0802285c 	.word	0x0802285c
 80164a0:	08020dc8 	.word	0x08020dc8
 80164a4:	080283cc 	.word	0x080283cc
 80164a8:	080283dc 	.word	0x080283dc
 80164ac:	080283ec 	.word	0x080283ec
 80164b0:	08020820 	.word	0x08020820
 80164b4:	08020830 	.word	0x08020830
 80164b8:	08028400 	.word	0x08028400
 80164bc:	08028410 	.word	0x08028410
 80164c0:	08028424 	.word	0x08028424
 80164c4:	08020dfc 	.word	0x08020dfc
 80164c8:	0802843c 	.word	0x0802843c
 80164cc:	08028448 	.word	0x08028448
 80164d0:	08028458 	.word	0x08028458
 80164d4:	08027a90 	.word	0x08027a90
 80164d8:	08020874 	.word	0x08020874
 80164dc:	0802846c 	.word	0x0802846c
 80164e0:	08028484 	.word	0x08028484
 80164e4:	08028490 	.word	0x08028490
 80164e8:	0802091c 	.word	0x0802091c
 80164ec:	080208ac 	.word	0x080208ac
 80164f0:	080284a0 	.word	0x080284a0
 80164f4:	080284ac 	.word	0x080284ac
 80164f8:	080284bc 	.word	0x080284bc
 80164fc:	08020a14 	.word	0x08020a14
 8016500:	080284d0 	.word	0x080284d0
 8016504:	080284d8 	.word	0x080284d8
 8016508:	080284e8 	.word	0x080284e8
		case 70 :
			strcpy(p->name,"A'TRAZIONE");
 801650c:	687b      	ldr	r3, [r7, #4]
 801650e:	337c      	adds	r3, #124	; 0x7c
 8016510:	49b4      	ldr	r1, [pc, #720]	; (80167e4 <createProblem+0x1593c>)
 8016512:	461a      	mov	r2, r3
 8016514:	460b      	mov	r3, r1
 8016516:	cb03      	ldmia	r3!, {r0, r1}
 8016518:	6010      	str	r0, [r2, #0]
 801651a:	6051      	str	r1, [r2, #4]
 801651c:	8819      	ldrh	r1, [r3, #0]
 801651e:	789b      	ldrb	r3, [r3, #2]
 8016520:	8111      	strh	r1, [r2, #8]
 8016522:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 8016524:	687b      	ldr	r3, [r7, #4]
 8016526:	2206      	movs	r2, #6
 8016528:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,I,J,K,G,D");
 801652a:	687b      	ldr	r3, [r7, #4]
 801652c:	3340      	adds	r3, #64	; 0x40
 801652e:	4aae      	ldr	r2, [pc, #696]	; (80167e8 <createProblem+0x15940>)
 8016530:	461c      	mov	r4, r3
 8016532:	4613      	mov	r3, r2
 8016534:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016536:	6020      	str	r0, [r4, #0]
 8016538:	6061      	str	r1, [r4, #4]
 801653a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,10,13,14,17,18");
 801653c:	687b      	ldr	r3, [r7, #4]
 801653e:	3304      	adds	r3, #4
 8016540:	4aaa      	ldr	r2, [pc, #680]	; (80167ec <createProblem+0x15944>)
 8016542:	461d      	mov	r5, r3
 8016544:	4614      	mov	r4, r2
 8016546:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016548:	6028      	str	r0, [r5, #0]
 801654a:	6069      	str	r1, [r5, #4]
 801654c:	60aa      	str	r2, [r5, #8]
 801654e:	60eb      	str	r3, [r5, #12]
 8016550:	7823      	ldrb	r3, [r4, #0]
 8016552:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8016554:	687b      	ldr	r3, [r7, #4]
 8016556:	33d8      	adds	r3, #216	; 0xd8
 8016558:	4aa5      	ldr	r2, [pc, #660]	; (80167f0 <createProblem+0x15948>)
 801655a:	461c      	mov	r4, r3
 801655c:	4613      	mov	r3, r2
 801655e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016560:	6020      	str	r0, [r4, #0]
 8016562:	6061      	str	r1, [r4, #4]
 8016564:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 8016566:	687b      	ldr	r3, [r7, #4]
 8016568:	33cc      	adds	r3, #204	; 0xcc
 801656a:	4aa2      	ldr	r2, [pc, #648]	; (80167f4 <createProblem+0x1594c>)
 801656c:	6810      	ldr	r0, [r2, #0]
 801656e:	6018      	str	r0, [r3, #0]
			break;
 8016570:	f004 b9e0 	b.w	801a934 <createProblem+0x19a8c>
		case 700 :
			strcpy(p->name,"ZONING IN (ALT. START)");
 8016574:	687b      	ldr	r3, [r7, #4]
 8016576:	337c      	adds	r3, #124	; 0x7c
 8016578:	4a9f      	ldr	r2, [pc, #636]	; (80167f8 <createProblem+0x15950>)
 801657a:	461c      	mov	r4, r3
 801657c:	4615      	mov	r5, r2
 801657e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8016580:	6020      	str	r0, [r4, #0]
 8016582:	6061      	str	r1, [r4, #4]
 8016584:	60a2      	str	r2, [r4, #8]
 8016586:	60e3      	str	r3, [r4, #12]
 8016588:	6828      	ldr	r0, [r5, #0]
 801658a:	6120      	str	r0, [r4, #16]
 801658c:	88ab      	ldrh	r3, [r5, #4]
 801658e:	79aa      	ldrb	r2, [r5, #6]
 8016590:	82a3      	strh	r3, [r4, #20]
 8016592:	4613      	mov	r3, r2
 8016594:	75a3      	strb	r3, [r4, #22]
			p->moveSize = 8;
 8016596:	687b      	ldr	r3, [r7, #4]
 8016598:	2208      	movs	r2, #8
 801659a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,H,C,E,C,E,D");
 801659c:	687b      	ldr	r3, [r7, #4]
 801659e:	3340      	adds	r3, #64	; 0x40
 80165a0:	4a96      	ldr	r2, [pc, #600]	; (80167fc <createProblem+0x15954>)
 80165a2:	461c      	mov	r4, r3
 80165a4:	4615      	mov	r5, r2
 80165a6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80165a8:	6020      	str	r0, [r4, #0]
 80165aa:	6061      	str	r1, [r4, #4]
 80165ac:	60a2      	str	r2, [r4, #8]
 80165ae:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,4,8,8,12,13,16,18");
 80165b0:	687b      	ldr	r3, [r7, #4]
 80165b2:	3304      	adds	r3, #4
 80165b4:	4a92      	ldr	r2, [pc, #584]	; (8016800 <createProblem+0x15958>)
 80165b6:	461d      	mov	r5, r3
 80165b8:	4614      	mov	r4, r2
 80165ba:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80165bc:	6028      	str	r0, [r5, #0]
 80165be:	6069      	str	r1, [r5, #4]
 80165c0:	60aa      	str	r2, [r5, #8]
 80165c2:	60eb      	str	r3, [r5, #12]
 80165c4:	6820      	ldr	r0, [r4, #0]
 80165c6:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 80165c8:	687b      	ldr	r3, [r7, #4]
 80165ca:	33d8      	adds	r3, #216	; 0xd8
 80165cc:	4a8d      	ldr	r2, [pc, #564]	; (8016804 <createProblem+0x1595c>)
 80165ce:	461c      	mov	r4, r3
 80165d0:	4615      	mov	r5, r2
 80165d2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80165d4:	6020      	str	r0, [r4, #0]
 80165d6:	6061      	str	r1, [r4, #4]
 80165d8:	60a2      	str	r2, [r4, #8]
 80165da:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80165dc:	687b      	ldr	r3, [r7, #4]
 80165de:	33cc      	adds	r3, #204	; 0xcc
 80165e0:	4a89      	ldr	r2, [pc, #548]	; (8016808 <createProblem+0x15960>)
 80165e2:	6810      	ldr	r0, [r2, #0]
 80165e4:	6018      	str	r0, [r3, #0]
			break;
 80165e6:	f004 b9a5 	b.w	801a934 <createProblem+0x19a8c>
		case 701 :
			strcpy(p->name,"MONOLITH");
 80165ea:	687b      	ldr	r3, [r7, #4]
 80165ec:	337c      	adds	r3, #124	; 0x7c
 80165ee:	4987      	ldr	r1, [pc, #540]	; (801680c <createProblem+0x15964>)
 80165f0:	461a      	mov	r2, r3
 80165f2:	460b      	mov	r3, r1
 80165f4:	cb03      	ldmia	r3!, {r0, r1}
 80165f6:	6010      	str	r0, [r2, #0]
 80165f8:	6051      	str	r1, [r2, #4]
 80165fa:	781b      	ldrb	r3, [r3, #0]
 80165fc:	7213      	strb	r3, [r2, #8]
			p->moveSize = 7;
 80165fe:	687b      	ldr	r3, [r7, #4]
 8016600:	2207      	movs	r2, #7
 8016602:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,F,C,E,D");
 8016604:	687b      	ldr	r3, [r7, #4]
 8016606:	3340      	adds	r3, #64	; 0x40
 8016608:	4a81      	ldr	r2, [pc, #516]	; (8016810 <createProblem+0x15968>)
 801660a:	461c      	mov	r4, r3
 801660c:	4613      	mov	r3, r2
 801660e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016610:	6020      	str	r0, [r4, #0]
 8016612:	6061      	str	r1, [r4, #4]
 8016614:	60a2      	str	r2, [r4, #8]
 8016616:	881b      	ldrh	r3, [r3, #0]
 8016618:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,8,11,13,16,18");
 801661a:	687b      	ldr	r3, [r7, #4]
 801661c:	3304      	adds	r3, #4
 801661e:	4a7d      	ldr	r2, [pc, #500]	; (8016814 <createProblem+0x1596c>)
 8016620:	461d      	mov	r5, r3
 8016622:	4614      	mov	r4, r2
 8016624:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016626:	6028      	str	r0, [r5, #0]
 8016628:	6069      	str	r1, [r5, #4]
 801662a:	60aa      	str	r2, [r5, #8]
 801662c:	60eb      	str	r3, [r5, #12]
 801662e:	8823      	ldrh	r3, [r4, #0]
 8016630:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8016632:	687b      	ldr	r3, [r7, #4]
 8016634:	33d8      	adds	r3, #216	; 0xd8
 8016636:	4a78      	ldr	r2, [pc, #480]	; (8016818 <createProblem+0x15970>)
 8016638:	461c      	mov	r4, r3
 801663a:	4613      	mov	r3, r2
 801663c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801663e:	6020      	str	r0, [r4, #0]
 8016640:	6061      	str	r1, [r4, #4]
 8016642:	60a2      	str	r2, [r4, #8]
 8016644:	881b      	ldrh	r3, [r3, #0]
 8016646:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8016648:	687b      	ldr	r3, [r7, #4]
 801664a:	33cc      	adds	r3, #204	; 0xcc
 801664c:	4a6e      	ldr	r2, [pc, #440]	; (8016808 <createProblem+0x15960>)
 801664e:	6810      	ldr	r0, [r2, #0]
 8016650:	6018      	str	r0, [r3, #0]
			break;
 8016652:	f004 b96f 	b.w	801a934 <createProblem+0x19a8c>
		case 702 :
			strcpy(p->name,"BLACKNANA OLDNANA");
 8016656:	687b      	ldr	r3, [r7, #4]
 8016658:	337c      	adds	r3, #124	; 0x7c
 801665a:	4a70      	ldr	r2, [pc, #448]	; (801681c <createProblem+0x15974>)
 801665c:	461d      	mov	r5, r3
 801665e:	4614      	mov	r4, r2
 8016660:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016662:	6028      	str	r0, [r5, #0]
 8016664:	6069      	str	r1, [r5, #4]
 8016666:	60aa      	str	r2, [r5, #8]
 8016668:	60eb      	str	r3, [r5, #12]
 801666a:	8823      	ldrh	r3, [r4, #0]
 801666c:	822b      	strh	r3, [r5, #16]
			p->moveSize = 6;
 801666e:	687b      	ldr	r3, [r7, #4]
 8016670:	2206      	movs	r2, #6
 8016672:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,I,H,D,D");
 8016674:	687b      	ldr	r3, [r7, #4]
 8016676:	3340      	adds	r3, #64	; 0x40
 8016678:	4a69      	ldr	r2, [pc, #420]	; (8016820 <createProblem+0x15978>)
 801667a:	461c      	mov	r4, r3
 801667c:	4613      	mov	r3, r2
 801667e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016680:	6020      	str	r0, [r4, #0]
 8016682:	6061      	str	r1, [r4, #4]
 8016684:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,10,9,13,15,18");
 8016686:	687b      	ldr	r3, [r7, #4]
 8016688:	3304      	adds	r3, #4
 801668a:	4a66      	ldr	r2, [pc, #408]	; (8016824 <createProblem+0x1597c>)
 801668c:	461c      	mov	r4, r3
 801668e:	4615      	mov	r5, r2
 8016690:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8016692:	6020      	str	r0, [r4, #0]
 8016694:	6061      	str	r1, [r4, #4]
 8016696:	60a2      	str	r2, [r4, #8]
 8016698:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 801669a:	687b      	ldr	r3, [r7, #4]
 801669c:	33d8      	adds	r3, #216	; 0xd8
 801669e:	4a54      	ldr	r2, [pc, #336]	; (80167f0 <createProblem+0x15948>)
 80166a0:	461c      	mov	r4, r3
 80166a2:	4613      	mov	r3, r2
 80166a4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80166a6:	6020      	str	r0, [r4, #0]
 80166a8:	6061      	str	r1, [r4, #4]
 80166aa:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 80166ac:	687b      	ldr	r3, [r7, #4]
 80166ae:	33cc      	adds	r3, #204	; 0xcc
 80166b0:	4a50      	ldr	r2, [pc, #320]	; (80167f4 <createProblem+0x1594c>)
 80166b2:	6810      	ldr	r0, [r2, #0]
 80166b4:	6018      	str	r0, [r3, #0]
			break;
 80166b6:	f004 b93d 	b.w	801a934 <createProblem+0x19a8c>
		case 703 :
			strcpy(p->name,"LA FRICHINA");
 80166ba:	687b      	ldr	r3, [r7, #4]
 80166bc:	337c      	adds	r3, #124	; 0x7c
 80166be:	4a5a      	ldr	r2, [pc, #360]	; (8016828 <createProblem+0x15980>)
 80166c0:	461c      	mov	r4, r3
 80166c2:	4613      	mov	r3, r2
 80166c4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80166c6:	6020      	str	r0, [r4, #0]
 80166c8:	6061      	str	r1, [r4, #4]
 80166ca:	60a2      	str	r2, [r4, #8]
			p->moveSize = 5;
 80166cc:	687b      	ldr	r3, [r7, #4]
 80166ce:	2205      	movs	r2, #5
 80166d0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,G,H,I");
 80166d2:	687b      	ldr	r3, [r7, #4]
 80166d4:	3340      	adds	r3, #64	; 0x40
 80166d6:	4955      	ldr	r1, [pc, #340]	; (801682c <createProblem+0x15984>)
 80166d8:	461a      	mov	r2, r3
 80166da:	460b      	mov	r3, r1
 80166dc:	cb03      	ldmia	r3!, {r0, r1}
 80166de:	6010      	str	r0, [r2, #0]
 80166e0:	6051      	str	r1, [r2, #4]
 80166e2:	881b      	ldrh	r3, [r3, #0]
 80166e4:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,10,14,13,18");
 80166e6:	687b      	ldr	r3, [r7, #4]
 80166e8:	3304      	adds	r3, #4
 80166ea:	4a51      	ldr	r2, [pc, #324]	; (8016830 <createProblem+0x15988>)
 80166ec:	461c      	mov	r4, r3
 80166ee:	4613      	mov	r3, r2
 80166f0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80166f2:	6020      	str	r0, [r4, #0]
 80166f4:	6061      	str	r1, [r4, #4]
 80166f6:	60a2      	str	r2, [r4, #8]
 80166f8:	881b      	ldrh	r3, [r3, #0]
 80166fa:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 80166fc:	687b      	ldr	r3, [r7, #4]
 80166fe:	33d8      	adds	r3, #216	; 0xd8
 8016700:	494c      	ldr	r1, [pc, #304]	; (8016834 <createProblem+0x1598c>)
 8016702:	461a      	mov	r2, r3
 8016704:	460b      	mov	r3, r1
 8016706:	cb03      	ldmia	r3!, {r0, r1}
 8016708:	6010      	str	r0, [r2, #0]
 801670a:	6051      	str	r1, [r2, #4]
 801670c:	881b      	ldrh	r3, [r3, #0]
 801670e:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 8016710:	687b      	ldr	r3, [r7, #4]
 8016712:	33cc      	adds	r3, #204	; 0xcc
 8016714:	4a48      	ldr	r2, [pc, #288]	; (8016838 <createProblem+0x15990>)
 8016716:	8811      	ldrh	r1, [r2, #0]
 8016718:	7892      	ldrb	r2, [r2, #2]
 801671a:	8019      	strh	r1, [r3, #0]
 801671c:	709a      	strb	r2, [r3, #2]
			break;
 801671e:	f004 b909 	b.w	801a934 <createProblem+0x19a8c>
		case 704 :
			strcpy(p->name,"LI VARDASCI");
 8016722:	687b      	ldr	r3, [r7, #4]
 8016724:	337c      	adds	r3, #124	; 0x7c
 8016726:	4a45      	ldr	r2, [pc, #276]	; (801683c <createProblem+0x15994>)
 8016728:	461c      	mov	r4, r3
 801672a:	4613      	mov	r3, r2
 801672c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801672e:	6020      	str	r0, [r4, #0]
 8016730:	6061      	str	r1, [r4, #4]
 8016732:	60a2      	str	r2, [r4, #8]
			p->moveSize = 4;
 8016734:	687b      	ldr	r3, [r7, #4]
 8016736:	2204      	movs	r2, #4
 8016738:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,G,D");
 801673a:	687b      	ldr	r3, [r7, #4]
 801673c:	3340      	adds	r3, #64	; 0x40
 801673e:	4940      	ldr	r1, [pc, #256]	; (8016840 <createProblem+0x15998>)
 8016740:	461a      	mov	r2, r3
 8016742:	460b      	mov	r3, r1
 8016744:	cb03      	ldmia	r3!, {r0, r1}
 8016746:	6010      	str	r0, [r2, #0]
 8016748:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"4,10,14,18");
 801674a:	687b      	ldr	r3, [r7, #4]
 801674c:	3304      	adds	r3, #4
 801674e:	493d      	ldr	r1, [pc, #244]	; (8016844 <createProblem+0x1599c>)
 8016750:	461a      	mov	r2, r3
 8016752:	460b      	mov	r3, r1
 8016754:	cb03      	ldmia	r3!, {r0, r1}
 8016756:	6010      	str	r0, [r2, #0]
 8016758:	6051      	str	r1, [r2, #4]
 801675a:	8819      	ldrh	r1, [r3, #0]
 801675c:	789b      	ldrb	r3, [r3, #2]
 801675e:	8111      	strh	r1, [r2, #8]
 8016760:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 8016762:	687b      	ldr	r3, [r7, #4]
 8016764:	33d8      	adds	r3, #216	; 0xd8
 8016766:	4938      	ldr	r1, [pc, #224]	; (8016848 <createProblem+0x159a0>)
 8016768:	461a      	mov	r2, r3
 801676a:	460b      	mov	r3, r1
 801676c:	cb03      	ldmia	r3!, {r0, r1}
 801676e:	6010      	str	r0, [r2, #0]
 8016770:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7B");
 8016772:	687b      	ldr	r3, [r7, #4]
 8016774:	33cc      	adds	r3, #204	; 0xcc
 8016776:	4a35      	ldr	r2, [pc, #212]	; (801684c <createProblem+0x159a4>)
 8016778:	8811      	ldrh	r1, [r2, #0]
 801677a:	7892      	ldrb	r2, [r2, #2]
 801677c:	8019      	strh	r1, [r3, #0]
 801677e:	709a      	strb	r2, [r3, #2]
			break;
 8016780:	f004 b8d8 	b.w	801a934 <createProblem+0x19a8c>
		case 705 :
			strcpy(p->name,"MOFOS");
 8016784:	687b      	ldr	r3, [r7, #4]
 8016786:	337c      	adds	r3, #124	; 0x7c
 8016788:	4a31      	ldr	r2, [pc, #196]	; (8016850 <createProblem+0x159a8>)
 801678a:	6810      	ldr	r0, [r2, #0]
 801678c:	6018      	str	r0, [r3, #0]
 801678e:	8892      	ldrh	r2, [r2, #4]
 8016790:	809a      	strh	r2, [r3, #4]
			p->moveSize = 6;
 8016792:	687b      	ldr	r3, [r7, #4]
 8016794:	2206      	movs	r2, #6
 8016796:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,J,H,C,D,D");
 8016798:	687b      	ldr	r3, [r7, #4]
 801679a:	3340      	adds	r3, #64	; 0x40
 801679c:	4a2d      	ldr	r2, [pc, #180]	; (8016854 <createProblem+0x159ac>)
 801679e:	461c      	mov	r4, r3
 80167a0:	4613      	mov	r3, r2
 80167a2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80167a4:	6020      	str	r0, [r4, #0]
 80167a6:	6061      	str	r1, [r4, #4]
 80167a8:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,5,10,13,15,18");
 80167aa:	687b      	ldr	r3, [r7, #4]
 80167ac:	3304      	adds	r3, #4
 80167ae:	4a2a      	ldr	r2, [pc, #168]	; (8016858 <createProblem+0x159b0>)
 80167b0:	461c      	mov	r4, r3
 80167b2:	4615      	mov	r5, r2
 80167b4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80167b6:	6020      	str	r0, [r4, #0]
 80167b8:	6061      	str	r1, [r4, #4]
 80167ba:	60a2      	str	r2, [r4, #8]
 80167bc:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 80167be:	687b      	ldr	r3, [r7, #4]
 80167c0:	33d8      	adds	r3, #216	; 0xd8
 80167c2:	4a26      	ldr	r2, [pc, #152]	; (801685c <createProblem+0x159b4>)
 80167c4:	461c      	mov	r4, r3
 80167c6:	4613      	mov	r3, r2
 80167c8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80167ca:	6020      	str	r0, [r4, #0]
 80167cc:	6061      	str	r1, [r4, #4]
 80167ce:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 80167d0:	687b      	ldr	r3, [r7, #4]
 80167d2:	33cc      	adds	r3, #204	; 0xcc
 80167d4:	4a22      	ldr	r2, [pc, #136]	; (8016860 <createProblem+0x159b8>)
 80167d6:	8811      	ldrh	r1, [r2, #0]
 80167d8:	7892      	ldrb	r2, [r2, #2]
 80167da:	8019      	strh	r1, [r3, #0]
 80167dc:	709a      	strb	r2, [r3, #2]
			break;
 80167de:	f004 b8a9 	b.w	801a934 <createProblem+0x19a8c>
 80167e2:	bf00      	nop
 80167e4:	080284fc 	.word	0x080284fc
 80167e8:	08028508 	.word	0x08028508
 80167ec:	08028514 	.word	0x08028514
 80167f0:	0802091c 	.word	0x0802091c
 80167f4:	08020dc8 	.word	0x08020dc8
 80167f8:	08028528 	.word	0x08028528
 80167fc:	08028540 	.word	0x08028540
 8016800:	08028550 	.word	0x08028550
 8016804:	08020a4c 	.word	0x08020a4c
 8016808:	08020830 	.word	0x08020830
 801680c:	08028564 	.word	0x08028564
 8016810:	08028570 	.word	0x08028570
 8016814:	0802395c 	.word	0x0802395c
 8016818:	08020a14 	.word	0x08020a14
 801681c:	08028580 	.word	0x08028580
 8016820:	08028594 	.word	0x08028594
 8016824:	080285a0 	.word	0x080285a0
 8016828:	080285b0 	.word	0x080285b0
 801682c:	080285bc 	.word	0x080285bc
 8016830:	080285c8 	.word	0x080285c8
 8016834:	080208a0 	.word	0x080208a0
 8016838:	08020874 	.word	0x08020874
 801683c:	080285d8 	.word	0x080285d8
 8016840:	080285e4 	.word	0x080285e4
 8016844:	0802159c 	.word	0x0802159c
 8016848:	080215a8 	.word	0x080215a8
 801684c:	080208ac 	.word	0x080208ac
 8016850:	080285ec 	.word	0x080285ec
 8016854:	080285f4 	.word	0x080285f4
 8016858:	08028600 	.word	0x08028600
 801685c:	08020e90 	.word	0x08020e90
 8016860:	080208f0 	.word	0x080208f0
		case 706 :
			strcpy(p->name,"MISSILE");
 8016864:	687b      	ldr	r3, [r7, #4]
 8016866:	337c      	adds	r3, #124	; 0x7c
 8016868:	49bd      	ldr	r1, [pc, #756]	; (8016b60 <createProblem+0x15cb8>)
 801686a:	461a      	mov	r2, r3
 801686c:	460b      	mov	r3, r1
 801686e:	cb03      	ldmia	r3!, {r0, r1}
 8016870:	6010      	str	r0, [r2, #0]
 8016872:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 8016874:	687b      	ldr	r3, [r7, #4]
 8016876:	2207      	movs	r2, #7
 8016878:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,G,B,E,C,D");
 801687a:	687b      	ldr	r3, [r7, #4]
 801687c:	3340      	adds	r3, #64	; 0x40
 801687e:	4ab9      	ldr	r2, [pc, #740]	; (8016b64 <createProblem+0x15cbc>)
 8016880:	461c      	mov	r4, r3
 8016882:	4613      	mov	r3, r2
 8016884:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016886:	6020      	str	r0, [r4, #0]
 8016888:	6061      	str	r1, [r4, #4]
 801688a:	60a2      	str	r2, [r4, #8]
 801688c:	881b      	ldrh	r3, [r3, #0]
 801688e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,10,12,13,18");
 8016890:	687b      	ldr	r3, [r7, #4]
 8016892:	3304      	adds	r3, #4
 8016894:	4ab4      	ldr	r2, [pc, #720]	; (8016b68 <createProblem+0x15cc0>)
 8016896:	461d      	mov	r5, r3
 8016898:	4614      	mov	r4, r2
 801689a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801689c:	6028      	str	r0, [r5, #0]
 801689e:	6069      	str	r1, [r5, #4]
 80168a0:	60aa      	str	r2, [r5, #8]
 80168a2:	60eb      	str	r3, [r5, #12]
 80168a4:	8823      	ldrh	r3, [r4, #0]
 80168a6:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80168a8:	687b      	ldr	r3, [r7, #4]
 80168aa:	33d8      	adds	r3, #216	; 0xd8
 80168ac:	4aaf      	ldr	r2, [pc, #700]	; (8016b6c <createProblem+0x15cc4>)
 80168ae:	461c      	mov	r4, r3
 80168b0:	4613      	mov	r3, r2
 80168b2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80168b4:	6020      	str	r0, [r4, #0]
 80168b6:	6061      	str	r1, [r4, #4]
 80168b8:	60a2      	str	r2, [r4, #8]
 80168ba:	881b      	ldrh	r3, [r3, #0]
 80168bc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 80168be:	687b      	ldr	r3, [r7, #4]
 80168c0:	33cc      	adds	r3, #204	; 0xcc
 80168c2:	4aab      	ldr	r2, [pc, #684]	; (8016b70 <createProblem+0x15cc8>)
 80168c4:	8811      	ldrh	r1, [r2, #0]
 80168c6:	7892      	ldrb	r2, [r2, #2]
 80168c8:	8019      	strh	r1, [r3, #0]
 80168ca:	709a      	strb	r2, [r3, #2]
			break;
 80168cc:	f004 b832 	b.w	801a934 <createProblem+0x19a8c>
		case 707 :
			strcpy(p->name,"TESTJ");
 80168d0:	687b      	ldr	r3, [r7, #4]
 80168d2:	337c      	adds	r3, #124	; 0x7c
 80168d4:	4aa7      	ldr	r2, [pc, #668]	; (8016b74 <createProblem+0x15ccc>)
 80168d6:	6810      	ldr	r0, [r2, #0]
 80168d8:	6018      	str	r0, [r3, #0]
 80168da:	8892      	ldrh	r2, [r2, #4]
 80168dc:	809a      	strh	r2, [r3, #4]
			p->moveSize = 9;
 80168de:	687b      	ldr	r3, [r7, #4]
 80168e0:	2209      	movs	r2, #9
 80168e2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,F,H,E,G,D,A");
 80168e4:	687b      	ldr	r3, [r7, #4]
 80168e6:	3340      	adds	r3, #64	; 0x40
 80168e8:	4aa3      	ldr	r2, [pc, #652]	; (8016b78 <createProblem+0x15cd0>)
 80168ea:	461d      	mov	r5, r3
 80168ec:	4614      	mov	r4, r2
 80168ee:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80168f0:	6028      	str	r0, [r5, #0]
 80168f2:	6069      	str	r1, [r5, #4]
 80168f4:	60aa      	str	r2, [r5, #8]
 80168f6:	60eb      	str	r3, [r5, #12]
 80168f8:	8823      	ldrh	r3, [r4, #0]
 80168fa:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,5,8,11,13,14,17,18,14");
 80168fc:	687b      	ldr	r3, [r7, #4]
 80168fe:	3304      	adds	r3, #4
 8016900:	4a9e      	ldr	r2, [pc, #632]	; (8016b7c <createProblem+0x15cd4>)
 8016902:	461d      	mov	r5, r3
 8016904:	4614      	mov	r4, r2
 8016906:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016908:	6028      	str	r0, [r5, #0]
 801690a:	6069      	str	r1, [r5, #4]
 801690c:	60aa      	str	r2, [r5, #8]
 801690e:	60eb      	str	r3, [r5, #12]
 8016910:	cc03      	ldmia	r4!, {r0, r1}
 8016912:	6128      	str	r0, [r5, #16]
 8016914:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e,d");
 8016916:	687b      	ldr	r3, [r7, #4]
 8016918:	33d8      	adds	r3, #216	; 0xd8
 801691a:	4a99      	ldr	r2, [pc, #612]	; (8016b80 <createProblem+0x15cd8>)
 801691c:	461d      	mov	r5, r3
 801691e:	4614      	mov	r4, r2
 8016920:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016922:	6028      	str	r0, [r5, #0]
 8016924:	6069      	str	r1, [r5, #4]
 8016926:	60aa      	str	r2, [r5, #8]
 8016928:	60eb      	str	r3, [r5, #12]
 801692a:	8823      	ldrh	r3, [r4, #0]
 801692c:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 801692e:	687b      	ldr	r3, [r7, #4]
 8016930:	33cc      	adds	r3, #204	; 0xcc
 8016932:	4a94      	ldr	r2, [pc, #592]	; (8016b84 <createProblem+0x15cdc>)
 8016934:	6810      	ldr	r0, [r2, #0]
 8016936:	6018      	str	r0, [r3, #0]
			break;
 8016938:	f003 bffc 	b.w	801a934 <createProblem+0x19a8c>
		case 708 :
			strcpy(p->name,"FLAPJACKS");
 801693c:	687b      	ldr	r3, [r7, #4]
 801693e:	337c      	adds	r3, #124	; 0x7c
 8016940:	4991      	ldr	r1, [pc, #580]	; (8016b88 <createProblem+0x15ce0>)
 8016942:	461a      	mov	r2, r3
 8016944:	460b      	mov	r3, r1
 8016946:	cb03      	ldmia	r3!, {r0, r1}
 8016948:	6010      	str	r0, [r2, #0]
 801694a:	6051      	str	r1, [r2, #4]
 801694c:	881b      	ldrh	r3, [r3, #0]
 801694e:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 8016950:	687b      	ldr	r3, [r7, #4]
 8016952:	2206      	movs	r2, #6
 8016954:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,D,E,A");
 8016956:	687b      	ldr	r3, [r7, #4]
 8016958:	3340      	adds	r3, #64	; 0x40
 801695a:	4a8c      	ldr	r2, [pc, #560]	; (8016b8c <createProblem+0x15ce4>)
 801695c:	461c      	mov	r4, r3
 801695e:	4613      	mov	r3, r2
 8016960:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016962:	6020      	str	r0, [r4, #0]
 8016964:	6061      	str	r1, [r4, #4]
 8016966:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,8,11,14,18");
 8016968:	687b      	ldr	r3, [r7, #4]
 801696a:	3304      	adds	r3, #4
 801696c:	4a88      	ldr	r2, [pc, #544]	; (8016b90 <createProblem+0x15ce8>)
 801696e:	461c      	mov	r4, r3
 8016970:	4613      	mov	r3, r2
 8016972:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016974:	6020      	str	r0, [r4, #0]
 8016976:	6061      	str	r1, [r4, #4]
 8016978:	60a2      	str	r2, [r4, #8]
 801697a:	881a      	ldrh	r2, [r3, #0]
 801697c:	789b      	ldrb	r3, [r3, #2]
 801697e:	81a2      	strh	r2, [r4, #12]
 8016980:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8016982:	687b      	ldr	r3, [r7, #4]
 8016984:	33d8      	adds	r3, #216	; 0xd8
 8016986:	4a83      	ldr	r2, [pc, #524]	; (8016b94 <createProblem+0x15cec>)
 8016988:	461c      	mov	r4, r3
 801698a:	4613      	mov	r3, r2
 801698c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801698e:	6020      	str	r0, [r4, #0]
 8016990:	6061      	str	r1, [r4, #4]
 8016992:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 8016994:	687b      	ldr	r3, [r7, #4]
 8016996:	33cc      	adds	r3, #204	; 0xcc
 8016998:	4a7a      	ldr	r2, [pc, #488]	; (8016b84 <createProblem+0x15cdc>)
 801699a:	6810      	ldr	r0, [r2, #0]
 801699c:	6018      	str	r0, [r3, #0]
			break;
 801699e:	f003 bfc9 	b.w	801a934 <createProblem+0x19a8c>
		case 709 :
			strcpy(p->name,"ZONED IN (H10 FOOT ONLY)");
 80169a2:	687b      	ldr	r3, [r7, #4]
 80169a4:	337c      	adds	r3, #124	; 0x7c
 80169a6:	4a7c      	ldr	r2, [pc, #496]	; (8016b98 <createProblem+0x15cf0>)
 80169a8:	461d      	mov	r5, r3
 80169aa:	4614      	mov	r4, r2
 80169ac:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80169ae:	6028      	str	r0, [r5, #0]
 80169b0:	6069      	str	r1, [r5, #4]
 80169b2:	60aa      	str	r2, [r5, #8]
 80169b4:	60eb      	str	r3, [r5, #12]
 80169b6:	cc03      	ldmia	r4!, {r0, r1}
 80169b8:	6128      	str	r0, [r5, #16]
 80169ba:	6169      	str	r1, [r5, #20]
 80169bc:	7823      	ldrb	r3, [r4, #0]
 80169be:	762b      	strb	r3, [r5, #24]
			p->moveSize = 9;
 80169c0:	687b      	ldr	r3, [r7, #4]
 80169c2:	2209      	movs	r2, #9
 80169c4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,H,C,F,C,E,D");
 80169c6:	687b      	ldr	r3, [r7, #4]
 80169c8:	3340      	adds	r3, #64	; 0x40
 80169ca:	4a74      	ldr	r2, [pc, #464]	; (8016b9c <createProblem+0x15cf4>)
 80169cc:	461d      	mov	r5, r3
 80169ce:	4614      	mov	r4, r2
 80169d0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80169d2:	6028      	str	r0, [r5, #0]
 80169d4:	6069      	str	r1, [r5, #4]
 80169d6:	60aa      	str	r2, [r5, #8]
 80169d8:	60eb      	str	r3, [r5, #12]
 80169da:	8823      	ldrh	r3, [r4, #0]
 80169dc:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,6,8,10,8,11,13,16,18");
 80169de:	687b      	ldr	r3, [r7, #4]
 80169e0:	3304      	adds	r3, #4
 80169e2:	4a6f      	ldr	r2, [pc, #444]	; (8016ba0 <createProblem+0x15cf8>)
 80169e4:	461c      	mov	r4, r3
 80169e6:	4615      	mov	r5, r2
 80169e8:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80169ea:	6020      	str	r0, [r4, #0]
 80169ec:	6061      	str	r1, [r4, #4]
 80169ee:	60a2      	str	r2, [r4, #8]
 80169f0:	60e3      	str	r3, [r4, #12]
 80169f2:	6828      	ldr	r0, [r5, #0]
 80169f4:	6120      	str	r0, [r4, #16]
 80169f6:	88ab      	ldrh	r3, [r5, #4]
 80169f8:	79aa      	ldrb	r2, [r5, #6]
 80169fa:	82a3      	strh	r3, [r4, #20]
 80169fc:	4613      	mov	r3, r2
 80169fe:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8016a00:	687b      	ldr	r3, [r7, #4]
 8016a02:	33d8      	adds	r3, #216	; 0xd8
 8016a04:	4a67      	ldr	r2, [pc, #412]	; (8016ba4 <createProblem+0x15cfc>)
 8016a06:	461d      	mov	r5, r3
 8016a08:	4614      	mov	r4, r2
 8016a0a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016a0c:	6028      	str	r0, [r5, #0]
 8016a0e:	6069      	str	r1, [r5, #4]
 8016a10:	60aa      	str	r2, [r5, #8]
 8016a12:	60eb      	str	r3, [r5, #12]
 8016a14:	8823      	ldrh	r3, [r4, #0]
 8016a16:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8016a18:	687b      	ldr	r3, [r7, #4]
 8016a1a:	33cc      	adds	r3, #204	; 0xcc
 8016a1c:	4a59      	ldr	r2, [pc, #356]	; (8016b84 <createProblem+0x15cdc>)
 8016a1e:	6810      	ldr	r0, [r2, #0]
 8016a20:	6018      	str	r0, [r3, #0]
			break;
 8016a22:	f003 bf87 	b.w	801a934 <createProblem+0x19a8c>
		case 71 :
			strcpy(p->name,"BUIONE");
 8016a26:	687b      	ldr	r3, [r7, #4]
 8016a28:	337c      	adds	r3, #124	; 0x7c
 8016a2a:	4a5f      	ldr	r2, [pc, #380]	; (8016ba8 <createProblem+0x15d00>)
 8016a2c:	6810      	ldr	r0, [r2, #0]
 8016a2e:	6018      	str	r0, [r3, #0]
 8016a30:	8891      	ldrh	r1, [r2, #4]
 8016a32:	7992      	ldrb	r2, [r2, #6]
 8016a34:	8099      	strh	r1, [r3, #4]
 8016a36:	719a      	strb	r2, [r3, #6]
			p->moveSize = 6;
 8016a38:	687b      	ldr	r3, [r7, #4]
 8016a3a:	2206      	movs	r2, #6
 8016a3c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,E,B,A");
 8016a3e:	687b      	ldr	r3, [r7, #4]
 8016a40:	3340      	adds	r3, #64	; 0x40
 8016a42:	4a5a      	ldr	r2, [pc, #360]	; (8016bac <createProblem+0x15d04>)
 8016a44:	461c      	mov	r4, r3
 8016a46:	4613      	mov	r3, r2
 8016a48:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016a4a:	6020      	str	r0, [r4, #0]
 8016a4c:	6061      	str	r1, [r4, #4]
 8016a4e:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,9,12,15,18");
 8016a50:	687b      	ldr	r3, [r7, #4]
 8016a52:	3304      	adds	r3, #4
 8016a54:	4a56      	ldr	r2, [pc, #344]	; (8016bb0 <createProblem+0x15d08>)
 8016a56:	461c      	mov	r4, r3
 8016a58:	4613      	mov	r3, r2
 8016a5a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016a5c:	6020      	str	r0, [r4, #0]
 8016a5e:	6061      	str	r1, [r4, #4]
 8016a60:	60a2      	str	r2, [r4, #8]
 8016a62:	881a      	ldrh	r2, [r3, #0]
 8016a64:	789b      	ldrb	r3, [r3, #2]
 8016a66:	81a2      	strh	r2, [r4, #12]
 8016a68:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8016a6a:	687b      	ldr	r3, [r7, #4]
 8016a6c:	33d8      	adds	r3, #216	; 0xd8
 8016a6e:	4a51      	ldr	r2, [pc, #324]	; (8016bb4 <createProblem+0x15d0c>)
 8016a70:	461c      	mov	r4, r3
 8016a72:	4613      	mov	r3, r2
 8016a74:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016a76:	6020      	str	r0, [r4, #0]
 8016a78:	6061      	str	r1, [r4, #4]
 8016a7a:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8016a7c:	687b      	ldr	r3, [r7, #4]
 8016a7e:	33cc      	adds	r3, #204	; 0xcc
 8016a80:	4a3b      	ldr	r2, [pc, #236]	; (8016b70 <createProblem+0x15cc8>)
 8016a82:	8811      	ldrh	r1, [r2, #0]
 8016a84:	7892      	ldrb	r2, [r2, #2]
 8016a86:	8019      	strh	r1, [r3, #0]
 8016a88:	709a      	strb	r2, [r3, #2]
			break;
 8016a8a:	f003 bf53 	b.w	801a934 <createProblem+0x19a8c>
		case 710 :
			strcpy(p->name,"CERBERO");
 8016a8e:	687b      	ldr	r3, [r7, #4]
 8016a90:	337c      	adds	r3, #124	; 0x7c
 8016a92:	4949      	ldr	r1, [pc, #292]	; (8016bb8 <createProblem+0x15d10>)
 8016a94:	461a      	mov	r2, r3
 8016a96:	460b      	mov	r3, r1
 8016a98:	cb03      	ldmia	r3!, {r0, r1}
 8016a9a:	6010      	str	r0, [r2, #0]
 8016a9c:	6051      	str	r1, [r2, #4]
			p->moveSize = 5;
 8016a9e:	687b      	ldr	r3, [r7, #4]
 8016aa0:	2205      	movs	r2, #5
 8016aa2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,I,H,K,I");
 8016aa4:	687b      	ldr	r3, [r7, #4]
 8016aa6:	3340      	adds	r3, #64	; 0x40
 8016aa8:	4944      	ldr	r1, [pc, #272]	; (8016bbc <createProblem+0x15d14>)
 8016aaa:	461a      	mov	r2, r3
 8016aac:	460b      	mov	r3, r1
 8016aae:	cb03      	ldmia	r3!, {r0, r1}
 8016ab0:	6010      	str	r0, [r2, #0]
 8016ab2:	6051      	str	r1, [r2, #4]
 8016ab4:	881b      	ldrh	r3, [r3, #0]
 8016ab6:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,10,12,14,18");
 8016ab8:	687b      	ldr	r3, [r7, #4]
 8016aba:	3304      	adds	r3, #4
 8016abc:	4a40      	ldr	r2, [pc, #256]	; (8016bc0 <createProblem+0x15d18>)
 8016abe:	461c      	mov	r4, r3
 8016ac0:	4613      	mov	r3, r2
 8016ac2:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016ac4:	6020      	str	r0, [r4, #0]
 8016ac6:	6061      	str	r1, [r4, #4]
 8016ac8:	60a2      	str	r2, [r4, #8]
 8016aca:	881b      	ldrh	r3, [r3, #0]
 8016acc:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8016ace:	687b      	ldr	r3, [r7, #4]
 8016ad0:	33d8      	adds	r3, #216	; 0xd8
 8016ad2:	493c      	ldr	r1, [pc, #240]	; (8016bc4 <createProblem+0x15d1c>)
 8016ad4:	461a      	mov	r2, r3
 8016ad6:	460b      	mov	r3, r1
 8016ad8:	cb03      	ldmia	r3!, {r0, r1}
 8016ada:	6010      	str	r0, [r2, #0]
 8016adc:	6051      	str	r1, [r2, #4]
 8016ade:	881b      	ldrh	r3, [r3, #0]
 8016ae0:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 8016ae2:	687b      	ldr	r3, [r7, #4]
 8016ae4:	33cc      	adds	r3, #204	; 0xcc
 8016ae6:	4a22      	ldr	r2, [pc, #136]	; (8016b70 <createProblem+0x15cc8>)
 8016ae8:	8811      	ldrh	r1, [r2, #0]
 8016aea:	7892      	ldrb	r2, [r2, #2]
 8016aec:	8019      	strh	r1, [r3, #0]
 8016aee:	709a      	strb	r2, [r3, #2]
			break;
 8016af0:	f003 bf20 	b.w	801a934 <createProblem+0x19a8c>
		case 711 :
			strcpy(p->name,"COW FUNK");
 8016af4:	687b      	ldr	r3, [r7, #4]
 8016af6:	337c      	adds	r3, #124	; 0x7c
 8016af8:	4933      	ldr	r1, [pc, #204]	; (8016bc8 <createProblem+0x15d20>)
 8016afa:	461a      	mov	r2, r3
 8016afc:	460b      	mov	r3, r1
 8016afe:	cb03      	ldmia	r3!, {r0, r1}
 8016b00:	6010      	str	r0, [r2, #0]
 8016b02:	6051      	str	r1, [r2, #4]
 8016b04:	781b      	ldrb	r3, [r3, #0]
 8016b06:	7213      	strb	r3, [r2, #8]
			p->moveSize = 7;
 8016b08:	687b      	ldr	r3, [r7, #4]
 8016b0a:	2207      	movs	r2, #7
 8016b0c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,A,E,A,D");
 8016b0e:	687b      	ldr	r3, [r7, #4]
 8016b10:	3340      	adds	r3, #64	; 0x40
 8016b12:	4a2e      	ldr	r2, [pc, #184]	; (8016bcc <createProblem+0x15d24>)
 8016b14:	461c      	mov	r4, r3
 8016b16:	4613      	mov	r3, r2
 8016b18:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016b1a:	6020      	str	r0, [r4, #0]
 8016b1c:	6061      	str	r1, [r4, #4]
 8016b1e:	60a2      	str	r2, [r4, #8]
 8016b20:	881b      	ldrh	r3, [r3, #0]
 8016b22:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,8,9,12,14,18");
 8016b24:	687b      	ldr	r3, [r7, #4]
 8016b26:	3304      	adds	r3, #4
 8016b28:	4a29      	ldr	r2, [pc, #164]	; (8016bd0 <createProblem+0x15d28>)
 8016b2a:	461d      	mov	r5, r3
 8016b2c:	4614      	mov	r4, r2
 8016b2e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016b30:	6028      	str	r0, [r5, #0]
 8016b32:	6069      	str	r1, [r5, #4]
 8016b34:	60aa      	str	r2, [r5, #8]
 8016b36:	60eb      	str	r3, [r5, #12]
 8016b38:	7823      	ldrb	r3, [r4, #0]
 8016b3a:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8016b3c:	687b      	ldr	r3, [r7, #4]
 8016b3e:	33d8      	adds	r3, #216	; 0xd8
 8016b40:	4a0a      	ldr	r2, [pc, #40]	; (8016b6c <createProblem+0x15cc4>)
 8016b42:	461c      	mov	r4, r3
 8016b44:	4613      	mov	r3, r2
 8016b46:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016b48:	6020      	str	r0, [r4, #0]
 8016b4a:	6061      	str	r1, [r4, #4]
 8016b4c:	60a2      	str	r2, [r4, #8]
 8016b4e:	881b      	ldrh	r3, [r3, #0]
 8016b50:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8016b52:	687b      	ldr	r3, [r7, #4]
 8016b54:	33cc      	adds	r3, #204	; 0xcc
 8016b56:	4a0b      	ldr	r2, [pc, #44]	; (8016b84 <createProblem+0x15cdc>)
 8016b58:	6810      	ldr	r0, [r2, #0]
 8016b5a:	6018      	str	r0, [r3, #0]
			break;
 8016b5c:	f003 beea 	b.w	801a934 <createProblem+0x19a8c>
 8016b60:	08028610 	.word	0x08028610
 8016b64:	08028618 	.word	0x08028618
 8016b68:	08028628 	.word	0x08028628
 8016b6c:	08020a14 	.word	0x08020a14
 8016b70:	08020874 	.word	0x08020874
 8016b74:	0802863c 	.word	0x0802863c
 8016b78:	08028644 	.word	0x08028644
 8016b7c:	08028658 	.word	0x08028658
 8016b80:	08027c70 	.word	0x08027c70
 8016b84:	08020830 	.word	0x08020830
 8016b88:	08028670 	.word	0x08028670
 8016b8c:	0802867c 	.word	0x0802867c
 8016b90:	08028688 	.word	0x08028688
 8016b94:	08020e90 	.word	0x08020e90
 8016b98:	08028698 	.word	0x08028698
 8016b9c:	080286b4 	.word	0x080286b4
 8016ba0:	080286c8 	.word	0x080286c8
 8016ba4:	08020dfc 	.word	0x08020dfc
 8016ba8:	080286e0 	.word	0x080286e0
 8016bac:	080286e8 	.word	0x080286e8
 8016bb0:	08021ad8 	.word	0x08021ad8
 8016bb4:	0802091c 	.word	0x0802091c
 8016bb8:	080286f4 	.word	0x080286f4
 8016bbc:	080286fc 	.word	0x080286fc
 8016bc0:	08028708 	.word	0x08028708
 8016bc4:	080208a0 	.word	0x080208a0
 8016bc8:	08028718 	.word	0x08028718
 8016bcc:	08028724 	.word	0x08028724
 8016bd0:	08028734 	.word	0x08028734
		case 712 :
			strcpy(p->name,"MOMOGO");
 8016bd4:	687b      	ldr	r3, [r7, #4]
 8016bd6:	337c      	adds	r3, #124	; 0x7c
 8016bd8:	4ac0      	ldr	r2, [pc, #768]	; (8016edc <createProblem+0x16034>)
 8016bda:	6810      	ldr	r0, [r2, #0]
 8016bdc:	6018      	str	r0, [r3, #0]
 8016bde:	8891      	ldrh	r1, [r2, #4]
 8016be0:	7992      	ldrb	r2, [r2, #6]
 8016be2:	8099      	strh	r1, [r3, #4]
 8016be4:	719a      	strb	r2, [r3, #6]
			p->moveSize = 9;
 8016be6:	687b      	ldr	r3, [r7, #4]
 8016be8:	2209      	movs	r2, #9
 8016bea:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,K,I,J,F,I,H,I");
 8016bec:	687b      	ldr	r3, [r7, #4]
 8016bee:	3340      	adds	r3, #64	; 0x40
 8016bf0:	4abb      	ldr	r2, [pc, #748]	; (8016ee0 <createProblem+0x16038>)
 8016bf2:	461d      	mov	r5, r3
 8016bf4:	4614      	mov	r4, r2
 8016bf6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016bf8:	6028      	str	r0, [r5, #0]
 8016bfa:	6069      	str	r1, [r5, #4]
 8016bfc:	60aa      	str	r2, [r5, #8]
 8016bfe:	60eb      	str	r3, [r5, #12]
 8016c00:	8823      	ldrh	r3, [r4, #0]
 8016c02:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,5,9,10,12,13,14,16,18");
 8016c04:	687b      	ldr	r3, [r7, #4]
 8016c06:	3304      	adds	r3, #4
 8016c08:	4ab6      	ldr	r2, [pc, #728]	; (8016ee4 <createProblem+0x1603c>)
 8016c0a:	461d      	mov	r5, r3
 8016c0c:	4614      	mov	r4, r2
 8016c0e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016c10:	6028      	str	r0, [r5, #0]
 8016c12:	6069      	str	r1, [r5, #4]
 8016c14:	60aa      	str	r2, [r5, #8]
 8016c16:	60eb      	str	r3, [r5, #12]
 8016c18:	cc03      	ldmia	r4!, {r0, r1}
 8016c1a:	6128      	str	r0, [r5, #16]
 8016c1c:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8016c1e:	687b      	ldr	r3, [r7, #4]
 8016c20:	33d8      	adds	r3, #216	; 0xd8
 8016c22:	4ab1      	ldr	r2, [pc, #708]	; (8016ee8 <createProblem+0x16040>)
 8016c24:	461d      	mov	r5, r3
 8016c26:	4614      	mov	r4, r2
 8016c28:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016c2a:	6028      	str	r0, [r5, #0]
 8016c2c:	6069      	str	r1, [r5, #4]
 8016c2e:	60aa      	str	r2, [r5, #8]
 8016c30:	60eb      	str	r3, [r5, #12]
 8016c32:	8823      	ldrh	r3, [r4, #0]
 8016c34:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8016c36:	687b      	ldr	r3, [r7, #4]
 8016c38:	33cc      	adds	r3, #204	; 0xcc
 8016c3a:	4aac      	ldr	r2, [pc, #688]	; (8016eec <createProblem+0x16044>)
 8016c3c:	6810      	ldr	r0, [r2, #0]
 8016c3e:	6018      	str	r0, [r3, #0]
			break;
 8016c40:	f003 be78 	b.w	801a934 <createProblem+0x19a8c>
		case 713 :
			strcpy(p->name,"LITTLE DIDDY");
 8016c44:	687b      	ldr	r3, [r7, #4]
 8016c46:	337c      	adds	r3, #124	; 0x7c
 8016c48:	4aa9      	ldr	r2, [pc, #676]	; (8016ef0 <createProblem+0x16048>)
 8016c4a:	461c      	mov	r4, r3
 8016c4c:	4613      	mov	r3, r2
 8016c4e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016c50:	6020      	str	r0, [r4, #0]
 8016c52:	6061      	str	r1, [r4, #4]
 8016c54:	60a2      	str	r2, [r4, #8]
 8016c56:	781b      	ldrb	r3, [r3, #0]
 8016c58:	7323      	strb	r3, [r4, #12]
			p->moveSize = 10;
 8016c5a:	687b      	ldr	r3, [r7, #4]
 8016c5c:	220a      	movs	r2, #10
 8016c5e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,D,A,D,B,F,J,K,J,I");
 8016c60:	687b      	ldr	r3, [r7, #4]
 8016c62:	3340      	adds	r3, #64	; 0x40
 8016c64:	4aa3      	ldr	r2, [pc, #652]	; (8016ef4 <createProblem+0x1604c>)
 8016c66:	461d      	mov	r5, r3
 8016c68:	4614      	mov	r4, r2
 8016c6a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016c6c:	6028      	str	r0, [r5, #0]
 8016c6e:	6069      	str	r1, [r5, #4]
 8016c70:	60aa      	str	r2, [r5, #8]
 8016c72:	60eb      	str	r3, [r5, #12]
 8016c74:	6820      	ldr	r0, [r4, #0]
 8016c76:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"5,7,9,11,12,13,12,9,16,18");
 8016c78:	687b      	ldr	r3, [r7, #4]
 8016c7a:	3304      	adds	r3, #4
 8016c7c:	4a9e      	ldr	r2, [pc, #632]	; (8016ef8 <createProblem+0x16050>)
 8016c7e:	461d      	mov	r5, r3
 8016c80:	4614      	mov	r4, r2
 8016c82:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016c84:	6028      	str	r0, [r5, #0]
 8016c86:	6069      	str	r1, [r5, #4]
 8016c88:	60aa      	str	r2, [r5, #8]
 8016c8a:	60eb      	str	r3, [r5, #12]
 8016c8c:	cc03      	ldmia	r4!, {r0, r1}
 8016c8e:	6128      	str	r0, [r5, #16]
 8016c90:	6169      	str	r1, [r5, #20]
 8016c92:	8823      	ldrh	r3, [r4, #0]
 8016c94:	832b      	strh	r3, [r5, #24]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,d,d,e");
 8016c96:	687b      	ldr	r3, [r7, #4]
 8016c98:	33d8      	adds	r3, #216	; 0xd8
 8016c9a:	4a98      	ldr	r2, [pc, #608]	; (8016efc <createProblem+0x16054>)
 8016c9c:	461d      	mov	r5, r3
 8016c9e:	4614      	mov	r4, r2
 8016ca0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016ca2:	6028      	str	r0, [r5, #0]
 8016ca4:	6069      	str	r1, [r5, #4]
 8016ca6:	60aa      	str	r2, [r5, #8]
 8016ca8:	60eb      	str	r3, [r5, #12]
 8016caa:	6820      	ldr	r0, [r4, #0]
 8016cac:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "7B+");
 8016cae:	687b      	ldr	r3, [r7, #4]
 8016cb0:	33cc      	adds	r3, #204	; 0xcc
 8016cb2:	4a93      	ldr	r2, [pc, #588]	; (8016f00 <createProblem+0x16058>)
 8016cb4:	6810      	ldr	r0, [r2, #0]
 8016cb6:	6018      	str	r0, [r3, #0]
			break;
 8016cb8:	f003 be3c 	b.w	801a934 <createProblem+0x19a8c>
		case 714 :
			strcpy(p->name,"DARK MAGIC");
 8016cbc:	687b      	ldr	r3, [r7, #4]
 8016cbe:	337c      	adds	r3, #124	; 0x7c
 8016cc0:	4990      	ldr	r1, [pc, #576]	; (8016f04 <createProblem+0x1605c>)
 8016cc2:	461a      	mov	r2, r3
 8016cc4:	460b      	mov	r3, r1
 8016cc6:	cb03      	ldmia	r3!, {r0, r1}
 8016cc8:	6010      	str	r0, [r2, #0]
 8016cca:	6051      	str	r1, [r2, #4]
 8016ccc:	8819      	ldrh	r1, [r3, #0]
 8016cce:	789b      	ldrb	r3, [r3, #2]
 8016cd0:	8111      	strh	r1, [r2, #8]
 8016cd2:	7293      	strb	r3, [r2, #10]
			p->moveSize = 5;
 8016cd4:	687b      	ldr	r3, [r7, #4]
 8016cd6:	2205      	movs	r2, #5
 8016cd8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,C,G,E,I");
 8016cda:	687b      	ldr	r3, [r7, #4]
 8016cdc:	3340      	adds	r3, #64	; 0x40
 8016cde:	498a      	ldr	r1, [pc, #552]	; (8016f08 <createProblem+0x16060>)
 8016ce0:	461a      	mov	r2, r3
 8016ce2:	460b      	mov	r3, r1
 8016ce4:	cb03      	ldmia	r3!, {r0, r1}
 8016ce6:	6010      	str	r0, [r2, #0]
 8016ce8:	6051      	str	r1, [r2, #4]
 8016cea:	881b      	ldrh	r3, [r3, #0]
 8016cec:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,8,10,14,18");
 8016cee:	687b      	ldr	r3, [r7, #4]
 8016cf0:	3304      	adds	r3, #4
 8016cf2:	4a86      	ldr	r2, [pc, #536]	; (8016f0c <createProblem+0x16064>)
 8016cf4:	461c      	mov	r4, r3
 8016cf6:	4613      	mov	r3, r2
 8016cf8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016cfa:	6020      	str	r0, [r4, #0]
 8016cfc:	6061      	str	r1, [r4, #4]
 8016cfe:	60a2      	str	r2, [r4, #8]
 8016d00:	781b      	ldrb	r3, [r3, #0]
 8016d02:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8016d04:	687b      	ldr	r3, [r7, #4]
 8016d06:	33d8      	adds	r3, #216	; 0xd8
 8016d08:	4981      	ldr	r1, [pc, #516]	; (8016f10 <createProblem+0x16068>)
 8016d0a:	461a      	mov	r2, r3
 8016d0c:	460b      	mov	r3, r1
 8016d0e:	cb03      	ldmia	r3!, {r0, r1}
 8016d10:	6010      	str	r0, [r2, #0]
 8016d12:	6051      	str	r1, [r2, #4]
 8016d14:	881b      	ldrh	r3, [r3, #0]
 8016d16:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 8016d18:	687b      	ldr	r3, [r7, #4]
 8016d1a:	33cc      	adds	r3, #204	; 0xcc
 8016d1c:	4a78      	ldr	r2, [pc, #480]	; (8016f00 <createProblem+0x16058>)
 8016d1e:	6810      	ldr	r0, [r2, #0]
 8016d20:	6018      	str	r0, [r3, #0]
			break;
 8016d22:	f003 be07 	b.w	801a934 <createProblem+0x19a8c>
		case 715 :
			strcpy(p->name,"DURANGO TANGO");
 8016d26:	687b      	ldr	r3, [r7, #4]
 8016d28:	337c      	adds	r3, #124	; 0x7c
 8016d2a:	4a7a      	ldr	r2, [pc, #488]	; (8016f14 <createProblem+0x1606c>)
 8016d2c:	461c      	mov	r4, r3
 8016d2e:	4613      	mov	r3, r2
 8016d30:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016d32:	6020      	str	r0, [r4, #0]
 8016d34:	6061      	str	r1, [r4, #4]
 8016d36:	60a2      	str	r2, [r4, #8]
 8016d38:	881b      	ldrh	r3, [r3, #0]
 8016d3a:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 8016d3c:	687b      	ldr	r3, [r7, #4]
 8016d3e:	2207      	movs	r2, #7
 8016d40:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,E,E,G,H,I");
 8016d42:	687b      	ldr	r3, [r7, #4]
 8016d44:	3340      	adds	r3, #64	; 0x40
 8016d46:	4a74      	ldr	r2, [pc, #464]	; (8016f18 <createProblem+0x16070>)
 8016d48:	461c      	mov	r4, r3
 8016d4a:	4613      	mov	r3, r2
 8016d4c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016d4e:	6020      	str	r0, [r4, #0]
 8016d50:	6061      	str	r1, [r4, #4]
 8016d52:	60a2      	str	r2, [r4, #8]
 8016d54:	881b      	ldrh	r3, [r3, #0]
 8016d56:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,10,12,9,15,16,18");
 8016d58:	687b      	ldr	r3, [r7, #4]
 8016d5a:	3304      	adds	r3, #4
 8016d5c:	4a6f      	ldr	r2, [pc, #444]	; (8016f1c <createProblem+0x16074>)
 8016d5e:	461d      	mov	r5, r3
 8016d60:	4614      	mov	r4, r2
 8016d62:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016d64:	6028      	str	r0, [r5, #0]
 8016d66:	6069      	str	r1, [r5, #4]
 8016d68:	60aa      	str	r2, [r5, #8]
 8016d6a:	60eb      	str	r3, [r5, #12]
 8016d6c:	8823      	ldrh	r3, [r4, #0]
 8016d6e:	78a2      	ldrb	r2, [r4, #2]
 8016d70:	822b      	strh	r3, [r5, #16]
 8016d72:	4613      	mov	r3, r2
 8016d74:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8016d76:	687b      	ldr	r3, [r7, #4]
 8016d78:	33d8      	adds	r3, #216	; 0xd8
 8016d7a:	4a69      	ldr	r2, [pc, #420]	; (8016f20 <createProblem+0x16078>)
 8016d7c:	461c      	mov	r4, r3
 8016d7e:	4613      	mov	r3, r2
 8016d80:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016d82:	6020      	str	r0, [r4, #0]
 8016d84:	6061      	str	r1, [r4, #4]
 8016d86:	60a2      	str	r2, [r4, #8]
 8016d88:	881b      	ldrh	r3, [r3, #0]
 8016d8a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8016d8c:	687b      	ldr	r3, [r7, #4]
 8016d8e:	33cc      	adds	r3, #204	; 0xcc
 8016d90:	4a64      	ldr	r2, [pc, #400]	; (8016f24 <createProblem+0x1607c>)
 8016d92:	6810      	ldr	r0, [r2, #0]
 8016d94:	6018      	str	r0, [r3, #0]
			break;
 8016d96:	f003 bdcd 	b.w	801a934 <createProblem+0x19a8c>
		case 716 :
			strcpy(p->name,"BLACKER");
 8016d9a:	687b      	ldr	r3, [r7, #4]
 8016d9c:	337c      	adds	r3, #124	; 0x7c
 8016d9e:	4962      	ldr	r1, [pc, #392]	; (8016f28 <createProblem+0x16080>)
 8016da0:	461a      	mov	r2, r3
 8016da2:	460b      	mov	r3, r1
 8016da4:	cb03      	ldmia	r3!, {r0, r1}
 8016da6:	6010      	str	r0, [r2, #0]
 8016da8:	6051      	str	r1, [r2, #4]
			p->moveSize = 6;
 8016daa:	687b      	ldr	r3, [r7, #4]
 8016dac:	2206      	movs	r2, #6
 8016dae:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,G,H,C,H,D");
 8016db0:	687b      	ldr	r3, [r7, #4]
 8016db2:	3340      	adds	r3, #64	; 0x40
 8016db4:	4a5d      	ldr	r2, [pc, #372]	; (8016f2c <createProblem+0x16084>)
 8016db6:	461c      	mov	r4, r3
 8016db8:	4613      	mov	r3, r2
 8016dba:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016dbc:	6020      	str	r0, [r4, #0]
 8016dbe:	6061      	str	r1, [r4, #4]
 8016dc0:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,4,10,13,16,18");
 8016dc2:	687b      	ldr	r3, [r7, #4]
 8016dc4:	3304      	adds	r3, #4
 8016dc6:	4a5a      	ldr	r2, [pc, #360]	; (8016f30 <createProblem+0x16088>)
 8016dc8:	461c      	mov	r4, r3
 8016dca:	4615      	mov	r5, r2
 8016dcc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8016dce:	6020      	str	r0, [r4, #0]
 8016dd0:	6061      	str	r1, [r4, #4]
 8016dd2:	60a2      	str	r2, [r4, #8]
 8016dd4:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8016dd6:	687b      	ldr	r3, [r7, #4]
 8016dd8:	33d8      	adds	r3, #216	; 0xd8
 8016dda:	4a56      	ldr	r2, [pc, #344]	; (8016f34 <createProblem+0x1608c>)
 8016ddc:	461c      	mov	r4, r3
 8016dde:	4613      	mov	r3, r2
 8016de0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016de2:	6020      	str	r0, [r4, #0]
 8016de4:	6061      	str	r1, [r4, #4]
 8016de6:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8016de8:	687b      	ldr	r3, [r7, #4]
 8016dea:	33cc      	adds	r3, #204	; 0xcc
 8016dec:	4a52      	ldr	r2, [pc, #328]	; (8016f38 <createProblem+0x16090>)
 8016dee:	8811      	ldrh	r1, [r2, #0]
 8016df0:	7892      	ldrb	r2, [r2, #2]
 8016df2:	8019      	strh	r1, [r3, #0]
 8016df4:	709a      	strb	r2, [r3, #2]
			break;
 8016df6:	f003 bd9d 	b.w	801a934 <createProblem+0x19a8c>
		case 717 :
			strcpy(p->name,"URBAN WALL");
 8016dfa:	687b      	ldr	r3, [r7, #4]
 8016dfc:	337c      	adds	r3, #124	; 0x7c
 8016dfe:	494f      	ldr	r1, [pc, #316]	; (8016f3c <createProblem+0x16094>)
 8016e00:	461a      	mov	r2, r3
 8016e02:	460b      	mov	r3, r1
 8016e04:	cb03      	ldmia	r3!, {r0, r1}
 8016e06:	6010      	str	r0, [r2, #0]
 8016e08:	6051      	str	r1, [r2, #4]
 8016e0a:	8819      	ldrh	r1, [r3, #0]
 8016e0c:	789b      	ldrb	r3, [r3, #2]
 8016e0e:	8111      	strh	r1, [r2, #8]
 8016e10:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 8016e12:	687b      	ldr	r3, [r7, #4]
 8016e14:	2206      	movs	r2, #6
 8016e16:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,E,F,A,D");
 8016e18:	687b      	ldr	r3, [r7, #4]
 8016e1a:	3340      	adds	r3, #64	; 0x40
 8016e1c:	4a48      	ldr	r2, [pc, #288]	; (8016f40 <createProblem+0x16098>)
 8016e1e:	461c      	mov	r4, r3
 8016e20:	4613      	mov	r3, r2
 8016e22:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016e24:	6020      	str	r0, [r4, #0]
 8016e26:	6061      	str	r1, [r4, #4]
 8016e28:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,5,8,11,14,18");
 8016e2a:	687b      	ldr	r3, [r7, #4]
 8016e2c:	3304      	adds	r3, #4
 8016e2e:	4a45      	ldr	r2, [pc, #276]	; (8016f44 <createProblem+0x1609c>)
 8016e30:	461c      	mov	r4, r3
 8016e32:	4613      	mov	r3, r2
 8016e34:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016e36:	6020      	str	r0, [r4, #0]
 8016e38:	6061      	str	r1, [r4, #4]
 8016e3a:	60a2      	str	r2, [r4, #8]
 8016e3c:	881a      	ldrh	r2, [r3, #0]
 8016e3e:	789b      	ldrb	r3, [r3, #2]
 8016e40:	81a2      	strh	r2, [r4, #12]
 8016e42:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8016e44:	687b      	ldr	r3, [r7, #4]
 8016e46:	33d8      	adds	r3, #216	; 0xd8
 8016e48:	4a3a      	ldr	r2, [pc, #232]	; (8016f34 <createProblem+0x1608c>)
 8016e4a:	461c      	mov	r4, r3
 8016e4c:	4613      	mov	r3, r2
 8016e4e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016e50:	6020      	str	r0, [r4, #0]
 8016e52:	6061      	str	r1, [r4, #4]
 8016e54:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 8016e56:	687b      	ldr	r3, [r7, #4]
 8016e58:	33cc      	adds	r3, #204	; 0xcc
 8016e5a:	4a3b      	ldr	r2, [pc, #236]	; (8016f48 <createProblem+0x160a0>)
 8016e5c:	8811      	ldrh	r1, [r2, #0]
 8016e5e:	7892      	ldrb	r2, [r2, #2]
 8016e60:	8019      	strh	r1, [r3, #0]
 8016e62:	709a      	strb	r2, [r3, #2]
			break;
 8016e64:	f003 bd66 	b.w	801a934 <createProblem+0x19a8c>
		case 718 :
			strcpy(p->name,"GORILA");
 8016e68:	687b      	ldr	r3, [r7, #4]
 8016e6a:	337c      	adds	r3, #124	; 0x7c
 8016e6c:	4a37      	ldr	r2, [pc, #220]	; (8016f4c <createProblem+0x160a4>)
 8016e6e:	6810      	ldr	r0, [r2, #0]
 8016e70:	6018      	str	r0, [r3, #0]
 8016e72:	8891      	ldrh	r1, [r2, #4]
 8016e74:	7992      	ldrb	r2, [r2, #6]
 8016e76:	8099      	strh	r1, [r3, #4]
 8016e78:	719a      	strb	r2, [r3, #6]
			p->moveSize = 7;
 8016e7a:	687b      	ldr	r3, [r7, #4]
 8016e7c:	2207      	movs	r2, #7
 8016e7e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,J,G,F,C,E,D");
 8016e80:	687b      	ldr	r3, [r7, #4]
 8016e82:	3340      	adds	r3, #64	; 0x40
 8016e84:	4a32      	ldr	r2, [pc, #200]	; (8016f50 <createProblem+0x160a8>)
 8016e86:	461c      	mov	r4, r3
 8016e88:	4613      	mov	r3, r2
 8016e8a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016e8c:	6020      	str	r0, [r4, #0]
 8016e8e:	6061      	str	r1, [r4, #4]
 8016e90:	60a2      	str	r2, [r4, #8]
 8016e92:	881b      	ldrh	r3, [r3, #0]
 8016e94:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,7,10,11,13,14,18");
 8016e96:	687b      	ldr	r3, [r7, #4]
 8016e98:	3304      	adds	r3, #4
 8016e9a:	4a2e      	ldr	r2, [pc, #184]	; (8016f54 <createProblem+0x160ac>)
 8016e9c:	461d      	mov	r5, r3
 8016e9e:	4614      	mov	r4, r2
 8016ea0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016ea2:	6028      	str	r0, [r5, #0]
 8016ea4:	6069      	str	r1, [r5, #4]
 8016ea6:	60aa      	str	r2, [r5, #8]
 8016ea8:	60eb      	str	r3, [r5, #12]
 8016eaa:	8823      	ldrh	r3, [r4, #0]
 8016eac:	78a2      	ldrb	r2, [r4, #2]
 8016eae:	822b      	strh	r3, [r5, #16]
 8016eb0:	4613      	mov	r3, r2
 8016eb2:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8016eb4:	687b      	ldr	r3, [r7, #4]
 8016eb6:	33d8      	adds	r3, #216	; 0xd8
 8016eb8:	4a19      	ldr	r2, [pc, #100]	; (8016f20 <createProblem+0x16078>)
 8016eba:	461c      	mov	r4, r3
 8016ebc:	4613      	mov	r3, r2
 8016ebe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016ec0:	6020      	str	r0, [r4, #0]
 8016ec2:	6061      	str	r1, [r4, #4]
 8016ec4:	60a2      	str	r2, [r4, #8]
 8016ec6:	881b      	ldrh	r3, [r3, #0]
 8016ec8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B");
 8016eca:	687b      	ldr	r3, [r7, #4]
 8016ecc:	33cc      	adds	r3, #204	; 0xcc
 8016ece:	4a22      	ldr	r2, [pc, #136]	; (8016f58 <createProblem+0x160b0>)
 8016ed0:	8811      	ldrh	r1, [r2, #0]
 8016ed2:	7892      	ldrb	r2, [r2, #2]
 8016ed4:	8019      	strh	r1, [r3, #0]
 8016ed6:	709a      	strb	r2, [r3, #2]
			break;
 8016ed8:	f003 bd2c 	b.w	801a934 <createProblem+0x19a8c>
 8016edc:	08028748 	.word	0x08028748
 8016ee0:	08028750 	.word	0x08028750
 8016ee4:	08028764 	.word	0x08028764
 8016ee8:	08020dfc 	.word	0x08020dfc
 8016eec:	08020830 	.word	0x08020830
 8016ef0:	0802877c 	.word	0x0802877c
 8016ef4:	0802878c 	.word	0x0802878c
 8016ef8:	080287a0 	.word	0x080287a0
 8016efc:	08022990 	.word	0x08022990
 8016f00:	08020dc8 	.word	0x08020dc8
 8016f04:	080287bc 	.word	0x080287bc
 8016f08:	080287c8 	.word	0x080287c8
 8016f0c:	08023908 	.word	0x08023908
 8016f10:	080208a0 	.word	0x080208a0
 8016f14:	080287d4 	.word	0x080287d4
 8016f18:	080287e4 	.word	0x080287e4
 8016f1c:	080287f4 	.word	0x080287f4
 8016f20:	08020a14 	.word	0x08020a14
 8016f24:	08020928 	.word	0x08020928
 8016f28:	08028808 	.word	0x08028808
 8016f2c:	08028810 	.word	0x08028810
 8016f30:	0802881c 	.word	0x0802881c
 8016f34:	08020e90 	.word	0x08020e90
 8016f38:	08020874 	.word	0x08020874
 8016f3c:	0802882c 	.word	0x0802882c
 8016f40:	08028838 	.word	0x08028838
 8016f44:	08028844 	.word	0x08028844
 8016f48:	080208f0 	.word	0x080208f0
 8016f4c:	08028854 	.word	0x08028854
 8016f50:	0802885c 	.word	0x0802885c
 8016f54:	0802886c 	.word	0x0802886c
 8016f58:	080208ac 	.word	0x080208ac
		case 719 :
			strcpy(p->name,"JA ICH BIN NOCH");
 8016f5c:	687b      	ldr	r3, [r7, #4]
 8016f5e:	337c      	adds	r3, #124	; 0x7c
 8016f60:	4ac0      	ldr	r2, [pc, #768]	; (8017264 <createProblem+0x163bc>)
 8016f62:	461c      	mov	r4, r3
 8016f64:	4615      	mov	r5, r2
 8016f66:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8016f68:	6020      	str	r0, [r4, #0]
 8016f6a:	6061      	str	r1, [r4, #4]
 8016f6c:	60a2      	str	r2, [r4, #8]
 8016f6e:	60e3      	str	r3, [r4, #12]
			p->moveSize = 7;
 8016f70:	687b      	ldr	r3, [r7, #4]
 8016f72:	2207      	movs	r2, #7
 8016f74:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,E,G,E,E,E,I");
 8016f76:	687b      	ldr	r3, [r7, #4]
 8016f78:	3340      	adds	r3, #64	; 0x40
 8016f7a:	4abb      	ldr	r2, [pc, #748]	; (8017268 <createProblem+0x163c0>)
 8016f7c:	461c      	mov	r4, r3
 8016f7e:	4613      	mov	r3, r2
 8016f80:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016f82:	6020      	str	r0, [r4, #0]
 8016f84:	6061      	str	r1, [r4, #4]
 8016f86:	60a2      	str	r2, [r4, #8]
 8016f88:	881b      	ldrh	r3, [r3, #0]
 8016f8a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,12,14,16,18");
 8016f8c:	687b      	ldr	r3, [r7, #4]
 8016f8e:	3304      	adds	r3, #4
 8016f90:	4ab6      	ldr	r2, [pc, #728]	; (801726c <createProblem+0x163c4>)
 8016f92:	461d      	mov	r5, r3
 8016f94:	4614      	mov	r4, r2
 8016f96:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8016f98:	6028      	str	r0, [r5, #0]
 8016f9a:	6069      	str	r1, [r5, #4]
 8016f9c:	60aa      	str	r2, [r5, #8]
 8016f9e:	60eb      	str	r3, [r5, #12]
 8016fa0:	8823      	ldrh	r3, [r4, #0]
 8016fa2:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8016fa4:	687b      	ldr	r3, [r7, #4]
 8016fa6:	33d8      	adds	r3, #216	; 0xd8
 8016fa8:	4ab1      	ldr	r2, [pc, #708]	; (8017270 <createProblem+0x163c8>)
 8016faa:	461c      	mov	r4, r3
 8016fac:	4613      	mov	r3, r2
 8016fae:	cb07      	ldmia	r3!, {r0, r1, r2}
 8016fb0:	6020      	str	r0, [r4, #0]
 8016fb2:	6061      	str	r1, [r4, #4]
 8016fb4:	60a2      	str	r2, [r4, #8]
 8016fb6:	881b      	ldrh	r3, [r3, #0]
 8016fb8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8016fba:	687b      	ldr	r3, [r7, #4]
 8016fbc:	33cc      	adds	r3, #204	; 0xcc
 8016fbe:	4aad      	ldr	r2, [pc, #692]	; (8017274 <createProblem+0x163cc>)
 8016fc0:	6810      	ldr	r0, [r2, #0]
 8016fc2:	6018      	str	r0, [r3, #0]
			break;
 8016fc4:	f003 bcb6 	b.w	801a934 <createProblem+0x19a8c>
		case 72 :
			strcpy(p->name,"MAFFEI");
 8016fc8:	687b      	ldr	r3, [r7, #4]
 8016fca:	337c      	adds	r3, #124	; 0x7c
 8016fcc:	4aaa      	ldr	r2, [pc, #680]	; (8017278 <createProblem+0x163d0>)
 8016fce:	6810      	ldr	r0, [r2, #0]
 8016fd0:	6018      	str	r0, [r3, #0]
 8016fd2:	8891      	ldrh	r1, [r2, #4]
 8016fd4:	7992      	ldrb	r2, [r2, #6]
 8016fd6:	8099      	strh	r1, [r3, #4]
 8016fd8:	719a      	strb	r2, [r3, #6]
			p->moveSize = 5;
 8016fda:	687b      	ldr	r3, [r7, #4]
 8016fdc:	2205      	movs	r2, #5
 8016fde:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,A,E,D");
 8016fe0:	687b      	ldr	r3, [r7, #4]
 8016fe2:	3340      	adds	r3, #64	; 0x40
 8016fe4:	49a5      	ldr	r1, [pc, #660]	; (801727c <createProblem+0x163d4>)
 8016fe6:	461a      	mov	r2, r3
 8016fe8:	460b      	mov	r3, r1
 8016fea:	cb03      	ldmia	r3!, {r0, r1}
 8016fec:	6010      	str	r0, [r2, #0]
 8016fee:	6051      	str	r1, [r2, #4]
 8016ff0:	881b      	ldrh	r3, [r3, #0]
 8016ff2:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,12,14,8,18");
 8016ff4:	687b      	ldr	r3, [r7, #4]
 8016ff6:	3304      	adds	r3, #4
 8016ff8:	4aa1      	ldr	r2, [pc, #644]	; (8017280 <createProblem+0x163d8>)
 8016ffa:	461c      	mov	r4, r3
 8016ffc:	4613      	mov	r3, r2
 8016ffe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017000:	6020      	str	r0, [r4, #0]
 8017002:	6061      	str	r1, [r4, #4]
 8017004:	60a2      	str	r2, [r4, #8]
 8017006:	781b      	ldrb	r3, [r3, #0]
 8017008:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 801700a:	687b      	ldr	r3, [r7, #4]
 801700c:	33d8      	adds	r3, #216	; 0xd8
 801700e:	499d      	ldr	r1, [pc, #628]	; (8017284 <createProblem+0x163dc>)
 8017010:	461a      	mov	r2, r3
 8017012:	460b      	mov	r3, r1
 8017014:	cb03      	ldmia	r3!, {r0, r1}
 8017016:	6010      	str	r0, [r2, #0]
 8017018:	6051      	str	r1, [r2, #4]
 801701a:	881b      	ldrh	r3, [r3, #0]
 801701c:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C");
 801701e:	687b      	ldr	r3, [r7, #4]
 8017020:	33cc      	adds	r3, #204	; 0xcc
 8017022:	4a99      	ldr	r2, [pc, #612]	; (8017288 <createProblem+0x163e0>)
 8017024:	8811      	ldrh	r1, [r2, #0]
 8017026:	7892      	ldrb	r2, [r2, #2]
 8017028:	8019      	strh	r1, [r3, #0]
 801702a:	709a      	strb	r2, [r3, #2]
			break;
 801702c:	f003 bc82 	b.w	801a934 <createProblem+0x19a8c>
		case 720 :
			strcpy(p->name,"BLACKBOARD");
 8017030:	687b      	ldr	r3, [r7, #4]
 8017032:	337c      	adds	r3, #124	; 0x7c
 8017034:	4995      	ldr	r1, [pc, #596]	; (801728c <createProblem+0x163e4>)
 8017036:	461a      	mov	r2, r3
 8017038:	460b      	mov	r3, r1
 801703a:	cb03      	ldmia	r3!, {r0, r1}
 801703c:	6010      	str	r0, [r2, #0]
 801703e:	6051      	str	r1, [r2, #4]
 8017040:	8819      	ldrh	r1, [r3, #0]
 8017042:	789b      	ldrb	r3, [r3, #2]
 8017044:	8111      	strh	r1, [r2, #8]
 8017046:	7293      	strb	r3, [r2, #10]
			p->moveSize = 10;
 8017048:	687b      	ldr	r3, [r7, #4]
 801704a:	220a      	movs	r2, #10
 801704c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,C,H,G,K,J,K,H,G,D");
 801704e:	687b      	ldr	r3, [r7, #4]
 8017050:	3340      	adds	r3, #64	; 0x40
 8017052:	4a8f      	ldr	r2, [pc, #572]	; (8017290 <createProblem+0x163e8>)
 8017054:	461d      	mov	r5, r3
 8017056:	4614      	mov	r4, r2
 8017058:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801705a:	6028      	str	r0, [r5, #0]
 801705c:	6069      	str	r1, [r5, #4]
 801705e:	60aa      	str	r2, [r5, #8]
 8017060:	60eb      	str	r3, [r5, #12]
 8017062:	6820      	ldr	r0, [r4, #0]
 8017064:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"6,5,5,6,9,13,16,16,17,18");
 8017066:	687b      	ldr	r3, [r7, #4]
 8017068:	3304      	adds	r3, #4
 801706a:	4a8a      	ldr	r2, [pc, #552]	; (8017294 <createProblem+0x163ec>)
 801706c:	461d      	mov	r5, r3
 801706e:	4614      	mov	r4, r2
 8017070:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017072:	6028      	str	r0, [r5, #0]
 8017074:	6069      	str	r1, [r5, #4]
 8017076:	60aa      	str	r2, [r5, #8]
 8017078:	60eb      	str	r3, [r5, #12]
 801707a:	cc03      	ldmia	r4!, {r0, r1}
 801707c:	6128      	str	r0, [r5, #16]
 801707e:	6169      	str	r1, [r5, #20]
 8017080:	7823      	ldrb	r3, [r4, #0]
 8017082:	762b      	strb	r3, [r5, #24]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,e");
 8017084:	687b      	ldr	r3, [r7, #4]
 8017086:	33d8      	adds	r3, #216	; 0xd8
 8017088:	4a83      	ldr	r2, [pc, #524]	; (8017298 <createProblem+0x163f0>)
 801708a:	461d      	mov	r5, r3
 801708c:	4614      	mov	r4, r2
 801708e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017090:	6028      	str	r0, [r5, #0]
 8017092:	6069      	str	r1, [r5, #4]
 8017094:	60aa      	str	r2, [r5, #8]
 8017096:	60eb      	str	r3, [r5, #12]
 8017098:	6820      	ldr	r0, [r4, #0]
 801709a:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "7A");
 801709c:	687b      	ldr	r3, [r7, #4]
 801709e:	33cc      	adds	r3, #204	; 0xcc
 80170a0:	4a7e      	ldr	r2, [pc, #504]	; (801729c <createProblem+0x163f4>)
 80170a2:	8811      	ldrh	r1, [r2, #0]
 80170a4:	7892      	ldrb	r2, [r2, #2]
 80170a6:	8019      	strh	r1, [r3, #0]
 80170a8:	709a      	strb	r2, [r3, #2]
			break;
 80170aa:	f003 bc43 	b.w	801a934 <createProblem+0x19a8c>
		case 721 :
			strcpy(p->name,"BLACK 1");
 80170ae:	687b      	ldr	r3, [r7, #4]
 80170b0:	337c      	adds	r3, #124	; 0x7c
 80170b2:	497b      	ldr	r1, [pc, #492]	; (80172a0 <createProblem+0x163f8>)
 80170b4:	461a      	mov	r2, r3
 80170b6:	460b      	mov	r3, r1
 80170b8:	cb03      	ldmia	r3!, {r0, r1}
 80170ba:	6010      	str	r0, [r2, #0]
 80170bc:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 80170be:	687b      	ldr	r3, [r7, #4]
 80170c0:	2207      	movs	r2, #7
 80170c2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"D,E,G,B,B,A,D");
 80170c4:	687b      	ldr	r3, [r7, #4]
 80170c6:	3340      	adds	r3, #64	; 0x40
 80170c8:	4a76      	ldr	r2, [pc, #472]	; (80172a4 <createProblem+0x163fc>)
 80170ca:	461c      	mov	r4, r3
 80170cc:	4613      	mov	r3, r2
 80170ce:	cb07      	ldmia	r3!, {r0, r1, r2}
 80170d0:	6020      	str	r0, [r4, #0]
 80170d2:	6061      	str	r1, [r4, #4]
 80170d4:	60a2      	str	r2, [r4, #8]
 80170d6:	881b      	ldrh	r3, [r3, #0]
 80170d8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"7,8,4,10,12,14,18");
 80170da:	687b      	ldr	r3, [r7, #4]
 80170dc:	3304      	adds	r3, #4
 80170de:	4a72      	ldr	r2, [pc, #456]	; (80172a8 <createProblem+0x16400>)
 80170e0:	461d      	mov	r5, r3
 80170e2:	4614      	mov	r4, r2
 80170e4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80170e6:	6028      	str	r0, [r5, #0]
 80170e8:	6069      	str	r1, [r5, #4]
 80170ea:	60aa      	str	r2, [r5, #8]
 80170ec:	60eb      	str	r3, [r5, #12]
 80170ee:	8823      	ldrh	r3, [r4, #0]
 80170f0:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "d,d,s,d,d,d,e");
 80170f2:	687b      	ldr	r3, [r7, #4]
 80170f4:	33d8      	adds	r3, #216	; 0xd8
 80170f6:	4a6d      	ldr	r2, [pc, #436]	; (80172ac <createProblem+0x16404>)
 80170f8:	461c      	mov	r4, r3
 80170fa:	4613      	mov	r3, r2
 80170fc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80170fe:	6020      	str	r0, [r4, #0]
 8017100:	6061      	str	r1, [r4, #4]
 8017102:	60a2      	str	r2, [r4, #8]
 8017104:	881b      	ldrh	r3, [r3, #0]
 8017106:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8017108:	687b      	ldr	r3, [r7, #4]
 801710a:	33cc      	adds	r3, #204	; 0xcc
 801710c:	4a59      	ldr	r2, [pc, #356]	; (8017274 <createProblem+0x163cc>)
 801710e:	6810      	ldr	r0, [r2, #0]
 8017110:	6018      	str	r0, [r3, #0]
			break;
 8017112:	f003 bc0f 	b.w	801a934 <createProblem+0x19a8c>
		case 722 :
			strcpy(p->name,"BLACK 1.1");
 8017116:	687b      	ldr	r3, [r7, #4]
 8017118:	337c      	adds	r3, #124	; 0x7c
 801711a:	4965      	ldr	r1, [pc, #404]	; (80172b0 <createProblem+0x16408>)
 801711c:	461a      	mov	r2, r3
 801711e:	460b      	mov	r3, r1
 8017120:	cb03      	ldmia	r3!, {r0, r1}
 8017122:	6010      	str	r0, [r2, #0]
 8017124:	6051      	str	r1, [r2, #4]
 8017126:	881b      	ldrh	r3, [r3, #0]
 8017128:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 801712a:	687b      	ldr	r3, [r7, #4]
 801712c:	2207      	movs	r2, #7
 801712e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,K,H,I,E,D");
 8017130:	687b      	ldr	r3, [r7, #4]
 8017132:	3340      	adds	r3, #64	; 0x40
 8017134:	4a5f      	ldr	r2, [pc, #380]	; (80172b4 <createProblem+0x1640c>)
 8017136:	461c      	mov	r4, r3
 8017138:	4613      	mov	r3, r2
 801713a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801713c:	6020      	str	r0, [r4, #0]
 801713e:	6061      	str	r1, [r4, #4]
 8017140:	60a2      	str	r2, [r4, #8]
 8017142:	881b      	ldrh	r3, [r3, #0]
 8017144:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,9,12,14,14,18");
 8017146:	687b      	ldr	r3, [r7, #4]
 8017148:	3304      	adds	r3, #4
 801714a:	4a5b      	ldr	r2, [pc, #364]	; (80172b8 <createProblem+0x16410>)
 801714c:	461d      	mov	r5, r3
 801714e:	4614      	mov	r4, r2
 8017150:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017152:	6028      	str	r0, [r5, #0]
 8017154:	6069      	str	r1, [r5, #4]
 8017156:	60aa      	str	r2, [r5, #8]
 8017158:	60eb      	str	r3, [r5, #12]
 801715a:	8823      	ldrh	r3, [r4, #0]
 801715c:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 801715e:	687b      	ldr	r3, [r7, #4]
 8017160:	33d8      	adds	r3, #216	; 0xd8
 8017162:	4a43      	ldr	r2, [pc, #268]	; (8017270 <createProblem+0x163c8>)
 8017164:	461c      	mov	r4, r3
 8017166:	4613      	mov	r3, r2
 8017168:	cb07      	ldmia	r3!, {r0, r1, r2}
 801716a:	6020      	str	r0, [r4, #0]
 801716c:	6061      	str	r1, [r4, #4]
 801716e:	60a2      	str	r2, [r4, #8]
 8017170:	881b      	ldrh	r3, [r3, #0]
 8017172:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8017174:	687b      	ldr	r3, [r7, #4]
 8017176:	33cc      	adds	r3, #204	; 0xcc
 8017178:	4a48      	ldr	r2, [pc, #288]	; (801729c <createProblem+0x163f4>)
 801717a:	8811      	ldrh	r1, [r2, #0]
 801717c:	7892      	ldrb	r2, [r2, #2]
 801717e:	8019      	strh	r1, [r3, #0]
 8017180:	709a      	strb	r2, [r3, #2]
			break;
 8017182:	f003 bbd7 	b.w	801a934 <createProblem+0x19a8c>
		case 723 :
			strcpy(p->name,"BLACK HORSE");
 8017186:	687b      	ldr	r3, [r7, #4]
 8017188:	337c      	adds	r3, #124	; 0x7c
 801718a:	4a4c      	ldr	r2, [pc, #304]	; (80172bc <createProblem+0x16414>)
 801718c:	461c      	mov	r4, r3
 801718e:	4613      	mov	r3, r2
 8017190:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017192:	6020      	str	r0, [r4, #0]
 8017194:	6061      	str	r1, [r4, #4]
 8017196:	60a2      	str	r2, [r4, #8]
			p->moveSize = 7;
 8017198:	687b      	ldr	r3, [r7, #4]
 801719a:	2207      	movs	r2, #7
 801719c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,K,H,D,E,A,I");
 801719e:	687b      	ldr	r3, [r7, #4]
 80171a0:	3340      	adds	r3, #64	; 0x40
 80171a2:	4a47      	ldr	r2, [pc, #284]	; (80172c0 <createProblem+0x16418>)
 80171a4:	461c      	mov	r4, r3
 80171a6:	4613      	mov	r3, r2
 80171a8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80171aa:	6020      	str	r0, [r4, #0]
 80171ac:	6061      	str	r1, [r4, #4]
 80171ae:	60a2      	str	r2, [r4, #8]
 80171b0:	881b      	ldrh	r3, [r3, #0]
 80171b2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,12,15,16,18,14");
 80171b4:	687b      	ldr	r3, [r7, #4]
 80171b6:	3304      	adds	r3, #4
 80171b8:	4a42      	ldr	r2, [pc, #264]	; (80172c4 <createProblem+0x1641c>)
 80171ba:	461d      	mov	r5, r3
 80171bc:	4614      	mov	r4, r2
 80171be:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80171c0:	6028      	str	r0, [r5, #0]
 80171c2:	6069      	str	r1, [r5, #4]
 80171c4:	60aa      	str	r2, [r5, #8]
 80171c6:	60eb      	str	r3, [r5, #12]
 80171c8:	8823      	ldrh	r3, [r4, #0]
 80171ca:	78a2      	ldrb	r2, [r4, #2]
 80171cc:	822b      	strh	r3, [r5, #16]
 80171ce:	4613      	mov	r3, r2
 80171d0:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,e,d");
 80171d2:	687b      	ldr	r3, [r7, #4]
 80171d4:	33d8      	adds	r3, #216	; 0xd8
 80171d6:	4a3c      	ldr	r2, [pc, #240]	; (80172c8 <createProblem+0x16420>)
 80171d8:	461c      	mov	r4, r3
 80171da:	4613      	mov	r3, r2
 80171dc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80171de:	6020      	str	r0, [r4, #0]
 80171e0:	6061      	str	r1, [r4, #4]
 80171e2:	60a2      	str	r2, [r4, #8]
 80171e4:	881b      	ldrh	r3, [r3, #0]
 80171e6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 80171e8:	687b      	ldr	r3, [r7, #4]
 80171ea:	33cc      	adds	r3, #204	; 0xcc
 80171ec:	4a37      	ldr	r2, [pc, #220]	; (80172cc <createProblem+0x16424>)
 80171ee:	6810      	ldr	r0, [r2, #0]
 80171f0:	6018      	str	r0, [r3, #0]
			break;
 80171f2:	f003 bb9f 	b.w	801a934 <createProblem+0x19a8c>
		case 724 :
			strcpy(p->name,"MURPHY STINKS");
 80171f6:	687b      	ldr	r3, [r7, #4]
 80171f8:	337c      	adds	r3, #124	; 0x7c
 80171fa:	4a35      	ldr	r2, [pc, #212]	; (80172d0 <createProblem+0x16428>)
 80171fc:	461c      	mov	r4, r3
 80171fe:	4613      	mov	r3, r2
 8017200:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017202:	6020      	str	r0, [r4, #0]
 8017204:	6061      	str	r1, [r4, #4]
 8017206:	60a2      	str	r2, [r4, #8]
 8017208:	881b      	ldrh	r3, [r3, #0]
 801720a:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 801720c:	687b      	ldr	r3, [r7, #4]
 801720e:	2207      	movs	r2, #7
 8017210:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,H,I,J,I,J,J");
 8017212:	687b      	ldr	r3, [r7, #4]
 8017214:	3340      	adds	r3, #64	; 0x40
 8017216:	4a2f      	ldr	r2, [pc, #188]	; (80172d4 <createProblem+0x1642c>)
 8017218:	461c      	mov	r4, r3
 801721a:	4613      	mov	r3, r2
 801721c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801721e:	6020      	str	r0, [r4, #0]
 8017220:	6061      	str	r1, [r4, #4]
 8017222:	60a2      	str	r2, [r4, #8]
 8017224:	881b      	ldrh	r3, [r3, #0]
 8017226:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"8,10,14,12,18,7,5");
 8017228:	687b      	ldr	r3, [r7, #4]
 801722a:	3304      	adds	r3, #4
 801722c:	4a2a      	ldr	r2, [pc, #168]	; (80172d8 <createProblem+0x16430>)
 801722e:	461d      	mov	r5, r3
 8017230:	4614      	mov	r4, r2
 8017232:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017234:	6028      	str	r0, [r5, #0]
 8017236:	6069      	str	r1, [r5, #4]
 8017238:	60aa      	str	r2, [r5, #8]
 801723a:	60eb      	str	r3, [r5, #12]
 801723c:	8823      	ldrh	r3, [r4, #0]
 801723e:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "d,d,d,d,e,d,s");
 8017240:	687b      	ldr	r3, [r7, #4]
 8017242:	33d8      	adds	r3, #216	; 0xd8
 8017244:	4a25      	ldr	r2, [pc, #148]	; (80172dc <createProblem+0x16434>)
 8017246:	461c      	mov	r4, r3
 8017248:	4613      	mov	r3, r2
 801724a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801724c:	6020      	str	r0, [r4, #0]
 801724e:	6061      	str	r1, [r4, #4]
 8017250:	60a2      	str	r2, [r4, #8]
 8017252:	881b      	ldrh	r3, [r3, #0]
 8017254:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8017256:	687b      	ldr	r3, [r7, #4]
 8017258:	33cc      	adds	r3, #204	; 0xcc
 801725a:	4a06      	ldr	r2, [pc, #24]	; (8017274 <createProblem+0x163cc>)
 801725c:	6810      	ldr	r0, [r2, #0]
 801725e:	6018      	str	r0, [r3, #0]
			break;
 8017260:	f003 bb68 	b.w	801a934 <createProblem+0x19a8c>
 8017264:	08028880 	.word	0x08028880
 8017268:	08028890 	.word	0x08028890
 801726c:	080249c4 	.word	0x080249c4
 8017270:	08020820 	.word	0x08020820
 8017274:	08020830 	.word	0x08020830
 8017278:	080288a0 	.word	0x080288a0
 801727c:	080288a8 	.word	0x080288a8
 8017280:	080288b4 	.word	0x080288b4
 8017284:	080208a0 	.word	0x080208a0
 8017288:	080208f0 	.word	0x080208f0
 801728c:	080288c4 	.word	0x080288c4
 8017290:	080288d0 	.word	0x080288d0
 8017294:	080288e4 	.word	0x080288e4
 8017298:	08020b7c 	.word	0x08020b7c
 801729c:	08020874 	.word	0x08020874
 80172a0:	08028900 	.word	0x08028900
 80172a4:	08028908 	.word	0x08028908
 80172a8:	08028918 	.word	0x08028918
 80172ac:	0802892c 	.word	0x0802892c
 80172b0:	0802893c 	.word	0x0802893c
 80172b4:	08028948 	.word	0x08028948
 80172b8:	08028958 	.word	0x08028958
 80172bc:	0802896c 	.word	0x0802896c
 80172c0:	08028978 	.word	0x08028978
 80172c4:	08028988 	.word	0x08028988
 80172c8:	08027a90 	.word	0x08027a90
 80172cc:	08020928 	.word	0x08020928
 80172d0:	0802899c 	.word	0x0802899c
 80172d4:	080289ac 	.word	0x080289ac
 80172d8:	080289bc 	.word	0x080289bc
 80172dc:	080289d0 	.word	0x080289d0
		case 725 :
			strcpy(p->name,"BLACKTOP");
 80172e0:	687b      	ldr	r3, [r7, #4]
 80172e2:	337c      	adds	r3, #124	; 0x7c
 80172e4:	49a5      	ldr	r1, [pc, #660]	; (801757c <createProblem+0x166d4>)
 80172e6:	461a      	mov	r2, r3
 80172e8:	460b      	mov	r3, r1
 80172ea:	cb03      	ldmia	r3!, {r0, r1}
 80172ec:	6010      	str	r0, [r2, #0]
 80172ee:	6051      	str	r1, [r2, #4]
 80172f0:	781b      	ldrb	r3, [r3, #0]
 80172f2:	7213      	strb	r3, [r2, #8]
			p->moveSize = 6;
 80172f4:	687b      	ldr	r3, [r7, #4]
 80172f6:	2206      	movs	r2, #6
 80172f8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,K,I,I,D,D");
 80172fa:	687b      	ldr	r3, [r7, #4]
 80172fc:	3340      	adds	r3, #64	; 0x40
 80172fe:	4aa0      	ldr	r2, [pc, #640]	; (8017580 <createProblem+0x166d8>)
 8017300:	461c      	mov	r4, r3
 8017302:	4613      	mov	r3, r2
 8017304:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017306:	6020      	str	r0, [r4, #0]
 8017308:	6061      	str	r1, [r4, #4]
 801730a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,9,14,11,18");
 801730c:	687b      	ldr	r3, [r7, #4]
 801730e:	3304      	adds	r3, #4
 8017310:	4a9c      	ldr	r2, [pc, #624]	; (8017584 <createProblem+0x166dc>)
 8017312:	461c      	mov	r4, r3
 8017314:	4613      	mov	r3, r2
 8017316:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017318:	6020      	str	r0, [r4, #0]
 801731a:	6061      	str	r1, [r4, #4]
 801731c:	60a2      	str	r2, [r4, #8]
 801731e:	881a      	ldrh	r2, [r3, #0]
 8017320:	789b      	ldrb	r3, [r3, #2]
 8017322:	81a2      	strh	r2, [r4, #12]
 8017324:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8017326:	687b      	ldr	r3, [r7, #4]
 8017328:	33d8      	adds	r3, #216	; 0xd8
 801732a:	4a97      	ldr	r2, [pc, #604]	; (8017588 <createProblem+0x166e0>)
 801732c:	461c      	mov	r4, r3
 801732e:	4613      	mov	r3, r2
 8017330:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017332:	6020      	str	r0, [r4, #0]
 8017334:	6061      	str	r1, [r4, #4]
 8017336:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8017338:	687b      	ldr	r3, [r7, #4]
 801733a:	33cc      	adds	r3, #204	; 0xcc
 801733c:	4a93      	ldr	r2, [pc, #588]	; (801758c <createProblem+0x166e4>)
 801733e:	8811      	ldrh	r1, [r2, #0]
 8017340:	7892      	ldrb	r2, [r2, #2]
 8017342:	8019      	strh	r1, [r3, #0]
 8017344:	709a      	strb	r2, [r3, #2]
			break;
 8017346:	f003 baf5 	b.w	801a934 <createProblem+0x19a8c>
		case 726 :
			strcpy(p->name,"WHO NEEDS DR. GREG");
 801734a:	687b      	ldr	r3, [r7, #4]
 801734c:	337c      	adds	r3, #124	; 0x7c
 801734e:	4a90      	ldr	r2, [pc, #576]	; (8017590 <createProblem+0x166e8>)
 8017350:	461d      	mov	r5, r3
 8017352:	4614      	mov	r4, r2
 8017354:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017356:	6028      	str	r0, [r5, #0]
 8017358:	6069      	str	r1, [r5, #4]
 801735a:	60aa      	str	r2, [r5, #8]
 801735c:	60eb      	str	r3, [r5, #12]
 801735e:	8823      	ldrh	r3, [r4, #0]
 8017360:	78a2      	ldrb	r2, [r4, #2]
 8017362:	822b      	strh	r3, [r5, #16]
 8017364:	4613      	mov	r3, r2
 8017366:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 7;
 8017368:	687b      	ldr	r3, [r7, #4]
 801736a:	2207      	movs	r2, #7
 801736c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,J,E,D,G,H,D");
 801736e:	687b      	ldr	r3, [r7, #4]
 8017370:	3340      	adds	r3, #64	; 0x40
 8017372:	4a88      	ldr	r2, [pc, #544]	; (8017594 <createProblem+0x166ec>)
 8017374:	461c      	mov	r4, r3
 8017376:	4613      	mov	r3, r2
 8017378:	cb07      	ldmia	r3!, {r0, r1, r2}
 801737a:	6020      	str	r0, [r4, #0]
 801737c:	6061      	str	r1, [r4, #4]
 801737e:	60a2      	str	r2, [r4, #8]
 8017380:	881b      	ldrh	r3, [r3, #0]
 8017382:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,14,18,9,12,11");
 8017384:	687b      	ldr	r3, [r7, #4]
 8017386:	3304      	adds	r3, #4
 8017388:	4a83      	ldr	r2, [pc, #524]	; (8017598 <createProblem+0x166f0>)
 801738a:	461d      	mov	r5, r3
 801738c:	4614      	mov	r4, r2
 801738e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017390:	6028      	str	r0, [r5, #0]
 8017392:	6069      	str	r1, [r5, #4]
 8017394:	60aa      	str	r2, [r5, #8]
 8017396:	60eb      	str	r3, [r5, #12]
 8017398:	8823      	ldrh	r3, [r4, #0]
 801739a:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,e,d,d,d");
 801739c:	687b      	ldr	r3, [r7, #4]
 801739e:	33d8      	adds	r3, #216	; 0xd8
 80173a0:	4a7e      	ldr	r2, [pc, #504]	; (801759c <createProblem+0x166f4>)
 80173a2:	461c      	mov	r4, r3
 80173a4:	4613      	mov	r3, r2
 80173a6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80173a8:	6020      	str	r0, [r4, #0]
 80173aa:	6061      	str	r1, [r4, #4]
 80173ac:	60a2      	str	r2, [r4, #8]
 80173ae:	881b      	ldrh	r3, [r3, #0]
 80173b0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 80173b2:	687b      	ldr	r3, [r7, #4]
 80173b4:	33cc      	adds	r3, #204	; 0xcc
 80173b6:	4a7a      	ldr	r2, [pc, #488]	; (80175a0 <createProblem+0x166f8>)
 80173b8:	6810      	ldr	r0, [r2, #0]
 80173ba:	6018      	str	r0, [r3, #0]
			break;
 80173bc:	f003 baba 	b.w	801a934 <createProblem+0x19a8c>
		case 727 :
			strcpy(p->name,"Z3GZAG");
 80173c0:	687b      	ldr	r3, [r7, #4]
 80173c2:	337c      	adds	r3, #124	; 0x7c
 80173c4:	4a77      	ldr	r2, [pc, #476]	; (80175a4 <createProblem+0x166fc>)
 80173c6:	6810      	ldr	r0, [r2, #0]
 80173c8:	6018      	str	r0, [r3, #0]
 80173ca:	8891      	ldrh	r1, [r2, #4]
 80173cc:	7992      	ldrb	r2, [r2, #6]
 80173ce:	8099      	strh	r1, [r3, #4]
 80173d0:	719a      	strb	r2, [r3, #6]
			p->moveSize = 9;
 80173d2:	687b      	ldr	r3, [r7, #4]
 80173d4:	2209      	movs	r2, #9
 80173d6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,H,H,I,G,G,D,E");
 80173d8:	687b      	ldr	r3, [r7, #4]
 80173da:	3340      	adds	r3, #64	; 0x40
 80173dc:	4a72      	ldr	r2, [pc, #456]	; (80175a8 <createProblem+0x16700>)
 80173de:	461d      	mov	r5, r3
 80173e0:	4614      	mov	r4, r2
 80173e2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80173e4:	6028      	str	r0, [r5, #0]
 80173e6:	6069      	str	r1, [r5, #4]
 80173e8:	60aa      	str	r2, [r5, #8]
 80173ea:	60eb      	str	r3, [r5, #12]
 80173ec:	8823      	ldrh	r3, [r4, #0]
 80173ee:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,8,10,12,14,15,17,18,6");
 80173f0:	687b      	ldr	r3, [r7, #4]
 80173f2:	3304      	adds	r3, #4
 80173f4:	4a6d      	ldr	r2, [pc, #436]	; (80175ac <createProblem+0x16704>)
 80173f6:	461d      	mov	r5, r3
 80173f8:	4614      	mov	r4, r2
 80173fa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80173fc:	6028      	str	r0, [r5, #0]
 80173fe:	6069      	str	r1, [r5, #4]
 8017400:	60aa      	str	r2, [r5, #8]
 8017402:	60eb      	str	r3, [r5, #12]
 8017404:	cc03      	ldmia	r4!, {r0, r1}
 8017406:	6128      	str	r0, [r5, #16]
 8017408:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e,s");
 801740a:	687b      	ldr	r3, [r7, #4]
 801740c:	33d8      	adds	r3, #216	; 0xd8
 801740e:	4a68      	ldr	r2, [pc, #416]	; (80175b0 <createProblem+0x16708>)
 8017410:	461d      	mov	r5, r3
 8017412:	4614      	mov	r4, r2
 8017414:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017416:	6028      	str	r0, [r5, #0]
 8017418:	6069      	str	r1, [r5, #4]
 801741a:	60aa      	str	r2, [r5, #8]
 801741c:	60eb      	str	r3, [r5, #12]
 801741e:	8823      	ldrh	r3, [r4, #0]
 8017420:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8017422:	687b      	ldr	r3, [r7, #4]
 8017424:	33cc      	adds	r3, #204	; 0xcc
 8017426:	4a63      	ldr	r2, [pc, #396]	; (80175b4 <createProblem+0x1670c>)
 8017428:	6810      	ldr	r0, [r2, #0]
 801742a:	6018      	str	r0, [r3, #0]
			break;
 801742c:	f003 ba82 	b.w	801a934 <createProblem+0x19a8c>
		case 728 :
			strcpy(p->name,"BLACK MIRROR");
 8017430:	687b      	ldr	r3, [r7, #4]
 8017432:	337c      	adds	r3, #124	; 0x7c
 8017434:	4a60      	ldr	r2, [pc, #384]	; (80175b8 <createProblem+0x16710>)
 8017436:	461c      	mov	r4, r3
 8017438:	4613      	mov	r3, r2
 801743a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801743c:	6020      	str	r0, [r4, #0]
 801743e:	6061      	str	r1, [r4, #4]
 8017440:	60a2      	str	r2, [r4, #8]
 8017442:	781b      	ldrb	r3, [r3, #0]
 8017444:	7323      	strb	r3, [r4, #12]
			p->moveSize = 8;
 8017446:	687b      	ldr	r3, [r7, #4]
 8017448:	2208      	movs	r2, #8
 801744a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,I,F,E,D,G,I");
 801744c:	687b      	ldr	r3, [r7, #4]
 801744e:	3340      	adds	r3, #64	; 0x40
 8017450:	4a5a      	ldr	r2, [pc, #360]	; (80175bc <createProblem+0x16714>)
 8017452:	461c      	mov	r4, r3
 8017454:	4615      	mov	r5, r2
 8017456:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8017458:	6020      	str	r0, [r4, #0]
 801745a:	6061      	str	r1, [r4, #4]
 801745c:	60a2      	str	r2, [r4, #8]
 801745e:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,9,11,12,15,17,18");
 8017460:	687b      	ldr	r3, [r7, #4]
 8017462:	3304      	adds	r3, #4
 8017464:	4a56      	ldr	r2, [pc, #344]	; (80175c0 <createProblem+0x16718>)
 8017466:	461d      	mov	r5, r3
 8017468:	4614      	mov	r4, r2
 801746a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801746c:	6028      	str	r0, [r5, #0]
 801746e:	6069      	str	r1, [r5, #4]
 8017470:	60aa      	str	r2, [r5, #8]
 8017472:	60eb      	str	r3, [r5, #12]
 8017474:	6820      	ldr	r0, [r4, #0]
 8017476:	6128      	str	r0, [r5, #16]
 8017478:	7923      	ldrb	r3, [r4, #4]
 801747a:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 801747c:	687b      	ldr	r3, [r7, #4]
 801747e:	33d8      	adds	r3, #216	; 0xd8
 8017480:	4a50      	ldr	r2, [pc, #320]	; (80175c4 <createProblem+0x1671c>)
 8017482:	461c      	mov	r4, r3
 8017484:	4615      	mov	r5, r2
 8017486:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8017488:	6020      	str	r0, [r4, #0]
 801748a:	6061      	str	r1, [r4, #4]
 801748c:	60a2      	str	r2, [r4, #8]
 801748e:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7C");
 8017490:	687b      	ldr	r3, [r7, #4]
 8017492:	33cc      	adds	r3, #204	; 0xcc
 8017494:	4a4c      	ldr	r2, [pc, #304]	; (80175c8 <createProblem+0x16720>)
 8017496:	8811      	ldrh	r1, [r2, #0]
 8017498:	7892      	ldrb	r2, [r2, #2]
 801749a:	8019      	strh	r1, [r3, #0]
 801749c:	709a      	strb	r2, [r3, #2]
			break;
 801749e:	f003 ba49 	b.w	801a934 <createProblem+0x19a8c>
		case 729 :
			strcpy(p->name,"ESSEK");
 80174a2:	687b      	ldr	r3, [r7, #4]
 80174a4:	337c      	adds	r3, #124	; 0x7c
 80174a6:	4a49      	ldr	r2, [pc, #292]	; (80175cc <createProblem+0x16724>)
 80174a8:	6810      	ldr	r0, [r2, #0]
 80174aa:	6018      	str	r0, [r3, #0]
 80174ac:	8892      	ldrh	r2, [r2, #4]
 80174ae:	809a      	strh	r2, [r3, #4]
			p->moveSize = 8;
 80174b0:	687b      	ldr	r3, [r7, #4]
 80174b2:	2208      	movs	r2, #8
 80174b4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,E,G,G,G,D");
 80174b6:	687b      	ldr	r3, [r7, #4]
 80174b8:	3340      	adds	r3, #64	; 0x40
 80174ba:	4a45      	ldr	r2, [pc, #276]	; (80175d0 <createProblem+0x16728>)
 80174bc:	461c      	mov	r4, r3
 80174be:	4615      	mov	r5, r2
 80174c0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80174c2:	6020      	str	r0, [r4, #0]
 80174c4:	6061      	str	r1, [r4, #4]
 80174c6:	60a2      	str	r2, [r4, #8]
 80174c8:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,10,12,14,15,17,18");
 80174ca:	687b      	ldr	r3, [r7, #4]
 80174cc:	3304      	adds	r3, #4
 80174ce:	4a41      	ldr	r2, [pc, #260]	; (80175d4 <createProblem+0x1672c>)
 80174d0:	461d      	mov	r5, r3
 80174d2:	4614      	mov	r4, r2
 80174d4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80174d6:	6028      	str	r0, [r5, #0]
 80174d8:	6069      	str	r1, [r5, #4]
 80174da:	60aa      	str	r2, [r5, #8]
 80174dc:	60eb      	str	r3, [r5, #12]
 80174de:	6820      	ldr	r0, [r4, #0]
 80174e0:	6128      	str	r0, [r5, #16]
 80174e2:	88a3      	ldrh	r3, [r4, #4]
 80174e4:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 80174e6:	687b      	ldr	r3, [r7, #4]
 80174e8:	33d8      	adds	r3, #216	; 0xd8
 80174ea:	4a3b      	ldr	r2, [pc, #236]	; (80175d8 <createProblem+0x16730>)
 80174ec:	461c      	mov	r4, r3
 80174ee:	4615      	mov	r5, r2
 80174f0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80174f2:	6020      	str	r0, [r4, #0]
 80174f4:	6061      	str	r1, [r4, #4]
 80174f6:	60a2      	str	r2, [r4, #8]
 80174f8:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 80174fa:	687b      	ldr	r3, [r7, #4]
 80174fc:	33cc      	adds	r3, #204	; 0xcc
 80174fe:	4a37      	ldr	r2, [pc, #220]	; (80175dc <createProblem+0x16734>)
 8017500:	6810      	ldr	r0, [r2, #0]
 8017502:	6018      	str	r0, [r3, #0]
			break;
 8017504:	f003 ba16 	b.w	801a934 <createProblem+0x19a8c>
		case 73 :
			strcpy(p->name,"LEOCREMAFLANDERS");
 8017508:	687b      	ldr	r3, [r7, #4]
 801750a:	337c      	adds	r3, #124	; 0x7c
 801750c:	4a34      	ldr	r2, [pc, #208]	; (80175e0 <createProblem+0x16738>)
 801750e:	461d      	mov	r5, r3
 8017510:	4614      	mov	r4, r2
 8017512:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017514:	6028      	str	r0, [r5, #0]
 8017516:	6069      	str	r1, [r5, #4]
 8017518:	60aa      	str	r2, [r5, #8]
 801751a:	60eb      	str	r3, [r5, #12]
 801751c:	7823      	ldrb	r3, [r4, #0]
 801751e:	742b      	strb	r3, [r5, #16]
			p->moveSize = 7;
 8017520:	687b      	ldr	r3, [r7, #4]
 8017522:	2207      	movs	r2, #7
 8017524:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,B,C,E,F,H,I");
 8017526:	687b      	ldr	r3, [r7, #4]
 8017528:	3340      	adds	r3, #64	; 0x40
 801752a:	4a2e      	ldr	r2, [pc, #184]	; (80175e4 <createProblem+0x1673c>)
 801752c:	461c      	mov	r4, r3
 801752e:	4613      	mov	r3, r2
 8017530:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017532:	6020      	str	r0, [r4, #0]
 8017534:	6061      	str	r1, [r4, #4]
 8017536:	60a2      	str	r2, [r4, #8]
 8017538:	881b      	ldrh	r3, [r3, #0]
 801753a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"12,6,5,9,13,12,18");
 801753c:	687b      	ldr	r3, [r7, #4]
 801753e:	3304      	adds	r3, #4
 8017540:	4a29      	ldr	r2, [pc, #164]	; (80175e8 <createProblem+0x16740>)
 8017542:	461d      	mov	r5, r3
 8017544:	4614      	mov	r4, r2
 8017546:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017548:	6028      	str	r0, [r5, #0]
 801754a:	6069      	str	r1, [r5, #4]
 801754c:	60aa      	str	r2, [r5, #8]
 801754e:	60eb      	str	r3, [r5, #12]
 8017550:	8823      	ldrh	r3, [r4, #0]
 8017552:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "d,s,s,d,d,d,e");
 8017554:	687b      	ldr	r3, [r7, #4]
 8017556:	33d8      	adds	r3, #216	; 0xd8
 8017558:	4a24      	ldr	r2, [pc, #144]	; (80175ec <createProblem+0x16744>)
 801755a:	461c      	mov	r4, r3
 801755c:	4613      	mov	r3, r2
 801755e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017560:	6020      	str	r0, [r4, #0]
 8017562:	6061      	str	r1, [r4, #4]
 8017564:	60a2      	str	r2, [r4, #8]
 8017566:	881b      	ldrh	r3, [r3, #0]
 8017568:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7C");
 801756a:	687b      	ldr	r3, [r7, #4]
 801756c:	33cc      	adds	r3, #204	; 0xcc
 801756e:	4a16      	ldr	r2, [pc, #88]	; (80175c8 <createProblem+0x16720>)
 8017570:	8811      	ldrh	r1, [r2, #0]
 8017572:	7892      	ldrb	r2, [r2, #2]
 8017574:	8019      	strh	r1, [r3, #0]
 8017576:	709a      	strb	r2, [r3, #2]
			break;
 8017578:	f003 b9dc 	b.w	801a934 <createProblem+0x19a8c>
 801757c:	080289e0 	.word	0x080289e0
 8017580:	080289ec 	.word	0x080289ec
 8017584:	080289f8 	.word	0x080289f8
 8017588:	0802091c 	.word	0x0802091c
 801758c:	08020874 	.word	0x08020874
 8017590:	08028a08 	.word	0x08028a08
 8017594:	08028a1c 	.word	0x08028a1c
 8017598:	08028a2c 	.word	0x08028a2c
 801759c:	08028a40 	.word	0x08028a40
 80175a0:	080209a4 	.word	0x080209a4
 80175a4:	08028a50 	.word	0x08028a50
 80175a8:	08028a58 	.word	0x08028a58
 80175ac:	08028a6c 	.word	0x08028a6c
 80175b0:	08028a84 	.word	0x08028a84
 80175b4:	08020830 	.word	0x08020830
 80175b8:	08028a98 	.word	0x08028a98
 80175bc:	08028aa8 	.word	0x08028aa8
 80175c0:	08028ab8 	.word	0x08028ab8
 80175c4:	080209d8 	.word	0x080209d8
 80175c8:	08020b0c 	.word	0x08020b0c
 80175cc:	08028ad0 	.word	0x08028ad0
 80175d0:	08028ad8 	.word	0x08028ad8
 80175d4:	08028ae8 	.word	0x08028ae8
 80175d8:	08020a4c 	.word	0x08020a4c
 80175dc:	08020928 	.word	0x08020928
 80175e0:	08028b00 	.word	0x08028b00
 80175e4:	08028b14 	.word	0x08028b14
 80175e8:	08028b24 	.word	0x08028b24
 80175ec:	08023bac 	.word	0x08023bac
		case 730 :
			strcpy(p->name,"WALLABY");
 80175f0:	687b      	ldr	r3, [r7, #4]
 80175f2:	337c      	adds	r3, #124	; 0x7c
 80175f4:	49b9      	ldr	r1, [pc, #740]	; (80178dc <createProblem+0x16a34>)
 80175f6:	461a      	mov	r2, r3
 80175f8:	460b      	mov	r3, r1
 80175fa:	cb03      	ldmia	r3!, {r0, r1}
 80175fc:	6010      	str	r0, [r2, #0]
 80175fe:	6051      	str	r1, [r2, #4]
			p->moveSize = 9;
 8017600:	687b      	ldr	r3, [r7, #4]
 8017602:	2209      	movs	r2, #9
 8017604:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,E,F,E,J,I,H,I");
 8017606:	687b      	ldr	r3, [r7, #4]
 8017608:	3340      	adds	r3, #64	; 0x40
 801760a:	4ab5      	ldr	r2, [pc, #724]	; (80178e0 <createProblem+0x16a38>)
 801760c:	461d      	mov	r5, r3
 801760e:	4614      	mov	r4, r2
 8017610:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017612:	6028      	str	r0, [r5, #0]
 8017614:	6069      	str	r1, [r5, #4]
 8017616:	60aa      	str	r2, [r5, #8]
 8017618:	60eb      	str	r3, [r5, #12]
 801761a:	8823      	ldrh	r3, [r4, #0]
 801761c:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"6,6,8,11,12,7,14,16,18");
 801761e:	687b      	ldr	r3, [r7, #4]
 8017620:	3304      	adds	r3, #4
 8017622:	4ab0      	ldr	r2, [pc, #704]	; (80178e4 <createProblem+0x16a3c>)
 8017624:	461c      	mov	r4, r3
 8017626:	4615      	mov	r5, r2
 8017628:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801762a:	6020      	str	r0, [r4, #0]
 801762c:	6061      	str	r1, [r4, #4]
 801762e:	60a2      	str	r2, [r4, #8]
 8017630:	60e3      	str	r3, [r4, #12]
 8017632:	6828      	ldr	r0, [r5, #0]
 8017634:	6120      	str	r0, [r4, #16]
 8017636:	88ab      	ldrh	r3, [r5, #4]
 8017638:	79aa      	ldrb	r2, [r5, #6]
 801763a:	82a3      	strh	r3, [r4, #20]
 801763c:	4613      	mov	r3, r2
 801763e:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 8017640:	687b      	ldr	r3, [r7, #4]
 8017642:	33d8      	adds	r3, #216	; 0xd8
 8017644:	4aa8      	ldr	r2, [pc, #672]	; (80178e8 <createProblem+0x16a40>)
 8017646:	461d      	mov	r5, r3
 8017648:	4614      	mov	r4, r2
 801764a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801764c:	6028      	str	r0, [r5, #0]
 801764e:	6069      	str	r1, [r5, #4]
 8017650:	60aa      	str	r2, [r5, #8]
 8017652:	60eb      	str	r3, [r5, #12]
 8017654:	8823      	ldrh	r3, [r4, #0]
 8017656:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6C");
 8017658:	687b      	ldr	r3, [r7, #4]
 801765a:	33cc      	adds	r3, #204	; 0xcc
 801765c:	4aa3      	ldr	r2, [pc, #652]	; (80178ec <createProblem+0x16a44>)
 801765e:	8811      	ldrh	r1, [r2, #0]
 8017660:	7892      	ldrb	r2, [r2, #2]
 8017662:	8019      	strh	r1, [r3, #0]
 8017664:	709a      	strb	r2, [r3, #2]
			break;
 8017666:	f003 b965 	b.w	801a934 <createProblem+0x19a8c>
		case 731 :
			strcpy(p->name,"SMALL HOT 3 SPLENDA");
 801766a:	687b      	ldr	r3, [r7, #4]
 801766c:	337c      	adds	r3, #124	; 0x7c
 801766e:	4aa0      	ldr	r2, [pc, #640]	; (80178f0 <createProblem+0x16a48>)
 8017670:	461d      	mov	r5, r3
 8017672:	4614      	mov	r4, r2
 8017674:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017676:	6028      	str	r0, [r5, #0]
 8017678:	6069      	str	r1, [r5, #4]
 801767a:	60aa      	str	r2, [r5, #8]
 801767c:	60eb      	str	r3, [r5, #12]
 801767e:	6820      	ldr	r0, [r4, #0]
 8017680:	6128      	str	r0, [r5, #16]
			p->moveSize = 6;
 8017682:	687b      	ldr	r3, [r7, #4]
 8017684:	2206      	movs	r2, #6
 8017686:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,D,I,E,D");
 8017688:	687b      	ldr	r3, [r7, #4]
 801768a:	3340      	adds	r3, #64	; 0x40
 801768c:	4a99      	ldr	r2, [pc, #612]	; (80178f4 <createProblem+0x16a4c>)
 801768e:	461c      	mov	r4, r3
 8017690:	4613      	mov	r3, r2
 8017692:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017694:	6020      	str	r0, [r4, #0]
 8017696:	6061      	str	r1, [r4, #4]
 8017698:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,10,11,14,16,18");
 801769a:	687b      	ldr	r3, [r7, #4]
 801769c:	3304      	adds	r3, #4
 801769e:	4a96      	ldr	r2, [pc, #600]	; (80178f8 <createProblem+0x16a50>)
 80176a0:	461d      	mov	r5, r3
 80176a2:	4614      	mov	r4, r2
 80176a4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80176a6:	6028      	str	r0, [r5, #0]
 80176a8:	6069      	str	r1, [r5, #4]
 80176aa:	60aa      	str	r2, [r5, #8]
 80176ac:	60eb      	str	r3, [r5, #12]
 80176ae:	7823      	ldrb	r3, [r4, #0]
 80176b0:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80176b2:	687b      	ldr	r3, [r7, #4]
 80176b4:	33d8      	adds	r3, #216	; 0xd8
 80176b6:	4a91      	ldr	r2, [pc, #580]	; (80178fc <createProblem+0x16a54>)
 80176b8:	461c      	mov	r4, r3
 80176ba:	4613      	mov	r3, r2
 80176bc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80176be:	6020      	str	r0, [r4, #0]
 80176c0:	6061      	str	r1, [r4, #4]
 80176c2:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 80176c4:	687b      	ldr	r3, [r7, #4]
 80176c6:	33cc      	adds	r3, #204	; 0xcc
 80176c8:	4a8d      	ldr	r2, [pc, #564]	; (8017900 <createProblem+0x16a58>)
 80176ca:	6810      	ldr	r0, [r2, #0]
 80176cc:	6018      	str	r0, [r3, #0]
			break;
 80176ce:	f003 b931 	b.w	801a934 <createProblem+0x19a8c>
		case 732 :
			strcpy(p->name,"THE GRANARY");
 80176d2:	687b      	ldr	r3, [r7, #4]
 80176d4:	337c      	adds	r3, #124	; 0x7c
 80176d6:	4a8b      	ldr	r2, [pc, #556]	; (8017904 <createProblem+0x16a5c>)
 80176d8:	461c      	mov	r4, r3
 80176da:	4613      	mov	r3, r2
 80176dc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80176de:	6020      	str	r0, [r4, #0]
 80176e0:	6061      	str	r1, [r4, #4]
 80176e2:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 80176e4:	687b      	ldr	r3, [r7, #4]
 80176e6:	2206      	movs	r2, #6
 80176e8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,F,C,D,D");
 80176ea:	687b      	ldr	r3, [r7, #4]
 80176ec:	3340      	adds	r3, #64	; 0x40
 80176ee:	4a86      	ldr	r2, [pc, #536]	; (8017908 <createProblem+0x16a60>)
 80176f0:	461c      	mov	r4, r3
 80176f2:	4613      	mov	r3, r2
 80176f4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80176f6:	6020      	str	r0, [r4, #0]
 80176f8:	6061      	str	r1, [r4, #4]
 80176fa:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,11,13,15,18");
 80176fc:	687b      	ldr	r3, [r7, #4]
 80176fe:	3304      	adds	r3, #4
 8017700:	4a82      	ldr	r2, [pc, #520]	; (801790c <createProblem+0x16a64>)
 8017702:	461c      	mov	r4, r3
 8017704:	4615      	mov	r5, r2
 8017706:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8017708:	6020      	str	r0, [r4, #0]
 801770a:	6061      	str	r1, [r4, #4]
 801770c:	60a2      	str	r2, [r4, #8]
 801770e:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8017710:	687b      	ldr	r3, [r7, #4]
 8017712:	33d8      	adds	r3, #216	; 0xd8
 8017714:	4a7e      	ldr	r2, [pc, #504]	; (8017910 <createProblem+0x16a68>)
 8017716:	461c      	mov	r4, r3
 8017718:	4613      	mov	r3, r2
 801771a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801771c:	6020      	str	r0, [r4, #0]
 801771e:	6061      	str	r1, [r4, #4]
 8017720:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8017722:	687b      	ldr	r3, [r7, #4]
 8017724:	33cc      	adds	r3, #204	; 0xcc
 8017726:	4a7b      	ldr	r2, [pc, #492]	; (8017914 <createProblem+0x16a6c>)
 8017728:	8811      	ldrh	r1, [r2, #0]
 801772a:	7892      	ldrb	r2, [r2, #2]
 801772c:	8019      	strh	r1, [r3, #0]
 801772e:	709a      	strb	r2, [r3, #2]
			break;
 8017730:	f003 b900 	b.w	801a934 <createProblem+0x19a8c>
		case 733 :
			strcpy(p->name,"BREATHE");
 8017734:	687b      	ldr	r3, [r7, #4]
 8017736:	337c      	adds	r3, #124	; 0x7c
 8017738:	4977      	ldr	r1, [pc, #476]	; (8017918 <createProblem+0x16a70>)
 801773a:	461a      	mov	r2, r3
 801773c:	460b      	mov	r3, r1
 801773e:	cb03      	ldmia	r3!, {r0, r1}
 8017740:	6010      	str	r0, [r2, #0]
 8017742:	6051      	str	r1, [r2, #4]
			p->moveSize = 10;
 8017744:	687b      	ldr	r3, [r7, #4]
 8017746:	220a      	movs	r2, #10
 8017748:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,E,E,H,C,B,F,G,I,J");
 801774a:	687b      	ldr	r3, [r7, #4]
 801774c:	3340      	adds	r3, #64	; 0x40
 801774e:	4a73      	ldr	r2, [pc, #460]	; (801791c <createProblem+0x16a74>)
 8017750:	461d      	mov	r5, r3
 8017752:	4614      	mov	r4, r2
 8017754:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017756:	6028      	str	r0, [r5, #0]
 8017758:	6069      	str	r1, [r5, #4]
 801775a:	60aa      	str	r2, [r5, #8]
 801775c:	60eb      	str	r3, [r5, #12]
 801775e:	6820      	ldr	r0, [r4, #0]
 8017760:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"8,9,12,5,5,6,13,15,18,12");
 8017762:	687b      	ldr	r3, [r7, #4]
 8017764:	3304      	adds	r3, #4
 8017766:	4a6e      	ldr	r2, [pc, #440]	; (8017920 <createProblem+0x16a78>)
 8017768:	461d      	mov	r5, r3
 801776a:	4614      	mov	r4, r2
 801776c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801776e:	6028      	str	r0, [r5, #0]
 8017770:	6069      	str	r1, [r5, #4]
 8017772:	60aa      	str	r2, [r5, #8]
 8017774:	60eb      	str	r3, [r5, #12]
 8017776:	cc03      	ldmia	r4!, {r0, r1}
 8017778:	6128      	str	r0, [r5, #16]
 801777a:	6169      	str	r1, [r5, #20]
 801777c:	7823      	ldrb	r3, [r4, #0]
 801777e:	762b      	strb	r3, [r5, #24]
			strcpy(p->startFinish, "d,d,d,d,s,s,d,d,e,d");
 8017780:	687b      	ldr	r3, [r7, #4]
 8017782:	33d8      	adds	r3, #216	; 0xd8
 8017784:	4a67      	ldr	r2, [pc, #412]	; (8017924 <createProblem+0x16a7c>)
 8017786:	461d      	mov	r5, r3
 8017788:	4614      	mov	r4, r2
 801778a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801778c:	6028      	str	r0, [r5, #0]
 801778e:	6069      	str	r1, [r5, #4]
 8017790:	60aa      	str	r2, [r5, #8]
 8017792:	60eb      	str	r3, [r5, #12]
 8017794:	6820      	ldr	r0, [r4, #0]
 8017796:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "7A");
 8017798:	687b      	ldr	r3, [r7, #4]
 801779a:	33cc      	adds	r3, #204	; 0xcc
 801779c:	4a5d      	ldr	r2, [pc, #372]	; (8017914 <createProblem+0x16a6c>)
 801779e:	8811      	ldrh	r1, [r2, #0]
 80177a0:	7892      	ldrb	r2, [r2, #2]
 80177a2:	8019      	strh	r1, [r3, #0]
 80177a4:	709a      	strb	r2, [r3, #2]
			break;
 80177a6:	f003 b8c5 	b.w	801a934 <createProblem+0x19a8c>
		case 734 :
			strcpy(p->name,"BLACK GECKO");
 80177aa:	687b      	ldr	r3, [r7, #4]
 80177ac:	337c      	adds	r3, #124	; 0x7c
 80177ae:	4a5e      	ldr	r2, [pc, #376]	; (8017928 <createProblem+0x16a80>)
 80177b0:	461c      	mov	r4, r3
 80177b2:	4613      	mov	r3, r2
 80177b4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80177b6:	6020      	str	r0, [r4, #0]
 80177b8:	6061      	str	r1, [r4, #4]
 80177ba:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 80177bc:	687b      	ldr	r3, [r7, #4]
 80177be:	2206      	movs	r2, #6
 80177c0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,H,C,E,D");
 80177c2:	687b      	ldr	r3, [r7, #4]
 80177c4:	3340      	adds	r3, #64	; 0x40
 80177c6:	4a59      	ldr	r2, [pc, #356]	; (801792c <createProblem+0x16a84>)
 80177c8:	461c      	mov	r4, r3
 80177ca:	4613      	mov	r3, r2
 80177cc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80177ce:	6020      	str	r0, [r4, #0]
 80177d0:	6061      	str	r1, [r4, #4]
 80177d2:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,10,13,14,18");
 80177d4:	687b      	ldr	r3, [r7, #4]
 80177d6:	3304      	adds	r3, #4
 80177d8:	4a55      	ldr	r2, [pc, #340]	; (8017930 <createProblem+0x16a88>)
 80177da:	461c      	mov	r4, r3
 80177dc:	4615      	mov	r5, r2
 80177de:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80177e0:	6020      	str	r0, [r4, #0]
 80177e2:	6061      	str	r1, [r4, #4]
 80177e4:	60a2      	str	r2, [r4, #8]
 80177e6:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 80177e8:	687b      	ldr	r3, [r7, #4]
 80177ea:	33d8      	adds	r3, #216	; 0xd8
 80177ec:	4a48      	ldr	r2, [pc, #288]	; (8017910 <createProblem+0x16a68>)
 80177ee:	461c      	mov	r4, r3
 80177f0:	4613      	mov	r3, r2
 80177f2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80177f4:	6020      	str	r0, [r4, #0]
 80177f6:	6061      	str	r1, [r4, #4]
 80177f8:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 80177fa:	687b      	ldr	r3, [r7, #4]
 80177fc:	33cc      	adds	r3, #204	; 0xcc
 80177fe:	4a4d      	ldr	r2, [pc, #308]	; (8017934 <createProblem+0x16a8c>)
 8017800:	6810      	ldr	r0, [r2, #0]
 8017802:	6018      	str	r0, [r3, #0]
			break;
 8017804:	f003 b896 	b.w	801a934 <createProblem+0x19a8c>
		case 735 :
			strcpy(p->name,"TAFFO");
 8017808:	687b      	ldr	r3, [r7, #4]
 801780a:	337c      	adds	r3, #124	; 0x7c
 801780c:	4a4a      	ldr	r2, [pc, #296]	; (8017938 <createProblem+0x16a90>)
 801780e:	6810      	ldr	r0, [r2, #0]
 8017810:	6018      	str	r0, [r3, #0]
 8017812:	8892      	ldrh	r2, [r2, #4]
 8017814:	809a      	strh	r2, [r3, #4]
			p->moveSize = 6;
 8017816:	687b      	ldr	r3, [r7, #4]
 8017818:	2206      	movs	r2, #6
 801781a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,C,C,D,A");
 801781c:	687b      	ldr	r3, [r7, #4]
 801781e:	3340      	adds	r3, #64	; 0x40
 8017820:	4a46      	ldr	r2, [pc, #280]	; (801793c <createProblem+0x16a94>)
 8017822:	461c      	mov	r4, r3
 8017824:	4613      	mov	r3, r2
 8017826:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017828:	6020      	str	r0, [r4, #0]
 801782a:	6061      	str	r1, [r4, #4]
 801782c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,9,8,13,15,18");
 801782e:	687b      	ldr	r3, [r7, #4]
 8017830:	3304      	adds	r3, #4
 8017832:	4a43      	ldr	r2, [pc, #268]	; (8017940 <createProblem+0x16a98>)
 8017834:	461c      	mov	r4, r3
 8017836:	4613      	mov	r3, r2
 8017838:	cb07      	ldmia	r3!, {r0, r1, r2}
 801783a:	6020      	str	r0, [r4, #0]
 801783c:	6061      	str	r1, [r4, #4]
 801783e:	60a2      	str	r2, [r4, #8]
 8017840:	881a      	ldrh	r2, [r3, #0]
 8017842:	789b      	ldrb	r3, [r3, #2]
 8017844:	81a2      	strh	r2, [r4, #12]
 8017846:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8017848:	687b      	ldr	r3, [r7, #4]
 801784a:	33d8      	adds	r3, #216	; 0xd8
 801784c:	4a2b      	ldr	r2, [pc, #172]	; (80178fc <createProblem+0x16a54>)
 801784e:	461c      	mov	r4, r3
 8017850:	4613      	mov	r3, r2
 8017852:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017854:	6020      	str	r0, [r4, #0]
 8017856:	6061      	str	r1, [r4, #4]
 8017858:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 801785a:	687b      	ldr	r3, [r7, #4]
 801785c:	33cc      	adds	r3, #204	; 0xcc
 801785e:	4a28      	ldr	r2, [pc, #160]	; (8017900 <createProblem+0x16a58>)
 8017860:	6810      	ldr	r0, [r2, #0]
 8017862:	6018      	str	r0, [r3, #0]
			break;
 8017864:	f003 b866 	b.w	801a934 <createProblem+0x19a8c>
		case 736 :
			strcpy(p->name,"POCKET FULL OF DREAMS");
 8017868:	687b      	ldr	r3, [r7, #4]
 801786a:	337c      	adds	r3, #124	; 0x7c
 801786c:	4a35      	ldr	r2, [pc, #212]	; (8017944 <createProblem+0x16a9c>)
 801786e:	461d      	mov	r5, r3
 8017870:	4614      	mov	r4, r2
 8017872:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017874:	6028      	str	r0, [r5, #0]
 8017876:	6069      	str	r1, [r5, #4]
 8017878:	60aa      	str	r2, [r5, #8]
 801787a:	60eb      	str	r3, [r5, #12]
 801787c:	6820      	ldr	r0, [r4, #0]
 801787e:	6128      	str	r0, [r5, #16]
 8017880:	88a3      	ldrh	r3, [r4, #4]
 8017882:	82ab      	strh	r3, [r5, #20]
			p->moveSize = 8;
 8017884:	687b      	ldr	r3, [r7, #4]
 8017886:	2208      	movs	r2, #8
 8017888:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,B,B,A,E,D");
 801788a:	687b      	ldr	r3, [r7, #4]
 801788c:	3340      	adds	r3, #64	; 0x40
 801788e:	4a2e      	ldr	r2, [pc, #184]	; (8017948 <createProblem+0x16aa0>)
 8017890:	461c      	mov	r4, r3
 8017892:	4615      	mov	r5, r2
 8017894:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8017896:	6020      	str	r0, [r4, #0]
 8017898:	6061      	str	r1, [r4, #4]
 801789a:	60a2      	str	r2, [r4, #8]
 801789c:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,9,10,12,14,14,18");
 801789e:	687b      	ldr	r3, [r7, #4]
 80178a0:	3304      	adds	r3, #4
 80178a2:	4a2a      	ldr	r2, [pc, #168]	; (801794c <createProblem+0x16aa4>)
 80178a4:	461d      	mov	r5, r3
 80178a6:	4614      	mov	r4, r2
 80178a8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80178aa:	6028      	str	r0, [r5, #0]
 80178ac:	6069      	str	r1, [r5, #4]
 80178ae:	60aa      	str	r2, [r5, #8]
 80178b0:	60eb      	str	r3, [r5, #12]
 80178b2:	6820      	ldr	r0, [r4, #0]
 80178b4:	6128      	str	r0, [r5, #16]
 80178b6:	7923      	ldrb	r3, [r4, #4]
 80178b8:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 80178ba:	687b      	ldr	r3, [r7, #4]
 80178bc:	33d8      	adds	r3, #216	; 0xd8
 80178be:	4a24      	ldr	r2, [pc, #144]	; (8017950 <createProblem+0x16aa8>)
 80178c0:	461c      	mov	r4, r3
 80178c2:	4615      	mov	r5, r2
 80178c4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80178c6:	6020      	str	r0, [r4, #0]
 80178c8:	6061      	str	r1, [r4, #4]
 80178ca:	60a2      	str	r2, [r4, #8]
 80178cc:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80178ce:	687b      	ldr	r3, [r7, #4]
 80178d0:	33cc      	adds	r3, #204	; 0xcc
 80178d2:	4a0b      	ldr	r2, [pc, #44]	; (8017900 <createProblem+0x16a58>)
 80178d4:	6810      	ldr	r0, [r2, #0]
 80178d6:	6018      	str	r0, [r3, #0]
			break;
 80178d8:	f003 b82c 	b.w	801a934 <createProblem+0x19a8c>
 80178dc:	08028b38 	.word	0x08028b38
 80178e0:	08028b40 	.word	0x08028b40
 80178e4:	08028b54 	.word	0x08028b54
 80178e8:	08020dfc 	.word	0x08020dfc
 80178ec:	080208f0 	.word	0x080208f0
 80178f0:	08028b6c 	.word	0x08028b6c
 80178f4:	08028b80 	.word	0x08028b80
 80178f8:	08022c24 	.word	0x08022c24
 80178fc:	0802091c 	.word	0x0802091c
 8017900:	08020830 	.word	0x08020830
 8017904:	08028b8c 	.word	0x08028b8c
 8017908:	08028b98 	.word	0x08028b98
 801790c:	08028ba4 	.word	0x08028ba4
 8017910:	08020e90 	.word	0x08020e90
 8017914:	08020874 	.word	0x08020874
 8017918:	08028bb4 	.word	0x08028bb4
 801791c:	08028bbc 	.word	0x08028bbc
 8017920:	08028bd0 	.word	0x08028bd0
 8017924:	08028bec 	.word	0x08028bec
 8017928:	08028c00 	.word	0x08028c00
 801792c:	08028c0c 	.word	0x08028c0c
 8017930:	08028c18 	.word	0x08028c18
 8017934:	08020928 	.word	0x08020928
 8017938:	08028c28 	.word	0x08028c28
 801793c:	08028c30 	.word	0x08028c30
 8017940:	08028c3c 	.word	0x08028c3c
 8017944:	08028c4c 	.word	0x08028c4c
 8017948:	08028c64 	.word	0x08028c64
 801794c:	08028c74 	.word	0x08028c74
 8017950:	080209d8 	.word	0x080209d8
		case 737 :
			strcpy(p->name,"LADYBUG CLEAN");
 8017954:	687b      	ldr	r3, [r7, #4]
 8017956:	337c      	adds	r3, #124	; 0x7c
 8017958:	4ab7      	ldr	r2, [pc, #732]	; (8017c38 <createProblem+0x16d90>)
 801795a:	461c      	mov	r4, r3
 801795c:	4613      	mov	r3, r2
 801795e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017960:	6020      	str	r0, [r4, #0]
 8017962:	6061      	str	r1, [r4, #4]
 8017964:	60a2      	str	r2, [r4, #8]
 8017966:	881b      	ldrh	r3, [r3, #0]
 8017968:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 801796a:	687b      	ldr	r3, [r7, #4]
 801796c:	2206      	movs	r2, #6
 801796e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,H,F,C,D");
 8017970:	687b      	ldr	r3, [r7, #4]
 8017972:	3340      	adds	r3, #64	; 0x40
 8017974:	4ab1      	ldr	r2, [pc, #708]	; (8017c3c <createProblem+0x16d94>)
 8017976:	461c      	mov	r4, r3
 8017978:	4613      	mov	r3, r2
 801797a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801797c:	6020      	str	r0, [r4, #0]
 801797e:	6061      	str	r1, [r4, #4]
 8017980:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,10,11,13,18");
 8017982:	687b      	ldr	r3, [r7, #4]
 8017984:	3304      	adds	r3, #4
 8017986:	4aae      	ldr	r2, [pc, #696]	; (8017c40 <createProblem+0x16d98>)
 8017988:	461c      	mov	r4, r3
 801798a:	4615      	mov	r5, r2
 801798c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801798e:	6020      	str	r0, [r4, #0]
 8017990:	6061      	str	r1, [r4, #4]
 8017992:	60a2      	str	r2, [r4, #8]
 8017994:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8017996:	687b      	ldr	r3, [r7, #4]
 8017998:	33d8      	adds	r3, #216	; 0xd8
 801799a:	4aaa      	ldr	r2, [pc, #680]	; (8017c44 <createProblem+0x16d9c>)
 801799c:	461c      	mov	r4, r3
 801799e:	4613      	mov	r3, r2
 80179a0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80179a2:	6020      	str	r0, [r4, #0]
 80179a4:	6061      	str	r1, [r4, #4]
 80179a6:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 80179a8:	687b      	ldr	r3, [r7, #4]
 80179aa:	33cc      	adds	r3, #204	; 0xcc
 80179ac:	4aa6      	ldr	r2, [pc, #664]	; (8017c48 <createProblem+0x16da0>)
 80179ae:	6810      	ldr	r0, [r2, #0]
 80179b0:	6018      	str	r0, [r3, #0]
			break;
 80179b2:	f002 bfbf 	b.w	801a934 <createProblem+0x19a8c>
		case 738 :
			strcpy(p->name,"BLACK BLOCK X");
 80179b6:	687b      	ldr	r3, [r7, #4]
 80179b8:	337c      	adds	r3, #124	; 0x7c
 80179ba:	4aa4      	ldr	r2, [pc, #656]	; (8017c4c <createProblem+0x16da4>)
 80179bc:	461c      	mov	r4, r3
 80179be:	4613      	mov	r3, r2
 80179c0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80179c2:	6020      	str	r0, [r4, #0]
 80179c4:	6061      	str	r1, [r4, #4]
 80179c6:	60a2      	str	r2, [r4, #8]
 80179c8:	881b      	ldrh	r3, [r3, #0]
 80179ca:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 8;
 80179cc:	687b      	ldr	r3, [r7, #4]
 80179ce:	2208      	movs	r2, #8
 80179d0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,H,I,G,I,E");
 80179d2:	687b      	ldr	r3, [r7, #4]
 80179d4:	3340      	adds	r3, #64	; 0x40
 80179d6:	4a9e      	ldr	r2, [pc, #632]	; (8017c50 <createProblem+0x16da8>)
 80179d8:	461c      	mov	r4, r3
 80179da:	4615      	mov	r5, r2
 80179dc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80179de:	6020      	str	r0, [r4, #0]
 80179e0:	6061      	str	r1, [r4, #4]
 80179e2:	60a2      	str	r2, [r4, #8]
 80179e4:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,10,12,14,17,18,6");
 80179e6:	687b      	ldr	r3, [r7, #4]
 80179e8:	3304      	adds	r3, #4
 80179ea:	4a9a      	ldr	r2, [pc, #616]	; (8017c54 <createProblem+0x16dac>)
 80179ec:	461d      	mov	r5, r3
 80179ee:	4614      	mov	r4, r2
 80179f0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80179f2:	6028      	str	r0, [r5, #0]
 80179f4:	6069      	str	r1, [r5, #4]
 80179f6:	60aa      	str	r2, [r5, #8]
 80179f8:	60eb      	str	r3, [r5, #12]
 80179fa:	6820      	ldr	r0, [r4, #0]
 80179fc:	6128      	str	r0, [r5, #16]
 80179fe:	7923      	ldrb	r3, [r4, #4]
 8017a00:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,e,s");
 8017a02:	687b      	ldr	r3, [r7, #4]
 8017a04:	33d8      	adds	r3, #216	; 0xd8
 8017a06:	4a94      	ldr	r2, [pc, #592]	; (8017c58 <createProblem+0x16db0>)
 8017a08:	461c      	mov	r4, r3
 8017a0a:	4615      	mov	r5, r2
 8017a0c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8017a0e:	6020      	str	r0, [r4, #0]
 8017a10:	6061      	str	r1, [r4, #4]
 8017a12:	60a2      	str	r2, [r4, #8]
 8017a14:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8017a16:	687b      	ldr	r3, [r7, #4]
 8017a18:	33cc      	adds	r3, #204	; 0xcc
 8017a1a:	4a90      	ldr	r2, [pc, #576]	; (8017c5c <createProblem+0x16db4>)
 8017a1c:	8811      	ldrh	r1, [r2, #0]
 8017a1e:	7892      	ldrb	r2, [r2, #2]
 8017a20:	8019      	strh	r1, [r3, #0]
 8017a22:	709a      	strb	r2, [r3, #2]
			break;
 8017a24:	f002 bf86 	b.w	801a934 <createProblem+0x19a8c>
		case 739 :
			strcpy(p->name,"INVERTIDOSO");
 8017a28:	687b      	ldr	r3, [r7, #4]
 8017a2a:	337c      	adds	r3, #124	; 0x7c
 8017a2c:	4a8c      	ldr	r2, [pc, #560]	; (8017c60 <createProblem+0x16db8>)
 8017a2e:	461c      	mov	r4, r3
 8017a30:	4613      	mov	r3, r2
 8017a32:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017a34:	6020      	str	r0, [r4, #0]
 8017a36:	6061      	str	r1, [r4, #4]
 8017a38:	60a2      	str	r2, [r4, #8]
			p->moveSize = 5;
 8017a3a:	687b      	ldr	r3, [r7, #4]
 8017a3c:	2205      	movs	r2, #5
 8017a3e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,I,F,I");
 8017a40:	687b      	ldr	r3, [r7, #4]
 8017a42:	3340      	adds	r3, #64	; 0x40
 8017a44:	4987      	ldr	r1, [pc, #540]	; (8017c64 <createProblem+0x16dbc>)
 8017a46:	461a      	mov	r2, r3
 8017a48:	460b      	mov	r3, r1
 8017a4a:	cb03      	ldmia	r3!, {r0, r1}
 8017a4c:	6010      	str	r0, [r2, #0]
 8017a4e:	6051      	str	r1, [r2, #4]
 8017a50:	881b      	ldrh	r3, [r3, #0]
 8017a52:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,8,9,13,18");
 8017a54:	687b      	ldr	r3, [r7, #4]
 8017a56:	3304      	adds	r3, #4
 8017a58:	4a83      	ldr	r2, [pc, #524]	; (8017c68 <createProblem+0x16dc0>)
 8017a5a:	461c      	mov	r4, r3
 8017a5c:	4613      	mov	r3, r2
 8017a5e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017a60:	6020      	str	r0, [r4, #0]
 8017a62:	6061      	str	r1, [r4, #4]
 8017a64:	60a2      	str	r2, [r4, #8]
			strcpy(p->startFinish, "s,d,d,d,e");
 8017a66:	687b      	ldr	r3, [r7, #4]
 8017a68:	33d8      	adds	r3, #216	; 0xd8
 8017a6a:	4980      	ldr	r1, [pc, #512]	; (8017c6c <createProblem+0x16dc4>)
 8017a6c:	461a      	mov	r2, r3
 8017a6e:	460b      	mov	r3, r1
 8017a70:	cb03      	ldmia	r3!, {r0, r1}
 8017a72:	6010      	str	r0, [r2, #0]
 8017a74:	6051      	str	r1, [r2, #4]
 8017a76:	881b      	ldrh	r3, [r3, #0]
 8017a78:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B");
 8017a7a:	687b      	ldr	r3, [r7, #4]
 8017a7c:	33cc      	adds	r3, #204	; 0xcc
 8017a7e:	4a7c      	ldr	r2, [pc, #496]	; (8017c70 <createProblem+0x16dc8>)
 8017a80:	8811      	ldrh	r1, [r2, #0]
 8017a82:	7892      	ldrb	r2, [r2, #2]
 8017a84:	8019      	strh	r1, [r3, #0]
 8017a86:	709a      	strb	r2, [r3, #2]
			break;
 8017a88:	f002 bf54 	b.w	801a934 <createProblem+0x19a8c>
		case 74 :
			strcpy(p->name,"TIA");
 8017a8c:	687b      	ldr	r3, [r7, #4]
 8017a8e:	337c      	adds	r3, #124	; 0x7c
 8017a90:	4a78      	ldr	r2, [pc, #480]	; (8017c74 <createProblem+0x16dcc>)
 8017a92:	6810      	ldr	r0, [r2, #0]
 8017a94:	6018      	str	r0, [r3, #0]
			p->moveSize = 7;
 8017a96:	687b      	ldr	r3, [r7, #4]
 8017a98:	2207      	movs	r2, #7
 8017a9a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,F,E,I,H,I");
 8017a9c:	687b      	ldr	r3, [r7, #4]
 8017a9e:	3340      	adds	r3, #64	; 0x40
 8017aa0:	4a75      	ldr	r2, [pc, #468]	; (8017c78 <createProblem+0x16dd0>)
 8017aa2:	461c      	mov	r4, r3
 8017aa4:	4613      	mov	r3, r2
 8017aa6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017aa8:	6020      	str	r0, [r4, #0]
 8017aaa:	6061      	str	r1, [r4, #4]
 8017aac:	60a2      	str	r2, [r4, #8]
 8017aae:	881b      	ldrh	r3, [r3, #0]
 8017ab0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,11,12,14,16,18");
 8017ab2:	687b      	ldr	r3, [r7, #4]
 8017ab4:	3304      	adds	r3, #4
 8017ab6:	4a71      	ldr	r2, [pc, #452]	; (8017c7c <createProblem+0x16dd4>)
 8017ab8:	461d      	mov	r5, r3
 8017aba:	4614      	mov	r4, r2
 8017abc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017abe:	6028      	str	r0, [r5, #0]
 8017ac0:	6069      	str	r1, [r5, #4]
 8017ac2:	60aa      	str	r2, [r5, #8]
 8017ac4:	60eb      	str	r3, [r5, #12]
 8017ac6:	8823      	ldrh	r3, [r4, #0]
 8017ac8:	78a2      	ldrb	r2, [r4, #2]
 8017aca:	822b      	strh	r3, [r5, #16]
 8017acc:	4613      	mov	r3, r2
 8017ace:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8017ad0:	687b      	ldr	r3, [r7, #4]
 8017ad2:	33d8      	adds	r3, #216	; 0xd8
 8017ad4:	4a6a      	ldr	r2, [pc, #424]	; (8017c80 <createProblem+0x16dd8>)
 8017ad6:	461c      	mov	r4, r3
 8017ad8:	4613      	mov	r3, r2
 8017ada:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017adc:	6020      	str	r0, [r4, #0]
 8017ade:	6061      	str	r1, [r4, #4]
 8017ae0:	60a2      	str	r2, [r4, #8]
 8017ae2:	881b      	ldrh	r3, [r3, #0]
 8017ae4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8017ae6:	687b      	ldr	r3, [r7, #4]
 8017ae8:	33cc      	adds	r3, #204	; 0xcc
 8017aea:	4a66      	ldr	r2, [pc, #408]	; (8017c84 <createProblem+0x16ddc>)
 8017aec:	6810      	ldr	r0, [r2, #0]
 8017aee:	6018      	str	r0, [r3, #0]
			break;
 8017af0:	f002 bf20 	b.w	801a934 <createProblem+0x19a8c>
		case 740 :
			strcpy(p->name,"TORCI SPALLA");
 8017af4:	687b      	ldr	r3, [r7, #4]
 8017af6:	337c      	adds	r3, #124	; 0x7c
 8017af8:	4a63      	ldr	r2, [pc, #396]	; (8017c88 <createProblem+0x16de0>)
 8017afa:	461c      	mov	r4, r3
 8017afc:	4613      	mov	r3, r2
 8017afe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017b00:	6020      	str	r0, [r4, #0]
 8017b02:	6061      	str	r1, [r4, #4]
 8017b04:	60a2      	str	r2, [r4, #8]
 8017b06:	781b      	ldrb	r3, [r3, #0]
 8017b08:	7323      	strb	r3, [r4, #12]
			p->moveSize = 8;
 8017b0a:	687b      	ldr	r3, [r7, #4]
 8017b0c:	2208      	movs	r2, #8
 8017b0e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,F,E,A,B,G,I");
 8017b10:	687b      	ldr	r3, [r7, #4]
 8017b12:	3340      	adds	r3, #64	; 0x40
 8017b14:	4a5d      	ldr	r2, [pc, #372]	; (8017c8c <createProblem+0x16de4>)
 8017b16:	461c      	mov	r4, r3
 8017b18:	4615      	mov	r5, r2
 8017b1a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8017b1c:	6020      	str	r0, [r4, #0]
 8017b1e:	6061      	str	r1, [r4, #4]
 8017b20:	60a2      	str	r2, [r4, #8]
 8017b22:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,10,11,12,14,15,17,18");
 8017b24:	687b      	ldr	r3, [r7, #4]
 8017b26:	3304      	adds	r3, #4
 8017b28:	4a59      	ldr	r2, [pc, #356]	; (8017c90 <createProblem+0x16de8>)
 8017b2a:	461c      	mov	r4, r3
 8017b2c:	4615      	mov	r5, r2
 8017b2e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8017b30:	6020      	str	r0, [r4, #0]
 8017b32:	6061      	str	r1, [r4, #4]
 8017b34:	60a2      	str	r2, [r4, #8]
 8017b36:	60e3      	str	r3, [r4, #12]
 8017b38:	6828      	ldr	r0, [r5, #0]
 8017b3a:	6120      	str	r0, [r4, #16]
 8017b3c:	88ab      	ldrh	r3, [r5, #4]
 8017b3e:	79aa      	ldrb	r2, [r5, #6]
 8017b40:	82a3      	strh	r3, [r4, #20]
 8017b42:	4613      	mov	r3, r2
 8017b44:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8017b46:	687b      	ldr	r3, [r7, #4]
 8017b48:	33d8      	adds	r3, #216	; 0xd8
 8017b4a:	4a52      	ldr	r2, [pc, #328]	; (8017c94 <createProblem+0x16dec>)
 8017b4c:	461c      	mov	r4, r3
 8017b4e:	4615      	mov	r5, r2
 8017b50:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8017b52:	6020      	str	r0, [r4, #0]
 8017b54:	6061      	str	r1, [r4, #4]
 8017b56:	60a2      	str	r2, [r4, #8]
 8017b58:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7B+");
 8017b5a:	687b      	ldr	r3, [r7, #4]
 8017b5c:	33cc      	adds	r3, #204	; 0xcc
 8017b5e:	4a4e      	ldr	r2, [pc, #312]	; (8017c98 <createProblem+0x16df0>)
 8017b60:	6810      	ldr	r0, [r2, #0]
 8017b62:	6018      	str	r0, [r3, #0]
			break;
 8017b64:	f002 bee6 	b.w	801a934 <createProblem+0x19a8c>
		case 741 :
			strcpy(p->name,"POALET");
 8017b68:	687b      	ldr	r3, [r7, #4]
 8017b6a:	337c      	adds	r3, #124	; 0x7c
 8017b6c:	4a4b      	ldr	r2, [pc, #300]	; (8017c9c <createProblem+0x16df4>)
 8017b6e:	6810      	ldr	r0, [r2, #0]
 8017b70:	6018      	str	r0, [r3, #0]
 8017b72:	8891      	ldrh	r1, [r2, #4]
 8017b74:	7992      	ldrb	r2, [r2, #6]
 8017b76:	8099      	strh	r1, [r3, #4]
 8017b78:	719a      	strb	r2, [r3, #6]
			p->moveSize = 7;
 8017b7a:	687b      	ldr	r3, [r7, #4]
 8017b7c:	2207      	movs	r2, #7
 8017b7e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,D,I,E,I,J,G");
 8017b80:	687b      	ldr	r3, [r7, #4]
 8017b82:	3340      	adds	r3, #64	; 0x40
 8017b84:	4a46      	ldr	r2, [pc, #280]	; (8017ca0 <createProblem+0x16df8>)
 8017b86:	461c      	mov	r4, r3
 8017b88:	4613      	mov	r3, r2
 8017b8a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017b8c:	6020      	str	r0, [r4, #0]
 8017b8e:	6061      	str	r1, [r4, #4]
 8017b90:	60a2      	str	r2, [r4, #8]
 8017b92:	881b      	ldrh	r3, [r3, #0]
 8017b94:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"10,11,14,16,18,7,6");
 8017b96:	687b      	ldr	r3, [r7, #4]
 8017b98:	3304      	adds	r3, #4
 8017b9a:	4a42      	ldr	r2, [pc, #264]	; (8017ca4 <createProblem+0x16dfc>)
 8017b9c:	461d      	mov	r5, r3
 8017b9e:	4614      	mov	r4, r2
 8017ba0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017ba2:	6028      	str	r0, [r5, #0]
 8017ba4:	6069      	str	r1, [r5, #4]
 8017ba6:	60aa      	str	r2, [r5, #8]
 8017ba8:	60eb      	str	r3, [r5, #12]
 8017baa:	8823      	ldrh	r3, [r4, #0]
 8017bac:	78a2      	ldrb	r2, [r4, #2]
 8017bae:	822b      	strh	r3, [r5, #16]
 8017bb0:	4613      	mov	r3, r2
 8017bb2:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "d,d,d,d,e,d,s");
 8017bb4:	687b      	ldr	r3, [r7, #4]
 8017bb6:	33d8      	adds	r3, #216	; 0xd8
 8017bb8:	4a3b      	ldr	r2, [pc, #236]	; (8017ca8 <createProblem+0x16e00>)
 8017bba:	461c      	mov	r4, r3
 8017bbc:	4613      	mov	r3, r2
 8017bbe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017bc0:	6020      	str	r0, [r4, #0]
 8017bc2:	6061      	str	r1, [r4, #4]
 8017bc4:	60a2      	str	r2, [r4, #8]
 8017bc6:	881b      	ldrh	r3, [r3, #0]
 8017bc8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8017bca:	687b      	ldr	r3, [r7, #4]
 8017bcc:	33cc      	adds	r3, #204	; 0xcc
 8017bce:	4a23      	ldr	r2, [pc, #140]	; (8017c5c <createProblem+0x16db4>)
 8017bd0:	8811      	ldrh	r1, [r2, #0]
 8017bd2:	7892      	ldrb	r2, [r2, #2]
 8017bd4:	8019      	strh	r1, [r3, #0]
 8017bd6:	709a      	strb	r2, [r3, #2]
			break;
 8017bd8:	f002 beac 	b.w	801a934 <createProblem+0x19a8c>
		case 742 :
			strcpy(p->name,"YURP");
 8017bdc:	687b      	ldr	r3, [r7, #4]
 8017bde:	337c      	adds	r3, #124	; 0x7c
 8017be0:	4a32      	ldr	r2, [pc, #200]	; (8017cac <createProblem+0x16e04>)
 8017be2:	6810      	ldr	r0, [r2, #0]
 8017be4:	6018      	str	r0, [r3, #0]
 8017be6:	7912      	ldrb	r2, [r2, #4]
 8017be8:	711a      	strb	r2, [r3, #4]
			p->moveSize = 6;
 8017bea:	687b      	ldr	r3, [r7, #4]
 8017bec:	2206      	movs	r2, #6
 8017bee:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,G,J,G,I");
 8017bf0:	687b      	ldr	r3, [r7, #4]
 8017bf2:	3340      	adds	r3, #64	; 0x40
 8017bf4:	4a2e      	ldr	r2, [pc, #184]	; (8017cb0 <createProblem+0x16e08>)
 8017bf6:	461c      	mov	r4, r3
 8017bf8:	4613      	mov	r3, r2
 8017bfa:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017bfc:	6020      	str	r0, [r4, #0]
 8017bfe:	6061      	str	r1, [r4, #4]
 8017c00:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,10,12,14,18");
 8017c02:	687b      	ldr	r3, [r7, #4]
 8017c04:	3304      	adds	r3, #4
 8017c06:	4a2b      	ldr	r2, [pc, #172]	; (8017cb4 <createProblem+0x16e0c>)
 8017c08:	461c      	mov	r4, r3
 8017c0a:	4615      	mov	r5, r2
 8017c0c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8017c0e:	6020      	str	r0, [r4, #0]
 8017c10:	6061      	str	r1, [r4, #4]
 8017c12:	60a2      	str	r2, [r4, #8]
 8017c14:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8017c16:	687b      	ldr	r3, [r7, #4]
 8017c18:	33d8      	adds	r3, #216	; 0xd8
 8017c1a:	4a27      	ldr	r2, [pc, #156]	; (8017cb8 <createProblem+0x16e10>)
 8017c1c:	461c      	mov	r4, r3
 8017c1e:	4613      	mov	r3, r2
 8017c20:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017c22:	6020      	str	r0, [r4, #0]
 8017c24:	6061      	str	r1, [r4, #4]
 8017c26:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 8017c28:	687b      	ldr	r3, [r7, #4]
 8017c2a:	33cc      	adds	r3, #204	; 0xcc
 8017c2c:	4a15      	ldr	r2, [pc, #84]	; (8017c84 <createProblem+0x16ddc>)
 8017c2e:	6810      	ldr	r0, [r2, #0]
 8017c30:	6018      	str	r0, [r3, #0]
			break;
 8017c32:	f002 be7f 	b.w	801a934 <createProblem+0x19a8c>
 8017c36:	bf00      	nop
 8017c38:	08028c8c 	.word	0x08028c8c
 8017c3c:	08028c9c 	.word	0x08028c9c
 8017c40:	08028ca8 	.word	0x08028ca8
 8017c44:	08020e90 	.word	0x08020e90
 8017c48:	080209a4 	.word	0x080209a4
 8017c4c:	08028cb8 	.word	0x08028cb8
 8017c50:	08028cc8 	.word	0x08028cc8
 8017c54:	08028cd8 	.word	0x08028cd8
 8017c58:	08028cf0 	.word	0x08028cf0
 8017c5c:	080208f0 	.word	0x080208f0
 8017c60:	08028d00 	.word	0x08028d00
 8017c64:	08028d0c 	.word	0x08028d0c
 8017c68:	08024b00 	.word	0x08024b00
 8017c6c:	080208a0 	.word	0x080208a0
 8017c70:	080208ac 	.word	0x080208ac
 8017c74:	08028d18 	.word	0x08028d18
 8017c78:	08028d1c 	.word	0x08028d1c
 8017c7c:	08028d2c 	.word	0x08028d2c
 8017c80:	08020a14 	.word	0x08020a14
 8017c84:	08020830 	.word	0x08020830
 8017c88:	08028d40 	.word	0x08028d40
 8017c8c:	08028d50 	.word	0x08028d50
 8017c90:	08028d60 	.word	0x08028d60
 8017c94:	080209d8 	.word	0x080209d8
 8017c98:	08020dc8 	.word	0x08020dc8
 8017c9c:	08028d78 	.word	0x08028d78
 8017ca0:	08028d80 	.word	0x08028d80
 8017ca4:	08028d90 	.word	0x08028d90
 8017ca8:	080289d0 	.word	0x080289d0
 8017cac:	08028da4 	.word	0x08028da4
 8017cb0:	08028dac 	.word	0x08028dac
 8017cb4:	08028db8 	.word	0x08028db8
 8017cb8:	0802091c 	.word	0x0802091c
		case 743 :
			strcpy(p->name,"V7 ANOS DE AEP");
 8017cbc:	687b      	ldr	r3, [r7, #4]
 8017cbe:	337c      	adds	r3, #124	; 0x7c
 8017cc0:	4abd      	ldr	r2, [pc, #756]	; (8017fb8 <createProblem+0x17110>)
 8017cc2:	461c      	mov	r4, r3
 8017cc4:	4613      	mov	r3, r2
 8017cc6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017cc8:	6020      	str	r0, [r4, #0]
 8017cca:	6061      	str	r1, [r4, #4]
 8017ccc:	60a2      	str	r2, [r4, #8]
 8017cce:	881a      	ldrh	r2, [r3, #0]
 8017cd0:	789b      	ldrb	r3, [r3, #2]
 8017cd2:	81a2      	strh	r2, [r4, #12]
 8017cd4:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 6;
 8017cd6:	687b      	ldr	r3, [r7, #4]
 8017cd8:	2206      	movs	r2, #6
 8017cda:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,H,J,G,I");
 8017cdc:	687b      	ldr	r3, [r7, #4]
 8017cde:	3340      	adds	r3, #64	; 0x40
 8017ce0:	4ab6      	ldr	r2, [pc, #728]	; (8017fbc <createProblem+0x17114>)
 8017ce2:	461c      	mov	r4, r3
 8017ce4:	4613      	mov	r3, r2
 8017ce6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017ce8:	6020      	str	r0, [r4, #0]
 8017cea:	6061      	str	r1, [r4, #4]
 8017cec:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,9,8,12,15,18");
 8017cee:	687b      	ldr	r3, [r7, #4]
 8017cf0:	3304      	adds	r3, #4
 8017cf2:	4ab3      	ldr	r2, [pc, #716]	; (8017fc0 <createProblem+0x17118>)
 8017cf4:	461c      	mov	r4, r3
 8017cf6:	4613      	mov	r3, r2
 8017cf8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017cfa:	6020      	str	r0, [r4, #0]
 8017cfc:	6061      	str	r1, [r4, #4]
 8017cfe:	60a2      	str	r2, [r4, #8]
 8017d00:	881a      	ldrh	r2, [r3, #0]
 8017d02:	789b      	ldrb	r3, [r3, #2]
 8017d04:	81a2      	strh	r2, [r4, #12]
 8017d06:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8017d08:	687b      	ldr	r3, [r7, #4]
 8017d0a:	33d8      	adds	r3, #216	; 0xd8
 8017d0c:	4aad      	ldr	r2, [pc, #692]	; (8017fc4 <createProblem+0x1711c>)
 8017d0e:	461c      	mov	r4, r3
 8017d10:	4613      	mov	r3, r2
 8017d12:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017d14:	6020      	str	r0, [r4, #0]
 8017d16:	6061      	str	r1, [r4, #4]
 8017d18:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 8017d1a:	687b      	ldr	r3, [r7, #4]
 8017d1c:	33cc      	adds	r3, #204	; 0xcc
 8017d1e:	4aaa      	ldr	r2, [pc, #680]	; (8017fc8 <createProblem+0x17120>)
 8017d20:	6810      	ldr	r0, [r2, #0]
 8017d22:	6018      	str	r0, [r3, #0]
			break;
 8017d24:	f002 be06 	b.w	801a934 <createProblem+0x19a8c>
		case 744 :
			strcpy(p->name,"KOKURYU");
 8017d28:	687b      	ldr	r3, [r7, #4]
 8017d2a:	337c      	adds	r3, #124	; 0x7c
 8017d2c:	49a7      	ldr	r1, [pc, #668]	; (8017fcc <createProblem+0x17124>)
 8017d2e:	461a      	mov	r2, r3
 8017d30:	460b      	mov	r3, r1
 8017d32:	cb03      	ldmia	r3!, {r0, r1}
 8017d34:	6010      	str	r0, [r2, #0]
 8017d36:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 8017d38:	687b      	ldr	r3, [r7, #4]
 8017d3a:	2207      	movs	r2, #7
 8017d3c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,G,D,G,E,I");
 8017d3e:	687b      	ldr	r3, [r7, #4]
 8017d40:	3340      	adds	r3, #64	; 0x40
 8017d42:	4aa3      	ldr	r2, [pc, #652]	; (8017fd0 <createProblem+0x17128>)
 8017d44:	461c      	mov	r4, r3
 8017d46:	4613      	mov	r3, r2
 8017d48:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017d4a:	6020      	str	r0, [r4, #0]
 8017d4c:	6061      	str	r1, [r4, #4]
 8017d4e:	60a2      	str	r2, [r4, #8]
 8017d50:	881b      	ldrh	r3, [r3, #0]
 8017d52:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,9,11,14,16,18");
 8017d54:	687b      	ldr	r3, [r7, #4]
 8017d56:	3304      	adds	r3, #4
 8017d58:	4a9e      	ldr	r2, [pc, #632]	; (8017fd4 <createProblem+0x1712c>)
 8017d5a:	461d      	mov	r5, r3
 8017d5c:	4614      	mov	r4, r2
 8017d5e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017d60:	6028      	str	r0, [r5, #0]
 8017d62:	6069      	str	r1, [r5, #4]
 8017d64:	60aa      	str	r2, [r5, #8]
 8017d66:	60eb      	str	r3, [r5, #12]
 8017d68:	8823      	ldrh	r3, [r4, #0]
 8017d6a:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8017d6c:	687b      	ldr	r3, [r7, #4]
 8017d6e:	33d8      	adds	r3, #216	; 0xd8
 8017d70:	4a99      	ldr	r2, [pc, #612]	; (8017fd8 <createProblem+0x17130>)
 8017d72:	461c      	mov	r4, r3
 8017d74:	4613      	mov	r3, r2
 8017d76:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017d78:	6020      	str	r0, [r4, #0]
 8017d7a:	6061      	str	r1, [r4, #4]
 8017d7c:	60a2      	str	r2, [r4, #8]
 8017d7e:	881b      	ldrh	r3, [r3, #0]
 8017d80:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8017d82:	687b      	ldr	r3, [r7, #4]
 8017d84:	33cc      	adds	r3, #204	; 0xcc
 8017d86:	4a95      	ldr	r2, [pc, #596]	; (8017fdc <createProblem+0x17134>)
 8017d88:	6810      	ldr	r0, [r2, #0]
 8017d8a:	6018      	str	r0, [r3, #0]
			break;
 8017d8c:	f002 bdd2 	b.w	801a934 <createProblem+0x19a8c>
		case 745 :
			strcpy(p->name,"CANIGAN");
 8017d90:	687b      	ldr	r3, [r7, #4]
 8017d92:	337c      	adds	r3, #124	; 0x7c
 8017d94:	4992      	ldr	r1, [pc, #584]	; (8017fe0 <createProblem+0x17138>)
 8017d96:	461a      	mov	r2, r3
 8017d98:	460b      	mov	r3, r1
 8017d9a:	cb03      	ldmia	r3!, {r0, r1}
 8017d9c:	6010      	str	r0, [r2, #0]
 8017d9e:	6051      	str	r1, [r2, #4]
			p->moveSize = 8;
 8017da0:	687b      	ldr	r3, [r7, #4]
 8017da2:	2208      	movs	r2, #8
 8017da4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,K,G,I,F,K,H,I");
 8017da6:	687b      	ldr	r3, [r7, #4]
 8017da8:	3340      	adds	r3, #64	; 0x40
 8017daa:	4a8e      	ldr	r2, [pc, #568]	; (8017fe4 <createProblem+0x1713c>)
 8017dac:	461c      	mov	r4, r3
 8017dae:	4615      	mov	r5, r2
 8017db0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8017db2:	6020      	str	r0, [r4, #0]
 8017db4:	6061      	str	r1, [r4, #4]
 8017db6:	60a2      	str	r2, [r4, #8]
 8017db8:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,9,10,13,14,16,18");
 8017dba:	687b      	ldr	r3, [r7, #4]
 8017dbc:	3304      	adds	r3, #4
 8017dbe:	4a8a      	ldr	r2, [pc, #552]	; (8017fe8 <createProblem+0x17140>)
 8017dc0:	461d      	mov	r5, r3
 8017dc2:	4614      	mov	r4, r2
 8017dc4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017dc6:	6028      	str	r0, [r5, #0]
 8017dc8:	6069      	str	r1, [r5, #4]
 8017dca:	60aa      	str	r2, [r5, #8]
 8017dcc:	60eb      	str	r3, [r5, #12]
 8017dce:	6820      	ldr	r0, [r4, #0]
 8017dd0:	6128      	str	r0, [r5, #16]
 8017dd2:	7923      	ldrb	r3, [r4, #4]
 8017dd4:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8017dd6:	687b      	ldr	r3, [r7, #4]
 8017dd8:	33d8      	adds	r3, #216	; 0xd8
 8017dda:	4a84      	ldr	r2, [pc, #528]	; (8017fec <createProblem+0x17144>)
 8017ddc:	461c      	mov	r4, r3
 8017dde:	4615      	mov	r5, r2
 8017de0:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8017de2:	6020      	str	r0, [r4, #0]
 8017de4:	6061      	str	r1, [r4, #4]
 8017de6:	60a2      	str	r2, [r4, #8]
 8017de8:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8017dea:	687b      	ldr	r3, [r7, #4]
 8017dec:	33cc      	adds	r3, #204	; 0xcc
 8017dee:	4a80      	ldr	r2, [pc, #512]	; (8017ff0 <createProblem+0x17148>)
 8017df0:	8811      	ldrh	r1, [r2, #0]
 8017df2:	7892      	ldrb	r2, [r2, #2]
 8017df4:	8019      	strh	r1, [r3, #0]
 8017df6:	709a      	strb	r2, [r3, #2]
			break;
 8017df8:	f002 bd9c 	b.w	801a934 <createProblem+0x19a8c>
		case 746 :
			strcpy(p->name,"BOARDMEETING 3.0");
 8017dfc:	687b      	ldr	r3, [r7, #4]
 8017dfe:	337c      	adds	r3, #124	; 0x7c
 8017e00:	4a7c      	ldr	r2, [pc, #496]	; (8017ff4 <createProblem+0x1714c>)
 8017e02:	461d      	mov	r5, r3
 8017e04:	4614      	mov	r4, r2
 8017e06:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017e08:	6028      	str	r0, [r5, #0]
 8017e0a:	6069      	str	r1, [r5, #4]
 8017e0c:	60aa      	str	r2, [r5, #8]
 8017e0e:	60eb      	str	r3, [r5, #12]
 8017e10:	7823      	ldrb	r3, [r4, #0]
 8017e12:	742b      	strb	r3, [r5, #16]
			p->moveSize = 6;
 8017e14:	687b      	ldr	r3, [r7, #4]
 8017e16:	2206      	movs	r2, #6
 8017e18:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,H,G,H,D");
 8017e1a:	687b      	ldr	r3, [r7, #4]
 8017e1c:	3340      	adds	r3, #64	; 0x40
 8017e1e:	4a76      	ldr	r2, [pc, #472]	; (8017ff8 <createProblem+0x17150>)
 8017e20:	461c      	mov	r4, r3
 8017e22:	4613      	mov	r3, r2
 8017e24:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017e26:	6020      	str	r0, [r4, #0]
 8017e28:	6061      	str	r1, [r4, #4]
 8017e2a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,10,14,16,18");
 8017e2c:	687b      	ldr	r3, [r7, #4]
 8017e2e:	3304      	adds	r3, #4
 8017e30:	4a72      	ldr	r2, [pc, #456]	; (8017ffc <createProblem+0x17154>)
 8017e32:	461c      	mov	r4, r3
 8017e34:	4615      	mov	r5, r2
 8017e36:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8017e38:	6020      	str	r0, [r4, #0]
 8017e3a:	6061      	str	r1, [r4, #4]
 8017e3c:	60a2      	str	r2, [r4, #8]
 8017e3e:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8017e40:	687b      	ldr	r3, [r7, #4]
 8017e42:	33d8      	adds	r3, #216	; 0xd8
 8017e44:	4a6e      	ldr	r2, [pc, #440]	; (8018000 <createProblem+0x17158>)
 8017e46:	461c      	mov	r4, r3
 8017e48:	4613      	mov	r3, r2
 8017e4a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017e4c:	6020      	str	r0, [r4, #0]
 8017e4e:	6061      	str	r1, [r4, #4]
 8017e50:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 8017e52:	687b      	ldr	r3, [r7, #4]
 8017e54:	33cc      	adds	r3, #204	; 0xcc
 8017e56:	4a6b      	ldr	r2, [pc, #428]	; (8018004 <createProblem+0x1715c>)
 8017e58:	6810      	ldr	r0, [r2, #0]
 8017e5a:	6018      	str	r0, [r3, #0]
			break;
 8017e5c:	f002 bd6a 	b.w	801a934 <createProblem+0x19a8c>
		case 747 :
			strcpy(p->name,"STRIZZANGELES");
 8017e60:	687b      	ldr	r3, [r7, #4]
 8017e62:	337c      	adds	r3, #124	; 0x7c
 8017e64:	4a68      	ldr	r2, [pc, #416]	; (8018008 <createProblem+0x17160>)
 8017e66:	461c      	mov	r4, r3
 8017e68:	4613      	mov	r3, r2
 8017e6a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017e6c:	6020      	str	r0, [r4, #0]
 8017e6e:	6061      	str	r1, [r4, #4]
 8017e70:	60a2      	str	r2, [r4, #8]
 8017e72:	881b      	ldrh	r3, [r3, #0]
 8017e74:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 8017e76:	687b      	ldr	r3, [r7, #4]
 8017e78:	2207      	movs	r2, #7
 8017e7a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,F,G,J,E,I");
 8017e7c:	687b      	ldr	r3, [r7, #4]
 8017e7e:	3340      	adds	r3, #64	; 0x40
 8017e80:	4a62      	ldr	r2, [pc, #392]	; (801800c <createProblem+0x17164>)
 8017e82:	461c      	mov	r4, r3
 8017e84:	4613      	mov	r3, r2
 8017e86:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017e88:	6020      	str	r0, [r4, #0]
 8017e8a:	6061      	str	r1, [r4, #4]
 8017e8c:	60a2      	str	r2, [r4, #8]
 8017e8e:	881b      	ldrh	r3, [r3, #0]
 8017e90:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,8,11,14,7,16,18");
 8017e92:	687b      	ldr	r3, [r7, #4]
 8017e94:	3304      	adds	r3, #4
 8017e96:	4a5e      	ldr	r2, [pc, #376]	; (8018010 <createProblem+0x17168>)
 8017e98:	461d      	mov	r5, r3
 8017e9a:	4614      	mov	r4, r2
 8017e9c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017e9e:	6028      	str	r0, [r5, #0]
 8017ea0:	6069      	str	r1, [r5, #4]
 8017ea2:	60aa      	str	r2, [r5, #8]
 8017ea4:	60eb      	str	r3, [r5, #12]
 8017ea6:	8823      	ldrh	r3, [r4, #0]
 8017ea8:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8017eaa:	687b      	ldr	r3, [r7, #4]
 8017eac:	33d8      	adds	r3, #216	; 0xd8
 8017eae:	4a59      	ldr	r2, [pc, #356]	; (8018014 <createProblem+0x1716c>)
 8017eb0:	461c      	mov	r4, r3
 8017eb2:	4613      	mov	r3, r2
 8017eb4:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017eb6:	6020      	str	r0, [r4, #0]
 8017eb8:	6061      	str	r1, [r4, #4]
 8017eba:	60a2      	str	r2, [r4, #8]
 8017ebc:	881b      	ldrh	r3, [r3, #0]
 8017ebe:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8017ec0:	687b      	ldr	r3, [r7, #4]
 8017ec2:	33cc      	adds	r3, #204	; 0xcc
 8017ec4:	4a4f      	ldr	r2, [pc, #316]	; (8018004 <createProblem+0x1715c>)
 8017ec6:	6810      	ldr	r0, [r2, #0]
 8017ec8:	6018      	str	r0, [r3, #0]
			break;
 8017eca:	f002 bd33 	b.w	801a934 <createProblem+0x19a8c>
		case 748 :
			strcpy(p->name,"MAN IN BLACK");
 8017ece:	687b      	ldr	r3, [r7, #4]
 8017ed0:	337c      	adds	r3, #124	; 0x7c
 8017ed2:	4a51      	ldr	r2, [pc, #324]	; (8018018 <createProblem+0x17170>)
 8017ed4:	461c      	mov	r4, r3
 8017ed6:	4613      	mov	r3, r2
 8017ed8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017eda:	6020      	str	r0, [r4, #0]
 8017edc:	6061      	str	r1, [r4, #4]
 8017ede:	60a2      	str	r2, [r4, #8]
 8017ee0:	781b      	ldrb	r3, [r3, #0]
 8017ee2:	7323      	strb	r3, [r4, #12]
			p->moveSize = 9;
 8017ee4:	687b      	ldr	r3, [r7, #4]
 8017ee6:	2209      	movs	r2, #9
 8017ee8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,J,K,H,I,I,K,I,G");
 8017eea:	687b      	ldr	r3, [r7, #4]
 8017eec:	3340      	adds	r3, #64	; 0x40
 8017eee:	4a4b      	ldr	r2, [pc, #300]	; (801801c <createProblem+0x17174>)
 8017ef0:	461d      	mov	r5, r3
 8017ef2:	4614      	mov	r4, r2
 8017ef4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017ef6:	6028      	str	r0, [r5, #0]
 8017ef8:	6069      	str	r1, [r5, #4]
 8017efa:	60aa      	str	r2, [r5, #8]
 8017efc:	60eb      	str	r3, [r5, #12]
 8017efe:	8823      	ldrh	r3, [r4, #0]
 8017f00:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,7,9,12,14,15,16,18,4");
 8017f02:	687b      	ldr	r3, [r7, #4]
 8017f04:	3304      	adds	r3, #4
 8017f06:	4a46      	ldr	r2, [pc, #280]	; (8018020 <createProblem+0x17178>)
 8017f08:	461c      	mov	r4, r3
 8017f0a:	4615      	mov	r5, r2
 8017f0c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8017f0e:	6020      	str	r0, [r4, #0]
 8017f10:	6061      	str	r1, [r4, #4]
 8017f12:	60a2      	str	r2, [r4, #8]
 8017f14:	60e3      	str	r3, [r4, #12]
 8017f16:	6828      	ldr	r0, [r5, #0]
 8017f18:	6120      	str	r0, [r4, #16]
 8017f1a:	88ab      	ldrh	r3, [r5, #4]
 8017f1c:	79aa      	ldrb	r2, [r5, #6]
 8017f1e:	82a3      	strh	r3, [r4, #20]
 8017f20:	4613      	mov	r3, r2
 8017f22:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e,s");
 8017f24:	687b      	ldr	r3, [r7, #4]
 8017f26:	33d8      	adds	r3, #216	; 0xd8
 8017f28:	4a3e      	ldr	r2, [pc, #248]	; (8018024 <createProblem+0x1717c>)
 8017f2a:	461d      	mov	r5, r3
 8017f2c:	4614      	mov	r4, r2
 8017f2e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017f30:	6028      	str	r0, [r5, #0]
 8017f32:	6069      	str	r1, [r5, #4]
 8017f34:	60aa      	str	r2, [r5, #8]
 8017f36:	60eb      	str	r3, [r5, #12]
 8017f38:	8823      	ldrh	r3, [r4, #0]
 8017f3a:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8017f3c:	687b      	ldr	r3, [r7, #4]
 8017f3e:	33cc      	adds	r3, #204	; 0xcc
 8017f40:	4a26      	ldr	r2, [pc, #152]	; (8017fdc <createProblem+0x17134>)
 8017f42:	6810      	ldr	r0, [r2, #0]
 8017f44:	6018      	str	r0, [r3, #0]
			break;
 8017f46:	f002 bcf5 	b.w	801a934 <createProblem+0x19a8c>
		case 749 :
			strcpy(p->name,"THE MOST HIGH");
 8017f4a:	687b      	ldr	r3, [r7, #4]
 8017f4c:	337c      	adds	r3, #124	; 0x7c
 8017f4e:	4a36      	ldr	r2, [pc, #216]	; (8018028 <createProblem+0x17180>)
 8017f50:	461c      	mov	r4, r3
 8017f52:	4613      	mov	r3, r2
 8017f54:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017f56:	6020      	str	r0, [r4, #0]
 8017f58:	6061      	str	r1, [r4, #4]
 8017f5a:	60a2      	str	r2, [r4, #8]
 8017f5c:	881b      	ldrh	r3, [r3, #0]
 8017f5e:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 8017f60:	687b      	ldr	r3, [r7, #4]
 8017f62:	2207      	movs	r2, #7
 8017f64:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,G,D,G,E,I");
 8017f66:	687b      	ldr	r3, [r7, #4]
 8017f68:	3340      	adds	r3, #64	; 0x40
 8017f6a:	4a30      	ldr	r2, [pc, #192]	; (801802c <createProblem+0x17184>)
 8017f6c:	461c      	mov	r4, r3
 8017f6e:	4613      	mov	r3, r2
 8017f70:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017f72:	6020      	str	r0, [r4, #0]
 8017f74:	6061      	str	r1, [r4, #4]
 8017f76:	60a2      	str	r2, [r4, #8]
 8017f78:	881b      	ldrh	r3, [r3, #0]
 8017f7a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,9,11,14,16,18");
 8017f7c:	687b      	ldr	r3, [r7, #4]
 8017f7e:	3304      	adds	r3, #4
 8017f80:	4a2b      	ldr	r2, [pc, #172]	; (8018030 <createProblem+0x17188>)
 8017f82:	461d      	mov	r5, r3
 8017f84:	4614      	mov	r4, r2
 8017f86:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8017f88:	6028      	str	r0, [r5, #0]
 8017f8a:	6069      	str	r1, [r5, #4]
 8017f8c:	60aa      	str	r2, [r5, #8]
 8017f8e:	60eb      	str	r3, [r5, #12]
 8017f90:	8823      	ldrh	r3, [r4, #0]
 8017f92:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8017f94:	687b      	ldr	r3, [r7, #4]
 8017f96:	33d8      	adds	r3, #216	; 0xd8
 8017f98:	4a0f      	ldr	r2, [pc, #60]	; (8017fd8 <createProblem+0x17130>)
 8017f9a:	461c      	mov	r4, r3
 8017f9c:	4613      	mov	r3, r2
 8017f9e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8017fa0:	6020      	str	r0, [r4, #0]
 8017fa2:	6061      	str	r1, [r4, #4]
 8017fa4:	60a2      	str	r2, [r4, #8]
 8017fa6:	881b      	ldrh	r3, [r3, #0]
 8017fa8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8017faa:	687b      	ldr	r3, [r7, #4]
 8017fac:	33cc      	adds	r3, #204	; 0xcc
 8017fae:	4a15      	ldr	r2, [pc, #84]	; (8018004 <createProblem+0x1715c>)
 8017fb0:	6810      	ldr	r0, [r2, #0]
 8017fb2:	6018      	str	r0, [r3, #0]
			break;
 8017fb4:	f002 bcbe 	b.w	801a934 <createProblem+0x19a8c>
 8017fb8:	08028dc8 	.word	0x08028dc8
 8017fbc:	08028dd8 	.word	0x08028dd8
 8017fc0:	08028de4 	.word	0x08028de4
 8017fc4:	0802091c 	.word	0x0802091c
 8017fc8:	080209a4 	.word	0x080209a4
 8017fcc:	08028df4 	.word	0x08028df4
 8017fd0:	08028dfc 	.word	0x08028dfc
 8017fd4:	08027a18 	.word	0x08027a18
 8017fd8:	08020820 	.word	0x08020820
 8017fdc:	08020830 	.word	0x08020830
 8017fe0:	08028e0c 	.word	0x08028e0c
 8017fe4:	08028e14 	.word	0x08028e14
 8017fe8:	08028e24 	.word	0x08028e24
 8017fec:	080209d8 	.word	0x080209d8
 8017ff0:	08020874 	.word	0x08020874
 8017ff4:	08028e3c 	.word	0x08028e3c
 8017ff8:	08028e50 	.word	0x08028e50
 8017ffc:	08028e5c 	.word	0x08028e5c
 8018000:	08020e90 	.word	0x08020e90
 8018004:	08020928 	.word	0x08020928
 8018008:	08028e6c 	.word	0x08028e6c
 801800c:	08028e7c 	.word	0x08028e7c
 8018010:	08028e8c 	.word	0x08028e8c
 8018014:	08020a14 	.word	0x08020a14
 8018018:	08028ea0 	.word	0x08028ea0
 801801c:	08028eb0 	.word	0x08028eb0
 8018020:	08028ec4 	.word	0x08028ec4
 8018024:	08028a84 	.word	0x08028a84
 8018028:	08028edc 	.word	0x08028edc
 801802c:	08028eec 	.word	0x08028eec
 8018030:	08022d44 	.word	0x08022d44
		case 75 :
			strcpy(p->name,"BIG HOLDZ");
 8018034:	687b      	ldr	r3, [r7, #4]
 8018036:	337c      	adds	r3, #124	; 0x7c
 8018038:	49b5      	ldr	r1, [pc, #724]	; (8018310 <createProblem+0x17468>)
 801803a:	461a      	mov	r2, r3
 801803c:	460b      	mov	r3, r1
 801803e:	cb03      	ldmia	r3!, {r0, r1}
 8018040:	6010      	str	r0, [r2, #0]
 8018042:	6051      	str	r1, [r2, #4]
 8018044:	881b      	ldrh	r3, [r3, #0]
 8018046:	8113      	strh	r3, [r2, #8]
			p->moveSize = 5;
 8018048:	687b      	ldr	r3, [r7, #4]
 801804a:	2205      	movs	r2, #5
 801804c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,E,A");
 801804e:	687b      	ldr	r3, [r7, #4]
 8018050:	3340      	adds	r3, #64	; 0x40
 8018052:	49b0      	ldr	r1, [pc, #704]	; (8018314 <createProblem+0x1746c>)
 8018054:	461a      	mov	r2, r3
 8018056:	460b      	mov	r3, r1
 8018058:	cb03      	ldmia	r3!, {r0, r1}
 801805a:	6010      	str	r0, [r2, #0]
 801805c:	6051      	str	r1, [r2, #4]
 801805e:	881b      	ldrh	r3, [r3, #0]
 8018060:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"4,10,13,16,18");
 8018062:	687b      	ldr	r3, [r7, #4]
 8018064:	3304      	adds	r3, #4
 8018066:	4aac      	ldr	r2, [pc, #688]	; (8018318 <createProblem+0x17470>)
 8018068:	461c      	mov	r4, r3
 801806a:	4613      	mov	r3, r2
 801806c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801806e:	6020      	str	r0, [r4, #0]
 8018070:	6061      	str	r1, [r4, #4]
 8018072:	60a2      	str	r2, [r4, #8]
 8018074:	881b      	ldrh	r3, [r3, #0]
 8018076:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8018078:	687b      	ldr	r3, [r7, #4]
 801807a:	33d8      	adds	r3, #216	; 0xd8
 801807c:	49a7      	ldr	r1, [pc, #668]	; (801831c <createProblem+0x17474>)
 801807e:	461a      	mov	r2, r3
 8018080:	460b      	mov	r3, r1
 8018082:	cb03      	ldmia	r3!, {r0, r1}
 8018084:	6010      	str	r0, [r2, #0]
 8018086:	6051      	str	r1, [r2, #4]
 8018088:	881b      	ldrh	r3, [r3, #0]
 801808a:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6B+");
 801808c:	687b      	ldr	r3, [r7, #4]
 801808e:	33cc      	adds	r3, #204	; 0xcc
 8018090:	4aa3      	ldr	r2, [pc, #652]	; (8018320 <createProblem+0x17478>)
 8018092:	6810      	ldr	r0, [r2, #0]
 8018094:	6018      	str	r0, [r3, #0]
			break;
 8018096:	f002 bc4d 	b.w	801a934 <createProblem+0x19a8c>
		case 750 :
			strcpy(p->name,"THE DARK ARTS DIRECT");
 801809a:	687b      	ldr	r3, [r7, #4]
 801809c:	337c      	adds	r3, #124	; 0x7c
 801809e:	4aa1      	ldr	r2, [pc, #644]	; (8018324 <createProblem+0x1747c>)
 80180a0:	461d      	mov	r5, r3
 80180a2:	4614      	mov	r4, r2
 80180a4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80180a6:	6028      	str	r0, [r5, #0]
 80180a8:	6069      	str	r1, [r5, #4]
 80180aa:	60aa      	str	r2, [r5, #8]
 80180ac:	60eb      	str	r3, [r5, #12]
 80180ae:	6820      	ldr	r0, [r4, #0]
 80180b0:	6128      	str	r0, [r5, #16]
 80180b2:	7923      	ldrb	r3, [r4, #4]
 80180b4:	752b      	strb	r3, [r5, #20]
			p->moveSize = 6;
 80180b6:	687b      	ldr	r3, [r7, #4]
 80180b8:	2206      	movs	r2, #6
 80180ba:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,H,C,G,I");
 80180bc:	687b      	ldr	r3, [r7, #4]
 80180be:	3340      	adds	r3, #64	; 0x40
 80180c0:	4a99      	ldr	r2, [pc, #612]	; (8018328 <createProblem+0x17480>)
 80180c2:	461c      	mov	r4, r3
 80180c4:	4613      	mov	r3, r2
 80180c6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80180c8:	6020      	str	r0, [r4, #0]
 80180ca:	6061      	str	r1, [r4, #4]
 80180cc:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,8,13,17,18");
 80180ce:	687b      	ldr	r3, [r7, #4]
 80180d0:	3304      	adds	r3, #4
 80180d2:	4a96      	ldr	r2, [pc, #600]	; (801832c <createProblem+0x17484>)
 80180d4:	461c      	mov	r4, r3
 80180d6:	4613      	mov	r3, r2
 80180d8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80180da:	6020      	str	r0, [r4, #0]
 80180dc:	6061      	str	r1, [r4, #4]
 80180de:	60a2      	str	r2, [r4, #8]
 80180e0:	881a      	ldrh	r2, [r3, #0]
 80180e2:	789b      	ldrb	r3, [r3, #2]
 80180e4:	81a2      	strh	r2, [r4, #12]
 80180e6:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 80180e8:	687b      	ldr	r3, [r7, #4]
 80180ea:	33d8      	adds	r3, #216	; 0xd8
 80180ec:	4a90      	ldr	r2, [pc, #576]	; (8018330 <createProblem+0x17488>)
 80180ee:	461c      	mov	r4, r3
 80180f0:	4613      	mov	r3, r2
 80180f2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80180f4:	6020      	str	r0, [r4, #0]
 80180f6:	6061      	str	r1, [r4, #4]
 80180f8:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7C+");
 80180fa:	687b      	ldr	r3, [r7, #4]
 80180fc:	33cc      	adds	r3, #204	; 0xcc
 80180fe:	4a8d      	ldr	r2, [pc, #564]	; (8018334 <createProblem+0x1748c>)
 8018100:	6810      	ldr	r0, [r2, #0]
 8018102:	6018      	str	r0, [r3, #0]
			break;
 8018104:	f002 bc16 	b.w	801a934 <createProblem+0x19a8c>
		case 751 :
			strcpy(p->name,"BLACK ARE GOOD");
 8018108:	687b      	ldr	r3, [r7, #4]
 801810a:	337c      	adds	r3, #124	; 0x7c
 801810c:	4a8a      	ldr	r2, [pc, #552]	; (8018338 <createProblem+0x17490>)
 801810e:	461c      	mov	r4, r3
 8018110:	4613      	mov	r3, r2
 8018112:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018114:	6020      	str	r0, [r4, #0]
 8018116:	6061      	str	r1, [r4, #4]
 8018118:	60a2      	str	r2, [r4, #8]
 801811a:	881a      	ldrh	r2, [r3, #0]
 801811c:	789b      	ldrb	r3, [r3, #2]
 801811e:	81a2      	strh	r2, [r4, #12]
 8018120:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 6;
 8018122:	687b      	ldr	r3, [r7, #4]
 8018124:	2206      	movs	r2, #6
 8018126:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,J,I,J,G,I");
 8018128:	687b      	ldr	r3, [r7, #4]
 801812a:	3340      	adds	r3, #64	; 0x40
 801812c:	4a83      	ldr	r2, [pc, #524]	; (801833c <createProblem+0x17494>)
 801812e:	461c      	mov	r4, r3
 8018130:	4613      	mov	r3, r2
 8018132:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018134:	6020      	str	r0, [r4, #0]
 8018136:	6061      	str	r1, [r4, #4]
 8018138:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,7,10,12,15,18");
 801813a:	687b      	ldr	r3, [r7, #4]
 801813c:	3304      	adds	r3, #4
 801813e:	4a80      	ldr	r2, [pc, #512]	; (8018340 <createProblem+0x17498>)
 8018140:	461c      	mov	r4, r3
 8018142:	4615      	mov	r5, r2
 8018144:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8018146:	6020      	str	r0, [r4, #0]
 8018148:	6061      	str	r1, [r4, #4]
 801814a:	60a2      	str	r2, [r4, #8]
 801814c:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 801814e:	687b      	ldr	r3, [r7, #4]
 8018150:	33d8      	adds	r3, #216	; 0xd8
 8018152:	4a7c      	ldr	r2, [pc, #496]	; (8018344 <createProblem+0x1749c>)
 8018154:	461c      	mov	r4, r3
 8018156:	4613      	mov	r3, r2
 8018158:	cb07      	ldmia	r3!, {r0, r1, r2}
 801815a:	6020      	str	r0, [r4, #0]
 801815c:	6061      	str	r1, [r4, #4]
 801815e:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 8018160:	687b      	ldr	r3, [r7, #4]
 8018162:	33cc      	adds	r3, #204	; 0xcc
 8018164:	4a78      	ldr	r2, [pc, #480]	; (8018348 <createProblem+0x174a0>)
 8018166:	8811      	ldrh	r1, [r2, #0]
 8018168:	7892      	ldrb	r2, [r2, #2]
 801816a:	8019      	strh	r1, [r3, #0]
 801816c:	709a      	strb	r2, [r3, #2]
			break;
 801816e:	f002 bbe1 	b.w	801a934 <createProblem+0x19a8c>
		case 752 :
			strcpy(p->name,"MY FLOW");
 8018172:	687b      	ldr	r3, [r7, #4]
 8018174:	337c      	adds	r3, #124	; 0x7c
 8018176:	4975      	ldr	r1, [pc, #468]	; (801834c <createProblem+0x174a4>)
 8018178:	461a      	mov	r2, r3
 801817a:	460b      	mov	r3, r1
 801817c:	cb03      	ldmia	r3!, {r0, r1}
 801817e:	6010      	str	r0, [r2, #0]
 8018180:	6051      	str	r1, [r2, #4]
			p->moveSize = 6;
 8018182:	687b      	ldr	r3, [r7, #4]
 8018184:	2206      	movs	r2, #6
 8018186:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,E,A,D");
 8018188:	687b      	ldr	r3, [r7, #4]
 801818a:	3340      	adds	r3, #64	; 0x40
 801818c:	4a70      	ldr	r2, [pc, #448]	; (8018350 <createProblem+0x174a8>)
 801818e:	461c      	mov	r4, r3
 8018190:	4613      	mov	r3, r2
 8018192:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018194:	6020      	str	r0, [r4, #0]
 8018196:	6061      	str	r1, [r4, #4]
 8018198:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,9,12,14,18");
 801819a:	687b      	ldr	r3, [r7, #4]
 801819c:	3304      	adds	r3, #4
 801819e:	4a6d      	ldr	r2, [pc, #436]	; (8018354 <createProblem+0x174ac>)
 80181a0:	461c      	mov	r4, r3
 80181a2:	4613      	mov	r3, r2
 80181a4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80181a6:	6020      	str	r0, [r4, #0]
 80181a8:	6061      	str	r1, [r4, #4]
 80181aa:	60a2      	str	r2, [r4, #8]
 80181ac:	881a      	ldrh	r2, [r3, #0]
 80181ae:	789b      	ldrb	r3, [r3, #2]
 80181b0:	81a2      	strh	r2, [r4, #12]
 80181b2:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80181b4:	687b      	ldr	r3, [r7, #4]
 80181b6:	33d8      	adds	r3, #216	; 0xd8
 80181b8:	4a62      	ldr	r2, [pc, #392]	; (8018344 <createProblem+0x1749c>)
 80181ba:	461c      	mov	r4, r3
 80181bc:	4613      	mov	r3, r2
 80181be:	cb07      	ldmia	r3!, {r0, r1, r2}
 80181c0:	6020      	str	r0, [r4, #0]
 80181c2:	6061      	str	r1, [r4, #4]
 80181c4:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 80181c6:	687b      	ldr	r3, [r7, #4]
 80181c8:	33cc      	adds	r3, #204	; 0xcc
 80181ca:	4a63      	ldr	r2, [pc, #396]	; (8018358 <createProblem+0x174b0>)
 80181cc:	6810      	ldr	r0, [r2, #0]
 80181ce:	6018      	str	r0, [r3, #0]
			break;
 80181d0:	f002 bbb0 	b.w	801a934 <createProblem+0x19a8c>
		case 753 :
			strcpy(p->name,"ELBOW GREASE");
 80181d4:	687b      	ldr	r3, [r7, #4]
 80181d6:	337c      	adds	r3, #124	; 0x7c
 80181d8:	4a60      	ldr	r2, [pc, #384]	; (801835c <createProblem+0x174b4>)
 80181da:	461c      	mov	r4, r3
 80181dc:	4613      	mov	r3, r2
 80181de:	cb07      	ldmia	r3!, {r0, r1, r2}
 80181e0:	6020      	str	r0, [r4, #0]
 80181e2:	6061      	str	r1, [r4, #4]
 80181e4:	60a2      	str	r2, [r4, #8]
 80181e6:	781b      	ldrb	r3, [r3, #0]
 80181e8:	7323      	strb	r3, [r4, #12]
			p->moveSize = 7;
 80181ea:	687b      	ldr	r3, [r7, #4]
 80181ec:	2207      	movs	r2, #7
 80181ee:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,G,D,D,C,A");
 80181f0:	687b      	ldr	r3, [r7, #4]
 80181f2:	3340      	adds	r3, #64	; 0x40
 80181f4:	4a5a      	ldr	r2, [pc, #360]	; (8018360 <createProblem+0x174b8>)
 80181f6:	461c      	mov	r4, r3
 80181f8:	4613      	mov	r3, r2
 80181fa:	cb07      	ldmia	r3!, {r0, r1, r2}
 80181fc:	6020      	str	r0, [r4, #0]
 80181fe:	6061      	str	r1, [r4, #4]
 8018200:	60a2      	str	r2, [r4, #8]
 8018202:	881b      	ldrh	r3, [r3, #0]
 8018204:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,9,11,15,5,18");
 8018206:	687b      	ldr	r3, [r7, #4]
 8018208:	3304      	adds	r3, #4
 801820a:	4a56      	ldr	r2, [pc, #344]	; (8018364 <createProblem+0x174bc>)
 801820c:	461d      	mov	r5, r3
 801820e:	4614      	mov	r4, r2
 8018210:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018212:	6028      	str	r0, [r5, #0]
 8018214:	6069      	str	r1, [r5, #4]
 8018216:	60aa      	str	r2, [r5, #8]
 8018218:	60eb      	str	r3, [r5, #12]
 801821a:	7823      	ldrb	r3, [r4, #0]
 801821c:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 801821e:	687b      	ldr	r3, [r7, #4]
 8018220:	33d8      	adds	r3, #216	; 0xd8
 8018222:	4a51      	ldr	r2, [pc, #324]	; (8018368 <createProblem+0x174c0>)
 8018224:	461c      	mov	r4, r3
 8018226:	4613      	mov	r3, r2
 8018228:	cb07      	ldmia	r3!, {r0, r1, r2}
 801822a:	6020      	str	r0, [r4, #0]
 801822c:	6061      	str	r1, [r4, #4]
 801822e:	60a2      	str	r2, [r4, #8]
 8018230:	881b      	ldrh	r3, [r3, #0]
 8018232:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B+");
 8018234:	687b      	ldr	r3, [r7, #4]
 8018236:	33cc      	adds	r3, #204	; 0xcc
 8018238:	4a4c      	ldr	r2, [pc, #304]	; (801836c <createProblem+0x174c4>)
 801823a:	6810      	ldr	r0, [r2, #0]
 801823c:	6018      	str	r0, [r3, #0]
			break;
 801823e:	f002 bb79 	b.w	801a934 <createProblem+0x19a8c>
		case 754 :
			strcpy(p->name,"ELBOW GREASE VAR");
 8018242:	687b      	ldr	r3, [r7, #4]
 8018244:	337c      	adds	r3, #124	; 0x7c
 8018246:	4a4a      	ldr	r2, [pc, #296]	; (8018370 <createProblem+0x174c8>)
 8018248:	461d      	mov	r5, r3
 801824a:	4614      	mov	r4, r2
 801824c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801824e:	6028      	str	r0, [r5, #0]
 8018250:	6069      	str	r1, [r5, #4]
 8018252:	60aa      	str	r2, [r5, #8]
 8018254:	60eb      	str	r3, [r5, #12]
 8018256:	7823      	ldrb	r3, [r4, #0]
 8018258:	742b      	strb	r3, [r5, #16]
			p->moveSize = 6;
 801825a:	687b      	ldr	r3, [r7, #4]
 801825c:	2206      	movs	r2, #6
 801825e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,G,D,D,A");
 8018260:	687b      	ldr	r3, [r7, #4]
 8018262:	3340      	adds	r3, #64	; 0x40
 8018264:	4a43      	ldr	r2, [pc, #268]	; (8018374 <createProblem+0x174cc>)
 8018266:	461c      	mov	r4, r3
 8018268:	4613      	mov	r3, r2
 801826a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801826c:	6020      	str	r0, [r4, #0]
 801826e:	6061      	str	r1, [r4, #4]
 8018270:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,9,11,15,18");
 8018272:	687b      	ldr	r3, [r7, #4]
 8018274:	3304      	adds	r3, #4
 8018276:	4a40      	ldr	r2, [pc, #256]	; (8018378 <createProblem+0x174d0>)
 8018278:	461c      	mov	r4, r3
 801827a:	4613      	mov	r3, r2
 801827c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801827e:	6020      	str	r0, [r4, #0]
 8018280:	6061      	str	r1, [r4, #4]
 8018282:	60a2      	str	r2, [r4, #8]
 8018284:	881a      	ldrh	r2, [r3, #0]
 8018286:	789b      	ldrb	r3, [r3, #2]
 8018288:	81a2      	strh	r2, [r4, #12]
 801828a:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 801828c:	687b      	ldr	r3, [r7, #4]
 801828e:	33d8      	adds	r3, #216	; 0xd8
 8018290:	4a2c      	ldr	r2, [pc, #176]	; (8018344 <createProblem+0x1749c>)
 8018292:	461c      	mov	r4, r3
 8018294:	4613      	mov	r3, r2
 8018296:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018298:	6020      	str	r0, [r4, #0]
 801829a:	6061      	str	r1, [r4, #4]
 801829c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7C+");
 801829e:	687b      	ldr	r3, [r7, #4]
 80182a0:	33cc      	adds	r3, #204	; 0xcc
 80182a2:	4a24      	ldr	r2, [pc, #144]	; (8018334 <createProblem+0x1748c>)
 80182a4:	6810      	ldr	r0, [r2, #0]
 80182a6:	6018      	str	r0, [r3, #0]
			break;
 80182a8:	f002 bb44 	b.w	801a934 <createProblem+0x19a8c>
		case 755 :
			strcpy(p->name,"DITA DI BURRO");
 80182ac:	687b      	ldr	r3, [r7, #4]
 80182ae:	337c      	adds	r3, #124	; 0x7c
 80182b0:	4a32      	ldr	r2, [pc, #200]	; (801837c <createProblem+0x174d4>)
 80182b2:	461c      	mov	r4, r3
 80182b4:	4613      	mov	r3, r2
 80182b6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80182b8:	6020      	str	r0, [r4, #0]
 80182ba:	6061      	str	r1, [r4, #4]
 80182bc:	60a2      	str	r2, [r4, #8]
 80182be:	881b      	ldrh	r3, [r3, #0]
 80182c0:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 4;
 80182c2:	687b      	ldr	r3, [r7, #4]
 80182c4:	2204      	movs	r2, #4
 80182c6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,C,D");
 80182c8:	687b      	ldr	r3, [r7, #4]
 80182ca:	3340      	adds	r3, #64	; 0x40
 80182cc:	492c      	ldr	r1, [pc, #176]	; (8018380 <createProblem+0x174d8>)
 80182ce:	461a      	mov	r2, r3
 80182d0:	460b      	mov	r3, r1
 80182d2:	cb03      	ldmia	r3!, {r0, r1}
 80182d4:	6010      	str	r0, [r2, #0]
 80182d6:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"9,5,13,18");
 80182d8:	687b      	ldr	r3, [r7, #4]
 80182da:	3304      	adds	r3, #4
 80182dc:	4929      	ldr	r1, [pc, #164]	; (8018384 <createProblem+0x174dc>)
 80182de:	461a      	mov	r2, r3
 80182e0:	460b      	mov	r3, r1
 80182e2:	cb03      	ldmia	r3!, {r0, r1}
 80182e4:	6010      	str	r0, [r2, #0]
 80182e6:	6051      	str	r1, [r2, #4]
 80182e8:	881b      	ldrh	r3, [r3, #0]
 80182ea:	8113      	strh	r3, [r2, #8]
			strcpy(p->startFinish, "d,s,d,e");
 80182ec:	687b      	ldr	r3, [r7, #4]
 80182ee:	33d8      	adds	r3, #216	; 0xd8
 80182f0:	4925      	ldr	r1, [pc, #148]	; (8018388 <createProblem+0x174e0>)
 80182f2:	461a      	mov	r2, r3
 80182f4:	460b      	mov	r3, r1
 80182f6:	cb03      	ldmia	r3!, {r0, r1}
 80182f8:	6010      	str	r0, [r2, #0]
 80182fa:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7A");
 80182fc:	687b      	ldr	r3, [r7, #4]
 80182fe:	33cc      	adds	r3, #204	; 0xcc
 8018300:	4a22      	ldr	r2, [pc, #136]	; (801838c <createProblem+0x174e4>)
 8018302:	8811      	ldrh	r1, [r2, #0]
 8018304:	7892      	ldrb	r2, [r2, #2]
 8018306:	8019      	strh	r1, [r3, #0]
 8018308:	709a      	strb	r2, [r3, #2]
			break;
 801830a:	f002 bb13 	b.w	801a934 <createProblem+0x19a8c>
 801830e:	bf00      	nop
 8018310:	08028efc 	.word	0x08028efc
 8018314:	08028f08 	.word	0x08028f08
 8018318:	08028f14 	.word	0x08028f14
 801831c:	080208a0 	.word	0x080208a0
 8018320:	08020830 	.word	0x08020830
 8018324:	08028f24 	.word	0x08028f24
 8018328:	08028f3c 	.word	0x08028f3c
 801832c:	08028f48 	.word	0x08028f48
 8018330:	08020e90 	.word	0x08020e90
 8018334:	080226f0 	.word	0x080226f0
 8018338:	08028f58 	.word	0x08028f58
 801833c:	08028f68 	.word	0x08028f68
 8018340:	08028f74 	.word	0x08028f74
 8018344:	0802091c 	.word	0x0802091c
 8018348:	080208f0 	.word	0x080208f0
 801834c:	08028f84 	.word	0x08028f84
 8018350:	080248cc 	.word	0x080248cc
 8018354:	08024778 	.word	0x08024778
 8018358:	080209a4 	.word	0x080209a4
 801835c:	08028f8c 	.word	0x08028f8c
 8018360:	08028f9c 	.word	0x08028f9c
 8018364:	08028fac 	.word	0x08028fac
 8018368:	08020a14 	.word	0x08020a14
 801836c:	08020dc8 	.word	0x08020dc8
 8018370:	08028fc0 	.word	0x08028fc0
 8018374:	08028fd4 	.word	0x08028fd4
 8018378:	08028fe0 	.word	0x08028fe0
 801837c:	08028ff0 	.word	0x08028ff0
 8018380:	08029000 	.word	0x08029000
 8018384:	08029008 	.word	0x08029008
 8018388:	08029014 	.word	0x08029014
 801838c:	08020874 	.word	0x08020874
		case 756 :
			strcpy(p->name,"BLACK JACK");
 8018390:	687b      	ldr	r3, [r7, #4]
 8018392:	337c      	adds	r3, #124	; 0x7c
 8018394:	49bd      	ldr	r1, [pc, #756]	; (801868c <createProblem+0x177e4>)
 8018396:	461a      	mov	r2, r3
 8018398:	460b      	mov	r3, r1
 801839a:	cb03      	ldmia	r3!, {r0, r1}
 801839c:	6010      	str	r0, [r2, #0]
 801839e:	6051      	str	r1, [r2, #4]
 80183a0:	8819      	ldrh	r1, [r3, #0]
 80183a2:	789b      	ldrb	r3, [r3, #2]
 80183a4:	8111      	strh	r1, [r2, #8]
 80183a6:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 80183a8:	687b      	ldr	r3, [r7, #4]
 80183aa:	2206      	movs	r2, #6
 80183ac:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,G,E,F,A,D");
 80183ae:	687b      	ldr	r3, [r7, #4]
 80183b0:	3340      	adds	r3, #64	; 0x40
 80183b2:	4ab7      	ldr	r2, [pc, #732]	; (8018690 <createProblem+0x177e8>)
 80183b4:	461c      	mov	r4, r3
 80183b6:	4613      	mov	r3, r2
 80183b8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80183ba:	6020      	str	r0, [r4, #0]
 80183bc:	6061      	str	r1, [r4, #4]
 80183be:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,12,13,14,18");
 80183c0:	687b      	ldr	r3, [r7, #4]
 80183c2:	3304      	adds	r3, #4
 80183c4:	4ab3      	ldr	r2, [pc, #716]	; (8018694 <createProblem+0x177ec>)
 80183c6:	461c      	mov	r4, r3
 80183c8:	4615      	mov	r5, r2
 80183ca:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80183cc:	6020      	str	r0, [r4, #0]
 80183ce:	6061      	str	r1, [r4, #4]
 80183d0:	60a2      	str	r2, [r4, #8]
 80183d2:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80183d4:	687b      	ldr	r3, [r7, #4]
 80183d6:	33d8      	adds	r3, #216	; 0xd8
 80183d8:	4aaf      	ldr	r2, [pc, #700]	; (8018698 <createProblem+0x177f0>)
 80183da:	461c      	mov	r4, r3
 80183dc:	4613      	mov	r3, r2
 80183de:	cb07      	ldmia	r3!, {r0, r1, r2}
 80183e0:	6020      	str	r0, [r4, #0]
 80183e2:	6061      	str	r1, [r4, #4]
 80183e4:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 80183e6:	687b      	ldr	r3, [r7, #4]
 80183e8:	33cc      	adds	r3, #204	; 0xcc
 80183ea:	4aac      	ldr	r2, [pc, #688]	; (801869c <createProblem+0x177f4>)
 80183ec:	8811      	ldrh	r1, [r2, #0]
 80183ee:	7892      	ldrb	r2, [r2, #2]
 80183f0:	8019      	strh	r1, [r3, #0]
 80183f2:	709a      	strb	r2, [r3, #2]
			break;
 80183f4:	f002 ba9e 	b.w	801a934 <createProblem+0x19a8c>
		case 757 :
			strcpy(p->name,"LONG BLACK");
 80183f8:	687b      	ldr	r3, [r7, #4]
 80183fa:	337c      	adds	r3, #124	; 0x7c
 80183fc:	49a8      	ldr	r1, [pc, #672]	; (80186a0 <createProblem+0x177f8>)
 80183fe:	461a      	mov	r2, r3
 8018400:	460b      	mov	r3, r1
 8018402:	cb03      	ldmia	r3!, {r0, r1}
 8018404:	6010      	str	r0, [r2, #0]
 8018406:	6051      	str	r1, [r2, #4]
 8018408:	8819      	ldrh	r1, [r3, #0]
 801840a:	789b      	ldrb	r3, [r3, #2]
 801840c:	8111      	strh	r1, [r2, #8]
 801840e:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 8018410:	687b      	ldr	r3, [r7, #4]
 8018412:	2206      	movs	r2, #6
 8018414:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,E,E,D");
 8018416:	687b      	ldr	r3, [r7, #4]
 8018418:	3340      	adds	r3, #64	; 0x40
 801841a:	4aa2      	ldr	r2, [pc, #648]	; (80186a4 <createProblem+0x177fc>)
 801841c:	461c      	mov	r4, r3
 801841e:	4613      	mov	r3, r2
 8018420:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018422:	6020      	str	r0, [r4, #0]
 8018424:	6061      	str	r1, [r4, #4]
 8018426:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,10,14,16,18");
 8018428:	687b      	ldr	r3, [r7, #4]
 801842a:	3304      	adds	r3, #4
 801842c:	4a9e      	ldr	r2, [pc, #632]	; (80186a8 <createProblem+0x17800>)
 801842e:	461c      	mov	r4, r3
 8018430:	4615      	mov	r5, r2
 8018432:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8018434:	6020      	str	r0, [r4, #0]
 8018436:	6061      	str	r1, [r4, #4]
 8018438:	60a2      	str	r2, [r4, #8]
 801843a:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 801843c:	687b      	ldr	r3, [r7, #4]
 801843e:	33d8      	adds	r3, #216	; 0xd8
 8018440:	4a9a      	ldr	r2, [pc, #616]	; (80186ac <createProblem+0x17804>)
 8018442:	461c      	mov	r4, r3
 8018444:	4613      	mov	r3, r2
 8018446:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018448:	6020      	str	r0, [r4, #0]
 801844a:	6061      	str	r1, [r4, #4]
 801844c:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 801844e:	687b      	ldr	r3, [r7, #4]
 8018450:	33cc      	adds	r3, #204	; 0xcc
 8018452:	4a97      	ldr	r2, [pc, #604]	; (80186b0 <createProblem+0x17808>)
 8018454:	6810      	ldr	r0, [r2, #0]
 8018456:	6018      	str	r0, [r3, #0]
			break;
 8018458:	f002 ba6c 	b.w	801a934 <createProblem+0x19a8c>
		case 758 :
			strcpy(p->name,"CALCULO");
 801845c:	687b      	ldr	r3, [r7, #4]
 801845e:	337c      	adds	r3, #124	; 0x7c
 8018460:	4994      	ldr	r1, [pc, #592]	; (80186b4 <createProblem+0x1780c>)
 8018462:	461a      	mov	r2, r3
 8018464:	460b      	mov	r3, r1
 8018466:	cb03      	ldmia	r3!, {r0, r1}
 8018468:	6010      	str	r0, [r2, #0]
 801846a:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 801846c:	687b      	ldr	r3, [r7, #4]
 801846e:	2207      	movs	r2, #7
 8018470:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,E,F,G,I");
 8018472:	687b      	ldr	r3, [r7, #4]
 8018474:	3340      	adds	r3, #64	; 0x40
 8018476:	4a90      	ldr	r2, [pc, #576]	; (80186b8 <createProblem+0x17810>)
 8018478:	461c      	mov	r4, r3
 801847a:	4613      	mov	r3, r2
 801847c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801847e:	6020      	str	r0, [r4, #0]
 8018480:	6061      	str	r1, [r4, #4]
 8018482:	60a2      	str	r2, [r4, #8]
 8018484:	881b      	ldrh	r3, [r3, #0]
 8018486:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,9,12,13,15,18");
 8018488:	687b      	ldr	r3, [r7, #4]
 801848a:	3304      	adds	r3, #4
 801848c:	4a8b      	ldr	r2, [pc, #556]	; (80186bc <createProblem+0x17814>)
 801848e:	461d      	mov	r5, r3
 8018490:	4614      	mov	r4, r2
 8018492:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018494:	6028      	str	r0, [r5, #0]
 8018496:	6069      	str	r1, [r5, #4]
 8018498:	60aa      	str	r2, [r5, #8]
 801849a:	60eb      	str	r3, [r5, #12]
 801849c:	8823      	ldrh	r3, [r4, #0]
 801849e:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 80184a0:	687b      	ldr	r3, [r7, #4]
 80184a2:	33d8      	adds	r3, #216	; 0xd8
 80184a4:	4a86      	ldr	r2, [pc, #536]	; (80186c0 <createProblem+0x17818>)
 80184a6:	461c      	mov	r4, r3
 80184a8:	4613      	mov	r3, r2
 80184aa:	cb07      	ldmia	r3!, {r0, r1, r2}
 80184ac:	6020      	str	r0, [r4, #0]
 80184ae:	6061      	str	r1, [r4, #4]
 80184b0:	60a2      	str	r2, [r4, #8]
 80184b2:	881b      	ldrh	r3, [r3, #0]
 80184b4:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 80184b6:	687b      	ldr	r3, [r7, #4]
 80184b8:	33cc      	adds	r3, #204	; 0xcc
 80184ba:	4a82      	ldr	r2, [pc, #520]	; (80186c4 <createProblem+0x1781c>)
 80184bc:	8811      	ldrh	r1, [r2, #0]
 80184be:	7892      	ldrb	r2, [r2, #2]
 80184c0:	8019      	strh	r1, [r3, #0]
 80184c2:	709a      	strb	r2, [r3, #2]
			break;
 80184c4:	f002 ba36 	b.w	801a934 <createProblem+0x19a8c>
		case 759 :
			strcpy(p->name,"BLACK CHAMBER ORDER");
 80184c8:	687b      	ldr	r3, [r7, #4]
 80184ca:	337c      	adds	r3, #124	; 0x7c
 80184cc:	4a7e      	ldr	r2, [pc, #504]	; (80186c8 <createProblem+0x17820>)
 80184ce:	461d      	mov	r5, r3
 80184d0:	4614      	mov	r4, r2
 80184d2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80184d4:	6028      	str	r0, [r5, #0]
 80184d6:	6069      	str	r1, [r5, #4]
 80184d8:	60aa      	str	r2, [r5, #8]
 80184da:	60eb      	str	r3, [r5, #12]
 80184dc:	6820      	ldr	r0, [r4, #0]
 80184de:	6128      	str	r0, [r5, #16]
			p->moveSize = 7;
 80184e0:	687b      	ldr	r3, [r7, #4]
 80184e2:	2207      	movs	r2, #7
 80184e4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,C,E,B,D,A");
 80184e6:	687b      	ldr	r3, [r7, #4]
 80184e8:	3340      	adds	r3, #64	; 0x40
 80184ea:	4a78      	ldr	r2, [pc, #480]	; (80186cc <createProblem+0x17824>)
 80184ec:	461c      	mov	r4, r3
 80184ee:	4613      	mov	r3, r2
 80184f0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80184f2:	6020      	str	r0, [r4, #0]
 80184f4:	6061      	str	r1, [r4, #4]
 80184f6:	60a2      	str	r2, [r4, #8]
 80184f8:	881b      	ldrh	r3, [r3, #0]
 80184fa:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,8,9,12,15,18");
 80184fc:	687b      	ldr	r3, [r7, #4]
 80184fe:	3304      	adds	r3, #4
 8018500:	4a73      	ldr	r2, [pc, #460]	; (80186d0 <createProblem+0x17828>)
 8018502:	461d      	mov	r5, r3
 8018504:	4614      	mov	r4, r2
 8018506:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018508:	6028      	str	r0, [r5, #0]
 801850a:	6069      	str	r1, [r5, #4]
 801850c:	60aa      	str	r2, [r5, #8]
 801850e:	60eb      	str	r3, [r5, #12]
 8018510:	7823      	ldrb	r3, [r4, #0]
 8018512:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8018514:	687b      	ldr	r3, [r7, #4]
 8018516:	33d8      	adds	r3, #216	; 0xd8
 8018518:	4a6e      	ldr	r2, [pc, #440]	; (80186d4 <createProblem+0x1782c>)
 801851a:	461c      	mov	r4, r3
 801851c:	4613      	mov	r3, r2
 801851e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018520:	6020      	str	r0, [r4, #0]
 8018522:	6061      	str	r1, [r4, #4]
 8018524:	60a2      	str	r2, [r4, #8]
 8018526:	881b      	ldrh	r3, [r3, #0]
 8018528:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 801852a:	687b      	ldr	r3, [r7, #4]
 801852c:	33cc      	adds	r3, #204	; 0xcc
 801852e:	4a5b      	ldr	r2, [pc, #364]	; (801869c <createProblem+0x177f4>)
 8018530:	8811      	ldrh	r1, [r2, #0]
 8018532:	7892      	ldrb	r2, [r2, #2]
 8018534:	8019      	strh	r1, [r3, #0]
 8018536:	709a      	strb	r2, [r3, #2]
			break;
 8018538:	f002 b9fc 	b.w	801a934 <createProblem+0x19a8c>
		case 76 :
			strcpy(p->name,"MEZZIF");
 801853c:	687b      	ldr	r3, [r7, #4]
 801853e:	337c      	adds	r3, #124	; 0x7c
 8018540:	4a65      	ldr	r2, [pc, #404]	; (80186d8 <createProblem+0x17830>)
 8018542:	6810      	ldr	r0, [r2, #0]
 8018544:	6018      	str	r0, [r3, #0]
 8018546:	8891      	ldrh	r1, [r2, #4]
 8018548:	7992      	ldrb	r2, [r2, #6]
 801854a:	8099      	strh	r1, [r3, #4]
 801854c:	719a      	strb	r2, [r3, #6]
			p->moveSize = 6;
 801854e:	687b      	ldr	r3, [r7, #4]
 8018550:	2206      	movs	r2, #6
 8018552:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,C,E,F,J,I");
 8018554:	687b      	ldr	r3, [r7, #4]
 8018556:	3340      	adds	r3, #64	; 0x40
 8018558:	4a60      	ldr	r2, [pc, #384]	; (80186dc <createProblem+0x17834>)
 801855a:	461c      	mov	r4, r3
 801855c:	4613      	mov	r3, r2
 801855e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018560:	6020      	str	r0, [r4, #0]
 8018562:	6061      	str	r1, [r4, #4]
 8018564:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,9,13,12,18");
 8018566:	687b      	ldr	r3, [r7, #4]
 8018568:	3304      	adds	r3, #4
 801856a:	4a5d      	ldr	r2, [pc, #372]	; (80186e0 <createProblem+0x17838>)
 801856c:	461c      	mov	r4, r3
 801856e:	4613      	mov	r3, r2
 8018570:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018572:	6020      	str	r0, [r4, #0]
 8018574:	6061      	str	r1, [r4, #4]
 8018576:	60a2      	str	r2, [r4, #8]
 8018578:	881a      	ldrh	r2, [r3, #0]
 801857a:	789b      	ldrb	r3, [r3, #2]
 801857c:	81a2      	strh	r2, [r4, #12]
 801857e:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8018580:	687b      	ldr	r3, [r7, #4]
 8018582:	33d8      	adds	r3, #216	; 0xd8
 8018584:	4a49      	ldr	r2, [pc, #292]	; (80186ac <createProblem+0x17804>)
 8018586:	461c      	mov	r4, r3
 8018588:	4613      	mov	r3, r2
 801858a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801858c:	6020      	str	r0, [r4, #0]
 801858e:	6061      	str	r1, [r4, #4]
 8018590:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7C+");
 8018592:	687b      	ldr	r3, [r7, #4]
 8018594:	33cc      	adds	r3, #204	; 0xcc
 8018596:	4a53      	ldr	r2, [pc, #332]	; (80186e4 <createProblem+0x1783c>)
 8018598:	6810      	ldr	r0, [r2, #0]
 801859a:	6018      	str	r0, [r3, #0]
			break;
 801859c:	f002 b9ca 	b.w	801a934 <createProblem+0x19a8c>
		case 760 :
			strcpy(p->name,"BEYOND GOOD AND EVIL");
 80185a0:	687b      	ldr	r3, [r7, #4]
 80185a2:	337c      	adds	r3, #124	; 0x7c
 80185a4:	4a50      	ldr	r2, [pc, #320]	; (80186e8 <createProblem+0x17840>)
 80185a6:	461d      	mov	r5, r3
 80185a8:	4614      	mov	r4, r2
 80185aa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80185ac:	6028      	str	r0, [r5, #0]
 80185ae:	6069      	str	r1, [r5, #4]
 80185b0:	60aa      	str	r2, [r5, #8]
 80185b2:	60eb      	str	r3, [r5, #12]
 80185b4:	6820      	ldr	r0, [r4, #0]
 80185b6:	6128      	str	r0, [r5, #16]
 80185b8:	7923      	ldrb	r3, [r4, #4]
 80185ba:	752b      	strb	r3, [r5, #20]
			p->moveSize = 8;
 80185bc:	687b      	ldr	r3, [r7, #4]
 80185be:	2208      	movs	r2, #8
 80185c0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,G,E,B,G,E,I");
 80185c2:	687b      	ldr	r3, [r7, #4]
 80185c4:	3340      	adds	r3, #64	; 0x40
 80185c6:	4a49      	ldr	r2, [pc, #292]	; (80186ec <createProblem+0x17844>)
 80185c8:	461c      	mov	r4, r3
 80185ca:	4615      	mov	r5, r2
 80185cc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80185ce:	6020      	str	r0, [r4, #0]
 80185d0:	6061      	str	r1, [r4, #4]
 80185d2:	60a2      	str	r2, [r4, #8]
 80185d4:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"8,4,6,12,15,17,16,18");
 80185d6:	687b      	ldr	r3, [r7, #4]
 80185d8:	3304      	adds	r3, #4
 80185da:	4a45      	ldr	r2, [pc, #276]	; (80186f0 <createProblem+0x17848>)
 80185dc:	461d      	mov	r5, r3
 80185de:	4614      	mov	r4, r2
 80185e0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80185e2:	6028      	str	r0, [r5, #0]
 80185e4:	6069      	str	r1, [r5, #4]
 80185e6:	60aa      	str	r2, [r5, #8]
 80185e8:	60eb      	str	r3, [r5, #12]
 80185ea:	6820      	ldr	r0, [r4, #0]
 80185ec:	6128      	str	r0, [r5, #16]
 80185ee:	7923      	ldrb	r3, [r4, #4]
 80185f0:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "d,s,s,d,d,d,d,e");
 80185f2:	687b      	ldr	r3, [r7, #4]
 80185f4:	33d8      	adds	r3, #216	; 0xd8
 80185f6:	4a3f      	ldr	r2, [pc, #252]	; (80186f4 <createProblem+0x1784c>)
 80185f8:	461c      	mov	r4, r3
 80185fa:	4615      	mov	r5, r2
 80185fc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80185fe:	6020      	str	r0, [r4, #0]
 8018600:	6061      	str	r1, [r4, #4]
 8018602:	60a2      	str	r2, [r4, #8]
 8018604:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8018606:	687b      	ldr	r3, [r7, #4]
 8018608:	33cc      	adds	r3, #204	; 0xcc
 801860a:	4a2e      	ldr	r2, [pc, #184]	; (80186c4 <createProblem+0x1781c>)
 801860c:	8811      	ldrh	r1, [r2, #0]
 801860e:	7892      	ldrb	r2, [r2, #2]
 8018610:	8019      	strh	r1, [r3, #0]
 8018612:	709a      	strb	r2, [r3, #2]
			break;
 8018614:	f002 b98e 	b.w	801a934 <createProblem+0x19a8c>
		case 761 :
			strcpy(p->name,"THE WILL TO POWER");
 8018618:	687b      	ldr	r3, [r7, #4]
 801861a:	337c      	adds	r3, #124	; 0x7c
 801861c:	4a36      	ldr	r2, [pc, #216]	; (80186f8 <createProblem+0x17850>)
 801861e:	461d      	mov	r5, r3
 8018620:	4614      	mov	r4, r2
 8018622:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018624:	6028      	str	r0, [r5, #0]
 8018626:	6069      	str	r1, [r5, #4]
 8018628:	60aa      	str	r2, [r5, #8]
 801862a:	60eb      	str	r3, [r5, #12]
 801862c:	8823      	ldrh	r3, [r4, #0]
 801862e:	822b      	strh	r3, [r5, #16]
			p->moveSize = 8;
 8018630:	687b      	ldr	r3, [r7, #4]
 8018632:	2208      	movs	r2, #8
 8018634:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,E,G,H,K,G,H,D");
 8018636:	687b      	ldr	r3, [r7, #4]
 8018638:	3340      	adds	r3, #64	; 0x40
 801863a:	4a30      	ldr	r2, [pc, #192]	; (80186fc <createProblem+0x17854>)
 801863c:	461c      	mov	r4, r3
 801863e:	4615      	mov	r5, r2
 8018640:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8018642:	6020      	str	r0, [r4, #0]
 8018644:	6061      	str	r1, [r4, #4]
 8018646:	60a2      	str	r2, [r4, #8]
 8018648:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,12,14,17,16,18");
 801864a:	687b      	ldr	r3, [r7, #4]
 801864c:	3304      	adds	r3, #4
 801864e:	4a2c      	ldr	r2, [pc, #176]	; (8018700 <createProblem+0x17858>)
 8018650:	461d      	mov	r5, r3
 8018652:	4614      	mov	r4, r2
 8018654:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018656:	6028      	str	r0, [r5, #0]
 8018658:	6069      	str	r1, [r5, #4]
 801865a:	60aa      	str	r2, [r5, #8]
 801865c:	60eb      	str	r3, [r5, #12]
 801865e:	6820      	ldr	r0, [r4, #0]
 8018660:	6128      	str	r0, [r5, #16]
 8018662:	7923      	ldrb	r3, [r4, #4]
 8018664:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8018666:	687b      	ldr	r3, [r7, #4]
 8018668:	33d8      	adds	r3, #216	; 0xd8
 801866a:	4a26      	ldr	r2, [pc, #152]	; (8018704 <createProblem+0x1785c>)
 801866c:	461c      	mov	r4, r3
 801866e:	4615      	mov	r5, r2
 8018670:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8018672:	6020      	str	r0, [r4, #0]
 8018674:	6061      	str	r1, [r4, #4]
 8018676:	60a2      	str	r2, [r4, #8]
 8018678:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 801867a:	687b      	ldr	r3, [r7, #4]
 801867c:	33cc      	adds	r3, #204	; 0xcc
 801867e:	4a11      	ldr	r2, [pc, #68]	; (80186c4 <createProblem+0x1781c>)
 8018680:	8811      	ldrh	r1, [r2, #0]
 8018682:	7892      	ldrb	r2, [r2, #2]
 8018684:	8019      	strh	r1, [r3, #0]
 8018686:	709a      	strb	r2, [r3, #2]
			break;
 8018688:	f002 b954 	b.w	801a934 <createProblem+0x19a8c>
 801868c:	0802901c 	.word	0x0802901c
 8018690:	08029028 	.word	0x08029028
 8018694:	08029034 	.word	0x08029034
 8018698:	0802091c 	.word	0x0802091c
 801869c:	08020874 	.word	0x08020874
 80186a0:	08029044 	.word	0x08029044
 80186a4:	08029050 	.word	0x08029050
 80186a8:	0802905c 	.word	0x0802905c
 80186ac:	08020e90 	.word	0x08020e90
 80186b0:	08020830 	.word	0x08020830
 80186b4:	0802906c 	.word	0x0802906c
 80186b8:	08029074 	.word	0x08029074
 80186bc:	08029084 	.word	0x08029084
 80186c0:	08020a14 	.word	0x08020a14
 80186c4:	080208f0 	.word	0x080208f0
 80186c8:	08029098 	.word	0x08029098
 80186cc:	080290ac 	.word	0x080290ac
 80186d0:	080290bc 	.word	0x080290bc
 80186d4:	08020820 	.word	0x08020820
 80186d8:	080290d0 	.word	0x080290d0
 80186dc:	080290d8 	.word	0x080290d8
 80186e0:	080290e4 	.word	0x080290e4
 80186e4:	080226f0 	.word	0x080226f0
 80186e8:	080290f4 	.word	0x080290f4
 80186ec:	0802910c 	.word	0x0802910c
 80186f0:	0802911c 	.word	0x0802911c
 80186f4:	08029134 	.word	0x08029134
 80186f8:	08029144 	.word	0x08029144
 80186fc:	08029158 	.word	0x08029158
 8018700:	08029168 	.word	0x08029168
 8018704:	08020a4c 	.word	0x08020a4c
		case 762 :
			strcpy(p->name,"THE BIRTH OF TRAGEDY");
 8018708:	687b      	ldr	r3, [r7, #4]
 801870a:	337c      	adds	r3, #124	; 0x7c
 801870c:	4ac0      	ldr	r2, [pc, #768]	; (8018a10 <createProblem+0x17b68>)
 801870e:	461d      	mov	r5, r3
 8018710:	4614      	mov	r4, r2
 8018712:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018714:	6028      	str	r0, [r5, #0]
 8018716:	6069      	str	r1, [r5, #4]
 8018718:	60aa      	str	r2, [r5, #8]
 801871a:	60eb      	str	r3, [r5, #12]
 801871c:	6820      	ldr	r0, [r4, #0]
 801871e:	6128      	str	r0, [r5, #16]
 8018720:	7923      	ldrb	r3, [r4, #4]
 8018722:	752b      	strb	r3, [r5, #20]
			p->moveSize = 7;
 8018724:	687b      	ldr	r3, [r7, #4]
 8018726:	2207      	movs	r2, #7
 8018728:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,G,G,C,D,A");
 801872a:	687b      	ldr	r3, [r7, #4]
 801872c:	3340      	adds	r3, #64	; 0x40
 801872e:	4ab9      	ldr	r2, [pc, #740]	; (8018a14 <createProblem+0x17b6c>)
 8018730:	461c      	mov	r4, r3
 8018732:	4613      	mov	r3, r2
 8018734:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018736:	6020      	str	r0, [r4, #0]
 8018738:	6061      	str	r1, [r4, #4]
 801873a:	60a2      	str	r2, [r4, #8]
 801873c:	881b      	ldrh	r3, [r3, #0]
 801873e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,9,10,13,15,18");
 8018740:	687b      	ldr	r3, [r7, #4]
 8018742:	3304      	adds	r3, #4
 8018744:	4ab4      	ldr	r2, [pc, #720]	; (8018a18 <createProblem+0x17b70>)
 8018746:	461d      	mov	r5, r3
 8018748:	4614      	mov	r4, r2
 801874a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801874c:	6028      	str	r0, [r5, #0]
 801874e:	6069      	str	r1, [r5, #4]
 8018750:	60aa      	str	r2, [r5, #8]
 8018752:	60eb      	str	r3, [r5, #12]
 8018754:	8823      	ldrh	r3, [r4, #0]
 8018756:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8018758:	687b      	ldr	r3, [r7, #4]
 801875a:	33d8      	adds	r3, #216	; 0xd8
 801875c:	4aaf      	ldr	r2, [pc, #700]	; (8018a1c <createProblem+0x17b74>)
 801875e:	461c      	mov	r4, r3
 8018760:	4613      	mov	r3, r2
 8018762:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018764:	6020      	str	r0, [r4, #0]
 8018766:	6061      	str	r1, [r4, #4]
 8018768:	60a2      	str	r2, [r4, #8]
 801876a:	881b      	ldrh	r3, [r3, #0]
 801876c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 801876e:	687b      	ldr	r3, [r7, #4]
 8018770:	33cc      	adds	r3, #204	; 0xcc
 8018772:	4aab      	ldr	r2, [pc, #684]	; (8018a20 <createProblem+0x17b78>)
 8018774:	8811      	ldrh	r1, [r2, #0]
 8018776:	7892      	ldrb	r2, [r2, #2]
 8018778:	8019      	strh	r1, [r3, #0]
 801877a:	709a      	strb	r2, [r3, #2]
			break;
 801877c:	f002 b8da 	b.w	801a934 <createProblem+0x19a8c>
		case 763 :
			strcpy(p->name,"CAVATELLI");
 8018780:	687b      	ldr	r3, [r7, #4]
 8018782:	337c      	adds	r3, #124	; 0x7c
 8018784:	49a7      	ldr	r1, [pc, #668]	; (8018a24 <createProblem+0x17b7c>)
 8018786:	461a      	mov	r2, r3
 8018788:	460b      	mov	r3, r1
 801878a:	cb03      	ldmia	r3!, {r0, r1}
 801878c:	6010      	str	r0, [r2, #0]
 801878e:	6051      	str	r1, [r2, #4]
 8018790:	881b      	ldrh	r3, [r3, #0]
 8018792:	8113      	strh	r3, [r2, #8]
			p->moveSize = 5;
 8018794:	687b      	ldr	r3, [r7, #4]
 8018796:	2205      	movs	r2, #5
 8018798:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,F,J,D");
 801879a:	687b      	ldr	r3, [r7, #4]
 801879c:	3340      	adds	r3, #64	; 0x40
 801879e:	49a2      	ldr	r1, [pc, #648]	; (8018a28 <createProblem+0x17b80>)
 80187a0:	461a      	mov	r2, r3
 80187a2:	460b      	mov	r3, r1
 80187a4:	cb03      	ldmia	r3!, {r0, r1}
 80187a6:	6010      	str	r0, [r2, #0]
 80187a8:	6051      	str	r1, [r2, #4]
 80187aa:	881b      	ldrh	r3, [r3, #0]
 80187ac:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,13,16,18");
 80187ae:	687b      	ldr	r3, [r7, #4]
 80187b0:	3304      	adds	r3, #4
 80187b2:	4a9e      	ldr	r2, [pc, #632]	; (8018a2c <createProblem+0x17b84>)
 80187b4:	461c      	mov	r4, r3
 80187b6:	4613      	mov	r3, r2
 80187b8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80187ba:	6020      	str	r0, [r4, #0]
 80187bc:	6061      	str	r1, [r4, #4]
 80187be:	60a2      	str	r2, [r4, #8]
 80187c0:	881b      	ldrh	r3, [r3, #0]
 80187c2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 80187c4:	687b      	ldr	r3, [r7, #4]
 80187c6:	33d8      	adds	r3, #216	; 0xd8
 80187c8:	4999      	ldr	r1, [pc, #612]	; (8018a30 <createProblem+0x17b88>)
 80187ca:	461a      	mov	r2, r3
 80187cc:	460b      	mov	r3, r1
 80187ce:	cb03      	ldmia	r3!, {r0, r1}
 80187d0:	6010      	str	r0, [r2, #0]
 80187d2:	6051      	str	r1, [r2, #4]
 80187d4:	881b      	ldrh	r3, [r3, #0]
 80187d6:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "6C+");
 80187d8:	687b      	ldr	r3, [r7, #4]
 80187da:	33cc      	adds	r3, #204	; 0xcc
 80187dc:	4a95      	ldr	r2, [pc, #596]	; (8018a34 <createProblem+0x17b8c>)
 80187de:	6810      	ldr	r0, [r2, #0]
 80187e0:	6018      	str	r0, [r3, #0]
			break;
 80187e2:	f002 b8a7 	b.w	801a934 <createProblem+0x19a8c>
		case 764 :
			strcpy(p->name,"WING SPANDEX");
 80187e6:	687b      	ldr	r3, [r7, #4]
 80187e8:	337c      	adds	r3, #124	; 0x7c
 80187ea:	4a93      	ldr	r2, [pc, #588]	; (8018a38 <createProblem+0x17b90>)
 80187ec:	461c      	mov	r4, r3
 80187ee:	4613      	mov	r3, r2
 80187f0:	cb07      	ldmia	r3!, {r0, r1, r2}
 80187f2:	6020      	str	r0, [r4, #0]
 80187f4:	6061      	str	r1, [r4, #4]
 80187f6:	60a2      	str	r2, [r4, #8]
 80187f8:	781b      	ldrb	r3, [r3, #0]
 80187fa:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 80187fc:	687b      	ldr	r3, [r7, #4]
 80187fe:	2206      	movs	r2, #6
 8018800:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,C,F,C,G,A");
 8018802:	687b      	ldr	r3, [r7, #4]
 8018804:	3340      	adds	r3, #64	; 0x40
 8018806:	4a8d      	ldr	r2, [pc, #564]	; (8018a3c <createProblem+0x17b94>)
 8018808:	461c      	mov	r4, r3
 801880a:	4613      	mov	r3, r2
 801880c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801880e:	6020      	str	r0, [r4, #0]
 8018810:	6061      	str	r1, [r4, #4]
 8018812:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,8,11,13,17,18");
 8018814:	687b      	ldr	r3, [r7, #4]
 8018816:	3304      	adds	r3, #4
 8018818:	4a89      	ldr	r2, [pc, #548]	; (8018a40 <createProblem+0x17b98>)
 801881a:	461c      	mov	r4, r3
 801881c:	4615      	mov	r5, r2
 801881e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8018820:	6020      	str	r0, [r4, #0]
 8018822:	6061      	str	r1, [r4, #4]
 8018824:	60a2      	str	r2, [r4, #8]
 8018826:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8018828:	687b      	ldr	r3, [r7, #4]
 801882a:	33d8      	adds	r3, #216	; 0xd8
 801882c:	4a85      	ldr	r2, [pc, #532]	; (8018a44 <createProblem+0x17b9c>)
 801882e:	461c      	mov	r4, r3
 8018830:	4613      	mov	r3, r2
 8018832:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018834:	6020      	str	r0, [r4, #0]
 8018836:	6061      	str	r1, [r4, #4]
 8018838:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B");
 801883a:	687b      	ldr	r3, [r7, #4]
 801883c:	33cc      	adds	r3, #204	; 0xcc
 801883e:	4a82      	ldr	r2, [pc, #520]	; (8018a48 <createProblem+0x17ba0>)
 8018840:	8811      	ldrh	r1, [r2, #0]
 8018842:	7892      	ldrb	r2, [r2, #2]
 8018844:	8019      	strh	r1, [r3, #0]
 8018846:	709a      	strb	r2, [r3, #2]
			break;
 8018848:	f002 b874 	b.w	801a934 <createProblem+0x19a8c>
		case 765 :
			strcpy(p->name,"BLACK CAT");
 801884c:	687b      	ldr	r3, [r7, #4]
 801884e:	337c      	adds	r3, #124	; 0x7c
 8018850:	497e      	ldr	r1, [pc, #504]	; (8018a4c <createProblem+0x17ba4>)
 8018852:	461a      	mov	r2, r3
 8018854:	460b      	mov	r3, r1
 8018856:	cb03      	ldmia	r3!, {r0, r1}
 8018858:	6010      	str	r0, [r2, #0]
 801885a:	6051      	str	r1, [r2, #4]
 801885c:	881b      	ldrh	r3, [r3, #0]
 801885e:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 8018860:	687b      	ldr	r3, [r7, #4]
 8018862:	2207      	movs	r2, #7
 8018864:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,I,E,E,J,I");
 8018866:	687b      	ldr	r3, [r7, #4]
 8018868:	3340      	adds	r3, #64	; 0x40
 801886a:	4a79      	ldr	r2, [pc, #484]	; (8018a50 <createProblem+0x17ba8>)
 801886c:	461c      	mov	r4, r3
 801886e:	4613      	mov	r3, r2
 8018870:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018872:	6020      	str	r0, [r4, #0]
 8018874:	6061      	str	r1, [r4, #4]
 8018876:	60a2      	str	r2, [r4, #8]
 8018878:	881b      	ldrh	r3, [r3, #0]
 801887a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,9,12,14,16,18");
 801887c:	687b      	ldr	r3, [r7, #4]
 801887e:	3304      	adds	r3, #4
 8018880:	4a74      	ldr	r2, [pc, #464]	; (8018a54 <createProblem+0x17bac>)
 8018882:	461d      	mov	r5, r3
 8018884:	4614      	mov	r4, r2
 8018886:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018888:	6028      	str	r0, [r5, #0]
 801888a:	6069      	str	r1, [r5, #4]
 801888c:	60aa      	str	r2, [r5, #8]
 801888e:	60eb      	str	r3, [r5, #12]
 8018890:	8823      	ldrh	r3, [r4, #0]
 8018892:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8018894:	687b      	ldr	r3, [r7, #4]
 8018896:	33d8      	adds	r3, #216	; 0xd8
 8018898:	4a60      	ldr	r2, [pc, #384]	; (8018a1c <createProblem+0x17b74>)
 801889a:	461c      	mov	r4, r3
 801889c:	4613      	mov	r3, r2
 801889e:	cb07      	ldmia	r3!, {r0, r1, r2}
 80188a0:	6020      	str	r0, [r4, #0]
 80188a2:	6061      	str	r1, [r4, #4]
 80188a4:	60a2      	str	r2, [r4, #8]
 80188a6:	881b      	ldrh	r3, [r3, #0]
 80188a8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7B+");
 80188aa:	687b      	ldr	r3, [r7, #4]
 80188ac:	33cc      	adds	r3, #204	; 0xcc
 80188ae:	4a6a      	ldr	r2, [pc, #424]	; (8018a58 <createProblem+0x17bb0>)
 80188b0:	6810      	ldr	r0, [r2, #0]
 80188b2:	6018      	str	r0, [r3, #0]
			break;
 80188b4:	f002 b83e 	b.w	801a934 <createProblem+0x19a8c>
		case 766 :
			strcpy(p->name,"GOBRIGHT SPECIAL");
 80188b8:	687b      	ldr	r3, [r7, #4]
 80188ba:	337c      	adds	r3, #124	; 0x7c
 80188bc:	4a67      	ldr	r2, [pc, #412]	; (8018a5c <createProblem+0x17bb4>)
 80188be:	461d      	mov	r5, r3
 80188c0:	4614      	mov	r4, r2
 80188c2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80188c4:	6028      	str	r0, [r5, #0]
 80188c6:	6069      	str	r1, [r5, #4]
 80188c8:	60aa      	str	r2, [r5, #8]
 80188ca:	60eb      	str	r3, [r5, #12]
 80188cc:	7823      	ldrb	r3, [r4, #0]
 80188ce:	742b      	strb	r3, [r5, #16]
			p->moveSize = 5;
 80188d0:	687b      	ldr	r3, [r7, #4]
 80188d2:	2205      	movs	r2, #5
 80188d4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,H,H,C,D");
 80188d6:	687b      	ldr	r3, [r7, #4]
 80188d8:	3340      	adds	r3, #64	; 0x40
 80188da:	4961      	ldr	r1, [pc, #388]	; (8018a60 <createProblem+0x17bb8>)
 80188dc:	461a      	mov	r2, r3
 80188de:	460b      	mov	r3, r1
 80188e0:	cb03      	ldmia	r3!, {r0, r1}
 80188e2:	6010      	str	r0, [r2, #0]
 80188e4:	6051      	str	r1, [r2, #4]
 80188e6:	881b      	ldrh	r3, [r3, #0]
 80188e8:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,5,10,13,18");
 80188ea:	687b      	ldr	r3, [r7, #4]
 80188ec:	3304      	adds	r3, #4
 80188ee:	4a5d      	ldr	r2, [pc, #372]	; (8018a64 <createProblem+0x17bbc>)
 80188f0:	461c      	mov	r4, r3
 80188f2:	4613      	mov	r3, r2
 80188f4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80188f6:	6020      	str	r0, [r4, #0]
 80188f8:	6061      	str	r1, [r4, #4]
 80188fa:	60a2      	str	r2, [r4, #8]
 80188fc:	781b      	ldrb	r3, [r3, #0]
 80188fe:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,e");
 8018900:	687b      	ldr	r3, [r7, #4]
 8018902:	33d8      	adds	r3, #216	; 0xd8
 8018904:	4958      	ldr	r1, [pc, #352]	; (8018a68 <createProblem+0x17bc0>)
 8018906:	461a      	mov	r2, r3
 8018908:	460b      	mov	r3, r1
 801890a:	cb03      	ldmia	r3!, {r0, r1}
 801890c:	6010      	str	r0, [r2, #0]
 801890e:	6051      	str	r1, [r2, #4]
 8018910:	881b      	ldrh	r3, [r3, #0]
 8018912:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A");
 8018914:	687b      	ldr	r3, [r7, #4]
 8018916:	33cc      	adds	r3, #204	; 0xcc
 8018918:	4a54      	ldr	r2, [pc, #336]	; (8018a6c <createProblem+0x17bc4>)
 801891a:	8811      	ldrh	r1, [r2, #0]
 801891c:	7892      	ldrb	r2, [r2, #2]
 801891e:	8019      	strh	r1, [r3, #0]
 8018920:	709a      	strb	r2, [r3, #2]
			break;
 8018922:	f002 b807 	b.w	801a934 <createProblem+0x19a8c>
		case 767 :
			strcpy(p->name,"BASTION");
 8018926:	687b      	ldr	r3, [r7, #4]
 8018928:	337c      	adds	r3, #124	; 0x7c
 801892a:	4951      	ldr	r1, [pc, #324]	; (8018a70 <createProblem+0x17bc8>)
 801892c:	461a      	mov	r2, r3
 801892e:	460b      	mov	r3, r1
 8018930:	cb03      	ldmia	r3!, {r0, r1}
 8018932:	6010      	str	r0, [r2, #0]
 8018934:	6051      	str	r1, [r2, #4]
			p->moveSize = 10;
 8018936:	687b      	ldr	r3, [r7, #4]
 8018938:	220a      	movs	r2, #10
 801893a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,J,E,F,B,E,B,G,E,I");
 801893c:	687b      	ldr	r3, [r7, #4]
 801893e:	3340      	adds	r3, #64	; 0x40
 8018940:	4a4c      	ldr	r2, [pc, #304]	; (8018a74 <createProblem+0x17bcc>)
 8018942:	461d      	mov	r5, r3
 8018944:	4614      	mov	r4, r2
 8018946:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018948:	6028      	str	r0, [r5, #0]
 801894a:	6069      	str	r1, [r5, #4]
 801894c:	60aa      	str	r2, [r5, #8]
 801894e:	60eb      	str	r3, [r5, #12]
 8018950:	6820      	ldr	r0, [r4, #0]
 8018952:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"5,5,8,11,12,12,15,17,16,18");
 8018954:	687b      	ldr	r3, [r7, #4]
 8018956:	3304      	adds	r3, #4
 8018958:	4a47      	ldr	r2, [pc, #284]	; (8018a78 <createProblem+0x17bd0>)
 801895a:	461d      	mov	r5, r3
 801895c:	4614      	mov	r4, r2
 801895e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018960:	6028      	str	r0, [r5, #0]
 8018962:	6069      	str	r1, [r5, #4]
 8018964:	60aa      	str	r2, [r5, #8]
 8018966:	60eb      	str	r3, [r5, #12]
 8018968:	cc03      	ldmia	r4!, {r0, r1}
 801896a:	6128      	str	r0, [r5, #16]
 801896c:	6169      	str	r1, [r5, #20]
 801896e:	8823      	ldrh	r3, [r4, #0]
 8018970:	78a2      	ldrb	r2, [r4, #2]
 8018972:	832b      	strh	r3, [r5, #24]
 8018974:	4613      	mov	r3, r2
 8018976:	76ab      	strb	r3, [r5, #26]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,d,e");
 8018978:	687b      	ldr	r3, [r7, #4]
 801897a:	33d8      	adds	r3, #216	; 0xd8
 801897c:	4a3f      	ldr	r2, [pc, #252]	; (8018a7c <createProblem+0x17bd4>)
 801897e:	461d      	mov	r5, r3
 8018980:	4614      	mov	r4, r2
 8018982:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018984:	6028      	str	r0, [r5, #0]
 8018986:	6069      	str	r1, [r5, #4]
 8018988:	60aa      	str	r2, [r5, #8]
 801898a:	60eb      	str	r3, [r5, #12]
 801898c:	6820      	ldr	r0, [r4, #0]
 801898e:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "6C");
 8018990:	687b      	ldr	r3, [r7, #4]
 8018992:	33cc      	adds	r3, #204	; 0xcc
 8018994:	4a22      	ldr	r2, [pc, #136]	; (8018a20 <createProblem+0x17b78>)
 8018996:	8811      	ldrh	r1, [r2, #0]
 8018998:	7892      	ldrb	r2, [r2, #2]
 801899a:	8019      	strh	r1, [r3, #0]
 801899c:	709a      	strb	r2, [r3, #2]
			break;
 801899e:	f001 bfc9 	b.w	801a934 <createProblem+0x19a8c>
		case 768 :
			strcpy(p->name,"19-1.2");
 80189a2:	687b      	ldr	r3, [r7, #4]
 80189a4:	337c      	adds	r3, #124	; 0x7c
 80189a6:	4a36      	ldr	r2, [pc, #216]	; (8018a80 <createProblem+0x17bd8>)
 80189a8:	6810      	ldr	r0, [r2, #0]
 80189aa:	6018      	str	r0, [r3, #0]
 80189ac:	8891      	ldrh	r1, [r2, #4]
 80189ae:	7992      	ldrb	r2, [r2, #6]
 80189b0:	8099      	strh	r1, [r3, #4]
 80189b2:	719a      	strb	r2, [r3, #6]
			p->moveSize = 8;
 80189b4:	687b      	ldr	r3, [r7, #4]
 80189b6:	2208      	movs	r2, #8
 80189b8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,G,D,B,C,G,I,J");
 80189ba:	687b      	ldr	r3, [r7, #4]
 80189bc:	3340      	adds	r3, #64	; 0x40
 80189be:	4a31      	ldr	r2, [pc, #196]	; (8018a84 <createProblem+0x17bdc>)
 80189c0:	461c      	mov	r4, r3
 80189c2:	4615      	mov	r5, r2
 80189c4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80189c6:	6020      	str	r0, [r4, #0]
 80189c8:	6061      	str	r1, [r4, #4]
 80189ca:	60a2      	str	r2, [r4, #8]
 80189cc:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,6,7,10,13,14,18,16");
 80189ce:	687b      	ldr	r3, [r7, #4]
 80189d0:	3304      	adds	r3, #4
 80189d2:	4a2d      	ldr	r2, [pc, #180]	; (8018a88 <createProblem+0x17be0>)
 80189d4:	461d      	mov	r5, r3
 80189d6:	4614      	mov	r4, r2
 80189d8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80189da:	6028      	str	r0, [r5, #0]
 80189dc:	6069      	str	r1, [r5, #4]
 80189de:	60aa      	str	r2, [r5, #8]
 80189e0:	60eb      	str	r3, [r5, #12]
 80189e2:	6820      	ldr	r0, [r4, #0]
 80189e4:	6128      	str	r0, [r5, #16]
 80189e6:	7923      	ldrb	r3, [r4, #4]
 80189e8:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,e,d");
 80189ea:	687b      	ldr	r3, [r7, #4]
 80189ec:	33d8      	adds	r3, #216	; 0xd8
 80189ee:	4a27      	ldr	r2, [pc, #156]	; (8018a8c <createProblem+0x17be4>)
 80189f0:	461c      	mov	r4, r3
 80189f2:	4615      	mov	r5, r2
 80189f4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80189f6:	6020      	str	r0, [r4, #0]
 80189f8:	6061      	str	r1, [r4, #4]
 80189fa:	60a2      	str	r2, [r4, #8]
 80189fc:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7C");
 80189fe:	687b      	ldr	r3, [r7, #4]
 8018a00:	33cc      	adds	r3, #204	; 0xcc
 8018a02:	4a23      	ldr	r2, [pc, #140]	; (8018a90 <createProblem+0x17be8>)
 8018a04:	8811      	ldrh	r1, [r2, #0]
 8018a06:	7892      	ldrb	r2, [r2, #2]
 8018a08:	8019      	strh	r1, [r3, #0]
 8018a0a:	709a      	strb	r2, [r3, #2]
			break;
 8018a0c:	f001 bf92 	b.w	801a934 <createProblem+0x19a8c>
 8018a10:	08029180 	.word	0x08029180
 8018a14:	08029198 	.word	0x08029198
 8018a18:	080291a8 	.word	0x080291a8
 8018a1c:	08020a14 	.word	0x08020a14
 8018a20:	080208f0 	.word	0x080208f0
 8018a24:	080291bc 	.word	0x080291bc
 8018a28:	080291c8 	.word	0x080291c8
 8018a2c:	080291d4 	.word	0x080291d4
 8018a30:	080208a0 	.word	0x080208a0
 8018a34:	08020928 	.word	0x08020928
 8018a38:	080291e4 	.word	0x080291e4
 8018a3c:	080291f4 	.word	0x080291f4
 8018a40:	08029200 	.word	0x08029200
 8018a44:	0802091c 	.word	0x0802091c
 8018a48:	080208ac 	.word	0x080208ac
 8018a4c:	08029210 	.word	0x08029210
 8018a50:	0802921c 	.word	0x0802921c
 8018a54:	0802922c 	.word	0x0802922c
 8018a58:	08020dc8 	.word	0x08020dc8
 8018a5c:	08029240 	.word	0x08029240
 8018a60:	08029254 	.word	0x08029254
 8018a64:	08023158 	.word	0x08023158
 8018a68:	08021748 	.word	0x08021748
 8018a6c:	08020874 	.word	0x08020874
 8018a70:	08029260 	.word	0x08029260
 8018a74:	08029268 	.word	0x08029268
 8018a78:	0802927c 	.word	0x0802927c
 8018a7c:	08020b7c 	.word	0x08020b7c
 8018a80:	08029298 	.word	0x08029298
 8018a84:	080292a0 	.word	0x080292a0
 8018a88:	080292b0 	.word	0x080292b0
 8018a8c:	080268a8 	.word	0x080268a8
 8018a90:	08020b0c 	.word	0x08020b0c
		case 769 :
			strcpy(p->name,"GGGGGGH");
 8018a94:	687b      	ldr	r3, [r7, #4]
 8018a96:	337c      	adds	r3, #124	; 0x7c
 8018a98:	49bf      	ldr	r1, [pc, #764]	; (8018d98 <createProblem+0x17ef0>)
 8018a9a:	461a      	mov	r2, r3
 8018a9c:	460b      	mov	r3, r1
 8018a9e:	cb03      	ldmia	r3!, {r0, r1}
 8018aa0:	6010      	str	r0, [r2, #0]
 8018aa2:	6051      	str	r1, [r2, #4]
			p->moveSize = 9;
 8018aa4:	687b      	ldr	r3, [r7, #4]
 8018aa6:	2209      	movs	r2, #9
 8018aa8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,I,K,H,J,I,J,K");
 8018aaa:	687b      	ldr	r3, [r7, #4]
 8018aac:	3340      	adds	r3, #64	; 0x40
 8018aae:	4abb      	ldr	r2, [pc, #748]	; (8018d9c <createProblem+0x17ef4>)
 8018ab0:	461d      	mov	r5, r3
 8018ab2:	4614      	mov	r4, r2
 8018ab4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018ab6:	6028      	str	r0, [r5, #0]
 8018ab8:	6069      	str	r1, [r5, #4]
 8018aba:	60aa      	str	r2, [r5, #8]
 8018abc:	60eb      	str	r3, [r5, #12]
 8018abe:	8823      	ldrh	r3, [r4, #0]
 8018ac0:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"4,5,7,9,10,13,18,16,16");
 8018ac2:	687b      	ldr	r3, [r7, #4]
 8018ac4:	3304      	adds	r3, #4
 8018ac6:	4ab6      	ldr	r2, [pc, #728]	; (8018da0 <createProblem+0x17ef8>)
 8018ac8:	461c      	mov	r4, r3
 8018aca:	4615      	mov	r5, r2
 8018acc:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8018ace:	6020      	str	r0, [r4, #0]
 8018ad0:	6061      	str	r1, [r4, #4]
 8018ad2:	60a2      	str	r2, [r4, #8]
 8018ad4:	60e3      	str	r3, [r4, #12]
 8018ad6:	6828      	ldr	r0, [r5, #0]
 8018ad8:	6120      	str	r0, [r4, #16]
 8018ada:	88ab      	ldrh	r3, [r5, #4]
 8018adc:	79aa      	ldrb	r2, [r5, #6]
 8018ade:	82a3      	strh	r3, [r4, #20]
 8018ae0:	4613      	mov	r3, r2
 8018ae2:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,s,d,d,d,d,e,d,d");
 8018ae4:	687b      	ldr	r3, [r7, #4]
 8018ae6:	33d8      	adds	r3, #216	; 0xd8
 8018ae8:	4aae      	ldr	r2, [pc, #696]	; (8018da4 <createProblem+0x17efc>)
 8018aea:	461d      	mov	r5, r3
 8018aec:	4614      	mov	r4, r2
 8018aee:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018af0:	6028      	str	r0, [r5, #0]
 8018af2:	6069      	str	r1, [r5, #4]
 8018af4:	60aa      	str	r2, [r5, #8]
 8018af6:	60eb      	str	r3, [r5, #12]
 8018af8:	8823      	ldrh	r3, [r4, #0]
 8018afa:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 8018afc:	687b      	ldr	r3, [r7, #4]
 8018afe:	33cc      	adds	r3, #204	; 0xcc
 8018b00:	4aa9      	ldr	r2, [pc, #676]	; (8018da8 <createProblem+0x17f00>)
 8018b02:	6810      	ldr	r0, [r2, #0]
 8018b04:	6018      	str	r0, [r3, #0]
			break;
 8018b06:	f001 bf15 	b.w	801a934 <createProblem+0x19a8c>
		case 77 :
			strcpy(p->name,"MADDEKÈ");
 8018b0a:	687b      	ldr	r3, [r7, #4]
 8018b0c:	337c      	adds	r3, #124	; 0x7c
 8018b0e:	49a7      	ldr	r1, [pc, #668]	; (8018dac <createProblem+0x17f04>)
 8018b10:	461a      	mov	r2, r3
 8018b12:	460b      	mov	r3, r1
 8018b14:	cb03      	ldmia	r3!, {r0, r1}
 8018b16:	6010      	str	r0, [r2, #0]
 8018b18:	6051      	str	r1, [r2, #4]
 8018b1a:	781b      	ldrb	r3, [r3, #0]
 8018b1c:	7213      	strb	r3, [r2, #8]
			p->moveSize = 5;
 8018b1e:	687b      	ldr	r3, [r7, #4]
 8018b20:	2205      	movs	r2, #5
 8018b22:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,I,G,G,D");
 8018b24:	687b      	ldr	r3, [r7, #4]
 8018b26:	3340      	adds	r3, #64	; 0x40
 8018b28:	49a1      	ldr	r1, [pc, #644]	; (8018db0 <createProblem+0x17f08>)
 8018b2a:	461a      	mov	r2, r3
 8018b2c:	460b      	mov	r3, r1
 8018b2e:	cb03      	ldmia	r3!, {r0, r1}
 8018b30:	6010      	str	r0, [r2, #0]
 8018b32:	6051      	str	r1, [r2, #4]
 8018b34:	881b      	ldrh	r3, [r3, #0]
 8018b36:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,7,10,14,18");
 8018b38:	687b      	ldr	r3, [r7, #4]
 8018b3a:	3304      	adds	r3, #4
 8018b3c:	4a9d      	ldr	r2, [pc, #628]	; (8018db4 <createProblem+0x17f0c>)
 8018b3e:	461c      	mov	r4, r3
 8018b40:	4613      	mov	r3, r2
 8018b42:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018b44:	6020      	str	r0, [r4, #0]
 8018b46:	6061      	str	r1, [r4, #4]
 8018b48:	60a2      	str	r2, [r4, #8]
 8018b4a:	781b      	ldrb	r3, [r3, #0]
 8018b4c:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8018b4e:	687b      	ldr	r3, [r7, #4]
 8018b50:	33d8      	adds	r3, #216	; 0xd8
 8018b52:	4999      	ldr	r1, [pc, #612]	; (8018db8 <createProblem+0x17f10>)
 8018b54:	461a      	mov	r2, r3
 8018b56:	460b      	mov	r3, r1
 8018b58:	cb03      	ldmia	r3!, {r0, r1}
 8018b5a:	6010      	str	r0, [r2, #0]
 8018b5c:	6051      	str	r1, [r2, #4]
 8018b5e:	881b      	ldrh	r3, [r3, #0]
 8018b60:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 8018b62:	687b      	ldr	r3, [r7, #4]
 8018b64:	33cc      	adds	r3, #204	; 0xcc
 8018b66:	4a95      	ldr	r2, [pc, #596]	; (8018dbc <createProblem+0x17f14>)
 8018b68:	6810      	ldr	r0, [r2, #0]
 8018b6a:	6018      	str	r0, [r3, #0]
			break;
 8018b6c:	f001 bee2 	b.w	801a934 <createProblem+0x19a8c>
		case 770 :
			strcpy(p->name,"MOMMSEN'S#2");
 8018b70:	687b      	ldr	r3, [r7, #4]
 8018b72:	337c      	adds	r3, #124	; 0x7c
 8018b74:	4a92      	ldr	r2, [pc, #584]	; (8018dc0 <createProblem+0x17f18>)
 8018b76:	461c      	mov	r4, r3
 8018b78:	4613      	mov	r3, r2
 8018b7a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018b7c:	6020      	str	r0, [r4, #0]
 8018b7e:	6061      	str	r1, [r4, #4]
 8018b80:	60a2      	str	r2, [r4, #8]
			p->moveSize = 7;
 8018b82:	687b      	ldr	r3, [r7, #4]
 8018b84:	2207      	movs	r2, #7
 8018b86:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,G,E,I,G,I");
 8018b88:	687b      	ldr	r3, [r7, #4]
 8018b8a:	3340      	adds	r3, #64	; 0x40
 8018b8c:	4a8d      	ldr	r2, [pc, #564]	; (8018dc4 <createProblem+0x17f1c>)
 8018b8e:	461c      	mov	r4, r3
 8018b90:	4613      	mov	r3, r2
 8018b92:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018b94:	6020      	str	r0, [r4, #0]
 8018b96:	6061      	str	r1, [r4, #4]
 8018b98:	60a2      	str	r2, [r4, #8]
 8018b9a:	881b      	ldrh	r3, [r3, #0]
 8018b9c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,12,14,15,18");
 8018b9e:	687b      	ldr	r3, [r7, #4]
 8018ba0:	3304      	adds	r3, #4
 8018ba2:	4a89      	ldr	r2, [pc, #548]	; (8018dc8 <createProblem+0x17f20>)
 8018ba4:	461d      	mov	r5, r3
 8018ba6:	4614      	mov	r4, r2
 8018ba8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018baa:	6028      	str	r0, [r5, #0]
 8018bac:	6069      	str	r1, [r5, #4]
 8018bae:	60aa      	str	r2, [r5, #8]
 8018bb0:	60eb      	str	r3, [r5, #12]
 8018bb2:	8823      	ldrh	r3, [r4, #0]
 8018bb4:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8018bb6:	687b      	ldr	r3, [r7, #4]
 8018bb8:	33d8      	adds	r3, #216	; 0xd8
 8018bba:	4a84      	ldr	r2, [pc, #528]	; (8018dcc <createProblem+0x17f24>)
 8018bbc:	461c      	mov	r4, r3
 8018bbe:	4613      	mov	r3, r2
 8018bc0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018bc2:	6020      	str	r0, [r4, #0]
 8018bc4:	6061      	str	r1, [r4, #4]
 8018bc6:	60a2      	str	r2, [r4, #8]
 8018bc8:	881b      	ldrh	r3, [r3, #0]
 8018bca:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8018bcc:	687b      	ldr	r3, [r7, #4]
 8018bce:	33cc      	adds	r3, #204	; 0xcc
 8018bd0:	4a7f      	ldr	r2, [pc, #508]	; (8018dd0 <createProblem+0x17f28>)
 8018bd2:	8811      	ldrh	r1, [r2, #0]
 8018bd4:	7892      	ldrb	r2, [r2, #2]
 8018bd6:	8019      	strh	r1, [r3, #0]
 8018bd8:	709a      	strb	r2, [r3, #2]
			break;
 8018bda:	f001 beab 	b.w	801a934 <createProblem+0x19a8c>
		case 771 :
			strcpy(p->name,"L’HEURE SOMBRE");
 8018bde:	687b      	ldr	r3, [r7, #4]
 8018be0:	337c      	adds	r3, #124	; 0x7c
 8018be2:	4a7c      	ldr	r2, [pc, #496]	; (8018dd4 <createProblem+0x17f2c>)
 8018be4:	461d      	mov	r5, r3
 8018be6:	4614      	mov	r4, r2
 8018be8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018bea:	6028      	str	r0, [r5, #0]
 8018bec:	6069      	str	r1, [r5, #4]
 8018bee:	60aa      	str	r2, [r5, #8]
 8018bf0:	60eb      	str	r3, [r5, #12]
 8018bf2:	7823      	ldrb	r3, [r4, #0]
 8018bf4:	742b      	strb	r3, [r5, #16]
			p->moveSize = 9;
 8018bf6:	687b      	ldr	r3, [r7, #4]
 8018bf8:	2209      	movs	r2, #9
 8018bfa:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,D,E,D,E,B,C,A,B");
 8018bfc:	687b      	ldr	r3, [r7, #4]
 8018bfe:	3340      	adds	r3, #64	; 0x40
 8018c00:	4a75      	ldr	r2, [pc, #468]	; (8018dd8 <createProblem+0x17f30>)
 8018c02:	461d      	mov	r5, r3
 8018c04:	4614      	mov	r4, r2
 8018c06:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018c08:	6028      	str	r0, [r5, #0]
 8018c0a:	6069      	str	r1, [r5, #4]
 8018c0c:	60aa      	str	r2, [r5, #8]
 8018c0e:	60eb      	str	r3, [r5, #12]
 8018c10:	8823      	ldrh	r3, [r4, #0]
 8018c12:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,7,9,11,14,12,16,18,6");
 8018c14:	687b      	ldr	r3, [r7, #4]
 8018c16:	3304      	adds	r3, #4
 8018c18:	4a70      	ldr	r2, [pc, #448]	; (8018ddc <createProblem+0x17f34>)
 8018c1a:	461c      	mov	r4, r3
 8018c1c:	4615      	mov	r5, r2
 8018c1e:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8018c20:	6020      	str	r0, [r4, #0]
 8018c22:	6061      	str	r1, [r4, #4]
 8018c24:	60a2      	str	r2, [r4, #8]
 8018c26:	60e3      	str	r3, [r4, #12]
 8018c28:	6828      	ldr	r0, [r5, #0]
 8018c2a:	6120      	str	r0, [r4, #16]
 8018c2c:	88ab      	ldrh	r3, [r5, #4]
 8018c2e:	79aa      	ldrb	r2, [r5, #6]
 8018c30:	82a3      	strh	r3, [r4, #20]
 8018c32:	4613      	mov	r3, r2
 8018c34:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e,s");
 8018c36:	687b      	ldr	r3, [r7, #4]
 8018c38:	33d8      	adds	r3, #216	; 0xd8
 8018c3a:	4a69      	ldr	r2, [pc, #420]	; (8018de0 <createProblem+0x17f38>)
 8018c3c:	461d      	mov	r5, r3
 8018c3e:	4614      	mov	r4, r2
 8018c40:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018c42:	6028      	str	r0, [r5, #0]
 8018c44:	6069      	str	r1, [r5, #4]
 8018c46:	60aa      	str	r2, [r5, #8]
 8018c48:	60eb      	str	r3, [r5, #12]
 8018c4a:	8823      	ldrh	r3, [r4, #0]
 8018c4c:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "7B+");
 8018c4e:	687b      	ldr	r3, [r7, #4]
 8018c50:	33cc      	adds	r3, #204	; 0xcc
 8018c52:	4a5a      	ldr	r2, [pc, #360]	; (8018dbc <createProblem+0x17f14>)
 8018c54:	6810      	ldr	r0, [r2, #0]
 8018c56:	6018      	str	r0, [r3, #0]
			break;
 8018c58:	f001 be6c 	b.w	801a934 <createProblem+0x19a8c>
		case 772 :
			strcpy(p->name,"NOT FOR HOONY");
 8018c5c:	687b      	ldr	r3, [r7, #4]
 8018c5e:	337c      	adds	r3, #124	; 0x7c
 8018c60:	4a60      	ldr	r2, [pc, #384]	; (8018de4 <createProblem+0x17f3c>)
 8018c62:	461c      	mov	r4, r3
 8018c64:	4613      	mov	r3, r2
 8018c66:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018c68:	6020      	str	r0, [r4, #0]
 8018c6a:	6061      	str	r1, [r4, #4]
 8018c6c:	60a2      	str	r2, [r4, #8]
 8018c6e:	881b      	ldrh	r3, [r3, #0]
 8018c70:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 8;
 8018c72:	687b      	ldr	r3, [r7, #4]
 8018c74:	2208      	movs	r2, #8
 8018c76:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,E,C,G,A,I,H");
 8018c78:	687b      	ldr	r3, [r7, #4]
 8018c7a:	3340      	adds	r3, #64	; 0x40
 8018c7c:	4a5a      	ldr	r2, [pc, #360]	; (8018de8 <createProblem+0x17f40>)
 8018c7e:	461c      	mov	r4, r3
 8018c80:	4615      	mov	r5, r2
 8018c82:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8018c84:	6020      	str	r0, [r4, #0]
 8018c86:	6061      	str	r1, [r4, #4]
 8018c88:	60a2      	str	r2, [r4, #8]
 8018c8a:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,9,13,17,9,18,16");
 8018c8c:	687b      	ldr	r3, [r7, #4]
 8018c8e:	3304      	adds	r3, #4
 8018c90:	4a56      	ldr	r2, [pc, #344]	; (8018dec <createProblem+0x17f44>)
 8018c92:	461d      	mov	r5, r3
 8018c94:	4614      	mov	r4, r2
 8018c96:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018c98:	6028      	str	r0, [r5, #0]
 8018c9a:	6069      	str	r1, [r5, #4]
 8018c9c:	60aa      	str	r2, [r5, #8]
 8018c9e:	60eb      	str	r3, [r5, #12]
 8018ca0:	6820      	ldr	r0, [r4, #0]
 8018ca2:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e,d");
 8018ca4:	687b      	ldr	r3, [r7, #4]
 8018ca6:	33d8      	adds	r3, #216	; 0xd8
 8018ca8:	4a51      	ldr	r2, [pc, #324]	; (8018df0 <createProblem+0x17f48>)
 8018caa:	461c      	mov	r4, r3
 8018cac:	4615      	mov	r5, r2
 8018cae:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8018cb0:	6020      	str	r0, [r4, #0]
 8018cb2:	6061      	str	r1, [r4, #4]
 8018cb4:	60a2      	str	r2, [r4, #8]
 8018cb6:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 8018cb8:	687b      	ldr	r3, [r7, #4]
 8018cba:	33cc      	adds	r3, #204	; 0xcc
 8018cbc:	4a4d      	ldr	r2, [pc, #308]	; (8018df4 <createProblem+0x17f4c>)
 8018cbe:	6810      	ldr	r0, [r2, #0]
 8018cc0:	6018      	str	r0, [r3, #0]
			break;
 8018cc2:	f001 be37 	b.w	801a934 <createProblem+0x19a8c>
		case 773 :
			strcpy(p->name,"LIZZY BLACK");
 8018cc6:	687b      	ldr	r3, [r7, #4]
 8018cc8:	337c      	adds	r3, #124	; 0x7c
 8018cca:	4a4b      	ldr	r2, [pc, #300]	; (8018df8 <createProblem+0x17f50>)
 8018ccc:	461c      	mov	r4, r3
 8018cce:	4613      	mov	r3, r2
 8018cd0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018cd2:	6020      	str	r0, [r4, #0]
 8018cd4:	6061      	str	r1, [r4, #4]
 8018cd6:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 8018cd8:	687b      	ldr	r3, [r7, #4]
 8018cda:	2206      	movs	r2, #6
 8018cdc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,I,F,E,D,I");
 8018cde:	687b      	ldr	r3, [r7, #4]
 8018ce0:	3340      	adds	r3, #64	; 0x40
 8018ce2:	4a46      	ldr	r2, [pc, #280]	; (8018dfc <createProblem+0x17f54>)
 8018ce4:	461c      	mov	r4, r3
 8018ce6:	4613      	mov	r3, r2
 8018ce8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018cea:	6020      	str	r0, [r4, #0]
 8018cec:	6061      	str	r1, [r4, #4]
 8018cee:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,10,13,12,15,18");
 8018cf0:	687b      	ldr	r3, [r7, #4]
 8018cf2:	3304      	adds	r3, #4
 8018cf4:	4a42      	ldr	r2, [pc, #264]	; (8018e00 <createProblem+0x17f58>)
 8018cf6:	461d      	mov	r5, r3
 8018cf8:	4614      	mov	r4, r2
 8018cfa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018cfc:	6028      	str	r0, [r5, #0]
 8018cfe:	6069      	str	r1, [r5, #4]
 8018d00:	60aa      	str	r2, [r5, #8]
 8018d02:	60eb      	str	r3, [r5, #12]
 8018d04:	7823      	ldrb	r3, [r4, #0]
 8018d06:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8018d08:	687b      	ldr	r3, [r7, #4]
 8018d0a:	33d8      	adds	r3, #216	; 0xd8
 8018d0c:	4a3d      	ldr	r2, [pc, #244]	; (8018e04 <createProblem+0x17f5c>)
 8018d0e:	461c      	mov	r4, r3
 8018d10:	4613      	mov	r3, r2
 8018d12:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018d14:	6020      	str	r0, [r4, #0]
 8018d16:	6061      	str	r1, [r4, #4]
 8018d18:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B");
 8018d1a:	687b      	ldr	r3, [r7, #4]
 8018d1c:	33cc      	adds	r3, #204	; 0xcc
 8018d1e:	4a3a      	ldr	r2, [pc, #232]	; (8018e08 <createProblem+0x17f60>)
 8018d20:	8811      	ldrh	r1, [r2, #0]
 8018d22:	7892      	ldrb	r2, [r2, #2]
 8018d24:	8019      	strh	r1, [r3, #0]
 8018d26:	709a      	strb	r2, [r3, #2]
			break;
 8018d28:	f001 be04 	b.w	801a934 <createProblem+0x19a8c>
		case 774 :
			strcpy(p->name,"I ❤️ ELLIA");
 8018d2c:	687b      	ldr	r3, [r7, #4]
 8018d2e:	337c      	adds	r3, #124	; 0x7c
 8018d30:	4a36      	ldr	r2, [pc, #216]	; (8018e0c <createProblem+0x17f64>)
 8018d32:	461c      	mov	r4, r3
 8018d34:	4613      	mov	r3, r2
 8018d36:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018d38:	6020      	str	r0, [r4, #0]
 8018d3a:	6061      	str	r1, [r4, #4]
 8018d3c:	60a2      	str	r2, [r4, #8]
 8018d3e:	881a      	ldrh	r2, [r3, #0]
 8018d40:	789b      	ldrb	r3, [r3, #2]
 8018d42:	81a2      	strh	r2, [r4, #12]
 8018d44:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 5;
 8018d46:	687b      	ldr	r3, [r7, #4]
 8018d48:	2205      	movs	r2, #5
 8018d4a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,G,C,D");
 8018d4c:	687b      	ldr	r3, [r7, #4]
 8018d4e:	3340      	adds	r3, #64	; 0x40
 8018d50:	492f      	ldr	r1, [pc, #188]	; (8018e10 <createProblem+0x17f68>)
 8018d52:	461a      	mov	r2, r3
 8018d54:	460b      	mov	r3, r1
 8018d56:	cb03      	ldmia	r3!, {r0, r1}
 8018d58:	6010      	str	r0, [r2, #0]
 8018d5a:	6051      	str	r1, [r2, #4]
 8018d5c:	881b      	ldrh	r3, [r3, #0]
 8018d5e:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,6,10,13,18");
 8018d60:	687b      	ldr	r3, [r7, #4]
 8018d62:	3304      	adds	r3, #4
 8018d64:	4a2b      	ldr	r2, [pc, #172]	; (8018e14 <createProblem+0x17f6c>)
 8018d66:	461c      	mov	r4, r3
 8018d68:	4613      	mov	r3, r2
 8018d6a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018d6c:	6020      	str	r0, [r4, #0]
 8018d6e:	6061      	str	r1, [r4, #4]
 8018d70:	60a2      	str	r2, [r4, #8]
 8018d72:	781b      	ldrb	r3, [r3, #0]
 8018d74:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,e");
 8018d76:	687b      	ldr	r3, [r7, #4]
 8018d78:	33d8      	adds	r3, #216	; 0xd8
 8018d7a:	4927      	ldr	r1, [pc, #156]	; (8018e18 <createProblem+0x17f70>)
 8018d7c:	461a      	mov	r2, r3
 8018d7e:	460b      	mov	r3, r1
 8018d80:	cb03      	ldmia	r3!, {r0, r1}
 8018d82:	6010      	str	r0, [r2, #0]
 8018d84:	6051      	str	r1, [r2, #4]
 8018d86:	881b      	ldrh	r3, [r3, #0]
 8018d88:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 8018d8a:	687b      	ldr	r3, [r7, #4]
 8018d8c:	33cc      	adds	r3, #204	; 0xcc
 8018d8e:	4a19      	ldr	r2, [pc, #100]	; (8018df4 <createProblem+0x17f4c>)
 8018d90:	6810      	ldr	r0, [r2, #0]
 8018d92:	6018      	str	r0, [r3, #0]
			break;
 8018d94:	f001 bdce 	b.w	801a934 <createProblem+0x19a8c>
 8018d98:	080292c8 	.word	0x080292c8
 8018d9c:	080292d0 	.word	0x080292d0
 8018da0:	080292e4 	.word	0x080292e4
 8018da4:	080292fc 	.word	0x080292fc
 8018da8:	08020830 	.word	0x08020830
 8018dac:	08029310 	.word	0x08029310
 8018db0:	0802931c 	.word	0x0802931c
 8018db4:	08029328 	.word	0x08029328
 8018db8:	080208a0 	.word	0x080208a0
 8018dbc:	08020dc8 	.word	0x08020dc8
 8018dc0:	08029338 	.word	0x08029338
 8018dc4:	08029344 	.word	0x08029344
 8018dc8:	0802192c 	.word	0x0802192c
 8018dcc:	08020a14 	.word	0x08020a14
 8018dd0:	080208f0 	.word	0x080208f0
 8018dd4:	08029354 	.word	0x08029354
 8018dd8:	08029368 	.word	0x08029368
 8018ddc:	0802937c 	.word	0x0802937c
 8018de0:	08028a84 	.word	0x08028a84
 8018de4:	08029394 	.word	0x08029394
 8018de8:	080293a4 	.word	0x080293a4
 8018dec:	080293b4 	.word	0x080293b4
 8018df0:	080260d4 	.word	0x080260d4
 8018df4:	080209a4 	.word	0x080209a4
 8018df8:	080293c8 	.word	0x080293c8
 8018dfc:	080293d4 	.word	0x080293d4
 8018e00:	080293e0 	.word	0x080293e0
 8018e04:	0802091c 	.word	0x0802091c
 8018e08:	080208ac 	.word	0x080208ac
 8018e0c:	080293f4 	.word	0x080293f4
 8018e10:	08029404 	.word	0x08029404
 8018e14:	08029410 	.word	0x08029410
 8018e18:	08021748 	.word	0x08021748
		case 775 :
			strcpy(p->name,"DJWUDHDJWJCJDJE");
 8018e1c:	687b      	ldr	r3, [r7, #4]
 8018e1e:	337c      	adds	r3, #124	; 0x7c
 8018e20:	4aa6      	ldr	r2, [pc, #664]	; (80190bc <createProblem+0x18214>)
 8018e22:	461c      	mov	r4, r3
 8018e24:	4615      	mov	r5, r2
 8018e26:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8018e28:	6020      	str	r0, [r4, #0]
 8018e2a:	6061      	str	r1, [r4, #4]
 8018e2c:	60a2      	str	r2, [r4, #8]
 8018e2e:	60e3      	str	r3, [r4, #12]
			p->moveSize = 10;
 8018e30:	687b      	ldr	r3, [r7, #4]
 8018e32:	220a      	movs	r2, #10
 8018e34:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,C,B,C,E,D,B,A,D");
 8018e36:	687b      	ldr	r3, [r7, #4]
 8018e38:	3340      	adds	r3, #64	; 0x40
 8018e3a:	4aa1      	ldr	r2, [pc, #644]	; (80190c0 <createProblem+0x18218>)
 8018e3c:	461d      	mov	r5, r3
 8018e3e:	4614      	mov	r4, r2
 8018e40:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018e42:	6028      	str	r0, [r5, #0]
 8018e44:	6069      	str	r1, [r5, #4]
 8018e46:	60aa      	str	r2, [r5, #8]
 8018e48:	60eb      	str	r3, [r5, #12]
 8018e4a:	6820      	ldr	r0, [r4, #0]
 8018e4c:	6128      	str	r0, [r5, #16]
			strcpy(p->moveNumbers,"4,6,8,10,13,12,15,15,18,18");
 8018e4e:	687b      	ldr	r3, [r7, #4]
 8018e50:	3304      	adds	r3, #4
 8018e52:	4a9c      	ldr	r2, [pc, #624]	; (80190c4 <createProblem+0x1821c>)
 8018e54:	461d      	mov	r5, r3
 8018e56:	4614      	mov	r4, r2
 8018e58:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018e5a:	6028      	str	r0, [r5, #0]
 8018e5c:	6069      	str	r1, [r5, #4]
 8018e5e:	60aa      	str	r2, [r5, #8]
 8018e60:	60eb      	str	r3, [r5, #12]
 8018e62:	cc03      	ldmia	r4!, {r0, r1}
 8018e64:	6128      	str	r0, [r5, #16]
 8018e66:	6169      	str	r1, [r5, #20]
 8018e68:	8823      	ldrh	r3, [r4, #0]
 8018e6a:	78a2      	ldrb	r2, [r4, #2]
 8018e6c:	832b      	strh	r3, [r5, #24]
 8018e6e:	4613      	mov	r3, r2
 8018e70:	76ab      	strb	r3, [r5, #26]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e,e");
 8018e72:	687b      	ldr	r3, [r7, #4]
 8018e74:	33d8      	adds	r3, #216	; 0xd8
 8018e76:	4a94      	ldr	r2, [pc, #592]	; (80190c8 <createProblem+0x18220>)
 8018e78:	461d      	mov	r5, r3
 8018e7a:	4614      	mov	r4, r2
 8018e7c:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018e7e:	6028      	str	r0, [r5, #0]
 8018e80:	6069      	str	r1, [r5, #4]
 8018e82:	60aa      	str	r2, [r5, #8]
 8018e84:	60eb      	str	r3, [r5, #12]
 8018e86:	6820      	ldr	r0, [r4, #0]
 8018e88:	6128      	str	r0, [r5, #16]
			strcpy(p->grade, "6B+");
 8018e8a:	687b      	ldr	r3, [r7, #4]
 8018e8c:	33cc      	adds	r3, #204	; 0xcc
 8018e8e:	4a8f      	ldr	r2, [pc, #572]	; (80190cc <createProblem+0x18224>)
 8018e90:	6810      	ldr	r0, [r2, #0]
 8018e92:	6018      	str	r0, [r3, #0]
			break;
 8018e94:	f001 bd4e 	b.w	801a934 <createProblem+0x19a8c>
		case 776 :
			strcpy(p->name,"ULTRAVIOLENCE");
 8018e98:	687b      	ldr	r3, [r7, #4]
 8018e9a:	337c      	adds	r3, #124	; 0x7c
 8018e9c:	4a8c      	ldr	r2, [pc, #560]	; (80190d0 <createProblem+0x18228>)
 8018e9e:	461c      	mov	r4, r3
 8018ea0:	4613      	mov	r3, r2
 8018ea2:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018ea4:	6020      	str	r0, [r4, #0]
 8018ea6:	6061      	str	r1, [r4, #4]
 8018ea8:	60a2      	str	r2, [r4, #8]
 8018eaa:	881b      	ldrh	r3, [r3, #0]
 8018eac:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 8018eae:	687b      	ldr	r3, [r7, #4]
 8018eb0:	2207      	movs	r2, #7
 8018eb2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,C,F,E,J,D");
 8018eb4:	687b      	ldr	r3, [r7, #4]
 8018eb6:	3340      	adds	r3, #64	; 0x40
 8018eb8:	4a86      	ldr	r2, [pc, #536]	; (80190d4 <createProblem+0x1822c>)
 8018eba:	461c      	mov	r4, r3
 8018ebc:	4613      	mov	r3, r2
 8018ebe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018ec0:	6020      	str	r0, [r4, #0]
 8018ec2:	6061      	str	r1, [r4, #4]
 8018ec4:	60a2      	str	r2, [r4, #8]
 8018ec6:	881b      	ldrh	r3, [r3, #0]
 8018ec8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,6,8,11,14,16,18");
 8018eca:	687b      	ldr	r3, [r7, #4]
 8018ecc:	3304      	adds	r3, #4
 8018ece:	4a82      	ldr	r2, [pc, #520]	; (80190d8 <createProblem+0x18230>)
 8018ed0:	461d      	mov	r5, r3
 8018ed2:	4614      	mov	r4, r2
 8018ed4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018ed6:	6028      	str	r0, [r5, #0]
 8018ed8:	6069      	str	r1, [r5, #4]
 8018eda:	60aa      	str	r2, [r5, #8]
 8018edc:	60eb      	str	r3, [r5, #12]
 8018ede:	8823      	ldrh	r3, [r4, #0]
 8018ee0:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8018ee2:	687b      	ldr	r3, [r7, #4]
 8018ee4:	33d8      	adds	r3, #216	; 0xd8
 8018ee6:	4a7d      	ldr	r2, [pc, #500]	; (80190dc <createProblem+0x18234>)
 8018ee8:	461c      	mov	r4, r3
 8018eea:	4613      	mov	r3, r2
 8018eec:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018eee:	6020      	str	r0, [r4, #0]
 8018ef0:	6061      	str	r1, [r4, #4]
 8018ef2:	60a2      	str	r2, [r4, #8]
 8018ef4:	881b      	ldrh	r3, [r3, #0]
 8018ef6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8018ef8:	687b      	ldr	r3, [r7, #4]
 8018efa:	33cc      	adds	r3, #204	; 0xcc
 8018efc:	4a78      	ldr	r2, [pc, #480]	; (80190e0 <createProblem+0x18238>)
 8018efe:	6810      	ldr	r0, [r2, #0]
 8018f00:	6018      	str	r0, [r3, #0]
			break;
 8018f02:	f001 bd17 	b.w	801a934 <createProblem+0x19a8c>
		case 777 :
			strcpy(p->name,"UP MY SLEEVES");
 8018f06:	687b      	ldr	r3, [r7, #4]
 8018f08:	337c      	adds	r3, #124	; 0x7c
 8018f0a:	4a76      	ldr	r2, [pc, #472]	; (80190e4 <createProblem+0x1823c>)
 8018f0c:	461c      	mov	r4, r3
 8018f0e:	4613      	mov	r3, r2
 8018f10:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018f12:	6020      	str	r0, [r4, #0]
 8018f14:	6061      	str	r1, [r4, #4]
 8018f16:	60a2      	str	r2, [r4, #8]
 8018f18:	881b      	ldrh	r3, [r3, #0]
 8018f1a:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 5;
 8018f1c:	687b      	ldr	r3, [r7, #4]
 8018f1e:	2205      	movs	r2, #5
 8018f20:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,J,E,A");
 8018f22:	687b      	ldr	r3, [r7, #4]
 8018f24:	3340      	adds	r3, #64	; 0x40
 8018f26:	4970      	ldr	r1, [pc, #448]	; (80190e8 <createProblem+0x18240>)
 8018f28:	461a      	mov	r2, r3
 8018f2a:	460b      	mov	r3, r1
 8018f2c:	cb03      	ldmia	r3!, {r0, r1}
 8018f2e:	6010      	str	r0, [r2, #0]
 8018f30:	6051      	str	r1, [r2, #4]
 8018f32:	881b      	ldrh	r3, [r3, #0]
 8018f34:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,9,12,14,18");
 8018f36:	687b      	ldr	r3, [r7, #4]
 8018f38:	3304      	adds	r3, #4
 8018f3a:	4a6c      	ldr	r2, [pc, #432]	; (80190ec <createProblem+0x18244>)
 8018f3c:	461c      	mov	r4, r3
 8018f3e:	4613      	mov	r3, r2
 8018f40:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018f42:	6020      	str	r0, [r4, #0]
 8018f44:	6061      	str	r1, [r4, #4]
 8018f46:	60a2      	str	r2, [r4, #8]
 8018f48:	781b      	ldrb	r3, [r3, #0]
 8018f4a:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8018f4c:	687b      	ldr	r3, [r7, #4]
 8018f4e:	33d8      	adds	r3, #216	; 0xd8
 8018f50:	4967      	ldr	r1, [pc, #412]	; (80190f0 <createProblem+0x18248>)
 8018f52:	461a      	mov	r2, r3
 8018f54:	460b      	mov	r3, r1
 8018f56:	cb03      	ldmia	r3!, {r0, r1}
 8018f58:	6010      	str	r0, [r2, #0]
 8018f5a:	6051      	str	r1, [r2, #4]
 8018f5c:	881b      	ldrh	r3, [r3, #0]
 8018f5e:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7C+");
 8018f60:	687b      	ldr	r3, [r7, #4]
 8018f62:	33cc      	adds	r3, #204	; 0xcc
 8018f64:	4a63      	ldr	r2, [pc, #396]	; (80190f4 <createProblem+0x1824c>)
 8018f66:	6810      	ldr	r0, [r2, #0]
 8018f68:	6018      	str	r0, [r3, #0]
			break;
 8018f6a:	f001 bce3 	b.w	801a934 <createProblem+0x19a8c>
		case 778 :
			strcpy(p->name,"BO4");
 8018f6e:	687b      	ldr	r3, [r7, #4]
 8018f70:	337c      	adds	r3, #124	; 0x7c
 8018f72:	4a61      	ldr	r2, [pc, #388]	; (80190f8 <createProblem+0x18250>)
 8018f74:	6810      	ldr	r0, [r2, #0]
 8018f76:	6018      	str	r0, [r3, #0]
			p->moveSize = 7;
 8018f78:	687b      	ldr	r3, [r7, #4]
 8018f7a:	2207      	movs	r2, #7
 8018f7c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,F,H,G,I,H");
 8018f7e:	687b      	ldr	r3, [r7, #4]
 8018f80:	3340      	adds	r3, #64	; 0x40
 8018f82:	4a5e      	ldr	r2, [pc, #376]	; (80190fc <createProblem+0x18254>)
 8018f84:	461c      	mov	r4, r3
 8018f86:	4613      	mov	r3, r2
 8018f88:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018f8a:	6020      	str	r0, [r4, #0]
 8018f8c:	6061      	str	r1, [r4, #4]
 8018f8e:	60a2      	str	r2, [r4, #8]
 8018f90:	881b      	ldrh	r3, [r3, #0]
 8018f92:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,9,11,5,15,18,12");
 8018f94:	687b      	ldr	r3, [r7, #4]
 8018f96:	3304      	adds	r3, #4
 8018f98:	4a59      	ldr	r2, [pc, #356]	; (8019100 <createProblem+0x18258>)
 8018f9a:	461d      	mov	r5, r3
 8018f9c:	4614      	mov	r4, r2
 8018f9e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8018fa0:	6028      	str	r0, [r5, #0]
 8018fa2:	6069      	str	r1, [r5, #4]
 8018fa4:	60aa      	str	r2, [r5, #8]
 8018fa6:	60eb      	str	r3, [r5, #12]
 8018fa8:	8823      	ldrh	r3, [r4, #0]
 8018faa:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,s,d,e,d");
 8018fac:	687b      	ldr	r3, [r7, #4]
 8018fae:	33d8      	adds	r3, #216	; 0xd8
 8018fb0:	4a54      	ldr	r2, [pc, #336]	; (8019104 <createProblem+0x1825c>)
 8018fb2:	461c      	mov	r4, r3
 8018fb4:	4613      	mov	r3, r2
 8018fb6:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018fb8:	6020      	str	r0, [r4, #0]
 8018fba:	6061      	str	r1, [r4, #4]
 8018fbc:	60a2      	str	r2, [r4, #8]
 8018fbe:	881b      	ldrh	r3, [r3, #0]
 8018fc0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8018fc2:	687b      	ldr	r3, [r7, #4]
 8018fc4:	33cc      	adds	r3, #204	; 0xcc
 8018fc6:	4a50      	ldr	r2, [pc, #320]	; (8019108 <createProblem+0x18260>)
 8018fc8:	8811      	ldrh	r1, [r2, #0]
 8018fca:	7892      	ldrb	r2, [r2, #2]
 8018fcc:	8019      	strh	r1, [r3, #0]
 8018fce:	709a      	strb	r2, [r3, #2]
			break;
 8018fd0:	f001 bcb0 	b.w	801a934 <createProblem+0x19a8c>
		case 779 :
			strcpy(p->name,"BLACKROCK");
 8018fd4:	687b      	ldr	r3, [r7, #4]
 8018fd6:	337c      	adds	r3, #124	; 0x7c
 8018fd8:	494c      	ldr	r1, [pc, #304]	; (801910c <createProblem+0x18264>)
 8018fda:	461a      	mov	r2, r3
 8018fdc:	460b      	mov	r3, r1
 8018fde:	cb03      	ldmia	r3!, {r0, r1}
 8018fe0:	6010      	str	r0, [r2, #0]
 8018fe2:	6051      	str	r1, [r2, #4]
 8018fe4:	881b      	ldrh	r3, [r3, #0]
 8018fe6:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 8018fe8:	687b      	ldr	r3, [r7, #4]
 8018fea:	2207      	movs	r2, #7
 8018fec:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,I,D,E,B,D");
 8018fee:	687b      	ldr	r3, [r7, #4]
 8018ff0:	3340      	adds	r3, #64	; 0x40
 8018ff2:	4a47      	ldr	r2, [pc, #284]	; (8019110 <createProblem+0x18268>)
 8018ff4:	461c      	mov	r4, r3
 8018ff6:	4613      	mov	r3, r2
 8018ff8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8018ffa:	6020      	str	r0, [r4, #0]
 8018ffc:	6061      	str	r1, [r4, #4]
 8018ffe:	60a2      	str	r2, [r4, #8]
 8019000:	881b      	ldrh	r3, [r3, #0]
 8019002:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,10,11,12,15,18");
 8019004:	687b      	ldr	r3, [r7, #4]
 8019006:	3304      	adds	r3, #4
 8019008:	4a42      	ldr	r2, [pc, #264]	; (8019114 <createProblem+0x1826c>)
 801900a:	461d      	mov	r5, r3
 801900c:	4614      	mov	r4, r2
 801900e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019010:	6028      	str	r0, [r5, #0]
 8019012:	6069      	str	r1, [r5, #4]
 8019014:	60aa      	str	r2, [r5, #8]
 8019016:	60eb      	str	r3, [r5, #12]
 8019018:	8823      	ldrh	r3, [r4, #0]
 801901a:	78a2      	ldrb	r2, [r4, #2]
 801901c:	822b      	strh	r3, [r5, #16]
 801901e:	4613      	mov	r3, r2
 8019020:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8019022:	687b      	ldr	r3, [r7, #4]
 8019024:	33d8      	adds	r3, #216	; 0xd8
 8019026:	4a3c      	ldr	r2, [pc, #240]	; (8019118 <createProblem+0x18270>)
 8019028:	461c      	mov	r4, r3
 801902a:	4613      	mov	r3, r2
 801902c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801902e:	6020      	str	r0, [r4, #0]
 8019030:	6061      	str	r1, [r4, #4]
 8019032:	60a2      	str	r2, [r4, #8]
 8019034:	881b      	ldrh	r3, [r3, #0]
 8019036:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8019038:	687b      	ldr	r3, [r7, #4]
 801903a:	33cc      	adds	r3, #204	; 0xcc
 801903c:	4a28      	ldr	r2, [pc, #160]	; (80190e0 <createProblem+0x18238>)
 801903e:	6810      	ldr	r0, [r2, #0]
 8019040:	6018      	str	r0, [r3, #0]
			break;
 8019042:	f001 bc77 	b.w	801a934 <createProblem+0x19a8c>
		case 78 :
			strcpy(p->name,"LU'S FINEST");
 8019046:	687b      	ldr	r3, [r7, #4]
 8019048:	337c      	adds	r3, #124	; 0x7c
 801904a:	4a34      	ldr	r2, [pc, #208]	; (801911c <createProblem+0x18274>)
 801904c:	461c      	mov	r4, r3
 801904e:	4613      	mov	r3, r2
 8019050:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019052:	6020      	str	r0, [r4, #0]
 8019054:	6061      	str	r1, [r4, #4]
 8019056:	60a2      	str	r2, [r4, #8]
			p->moveSize = 9;
 8019058:	687b      	ldr	r3, [r7, #4]
 801905a:	2209      	movs	r2, #9
 801905c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,D,B,G,E,F,J,H,I");
 801905e:	687b      	ldr	r3, [r7, #4]
 8019060:	3340      	adds	r3, #64	; 0x40
 8019062:	4a2f      	ldr	r2, [pc, #188]	; (8019120 <createProblem+0x18278>)
 8019064:	461d      	mov	r5, r3
 8019066:	4614      	mov	r4, r2
 8019068:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801906a:	6028      	str	r0, [r5, #0]
 801906c:	6069      	str	r1, [r5, #4]
 801906e:	60aa      	str	r2, [r5, #8]
 8019070:	60eb      	str	r3, [r5, #12]
 8019072:	8823      	ldrh	r3, [r4, #0]
 8019074:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"6,7,10,4,12,13,13,16,18");
 8019076:	687b      	ldr	r3, [r7, #4]
 8019078:	3304      	adds	r3, #4
 801907a:	4a2a      	ldr	r2, [pc, #168]	; (8019124 <createProblem+0x1827c>)
 801907c:	461d      	mov	r5, r3
 801907e:	4614      	mov	r4, r2
 8019080:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019082:	6028      	str	r0, [r5, #0]
 8019084:	6069      	str	r1, [r5, #4]
 8019086:	60aa      	str	r2, [r5, #8]
 8019088:	60eb      	str	r3, [r5, #12]
 801908a:	cc03      	ldmia	r4!, {r0, r1}
 801908c:	6128      	str	r0, [r5, #16]
 801908e:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,d,e");
 8019090:	687b      	ldr	r3, [r7, #4]
 8019092:	33d8      	adds	r3, #216	; 0xd8
 8019094:	4a24      	ldr	r2, [pc, #144]	; (8019128 <createProblem+0x18280>)
 8019096:	461d      	mov	r5, r3
 8019098:	4614      	mov	r4, r2
 801909a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801909c:	6028      	str	r0, [r5, #0]
 801909e:	6069      	str	r1, [r5, #4]
 80190a0:	60aa      	str	r2, [r5, #8]
 80190a2:	60eb      	str	r3, [r5, #12]
 80190a4:	8823      	ldrh	r3, [r4, #0]
 80190a6:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "7A");
 80190a8:	687b      	ldr	r3, [r7, #4]
 80190aa:	33cc      	adds	r3, #204	; 0xcc
 80190ac:	4a16      	ldr	r2, [pc, #88]	; (8019108 <createProblem+0x18260>)
 80190ae:	8811      	ldrh	r1, [r2, #0]
 80190b0:	7892      	ldrb	r2, [r2, #2]
 80190b2:	8019      	strh	r1, [r3, #0]
 80190b4:	709a      	strb	r2, [r3, #2]
			break;
 80190b6:	f001 bc3d 	b.w	801a934 <createProblem+0x19a8c>
 80190ba:	bf00      	nop
 80190bc:	08029420 	.word	0x08029420
 80190c0:	08029430 	.word	0x08029430
 80190c4:	08029444 	.word	0x08029444
 80190c8:	08029460 	.word	0x08029460
 80190cc:	08020830 	.word	0x08020830
 80190d0:	08029474 	.word	0x08029474
 80190d4:	08029484 	.word	0x08029484
 80190d8:	08029494 	.word	0x08029494
 80190dc:	08020820 	.word	0x08020820
 80190e0:	08020928 	.word	0x08020928
 80190e4:	080294a8 	.word	0x080294a8
 80190e8:	080294b8 	.word	0x080294b8
 80190ec:	080222e4 	.word	0x080222e4
 80190f0:	080208a0 	.word	0x080208a0
 80190f4:	080226f0 	.word	0x080226f0
 80190f8:	080294c4 	.word	0x080294c4
 80190fc:	080294c8 	.word	0x080294c8
 8019100:	080294d8 	.word	0x080294d8
 8019104:	080294ec 	.word	0x080294ec
 8019108:	08020874 	.word	0x08020874
 801910c:	080294fc 	.word	0x080294fc
 8019110:	08029508 	.word	0x08029508
 8019114:	08029518 	.word	0x08029518
 8019118:	08020a14 	.word	0x08020a14
 801911c:	0802952c 	.word	0x0802952c
 8019120:	08029538 	.word	0x08029538
 8019124:	0802954c 	.word	0x0802954c
 8019128:	08022f10 	.word	0x08022f10
		case 780 :
			strcpy(p->name,"STOUT LITE");
 801912c:	687b      	ldr	r3, [r7, #4]
 801912e:	337c      	adds	r3, #124	; 0x7c
 8019130:	49bc      	ldr	r1, [pc, #752]	; (8019424 <createProblem+0x1857c>)
 8019132:	461a      	mov	r2, r3
 8019134:	460b      	mov	r3, r1
 8019136:	cb03      	ldmia	r3!, {r0, r1}
 8019138:	6010      	str	r0, [r2, #0]
 801913a:	6051      	str	r1, [r2, #4]
 801913c:	8819      	ldrh	r1, [r3, #0]
 801913e:	789b      	ldrb	r3, [r3, #2]
 8019140:	8111      	strh	r1, [r2, #8]
 8019142:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 8019144:	687b      	ldr	r3, [r7, #4]
 8019146:	2207      	movs	r2, #7
 8019148:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,D,G,D,G,G,I");
 801914a:	687b      	ldr	r3, [r7, #4]
 801914c:	3340      	adds	r3, #64	; 0x40
 801914e:	4ab6      	ldr	r2, [pc, #728]	; (8019428 <createProblem+0x18580>)
 8019150:	461c      	mov	r4, r3
 8019152:	4613      	mov	r3, r2
 8019154:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019156:	6020      	str	r0, [r4, #0]
 8019158:	6061      	str	r1, [r4, #4]
 801915a:	60a2      	str	r2, [r4, #8]
 801915c:	881b      	ldrh	r3, [r3, #0]
 801915e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,9,11,14,15,18");
 8019160:	687b      	ldr	r3, [r7, #4]
 8019162:	3304      	adds	r3, #4
 8019164:	4ab1      	ldr	r2, [pc, #708]	; (801942c <createProblem+0x18584>)
 8019166:	461d      	mov	r5, r3
 8019168:	4614      	mov	r4, r2
 801916a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801916c:	6028      	str	r0, [r5, #0]
 801916e:	6069      	str	r1, [r5, #4]
 8019170:	60aa      	str	r2, [r5, #8]
 8019172:	60eb      	str	r3, [r5, #12]
 8019174:	8823      	ldrh	r3, [r4, #0]
 8019176:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8019178:	687b      	ldr	r3, [r7, #4]
 801917a:	33d8      	adds	r3, #216	; 0xd8
 801917c:	4aac      	ldr	r2, [pc, #688]	; (8019430 <createProblem+0x18588>)
 801917e:	461c      	mov	r4, r3
 8019180:	4613      	mov	r3, r2
 8019182:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019184:	6020      	str	r0, [r4, #0]
 8019186:	6061      	str	r1, [r4, #4]
 8019188:	60a2      	str	r2, [r4, #8]
 801918a:	881b      	ldrh	r3, [r3, #0]
 801918c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 801918e:	687b      	ldr	r3, [r7, #4]
 8019190:	33cc      	adds	r3, #204	; 0xcc
 8019192:	4aa8      	ldr	r2, [pc, #672]	; (8019434 <createProblem+0x1858c>)
 8019194:	6810      	ldr	r0, [r2, #0]
 8019196:	6018      	str	r0, [r3, #0]
			break;
 8019198:	f001 bbcc 	b.w	801a934 <createProblem+0x19a8c>
		case 781 :
			strcpy(p->name,"PSYCHO MANTIS");
 801919c:	687b      	ldr	r3, [r7, #4]
 801919e:	337c      	adds	r3, #124	; 0x7c
 80191a0:	4aa5      	ldr	r2, [pc, #660]	; (8019438 <createProblem+0x18590>)
 80191a2:	461c      	mov	r4, r3
 80191a4:	4613      	mov	r3, r2
 80191a6:	cb07      	ldmia	r3!, {r0, r1, r2}
 80191a8:	6020      	str	r0, [r4, #0]
 80191aa:	6061      	str	r1, [r4, #4]
 80191ac:	60a2      	str	r2, [r4, #8]
 80191ae:	881b      	ldrh	r3, [r3, #0]
 80191b0:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 80191b2:	687b      	ldr	r3, [r7, #4]
 80191b4:	2206      	movs	r2, #6
 80191b6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,D,G,B,E,D");
 80191b8:	687b      	ldr	r3, [r7, #4]
 80191ba:	3340      	adds	r3, #64	; 0x40
 80191bc:	4a9f      	ldr	r2, [pc, #636]	; (801943c <createProblem+0x18594>)
 80191be:	461c      	mov	r4, r3
 80191c0:	4613      	mov	r3, r2
 80191c2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80191c4:	6020      	str	r0, [r4, #0]
 80191c6:	6061      	str	r1, [r4, #4]
 80191c8:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,7,10,10,14,18");
 80191ca:	687b      	ldr	r3, [r7, #4]
 80191cc:	3304      	adds	r3, #4
 80191ce:	4a9c      	ldr	r2, [pc, #624]	; (8019440 <createProblem+0x18598>)
 80191d0:	461c      	mov	r4, r3
 80191d2:	4615      	mov	r5, r2
 80191d4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80191d6:	6020      	str	r0, [r4, #0]
 80191d8:	6061      	str	r1, [r4, #4]
 80191da:	60a2      	str	r2, [r4, #8]
 80191dc:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80191de:	687b      	ldr	r3, [r7, #4]
 80191e0:	33d8      	adds	r3, #216	; 0xd8
 80191e2:	4a98      	ldr	r2, [pc, #608]	; (8019444 <createProblem+0x1859c>)
 80191e4:	461c      	mov	r4, r3
 80191e6:	4613      	mov	r3, r2
 80191e8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80191ea:	6020      	str	r0, [r4, #0]
 80191ec:	6061      	str	r1, [r4, #4]
 80191ee:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 80191f0:	687b      	ldr	r3, [r7, #4]
 80191f2:	33cc      	adds	r3, #204	; 0xcc
 80191f4:	4a8f      	ldr	r2, [pc, #572]	; (8019434 <createProblem+0x1858c>)
 80191f6:	6810      	ldr	r0, [r2, #0]
 80191f8:	6018      	str	r0, [r3, #0]
			break;
 80191fa:	f001 bb9b 	b.w	801a934 <createProblem+0x19a8c>
		case 782 :
			strcpy(p->name,"VISUALIZZA VERS2");
 80191fe:	687b      	ldr	r3, [r7, #4]
 8019200:	337c      	adds	r3, #124	; 0x7c
 8019202:	4a91      	ldr	r2, [pc, #580]	; (8019448 <createProblem+0x185a0>)
 8019204:	461d      	mov	r5, r3
 8019206:	4614      	mov	r4, r2
 8019208:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801920a:	6028      	str	r0, [r5, #0]
 801920c:	6069      	str	r1, [r5, #4]
 801920e:	60aa      	str	r2, [r5, #8]
 8019210:	60eb      	str	r3, [r5, #12]
 8019212:	7823      	ldrb	r3, [r4, #0]
 8019214:	742b      	strb	r3, [r5, #16]
			p->moveSize = 6;
 8019216:	687b      	ldr	r3, [r7, #4]
 8019218:	2206      	movs	r2, #6
 801921a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,H,E,D");
 801921c:	687b      	ldr	r3, [r7, #4]
 801921e:	3340      	adds	r3, #64	; 0x40
 8019220:	4a8a      	ldr	r2, [pc, #552]	; (801944c <createProblem+0x185a4>)
 8019222:	461c      	mov	r4, r3
 8019224:	4613      	mov	r3, r2
 8019226:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019228:	6020      	str	r0, [r4, #0]
 801922a:	6061      	str	r1, [r4, #4]
 801922c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,8,9,12,14,18");
 801922e:	687b      	ldr	r3, [r7, #4]
 8019230:	3304      	adds	r3, #4
 8019232:	4a87      	ldr	r2, [pc, #540]	; (8019450 <createProblem+0x185a8>)
 8019234:	461c      	mov	r4, r3
 8019236:	4613      	mov	r3, r2
 8019238:	cb07      	ldmia	r3!, {r0, r1, r2}
 801923a:	6020      	str	r0, [r4, #0]
 801923c:	6061      	str	r1, [r4, #4]
 801923e:	60a2      	str	r2, [r4, #8]
 8019240:	881a      	ldrh	r2, [r3, #0]
 8019242:	789b      	ldrb	r3, [r3, #2]
 8019244:	81a2      	strh	r2, [r4, #12]
 8019246:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8019248:	687b      	ldr	r3, [r7, #4]
 801924a:	33d8      	adds	r3, #216	; 0xd8
 801924c:	4a7d      	ldr	r2, [pc, #500]	; (8019444 <createProblem+0x1859c>)
 801924e:	461c      	mov	r4, r3
 8019250:	4613      	mov	r3, r2
 8019252:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019254:	6020      	str	r0, [r4, #0]
 8019256:	6061      	str	r1, [r4, #4]
 8019258:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 801925a:	687b      	ldr	r3, [r7, #4]
 801925c:	33cc      	adds	r3, #204	; 0xcc
 801925e:	4a7d      	ldr	r2, [pc, #500]	; (8019454 <createProblem+0x185ac>)
 8019260:	6810      	ldr	r0, [r2, #0]
 8019262:	6018      	str	r0, [r3, #0]
			break;
 8019264:	f001 bb66 	b.w	801a934 <createProblem+0x19a8c>
		case 783 :
			strcpy(p->name,"SALAD APOCALYPSE");
 8019268:	687b      	ldr	r3, [r7, #4]
 801926a:	337c      	adds	r3, #124	; 0x7c
 801926c:	4a7a      	ldr	r2, [pc, #488]	; (8019458 <createProblem+0x185b0>)
 801926e:	461d      	mov	r5, r3
 8019270:	4614      	mov	r4, r2
 8019272:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019274:	6028      	str	r0, [r5, #0]
 8019276:	6069      	str	r1, [r5, #4]
 8019278:	60aa      	str	r2, [r5, #8]
 801927a:	60eb      	str	r3, [r5, #12]
 801927c:	7823      	ldrb	r3, [r4, #0]
 801927e:	742b      	strb	r3, [r5, #16]
			p->moveSize = 6;
 8019280:	687b      	ldr	r3, [r7, #4]
 8019282:	2206      	movs	r2, #6
 8019284:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,B,E,H,D,A");
 8019286:	687b      	ldr	r3, [r7, #4]
 8019288:	3340      	adds	r3, #64	; 0x40
 801928a:	4a74      	ldr	r2, [pc, #464]	; (801945c <createProblem+0x185b4>)
 801928c:	461c      	mov	r4, r3
 801928e:	4613      	mov	r3, r2
 8019290:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019292:	6020      	str	r0, [r4, #0]
 8019294:	6061      	str	r1, [r4, #4]
 8019296:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,6,8,12,15,18");
 8019298:	687b      	ldr	r3, [r7, #4]
 801929a:	3304      	adds	r3, #4
 801929c:	4a70      	ldr	r2, [pc, #448]	; (8019460 <createProblem+0x185b8>)
 801929e:	461c      	mov	r4, r3
 80192a0:	4613      	mov	r3, r2
 80192a2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80192a4:	6020      	str	r0, [r4, #0]
 80192a6:	6061      	str	r1, [r4, #4]
 80192a8:	60a2      	str	r2, [r4, #8]
 80192aa:	881a      	ldrh	r2, [r3, #0]
 80192ac:	789b      	ldrb	r3, [r3, #2]
 80192ae:	81a2      	strh	r2, [r4, #12]
 80192b0:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 80192b2:	687b      	ldr	r3, [r7, #4]
 80192b4:	33d8      	adds	r3, #216	; 0xd8
 80192b6:	4a6b      	ldr	r2, [pc, #428]	; (8019464 <createProblem+0x185bc>)
 80192b8:	461c      	mov	r4, r3
 80192ba:	4613      	mov	r3, r2
 80192bc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80192be:	6020      	str	r0, [r4, #0]
 80192c0:	6061      	str	r1, [r4, #4]
 80192c2:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7B+");
 80192c4:	687b      	ldr	r3, [r7, #4]
 80192c6:	33cc      	adds	r3, #204	; 0xcc
 80192c8:	4a62      	ldr	r2, [pc, #392]	; (8019454 <createProblem+0x185ac>)
 80192ca:	6810      	ldr	r0, [r2, #0]
 80192cc:	6018      	str	r0, [r3, #0]
			break;
 80192ce:	f001 bb31 	b.w	801a934 <createProblem+0x19a8c>
		case 784 :
			strcpy(p->name,"FIRST COME, FIRST SERVED");
 80192d2:	687b      	ldr	r3, [r7, #4]
 80192d4:	337c      	adds	r3, #124	; 0x7c
 80192d6:	4a64      	ldr	r2, [pc, #400]	; (8019468 <createProblem+0x185c0>)
 80192d8:	461d      	mov	r5, r3
 80192da:	4614      	mov	r4, r2
 80192dc:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80192de:	6028      	str	r0, [r5, #0]
 80192e0:	6069      	str	r1, [r5, #4]
 80192e2:	60aa      	str	r2, [r5, #8]
 80192e4:	60eb      	str	r3, [r5, #12]
 80192e6:	cc03      	ldmia	r4!, {r0, r1}
 80192e8:	6128      	str	r0, [r5, #16]
 80192ea:	6169      	str	r1, [r5, #20]
 80192ec:	7823      	ldrb	r3, [r4, #0]
 80192ee:	762b      	strb	r3, [r5, #24]
			p->moveSize = 5;
 80192f0:	687b      	ldr	r3, [r7, #4]
 80192f2:	2205      	movs	r2, #5
 80192f4:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,F,A,D");
 80192f6:	687b      	ldr	r3, [r7, #4]
 80192f8:	3340      	adds	r3, #64	; 0x40
 80192fa:	495c      	ldr	r1, [pc, #368]	; (801946c <createProblem+0x185c4>)
 80192fc:	461a      	mov	r2, r3
 80192fe:	460b      	mov	r3, r1
 8019300:	cb03      	ldmia	r3!, {r0, r1}
 8019302:	6010      	str	r0, [r2, #0]
 8019304:	6051      	str	r1, [r2, #4]
 8019306:	881b      	ldrh	r3, [r3, #0]
 8019308:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"5,10,11,14,18");
 801930a:	687b      	ldr	r3, [r7, #4]
 801930c:	3304      	adds	r3, #4
 801930e:	4a58      	ldr	r2, [pc, #352]	; (8019470 <createProblem+0x185c8>)
 8019310:	461c      	mov	r4, r3
 8019312:	4613      	mov	r3, r2
 8019314:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019316:	6020      	str	r0, [r4, #0]
 8019318:	6061      	str	r1, [r4, #4]
 801931a:	60a2      	str	r2, [r4, #8]
 801931c:	881b      	ldrh	r3, [r3, #0]
 801931e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,e");
 8019320:	687b      	ldr	r3, [r7, #4]
 8019322:	33d8      	adds	r3, #216	; 0xd8
 8019324:	4953      	ldr	r1, [pc, #332]	; (8019474 <createProblem+0x185cc>)
 8019326:	461a      	mov	r2, r3
 8019328:	460b      	mov	r3, r1
 801932a:	cb03      	ldmia	r3!, {r0, r1}
 801932c:	6010      	str	r0, [r2, #0]
 801932e:	6051      	str	r1, [r2, #4]
 8019330:	881b      	ldrh	r3, [r3, #0]
 8019332:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7B+");
 8019334:	687b      	ldr	r3, [r7, #4]
 8019336:	33cc      	adds	r3, #204	; 0xcc
 8019338:	4a46      	ldr	r2, [pc, #280]	; (8019454 <createProblem+0x185ac>)
 801933a:	6810      	ldr	r0, [r2, #0]
 801933c:	6018      	str	r0, [r3, #0]
			break;
 801933e:	f001 baf9 	b.w	801a934 <createProblem+0x19a8c>
		case 785 :
			strcpy(p->name,"BIG LE MOVIES");
 8019342:	687b      	ldr	r3, [r7, #4]
 8019344:	337c      	adds	r3, #124	; 0x7c
 8019346:	4a4c      	ldr	r2, [pc, #304]	; (8019478 <createProblem+0x185d0>)
 8019348:	461c      	mov	r4, r3
 801934a:	4613      	mov	r3, r2
 801934c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801934e:	6020      	str	r0, [r4, #0]
 8019350:	6061      	str	r1, [r4, #4]
 8019352:	60a2      	str	r2, [r4, #8]
 8019354:	881b      	ldrh	r3, [r3, #0]
 8019356:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 7;
 8019358:	687b      	ldr	r3, [r7, #4]
 801935a:	2207      	movs	r2, #7
 801935c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,G,J,H,G,G,I");
 801935e:	687b      	ldr	r3, [r7, #4]
 8019360:	3340      	adds	r3, #64	; 0x40
 8019362:	4a46      	ldr	r2, [pc, #280]	; (801947c <createProblem+0x185d4>)
 8019364:	461c      	mov	r4, r3
 8019366:	4613      	mov	r3, r2
 8019368:	cb07      	ldmia	r3!, {r0, r1, r2}
 801936a:	6020      	str	r0, [r4, #0]
 801936c:	6061      	str	r1, [r4, #4]
 801936e:	60a2      	str	r2, [r4, #8]
 8019370:	881b      	ldrh	r3, [r3, #0]
 8019372:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,7,10,14,17,18");
 8019374:	687b      	ldr	r3, [r7, #4]
 8019376:	3304      	adds	r3, #4
 8019378:	4a41      	ldr	r2, [pc, #260]	; (8019480 <createProblem+0x185d8>)
 801937a:	461d      	mov	r5, r3
 801937c:	4614      	mov	r4, r2
 801937e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019380:	6028      	str	r0, [r5, #0]
 8019382:	6069      	str	r1, [r5, #4]
 8019384:	60aa      	str	r2, [r5, #8]
 8019386:	60eb      	str	r3, [r5, #12]
 8019388:	8823      	ldrh	r3, [r4, #0]
 801938a:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 801938c:	687b      	ldr	r3, [r7, #4]
 801938e:	33d8      	adds	r3, #216	; 0xd8
 8019390:	4a27      	ldr	r2, [pc, #156]	; (8019430 <createProblem+0x18588>)
 8019392:	461c      	mov	r4, r3
 8019394:	4613      	mov	r3, r2
 8019396:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019398:	6020      	str	r0, [r4, #0]
 801939a:	6061      	str	r1, [r4, #4]
 801939c:	60a2      	str	r2, [r4, #8]
 801939e:	881b      	ldrh	r3, [r3, #0]
 80193a0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 80193a2:	687b      	ldr	r3, [r7, #4]
 80193a4:	33cc      	adds	r3, #204	; 0xcc
 80193a6:	4a37      	ldr	r2, [pc, #220]	; (8019484 <createProblem+0x185dc>)
 80193a8:	6810      	ldr	r0, [r2, #0]
 80193aa:	6018      	str	r0, [r3, #0]
			break;
 80193ac:	f001 bac2 	b.w	801a934 <createProblem+0x19a8c>
		case 786 :
			strcpy(p->name,"FLEMMING THE BEAST");
 80193b0:	687b      	ldr	r3, [r7, #4]
 80193b2:	337c      	adds	r3, #124	; 0x7c
 80193b4:	4a34      	ldr	r2, [pc, #208]	; (8019488 <createProblem+0x185e0>)
 80193b6:	461d      	mov	r5, r3
 80193b8:	4614      	mov	r4, r2
 80193ba:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80193bc:	6028      	str	r0, [r5, #0]
 80193be:	6069      	str	r1, [r5, #4]
 80193c0:	60aa      	str	r2, [r5, #8]
 80193c2:	60eb      	str	r3, [r5, #12]
 80193c4:	8823      	ldrh	r3, [r4, #0]
 80193c6:	78a2      	ldrb	r2, [r4, #2]
 80193c8:	822b      	strh	r3, [r5, #16]
 80193ca:	4613      	mov	r3, r2
 80193cc:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 8;
 80193ce:	687b      	ldr	r3, [r7, #4]
 80193d0:	2208      	movs	r2, #8
 80193d2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,G,E,H,A,E,D");
 80193d4:	687b      	ldr	r3, [r7, #4]
 80193d6:	3340      	adds	r3, #64	; 0x40
 80193d8:	4a2c      	ldr	r2, [pc, #176]	; (801948c <createProblem+0x185e4>)
 80193da:	461c      	mov	r4, r3
 80193dc:	4615      	mov	r5, r2
 80193de:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80193e0:	6020      	str	r0, [r4, #0]
 80193e2:	6061      	str	r1, [r4, #4]
 80193e4:	60a2      	str	r2, [r4, #8]
 80193e6:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,5,9,12,8,14,16,18");
 80193e8:	687b      	ldr	r3, [r7, #4]
 80193ea:	3304      	adds	r3, #4
 80193ec:	4a28      	ldr	r2, [pc, #160]	; (8019490 <createProblem+0x185e8>)
 80193ee:	461d      	mov	r5, r3
 80193f0:	4614      	mov	r4, r2
 80193f2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80193f4:	6028      	str	r0, [r5, #0]
 80193f6:	6069      	str	r1, [r5, #4]
 80193f8:	60aa      	str	r2, [r5, #8]
 80193fa:	60eb      	str	r3, [r5, #12]
 80193fc:	6820      	ldr	r0, [r4, #0]
 80193fe:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8019400:	687b      	ldr	r3, [r7, #4]
 8019402:	33d8      	adds	r3, #216	; 0xd8
 8019404:	4a23      	ldr	r2, [pc, #140]	; (8019494 <createProblem+0x185ec>)
 8019406:	461c      	mov	r4, r3
 8019408:	4615      	mov	r5, r2
 801940a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801940c:	6020      	str	r0, [r4, #0]
 801940e:	6061      	str	r1, [r4, #4]
 8019410:	60a2      	str	r2, [r4, #8]
 8019412:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 8019414:	687b      	ldr	r3, [r7, #4]
 8019416:	33cc      	adds	r3, #204	; 0xcc
 8019418:	4a06      	ldr	r2, [pc, #24]	; (8019434 <createProblem+0x1858c>)
 801941a:	6810      	ldr	r0, [r2, #0]
 801941c:	6018      	str	r0, [r3, #0]
			break;
 801941e:	f001 ba89 	b.w	801a934 <createProblem+0x19a8c>
 8019422:	bf00      	nop
 8019424:	08029564 	.word	0x08029564
 8019428:	08029570 	.word	0x08029570
 801942c:	08029580 	.word	0x08029580
 8019430:	08020a14 	.word	0x08020a14
 8019434:	08020928 	.word	0x08020928
 8019438:	08029594 	.word	0x08029594
 801943c:	080295a4 	.word	0x080295a4
 8019440:	080295b0 	.word	0x080295b0
 8019444:	0802091c 	.word	0x0802091c
 8019448:	080295c0 	.word	0x080295c0
 801944c:	080295d4 	.word	0x080295d4
 8019450:	08024778 	.word	0x08024778
 8019454:	08020dc8 	.word	0x08020dc8
 8019458:	080295e0 	.word	0x080295e0
 801945c:	080295f4 	.word	0x080295f4
 8019460:	08029600 	.word	0x08029600
 8019464:	08020e90 	.word	0x08020e90
 8019468:	08029610 	.word	0x08029610
 801946c:	0802962c 	.word	0x0802962c
 8019470:	08029638 	.word	0x08029638
 8019474:	080208a0 	.word	0x080208a0
 8019478:	08029648 	.word	0x08029648
 801947c:	08029658 	.word	0x08029658
 8019480:	08029668 	.word	0x08029668
 8019484:	08020830 	.word	0x08020830
 8019488:	0802967c 	.word	0x0802967c
 801948c:	08029690 	.word	0x08029690
 8019490:	080296a0 	.word	0x080296a0
 8019494:	080209d8 	.word	0x080209d8
		case 787 :
			strcpy(p->name,"ALLBLACKS");
 8019498:	687b      	ldr	r3, [r7, #4]
 801949a:	337c      	adds	r3, #124	; 0x7c
 801949c:	49af      	ldr	r1, [pc, #700]	; (801975c <createProblem+0x188b4>)
 801949e:	461a      	mov	r2, r3
 80194a0:	460b      	mov	r3, r1
 80194a2:	cb03      	ldmia	r3!, {r0, r1}
 80194a4:	6010      	str	r0, [r2, #0]
 80194a6:	6051      	str	r1, [r2, #4]
 80194a8:	881b      	ldrh	r3, [r3, #0]
 80194aa:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 80194ac:	687b      	ldr	r3, [r7, #4]
 80194ae:	2206      	movs	r2, #6
 80194b0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,H,C,D,A");
 80194b2:	687b      	ldr	r3, [r7, #4]
 80194b4:	3340      	adds	r3, #64	; 0x40
 80194b6:	4aaa      	ldr	r2, [pc, #680]	; (8019760 <createProblem+0x188b8>)
 80194b8:	461c      	mov	r4, r3
 80194ba:	4613      	mov	r3, r2
 80194bc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80194be:	6020      	str	r0, [r4, #0]
 80194c0:	6061      	str	r1, [r4, #4]
 80194c2:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,4,10,13,15,18");
 80194c4:	687b      	ldr	r3, [r7, #4]
 80194c6:	3304      	adds	r3, #4
 80194c8:	4aa6      	ldr	r2, [pc, #664]	; (8019764 <createProblem+0x188bc>)
 80194ca:	461c      	mov	r4, r3
 80194cc:	4615      	mov	r5, r2
 80194ce:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80194d0:	6020      	str	r0, [r4, #0]
 80194d2:	6061      	str	r1, [r4, #4]
 80194d4:	60a2      	str	r2, [r4, #8]
 80194d6:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 80194d8:	687b      	ldr	r3, [r7, #4]
 80194da:	33d8      	adds	r3, #216	; 0xd8
 80194dc:	4aa2      	ldr	r2, [pc, #648]	; (8019768 <createProblem+0x188c0>)
 80194de:	461c      	mov	r4, r3
 80194e0:	4613      	mov	r3, r2
 80194e2:	cb07      	ldmia	r3!, {r0, r1, r2}
 80194e4:	6020      	str	r0, [r4, #0]
 80194e6:	6061      	str	r1, [r4, #4]
 80194e8:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 80194ea:	687b      	ldr	r3, [r7, #4]
 80194ec:	33cc      	adds	r3, #204	; 0xcc
 80194ee:	4a9f      	ldr	r2, [pc, #636]	; (801976c <createProblem+0x188c4>)
 80194f0:	8811      	ldrh	r1, [r2, #0]
 80194f2:	7892      	ldrb	r2, [r2, #2]
 80194f4:	8019      	strh	r1, [r3, #0]
 80194f6:	709a      	strb	r2, [r3, #2]
			break;
 80194f8:	f001 ba1c 	b.w	801a934 <createProblem+0x19a8c>
		case 788 :
			strcpy(p->name,"BLACK LAMP");
 80194fc:	687b      	ldr	r3, [r7, #4]
 80194fe:	337c      	adds	r3, #124	; 0x7c
 8019500:	499b      	ldr	r1, [pc, #620]	; (8019770 <createProblem+0x188c8>)
 8019502:	461a      	mov	r2, r3
 8019504:	460b      	mov	r3, r1
 8019506:	cb03      	ldmia	r3!, {r0, r1}
 8019508:	6010      	str	r0, [r2, #0]
 801950a:	6051      	str	r1, [r2, #4]
 801950c:	8819      	ldrh	r1, [r3, #0]
 801950e:	789b      	ldrb	r3, [r3, #2]
 8019510:	8111      	strh	r1, [r2, #8]
 8019512:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 8019514:	687b      	ldr	r3, [r7, #4]
 8019516:	2206      	movs	r2, #6
 8019518:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,E,I,D,J,E");
 801951a:	687b      	ldr	r3, [r7, #4]
 801951c:	3340      	adds	r3, #64	; 0x40
 801951e:	4a95      	ldr	r2, [pc, #596]	; (8019774 <createProblem+0x188cc>)
 8019520:	461c      	mov	r4, r3
 8019522:	4613      	mov	r3, r2
 8019524:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019526:	6020      	str	r0, [r4, #0]
 8019528:	6061      	str	r1, [r4, #4]
 801952a:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"10,14,14,18,5,6");
 801952c:	687b      	ldr	r3, [r7, #4]
 801952e:	3304      	adds	r3, #4
 8019530:	4a91      	ldr	r2, [pc, #580]	; (8019778 <createProblem+0x188d0>)
 8019532:	461c      	mov	r4, r3
 8019534:	4615      	mov	r5, r2
 8019536:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8019538:	6020      	str	r0, [r4, #0]
 801953a:	6061      	str	r1, [r4, #4]
 801953c:	60a2      	str	r2, [r4, #8]
 801953e:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "d,d,d,e,s,s");
 8019540:	687b      	ldr	r3, [r7, #4]
 8019542:	33d8      	adds	r3, #216	; 0xd8
 8019544:	4a8d      	ldr	r2, [pc, #564]	; (801977c <createProblem+0x188d4>)
 8019546:	461c      	mov	r4, r3
 8019548:	4613      	mov	r3, r2
 801954a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801954c:	6020      	str	r0, [r4, #0]
 801954e:	6061      	str	r1, [r4, #4]
 8019550:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 8019552:	687b      	ldr	r3, [r7, #4]
 8019554:	33cc      	adds	r3, #204	; 0xcc
 8019556:	4a8a      	ldr	r2, [pc, #552]	; (8019780 <createProblem+0x188d8>)
 8019558:	6810      	ldr	r0, [r2, #0]
 801955a:	6018      	str	r0, [r3, #0]
			break;
 801955c:	f001 b9ea 	b.w	801a934 <createProblem+0x19a8c>
		case 789 :
			strcpy(p->name,"BARRET");
 8019560:	687b      	ldr	r3, [r7, #4]
 8019562:	337c      	adds	r3, #124	; 0x7c
 8019564:	4a87      	ldr	r2, [pc, #540]	; (8019784 <createProblem+0x188dc>)
 8019566:	6810      	ldr	r0, [r2, #0]
 8019568:	6018      	str	r0, [r3, #0]
 801956a:	8891      	ldrh	r1, [r2, #4]
 801956c:	7992      	ldrb	r2, [r2, #6]
 801956e:	8099      	strh	r1, [r3, #4]
 8019570:	719a      	strb	r2, [r3, #6]
			p->moveSize = 6;
 8019572:	687b      	ldr	r3, [r7, #4]
 8019574:	2206      	movs	r2, #6
 8019576:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,D,A,B,A,D");
 8019578:	687b      	ldr	r3, [r7, #4]
 801957a:	3340      	adds	r3, #64	; 0x40
 801957c:	4a82      	ldr	r2, [pc, #520]	; (8019788 <createProblem+0x188e0>)
 801957e:	461c      	mov	r4, r3
 8019580:	4613      	mov	r3, r2
 8019582:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019584:	6020      	str	r0, [r4, #0]
 8019586:	6061      	str	r1, [r4, #4]
 8019588:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,7,9,12,14,18");
 801958a:	687b      	ldr	r3, [r7, #4]
 801958c:	3304      	adds	r3, #4
 801958e:	4a7f      	ldr	r2, [pc, #508]	; (801978c <createProblem+0x188e4>)
 8019590:	461c      	mov	r4, r3
 8019592:	4613      	mov	r3, r2
 8019594:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019596:	6020      	str	r0, [r4, #0]
 8019598:	6061      	str	r1, [r4, #4]
 801959a:	60a2      	str	r2, [r4, #8]
 801959c:	881a      	ldrh	r2, [r3, #0]
 801959e:	789b      	ldrb	r3, [r3, #2]
 80195a0:	81a2      	strh	r2, [r4, #12]
 80195a2:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 80195a4:	687b      	ldr	r3, [r7, #4]
 80195a6:	33d8      	adds	r3, #216	; 0xd8
 80195a8:	4a79      	ldr	r2, [pc, #484]	; (8019790 <createProblem+0x188e8>)
 80195aa:	461c      	mov	r4, r3
 80195ac:	4613      	mov	r3, r2
 80195ae:	cb07      	ldmia	r3!, {r0, r1, r2}
 80195b0:	6020      	str	r0, [r4, #0]
 80195b2:	6061      	str	r1, [r4, #4]
 80195b4:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 80195b6:	687b      	ldr	r3, [r7, #4]
 80195b8:	33cc      	adds	r3, #204	; 0xcc
 80195ba:	4a71      	ldr	r2, [pc, #452]	; (8019780 <createProblem+0x188d8>)
 80195bc:	6810      	ldr	r0, [r2, #0]
 80195be:	6018      	str	r0, [r3, #0]
			break;
 80195c0:	f001 b9b8 	b.w	801a934 <createProblem+0x19a8c>
		case 79 :
			strcpy(p->name,"BROWN FROWN");
 80195c4:	687b      	ldr	r3, [r7, #4]
 80195c6:	337c      	adds	r3, #124	; 0x7c
 80195c8:	4a72      	ldr	r2, [pc, #456]	; (8019794 <createProblem+0x188ec>)
 80195ca:	461c      	mov	r4, r3
 80195cc:	4613      	mov	r3, r2
 80195ce:	cb07      	ldmia	r3!, {r0, r1, r2}
 80195d0:	6020      	str	r0, [r4, #0]
 80195d2:	6061      	str	r1, [r4, #4]
 80195d4:	60a2      	str	r2, [r4, #8]
			p->moveSize = 8;
 80195d6:	687b      	ldr	r3, [r7, #4]
 80195d8:	2208      	movs	r2, #8
 80195da:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,C,H,F,C,E,D");
 80195dc:	687b      	ldr	r3, [r7, #4]
 80195de:	3340      	adds	r3, #64	; 0x40
 80195e0:	4a6d      	ldr	r2, [pc, #436]	; (8019798 <createProblem+0x188f0>)
 80195e2:	461c      	mov	r4, r3
 80195e4:	4615      	mov	r5, r2
 80195e6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80195e8:	6020      	str	r0, [r4, #0]
 80195ea:	6061      	str	r1, [r4, #4]
 80195ec:	60a2      	str	r2, [r4, #8]
 80195ee:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,6,8,8,11,13,16,18");
 80195f0:	687b      	ldr	r3, [r7, #4]
 80195f2:	3304      	adds	r3, #4
 80195f4:	4a69      	ldr	r2, [pc, #420]	; (801979c <createProblem+0x188f4>)
 80195f6:	461d      	mov	r5, r3
 80195f8:	4614      	mov	r4, r2
 80195fa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80195fc:	6028      	str	r0, [r5, #0]
 80195fe:	6069      	str	r1, [r5, #4]
 8019600:	60aa      	str	r2, [r5, #8]
 8019602:	60eb      	str	r3, [r5, #12]
 8019604:	6820      	ldr	r0, [r4, #0]
 8019606:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 8019608:	687b      	ldr	r3, [r7, #4]
 801960a:	33d8      	adds	r3, #216	; 0xd8
 801960c:	4a64      	ldr	r2, [pc, #400]	; (80197a0 <createProblem+0x188f8>)
 801960e:	461c      	mov	r4, r3
 8019610:	4615      	mov	r5, r2
 8019612:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8019614:	6020      	str	r0, [r4, #0]
 8019616:	6061      	str	r1, [r4, #4]
 8019618:	60a2      	str	r2, [r4, #8]
 801961a:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 801961c:	687b      	ldr	r3, [r7, #4]
 801961e:	33cc      	adds	r3, #204	; 0xcc
 8019620:	4a60      	ldr	r2, [pc, #384]	; (80197a4 <createProblem+0x188fc>)
 8019622:	6810      	ldr	r0, [r2, #0]
 8019624:	6018      	str	r0, [r3, #0]
			break;
 8019626:	f001 b985 	b.w	801a934 <createProblem+0x19a8c>
		case 790 :
			strcpy(p->name,"TURBO CALLA");
 801962a:	687b      	ldr	r3, [r7, #4]
 801962c:	337c      	adds	r3, #124	; 0x7c
 801962e:	4a5e      	ldr	r2, [pc, #376]	; (80197a8 <createProblem+0x18900>)
 8019630:	461c      	mov	r4, r3
 8019632:	4613      	mov	r3, r2
 8019634:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019636:	6020      	str	r0, [r4, #0]
 8019638:	6061      	str	r1, [r4, #4]
 801963a:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 801963c:	687b      	ldr	r3, [r7, #4]
 801963e:	2206      	movs	r2, #6
 8019640:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,C,D,A");
 8019642:	687b      	ldr	r3, [r7, #4]
 8019644:	3340      	adds	r3, #64	; 0x40
 8019646:	4a59      	ldr	r2, [pc, #356]	; (80197ac <createProblem+0x18904>)
 8019648:	461c      	mov	r4, r3
 801964a:	4613      	mov	r3, r2
 801964c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801964e:	6020      	str	r0, [r4, #0]
 8019650:	6061      	str	r1, [r4, #4]
 8019652:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,8,13,15,18");
 8019654:	687b      	ldr	r3, [r7, #4]
 8019656:	3304      	adds	r3, #4
 8019658:	4a55      	ldr	r2, [pc, #340]	; (80197b0 <createProblem+0x18908>)
 801965a:	461c      	mov	r4, r3
 801965c:	4613      	mov	r3, r2
 801965e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019660:	6020      	str	r0, [r4, #0]
 8019662:	6061      	str	r1, [r4, #4]
 8019664:	60a2      	str	r2, [r4, #8]
 8019666:	881a      	ldrh	r2, [r3, #0]
 8019668:	789b      	ldrb	r3, [r3, #2]
 801966a:	81a2      	strh	r2, [r4, #12]
 801966c:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 801966e:	687b      	ldr	r3, [r7, #4]
 8019670:	33d8      	adds	r3, #216	; 0xd8
 8019672:	4a47      	ldr	r2, [pc, #284]	; (8019790 <createProblem+0x188e8>)
 8019674:	461c      	mov	r4, r3
 8019676:	4613      	mov	r3, r2
 8019678:	cb07      	ldmia	r3!, {r0, r1, r2}
 801967a:	6020      	str	r0, [r4, #0]
 801967c:	6061      	str	r1, [r4, #4]
 801967e:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8019680:	687b      	ldr	r3, [r7, #4]
 8019682:	33cc      	adds	r3, #204	; 0xcc
 8019684:	4a39      	ldr	r2, [pc, #228]	; (801976c <createProblem+0x188c4>)
 8019686:	8811      	ldrh	r1, [r2, #0]
 8019688:	7892      	ldrb	r2, [r2, #2]
 801968a:	8019      	strh	r1, [r3, #0]
 801968c:	709a      	strb	r2, [r3, #2]
			break;
 801968e:	f001 b951 	b.w	801a934 <createProblem+0x19a8c>
		case 791 :
			strcpy(p->name,"SIM");
 8019692:	687b      	ldr	r3, [r7, #4]
 8019694:	337c      	adds	r3, #124	; 0x7c
 8019696:	4a47      	ldr	r2, [pc, #284]	; (80197b4 <createProblem+0x1890c>)
 8019698:	6810      	ldr	r0, [r2, #0]
 801969a:	6018      	str	r0, [r3, #0]
			p->moveSize = 6;
 801969c:	687b      	ldr	r3, [r7, #4]
 801969e:	2206      	movs	r2, #6
 80196a0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,I,D,E,A");
 80196a2:	687b      	ldr	r3, [r7, #4]
 80196a4:	3340      	adds	r3, #64	; 0x40
 80196a6:	4a44      	ldr	r2, [pc, #272]	; (80197b8 <createProblem+0x18910>)
 80196a8:	461c      	mov	r4, r3
 80196aa:	4613      	mov	r3, r2
 80196ac:	cb07      	ldmia	r3!, {r0, r1, r2}
 80196ae:	6020      	str	r0, [r4, #0]
 80196b0:	6061      	str	r1, [r4, #4]
 80196b2:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,9,11,16,18");
 80196b4:	687b      	ldr	r3, [r7, #4]
 80196b6:	3304      	adds	r3, #4
 80196b8:	4a40      	ldr	r2, [pc, #256]	; (80197bc <createProblem+0x18914>)
 80196ba:	461c      	mov	r4, r3
 80196bc:	4613      	mov	r3, r2
 80196be:	cb07      	ldmia	r3!, {r0, r1, r2}
 80196c0:	6020      	str	r0, [r4, #0]
 80196c2:	6061      	str	r1, [r4, #4]
 80196c4:	60a2      	str	r2, [r4, #8]
 80196c6:	881a      	ldrh	r2, [r3, #0]
 80196c8:	789b      	ldrb	r3, [r3, #2]
 80196ca:	81a2      	strh	r2, [r4, #12]
 80196cc:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 80196ce:	687b      	ldr	r3, [r7, #4]
 80196d0:	33d8      	adds	r3, #216	; 0xd8
 80196d2:	4a25      	ldr	r2, [pc, #148]	; (8019768 <createProblem+0x188c0>)
 80196d4:	461c      	mov	r4, r3
 80196d6:	4613      	mov	r3, r2
 80196d8:	cb07      	ldmia	r3!, {r0, r1, r2}
 80196da:	6020      	str	r0, [r4, #0]
 80196dc:	6061      	str	r1, [r4, #4]
 80196de:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A+");
 80196e0:	687b      	ldr	r3, [r7, #4]
 80196e2:	33cc      	adds	r3, #204	; 0xcc
 80196e4:	4a36      	ldr	r2, [pc, #216]	; (80197c0 <createProblem+0x18918>)
 80196e6:	6810      	ldr	r0, [r2, #0]
 80196e8:	6018      	str	r0, [r3, #0]
			break;
 80196ea:	f001 b923 	b.w	801a934 <createProblem+0x19a8c>
		case 792 :
			strcpy(p->name,"INTERNAL ROTATION");
 80196ee:	687b      	ldr	r3, [r7, #4]
 80196f0:	337c      	adds	r3, #124	; 0x7c
 80196f2:	4a34      	ldr	r2, [pc, #208]	; (80197c4 <createProblem+0x1891c>)
 80196f4:	461d      	mov	r5, r3
 80196f6:	4614      	mov	r4, r2
 80196f8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80196fa:	6028      	str	r0, [r5, #0]
 80196fc:	6069      	str	r1, [r5, #4]
 80196fe:	60aa      	str	r2, [r5, #8]
 8019700:	60eb      	str	r3, [r5, #12]
 8019702:	8823      	ldrh	r3, [r4, #0]
 8019704:	822b      	strh	r3, [r5, #16]
			p->moveSize = 8;
 8019706:	687b      	ldr	r3, [r7, #4]
 8019708:	2208      	movs	r2, #8
 801970a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,E,H,H,D,G,D,C");
 801970c:	687b      	ldr	r3, [r7, #4]
 801970e:	3340      	adds	r3, #64	; 0x40
 8019710:	4a2d      	ldr	r2, [pc, #180]	; (80197c8 <createProblem+0x18920>)
 8019712:	461c      	mov	r4, r3
 8019714:	4615      	mov	r5, r2
 8019716:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8019718:	6020      	str	r0, [r4, #0]
 801971a:	6061      	str	r1, [r4, #4]
 801971c:	60a2      	str	r2, [r4, #8]
 801971e:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"8,9,12,5,15,15,18,5");
 8019720:	687b      	ldr	r3, [r7, #4]
 8019722:	3304      	adds	r3, #4
 8019724:	4a29      	ldr	r2, [pc, #164]	; (80197cc <createProblem+0x18924>)
 8019726:	461d      	mov	r5, r3
 8019728:	4614      	mov	r4, r2
 801972a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801972c:	6028      	str	r0, [r5, #0]
 801972e:	6069      	str	r1, [r5, #4]
 8019730:	60aa      	str	r2, [r5, #8]
 8019732:	60eb      	str	r3, [r5, #12]
 8019734:	6820      	ldr	r0, [r4, #0]
 8019736:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "d,d,d,d,d,d,e,s");
 8019738:	687b      	ldr	r3, [r7, #4]
 801973a:	33d8      	adds	r3, #216	; 0xd8
 801973c:	4a24      	ldr	r2, [pc, #144]	; (80197d0 <createProblem+0x18928>)
 801973e:	461c      	mov	r4, r3
 8019740:	4615      	mov	r5, r2
 8019742:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8019744:	6020      	str	r0, [r4, #0]
 8019746:	6061      	str	r1, [r4, #4]
 8019748:	60a2      	str	r2, [r4, #8]
 801974a:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 801974c:	687b      	ldr	r3, [r7, #4]
 801974e:	33cc      	adds	r3, #204	; 0xcc
 8019750:	4a1b      	ldr	r2, [pc, #108]	; (80197c0 <createProblem+0x18918>)
 8019752:	6810      	ldr	r0, [r2, #0]
 8019754:	6018      	str	r0, [r3, #0]
			break;
 8019756:	f001 b8ed 	b.w	801a934 <createProblem+0x19a8c>
 801975a:	bf00      	nop
 801975c:	080296b4 	.word	0x080296b4
 8019760:	080296c0 	.word	0x080296c0
 8019764:	080296cc 	.word	0x080296cc
 8019768:	08020e90 	.word	0x08020e90
 801976c:	08020874 	.word	0x08020874
 8019770:	080296dc 	.word	0x080296dc
 8019774:	080296e8 	.word	0x080296e8
 8019778:	080296f4 	.word	0x080296f4
 801977c:	08029704 	.word	0x08029704
 8019780:	08020928 	.word	0x08020928
 8019784:	08029710 	.word	0x08029710
 8019788:	08029718 	.word	0x08029718
 801978c:	08029724 	.word	0x08029724
 8019790:	0802091c 	.word	0x0802091c
 8019794:	08029734 	.word	0x08029734
 8019798:	08029740 	.word	0x08029740
 801979c:	08029750 	.word	0x08029750
 80197a0:	080209d8 	.word	0x080209d8
 80197a4:	08020830 	.word	0x08020830
 80197a8:	08029764 	.word	0x08029764
 80197ac:	08029770 	.word	0x08029770
 80197b0:	0802977c 	.word	0x0802977c
 80197b4:	0802978c 	.word	0x0802978c
 80197b8:	08029790 	.word	0x08029790
 80197bc:	080228d0 	.word	0x080228d0
 80197c0:	080209a4 	.word	0x080209a4
 80197c4:	0802979c 	.word	0x0802979c
 80197c8:	080297b0 	.word	0x080297b0
 80197cc:	080297c0 	.word	0x080297c0
 80197d0:	080297d4 	.word	0x080297d4
		case 793 :
			strcpy(p->name,"SUSHI ROLL");
 80197d4:	687b      	ldr	r3, [r7, #4]
 80197d6:	337c      	adds	r3, #124	; 0x7c
 80197d8:	49a9      	ldr	r1, [pc, #676]	; (8019a80 <createProblem+0x18bd8>)
 80197da:	461a      	mov	r2, r3
 80197dc:	460b      	mov	r3, r1
 80197de:	cb03      	ldmia	r3!, {r0, r1}
 80197e0:	6010      	str	r0, [r2, #0]
 80197e2:	6051      	str	r1, [r2, #4]
 80197e4:	8819      	ldrh	r1, [r3, #0]
 80197e6:	789b      	ldrb	r3, [r3, #2]
 80197e8:	8111      	strh	r1, [r2, #8]
 80197ea:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 80197ec:	687b      	ldr	r3, [r7, #4]
 80197ee:	2207      	movs	r2, #7
 80197f0:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,C,D,A,D");
 80197f2:	687b      	ldr	r3, [r7, #4]
 80197f4:	3340      	adds	r3, #64	; 0x40
 80197f6:	4aa3      	ldr	r2, [pc, #652]	; (8019a84 <createProblem+0x18bdc>)
 80197f8:	461c      	mov	r4, r3
 80197fa:	4613      	mov	r3, r2
 80197fc:	cb07      	ldmia	r3!, {r0, r1, r2}
 80197fe:	6020      	str	r0, [r4, #0]
 8019800:	6061      	str	r1, [r4, #4]
 8019802:	60a2      	str	r2, [r4, #8]
 8019804:	881b      	ldrh	r3, [r3, #0]
 8019806:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,10,13,18,18,15");
 8019808:	687b      	ldr	r3, [r7, #4]
 801980a:	3304      	adds	r3, #4
 801980c:	4a9e      	ldr	r2, [pc, #632]	; (8019a88 <createProblem+0x18be0>)
 801980e:	461d      	mov	r5, r3
 8019810:	4614      	mov	r4, r2
 8019812:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019814:	6028      	str	r0, [r5, #0]
 8019816:	6069      	str	r1, [r5, #4]
 8019818:	60aa      	str	r2, [r5, #8]
 801981a:	60eb      	str	r3, [r5, #12]
 801981c:	8823      	ldrh	r3, [r4, #0]
 801981e:	78a2      	ldrb	r2, [r4, #2]
 8019820:	822b      	strh	r3, [r5, #16]
 8019822:	4613      	mov	r3, r2
 8019824:	74ab      	strb	r3, [r5, #18]
			strcpy(p->startFinish, "s,s,d,d,e,e,d");
 8019826:	687b      	ldr	r3, [r7, #4]
 8019828:	33d8      	adds	r3, #216	; 0xd8
 801982a:	4a98      	ldr	r2, [pc, #608]	; (8019a8c <createProblem+0x18be4>)
 801982c:	461c      	mov	r4, r3
 801982e:	4613      	mov	r3, r2
 8019830:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019832:	6020      	str	r0, [r4, #0]
 8019834:	6061      	str	r1, [r4, #4]
 8019836:	60a2      	str	r2, [r4, #8]
 8019838:	881b      	ldrh	r3, [r3, #0]
 801983a:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 801983c:	687b      	ldr	r3, [r7, #4]
 801983e:	33cc      	adds	r3, #204	; 0xcc
 8019840:	4a93      	ldr	r2, [pc, #588]	; (8019a90 <createProblem+0x18be8>)
 8019842:	6810      	ldr	r0, [r2, #0]
 8019844:	6018      	str	r0, [r3, #0]
			break;
 8019846:	f001 b875 	b.w	801a934 <createProblem+0x19a8c>
		case 794 :
			strcpy(p->name,"DEAD FISH");
 801984a:	687b      	ldr	r3, [r7, #4]
 801984c:	337c      	adds	r3, #124	; 0x7c
 801984e:	4991      	ldr	r1, [pc, #580]	; (8019a94 <createProblem+0x18bec>)
 8019850:	461a      	mov	r2, r3
 8019852:	460b      	mov	r3, r1
 8019854:	cb03      	ldmia	r3!, {r0, r1}
 8019856:	6010      	str	r0, [r2, #0]
 8019858:	6051      	str	r1, [r2, #4]
 801985a:	881b      	ldrh	r3, [r3, #0]
 801985c:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 801985e:	687b      	ldr	r3, [r7, #4]
 8019860:	2207      	movs	r2, #7
 8019862:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,E,G,F,I,E,D");
 8019864:	687b      	ldr	r3, [r7, #4]
 8019866:	3340      	adds	r3, #64	; 0x40
 8019868:	4a8b      	ldr	r2, [pc, #556]	; (8019a98 <createProblem+0x18bf0>)
 801986a:	461c      	mov	r4, r3
 801986c:	4613      	mov	r3, r2
 801986e:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019870:	6020      	str	r0, [r4, #0]
 8019872:	6061      	str	r1, [r4, #4]
 8019874:	60a2      	str	r2, [r4, #8]
 8019876:	881b      	ldrh	r3, [r3, #0]
 8019878:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,11,14,16,18");
 801987a:	687b      	ldr	r3, [r7, #4]
 801987c:	3304      	adds	r3, #4
 801987e:	4a87      	ldr	r2, [pc, #540]	; (8019a9c <createProblem+0x18bf4>)
 8019880:	461d      	mov	r5, r3
 8019882:	4614      	mov	r4, r2
 8019884:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019886:	6028      	str	r0, [r5, #0]
 8019888:	6069      	str	r1, [r5, #4]
 801988a:	60aa      	str	r2, [r5, #8]
 801988c:	60eb      	str	r3, [r5, #12]
 801988e:	8823      	ldrh	r3, [r4, #0]
 8019890:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8019892:	687b      	ldr	r3, [r7, #4]
 8019894:	33d8      	adds	r3, #216	; 0xd8
 8019896:	4a82      	ldr	r2, [pc, #520]	; (8019aa0 <createProblem+0x18bf8>)
 8019898:	461c      	mov	r4, r3
 801989a:	4613      	mov	r3, r2
 801989c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801989e:	6020      	str	r0, [r4, #0]
 80198a0:	6061      	str	r1, [r4, #4]
 80198a2:	60a2      	str	r2, [r4, #8]
 80198a4:	881b      	ldrh	r3, [r3, #0]
 80198a6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C+");
 80198a8:	687b      	ldr	r3, [r7, #4]
 80198aa:	33cc      	adds	r3, #204	; 0xcc
 80198ac:	4a7d      	ldr	r2, [pc, #500]	; (8019aa4 <createProblem+0x18bfc>)
 80198ae:	6810      	ldr	r0, [r2, #0]
 80198b0:	6018      	str	r0, [r3, #0]
			break;
 80198b2:	f001 b83f 	b.w	801a934 <createProblem+0x19a8c>
		case 795 :
			strcpy(p->name,"CAMPUSING WITH A BACKPACK");
 80198b6:	687b      	ldr	r3, [r7, #4]
 80198b8:	337c      	adds	r3, #124	; 0x7c
 80198ba:	4a7b      	ldr	r2, [pc, #492]	; (8019aa8 <createProblem+0x18c00>)
 80198bc:	461d      	mov	r5, r3
 80198be:	4614      	mov	r4, r2
 80198c0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80198c2:	6028      	str	r0, [r5, #0]
 80198c4:	6069      	str	r1, [r5, #4]
 80198c6:	60aa      	str	r2, [r5, #8]
 80198c8:	60eb      	str	r3, [r5, #12]
 80198ca:	cc03      	ldmia	r4!, {r0, r1}
 80198cc:	6128      	str	r0, [r5, #16]
 80198ce:	6169      	str	r1, [r5, #20]
 80198d0:	8823      	ldrh	r3, [r4, #0]
 80198d2:	832b      	strh	r3, [r5, #24]
			p->moveSize = 7;
 80198d4:	687b      	ldr	r3, [r7, #4]
 80198d6:	2207      	movs	r2, #7
 80198d8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,J,E,H,C,D,D");
 80198da:	687b      	ldr	r3, [r7, #4]
 80198dc:	3340      	adds	r3, #64	; 0x40
 80198de:	4a73      	ldr	r2, [pc, #460]	; (8019aac <createProblem+0x18c04>)
 80198e0:	461c      	mov	r4, r3
 80198e2:	4613      	mov	r3, r2
 80198e4:	cb07      	ldmia	r3!, {r0, r1, r2}
 80198e6:	6020      	str	r0, [r4, #0]
 80198e8:	6061      	str	r1, [r4, #4]
 80198ea:	60a2      	str	r2, [r4, #8]
 80198ec:	881b      	ldrh	r3, [r3, #0]
 80198ee:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,8,10,13,15,18");
 80198f0:	687b      	ldr	r3, [r7, #4]
 80198f2:	3304      	adds	r3, #4
 80198f4:	4a6e      	ldr	r2, [pc, #440]	; (8019ab0 <createProblem+0x18c08>)
 80198f6:	461d      	mov	r5, r3
 80198f8:	4614      	mov	r4, r2
 80198fa:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80198fc:	6028      	str	r0, [r5, #0]
 80198fe:	6069      	str	r1, [r5, #4]
 8019900:	60aa      	str	r2, [r5, #8]
 8019902:	60eb      	str	r3, [r5, #12]
 8019904:	8823      	ldrh	r3, [r4, #0]
 8019906:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8019908:	687b      	ldr	r3, [r7, #4]
 801990a:	33d8      	adds	r3, #216	; 0xd8
 801990c:	4a64      	ldr	r2, [pc, #400]	; (8019aa0 <createProblem+0x18bf8>)
 801990e:	461c      	mov	r4, r3
 8019910:	4613      	mov	r3, r2
 8019912:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019914:	6020      	str	r0, [r4, #0]
 8019916:	6061      	str	r1, [r4, #4]
 8019918:	60a2      	str	r2, [r4, #8]
 801991a:	881b      	ldrh	r3, [r3, #0]
 801991c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 801991e:	687b      	ldr	r3, [r7, #4]
 8019920:	33cc      	adds	r3, #204	; 0xcc
 8019922:	4a5b      	ldr	r2, [pc, #364]	; (8019a90 <createProblem+0x18be8>)
 8019924:	6810      	ldr	r0, [r2, #0]
 8019926:	6018      	str	r0, [r3, #0]
			break;
 8019928:	f001 b804 	b.w	801a934 <createProblem+0x19a8c>
		case 796 :
			strcpy(p->name,"DER SCHWÄCHLING");
 801992c:	687b      	ldr	r3, [r7, #4]
 801992e:	337c      	adds	r3, #124	; 0x7c
 8019930:	4a60      	ldr	r2, [pc, #384]	; (8019ab4 <createProblem+0x18c0c>)
 8019932:	461d      	mov	r5, r3
 8019934:	4614      	mov	r4, r2
 8019936:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019938:	6028      	str	r0, [r5, #0]
 801993a:	6069      	str	r1, [r5, #4]
 801993c:	60aa      	str	r2, [r5, #8]
 801993e:	60eb      	str	r3, [r5, #12]
 8019940:	7823      	ldrb	r3, [r4, #0]
 8019942:	742b      	strb	r3, [r5, #16]
			p->moveSize = 8;
 8019944:	687b      	ldr	r3, [r7, #4]
 8019946:	2208      	movs	r2, #8
 8019948:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,J,K,I,J,G,G,D");
 801994a:	687b      	ldr	r3, [r7, #4]
 801994c:	3340      	adds	r3, #64	; 0x40
 801994e:	4a5a      	ldr	r2, [pc, #360]	; (8019ab8 <createProblem+0x18c10>)
 8019950:	461c      	mov	r4, r3
 8019952:	4615      	mov	r5, r2
 8019954:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8019956:	6020      	str	r0, [r4, #0]
 8019958:	6061      	str	r1, [r4, #4]
 801995a:	60a2      	str	r2, [r4, #8]
 801995c:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,7,9,10,12,14,17,18");
 801995e:	687b      	ldr	r3, [r7, #4]
 8019960:	3304      	adds	r3, #4
 8019962:	4a56      	ldr	r2, [pc, #344]	; (8019abc <createProblem+0x18c14>)
 8019964:	461d      	mov	r5, r3
 8019966:	4614      	mov	r4, r2
 8019968:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801996a:	6028      	str	r0, [r5, #0]
 801996c:	6069      	str	r1, [r5, #4]
 801996e:	60aa      	str	r2, [r5, #8]
 8019970:	60eb      	str	r3, [r5, #12]
 8019972:	6820      	ldr	r0, [r4, #0]
 8019974:	6128      	str	r0, [r5, #16]
 8019976:	7923      	ldrb	r3, [r4, #4]
 8019978:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 801997a:	687b      	ldr	r3, [r7, #4]
 801997c:	33d8      	adds	r3, #216	; 0xd8
 801997e:	4a50      	ldr	r2, [pc, #320]	; (8019ac0 <createProblem+0x18c18>)
 8019980:	461c      	mov	r4, r3
 8019982:	4615      	mov	r5, r2
 8019984:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8019986:	6020      	str	r0, [r4, #0]
 8019988:	6061      	str	r1, [r4, #4]
 801998a:	60a2      	str	r2, [r4, #8]
 801998c:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 801998e:	687b      	ldr	r3, [r7, #4]
 8019990:	33cc      	adds	r3, #204	; 0xcc
 8019992:	4a4c      	ldr	r2, [pc, #304]	; (8019ac4 <createProblem+0x18c1c>)
 8019994:	8811      	ldrh	r1, [r2, #0]
 8019996:	7892      	ldrb	r2, [r2, #2]
 8019998:	8019      	strh	r1, [r3, #0]
 801999a:	709a      	strb	r2, [r3, #2]
			break;
 801999c:	f000 bfca 	b.w	801a934 <createProblem+0x19a8c>
		case 797 :
			strcpy(p->name,"BURNED");
 80199a0:	687b      	ldr	r3, [r7, #4]
 80199a2:	337c      	adds	r3, #124	; 0x7c
 80199a4:	4a48      	ldr	r2, [pc, #288]	; (8019ac8 <createProblem+0x18c20>)
 80199a6:	6810      	ldr	r0, [r2, #0]
 80199a8:	6018      	str	r0, [r3, #0]
 80199aa:	8891      	ldrh	r1, [r2, #4]
 80199ac:	7992      	ldrb	r2, [r2, #6]
 80199ae:	8099      	strh	r1, [r3, #4]
 80199b0:	719a      	strb	r2, [r3, #6]
			p->moveSize = 8;
 80199b2:	687b      	ldr	r3, [r7, #4]
 80199b4:	2208      	movs	r2, #8
 80199b6:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,G,J,J,G,E,I");
 80199b8:	687b      	ldr	r3, [r7, #4]
 80199ba:	3340      	adds	r3, #64	; 0x40
 80199bc:	4a43      	ldr	r2, [pc, #268]	; (8019acc <createProblem+0x18c24>)
 80199be:	461c      	mov	r4, r3
 80199c0:	4615      	mov	r5, r2
 80199c2:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80199c4:	6020      	str	r0, [r4, #0]
 80199c6:	6061      	str	r1, [r4, #4]
 80199c8:	60a2      	str	r2, [r4, #8]
 80199ca:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,8,9,5,12,14,16,18");
 80199cc:	687b      	ldr	r3, [r7, #4]
 80199ce:	3304      	adds	r3, #4
 80199d0:	4a3f      	ldr	r2, [pc, #252]	; (8019ad0 <createProblem+0x18c28>)
 80199d2:	461d      	mov	r5, r3
 80199d4:	4614      	mov	r4, r2
 80199d6:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 80199d8:	6028      	str	r0, [r5, #0]
 80199da:	6069      	str	r1, [r5, #4]
 80199dc:	60aa      	str	r2, [r5, #8]
 80199de:	60eb      	str	r3, [r5, #12]
 80199e0:	6820      	ldr	r0, [r4, #0]
 80199e2:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 80199e4:	687b      	ldr	r3, [r7, #4]
 80199e6:	33d8      	adds	r3, #216	; 0xd8
 80199e8:	4a35      	ldr	r2, [pc, #212]	; (8019ac0 <createProblem+0x18c18>)
 80199ea:	461c      	mov	r4, r3
 80199ec:	4615      	mov	r5, r2
 80199ee:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 80199f0:	6020      	str	r0, [r4, #0]
 80199f2:	6061      	str	r1, [r4, #4]
 80199f4:	60a2      	str	r2, [r4, #8]
 80199f6:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A");
 80199f8:	687b      	ldr	r3, [r7, #4]
 80199fa:	33cc      	adds	r3, #204	; 0xcc
 80199fc:	4a35      	ldr	r2, [pc, #212]	; (8019ad4 <createProblem+0x18c2c>)
 80199fe:	8811      	ldrh	r1, [r2, #0]
 8019a00:	7892      	ldrb	r2, [r2, #2]
 8019a02:	8019      	strh	r1, [r3, #0]
 8019a04:	709a      	strb	r2, [r3, #2]
			break;
 8019a06:	f000 bf95 	b.w	801a934 <createProblem+0x19a8c>
		case 798 :
			strcpy(p->name,"ASHES");
 8019a0a:	687b      	ldr	r3, [r7, #4]
 8019a0c:	337c      	adds	r3, #124	; 0x7c
 8019a0e:	4a32      	ldr	r2, [pc, #200]	; (8019ad8 <createProblem+0x18c30>)
 8019a10:	6810      	ldr	r0, [r2, #0]
 8019a12:	6018      	str	r0, [r3, #0]
 8019a14:	8892      	ldrh	r2, [r2, #4]
 8019a16:	809a      	strh	r2, [r3, #4]
			p->moveSize = 9;
 8019a18:	687b      	ldr	r3, [r7, #4]
 8019a1a:	2209      	movs	r2, #9
 8019a1c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,G,C,B,E,E,I,J,D");
 8019a1e:	687b      	ldr	r3, [r7, #4]
 8019a20:	3340      	adds	r3, #64	; 0x40
 8019a22:	4a2e      	ldr	r2, [pc, #184]	; (8019adc <createProblem+0x18c34>)
 8019a24:	461d      	mov	r5, r3
 8019a26:	4614      	mov	r4, r2
 8019a28:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019a2a:	6028      	str	r0, [r5, #0]
 8019a2c:	6069      	str	r1, [r5, #4]
 8019a2e:	60aa      	str	r2, [r5, #8]
 8019a30:	60eb      	str	r3, [r5, #12]
 8019a32:	8823      	ldrh	r3, [r4, #0]
 8019a34:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,6,5,10,14,16,18,13,7");
 8019a36:	687b      	ldr	r3, [r7, #4]
 8019a38:	3304      	adds	r3, #4
 8019a3a:	4a29      	ldr	r2, [pc, #164]	; (8019ae0 <createProblem+0x18c38>)
 8019a3c:	461c      	mov	r4, r3
 8019a3e:	4615      	mov	r5, r2
 8019a40:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8019a42:	6020      	str	r0, [r4, #0]
 8019a44:	6061      	str	r1, [r4, #4]
 8019a46:	60a2      	str	r2, [r4, #8]
 8019a48:	60e3      	str	r3, [r4, #12]
 8019a4a:	6828      	ldr	r0, [r5, #0]
 8019a4c:	6120      	str	r0, [r4, #16]
 8019a4e:	88ab      	ldrh	r3, [r5, #4]
 8019a50:	79aa      	ldrb	r2, [r5, #6]
 8019a52:	82a3      	strh	r3, [r4, #20]
 8019a54:	4613      	mov	r3, r2
 8019a56:	75a3      	strb	r3, [r4, #22]
			strcpy(p->startFinish, "s,d,d,d,d,d,e,d,d");
 8019a58:	687b      	ldr	r3, [r7, #4]
 8019a5a:	33d8      	adds	r3, #216	; 0xd8
 8019a5c:	4a21      	ldr	r2, [pc, #132]	; (8019ae4 <createProblem+0x18c3c>)
 8019a5e:	461d      	mov	r5, r3
 8019a60:	4614      	mov	r4, r2
 8019a62:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019a64:	6028      	str	r0, [r5, #0]
 8019a66:	6069      	str	r1, [r5, #4]
 8019a68:	60aa      	str	r2, [r5, #8]
 8019a6a:	60eb      	str	r3, [r5, #12]
 8019a6c:	8823      	ldrh	r3, [r4, #0]
 8019a6e:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "7A+");
 8019a70:	687b      	ldr	r3, [r7, #4]
 8019a72:	33cc      	adds	r3, #204	; 0xcc
 8019a74:	4a1c      	ldr	r2, [pc, #112]	; (8019ae8 <createProblem+0x18c40>)
 8019a76:	6810      	ldr	r0, [r2, #0]
 8019a78:	6018      	str	r0, [r3, #0]
			break;
 8019a7a:	f000 bf5b 	b.w	801a934 <createProblem+0x19a8c>
 8019a7e:	bf00      	nop
 8019a80:	080297e4 	.word	0x080297e4
 8019a84:	080297f0 	.word	0x080297f0
 8019a88:	08029800 	.word	0x08029800
 8019a8c:	08029814 	.word	0x08029814
 8019a90:	08020830 	.word	0x08020830
 8019a94:	08029824 	.word	0x08029824
 8019a98:	08029830 	.word	0x08029830
 8019a9c:	08029840 	.word	0x08029840
 8019aa0:	08020820 	.word	0x08020820
 8019aa4:	08020928 	.word	0x08020928
 8019aa8:	08029854 	.word	0x08029854
 8019aac:	08029870 	.word	0x08029870
 8019ab0:	08029880 	.word	0x08029880
 8019ab4:	08029894 	.word	0x08029894
 8019ab8:	080298a8 	.word	0x080298a8
 8019abc:	080298b8 	.word	0x080298b8
 8019ac0:	080209d8 	.word	0x080209d8
 8019ac4:	080208f0 	.word	0x080208f0
 8019ac8:	080298d0 	.word	0x080298d0
 8019acc:	080298d8 	.word	0x080298d8
 8019ad0:	080298e8 	.word	0x080298e8
 8019ad4:	08020874 	.word	0x08020874
 8019ad8:	080298fc 	.word	0x080298fc
 8019adc:	08029904 	.word	0x08029904
 8019ae0:	08029918 	.word	0x08029918
 8019ae4:	08029930 	.word	0x08029930
 8019ae8:	080209a4 	.word	0x080209a4
		case 799 :
			strcpy(p->name,"CHOSS 7");
 8019aec:	687b      	ldr	r3, [r7, #4]
 8019aee:	337c      	adds	r3, #124	; 0x7c
 8019af0:	49b9      	ldr	r1, [pc, #740]	; (8019dd8 <createProblem+0x18f30>)
 8019af2:	461a      	mov	r2, r3
 8019af4:	460b      	mov	r3, r1
 8019af6:	cb03      	ldmia	r3!, {r0, r1}
 8019af8:	6010      	str	r0, [r2, #0]
 8019afa:	6051      	str	r1, [r2, #4]
			p->moveSize = 7;
 8019afc:	687b      	ldr	r3, [r7, #4]
 8019afe:	2207      	movs	r2, #7
 8019b00:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,G,C,E,A,D");
 8019b02:	687b      	ldr	r3, [r7, #4]
 8019b04:	3340      	adds	r3, #64	; 0x40
 8019b06:	4ab5      	ldr	r2, [pc, #724]	; (8019ddc <createProblem+0x18f34>)
 8019b08:	461c      	mov	r4, r3
 8019b0a:	4613      	mov	r3, r2
 8019b0c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019b0e:	6020      	str	r0, [r4, #0]
 8019b10:	6061      	str	r1, [r4, #4]
 8019b12:	60a2      	str	r2, [r4, #8]
 8019b14:	881b      	ldrh	r3, [r3, #0]
 8019b16:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,9,8,12,14,18");
 8019b18:	687b      	ldr	r3, [r7, #4]
 8019b1a:	3304      	adds	r3, #4
 8019b1c:	4ab0      	ldr	r2, [pc, #704]	; (8019de0 <createProblem+0x18f38>)
 8019b1e:	461d      	mov	r5, r3
 8019b20:	4614      	mov	r4, r2
 8019b22:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019b24:	6028      	str	r0, [r5, #0]
 8019b26:	6069      	str	r1, [r5, #4]
 8019b28:	60aa      	str	r2, [r5, #8]
 8019b2a:	60eb      	str	r3, [r5, #12]
 8019b2c:	7823      	ldrb	r3, [r4, #0]
 8019b2e:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 8019b30:	687b      	ldr	r3, [r7, #4]
 8019b32:	33d8      	adds	r3, #216	; 0xd8
 8019b34:	4aab      	ldr	r2, [pc, #684]	; (8019de4 <createProblem+0x18f3c>)
 8019b36:	461c      	mov	r4, r3
 8019b38:	4613      	mov	r3, r2
 8019b3a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019b3c:	6020      	str	r0, [r4, #0]
 8019b3e:	6061      	str	r1, [r4, #4]
 8019b40:	60a2      	str	r2, [r4, #8]
 8019b42:	881b      	ldrh	r3, [r3, #0]
 8019b44:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8019b46:	687b      	ldr	r3, [r7, #4]
 8019b48:	33cc      	adds	r3, #204	; 0xcc
 8019b4a:	4aa7      	ldr	r2, [pc, #668]	; (8019de8 <createProblem+0x18f40>)
 8019b4c:	8811      	ldrh	r1, [r2, #0]
 8019b4e:	7892      	ldrb	r2, [r2, #2]
 8019b50:	8019      	strh	r1, [r3, #0]
 8019b52:	709a      	strb	r2, [r3, #2]
			break;
 8019b54:	f000 beee 	b.w	801a934 <createProblem+0x19a8c>
		case 8 :
			strcpy(p->name,"MAN WALKS DOWN THE STREET");
 8019b58:	687b      	ldr	r3, [r7, #4]
 8019b5a:	337c      	adds	r3, #124	; 0x7c
 8019b5c:	4aa3      	ldr	r2, [pc, #652]	; (8019dec <createProblem+0x18f44>)
 8019b5e:	461d      	mov	r5, r3
 8019b60:	4614      	mov	r4, r2
 8019b62:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019b64:	6028      	str	r0, [r5, #0]
 8019b66:	6069      	str	r1, [r5, #4]
 8019b68:	60aa      	str	r2, [r5, #8]
 8019b6a:	60eb      	str	r3, [r5, #12]
 8019b6c:	cc03      	ldmia	r4!, {r0, r1}
 8019b6e:	6128      	str	r0, [r5, #16]
 8019b70:	6169      	str	r1, [r5, #20]
 8019b72:	8823      	ldrh	r3, [r4, #0]
 8019b74:	832b      	strh	r3, [r5, #24]
			p->moveSize = 8;
 8019b76:	687b      	ldr	r3, [r7, #4]
 8019b78:	2208      	movs	r2, #8
 8019b7a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,E,B,E,B,E,A");
 8019b7c:	687b      	ldr	r3, [r7, #4]
 8019b7e:	3340      	adds	r3, #64	; 0x40
 8019b80:	4a9b      	ldr	r2, [pc, #620]	; (8019df0 <createProblem+0x18f48>)
 8019b82:	461c      	mov	r4, r3
 8019b84:	4615      	mov	r5, r2
 8019b86:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8019b88:	6020      	str	r0, [r4, #0]
 8019b8a:	6061      	str	r1, [r4, #4]
 8019b8c:	60a2      	str	r2, [r4, #8]
 8019b8e:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,8,10,12,15,16,18");
 8019b90:	687b      	ldr	r3, [r7, #4]
 8019b92:	3304      	adds	r3, #4
 8019b94:	4a97      	ldr	r2, [pc, #604]	; (8019df4 <createProblem+0x18f4c>)
 8019b96:	461d      	mov	r5, r3
 8019b98:	4614      	mov	r4, r2
 8019b9a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019b9c:	6028      	str	r0, [r5, #0]
 8019b9e:	6069      	str	r1, [r5, #4]
 8019ba0:	60aa      	str	r2, [r5, #8]
 8019ba2:	60eb      	str	r3, [r5, #12]
 8019ba4:	6820      	ldr	r0, [r4, #0]
 8019ba6:	6128      	str	r0, [r5, #16]
 8019ba8:	7923      	ldrb	r3, [r4, #4]
 8019baa:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8019bac:	687b      	ldr	r3, [r7, #4]
 8019bae:	33d8      	adds	r3, #216	; 0xd8
 8019bb0:	4a91      	ldr	r2, [pc, #580]	; (8019df8 <createProblem+0x18f50>)
 8019bb2:	461c      	mov	r4, r3
 8019bb4:	4615      	mov	r5, r2
 8019bb6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8019bb8:	6020      	str	r0, [r4, #0]
 8019bba:	6061      	str	r1, [r4, #4]
 8019bbc:	60a2      	str	r2, [r4, #8]
 8019bbe:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8019bc0:	687b      	ldr	r3, [r7, #4]
 8019bc2:	33cc      	adds	r3, #204	; 0xcc
 8019bc4:	4a8d      	ldr	r2, [pc, #564]	; (8019dfc <createProblem+0x18f54>)
 8019bc6:	6810      	ldr	r0, [r2, #0]
 8019bc8:	6018      	str	r0, [r3, #0]
			break;
 8019bca:	f000 beb3 	b.w	801a934 <createProblem+0x19a8c>
		case 80 :
			strcpy(p->name,"MARYJANEFIGAROTTA");
 8019bce:	687b      	ldr	r3, [r7, #4]
 8019bd0:	337c      	adds	r3, #124	; 0x7c
 8019bd2:	4a8b      	ldr	r2, [pc, #556]	; (8019e00 <createProblem+0x18f58>)
 8019bd4:	461d      	mov	r5, r3
 8019bd6:	4614      	mov	r4, r2
 8019bd8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019bda:	6028      	str	r0, [r5, #0]
 8019bdc:	6069      	str	r1, [r5, #4]
 8019bde:	60aa      	str	r2, [r5, #8]
 8019be0:	60eb      	str	r3, [r5, #12]
 8019be2:	8823      	ldrh	r3, [r4, #0]
 8019be4:	822b      	strh	r3, [r5, #16]
			p->moveSize = 5;
 8019be6:	687b      	ldr	r3, [r7, #4]
 8019be8:	2205      	movs	r2, #5
 8019bea:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,H,I,I");
 8019bec:	687b      	ldr	r3, [r7, #4]
 8019bee:	3340      	adds	r3, #64	; 0x40
 8019bf0:	4984      	ldr	r1, [pc, #528]	; (8019e04 <createProblem+0x18f5c>)
 8019bf2:	461a      	mov	r2, r3
 8019bf4:	460b      	mov	r3, r1
 8019bf6:	cb03      	ldmia	r3!, {r0, r1}
 8019bf8:	6010      	str	r0, [r2, #0]
 8019bfa:	6051      	str	r1, [r2, #4]
 8019bfc:	881b      	ldrh	r3, [r3, #0]
 8019bfe:	8113      	strh	r3, [r2, #8]
			strcpy(p->moveNumbers,"6,5,10,15,18");
 8019c00:	687b      	ldr	r3, [r7, #4]
 8019c02:	3304      	adds	r3, #4
 8019c04:	4a80      	ldr	r2, [pc, #512]	; (8019e08 <createProblem+0x18f60>)
 8019c06:	461c      	mov	r4, r3
 8019c08:	4613      	mov	r3, r2
 8019c0a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019c0c:	6020      	str	r0, [r4, #0]
 8019c0e:	6061      	str	r1, [r4, #4]
 8019c10:	60a2      	str	r2, [r4, #8]
 8019c12:	781b      	ldrb	r3, [r3, #0]
 8019c14:	7323      	strb	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,e");
 8019c16:	687b      	ldr	r3, [r7, #4]
 8019c18:	33d8      	adds	r3, #216	; 0xd8
 8019c1a:	497c      	ldr	r1, [pc, #496]	; (8019e0c <createProblem+0x18f64>)
 8019c1c:	461a      	mov	r2, r3
 8019c1e:	460b      	mov	r3, r1
 8019c20:	cb03      	ldmia	r3!, {r0, r1}
 8019c22:	6010      	str	r0, [r2, #0]
 8019c24:	6051      	str	r1, [r2, #4]
 8019c26:	881b      	ldrh	r3, [r3, #0]
 8019c28:	8113      	strh	r3, [r2, #8]
			strcpy(p->grade, "7A+");
 8019c2a:	687b      	ldr	r3, [r7, #4]
 8019c2c:	33cc      	adds	r3, #204	; 0xcc
 8019c2e:	4a78      	ldr	r2, [pc, #480]	; (8019e10 <createProblem+0x18f68>)
 8019c30:	6810      	ldr	r0, [r2, #0]
 8019c32:	6018      	str	r0, [r3, #0]
			break;
 8019c34:	f000 be7e 	b.w	801a934 <createProblem+0x19a8c>
		case 800 :
			strcpy(p->name,"PANTHER");
 8019c38:	687b      	ldr	r3, [r7, #4]
 8019c3a:	337c      	adds	r3, #124	; 0x7c
 8019c3c:	4975      	ldr	r1, [pc, #468]	; (8019e14 <createProblem+0x18f6c>)
 8019c3e:	461a      	mov	r2, r3
 8019c40:	460b      	mov	r3, r1
 8019c42:	cb03      	ldmia	r3!, {r0, r1}
 8019c44:	6010      	str	r0, [r2, #0]
 8019c46:	6051      	str	r1, [r2, #4]
			p->moveSize = 4;
 8019c48:	687b      	ldr	r3, [r7, #4]
 8019c4a:	2204      	movs	r2, #4
 8019c4c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,G,I");
 8019c4e:	687b      	ldr	r3, [r7, #4]
 8019c50:	3340      	adds	r3, #64	; 0x40
 8019c52:	4971      	ldr	r1, [pc, #452]	; (8019e18 <createProblem+0x18f70>)
 8019c54:	461a      	mov	r2, r3
 8019c56:	460b      	mov	r3, r1
 8019c58:	cb03      	ldmia	r3!, {r0, r1}
 8019c5a:	6010      	str	r0, [r2, #0]
 8019c5c:	6051      	str	r1, [r2, #4]
			strcpy(p->moveNumbers,"6,10,14,18");
 8019c5e:	687b      	ldr	r3, [r7, #4]
 8019c60:	3304      	adds	r3, #4
 8019c62:	496e      	ldr	r1, [pc, #440]	; (8019e1c <createProblem+0x18f74>)
 8019c64:	461a      	mov	r2, r3
 8019c66:	460b      	mov	r3, r1
 8019c68:	cb03      	ldmia	r3!, {r0, r1}
 8019c6a:	6010      	str	r0, [r2, #0]
 8019c6c:	6051      	str	r1, [r2, #4]
 8019c6e:	8819      	ldrh	r1, [r3, #0]
 8019c70:	789b      	ldrb	r3, [r3, #2]
 8019c72:	8111      	strh	r1, [r2, #8]
 8019c74:	7293      	strb	r3, [r2, #10]
			strcpy(p->startFinish, "s,d,d,e");
 8019c76:	687b      	ldr	r3, [r7, #4]
 8019c78:	33d8      	adds	r3, #216	; 0xd8
 8019c7a:	4969      	ldr	r1, [pc, #420]	; (8019e20 <createProblem+0x18f78>)
 8019c7c:	461a      	mov	r2, r3
 8019c7e:	460b      	mov	r3, r1
 8019c80:	cb03      	ldmia	r3!, {r0, r1}
 8019c82:	6010      	str	r0, [r2, #0]
 8019c84:	6051      	str	r1, [r2, #4]
			strcpy(p->grade, "7B+");
 8019c86:	687b      	ldr	r3, [r7, #4]
 8019c88:	33cc      	adds	r3, #204	; 0xcc
 8019c8a:	4a66      	ldr	r2, [pc, #408]	; (8019e24 <createProblem+0x18f7c>)
 8019c8c:	6810      	ldr	r0, [r2, #0]
 8019c8e:	6018      	str	r0, [r3, #0]
			break;
 8019c90:	f000 be50 	b.w	801a934 <createProblem+0x19a8c>
		case 801 :
			strcpy(p->name,"1985-54");
 8019c94:	687b      	ldr	r3, [r7, #4]
 8019c96:	337c      	adds	r3, #124	; 0x7c
 8019c98:	4963      	ldr	r1, [pc, #396]	; (8019e28 <createProblem+0x18f80>)
 8019c9a:	461a      	mov	r2, r3
 8019c9c:	460b      	mov	r3, r1
 8019c9e:	cb03      	ldmia	r3!, {r0, r1}
 8019ca0:	6010      	str	r0, [r2, #0]
 8019ca2:	6051      	str	r1, [r2, #4]
			p->moveSize = 8;
 8019ca4:	687b      	ldr	r3, [r7, #4]
 8019ca6:	2208      	movs	r2, #8
 8019ca8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,H,I,H,J,G,H,D");
 8019caa:	687b      	ldr	r3, [r7, #4]
 8019cac:	3340      	adds	r3, #64	; 0x40
 8019cae:	4a5f      	ldr	r2, [pc, #380]	; (8019e2c <createProblem+0x18f84>)
 8019cb0:	461c      	mov	r4, r3
 8019cb2:	4615      	mov	r5, r2
 8019cb4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8019cb6:	6020      	str	r0, [r4, #0]
 8019cb8:	6061      	str	r1, [r4, #4]
 8019cba:	60a2      	str	r2, [r4, #8]
 8019cbc:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,5,10,10,13,15,16,18");
 8019cbe:	687b      	ldr	r3, [r7, #4]
 8019cc0:	3304      	adds	r3, #4
 8019cc2:	4a5b      	ldr	r2, [pc, #364]	; (8019e30 <createProblem+0x18f88>)
 8019cc4:	461d      	mov	r5, r3
 8019cc6:	4614      	mov	r4, r2
 8019cc8:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019cca:	6028      	str	r0, [r5, #0]
 8019ccc:	6069      	str	r1, [r5, #4]
 8019cce:	60aa      	str	r2, [r5, #8]
 8019cd0:	60eb      	str	r3, [r5, #12]
 8019cd2:	6820      	ldr	r0, [r4, #0]
 8019cd4:	6128      	str	r0, [r5, #16]
 8019cd6:	88a3      	ldrh	r3, [r4, #4]
 8019cd8:	82ab      	strh	r3, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,e");
 8019cda:	687b      	ldr	r3, [r7, #4]
 8019cdc:	33d8      	adds	r3, #216	; 0xd8
 8019cde:	4a46      	ldr	r2, [pc, #280]	; (8019df8 <createProblem+0x18f50>)
 8019ce0:	461c      	mov	r4, r3
 8019ce2:	4615      	mov	r5, r2
 8019ce4:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8019ce6:	6020      	str	r0, [r4, #0]
 8019ce8:	6061      	str	r1, [r4, #4]
 8019cea:	60a2      	str	r2, [r4, #8]
 8019cec:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8019cee:	687b      	ldr	r3, [r7, #4]
 8019cf0:	33cc      	adds	r3, #204	; 0xcc
 8019cf2:	4a42      	ldr	r2, [pc, #264]	; (8019dfc <createProblem+0x18f54>)
 8019cf4:	6810      	ldr	r0, [r2, #0]
 8019cf6:	6018      	str	r0, [r3, #0]
			break;
 8019cf8:	f000 be1c 	b.w	801a934 <createProblem+0x19a8c>
		case 802 :
			strcpy(p->name,"TRIAL ‘N’ ERROR");
 8019cfc:	687b      	ldr	r3, [r7, #4]
 8019cfe:	337c      	adds	r3, #124	; 0x7c
 8019d00:	4a4c      	ldr	r2, [pc, #304]	; (8019e34 <createProblem+0x18f8c>)
 8019d02:	461d      	mov	r5, r3
 8019d04:	4614      	mov	r4, r2
 8019d06:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019d08:	6028      	str	r0, [r5, #0]
 8019d0a:	6069      	str	r1, [r5, #4]
 8019d0c:	60aa      	str	r2, [r5, #8]
 8019d0e:	60eb      	str	r3, [r5, #12]
 8019d10:	6820      	ldr	r0, [r4, #0]
 8019d12:	6128      	str	r0, [r5, #16]
			p->moveSize = 7;
 8019d14:	687b      	ldr	r3, [r7, #4]
 8019d16:	2207      	movs	r2, #7
 8019d18:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,B,E,G,E,J,D");
 8019d1a:	687b      	ldr	r3, [r7, #4]
 8019d1c:	3340      	adds	r3, #64	; 0x40
 8019d1e:	4a46      	ldr	r2, [pc, #280]	; (8019e38 <createProblem+0x18f90>)
 8019d20:	461c      	mov	r4, r3
 8019d22:	4613      	mov	r3, r2
 8019d24:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019d26:	6020      	str	r0, [r4, #0]
 8019d28:	6061      	str	r1, [r4, #4]
 8019d2a:	60a2      	str	r2, [r4, #8]
 8019d2c:	881b      	ldrh	r3, [r3, #0]
 8019d2e:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,6,9,10,14,16,18");
 8019d30:	687b      	ldr	r3, [r7, #4]
 8019d32:	3304      	adds	r3, #4
 8019d34:	4a41      	ldr	r2, [pc, #260]	; (8019e3c <createProblem+0x18f94>)
 8019d36:	461d      	mov	r5, r3
 8019d38:	4614      	mov	r4, r2
 8019d3a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019d3c:	6028      	str	r0, [r5, #0]
 8019d3e:	6069      	str	r1, [r5, #4]
 8019d40:	60aa      	str	r2, [r5, #8]
 8019d42:	60eb      	str	r3, [r5, #12]
 8019d44:	8823      	ldrh	r3, [r4, #0]
 8019d46:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8019d48:	687b      	ldr	r3, [r7, #4]
 8019d4a:	33d8      	adds	r3, #216	; 0xd8
 8019d4c:	4a3c      	ldr	r2, [pc, #240]	; (8019e40 <createProblem+0x18f98>)
 8019d4e:	461c      	mov	r4, r3
 8019d50:	4613      	mov	r3, r2
 8019d52:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019d54:	6020      	str	r0, [r4, #0]
 8019d56:	6061      	str	r1, [r4, #4]
 8019d58:	60a2      	str	r2, [r4, #8]
 8019d5a:	881b      	ldrh	r3, [r3, #0]
 8019d5c:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 8019d5e:	687b      	ldr	r3, [r7, #4]
 8019d60:	33cc      	adds	r3, #204	; 0xcc
 8019d62:	4a38      	ldr	r2, [pc, #224]	; (8019e44 <createProblem+0x18f9c>)
 8019d64:	8811      	ldrh	r1, [r2, #0]
 8019d66:	7892      	ldrb	r2, [r2, #2]
 8019d68:	8019      	strh	r1, [r3, #0]
 8019d6a:	709a      	strb	r2, [r3, #2]
			break;
 8019d6c:	f000 bde2 	b.w	801a934 <createProblem+0x19a8c>
		case 803 :
			strcpy(p->name,"BLACK PSYCHO");
 8019d70:	687b      	ldr	r3, [r7, #4]
 8019d72:	337c      	adds	r3, #124	; 0x7c
 8019d74:	4a34      	ldr	r2, [pc, #208]	; (8019e48 <createProblem+0x18fa0>)
 8019d76:	461c      	mov	r4, r3
 8019d78:	4613      	mov	r3, r2
 8019d7a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019d7c:	6020      	str	r0, [r4, #0]
 8019d7e:	6061      	str	r1, [r4, #4]
 8019d80:	60a2      	str	r2, [r4, #8]
 8019d82:	781b      	ldrb	r3, [r3, #0]
 8019d84:	7323      	strb	r3, [r4, #12]
			p->moveSize = 6;
 8019d86:	687b      	ldr	r3, [r7, #4]
 8019d88:	2206      	movs	r2, #6
 8019d8a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,C,H,D,G,D");
 8019d8c:	687b      	ldr	r3, [r7, #4]
 8019d8e:	3340      	adds	r3, #64	; 0x40
 8019d90:	4a2e      	ldr	r2, [pc, #184]	; (8019e4c <createProblem+0x18fa4>)
 8019d92:	461c      	mov	r4, r3
 8019d94:	4613      	mov	r3, r2
 8019d96:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019d98:	6020      	str	r0, [r4, #0]
 8019d9a:	6061      	str	r1, [r4, #4]
 8019d9c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,5,8,11,14,18");
 8019d9e:	687b      	ldr	r3, [r7, #4]
 8019da0:	3304      	adds	r3, #4
 8019da2:	4a2b      	ldr	r2, [pc, #172]	; (8019e50 <createProblem+0x18fa8>)
 8019da4:	461c      	mov	r4, r3
 8019da6:	4613      	mov	r3, r2
 8019da8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019daa:	6020      	str	r0, [r4, #0]
 8019dac:	6061      	str	r1, [r4, #4]
 8019dae:	60a2      	str	r2, [r4, #8]
 8019db0:	881a      	ldrh	r2, [r3, #0]
 8019db2:	789b      	ldrb	r3, [r3, #2]
 8019db4:	81a2      	strh	r2, [r4, #12]
 8019db6:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8019db8:	687b      	ldr	r3, [r7, #4]
 8019dba:	33d8      	adds	r3, #216	; 0xd8
 8019dbc:	4a25      	ldr	r2, [pc, #148]	; (8019e54 <createProblem+0x18fac>)
 8019dbe:	461c      	mov	r4, r3
 8019dc0:	4613      	mov	r3, r2
 8019dc2:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019dc4:	6020      	str	r0, [r4, #0]
 8019dc6:	6061      	str	r1, [r4, #4]
 8019dc8:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 8019dca:	687b      	ldr	r3, [r7, #4]
 8019dcc:	33cc      	adds	r3, #204	; 0xcc
 8019dce:	4a22      	ldr	r2, [pc, #136]	; (8019e58 <createProblem+0x18fb0>)
 8019dd0:	6810      	ldr	r0, [r2, #0]
 8019dd2:	6018      	str	r0, [r3, #0]
			break;
 8019dd4:	f000 bdae 	b.w	801a934 <createProblem+0x19a8c>
 8019dd8:	08029944 	.word	0x08029944
 8019ddc:	0802994c 	.word	0x0802994c
 8019de0:	0802995c 	.word	0x0802995c
 8019de4:	08020a14 	.word	0x08020a14
 8019de8:	08020874 	.word	0x08020874
 8019dec:	08029970 	.word	0x08029970
 8019df0:	0802998c 	.word	0x0802998c
 8019df4:	0802999c 	.word	0x0802999c
 8019df8:	08020a4c 	.word	0x08020a4c
 8019dfc:	08020830 	.word	0x08020830
 8019e00:	080299b4 	.word	0x080299b4
 8019e04:	080299c8 	.word	0x080299c8
 8019e08:	080299d4 	.word	0x080299d4
 8019e0c:	08021748 	.word	0x08021748
 8019e10:	080209a4 	.word	0x080209a4
 8019e14:	080299e4 	.word	0x080299e4
 8019e18:	0802524c 	.word	0x0802524c
 8019e1c:	08021c10 	.word	0x08021c10
 8019e20:	080215a8 	.word	0x080215a8
 8019e24:	08020dc8 	.word	0x08020dc8
 8019e28:	080299ec 	.word	0x080299ec
 8019e2c:	080299f4 	.word	0x080299f4
 8019e30:	08029a04 	.word	0x08029a04
 8019e34:	08029a1c 	.word	0x08029a1c
 8019e38:	08029a30 	.word	0x08029a30
 8019e3c:	08029a40 	.word	0x08029a40
 8019e40:	08020820 	.word	0x08020820
 8019e44:	080208f0 	.word	0x080208f0
 8019e48:	08029a54 	.word	0x08029a54
 8019e4c:	08029a64 	.word	0x08029a64
 8019e50:	08028844 	.word	0x08028844
 8019e54:	08020e90 	.word	0x08020e90
 8019e58:	08020928 	.word	0x08020928
		case 804 :
			strcpy(p->name,"BATTLE OF THE PUDGE SHORT");
 8019e5c:	687b      	ldr	r3, [r7, #4]
 8019e5e:	337c      	adds	r3, #124	; 0x7c
 8019e60:	4abc      	ldr	r2, [pc, #752]	; (801a154 <createProblem+0x192ac>)
 8019e62:	461d      	mov	r5, r3
 8019e64:	4614      	mov	r4, r2
 8019e66:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019e68:	6028      	str	r0, [r5, #0]
 8019e6a:	6069      	str	r1, [r5, #4]
 8019e6c:	60aa      	str	r2, [r5, #8]
 8019e6e:	60eb      	str	r3, [r5, #12]
 8019e70:	cc03      	ldmia	r4!, {r0, r1}
 8019e72:	6128      	str	r0, [r5, #16]
 8019e74:	6169      	str	r1, [r5, #20]
 8019e76:	8823      	ldrh	r3, [r4, #0]
 8019e78:	832b      	strh	r3, [r5, #24]
			p->moveSize = 7;
 8019e7a:	687b      	ldr	r3, [r7, #4]
 8019e7c:	2207      	movs	r2, #7
 8019e7e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,H,E,I,D,D,D");
 8019e80:	687b      	ldr	r3, [r7, #4]
 8019e82:	3340      	adds	r3, #64	; 0x40
 8019e84:	4ab4      	ldr	r2, [pc, #720]	; (801a158 <createProblem+0x192b0>)
 8019e86:	461c      	mov	r4, r3
 8019e88:	4613      	mov	r3, r2
 8019e8a:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019e8c:	6020      	str	r0, [r4, #0]
 8019e8e:	6061      	str	r1, [r4, #4]
 8019e90:	60a2      	str	r2, [r4, #8]
 8019e92:	881b      	ldrh	r3, [r3, #0]
 8019e94:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,8,10,11,15,18");
 8019e96:	687b      	ldr	r3, [r7, #4]
 8019e98:	3304      	adds	r3, #4
 8019e9a:	4ab0      	ldr	r2, [pc, #704]	; (801a15c <createProblem+0x192b4>)
 8019e9c:	461d      	mov	r5, r3
 8019e9e:	4614      	mov	r4, r2
 8019ea0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019ea2:	6028      	str	r0, [r5, #0]
 8019ea4:	6069      	str	r1, [r5, #4]
 8019ea6:	60aa      	str	r2, [r5, #8]
 8019ea8:	60eb      	str	r3, [r5, #12]
 8019eaa:	8823      	ldrh	r3, [r4, #0]
 8019eac:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 8019eae:	687b      	ldr	r3, [r7, #4]
 8019eb0:	33d8      	adds	r3, #216	; 0xd8
 8019eb2:	4aab      	ldr	r2, [pc, #684]	; (801a160 <createProblem+0x192b8>)
 8019eb4:	461c      	mov	r4, r3
 8019eb6:	4613      	mov	r3, r2
 8019eb8:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019eba:	6020      	str	r0, [r4, #0]
 8019ebc:	6061      	str	r1, [r4, #4]
 8019ebe:	60a2      	str	r2, [r4, #8]
 8019ec0:	881b      	ldrh	r3, [r3, #0]
 8019ec2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A");
 8019ec4:	687b      	ldr	r3, [r7, #4]
 8019ec6:	33cc      	adds	r3, #204	; 0xcc
 8019ec8:	4aa6      	ldr	r2, [pc, #664]	; (801a164 <createProblem+0x192bc>)
 8019eca:	8811      	ldrh	r1, [r2, #0]
 8019ecc:	7892      	ldrb	r2, [r2, #2]
 8019ece:	8019      	strh	r1, [r3, #0]
 8019ed0:	709a      	strb	r2, [r3, #2]
			break;
 8019ed2:	f000 bd2f 	b.w	801a934 <createProblem+0x19a8c>
		case 805 :
			strcpy(p->name,"JINJA TEMPLATE 2");
 8019ed6:	687b      	ldr	r3, [r7, #4]
 8019ed8:	337c      	adds	r3, #124	; 0x7c
 8019eda:	4aa3      	ldr	r2, [pc, #652]	; (801a168 <createProblem+0x192c0>)
 8019edc:	461d      	mov	r5, r3
 8019ede:	4614      	mov	r4, r2
 8019ee0:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019ee2:	6028      	str	r0, [r5, #0]
 8019ee4:	6069      	str	r1, [r5, #4]
 8019ee6:	60aa      	str	r2, [r5, #8]
 8019ee8:	60eb      	str	r3, [r5, #12]
 8019eea:	7823      	ldrb	r3, [r4, #0]
 8019eec:	742b      	strb	r3, [r5, #16]
			p->moveSize = 7;
 8019eee:	687b      	ldr	r3, [r7, #4]
 8019ef0:	2207      	movs	r2, #7
 8019ef2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,K,I,J,G,I,G");
 8019ef4:	687b      	ldr	r3, [r7, #4]
 8019ef6:	3340      	adds	r3, #64	; 0x40
 8019ef8:	4a9c      	ldr	r2, [pc, #624]	; (801a16c <createProblem+0x192c4>)
 8019efa:	461c      	mov	r4, r3
 8019efc:	4613      	mov	r3, r2
 8019efe:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019f00:	6020      	str	r0, [r4, #0]
 8019f02:	6061      	str	r1, [r4, #4]
 8019f04:	60a2      	str	r2, [r4, #8]
 8019f06:	881b      	ldrh	r3, [r3, #0]
 8019f08:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,9,9,13,14,18,4");
 8019f0a:	687b      	ldr	r3, [r7, #4]
 8019f0c:	3304      	adds	r3, #4
 8019f0e:	4a98      	ldr	r2, [pc, #608]	; (801a170 <createProblem+0x192c8>)
 8019f10:	461d      	mov	r5, r3
 8019f12:	4614      	mov	r4, r2
 8019f14:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 8019f16:	6028      	str	r0, [r5, #0]
 8019f18:	6069      	str	r1, [r5, #4]
 8019f1a:	60aa      	str	r2, [r5, #8]
 8019f1c:	60eb      	str	r3, [r5, #12]
 8019f1e:	7823      	ldrb	r3, [r4, #0]
 8019f20:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,e,s");
 8019f22:	687b      	ldr	r3, [r7, #4]
 8019f24:	33d8      	adds	r3, #216	; 0xd8
 8019f26:	4a93      	ldr	r2, [pc, #588]	; (801a174 <createProblem+0x192cc>)
 8019f28:	461c      	mov	r4, r3
 8019f2a:	4613      	mov	r3, r2
 8019f2c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019f2e:	6020      	str	r0, [r4, #0]
 8019f30:	6061      	str	r1, [r4, #4]
 8019f32:	60a2      	str	r2, [r4, #8]
 8019f34:	881b      	ldrh	r3, [r3, #0]
 8019f36:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 8019f38:	687b      	ldr	r3, [r7, #4]
 8019f3a:	33cc      	adds	r3, #204	; 0xcc
 8019f3c:	4a8e      	ldr	r2, [pc, #568]	; (801a178 <createProblem+0x192d0>)
 8019f3e:	6810      	ldr	r0, [r2, #0]
 8019f40:	6018      	str	r0, [r3, #0]
			break;
 8019f42:	f000 bcf7 	b.w	801a934 <createProblem+0x19a8c>
		case 806 :
			strcpy(p->name,"JUMPBUG");
 8019f46:	687b      	ldr	r3, [r7, #4]
 8019f48:	337c      	adds	r3, #124	; 0x7c
 8019f4a:	498c      	ldr	r1, [pc, #560]	; (801a17c <createProblem+0x192d4>)
 8019f4c:	461a      	mov	r2, r3
 8019f4e:	460b      	mov	r3, r1
 8019f50:	cb03      	ldmia	r3!, {r0, r1}
 8019f52:	6010      	str	r0, [r2, #0]
 8019f54:	6051      	str	r1, [r2, #4]
			p->moveSize = 6;
 8019f56:	687b      	ldr	r3, [r7, #4]
 8019f58:	2206      	movs	r2, #6
 8019f5a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,J,H,F,C,D");
 8019f5c:	687b      	ldr	r3, [r7, #4]
 8019f5e:	3340      	adds	r3, #64	; 0x40
 8019f60:	4a87      	ldr	r2, [pc, #540]	; (801a180 <createProblem+0x192d8>)
 8019f62:	461c      	mov	r4, r3
 8019f64:	4613      	mov	r3, r2
 8019f66:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019f68:	6020      	str	r0, [r4, #0]
 8019f6a:	6061      	str	r1, [r4, #4]
 8019f6c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,10,11,13,18");
 8019f6e:	687b      	ldr	r3, [r7, #4]
 8019f70:	3304      	adds	r3, #4
 8019f72:	4a84      	ldr	r2, [pc, #528]	; (801a184 <createProblem+0x192dc>)
 8019f74:	461c      	mov	r4, r3
 8019f76:	4615      	mov	r5, r2
 8019f78:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 8019f7a:	6020      	str	r0, [r4, #0]
 8019f7c:	6061      	str	r1, [r4, #4]
 8019f7e:	60a2      	str	r2, [r4, #8]
 8019f80:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 8019f82:	687b      	ldr	r3, [r7, #4]
 8019f84:	33d8      	adds	r3, #216	; 0xd8
 8019f86:	4a80      	ldr	r2, [pc, #512]	; (801a188 <createProblem+0x192e0>)
 8019f88:	461c      	mov	r4, r3
 8019f8a:	4613      	mov	r3, r2
 8019f8c:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019f8e:	6020      	str	r0, [r4, #0]
 8019f90:	6061      	str	r1, [r4, #4]
 8019f92:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 8019f94:	687b      	ldr	r3, [r7, #4]
 8019f96:	33cc      	adds	r3, #204	; 0xcc
 8019f98:	4a72      	ldr	r2, [pc, #456]	; (801a164 <createProblem+0x192bc>)
 8019f9a:	8811      	ldrh	r1, [r2, #0]
 8019f9c:	7892      	ldrb	r2, [r2, #2]
 8019f9e:	8019      	strh	r1, [r3, #0]
 8019fa0:	709a      	strb	r2, [r3, #2]
			break;
 8019fa2:	f000 bcc7 	b.w	801a934 <createProblem+0x19a8c>
		case 81 :
			strcpy(p->name,"WARM UP A1");
 8019fa6:	687b      	ldr	r3, [r7, #4]
 8019fa8:	337c      	adds	r3, #124	; 0x7c
 8019faa:	4978      	ldr	r1, [pc, #480]	; (801a18c <createProblem+0x192e4>)
 8019fac:	461a      	mov	r2, r3
 8019fae:	460b      	mov	r3, r1
 8019fb0:	cb03      	ldmia	r3!, {r0, r1}
 8019fb2:	6010      	str	r0, [r2, #0]
 8019fb4:	6051      	str	r1, [r2, #4]
 8019fb6:	8819      	ldrh	r1, [r3, #0]
 8019fb8:	789b      	ldrb	r3, [r3, #2]
 8019fba:	8111      	strh	r1, [r2, #8]
 8019fbc:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 8019fbe:	687b      	ldr	r3, [r7, #4]
 8019fc0:	2206      	movs	r2, #6
 8019fc2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,E,F,D,D");
 8019fc4:	687b      	ldr	r3, [r7, #4]
 8019fc6:	3340      	adds	r3, #64	; 0x40
 8019fc8:	4a71      	ldr	r2, [pc, #452]	; (801a190 <createProblem+0x192e8>)
 8019fca:	461c      	mov	r4, r3
 8019fcc:	4613      	mov	r3, r2
 8019fce:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019fd0:	6020      	str	r0, [r4, #0]
 8019fd2:	6061      	str	r1, [r4, #4]
 8019fd4:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,8,11,15,18");
 8019fd6:	687b      	ldr	r3, [r7, #4]
 8019fd8:	3304      	adds	r3, #4
 8019fda:	4a6e      	ldr	r2, [pc, #440]	; (801a194 <createProblem+0x192ec>)
 8019fdc:	461c      	mov	r4, r3
 8019fde:	4613      	mov	r3, r2
 8019fe0:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019fe2:	6020      	str	r0, [r4, #0]
 8019fe4:	6061      	str	r1, [r4, #4]
 8019fe6:	60a2      	str	r2, [r4, #8]
 8019fe8:	881a      	ldrh	r2, [r3, #0]
 8019fea:	789b      	ldrb	r3, [r3, #2]
 8019fec:	81a2      	strh	r2, [r4, #12]
 8019fee:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 8019ff0:	687b      	ldr	r3, [r7, #4]
 8019ff2:	33d8      	adds	r3, #216	; 0xd8
 8019ff4:	4a68      	ldr	r2, [pc, #416]	; (801a198 <createProblem+0x192f0>)
 8019ff6:	461c      	mov	r4, r3
 8019ff8:	4613      	mov	r3, r2
 8019ffa:	cb07      	ldmia	r3!, {r0, r1, r2}
 8019ffc:	6020      	str	r0, [r4, #0]
 8019ffe:	6061      	str	r1, [r4, #4]
 801a000:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 801a002:	687b      	ldr	r3, [r7, #4]
 801a004:	33cc      	adds	r3, #204	; 0xcc
 801a006:	4a5c      	ldr	r2, [pc, #368]	; (801a178 <createProblem+0x192d0>)
 801a008:	6810      	ldr	r0, [r2, #0]
 801a00a:	6018      	str	r0, [r3, #0]
			break;
 801a00c:	f000 bc92 	b.w	801a934 <createProblem+0x19a8c>
		case 82 :
			strcpy(p->name,"WARM UP A2");
 801a010:	687b      	ldr	r3, [r7, #4]
 801a012:	337c      	adds	r3, #124	; 0x7c
 801a014:	4961      	ldr	r1, [pc, #388]	; (801a19c <createProblem+0x192f4>)
 801a016:	461a      	mov	r2, r3
 801a018:	460b      	mov	r3, r1
 801a01a:	cb03      	ldmia	r3!, {r0, r1}
 801a01c:	6010      	str	r0, [r2, #0]
 801a01e:	6051      	str	r1, [r2, #4]
 801a020:	8819      	ldrh	r1, [r3, #0]
 801a022:	789b      	ldrb	r3, [r3, #2]
 801a024:	8111      	strh	r1, [r2, #8]
 801a026:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 801a028:	687b      	ldr	r3, [r7, #4]
 801a02a:	2207      	movs	r2, #7
 801a02c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,G,G,E,D,I,A");
 801a02e:	687b      	ldr	r3, [r7, #4]
 801a030:	3340      	adds	r3, #64	; 0x40
 801a032:	4a5b      	ldr	r2, [pc, #364]	; (801a1a0 <createProblem+0x192f8>)
 801a034:	461c      	mov	r4, r3
 801a036:	4613      	mov	r3, r2
 801a038:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a03a:	6020      	str	r0, [r4, #0]
 801a03c:	6061      	str	r1, [r4, #4]
 801a03e:	60a2      	str	r2, [r4, #8]
 801a040:	881b      	ldrh	r3, [r3, #0]
 801a042:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,6,9,12,15,7,18");
 801a044:	687b      	ldr	r3, [r7, #4]
 801a046:	3304      	adds	r3, #4
 801a048:	4a56      	ldr	r2, [pc, #344]	; (801a1a4 <createProblem+0x192fc>)
 801a04a:	461d      	mov	r5, r3
 801a04c:	4614      	mov	r4, r2
 801a04e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a050:	6028      	str	r0, [r5, #0]
 801a052:	6069      	str	r1, [r5, #4]
 801a054:	60aa      	str	r2, [r5, #8]
 801a056:	60eb      	str	r3, [r5, #12]
 801a058:	7823      	ldrb	r3, [r4, #0]
 801a05a:	742b      	strb	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 801a05c:	687b      	ldr	r3, [r7, #4]
 801a05e:	33d8      	adds	r3, #216	; 0xd8
 801a060:	4a3f      	ldr	r2, [pc, #252]	; (801a160 <createProblem+0x192b8>)
 801a062:	461c      	mov	r4, r3
 801a064:	4613      	mov	r3, r2
 801a066:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a068:	6020      	str	r0, [r4, #0]
 801a06a:	6061      	str	r1, [r4, #4]
 801a06c:	60a2      	str	r2, [r4, #8]
 801a06e:	881b      	ldrh	r3, [r3, #0]
 801a070:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 801a072:	687b      	ldr	r3, [r7, #4]
 801a074:	33cc      	adds	r3, #204	; 0xcc
 801a076:	4a40      	ldr	r2, [pc, #256]	; (801a178 <createProblem+0x192d0>)
 801a078:	6810      	ldr	r0, [r2, #0]
 801a07a:	6018      	str	r0, [r3, #0]
			break;
 801a07c:	f000 bc5a 	b.w	801a934 <createProblem+0x19a8c>
		case 83 :
			strcpy(p->name,"WARM UP A3");
 801a080:	687b      	ldr	r3, [r7, #4]
 801a082:	337c      	adds	r3, #124	; 0x7c
 801a084:	4948      	ldr	r1, [pc, #288]	; (801a1a8 <createProblem+0x19300>)
 801a086:	461a      	mov	r2, r3
 801a088:	460b      	mov	r3, r1
 801a08a:	cb03      	ldmia	r3!, {r0, r1}
 801a08c:	6010      	str	r0, [r2, #0]
 801a08e:	6051      	str	r1, [r2, #4]
 801a090:	8819      	ldrh	r1, [r3, #0]
 801a092:	789b      	ldrb	r3, [r3, #2]
 801a094:	8111      	strh	r1, [r2, #8]
 801a096:	7293      	strb	r3, [r2, #10]
			p->moveSize = 6;
 801a098:	687b      	ldr	r3, [r7, #4]
 801a09a:	2206      	movs	r2, #6
 801a09c:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,H,G,I,I");
 801a09e:	687b      	ldr	r3, [r7, #4]
 801a0a0:	3340      	adds	r3, #64	; 0x40
 801a0a2:	4a42      	ldr	r2, [pc, #264]	; (801a1ac <createProblem+0x19304>)
 801a0a4:	461c      	mov	r4, r3
 801a0a6:	4613      	mov	r3, r2
 801a0a8:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a0aa:	6020      	str	r0, [r4, #0]
 801a0ac:	6061      	str	r1, [r4, #4]
 801a0ae:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,10,14,14,18");
 801a0b0:	687b      	ldr	r3, [r7, #4]
 801a0b2:	3304      	adds	r3, #4
 801a0b4:	4a3e      	ldr	r2, [pc, #248]	; (801a1b0 <createProblem+0x19308>)
 801a0b6:	461c      	mov	r4, r3
 801a0b8:	4615      	mov	r5, r2
 801a0ba:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801a0bc:	6020      	str	r0, [r4, #0]
 801a0be:	6061      	str	r1, [r4, #4]
 801a0c0:	60a2      	str	r2, [r4, #8]
 801a0c2:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 801a0c4:	687b      	ldr	r3, [r7, #4]
 801a0c6:	33d8      	adds	r3, #216	; 0xd8
 801a0c8:	4a2f      	ldr	r2, [pc, #188]	; (801a188 <createProblem+0x192e0>)
 801a0ca:	461c      	mov	r4, r3
 801a0cc:	4613      	mov	r3, r2
 801a0ce:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a0d0:	6020      	str	r0, [r4, #0]
 801a0d2:	6061      	str	r1, [r4, #4]
 801a0d4:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 801a0d6:	687b      	ldr	r3, [r7, #4]
 801a0d8:	33cc      	adds	r3, #204	; 0xcc
 801a0da:	4a27      	ldr	r2, [pc, #156]	; (801a178 <createProblem+0x192d0>)
 801a0dc:	6810      	ldr	r0, [r2, #0]
 801a0de:	6018      	str	r0, [r3, #0]
			break;
 801a0e0:	f000 bc28 	b.w	801a934 <createProblem+0x19a8c>
		case 84 :
			strcpy(p->name,"WARM UP A5");
 801a0e4:	687b      	ldr	r3, [r7, #4]
 801a0e6:	337c      	adds	r3, #124	; 0x7c
 801a0e8:	4932      	ldr	r1, [pc, #200]	; (801a1b4 <createProblem+0x1930c>)
 801a0ea:	461a      	mov	r2, r3
 801a0ec:	460b      	mov	r3, r1
 801a0ee:	cb03      	ldmia	r3!, {r0, r1}
 801a0f0:	6010      	str	r0, [r2, #0]
 801a0f2:	6051      	str	r1, [r2, #4]
 801a0f4:	8819      	ldrh	r1, [r3, #0]
 801a0f6:	789b      	ldrb	r3, [r3, #2]
 801a0f8:	8111      	strh	r1, [r2, #8]
 801a0fa:	7293      	strb	r3, [r2, #10]
			p->moveSize = 7;
 801a0fc:	687b      	ldr	r3, [r7, #4]
 801a0fe:	2207      	movs	r2, #7
 801a100:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,E,E,F,E,H,I");
 801a102:	687b      	ldr	r3, [r7, #4]
 801a104:	3340      	adds	r3, #64	; 0x40
 801a106:	4a2c      	ldr	r2, [pc, #176]	; (801a1b8 <createProblem+0x19310>)
 801a108:	461c      	mov	r4, r3
 801a10a:	4613      	mov	r3, r2
 801a10c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a10e:	6020      	str	r0, [r4, #0]
 801a110:	6061      	str	r1, [r4, #4]
 801a112:	60a2      	str	r2, [r4, #8]
 801a114:	881b      	ldrh	r3, [r3, #0]
 801a116:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,6,8,11,14,16,18");
 801a118:	687b      	ldr	r3, [r7, #4]
 801a11a:	3304      	adds	r3, #4
 801a11c:	4a27      	ldr	r2, [pc, #156]	; (801a1bc <createProblem+0x19314>)
 801a11e:	461d      	mov	r5, r3
 801a120:	4614      	mov	r4, r2
 801a122:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a124:	6028      	str	r0, [r5, #0]
 801a126:	6069      	str	r1, [r5, #4]
 801a128:	60aa      	str	r2, [r5, #8]
 801a12a:	60eb      	str	r3, [r5, #12]
 801a12c:	8823      	ldrh	r3, [r4, #0]
 801a12e:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 801a130:	687b      	ldr	r3, [r7, #4]
 801a132:	33d8      	adds	r3, #216	; 0xd8
 801a134:	4a0a      	ldr	r2, [pc, #40]	; (801a160 <createProblem+0x192b8>)
 801a136:	461c      	mov	r4, r3
 801a138:	4613      	mov	r3, r2
 801a13a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a13c:	6020      	str	r0, [r4, #0]
 801a13e:	6061      	str	r1, [r4, #4]
 801a140:	60a2      	str	r2, [r4, #8]
 801a142:	881b      	ldrh	r3, [r3, #0]
 801a144:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 801a146:	687b      	ldr	r3, [r7, #4]
 801a148:	33cc      	adds	r3, #204	; 0xcc
 801a14a:	4a0b      	ldr	r2, [pc, #44]	; (801a178 <createProblem+0x192d0>)
 801a14c:	6810      	ldr	r0, [r2, #0]
 801a14e:	6018      	str	r0, [r3, #0]
			break;
 801a150:	e3f0      	b.n	801a934 <createProblem+0x19a8c>
 801a152:	bf00      	nop
 801a154:	08029a70 	.word	0x08029a70
 801a158:	08029a8c 	.word	0x08029a8c
 801a15c:	08029a9c 	.word	0x08029a9c
 801a160:	08020820 	.word	0x08020820
 801a164:	08020874 	.word	0x08020874
 801a168:	08029ab0 	.word	0x08029ab0
 801a16c:	08029ac4 	.word	0x08029ac4
 801a170:	08029ad4 	.word	0x08029ad4
 801a174:	08029ae8 	.word	0x08029ae8
 801a178:	08020830 	.word	0x08020830
 801a17c:	08029af8 	.word	0x08029af8
 801a180:	08029b00 	.word	0x08029b00
 801a184:	08029b0c 	.word	0x08029b0c
 801a188:	08020e90 	.word	0x08020e90
 801a18c:	08029b1c 	.word	0x08029b1c
 801a190:	08029b28 	.word	0x08029b28
 801a194:	08029b34 	.word	0x08029b34
 801a198:	0802091c 	.word	0x0802091c
 801a19c:	08029b44 	.word	0x08029b44
 801a1a0:	08029b50 	.word	0x08029b50
 801a1a4:	08029b60 	.word	0x08029b60
 801a1a8:	08029b74 	.word	0x08029b74
 801a1ac:	08029b80 	.word	0x08029b80
 801a1b0:	08029b8c 	.word	0x08029b8c
 801a1b4:	08029b9c 	.word	0x08029b9c
 801a1b8:	08029ba8 	.word	0x08029ba8
 801a1bc:	08029494 	.word	0x08029494
		case 85 :
			strcpy(p->name,"KEEP YOUR FEET DRY");
 801a1c0:	687b      	ldr	r3, [r7, #4]
 801a1c2:	337c      	adds	r3, #124	; 0x7c
 801a1c4:	4aba      	ldr	r2, [pc, #744]	; (801a4b0 <createProblem+0x19608>)
 801a1c6:	461d      	mov	r5, r3
 801a1c8:	4614      	mov	r4, r2
 801a1ca:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a1cc:	6028      	str	r0, [r5, #0]
 801a1ce:	6069      	str	r1, [r5, #4]
 801a1d0:	60aa      	str	r2, [r5, #8]
 801a1d2:	60eb      	str	r3, [r5, #12]
 801a1d4:	8823      	ldrh	r3, [r4, #0]
 801a1d6:	78a2      	ldrb	r2, [r4, #2]
 801a1d8:	822b      	strh	r3, [r5, #16]
 801a1da:	4613      	mov	r3, r2
 801a1dc:	74ab      	strb	r3, [r5, #18]
			p->moveSize = 6;
 801a1de:	687b      	ldr	r3, [r7, #4]
 801a1e0:	2206      	movs	r2, #6
 801a1e2:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,H,G,D,D,D");
 801a1e4:	687b      	ldr	r3, [r7, #4]
 801a1e6:	3340      	adds	r3, #64	; 0x40
 801a1e8:	4ab2      	ldr	r2, [pc, #712]	; (801a4b4 <createProblem+0x1960c>)
 801a1ea:	461c      	mov	r4, r3
 801a1ec:	4613      	mov	r3, r2
 801a1ee:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a1f0:	6020      	str	r0, [r4, #0]
 801a1f2:	6061      	str	r1, [r4, #4]
 801a1f4:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,5,9,11,15,18");
 801a1f6:	687b      	ldr	r3, [r7, #4]
 801a1f8:	3304      	adds	r3, #4
 801a1fa:	4aaf      	ldr	r2, [pc, #700]	; (801a4b8 <createProblem+0x19610>)
 801a1fc:	461c      	mov	r4, r3
 801a1fe:	4613      	mov	r3, r2
 801a200:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a202:	6020      	str	r0, [r4, #0]
 801a204:	6061      	str	r1, [r4, #4]
 801a206:	60a2      	str	r2, [r4, #8]
 801a208:	881a      	ldrh	r2, [r3, #0]
 801a20a:	789b      	ldrb	r3, [r3, #2]
 801a20c:	81a2      	strh	r2, [r4, #12]
 801a20e:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 801a210:	687b      	ldr	r3, [r7, #4]
 801a212:	33d8      	adds	r3, #216	; 0xd8
 801a214:	4aa9      	ldr	r2, [pc, #676]	; (801a4bc <createProblem+0x19614>)
 801a216:	461c      	mov	r4, r3
 801a218:	4613      	mov	r3, r2
 801a21a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a21c:	6020      	str	r0, [r4, #0]
 801a21e:	6061      	str	r1, [r4, #4]
 801a220:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 801a222:	687b      	ldr	r3, [r7, #4]
 801a224:	33cc      	adds	r3, #204	; 0xcc
 801a226:	4aa6      	ldr	r2, [pc, #664]	; (801a4c0 <createProblem+0x19618>)
 801a228:	6810      	ldr	r0, [r2, #0]
 801a22a:	6018      	str	r0, [r3, #0]
			break;
 801a22c:	e382      	b.n	801a934 <createProblem+0x19a8c>
		case 86 :
			strcpy(p->name,"POMPOUS POMPADOUR");
 801a22e:	687b      	ldr	r3, [r7, #4]
 801a230:	337c      	adds	r3, #124	; 0x7c
 801a232:	4aa4      	ldr	r2, [pc, #656]	; (801a4c4 <createProblem+0x1961c>)
 801a234:	461d      	mov	r5, r3
 801a236:	4614      	mov	r4, r2
 801a238:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a23a:	6028      	str	r0, [r5, #0]
 801a23c:	6069      	str	r1, [r5, #4]
 801a23e:	60aa      	str	r2, [r5, #8]
 801a240:	60eb      	str	r3, [r5, #12]
 801a242:	8823      	ldrh	r3, [r4, #0]
 801a244:	822b      	strh	r3, [r5, #16]
			p->moveSize = 6;
 801a246:	687b      	ldr	r3, [r7, #4]
 801a248:	2206      	movs	r2, #6
 801a24a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,G,C,E,A");
 801a24c:	687b      	ldr	r3, [r7, #4]
 801a24e:	3340      	adds	r3, #64	; 0x40
 801a250:	4a9d      	ldr	r2, [pc, #628]	; (801a4c8 <createProblem+0x19620>)
 801a252:	461c      	mov	r4, r3
 801a254:	4613      	mov	r3, r2
 801a256:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a258:	6020      	str	r0, [r4, #0]
 801a25a:	6061      	str	r1, [r4, #4]
 801a25c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,10,13,16,18");
 801a25e:	687b      	ldr	r3, [r7, #4]
 801a260:	3304      	adds	r3, #4
 801a262:	4a9a      	ldr	r2, [pc, #616]	; (801a4cc <createProblem+0x19624>)
 801a264:	461c      	mov	r4, r3
 801a266:	4615      	mov	r5, r2
 801a268:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801a26a:	6020      	str	r0, [r4, #0]
 801a26c:	6061      	str	r1, [r4, #4]
 801a26e:	60a2      	str	r2, [r4, #8]
 801a270:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 801a272:	687b      	ldr	r3, [r7, #4]
 801a274:	33d8      	adds	r3, #216	; 0xd8
 801a276:	4a96      	ldr	r2, [pc, #600]	; (801a4d0 <createProblem+0x19628>)
 801a278:	461c      	mov	r4, r3
 801a27a:	4613      	mov	r3, r2
 801a27c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a27e:	6020      	str	r0, [r4, #0]
 801a280:	6061      	str	r1, [r4, #4]
 801a282:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C");
 801a284:	687b      	ldr	r3, [r7, #4]
 801a286:	33cc      	adds	r3, #204	; 0xcc
 801a288:	4a92      	ldr	r2, [pc, #584]	; (801a4d4 <createProblem+0x1962c>)
 801a28a:	8811      	ldrh	r1, [r2, #0]
 801a28c:	7892      	ldrb	r2, [r2, #2]
 801a28e:	8019      	strh	r1, [r3, #0]
 801a290:	709a      	strb	r2, [r3, #2]
			break;
 801a292:	e34f      	b.n	801a934 <createProblem+0x19a8c>
		case 87 :
			strcpy(p->name,"RUSTY MORNING");
 801a294:	687b      	ldr	r3, [r7, #4]
 801a296:	337c      	adds	r3, #124	; 0x7c
 801a298:	4a8f      	ldr	r2, [pc, #572]	; (801a4d8 <createProblem+0x19630>)
 801a29a:	461c      	mov	r4, r3
 801a29c:	4613      	mov	r3, r2
 801a29e:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a2a0:	6020      	str	r0, [r4, #0]
 801a2a2:	6061      	str	r1, [r4, #4]
 801a2a4:	60a2      	str	r2, [r4, #8]
 801a2a6:	881b      	ldrh	r3, [r3, #0]
 801a2a8:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 9;
 801a2aa:	687b      	ldr	r3, [r7, #4]
 801a2ac:	2209      	movs	r2, #9
 801a2ae:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"C,E,E,I,H,I,E,E,A");
 801a2b0:	687b      	ldr	r3, [r7, #4]
 801a2b2:	3340      	adds	r3, #64	; 0x40
 801a2b4:	4a89      	ldr	r2, [pc, #548]	; (801a4dc <createProblem+0x19634>)
 801a2b6:	461d      	mov	r5, r3
 801a2b8:	4614      	mov	r4, r2
 801a2ba:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a2bc:	6028      	str	r0, [r5, #0]
 801a2be:	6069      	str	r1, [r5, #4]
 801a2c0:	60aa      	str	r2, [r5, #8]
 801a2c2:	60eb      	str	r3, [r5, #12]
 801a2c4:	8823      	ldrh	r3, [r4, #0]
 801a2c6:	822b      	strh	r3, [r5, #16]
			strcpy(p->moveNumbers,"5,6,8,10,12,14,14,16,18");
 801a2c8:	687b      	ldr	r3, [r7, #4]
 801a2ca:	3304      	adds	r3, #4
 801a2cc:	4a84      	ldr	r2, [pc, #528]	; (801a4e0 <createProblem+0x19638>)
 801a2ce:	461d      	mov	r5, r3
 801a2d0:	4614      	mov	r4, r2
 801a2d2:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a2d4:	6028      	str	r0, [r5, #0]
 801a2d6:	6069      	str	r1, [r5, #4]
 801a2d8:	60aa      	str	r2, [r5, #8]
 801a2da:	60eb      	str	r3, [r5, #12]
 801a2dc:	cc03      	ldmia	r4!, {r0, r1}
 801a2de:	6128      	str	r0, [r5, #16]
 801a2e0:	6169      	str	r1, [r5, #20]
			strcpy(p->startFinish, "s,s,d,d,d,d,d,d,e");
 801a2e2:	687b      	ldr	r3, [r7, #4]
 801a2e4:	33d8      	adds	r3, #216	; 0xd8
 801a2e6:	4a7f      	ldr	r2, [pc, #508]	; (801a4e4 <createProblem+0x1963c>)
 801a2e8:	461d      	mov	r5, r3
 801a2ea:	4614      	mov	r4, r2
 801a2ec:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a2ee:	6028      	str	r0, [r5, #0]
 801a2f0:	6069      	str	r1, [r5, #4]
 801a2f2:	60aa      	str	r2, [r5, #8]
 801a2f4:	60eb      	str	r3, [r5, #12]
 801a2f6:	8823      	ldrh	r3, [r4, #0]
 801a2f8:	822b      	strh	r3, [r5, #16]
			strcpy(p->grade, "6B+");
 801a2fa:	687b      	ldr	r3, [r7, #4]
 801a2fc:	33cc      	adds	r3, #204	; 0xcc
 801a2fe:	4a70      	ldr	r2, [pc, #448]	; (801a4c0 <createProblem+0x19618>)
 801a300:	6810      	ldr	r0, [r2, #0]
 801a302:	6018      	str	r0, [r3, #0]
			break;
 801a304:	e316      	b.n	801a934 <createProblem+0x19a8c>
		case 88 :
			strcpy(p->name,"MY IDEA ?");
 801a306:	687b      	ldr	r3, [r7, #4]
 801a308:	337c      	adds	r3, #124	; 0x7c
 801a30a:	4977      	ldr	r1, [pc, #476]	; (801a4e8 <createProblem+0x19640>)
 801a30c:	461a      	mov	r2, r3
 801a30e:	460b      	mov	r3, r1
 801a310:	cb03      	ldmia	r3!, {r0, r1}
 801a312:	6010      	str	r0, [r2, #0]
 801a314:	6051      	str	r1, [r2, #4]
 801a316:	881b      	ldrh	r3, [r3, #0]
 801a318:	8113      	strh	r3, [r2, #8]
			p->moveSize = 7;
 801a31a:	687b      	ldr	r3, [r7, #4]
 801a31c:	2207      	movs	r2, #7
 801a31e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,C,H,C,C,A");
 801a320:	687b      	ldr	r3, [r7, #4]
 801a322:	3340      	adds	r3, #64	; 0x40
 801a324:	4a71      	ldr	r2, [pc, #452]	; (801a4ec <createProblem+0x19644>)
 801a326:	461c      	mov	r4, r3
 801a328:	4613      	mov	r3, r2
 801a32a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a32c:	6020      	str	r0, [r4, #0]
 801a32e:	6061      	str	r1, [r4, #4]
 801a330:	60a2      	str	r2, [r4, #8]
 801a332:	881b      	ldrh	r3, [r3, #0]
 801a334:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"6,6,8,10,13,16,18");
 801a336:	687b      	ldr	r3, [r7, #4]
 801a338:	3304      	adds	r3, #4
 801a33a:	4a6d      	ldr	r2, [pc, #436]	; (801a4f0 <createProblem+0x19648>)
 801a33c:	461d      	mov	r5, r3
 801a33e:	4614      	mov	r4, r2
 801a340:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a342:	6028      	str	r0, [r5, #0]
 801a344:	6069      	str	r1, [r5, #4]
 801a346:	60aa      	str	r2, [r5, #8]
 801a348:	60eb      	str	r3, [r5, #12]
 801a34a:	8823      	ldrh	r3, [r4, #0]
 801a34c:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 801a34e:	687b      	ldr	r3, [r7, #4]
 801a350:	33d8      	adds	r3, #216	; 0xd8
 801a352:	4a68      	ldr	r2, [pc, #416]	; (801a4f4 <createProblem+0x1964c>)
 801a354:	461c      	mov	r4, r3
 801a356:	4613      	mov	r3, r2
 801a358:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a35a:	6020      	str	r0, [r4, #0]
 801a35c:	6061      	str	r1, [r4, #4]
 801a35e:	60a2      	str	r2, [r4, #8]
 801a360:	881b      	ldrh	r3, [r3, #0]
 801a362:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 801a364:	687b      	ldr	r3, [r7, #4]
 801a366:	33cc      	adds	r3, #204	; 0xcc
 801a368:	4a5a      	ldr	r2, [pc, #360]	; (801a4d4 <createProblem+0x1962c>)
 801a36a:	8811      	ldrh	r1, [r2, #0]
 801a36c:	7892      	ldrb	r2, [r2, #2]
 801a36e:	8019      	strh	r1, [r3, #0]
 801a370:	709a      	strb	r2, [r3, #2]
			break;
 801a372:	e2df      	b.n	801a934 <createProblem+0x19a8c>
		case 89 :
			strcpy(p->name,"SANTOKU SNATCH");
 801a374:	687b      	ldr	r3, [r7, #4]
 801a376:	337c      	adds	r3, #124	; 0x7c
 801a378:	4a5f      	ldr	r2, [pc, #380]	; (801a4f8 <createProblem+0x19650>)
 801a37a:	461c      	mov	r4, r3
 801a37c:	4613      	mov	r3, r2
 801a37e:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a380:	6020      	str	r0, [r4, #0]
 801a382:	6061      	str	r1, [r4, #4]
 801a384:	60a2      	str	r2, [r4, #8]
 801a386:	881a      	ldrh	r2, [r3, #0]
 801a388:	789b      	ldrb	r3, [r3, #2]
 801a38a:	81a2      	strh	r2, [r4, #12]
 801a38c:	73a3      	strb	r3, [r4, #14]
			p->moveSize = 7;
 801a38e:	687b      	ldr	r3, [r7, #4]
 801a390:	2207      	movs	r2, #7
 801a392:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"H,H,C,F,F,J,I");
 801a394:	687b      	ldr	r3, [r7, #4]
 801a396:	3340      	adds	r3, #64	; 0x40
 801a398:	4a58      	ldr	r2, [pc, #352]	; (801a4fc <createProblem+0x19654>)
 801a39a:	461c      	mov	r4, r3
 801a39c:	4613      	mov	r3, r2
 801a39e:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a3a0:	6020      	str	r0, [r4, #0]
 801a3a2:	6061      	str	r1, [r4, #4]
 801a3a4:	60a2      	str	r2, [r4, #8]
 801a3a6:	881b      	ldrh	r3, [r3, #0]
 801a3a8:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,8,8,11,13,16,18");
 801a3aa:	687b      	ldr	r3, [r7, #4]
 801a3ac:	3304      	adds	r3, #4
 801a3ae:	4a54      	ldr	r2, [pc, #336]	; (801a500 <createProblem+0x19658>)
 801a3b0:	461d      	mov	r5, r3
 801a3b2:	4614      	mov	r4, r2
 801a3b4:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a3b6:	6028      	str	r0, [r5, #0]
 801a3b8:	6069      	str	r1, [r5, #4]
 801a3ba:	60aa      	str	r2, [r5, #8]
 801a3bc:	60eb      	str	r3, [r5, #12]
 801a3be:	8823      	ldrh	r3, [r4, #0]
 801a3c0:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 801a3c2:	687b      	ldr	r3, [r7, #4]
 801a3c4:	33d8      	adds	r3, #216	; 0xd8
 801a3c6:	4a4f      	ldr	r2, [pc, #316]	; (801a504 <createProblem+0x1965c>)
 801a3c8:	461c      	mov	r4, r3
 801a3ca:	4613      	mov	r3, r2
 801a3cc:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a3ce:	6020      	str	r0, [r4, #0]
 801a3d0:	6061      	str	r1, [r4, #4]
 801a3d2:	60a2      	str	r2, [r4, #8]
 801a3d4:	881b      	ldrh	r3, [r3, #0]
 801a3d6:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 801a3d8:	687b      	ldr	r3, [r7, #4]
 801a3da:	33cc      	adds	r3, #204	; 0xcc
 801a3dc:	4a4a      	ldr	r2, [pc, #296]	; (801a508 <createProblem+0x19660>)
 801a3de:	6810      	ldr	r0, [r2, #0]
 801a3e0:	6018      	str	r0, [r3, #0]
			break;
 801a3e2:	e2a7      	b.n	801a934 <createProblem+0x19a8c>
		case 9 :
			strcpy(p->name,"GUNTER");
 801a3e4:	687b      	ldr	r3, [r7, #4]
 801a3e6:	337c      	adds	r3, #124	; 0x7c
 801a3e8:	4a48      	ldr	r2, [pc, #288]	; (801a50c <createProblem+0x19664>)
 801a3ea:	6810      	ldr	r0, [r2, #0]
 801a3ec:	6018      	str	r0, [r3, #0]
 801a3ee:	8891      	ldrh	r1, [r2, #4]
 801a3f0:	7992      	ldrb	r2, [r2, #6]
 801a3f2:	8099      	strh	r1, [r3, #4]
 801a3f4:	719a      	strb	r2, [r3, #6]
			p->moveSize = 6;
 801a3f6:	687b      	ldr	r3, [r7, #4]
 801a3f8:	2206      	movs	r2, #6
 801a3fa:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,K,H,E,B,D");
 801a3fc:	687b      	ldr	r3, [r7, #4]
 801a3fe:	3340      	adds	r3, #64	; 0x40
 801a400:	4a43      	ldr	r2, [pc, #268]	; (801a510 <createProblem+0x19668>)
 801a402:	461c      	mov	r4, r3
 801a404:	4613      	mov	r3, r2
 801a406:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a408:	6020      	str	r0, [r4, #0]
 801a40a:	6061      	str	r1, [r4, #4]
 801a40c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"5,9,10,12,15,18");
 801a40e:	687b      	ldr	r3, [r7, #4]
 801a410:	3304      	adds	r3, #4
 801a412:	4a40      	ldr	r2, [pc, #256]	; (801a514 <createProblem+0x1966c>)
 801a414:	461c      	mov	r4, r3
 801a416:	4615      	mov	r5, r2
 801a418:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801a41a:	6020      	str	r0, [r4, #0]
 801a41c:	6061      	str	r1, [r4, #4]
 801a41e:	60a2      	str	r2, [r4, #8]
 801a420:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 801a422:	687b      	ldr	r3, [r7, #4]
 801a424:	33d8      	adds	r3, #216	; 0xd8
 801a426:	4a2a      	ldr	r2, [pc, #168]	; (801a4d0 <createProblem+0x19628>)
 801a428:	461c      	mov	r4, r3
 801a42a:	4613      	mov	r3, r2
 801a42c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a42e:	6020      	str	r0, [r4, #0]
 801a430:	6061      	str	r1, [r4, #4]
 801a432:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 801a434:	687b      	ldr	r3, [r7, #4]
 801a436:	33cc      	adds	r3, #204	; 0xcc
 801a438:	4a37      	ldr	r2, [pc, #220]	; (801a518 <createProblem+0x19670>)
 801a43a:	8811      	ldrh	r1, [r2, #0]
 801a43c:	7892      	ldrb	r2, [r2, #2]
 801a43e:	8019      	strh	r1, [r3, #0]
 801a440:	709a      	strb	r2, [r3, #2]
			break;
 801a442:	e277      	b.n	801a934 <createProblem+0x19a8c>
		case 90 :
			strcpy(p->name,"THE SENDTRAIN");
 801a444:	687b      	ldr	r3, [r7, #4]
 801a446:	337c      	adds	r3, #124	; 0x7c
 801a448:	4a34      	ldr	r2, [pc, #208]	; (801a51c <createProblem+0x19674>)
 801a44a:	461c      	mov	r4, r3
 801a44c:	4613      	mov	r3, r2
 801a44e:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a450:	6020      	str	r0, [r4, #0]
 801a452:	6061      	str	r1, [r4, #4]
 801a454:	60a2      	str	r2, [r4, #8]
 801a456:	881b      	ldrh	r3, [r3, #0]
 801a458:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 8;
 801a45a:	687b      	ldr	r3, [r7, #4]
 801a45c:	2208      	movs	r2, #8
 801a45e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,G,G,G,G,I,I,J");
 801a460:	687b      	ldr	r3, [r7, #4]
 801a462:	3340      	adds	r3, #64	; 0x40
 801a464:	4a2e      	ldr	r2, [pc, #184]	; (801a520 <createProblem+0x19678>)
 801a466:	461c      	mov	r4, r3
 801a468:	4615      	mov	r5, r2
 801a46a:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801a46c:	6020      	str	r0, [r4, #0]
 801a46e:	6061      	str	r1, [r4, #4]
 801a470:	60a2      	str	r2, [r4, #8]
 801a472:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"12,4,6,9,15,14,18,7");
 801a474:	687b      	ldr	r3, [r7, #4]
 801a476:	3304      	adds	r3, #4
 801a478:	4a2a      	ldr	r2, [pc, #168]	; (801a524 <createProblem+0x1967c>)
 801a47a:	461d      	mov	r5, r3
 801a47c:	4614      	mov	r4, r2
 801a47e:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a480:	6028      	str	r0, [r5, #0]
 801a482:	6069      	str	r1, [r5, #4]
 801a484:	60aa      	str	r2, [r5, #8]
 801a486:	60eb      	str	r3, [r5, #12]
 801a488:	6820      	ldr	r0, [r4, #0]
 801a48a:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "d,s,d,d,d,d,e,d");
 801a48c:	687b      	ldr	r3, [r7, #4]
 801a48e:	33d8      	adds	r3, #216	; 0xd8
 801a490:	4a25      	ldr	r2, [pc, #148]	; (801a528 <createProblem+0x19680>)
 801a492:	461c      	mov	r4, r3
 801a494:	4615      	mov	r5, r2
 801a496:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801a498:	6020      	str	r0, [r4, #0]
 801a49a:	6061      	str	r1, [r4, #4]
 801a49c:	60a2      	str	r2, [r4, #8]
 801a49e:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6C");
 801a4a0:	687b      	ldr	r3, [r7, #4]
 801a4a2:	33cc      	adds	r3, #204	; 0xcc
 801a4a4:	4a0b      	ldr	r2, [pc, #44]	; (801a4d4 <createProblem+0x1962c>)
 801a4a6:	8811      	ldrh	r1, [r2, #0]
 801a4a8:	7892      	ldrb	r2, [r2, #2]
 801a4aa:	8019      	strh	r1, [r3, #0]
 801a4ac:	709a      	strb	r2, [r3, #2]
			break;
 801a4ae:	e241      	b.n	801a934 <createProblem+0x19a8c>
 801a4b0:	08029bb8 	.word	0x08029bb8
 801a4b4:	08029bcc 	.word	0x08029bcc
 801a4b8:	08029bd8 	.word	0x08029bd8
 801a4bc:	08020e90 	.word	0x08020e90
 801a4c0:	08020830 	.word	0x08020830
 801a4c4:	08029be8 	.word	0x08029be8
 801a4c8:	08029bfc 	.word	0x08029bfc
 801a4cc:	08025460 	.word	0x08025460
 801a4d0:	0802091c 	.word	0x0802091c
 801a4d4:	080208f0 	.word	0x080208f0
 801a4d8:	08029c08 	.word	0x08029c08
 801a4dc:	08029c18 	.word	0x08029c18
 801a4e0:	08024f68 	.word	0x08024f68
 801a4e4:	08020dfc 	.word	0x08020dfc
 801a4e8:	08029c2c 	.word	0x08029c2c
 801a4ec:	08029c38 	.word	0x08029c38
 801a4f0:	08029c48 	.word	0x08029c48
 801a4f4:	08020820 	.word	0x08020820
 801a4f8:	08029c5c 	.word	0x08029c5c
 801a4fc:	08029c6c 	.word	0x08029c6c
 801a500:	0802395c 	.word	0x0802395c
 801a504:	08020a14 	.word	0x08020a14
 801a508:	080209a4 	.word	0x080209a4
 801a50c:	08029c7c 	.word	0x08029c7c
 801a510:	08029c84 	.word	0x08029c84
 801a514:	08029c90 	.word	0x08029c90
 801a518:	08020874 	.word	0x08020874
 801a51c:	08029ca0 	.word	0x08029ca0
 801a520:	08029cb0 	.word	0x08029cb0
 801a524:	08029cc0 	.word	0x08029cc0
 801a528:	08029cd4 	.word	0x08029cd4
		case 91 :
			strcpy(p->name,"5 FINGER DISCOUNT");
 801a52c:	687b      	ldr	r3, [r7, #4]
 801a52e:	337c      	adds	r3, #124	; 0x7c
 801a530:	4aaf      	ldr	r2, [pc, #700]	; (801a7f0 <createProblem+0x19948>)
 801a532:	461d      	mov	r5, r3
 801a534:	4614      	mov	r4, r2
 801a536:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a538:	6028      	str	r0, [r5, #0]
 801a53a:	6069      	str	r1, [r5, #4]
 801a53c:	60aa      	str	r2, [r5, #8]
 801a53e:	60eb      	str	r3, [r5, #12]
 801a540:	8823      	ldrh	r3, [r4, #0]
 801a542:	822b      	strh	r3, [r5, #16]
			p->moveSize = 8;
 801a544:	687b      	ldr	r3, [r7, #4]
 801a546:	2208      	movs	r2, #8
 801a548:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"A,A,B,D,E,E,E,G");
 801a54a:	687b      	ldr	r3, [r7, #4]
 801a54c:	3340      	adds	r3, #64	; 0x40
 801a54e:	4aa9      	ldr	r2, [pc, #676]	; (801a7f4 <createProblem+0x1994c>)
 801a550:	461c      	mov	r4, r3
 801a552:	4615      	mov	r5, r2
 801a554:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801a556:	6020      	str	r0, [r4, #0]
 801a558:	6061      	str	r1, [r4, #4]
 801a55a:	60a2      	str	r2, [r4, #8]
 801a55c:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"9,14,12,18,6,8,14,4");
 801a55e:	687b      	ldr	r3, [r7, #4]
 801a560:	3304      	adds	r3, #4
 801a562:	4aa5      	ldr	r2, [pc, #660]	; (801a7f8 <createProblem+0x19950>)
 801a564:	461d      	mov	r5, r3
 801a566:	4614      	mov	r4, r2
 801a568:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a56a:	6028      	str	r0, [r5, #0]
 801a56c:	6069      	str	r1, [r5, #4]
 801a56e:	60aa      	str	r2, [r5, #8]
 801a570:	60eb      	str	r3, [r5, #12]
 801a572:	6820      	ldr	r0, [r4, #0]
 801a574:	6128      	str	r0, [r5, #16]
			strcpy(p->startFinish, "d,d,d,e,d,d,d,s");
 801a576:	687b      	ldr	r3, [r7, #4]
 801a578:	33d8      	adds	r3, #216	; 0xd8
 801a57a:	4aa0      	ldr	r2, [pc, #640]	; (801a7fc <createProblem+0x19954>)
 801a57c:	461c      	mov	r4, r3
 801a57e:	4615      	mov	r5, r2
 801a580:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801a582:	6020      	str	r0, [r4, #0]
 801a584:	6061      	str	r1, [r4, #4]
 801a586:	60a2      	str	r2, [r4, #8]
 801a588:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 801a58a:	687b      	ldr	r3, [r7, #4]
 801a58c:	33cc      	adds	r3, #204	; 0xcc
 801a58e:	4a9c      	ldr	r2, [pc, #624]	; (801a800 <createProblem+0x19958>)
 801a590:	6810      	ldr	r0, [r2, #0]
 801a592:	6018      	str	r0, [r3, #0]
			break;
 801a594:	e1ce      	b.n	801a934 <createProblem+0x19a8c>
		case 92 :
			strcpy(p->name,"3/5TH A MAN");
 801a596:	687b      	ldr	r3, [r7, #4]
 801a598:	337c      	adds	r3, #124	; 0x7c
 801a59a:	4a9a      	ldr	r2, [pc, #616]	; (801a804 <createProblem+0x1995c>)
 801a59c:	461c      	mov	r4, r3
 801a59e:	4613      	mov	r3, r2
 801a5a0:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a5a2:	6020      	str	r0, [r4, #0]
 801a5a4:	6061      	str	r1, [r4, #4]
 801a5a6:	60a2      	str	r2, [r4, #8]
			p->moveSize = 7;
 801a5a8:	687b      	ldr	r3, [r7, #4]
 801a5aa:	2207      	movs	r2, #7
 801a5ac:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,K,E,I,H,I");
 801a5ae:	687b      	ldr	r3, [r7, #4]
 801a5b0:	3340      	adds	r3, #64	; 0x40
 801a5b2:	4a95      	ldr	r2, [pc, #596]	; (801a808 <createProblem+0x19960>)
 801a5b4:	461c      	mov	r4, r3
 801a5b6:	4613      	mov	r3, r2
 801a5b8:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a5ba:	6020      	str	r0, [r4, #0]
 801a5bc:	6061      	str	r1, [r4, #4]
 801a5be:	60a2      	str	r2, [r4, #8]
 801a5c0:	881b      	ldrh	r3, [r3, #0]
 801a5c2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,12,14,8,9,16,18");
 801a5c4:	687b      	ldr	r3, [r7, #4]
 801a5c6:	3304      	adds	r3, #4
 801a5c8:	4a90      	ldr	r2, [pc, #576]	; (801a80c <createProblem+0x19964>)
 801a5ca:	461d      	mov	r5, r3
 801a5cc:	4614      	mov	r4, r2
 801a5ce:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a5d0:	6028      	str	r0, [r5, #0]
 801a5d2:	6069      	str	r1, [r5, #4]
 801a5d4:	60aa      	str	r2, [r5, #8]
 801a5d6:	60eb      	str	r3, [r5, #12]
 801a5d8:	8823      	ldrh	r3, [r4, #0]
 801a5da:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,d,d,d,d,d,e");
 801a5dc:	687b      	ldr	r3, [r7, #4]
 801a5de:	33d8      	adds	r3, #216	; 0xd8
 801a5e0:	4a8b      	ldr	r2, [pc, #556]	; (801a810 <createProblem+0x19968>)
 801a5e2:	461c      	mov	r4, r3
 801a5e4:	4613      	mov	r3, r2
 801a5e6:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a5e8:	6020      	str	r0, [r4, #0]
 801a5ea:	6061      	str	r1, [r4, #4]
 801a5ec:	60a2      	str	r2, [r4, #8]
 801a5ee:	881b      	ldrh	r3, [r3, #0]
 801a5f0:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "7A+");
 801a5f2:	687b      	ldr	r3, [r7, #4]
 801a5f4:	33cc      	adds	r3, #204	; 0xcc
 801a5f6:	4a82      	ldr	r2, [pc, #520]	; (801a800 <createProblem+0x19958>)
 801a5f8:	6810      	ldr	r0, [r2, #0]
 801a5fa:	6018      	str	r0, [r3, #0]
			break;
 801a5fc:	e19a      	b.n	801a934 <createProblem+0x19a8c>
		case 93 :
			strcpy(p->name,"DESTINY'S GRANDMA");
 801a5fe:	687b      	ldr	r3, [r7, #4]
 801a600:	337c      	adds	r3, #124	; 0x7c
 801a602:	4a84      	ldr	r2, [pc, #528]	; (801a814 <createProblem+0x1996c>)
 801a604:	461d      	mov	r5, r3
 801a606:	4614      	mov	r4, r2
 801a608:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a60a:	6028      	str	r0, [r5, #0]
 801a60c:	6069      	str	r1, [r5, #4]
 801a60e:	60aa      	str	r2, [r5, #8]
 801a610:	60eb      	str	r3, [r5, #12]
 801a612:	8823      	ldrh	r3, [r4, #0]
 801a614:	822b      	strh	r3, [r5, #16]
			p->moveSize = 8;
 801a616:	687b      	ldr	r3, [r7, #4]
 801a618:	2208      	movs	r2, #8
 801a61a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,J,G,H,G,I,G,I");
 801a61c:	687b      	ldr	r3, [r7, #4]
 801a61e:	3340      	adds	r3, #64	; 0x40
 801a620:	4a7d      	ldr	r2, [pc, #500]	; (801a818 <createProblem+0x19970>)
 801a622:	461c      	mov	r4, r3
 801a624:	4615      	mov	r5, r2
 801a626:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801a628:	6020      	str	r0, [r4, #0]
 801a62a:	6061      	str	r1, [r4, #4]
 801a62c:	60a2      	str	r2, [r4, #8]
 801a62e:	60e3      	str	r3, [r4, #12]
			strcpy(p->moveNumbers,"4,7,9,10,14,14,17,18");
 801a630:	687b      	ldr	r3, [r7, #4]
 801a632:	3304      	adds	r3, #4
 801a634:	4a79      	ldr	r2, [pc, #484]	; (801a81c <createProblem+0x19974>)
 801a636:	461d      	mov	r5, r3
 801a638:	4614      	mov	r4, r2
 801a63a:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a63c:	6028      	str	r0, [r5, #0]
 801a63e:	6069      	str	r1, [r5, #4]
 801a640:	60aa      	str	r2, [r5, #8]
 801a642:	60eb      	str	r3, [r5, #12]
 801a644:	6820      	ldr	r0, [r4, #0]
 801a646:	6128      	str	r0, [r5, #16]
 801a648:	7923      	ldrb	r3, [r4, #4]
 801a64a:	752b      	strb	r3, [r5, #20]
			strcpy(p->startFinish, "s,d,d,d,d,d,d,e");
 801a64c:	687b      	ldr	r3, [r7, #4]
 801a64e:	33d8      	adds	r3, #216	; 0xd8
 801a650:	4a73      	ldr	r2, [pc, #460]	; (801a820 <createProblem+0x19978>)
 801a652:	461c      	mov	r4, r3
 801a654:	4615      	mov	r5, r2
 801a656:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801a658:	6020      	str	r0, [r4, #0]
 801a65a:	6061      	str	r1, [r4, #4]
 801a65c:	60a2      	str	r2, [r4, #8]
 801a65e:	60e3      	str	r3, [r4, #12]
			strcpy(p->grade, "6B+");
 801a660:	687b      	ldr	r3, [r7, #4]
 801a662:	33cc      	adds	r3, #204	; 0xcc
 801a664:	4a6f      	ldr	r2, [pc, #444]	; (801a824 <createProblem+0x1997c>)
 801a666:	6810      	ldr	r0, [r2, #0]
 801a668:	6018      	str	r0, [r3, #0]
			break;
 801a66a:	e163      	b.n	801a934 <createProblem+0x19a8c>
		case 94 :
			strcpy(p->name,"NORTHSIDE");
 801a66c:	687b      	ldr	r3, [r7, #4]
 801a66e:	337c      	adds	r3, #124	; 0x7c
 801a670:	496d      	ldr	r1, [pc, #436]	; (801a828 <createProblem+0x19980>)
 801a672:	461a      	mov	r2, r3
 801a674:	460b      	mov	r3, r1
 801a676:	cb03      	ldmia	r3!, {r0, r1}
 801a678:	6010      	str	r0, [r2, #0]
 801a67a:	6051      	str	r1, [r2, #4]
 801a67c:	881b      	ldrh	r3, [r3, #0]
 801a67e:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 801a680:	687b      	ldr	r3, [r7, #4]
 801a682:	2206      	movs	r2, #6
 801a684:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"B,D,E,E,H,J");
 801a686:	687b      	ldr	r3, [r7, #4]
 801a688:	3340      	adds	r3, #64	; 0x40
 801a68a:	4a68      	ldr	r2, [pc, #416]	; (801a82c <createProblem+0x19984>)
 801a68c:	461c      	mov	r4, r3
 801a68e:	4613      	mov	r3, r2
 801a690:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a692:	6020      	str	r0, [r4, #0]
 801a694:	6061      	str	r1, [r4, #4]
 801a696:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"15,18,8,12,5,5");
 801a698:	687b      	ldr	r3, [r7, #4]
 801a69a:	3304      	adds	r3, #4
 801a69c:	4a64      	ldr	r2, [pc, #400]	; (801a830 <createProblem+0x19988>)
 801a69e:	461c      	mov	r4, r3
 801a6a0:	4613      	mov	r3, r2
 801a6a2:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a6a4:	6020      	str	r0, [r4, #0]
 801a6a6:	6061      	str	r1, [r4, #4]
 801a6a8:	60a2      	str	r2, [r4, #8]
 801a6aa:	881a      	ldrh	r2, [r3, #0]
 801a6ac:	789b      	ldrb	r3, [r3, #2]
 801a6ae:	81a2      	strh	r2, [r4, #12]
 801a6b0:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "d,e,d,d,s,s");
 801a6b2:	687b      	ldr	r3, [r7, #4]
 801a6b4:	33d8      	adds	r3, #216	; 0xd8
 801a6b6:	4a5f      	ldr	r2, [pc, #380]	; (801a834 <createProblem+0x1998c>)
 801a6b8:	461c      	mov	r4, r3
 801a6ba:	4613      	mov	r3, r2
 801a6bc:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a6be:	6020      	str	r0, [r4, #0]
 801a6c0:	6061      	str	r1, [r4, #4]
 801a6c2:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "7A");
 801a6c4:	687b      	ldr	r3, [r7, #4]
 801a6c6:	33cc      	adds	r3, #204	; 0xcc
 801a6c8:	4a5b      	ldr	r2, [pc, #364]	; (801a838 <createProblem+0x19990>)
 801a6ca:	8811      	ldrh	r1, [r2, #0]
 801a6cc:	7892      	ldrb	r2, [r2, #2]
 801a6ce:	8019      	strh	r1, [r3, #0]
 801a6d0:	709a      	strb	r2, [r3, #2]
			break;
 801a6d2:	e12f      	b.n	801a934 <createProblem+0x19a8c>
		case 95 :
			strcpy(p->name,"SWIMMING GOAT");
 801a6d4:	687b      	ldr	r3, [r7, #4]
 801a6d6:	337c      	adds	r3, #124	; 0x7c
 801a6d8:	4a58      	ldr	r2, [pc, #352]	; (801a83c <createProblem+0x19994>)
 801a6da:	461c      	mov	r4, r3
 801a6dc:	4613      	mov	r3, r2
 801a6de:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a6e0:	6020      	str	r0, [r4, #0]
 801a6e2:	6061      	str	r1, [r4, #4]
 801a6e4:	60a2      	str	r2, [r4, #8]
 801a6e6:	881b      	ldrh	r3, [r3, #0]
 801a6e8:	81a3      	strh	r3, [r4, #12]
			p->moveSize = 6;
 801a6ea:	687b      	ldr	r3, [r7, #4]
 801a6ec:	2206      	movs	r2, #6
 801a6ee:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,H,C,I,I,D");
 801a6f0:	687b      	ldr	r3, [r7, #4]
 801a6f2:	3340      	adds	r3, #64	; 0x40
 801a6f4:	4a52      	ldr	r2, [pc, #328]	; (801a840 <createProblem+0x19998>)
 801a6f6:	461c      	mov	r4, r3
 801a6f8:	4613      	mov	r3, r2
 801a6fa:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a6fc:	6020      	str	r0, [r4, #0]
 801a6fe:	6061      	str	r1, [r4, #4]
 801a700:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,10,13,14,7,18");
 801a702:	687b      	ldr	r3, [r7, #4]
 801a704:	3304      	adds	r3, #4
 801a706:	4a4f      	ldr	r2, [pc, #316]	; (801a844 <createProblem+0x1999c>)
 801a708:	461c      	mov	r4, r3
 801a70a:	4615      	mov	r5, r2
 801a70c:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801a70e:	6020      	str	r0, [r4, #0]
 801a710:	6061      	str	r1, [r4, #4]
 801a712:	60a2      	str	r2, [r4, #8]
 801a714:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 801a716:	687b      	ldr	r3, [r7, #4]
 801a718:	33d8      	adds	r3, #216	; 0xd8
 801a71a:	4a4b      	ldr	r2, [pc, #300]	; (801a848 <createProblem+0x199a0>)
 801a71c:	461c      	mov	r4, r3
 801a71e:	4613      	mov	r3, r2
 801a720:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a722:	6020      	str	r0, [r4, #0]
 801a724:	6061      	str	r1, [r4, #4]
 801a726:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 801a728:	687b      	ldr	r3, [r7, #4]
 801a72a:	33cc      	adds	r3, #204	; 0xcc
 801a72c:	4a3d      	ldr	r2, [pc, #244]	; (801a824 <createProblem+0x1997c>)
 801a72e:	6810      	ldr	r0, [r2, #0]
 801a730:	6018      	str	r0, [r3, #0]
			break;
 801a732:	e0ff      	b.n	801a934 <createProblem+0x19a8c>
		case 96 :
			strcpy(p->name,"SWIM AND GO");
 801a734:	687b      	ldr	r3, [r7, #4]
 801a736:	337c      	adds	r3, #124	; 0x7c
 801a738:	4a44      	ldr	r2, [pc, #272]	; (801a84c <createProblem+0x199a4>)
 801a73a:	461c      	mov	r4, r3
 801a73c:	4613      	mov	r3, r2
 801a73e:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a740:	6020      	str	r0, [r4, #0]
 801a742:	6061      	str	r1, [r4, #4]
 801a744:	60a2      	str	r2, [r4, #8]
			p->moveSize = 6;
 801a746:	687b      	ldr	r3, [r7, #4]
 801a748:	2206      	movs	r2, #6
 801a74a:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,H,C,I,D");
 801a74c:	687b      	ldr	r3, [r7, #4]
 801a74e:	3340      	adds	r3, #64	; 0x40
 801a750:	4a3f      	ldr	r2, [pc, #252]	; (801a850 <createProblem+0x199a8>)
 801a752:	461c      	mov	r4, r3
 801a754:	4613      	mov	r3, r2
 801a756:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a758:	6020      	str	r0, [r4, #0]
 801a75a:	6061      	str	r1, [r4, #4]
 801a75c:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,6,10,13,14,18");
 801a75e:	687b      	ldr	r3, [r7, #4]
 801a760:	3304      	adds	r3, #4
 801a762:	4a3c      	ldr	r2, [pc, #240]	; (801a854 <createProblem+0x199ac>)
 801a764:	461c      	mov	r4, r3
 801a766:	4615      	mov	r5, r2
 801a768:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801a76a:	6020      	str	r0, [r4, #0]
 801a76c:	6061      	str	r1, [r4, #4]
 801a76e:	60a2      	str	r2, [r4, #8]
 801a770:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 801a772:	687b      	ldr	r3, [r7, #4]
 801a774:	33d8      	adds	r3, #216	; 0xd8
 801a776:	4a38      	ldr	r2, [pc, #224]	; (801a858 <createProblem+0x199b0>)
 801a778:	461c      	mov	r4, r3
 801a77a:	4613      	mov	r3, r2
 801a77c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a77e:	6020      	str	r0, [r4, #0]
 801a780:	6061      	str	r1, [r4, #4]
 801a782:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 801a784:	687b      	ldr	r3, [r7, #4]
 801a786:	33cc      	adds	r3, #204	; 0xcc
 801a788:	4a26      	ldr	r2, [pc, #152]	; (801a824 <createProblem+0x1997c>)
 801a78a:	6810      	ldr	r0, [r2, #0]
 801a78c:	6018      	str	r0, [r3, #0]
			break;
 801a78e:	e0d1      	b.n	801a934 <createProblem+0x19a8c>
		case 97 :
			strcpy(p->name,"FLAPODROM");
 801a790:	687b      	ldr	r3, [r7, #4]
 801a792:	337c      	adds	r3, #124	; 0x7c
 801a794:	4931      	ldr	r1, [pc, #196]	; (801a85c <createProblem+0x199b4>)
 801a796:	461a      	mov	r2, r3
 801a798:	460b      	mov	r3, r1
 801a79a:	cb03      	ldmia	r3!, {r0, r1}
 801a79c:	6010      	str	r0, [r2, #0]
 801a79e:	6051      	str	r1, [r2, #4]
 801a7a0:	881b      	ldrh	r3, [r3, #0]
 801a7a2:	8113      	strh	r3, [r2, #8]
			p->moveSize = 6;
 801a7a4:	687b      	ldr	r3, [r7, #4]
 801a7a6:	2206      	movs	r2, #6
 801a7a8:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"E,J,H,E,I,I");
 801a7aa:	687b      	ldr	r3, [r7, #4]
 801a7ac:	3340      	adds	r3, #64	; 0x40
 801a7ae:	4a2c      	ldr	r2, [pc, #176]	; (801a860 <createProblem+0x199b8>)
 801a7b0:	461c      	mov	r4, r3
 801a7b2:	4613      	mov	r3, r2
 801a7b4:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a7b6:	6020      	str	r0, [r4, #0]
 801a7b8:	6061      	str	r1, [r4, #4]
 801a7ba:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"6,5,10,14,14,18");
 801a7bc:	687b      	ldr	r3, [r7, #4]
 801a7be:	3304      	adds	r3, #4
 801a7c0:	4a28      	ldr	r2, [pc, #160]	; (801a864 <createProblem+0x199bc>)
 801a7c2:	461c      	mov	r4, r3
 801a7c4:	4615      	mov	r5, r2
 801a7c6:	cd0f      	ldmia	r5!, {r0, r1, r2, r3}
 801a7c8:	6020      	str	r0, [r4, #0]
 801a7ca:	6061      	str	r1, [r4, #4]
 801a7cc:	60a2      	str	r2, [r4, #8]
 801a7ce:	60e3      	str	r3, [r4, #12]
			strcpy(p->startFinish, "s,s,d,d,d,e");
 801a7d0:	687b      	ldr	r3, [r7, #4]
 801a7d2:	33d8      	adds	r3, #216	; 0xd8
 801a7d4:	4a20      	ldr	r2, [pc, #128]	; (801a858 <createProblem+0x199b0>)
 801a7d6:	461c      	mov	r4, r3
 801a7d8:	4613      	mov	r3, r2
 801a7da:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a7dc:	6020      	str	r0, [r4, #0]
 801a7de:	6061      	str	r1, [r4, #4]
 801a7e0:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6C+");
 801a7e2:	687b      	ldr	r3, [r7, #4]
 801a7e4:	33cc      	adds	r3, #204	; 0xcc
 801a7e6:	4a20      	ldr	r2, [pc, #128]	; (801a868 <createProblem+0x199c0>)
 801a7e8:	6810      	ldr	r0, [r2, #0]
 801a7ea:	6018      	str	r0, [r3, #0]
			break;
 801a7ec:	e0a2      	b.n	801a934 <createProblem+0x19a8c>
 801a7ee:	bf00      	nop
 801a7f0:	08029ce4 	.word	0x08029ce4
 801a7f4:	08029cf8 	.word	0x08029cf8
 801a7f8:	08029d08 	.word	0x08029d08
 801a7fc:	08029d1c 	.word	0x08029d1c
 801a800:	080209a4 	.word	0x080209a4
 801a804:	08029d2c 	.word	0x08029d2c
 801a808:	08029d38 	.word	0x08029d38
 801a80c:	08029d48 	.word	0x08029d48
 801a810:	08020a14 	.word	0x08020a14
 801a814:	08029d5c 	.word	0x08029d5c
 801a818:	08029d70 	.word	0x08029d70
 801a81c:	08029d80 	.word	0x08029d80
 801a820:	080209d8 	.word	0x080209d8
 801a824:	08020830 	.word	0x08020830
 801a828:	08029d98 	.word	0x08029d98
 801a82c:	08029da4 	.word	0x08029da4
 801a830:	08029db0 	.word	0x08029db0
 801a834:	08029dc0 	.word	0x08029dc0
 801a838:	08020874 	.word	0x08020874
 801a83c:	08029dcc 	.word	0x08029dcc
 801a840:	08029ddc 	.word	0x08029ddc
 801a844:	08029de8 	.word	0x08029de8
 801a848:	0802091c 	.word	0x0802091c
 801a84c:	08029df8 	.word	0x08029df8
 801a850:	08029e04 	.word	0x08029e04
 801a854:	08029e10 	.word	0x08029e10
 801a858:	08020e90 	.word	0x08020e90
 801a85c:	08029e20 	.word	0x08029e20
 801a860:	08029e2c 	.word	0x08029e2c
 801a864:	08029b8c 	.word	0x08029b8c
 801a868:	08020928 	.word	0x08020928
		case 98 :
			strcpy(p->name,"L9");
 801a86c:	687b      	ldr	r3, [r7, #4]
 801a86e:	337c      	adds	r3, #124	; 0x7c
 801a870:	4a32      	ldr	r2, [pc, #200]	; (801a93c <createProblem+0x19a94>)
 801a872:	8811      	ldrh	r1, [r2, #0]
 801a874:	7892      	ldrb	r2, [r2, #2]
 801a876:	8019      	strh	r1, [r3, #0]
 801a878:	709a      	strb	r2, [r3, #2]
			p->moveSize = 6;
 801a87a:	687b      	ldr	r3, [r7, #4]
 801a87c:	2206      	movs	r2, #6
 801a87e:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"G,E,C,E,C,D");
 801a880:	687b      	ldr	r3, [r7, #4]
 801a882:	3340      	adds	r3, #64	; 0x40
 801a884:	4a2e      	ldr	r2, [pc, #184]	; (801a940 <createProblem+0x19a98>)
 801a886:	461c      	mov	r4, r3
 801a888:	4613      	mov	r3, r2
 801a88a:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a88c:	6020      	str	r0, [r4, #0]
 801a88e:	6061      	str	r1, [r4, #4]
 801a890:	60a2      	str	r2, [r4, #8]
			strcpy(p->moveNumbers,"4,8,8,12,13,18");
 801a892:	687b      	ldr	r3, [r7, #4]
 801a894:	3304      	adds	r3, #4
 801a896:	4a2b      	ldr	r2, [pc, #172]	; (801a944 <createProblem+0x19a9c>)
 801a898:	461c      	mov	r4, r3
 801a89a:	4613      	mov	r3, r2
 801a89c:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a89e:	6020      	str	r0, [r4, #0]
 801a8a0:	6061      	str	r1, [r4, #4]
 801a8a2:	60a2      	str	r2, [r4, #8]
 801a8a4:	881a      	ldrh	r2, [r3, #0]
 801a8a6:	789b      	ldrb	r3, [r3, #2]
 801a8a8:	81a2      	strh	r2, [r4, #12]
 801a8aa:	73a3      	strb	r3, [r4, #14]
			strcpy(p->startFinish, "s,d,d,d,d,e");
 801a8ac:	687b      	ldr	r3, [r7, #4]
 801a8ae:	33d8      	adds	r3, #216	; 0xd8
 801a8b0:	4a25      	ldr	r2, [pc, #148]	; (801a948 <createProblem+0x19aa0>)
 801a8b2:	461c      	mov	r4, r3
 801a8b4:	4613      	mov	r3, r2
 801a8b6:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a8b8:	6020      	str	r0, [r4, #0]
 801a8ba:	6061      	str	r1, [r4, #4]
 801a8bc:	60a2      	str	r2, [r4, #8]
			strcpy(p->grade, "6B+");
 801a8be:	687b      	ldr	r3, [r7, #4]
 801a8c0:	33cc      	adds	r3, #204	; 0xcc
 801a8c2:	4a22      	ldr	r2, [pc, #136]	; (801a94c <createProblem+0x19aa4>)
 801a8c4:	6810      	ldr	r0, [r2, #0]
 801a8c6:	6018      	str	r0, [r3, #0]
			break;
 801a8c8:	e034      	b.n	801a934 <createProblem+0x19a8c>
		case 99 :
			strcpy(p->name,"ACG29");
 801a8ca:	687b      	ldr	r3, [r7, #4]
 801a8cc:	337c      	adds	r3, #124	; 0x7c
 801a8ce:	4a20      	ldr	r2, [pc, #128]	; (801a950 <createProblem+0x19aa8>)
 801a8d0:	6810      	ldr	r0, [r2, #0]
 801a8d2:	6018      	str	r0, [r3, #0]
 801a8d4:	8892      	ldrh	r2, [r2, #4]
 801a8d6:	809a      	strh	r2, [r3, #4]
			p->moveSize = 7;
 801a8d8:	687b      	ldr	r3, [r7, #4]
 801a8da:	2207      	movs	r2, #7
 801a8dc:	601a      	str	r2, [r3, #0]
			strcpy(p->moveLetters ,"J,H,E,F,E,H,D");
 801a8de:	687b      	ldr	r3, [r7, #4]
 801a8e0:	3340      	adds	r3, #64	; 0x40
 801a8e2:	4a1c      	ldr	r2, [pc, #112]	; (801a954 <createProblem+0x19aac>)
 801a8e4:	461c      	mov	r4, r3
 801a8e6:	4613      	mov	r3, r2
 801a8e8:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a8ea:	6020      	str	r0, [r4, #0]
 801a8ec:	6061      	str	r1, [r4, #4]
 801a8ee:	60a2      	str	r2, [r4, #8]
 801a8f0:	881b      	ldrh	r3, [r3, #0]
 801a8f2:	81a3      	strh	r3, [r4, #12]
			strcpy(p->moveNumbers,"5,5,8,11,14,16,18");
 801a8f4:	687b      	ldr	r3, [r7, #4]
 801a8f6:	3304      	adds	r3, #4
 801a8f8:	4a17      	ldr	r2, [pc, #92]	; (801a958 <createProblem+0x19ab0>)
 801a8fa:	461d      	mov	r5, r3
 801a8fc:	4614      	mov	r4, r2
 801a8fe:	cc0f      	ldmia	r4!, {r0, r1, r2, r3}
 801a900:	6028      	str	r0, [r5, #0]
 801a902:	6069      	str	r1, [r5, #4]
 801a904:	60aa      	str	r2, [r5, #8]
 801a906:	60eb      	str	r3, [r5, #12]
 801a908:	8823      	ldrh	r3, [r4, #0]
 801a90a:	822b      	strh	r3, [r5, #16]
			strcpy(p->startFinish, "s,s,d,d,d,d,e");
 801a90c:	687b      	ldr	r3, [r7, #4]
 801a90e:	33d8      	adds	r3, #216	; 0xd8
 801a910:	4a12      	ldr	r2, [pc, #72]	; (801a95c <createProblem+0x19ab4>)
 801a912:	461c      	mov	r4, r3
 801a914:	4613      	mov	r3, r2
 801a916:	cb07      	ldmia	r3!, {r0, r1, r2}
 801a918:	6020      	str	r0, [r4, #0]
 801a91a:	6061      	str	r1, [r4, #4]
 801a91c:	60a2      	str	r2, [r4, #8]
 801a91e:	881b      	ldrh	r3, [r3, #0]
 801a920:	81a3      	strh	r3, [r4, #12]
			strcpy(p->grade, "6C");
 801a922:	687b      	ldr	r3, [r7, #4]
 801a924:	33cc      	adds	r3, #204	; 0xcc
 801a926:	4a0e      	ldr	r2, [pc, #56]	; (801a960 <createProblem+0x19ab8>)
 801a928:	8811      	ldrh	r1, [r2, #0]
 801a92a:	7892      	ldrb	r2, [r2, #2]
 801a92c:	8019      	strh	r1, [r3, #0]
 801a92e:	709a      	strb	r2, [r3, #2]
			break;
 801a930:	e000      	b.n	801a934 <createProblem+0x19a8c>
		default:
			break;
 801a932:	bf00      	nop
	}
}
 801a934:	bf00      	nop
 801a936:	370c      	adds	r7, #12
 801a938:	46bd      	mov	sp, r7
 801a93a:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801a93c:	08029e38 	.word	0x08029e38
 801a940:	08029e3c 	.word	0x08029e3c
 801a944:	08029e48 	.word	0x08029e48
 801a948:	0802091c 	.word	0x0802091c
 801a94c:	08020830 	.word	0x08020830
 801a950:	08029e58 	.word	0x08029e58
 801a954:	08029e60 	.word	0x08029e60
 801a958:	08029e70 	.word	0x08029e70
 801a95c:	08020820 	.word	0x08020820
 801a960:	080208f0 	.word	0x080208f0

0801a964 <PRINTF>:
#include "usart.h"
#include "debug.h"



void PRINTF(char str[50]){
 801a964:	b580      	push	{r7, lr}
 801a966:	b090      	sub	sp, #64	; 0x40
 801a968:	af00      	add	r7, sp, #0
 801a96a:	6078      	str	r0, [r7, #4]
  char msg[50];
  int msg_len;
  msg_len = sprintf(msg, str);
 801a96c:	f107 0308 	add.w	r3, r7, #8
 801a970:	6879      	ldr	r1, [r7, #4]
 801a972:	4618      	mov	r0, r3
 801a974:	f004 faaa 	bl	801eecc <siprintf>
 801a978:	63f8      	str	r0, [r7, #60]	; 0x3c
  HAL_UART_Transmit(&huart2, (uint8_t *)msg, msg_len, 5000);
 801a97a:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801a97c:	b29a      	uxth	r2, r3
 801a97e:	f107 0108 	add.w	r1, r7, #8
 801a982:	f241 3388 	movw	r3, #5000	; 0x1388
 801a986:	4803      	ldr	r0, [pc, #12]	; (801a994 <PRINTF+0x30>)
 801a988:	f003 fe0f 	bl	801e5aa <HAL_UART_Transmit>
}
 801a98c:	bf00      	nop
 801a98e:	3740      	adds	r7, #64	; 0x40
 801a990:	46bd      	mov	sp, r7
 801a992:	bd80      	pop	{r7, pc}
 801a994:	20000198 	.word	0x20000198

0801a998 <PRINTF8>:


void PRINTF8(char str[50], uint8_t val){
 801a998:	b580      	push	{r7, lr}
 801a99a:	b090      	sub	sp, #64	; 0x40
 801a99c:	af00      	add	r7, sp, #0
 801a99e:	6078      	str	r0, [r7, #4]
 801a9a0:	460b      	mov	r3, r1
 801a9a2:	70fb      	strb	r3, [r7, #3]
  char msg[50];
  int msg_len;
  msg_len = sprintf(msg, str,val);
 801a9a4:	78fa      	ldrb	r2, [r7, #3]
 801a9a6:	f107 0308 	add.w	r3, r7, #8
 801a9aa:	6879      	ldr	r1, [r7, #4]
 801a9ac:	4618      	mov	r0, r3
 801a9ae:	f004 fa8d 	bl	801eecc <siprintf>
 801a9b2:	63f8      	str	r0, [r7, #60]	; 0x3c
  HAL_UART_Transmit(&huart2, (uint8_t *)msg, msg_len, 5000);
 801a9b4:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801a9b6:	b29a      	uxth	r2, r3
 801a9b8:	f107 0108 	add.w	r1, r7, #8
 801a9bc:	f241 3388 	movw	r3, #5000	; 0x1388
 801a9c0:	4803      	ldr	r0, [pc, #12]	; (801a9d0 <PRINTF8+0x38>)
 801a9c2:	f003 fdf2 	bl	801e5aa <HAL_UART_Transmit>
}
 801a9c6:	bf00      	nop
 801a9c8:	3740      	adds	r7, #64	; 0x40
 801a9ca:	46bd      	mov	sp, r7
 801a9cc:	bd80      	pop	{r7, pc}
 801a9ce:	bf00      	nop
 801a9d0:	20000198 	.word	0x20000198

0801a9d4 <PRINTF32>:
  msg_len = sprintf(msg, str,val);
  HAL_UART_Transmit(&huart2, (uint8_t *)msg, msg_len, 5000);
}


void PRINTF32(char str[50], uint32_t val){
 801a9d4:	b580      	push	{r7, lr}
 801a9d6:	b090      	sub	sp, #64	; 0x40
 801a9d8:	af00      	add	r7, sp, #0
 801a9da:	6078      	str	r0, [r7, #4]
 801a9dc:	6039      	str	r1, [r7, #0]
  char msg[50];
  int msg_len;
  msg_len = sprintf(msg, str,val);
 801a9de:	f107 0308 	add.w	r3, r7, #8
 801a9e2:	683a      	ldr	r2, [r7, #0]
 801a9e4:	6879      	ldr	r1, [r7, #4]
 801a9e6:	4618      	mov	r0, r3
 801a9e8:	f004 fa70 	bl	801eecc <siprintf>
 801a9ec:	63f8      	str	r0, [r7, #60]	; 0x3c
  HAL_UART_Transmit(&huart2, (uint8_t *)msg, msg_len, 5000);
 801a9ee:	6bfb      	ldr	r3, [r7, #60]	; 0x3c
 801a9f0:	b29a      	uxth	r2, r3
 801a9f2:	f107 0108 	add.w	r1, r7, #8
 801a9f6:	f241 3388 	movw	r3, #5000	; 0x1388
 801a9fa:	4803      	ldr	r0, [pc, #12]	; (801aa08 <PRINTF32+0x34>)
 801a9fc:	f003 fdd5 	bl	801e5aa <HAL_UART_Transmit>
}
 801aa00:	bf00      	nop
 801aa02:	3740      	adds	r7, #64	; 0x40
 801aa04:	46bd      	mov	sp, r7
 801aa06:	bd80      	pop	{r7, pc}
 801aa08:	20000198 	.word	0x20000198

0801aa0c <MX_DMA_Init>:

/**
  * Enable DMA controller clock
  */
void MX_DMA_Init(void)
{
 801aa0c:	b580      	push	{r7, lr}
 801aa0e:	b082      	sub	sp, #8
 801aa10:	af00      	add	r7, sp, #0

  /* DMA controller clock enable */
  __HAL_RCC_DMA1_CLK_ENABLE();
 801aa12:	2300      	movs	r3, #0
 801aa14:	607b      	str	r3, [r7, #4]
 801aa16:	4b0c      	ldr	r3, [pc, #48]	; (801aa48 <MX_DMA_Init+0x3c>)
 801aa18:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801aa1a:	4a0b      	ldr	r2, [pc, #44]	; (801aa48 <MX_DMA_Init+0x3c>)
 801aa1c:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 801aa20:	6313      	str	r3, [r2, #48]	; 0x30
 801aa22:	4b09      	ldr	r3, [pc, #36]	; (801aa48 <MX_DMA_Init+0x3c>)
 801aa24:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801aa26:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 801aa2a:	607b      	str	r3, [r7, #4]
 801aa2c:	687b      	ldr	r3, [r7, #4]

  /* DMA interrupt init */
  /* DMA1_Stream5_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(DMA1_Stream5_IRQn, 0, 0);
 801aa2e:	2200      	movs	r2, #0
 801aa30:	2100      	movs	r1, #0
 801aa32:	2010      	movs	r0, #16
 801aa34:	f001 f9bf 	bl	801bdb6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(DMA1_Stream5_IRQn);
 801aa38:	2010      	movs	r0, #16
 801aa3a:	f001 f9d8 	bl	801bdee <HAL_NVIC_EnableIRQ>

}
 801aa3e:	bf00      	nop
 801aa40:	3708      	adds	r7, #8
 801aa42:	46bd      	mov	sp, r7
 801aa44:	bd80      	pop	{r7, pc}
 801aa46:	bf00      	nop
 801aa48:	40023800 	.word	0x40023800

0801aa4c <MX_GPIO_Init>:
        * Output
        * EVENT_OUT
        * EXTI
*/
void MX_GPIO_Init(void)
{
 801aa4c:	b580      	push	{r7, lr}
 801aa4e:	b08a      	sub	sp, #40	; 0x28
 801aa50:	af00      	add	r7, sp, #0

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 801aa52:	f107 0314 	add.w	r3, r7, #20
 801aa56:	2200      	movs	r2, #0
 801aa58:	601a      	str	r2, [r3, #0]
 801aa5a:	605a      	str	r2, [r3, #4]
 801aa5c:	609a      	str	r2, [r3, #8]
 801aa5e:	60da      	str	r2, [r3, #12]
 801aa60:	611a      	str	r2, [r3, #16]

  /* GPIO Ports Clock Enable */
  __HAL_RCC_GPIOC_CLK_ENABLE();
 801aa62:	2300      	movs	r3, #0
 801aa64:	613b      	str	r3, [r7, #16]
 801aa66:	4b52      	ldr	r3, [pc, #328]	; (801abb0 <MX_GPIO_Init+0x164>)
 801aa68:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801aa6a:	4a51      	ldr	r2, [pc, #324]	; (801abb0 <MX_GPIO_Init+0x164>)
 801aa6c:	f043 0304 	orr.w	r3, r3, #4
 801aa70:	6313      	str	r3, [r2, #48]	; 0x30
 801aa72:	4b4f      	ldr	r3, [pc, #316]	; (801abb0 <MX_GPIO_Init+0x164>)
 801aa74:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801aa76:	f003 0304 	and.w	r3, r3, #4
 801aa7a:	613b      	str	r3, [r7, #16]
 801aa7c:	693b      	ldr	r3, [r7, #16]
  __HAL_RCC_GPIOH_CLK_ENABLE();
 801aa7e:	2300      	movs	r3, #0
 801aa80:	60fb      	str	r3, [r7, #12]
 801aa82:	4b4b      	ldr	r3, [pc, #300]	; (801abb0 <MX_GPIO_Init+0x164>)
 801aa84:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801aa86:	4a4a      	ldr	r2, [pc, #296]	; (801abb0 <MX_GPIO_Init+0x164>)
 801aa88:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801aa8c:	6313      	str	r3, [r2, #48]	; 0x30
 801aa8e:	4b48      	ldr	r3, [pc, #288]	; (801abb0 <MX_GPIO_Init+0x164>)
 801aa90:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801aa92:	f003 0380 	and.w	r3, r3, #128	; 0x80
 801aa96:	60fb      	str	r3, [r7, #12]
 801aa98:	68fb      	ldr	r3, [r7, #12]
  __HAL_RCC_GPIOA_CLK_ENABLE();
 801aa9a:	2300      	movs	r3, #0
 801aa9c:	60bb      	str	r3, [r7, #8]
 801aa9e:	4b44      	ldr	r3, [pc, #272]	; (801abb0 <MX_GPIO_Init+0x164>)
 801aaa0:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801aaa2:	4a43      	ldr	r2, [pc, #268]	; (801abb0 <MX_GPIO_Init+0x164>)
 801aaa4:	f043 0301 	orr.w	r3, r3, #1
 801aaa8:	6313      	str	r3, [r2, #48]	; 0x30
 801aaaa:	4b41      	ldr	r3, [pc, #260]	; (801abb0 <MX_GPIO_Init+0x164>)
 801aaac:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801aaae:	f003 0301 	and.w	r3, r3, #1
 801aab2:	60bb      	str	r3, [r7, #8]
 801aab4:	68bb      	ldr	r3, [r7, #8]
  __HAL_RCC_GPIOB_CLK_ENABLE();
 801aab6:	2300      	movs	r3, #0
 801aab8:	607b      	str	r3, [r7, #4]
 801aaba:	4b3d      	ldr	r3, [pc, #244]	; (801abb0 <MX_GPIO_Init+0x164>)
 801aabc:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801aabe:	4a3c      	ldr	r2, [pc, #240]	; (801abb0 <MX_GPIO_Init+0x164>)
 801aac0:	f043 0302 	orr.w	r3, r3, #2
 801aac4:	6313      	str	r3, [r2, #48]	; 0x30
 801aac6:	4b3a      	ldr	r3, [pc, #232]	; (801abb0 <MX_GPIO_Init+0x164>)
 801aac8:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801aaca:	f003 0302 	and.w	r3, r3, #2
 801aace:	607b      	str	r3, [r7, #4]
 801aad0:	687b      	ldr	r3, [r7, #4]

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 801aad2:	2200      	movs	r2, #0
 801aad4:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801aad8:	4836      	ldr	r0, [pc, #216]	; (801abb4 <MX_GPIO_Init+0x168>)
 801aada:	f001 fe25 	bl	801c728 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 801aade:	2200      	movs	r2, #0
 801aae0:	2180      	movs	r1, #128	; 0x80
 801aae2:	4835      	ldr	r0, [pc, #212]	; (801abb8 <MX_GPIO_Init+0x16c>)
 801aae4:	f001 fe20 	bl	801c728 <HAL_GPIO_WritePin>

  /*Configure GPIO pin Output Level */
  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8|GPIO_PIN_9, GPIO_PIN_RESET);
 801aae8:	2200      	movs	r2, #0
 801aaea:	f44f 7140 	mov.w	r1, #768	; 0x300
 801aaee:	4833      	ldr	r0, [pc, #204]	; (801abbc <MX_GPIO_Init+0x170>)
 801aaf0:	f001 fe1a 	bl	801c728 <HAL_GPIO_WritePin>

  /*Configure GPIO pin : PtPin */
  GPIO_InitStruct.Pin = B1_Pin;
 801aaf4:	f44f 5300 	mov.w	r3, #8192	; 0x2000
 801aaf8:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_IT_FALLING;
 801aafa:	4b31      	ldr	r3, [pc, #196]	; (801abc0 <MX_GPIO_Init+0x174>)
 801aafc:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 801aafe:	2300      	movs	r3, #0
 801ab00:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(B1_GPIO_Port, &GPIO_InitStruct);
 801ab02:	f107 0314 	add.w	r3, r7, #20
 801ab06:	4619      	mov	r1, r3
 801ab08:	482b      	ldr	r0, [pc, #172]	; (801abb8 <MX_GPIO_Init+0x16c>)
 801ab0a:	f001 fc73 	bl	801c3f4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PB10 */
  GPIO_InitStruct.Pin = GPIO_PIN_10;
 801ab0e:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801ab12:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 801ab14:	2301      	movs	r3, #1
 801ab16:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 801ab18:	2300      	movs	r3, #0
 801ab1a:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 801ab1c:	2300      	movs	r3, #0
 801ab1e:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 801ab20:	f107 0314 	add.w	r3, r7, #20
 801ab24:	4619      	mov	r1, r3
 801ab26:	4823      	ldr	r0, [pc, #140]	; (801abb4 <MX_GPIO_Init+0x168>)
 801ab28:	f001 fc64 	bl	801c3f4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PC7 */
  GPIO_InitStruct.Pin = GPIO_PIN_7;
 801ab2c:	2380      	movs	r3, #128	; 0x80
 801ab2e:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 801ab30:	2301      	movs	r3, #1
 801ab32:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 801ab34:	2300      	movs	r3, #0
 801ab36:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 801ab38:	2300      	movs	r3, #0
 801ab3a:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 801ab3c:	f107 0314 	add.w	r3, r7, #20
 801ab40:	4619      	mov	r1, r3
 801ab42:	481d      	ldr	r0, [pc, #116]	; (801abb8 <MX_GPIO_Init+0x16c>)
 801ab44:	f001 fc56 	bl	801c3f4 <HAL_GPIO_Init>

  /*Configure GPIO pins : PA8 PA9 */
  GPIO_InitStruct.Pin = GPIO_PIN_8|GPIO_PIN_9;
 801ab48:	f44f 7340 	mov.w	r3, #768	; 0x300
 801ab4c:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP;
 801ab4e:	2301      	movs	r3, #1
 801ab50:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_NOPULL;
 801ab52:	2300      	movs	r3, #0
 801ab54:	61fb      	str	r3, [r7, #28]
  GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 801ab56:	2300      	movs	r3, #0
 801ab58:	623b      	str	r3, [r7, #32]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 801ab5a:	f107 0314 	add.w	r3, r7, #20
 801ab5e:	4619      	mov	r1, r3
 801ab60:	4816      	ldr	r0, [pc, #88]	; (801abbc <MX_GPIO_Init+0x170>)
 801ab62:	f001 fc47 	bl	801c3f4 <HAL_GPIO_Init>

  /*Configure GPIO pin : PA10 */
  GPIO_InitStruct.Pin = GPIO_PIN_10;
 801ab66:	f44f 6380 	mov.w	r3, #1024	; 0x400
 801ab6a:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 801ab6c:	2300      	movs	r3, #0
 801ab6e:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 801ab70:	2301      	movs	r3, #1
 801ab72:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 801ab74:	f107 0314 	add.w	r3, r7, #20
 801ab78:	4619      	mov	r1, r3
 801ab7a:	4810      	ldr	r0, [pc, #64]	; (801abbc <MX_GPIO_Init+0x170>)
 801ab7c:	f001 fc3a 	bl	801c3f4 <HAL_GPIO_Init>

  /*Configure GPIO pins : PB3 PB4 PB5 */
  GPIO_InitStruct.Pin = GPIO_PIN_3|GPIO_PIN_4|GPIO_PIN_5;
 801ab80:	2338      	movs	r3, #56	; 0x38
 801ab82:	617b      	str	r3, [r7, #20]
  GPIO_InitStruct.Mode = GPIO_MODE_INPUT;
 801ab84:	2300      	movs	r3, #0
 801ab86:	61bb      	str	r3, [r7, #24]
  GPIO_InitStruct.Pull = GPIO_PULLUP;
 801ab88:	2301      	movs	r3, #1
 801ab8a:	61fb      	str	r3, [r7, #28]
  HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 801ab8c:	f107 0314 	add.w	r3, r7, #20
 801ab90:	4619      	mov	r1, r3
 801ab92:	4808      	ldr	r0, [pc, #32]	; (801abb4 <MX_GPIO_Init+0x168>)
 801ab94:	f001 fc2e 	bl	801c3f4 <HAL_GPIO_Init>

  /* EXTI interrupt init*/
  HAL_NVIC_SetPriority(EXTI15_10_IRQn, 0, 0);
 801ab98:	2200      	movs	r2, #0
 801ab9a:	2100      	movs	r1, #0
 801ab9c:	2028      	movs	r0, #40	; 0x28
 801ab9e:	f001 f90a 	bl	801bdb6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(EXTI15_10_IRQn);
 801aba2:	2028      	movs	r0, #40	; 0x28
 801aba4:	f001 f923 	bl	801bdee <HAL_NVIC_EnableIRQ>

}
 801aba8:	bf00      	nop
 801abaa:	3728      	adds	r7, #40	; 0x28
 801abac:	46bd      	mov	sp, r7
 801abae:	bd80      	pop	{r7, pc}
 801abb0:	40023800 	.word	0x40023800
 801abb4:	40020400 	.word	0x40020400
 801abb8:	40020800 	.word	0x40020800
 801abbc:	40020000 	.word	0x40020000
 801abc0:	10210000 	.word	0x10210000

0801abc4 <MX_I2C1_Init>:

I2C_HandleTypeDef hi2c1;

/* I2C1 init function */
void MX_I2C1_Init(void)
{
 801abc4:	b580      	push	{r7, lr}
 801abc6:	af00      	add	r7, sp, #0

  hi2c1.Instance = I2C1;
 801abc8:	4b12      	ldr	r3, [pc, #72]	; (801ac14 <MX_I2C1_Init+0x50>)
 801abca:	4a13      	ldr	r2, [pc, #76]	; (801ac18 <MX_I2C1_Init+0x54>)
 801abcc:	601a      	str	r2, [r3, #0]
  hi2c1.Init.ClockSpeed = 100000;
 801abce:	4b11      	ldr	r3, [pc, #68]	; (801ac14 <MX_I2C1_Init+0x50>)
 801abd0:	4a12      	ldr	r2, [pc, #72]	; (801ac1c <MX_I2C1_Init+0x58>)
 801abd2:	605a      	str	r2, [r3, #4]
  hi2c1.Init.DutyCycle = I2C_DUTYCYCLE_2;
 801abd4:	4b0f      	ldr	r3, [pc, #60]	; (801ac14 <MX_I2C1_Init+0x50>)
 801abd6:	2200      	movs	r2, #0
 801abd8:	609a      	str	r2, [r3, #8]
  hi2c1.Init.OwnAddress1 = 0;
 801abda:	4b0e      	ldr	r3, [pc, #56]	; (801ac14 <MX_I2C1_Init+0x50>)
 801abdc:	2200      	movs	r2, #0
 801abde:	60da      	str	r2, [r3, #12]
  hi2c1.Init.AddressingMode = I2C_ADDRESSINGMODE_7BIT;
 801abe0:	4b0c      	ldr	r3, [pc, #48]	; (801ac14 <MX_I2C1_Init+0x50>)
 801abe2:	f44f 4280 	mov.w	r2, #16384	; 0x4000
 801abe6:	611a      	str	r2, [r3, #16]
  hi2c1.Init.DualAddressMode = I2C_DUALADDRESS_DISABLE;
 801abe8:	4b0a      	ldr	r3, [pc, #40]	; (801ac14 <MX_I2C1_Init+0x50>)
 801abea:	2200      	movs	r2, #0
 801abec:	615a      	str	r2, [r3, #20]
  hi2c1.Init.OwnAddress2 = 0;
 801abee:	4b09      	ldr	r3, [pc, #36]	; (801ac14 <MX_I2C1_Init+0x50>)
 801abf0:	2200      	movs	r2, #0
 801abf2:	619a      	str	r2, [r3, #24]
  hi2c1.Init.GeneralCallMode = I2C_GENERALCALL_DISABLE;
 801abf4:	4b07      	ldr	r3, [pc, #28]	; (801ac14 <MX_I2C1_Init+0x50>)
 801abf6:	2200      	movs	r2, #0
 801abf8:	61da      	str	r2, [r3, #28]
  hi2c1.Init.NoStretchMode = I2C_NOSTRETCH_DISABLE;
 801abfa:	4b06      	ldr	r3, [pc, #24]	; (801ac14 <MX_I2C1_Init+0x50>)
 801abfc:	2200      	movs	r2, #0
 801abfe:	621a      	str	r2, [r3, #32]
  if (HAL_I2C_Init(&hi2c1) != HAL_OK)
 801ac00:	4804      	ldr	r0, [pc, #16]	; (801ac14 <MX_I2C1_Init+0x50>)
 801ac02:	f001 fdc3 	bl	801c78c <HAL_I2C_Init>
 801ac06:	4603      	mov	r3, r0
 801ac08:	2b00      	cmp	r3, #0
 801ac0a:	d001      	beq.n	801ac10 <MX_I2C1_Init+0x4c>
  {
    Error_Handler();
 801ac0c:	f000 fd06 	bl	801b61c <Error_Handler>
  }

}
 801ac10:	bf00      	nop
 801ac12:	bd80      	pop	{r7, pc}
 801ac14:	200000a4 	.word	0x200000a4
 801ac18:	40005400 	.word	0x40005400
 801ac1c:	000186a0 	.word	0x000186a0

0801ac20 <HAL_I2C_MspInit>:

void HAL_I2C_MspInit(I2C_HandleTypeDef* i2cHandle)
{
 801ac20:	b580      	push	{r7, lr}
 801ac22:	b08a      	sub	sp, #40	; 0x28
 801ac24:	af00      	add	r7, sp, #0
 801ac26:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 801ac28:	f107 0314 	add.w	r3, r7, #20
 801ac2c:	2200      	movs	r2, #0
 801ac2e:	601a      	str	r2, [r3, #0]
 801ac30:	605a      	str	r2, [r3, #4]
 801ac32:	609a      	str	r2, [r3, #8]
 801ac34:	60da      	str	r2, [r3, #12]
 801ac36:	611a      	str	r2, [r3, #16]
  if(i2cHandle->Instance==I2C1)
 801ac38:	687b      	ldr	r3, [r7, #4]
 801ac3a:	681b      	ldr	r3, [r3, #0]
 801ac3c:	4a19      	ldr	r2, [pc, #100]	; (801aca4 <HAL_I2C_MspInit+0x84>)
 801ac3e:	4293      	cmp	r3, r2
 801ac40:	d12b      	bne.n	801ac9a <HAL_I2C_MspInit+0x7a>
  {
  /* USER CODE BEGIN I2C1_MspInit 0 */

  /* USER CODE END I2C1_MspInit 0 */

    __HAL_RCC_GPIOB_CLK_ENABLE();
 801ac42:	2300      	movs	r3, #0
 801ac44:	613b      	str	r3, [r7, #16]
 801ac46:	4b18      	ldr	r3, [pc, #96]	; (801aca8 <HAL_I2C_MspInit+0x88>)
 801ac48:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ac4a:	4a17      	ldr	r2, [pc, #92]	; (801aca8 <HAL_I2C_MspInit+0x88>)
 801ac4c:	f043 0302 	orr.w	r3, r3, #2
 801ac50:	6313      	str	r3, [r2, #48]	; 0x30
 801ac52:	4b15      	ldr	r3, [pc, #84]	; (801aca8 <HAL_I2C_MspInit+0x88>)
 801ac54:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ac56:	f003 0302 	and.w	r3, r3, #2
 801ac5a:	613b      	str	r3, [r7, #16]
 801ac5c:	693b      	ldr	r3, [r7, #16]
    /**I2C1 GPIO Configuration
    PB6     ------> I2C1_SCL
    PB7     ------> I2C1_SDA
    */
    GPIO_InitStruct.Pin = GPIO_PIN_6|GPIO_PIN_7;
 801ac5e:	23c0      	movs	r3, #192	; 0xc0
 801ac60:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_OD;
 801ac62:	2312      	movs	r3, #18
 801ac64:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_PULLUP;
 801ac66:	2301      	movs	r3, #1
 801ac68:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_VERY_HIGH;
 801ac6a:	2303      	movs	r3, #3
 801ac6c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF4_I2C1;
 801ac6e:	2304      	movs	r3, #4
 801ac70:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 801ac72:	f107 0314 	add.w	r3, r7, #20
 801ac76:	4619      	mov	r1, r3
 801ac78:	480c      	ldr	r0, [pc, #48]	; (801acac <HAL_I2C_MspInit+0x8c>)
 801ac7a:	f001 fbbb 	bl	801c3f4 <HAL_GPIO_Init>

    /* I2C1 clock enable */
    __HAL_RCC_I2C1_CLK_ENABLE();
 801ac7e:	2300      	movs	r3, #0
 801ac80:	60fb      	str	r3, [r7, #12]
 801ac82:	4b09      	ldr	r3, [pc, #36]	; (801aca8 <HAL_I2C_MspInit+0x88>)
 801ac84:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801ac86:	4a08      	ldr	r2, [pc, #32]	; (801aca8 <HAL_I2C_MspInit+0x88>)
 801ac88:	f443 1300 	orr.w	r3, r3, #2097152	; 0x200000
 801ac8c:	6413      	str	r3, [r2, #64]	; 0x40
 801ac8e:	4b06      	ldr	r3, [pc, #24]	; (801aca8 <HAL_I2C_MspInit+0x88>)
 801ac90:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801ac92:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 801ac96:	60fb      	str	r3, [r7, #12]
 801ac98:	68fb      	ldr	r3, [r7, #12]
  /* USER CODE BEGIN I2C1_MspInit 1 */

  /* USER CODE END I2C1_MspInit 1 */
  }
}
 801ac9a:	bf00      	nop
 801ac9c:	3728      	adds	r7, #40	; 0x28
 801ac9e:	46bd      	mov	sp, r7
 801aca0:	bd80      	pop	{r7, pc}
 801aca2:	bf00      	nop
 801aca4:	40005400 	.word	0x40005400
 801aca8:	40023800 	.word	0x40023800
 801acac:	40020400 	.word	0x40020400

0801acb0 <lcd16x2_i2c_sendCommand>:
#define LCD_I2C_SLAVE_ADDRESS_0  0x4E
#define LCD_I2C_SLAVE_ADDRESS_1  0x7E

/* Private functions */
static void lcd16x2_i2c_sendCommand(uint8_t command)
{
 801acb0:	b580      	push	{r7, lr}
 801acb2:	b086      	sub	sp, #24
 801acb4:	af02      	add	r7, sp, #8
 801acb6:	4603      	mov	r3, r0
 801acb8:	71fb      	strb	r3, [r7, #7]
  const uint8_t command_0_3 = (0xF0 & (command<<4));
 801acba:	79fb      	ldrb	r3, [r7, #7]
 801acbc:	011b      	lsls	r3, r3, #4
 801acbe:	73fb      	strb	r3, [r7, #15]
  const uint8_t command_4_7 = (0xF0 & command);
 801acc0:	79fb      	ldrb	r3, [r7, #7]
 801acc2:	f023 030f 	bic.w	r3, r3, #15
 801acc6:	73bb      	strb	r3, [r7, #14]
  uint8_t i2cData[4] =
 801acc8:	7bbb      	ldrb	r3, [r7, #14]
 801acca:	f043 030c 	orr.w	r3, r3, #12
 801acce:	b2db      	uxtb	r3, r3
 801acd0:	723b      	strb	r3, [r7, #8]
 801acd2:	7bbb      	ldrb	r3, [r7, #14]
 801acd4:	f043 0308 	orr.w	r3, r3, #8
 801acd8:	b2db      	uxtb	r3, r3
 801acda:	727b      	strb	r3, [r7, #9]
 801acdc:	7bfb      	ldrb	r3, [r7, #15]
 801acde:	f043 030c 	orr.w	r3, r3, #12
 801ace2:	b2db      	uxtb	r3, r3
 801ace4:	72bb      	strb	r3, [r7, #10]
 801ace6:	7bfb      	ldrb	r3, [r7, #15]
 801ace8:	f043 0308 	orr.w	r3, r3, #8
 801acec:	b2db      	uxtb	r3, r3
 801acee:	72fb      	strb	r3, [r7, #11]
      command_4_7 | LCD_EN | LCD_BK_LIGHT,
      command_4_7 | LCD_BK_LIGHT,
      command_0_3 | LCD_EN | LCD_BK_LIGHT,
      command_0_3 | LCD_BK_LIGHT,
  };
  HAL_I2C_Master_Transmit(lcd16x2_i2cHandle, LCD_I2C_SLAVE_ADDRESS, i2cData, 4, 200);
 801acf0:	4b07      	ldr	r3, [pc, #28]	; (801ad10 <lcd16x2_i2c_sendCommand+0x60>)
 801acf2:	6818      	ldr	r0, [r3, #0]
 801acf4:	4b07      	ldr	r3, [pc, #28]	; (801ad14 <lcd16x2_i2c_sendCommand+0x64>)
 801acf6:	781b      	ldrb	r3, [r3, #0]
 801acf8:	b299      	uxth	r1, r3
 801acfa:	f107 0208 	add.w	r2, r7, #8
 801acfe:	23c8      	movs	r3, #200	; 0xc8
 801ad00:	9300      	str	r3, [sp, #0]
 801ad02:	2304      	movs	r3, #4
 801ad04:	f001 fe7a 	bl	801c9fc <HAL_I2C_Master_Transmit>
}
 801ad08:	bf00      	nop
 801ad0a:	3710      	adds	r7, #16
 801ad0c:	46bd      	mov	sp, r7
 801ad0e:	bd80      	pop	{r7, pc}
 801ad10:	20000090 	.word	0x20000090
 801ad14:	20000094 	.word	0x20000094

0801ad18 <lcd16x2_i2c_sendData>:

static void lcd16x2_i2c_sendData(uint8_t data)
{
 801ad18:	b580      	push	{r7, lr}
 801ad1a:	b086      	sub	sp, #24
 801ad1c:	af02      	add	r7, sp, #8
 801ad1e:	4603      	mov	r3, r0
 801ad20:	71fb      	strb	r3, [r7, #7]
  const uint8_t data_0_3 = (0xF0 & (data<<4));
 801ad22:	79fb      	ldrb	r3, [r7, #7]
 801ad24:	011b      	lsls	r3, r3, #4
 801ad26:	73fb      	strb	r3, [r7, #15]
  const uint8_t data_4_7 = (0xF0 & data);
 801ad28:	79fb      	ldrb	r3, [r7, #7]
 801ad2a:	f023 030f 	bic.w	r3, r3, #15
 801ad2e:	73bb      	strb	r3, [r7, #14]
  uint8_t i2cData[4] =
 801ad30:	7bbb      	ldrb	r3, [r7, #14]
 801ad32:	f043 030d 	orr.w	r3, r3, #13
 801ad36:	b2db      	uxtb	r3, r3
 801ad38:	723b      	strb	r3, [r7, #8]
 801ad3a:	7bbb      	ldrb	r3, [r7, #14]
 801ad3c:	f043 0309 	orr.w	r3, r3, #9
 801ad40:	b2db      	uxtb	r3, r3
 801ad42:	727b      	strb	r3, [r7, #9]
 801ad44:	7bfb      	ldrb	r3, [r7, #15]
 801ad46:	f043 030d 	orr.w	r3, r3, #13
 801ad4a:	b2db      	uxtb	r3, r3
 801ad4c:	72bb      	strb	r3, [r7, #10]
 801ad4e:	7bfb      	ldrb	r3, [r7, #15]
 801ad50:	f043 0309 	orr.w	r3, r3, #9
 801ad54:	b2db      	uxtb	r3, r3
 801ad56:	72fb      	strb	r3, [r7, #11]
      data_4_7 | LCD_EN | LCD_BK_LIGHT | LCD_RS,
      data_4_7 | LCD_BK_LIGHT | LCD_RS,
      data_0_3 | LCD_EN | LCD_BK_LIGHT | LCD_RS,
      data_0_3 | LCD_BK_LIGHT | LCD_RS,
  };
  HAL_I2C_Master_Transmit(lcd16x2_i2cHandle, LCD_I2C_SLAVE_ADDRESS, i2cData, 4, 200);
 801ad58:	4b07      	ldr	r3, [pc, #28]	; (801ad78 <lcd16x2_i2c_sendData+0x60>)
 801ad5a:	6818      	ldr	r0, [r3, #0]
 801ad5c:	4b07      	ldr	r3, [pc, #28]	; (801ad7c <lcd16x2_i2c_sendData+0x64>)
 801ad5e:	781b      	ldrb	r3, [r3, #0]
 801ad60:	b299      	uxth	r1, r3
 801ad62:	f107 0208 	add.w	r2, r7, #8
 801ad66:	23c8      	movs	r3, #200	; 0xc8
 801ad68:	9300      	str	r3, [sp, #0]
 801ad6a:	2304      	movs	r3, #4
 801ad6c:	f001 fe46 	bl	801c9fc <HAL_I2C_Master_Transmit>
}
 801ad70:	bf00      	nop
 801ad72:	3710      	adds	r7, #16
 801ad74:	46bd      	mov	sp, r7
 801ad76:	bd80      	pop	{r7, pc}
 801ad78:	20000090 	.word	0x20000090
 801ad7c:	20000094 	.word	0x20000094

0801ad80 <lcd16x2_i2c_init>:
/**
 * @brief Initialise LCD16x2
 * @param[in] *pI2cHandle - pointer to HAL I2C handle
 */
bool lcd16x2_i2c_init(I2C_HandleTypeDef *pI2cHandle)
{
 801ad80:	b580      	push	{r7, lr}
 801ad82:	b082      	sub	sp, #8
 801ad84:	af00      	add	r7, sp, #0
 801ad86:	6078      	str	r0, [r7, #4]
  HAL_Delay(50);
 801ad88:	2032      	movs	r0, #50	; 0x32
 801ad8a:	f000 ff17 	bl	801bbbc <HAL_Delay>
  lcd16x2_i2cHandle = pI2cHandle;
 801ad8e:	4a30      	ldr	r2, [pc, #192]	; (801ae50 <lcd16x2_i2c_init+0xd0>)
 801ad90:	687b      	ldr	r3, [r7, #4]
 801ad92:	6013      	str	r3, [r2, #0]
  if(HAL_I2C_IsDeviceReady(lcd16x2_i2cHandle, LCD_I2C_SLAVE_ADDRESS_0, 5, 500) != HAL_OK)
 801ad94:	4b2e      	ldr	r3, [pc, #184]	; (801ae50 <lcd16x2_i2c_init+0xd0>)
 801ad96:	6818      	ldr	r0, [r3, #0]
 801ad98:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 801ad9c:	2205      	movs	r2, #5
 801ad9e:	214e      	movs	r1, #78	; 0x4e
 801ada0:	f001 ff2a 	bl	801cbf8 <HAL_I2C_IsDeviceReady>
 801ada4:	4603      	mov	r3, r0
 801ada6:	2b00      	cmp	r3, #0
 801ada8:	d010      	beq.n	801adcc <lcd16x2_i2c_init+0x4c>
  {
    if(HAL_I2C_IsDeviceReady(lcd16x2_i2cHandle, LCD_I2C_SLAVE_ADDRESS_1, 5, 500) != HAL_OK)
 801adaa:	4b29      	ldr	r3, [pc, #164]	; (801ae50 <lcd16x2_i2c_init+0xd0>)
 801adac:	6818      	ldr	r0, [r3, #0]
 801adae:	f44f 73fa 	mov.w	r3, #500	; 0x1f4
 801adb2:	2205      	movs	r2, #5
 801adb4:	217e      	movs	r1, #126	; 0x7e
 801adb6:	f001 ff1f 	bl	801cbf8 <HAL_I2C_IsDeviceReady>
 801adba:	4603      	mov	r3, r0
 801adbc:	2b00      	cmp	r3, #0
 801adbe:	d001      	beq.n	801adc4 <lcd16x2_i2c_init+0x44>
    {
      return false;
 801adc0:	2300      	movs	r3, #0
 801adc2:	e040      	b.n	801ae46 <lcd16x2_i2c_init+0xc6>
    }
    else
    {
      LCD_I2C_SLAVE_ADDRESS = LCD_I2C_SLAVE_ADDRESS_1;
 801adc4:	4b23      	ldr	r3, [pc, #140]	; (801ae54 <lcd16x2_i2c_init+0xd4>)
 801adc6:	227e      	movs	r2, #126	; 0x7e
 801adc8:	701a      	strb	r2, [r3, #0]
 801adca:	e002      	b.n	801add2 <lcd16x2_i2c_init+0x52>
    }
  }
  else
  {
    LCD_I2C_SLAVE_ADDRESS = LCD_I2C_SLAVE_ADDRESS_0;
 801adcc:	4b21      	ldr	r3, [pc, #132]	; (801ae54 <lcd16x2_i2c_init+0xd4>)
 801adce:	224e      	movs	r2, #78	; 0x4e
 801add0:	701a      	strb	r2, [r3, #0]
  }
  //Initialise LCD for 4-bit operation
  //1. Wait at least 15ms
  HAL_Delay(45);
 801add2:	202d      	movs	r0, #45	; 0x2d
 801add4:	f000 fef2 	bl	801bbbc <HAL_Delay>
  //2. Attentions sequence
  lcd16x2_i2c_sendCommand(0x30);
 801add8:	2030      	movs	r0, #48	; 0x30
 801adda:	f7ff ff69 	bl	801acb0 <lcd16x2_i2c_sendCommand>
  HAL_Delay(5);
 801adde:	2005      	movs	r0, #5
 801ade0:	f000 feec 	bl	801bbbc <HAL_Delay>
  lcd16x2_i2c_sendCommand(0x30);
 801ade4:	2030      	movs	r0, #48	; 0x30
 801ade6:	f7ff ff63 	bl	801acb0 <lcd16x2_i2c_sendCommand>
  HAL_Delay(1);
 801adea:	2001      	movs	r0, #1
 801adec:	f000 fee6 	bl	801bbbc <HAL_Delay>
  lcd16x2_i2c_sendCommand(0x30);
 801adf0:	2030      	movs	r0, #48	; 0x30
 801adf2:	f7ff ff5d 	bl	801acb0 <lcd16x2_i2c_sendCommand>
  HAL_Delay(8);
 801adf6:	2008      	movs	r0, #8
 801adf8:	f000 fee0 	bl	801bbbc <HAL_Delay>
  lcd16x2_i2c_sendCommand(0x20);
 801adfc:	2020      	movs	r0, #32
 801adfe:	f7ff ff57 	bl	801acb0 <lcd16x2_i2c_sendCommand>
  HAL_Delay(8);
 801ae02:	2008      	movs	r0, #8
 801ae04:	f000 feda 	bl	801bbbc <HAL_Delay>

  lcd16x2_i2c_sendCommand(LCD_FUNCTIONSET | LCD_FUNCTION_N);
 801ae08:	2028      	movs	r0, #40	; 0x28
 801ae0a:	f7ff ff51 	bl	801acb0 <lcd16x2_i2c_sendCommand>
  HAL_Delay(1);
 801ae0e:	2001      	movs	r0, #1
 801ae10:	f000 fed4 	bl	801bbbc <HAL_Delay>
  lcd16x2_i2c_sendCommand(LCD_DISPLAYCONTROL);
 801ae14:	2008      	movs	r0, #8
 801ae16:	f7ff ff4b 	bl	801acb0 <lcd16x2_i2c_sendCommand>
  HAL_Delay(1);
 801ae1a:	2001      	movs	r0, #1
 801ae1c:	f000 fece 	bl	801bbbc <HAL_Delay>
  lcd16x2_i2c_sendCommand(LCD_CLEARDISPLAY);
 801ae20:	2001      	movs	r0, #1
 801ae22:	f7ff ff45 	bl	801acb0 <lcd16x2_i2c_sendCommand>
  HAL_Delay(3);
 801ae26:	2003      	movs	r0, #3
 801ae28:	f000 fec8 	bl	801bbbc <HAL_Delay>
  lcd16x2_i2c_sendCommand(0x04 | LCD_ENTRY_ID);
 801ae2c:	2006      	movs	r0, #6
 801ae2e:	f7ff ff3f 	bl	801acb0 <lcd16x2_i2c_sendCommand>
  HAL_Delay(1);
 801ae32:	2001      	movs	r0, #1
 801ae34:	f000 fec2 	bl	801bbbc <HAL_Delay>
  lcd16x2_i2c_sendCommand(LCD_DISPLAYCONTROL | LCD_DISPLAY_D);
 801ae38:	200c      	movs	r0, #12
 801ae3a:	f7ff ff39 	bl	801acb0 <lcd16x2_i2c_sendCommand>
  HAL_Delay(3);
 801ae3e:	2003      	movs	r0, #3
 801ae40:	f000 febc 	bl	801bbbc <HAL_Delay>

  return true;
 801ae44:	2301      	movs	r3, #1
}
 801ae46:	4618      	mov	r0, r3
 801ae48:	3708      	adds	r7, #8
 801ae4a:	46bd      	mov	sp, r7
 801ae4c:	bd80      	pop	{r7, pc}
 801ae4e:	bf00      	nop
 801ae50:	20000090 	.word	0x20000090
 801ae54:	20000094 	.word	0x20000094

0801ae58 <lcd16x2_i2c_setCursor>:
 * @brief Set cursor position
 * @param[in] row - 0 or 1 for line1 or line2
 * @param[in] col - 0 - 15 (16 columns LCD)
 */
void lcd16x2_i2c_setCursor(uint8_t row, uint8_t col)
{
 801ae58:	b580      	push	{r7, lr}
 801ae5a:	b084      	sub	sp, #16
 801ae5c:	af00      	add	r7, sp, #0
 801ae5e:	4603      	mov	r3, r0
 801ae60:	460a      	mov	r2, r1
 801ae62:	71fb      	strb	r3, [r7, #7]
 801ae64:	4613      	mov	r3, r2
 801ae66:	71bb      	strb	r3, [r7, #6]
  uint8_t maskData;
  maskData = (col)&0x0F;
 801ae68:	79bb      	ldrb	r3, [r7, #6]
 801ae6a:	f003 030f 	and.w	r3, r3, #15
 801ae6e:	73fb      	strb	r3, [r7, #15]
  if(row==0)
 801ae70:	79fb      	ldrb	r3, [r7, #7]
 801ae72:	2b00      	cmp	r3, #0
 801ae74:	d108      	bne.n	801ae88 <lcd16x2_i2c_setCursor+0x30>
  {
    maskData |= (0x80);
 801ae76:	7bfb      	ldrb	r3, [r7, #15]
 801ae78:	f063 037f 	orn	r3, r3, #127	; 0x7f
 801ae7c:	73fb      	strb	r3, [r7, #15]
    lcd16x2_i2c_sendCommand(maskData);
 801ae7e:	7bfb      	ldrb	r3, [r7, #15]
 801ae80:	4618      	mov	r0, r3
 801ae82:	f7ff ff15 	bl	801acb0 <lcd16x2_i2c_sendCommand>
  else
  {
    maskData |= (0xc0);
    lcd16x2_i2c_sendCommand(maskData);
  }
}
 801ae86:	e007      	b.n	801ae98 <lcd16x2_i2c_setCursor+0x40>
    maskData |= (0xc0);
 801ae88:	7bfb      	ldrb	r3, [r7, #15]
 801ae8a:	f063 033f 	orn	r3, r3, #63	; 0x3f
 801ae8e:	73fb      	strb	r3, [r7, #15]
    lcd16x2_i2c_sendCommand(maskData);
 801ae90:	7bfb      	ldrb	r3, [r7, #15]
 801ae92:	4618      	mov	r0, r3
 801ae94:	f7ff ff0c 	bl	801acb0 <lcd16x2_i2c_sendCommand>
}
 801ae98:	bf00      	nop
 801ae9a:	3710      	adds	r7, #16
 801ae9c:	46bd      	mov	sp, r7
 801ae9e:	bd80      	pop	{r7, pc}

0801aea0 <lcd16x2_i2c_2ndLine>:
}
/**
 * @brief Move to beginning of 2nd line
 */
void lcd16x2_i2c_2ndLine(void)
{
 801aea0:	b580      	push	{r7, lr}
 801aea2:	af00      	add	r7, sp, #0
  lcd16x2_i2c_setCursor(1,0);
 801aea4:	2100      	movs	r1, #0
 801aea6:	2001      	movs	r0, #1
 801aea8:	f7ff ffd6 	bl	801ae58 <lcd16x2_i2c_setCursor>
}
 801aeac:	bf00      	nop
 801aeae:	bd80      	pop	{r7, pc}

0801aeb0 <lcd16x2_i2c_clear>:

/**
 * @brief Display clear
 */
void lcd16x2_i2c_clear(void)
{
 801aeb0:	b580      	push	{r7, lr}
 801aeb2:	af00      	add	r7, sp, #0
  lcd16x2_i2c_sendCommand(LCD_CLEARDISPLAY);
 801aeb4:	2001      	movs	r0, #1
 801aeb6:	f7ff fefb 	bl	801acb0 <lcd16x2_i2c_sendCommand>
  HAL_Delay(3);
 801aeba:	2003      	movs	r0, #3
 801aebc:	f000 fe7e 	bl	801bbbc <HAL_Delay>
}
 801aec0:	bf00      	nop
 801aec2:	bd80      	pop	{r7, pc}

0801aec4 <lcd16x2_i2c_printf>:

/**
 * @brief Print to display
 */
void lcd16x2_i2c_printf(const char* str, ...)
{
 801aec4:	b40f      	push	{r0, r1, r2, r3}
 801aec6:	b590      	push	{r4, r7, lr}
 801aec8:	b089      	sub	sp, #36	; 0x24
 801aeca:	af00      	add	r7, sp, #0
  char stringArray[20];
  va_list args;
  va_start(args, str);
 801aecc:	f107 0334 	add.w	r3, r7, #52	; 0x34
 801aed0:	607b      	str	r3, [r7, #4]
  vsprintf(stringArray, str, args);
 801aed2:	f107 0308 	add.w	r3, r7, #8
 801aed6:	687a      	ldr	r2, [r7, #4]
 801aed8:	6b39      	ldr	r1, [r7, #48]	; 0x30
 801aeda:	4618      	mov	r0, r3
 801aedc:	f004 f82c 	bl	801ef38 <vsiprintf>
  va_end(args);
  for(uint8_t i=0;  i<strlen(stringArray) && i<16; i++)
 801aee0:	2300      	movs	r3, #0
 801aee2:	77fb      	strb	r3, [r7, #31]
 801aee4:	e00b      	b.n	801aefe <lcd16x2_i2c_printf+0x3a>
  {
    lcd16x2_i2c_sendData((uint8_t)stringArray[i]);
 801aee6:	7ffb      	ldrb	r3, [r7, #31]
 801aee8:	f107 0220 	add.w	r2, r7, #32
 801aeec:	4413      	add	r3, r2
 801aeee:	f813 3c18 	ldrb.w	r3, [r3, #-24]
 801aef2:	4618      	mov	r0, r3
 801aef4:	f7ff ff10 	bl	801ad18 <lcd16x2_i2c_sendData>
  for(uint8_t i=0;  i<strlen(stringArray) && i<16; i++)
 801aef8:	7ffb      	ldrb	r3, [r7, #31]
 801aefa:	3301      	adds	r3, #1
 801aefc:	77fb      	strb	r3, [r7, #31]
 801aefe:	7ffc      	ldrb	r4, [r7, #31]
 801af00:	f107 0308 	add.w	r3, r7, #8
 801af04:	4618      	mov	r0, r3
 801af06:	f7e5 f96b 	bl	80001e0 <strlen>
 801af0a:	4603      	mov	r3, r0
 801af0c:	429c      	cmp	r4, r3
 801af0e:	d202      	bcs.n	801af16 <lcd16x2_i2c_printf+0x52>
 801af10:	7ffb      	ldrb	r3, [r7, #31]
 801af12:	2b0f      	cmp	r3, #15
 801af14:	d9e7      	bls.n	801aee6 <lcd16x2_i2c_printf+0x22>
  }
}
 801af16:	bf00      	nop
 801af18:	3724      	adds	r7, #36	; 0x24
 801af1a:	46bd      	mov	sp, r7
 801af1c:	e8bd 4090 	ldmia.w	sp!, {r4, r7, lr}
 801af20:	b004      	add	sp, #16
 801af22:	4770      	bx	lr

0801af24 <read_GPIO>:
// DEFINE 99 AS THE BAD VALUE THAT SHOULD NOT BE CONSIDERED

// ********************************************************


uint8_t read_GPIO(){
 801af24:	b580      	push	{r7, lr}
 801af26:	af00      	add	r7, sp, #0

	if(!HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4)){			// if GPIO is low
 801af28:	2110      	movs	r1, #16
 801af2a:	4824      	ldr	r0, [pc, #144]	; (801afbc <read_GPIO+0x98>)
 801af2c:	f001 fbe4 	bl	801c6f8 <HAL_GPIO_ReadPin>
 801af30:	4603      	mov	r3, r0
 801af32:	2b00      	cmp	r3, #0
 801af34:	d109      	bne.n	801af4a <read_GPIO+0x26>
		while(!HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_4));	// wait till GPIO return high
 801af36:	bf00      	nop
 801af38:	2110      	movs	r1, #16
 801af3a:	4820      	ldr	r0, [pc, #128]	; (801afbc <read_GPIO+0x98>)
 801af3c:	f001 fbdc 	bl	801c6f8 <HAL_GPIO_ReadPin>
 801af40:	4603      	mov	r3, r0
 801af42:	2b00      	cmp	r3, #0
 801af44:	d0f8      	beq.n	801af38 <read_GPIO+0x14>
		return 1;
 801af46:	2301      	movs	r3, #1
 801af48:	e035      	b.n	801afb6 <read_GPIO+0x92>
	}
	if(!HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5)){
 801af4a:	2120      	movs	r1, #32
 801af4c:	481b      	ldr	r0, [pc, #108]	; (801afbc <read_GPIO+0x98>)
 801af4e:	f001 fbd3 	bl	801c6f8 <HAL_GPIO_ReadPin>
 801af52:	4603      	mov	r3, r0
 801af54:	2b00      	cmp	r3, #0
 801af56:	d109      	bne.n	801af6c <read_GPIO+0x48>
		while(!HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_5));
 801af58:	bf00      	nop
 801af5a:	2120      	movs	r1, #32
 801af5c:	4817      	ldr	r0, [pc, #92]	; (801afbc <read_GPIO+0x98>)
 801af5e:	f001 fbcb 	bl	801c6f8 <HAL_GPIO_ReadPin>
 801af62:	4603      	mov	r3, r0
 801af64:	2b00      	cmp	r3, #0
 801af66:	d0f8      	beq.n	801af5a <read_GPIO+0x36>
		return 2;
 801af68:	2302      	movs	r3, #2
 801af6a:	e024      	b.n	801afb6 <read_GPIO+0x92>
	}
	if(!HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_3)){
 801af6c:	2108      	movs	r1, #8
 801af6e:	4813      	ldr	r0, [pc, #76]	; (801afbc <read_GPIO+0x98>)
 801af70:	f001 fbc2 	bl	801c6f8 <HAL_GPIO_ReadPin>
 801af74:	4603      	mov	r3, r0
 801af76:	2b00      	cmp	r3, #0
 801af78:	d109      	bne.n	801af8e <read_GPIO+0x6a>
		while(!HAL_GPIO_ReadPin(GPIOB, GPIO_PIN_3));
 801af7a:	bf00      	nop
 801af7c:	2108      	movs	r1, #8
 801af7e:	480f      	ldr	r0, [pc, #60]	; (801afbc <read_GPIO+0x98>)
 801af80:	f001 fbba 	bl	801c6f8 <HAL_GPIO_ReadPin>
 801af84:	4603      	mov	r3, r0
 801af86:	2b00      	cmp	r3, #0
 801af88:	d0f8      	beq.n	801af7c <read_GPIO+0x58>
		return 3;
 801af8a:	2303      	movs	r3, #3
 801af8c:	e013      	b.n	801afb6 <read_GPIO+0x92>
	}
	if(!HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10)){
 801af8e:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801af92:	480b      	ldr	r0, [pc, #44]	; (801afc0 <read_GPIO+0x9c>)
 801af94:	f001 fbb0 	bl	801c6f8 <HAL_GPIO_ReadPin>
 801af98:	4603      	mov	r3, r0
 801af9a:	2b00      	cmp	r3, #0
 801af9c:	d10a      	bne.n	801afb4 <read_GPIO+0x90>
		while(!HAL_GPIO_ReadPin(GPIOA, GPIO_PIN_10));
 801af9e:	bf00      	nop
 801afa0:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801afa4:	4806      	ldr	r0, [pc, #24]	; (801afc0 <read_GPIO+0x9c>)
 801afa6:	f001 fba7 	bl	801c6f8 <HAL_GPIO_ReadPin>
 801afaa:	4603      	mov	r3, r0
 801afac:	2b00      	cmp	r3, #0
 801afae:	d0f7      	beq.n	801afa0 <read_GPIO+0x7c>
		return 4;
 801afb0:	2304      	movs	r3, #4
 801afb2:	e000      	b.n	801afb6 <read_GPIO+0x92>
	}

	return 99;
 801afb4:	2363      	movs	r3, #99	; 0x63
}
 801afb6:	4618      	mov	r0, r3
 801afb8:	bd80      	pop	{r7, pc}
 801afba:	bf00      	nop
 801afbc:	40020400 	.word	0x40020400
 801afc0:	40020000 	.word	0x40020000

0801afc4 <write_GPIO>:

void write_GPIO(uint8_t riga){
 801afc4:	b580      	push	{r7, lr}
 801afc6:	b084      	sub	sp, #16
 801afc8:	af00      	add	r7, sp, #0
 801afca:	4603      	mov	r3, r0
 801afcc:	71fb      	strb	r3, [r7, #7]

	GPIO_PinState state_row1 = GPIO_PIN_SET;
 801afce:	2301      	movs	r3, #1
 801afd0:	73fb      	strb	r3, [r7, #15]
	GPIO_PinState state_row2 = GPIO_PIN_SET;
 801afd2:	2301      	movs	r3, #1
 801afd4:	73bb      	strb	r3, [r7, #14]
	GPIO_PinState state_row3 = GPIO_PIN_SET;
 801afd6:	2301      	movs	r3, #1
 801afd8:	737b      	strb	r3, [r7, #13]
	GPIO_PinState state_row4 = GPIO_PIN_SET;
 801afda:	2301      	movs	r3, #1
 801afdc:	733b      	strb	r3, [r7, #12]

	if(riga==1){
 801afde:	79fb      	ldrb	r3, [r7, #7]
 801afe0:	2b01      	cmp	r3, #1
 801afe2:	d102      	bne.n	801afea <write_GPIO+0x26>
		state_row1 = GPIO_PIN_RESET;
 801afe4:	2300      	movs	r3, #0
 801afe6:	73fb      	strb	r3, [r7, #15]
 801afe8:	e010      	b.n	801b00c <write_GPIO+0x48>
	}else if(riga==2){
 801afea:	79fb      	ldrb	r3, [r7, #7]
 801afec:	2b02      	cmp	r3, #2
 801afee:	d102      	bne.n	801aff6 <write_GPIO+0x32>
		state_row2 = GPIO_PIN_RESET;
 801aff0:	2300      	movs	r3, #0
 801aff2:	73bb      	strb	r3, [r7, #14]
 801aff4:	e00a      	b.n	801b00c <write_GPIO+0x48>
	}else if(riga==3){
 801aff6:	79fb      	ldrb	r3, [r7, #7]
 801aff8:	2b03      	cmp	r3, #3
 801affa:	d102      	bne.n	801b002 <write_GPIO+0x3e>
		state_row3 = GPIO_PIN_RESET;
 801affc:	2300      	movs	r3, #0
 801affe:	737b      	strb	r3, [r7, #13]
 801b000:	e004      	b.n	801b00c <write_GPIO+0x48>
	}else if(riga==4){
 801b002:	79fb      	ldrb	r3, [r7, #7]
 801b004:	2b04      	cmp	r3, #4
 801b006:	d101      	bne.n	801b00c <write_GPIO+0x48>
		state_row4 = GPIO_PIN_RESET;
 801b008:	2300      	movs	r3, #0
 801b00a:	733b      	strb	r3, [r7, #12]
	}

	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, state_row1);
 801b00c:	7bfb      	ldrb	r3, [r7, #15]
 801b00e:	461a      	mov	r2, r3
 801b010:	2180      	movs	r1, #128	; 0x80
 801b012:	480e      	ldr	r0, [pc, #56]	; (801b04c <write_GPIO+0x88>)
 801b014:	f001 fb88 	bl	801c728 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, state_row2);
 801b018:	7bbb      	ldrb	r3, [r7, #14]
 801b01a:	461a      	mov	r2, r3
 801b01c:	f44f 7100 	mov.w	r1, #512	; 0x200
 801b020:	480b      	ldr	r0, [pc, #44]	; (801b050 <write_GPIO+0x8c>)
 801b022:	f001 fb81 	bl	801c728 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, state_row3);
 801b026:	7b7b      	ldrb	r3, [r7, #13]
 801b028:	461a      	mov	r2, r3
 801b02a:	f44f 7180 	mov.w	r1, #256	; 0x100
 801b02e:	4808      	ldr	r0, [pc, #32]	; (801b050 <write_GPIO+0x8c>)
 801b030:	f001 fb7a 	bl	801c728 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, state_row4);
 801b034:	7b3b      	ldrb	r3, [r7, #12]
 801b036:	461a      	mov	r2, r3
 801b038:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801b03c:	4805      	ldr	r0, [pc, #20]	; (801b054 <write_GPIO+0x90>)
 801b03e:	f001 fb73 	bl	801c728 <HAL_GPIO_WritePin>
}
 801b042:	bf00      	nop
 801b044:	3710      	adds	r7, #16
 801b046:	46bd      	mov	sp, r7
 801b048:	bd80      	pop	{r7, pc}
 801b04a:	bf00      	nop
 801b04c:	40020800 	.word	0x40020800
 801b050:	40020000 	.word	0x40020000
 801b054:	40020400 	.word	0x40020400

0801b058 <decode_key_v2>:


uint8_t decode_key_v2(uint8_t row, uint8_t col){
 801b058:	b480      	push	{r7}
 801b05a:	b085      	sub	sp, #20
 801b05c:	af00      	add	r7, sp, #0
 801b05e:	4603      	mov	r3, r0
 801b060:	460a      	mov	r2, r1
 801b062:	71fb      	strb	r3, [r7, #7]
 801b064:	4613      	mov	r3, r2
 801b066:	71bb      	strb	r3, [r7, #6]
	uint8_t key;

	switch(row){
 801b068:	79fb      	ldrb	r3, [r7, #7]
 801b06a:	3b01      	subs	r3, #1
 801b06c:	2b03      	cmp	r3, #3
 801b06e:	d85f      	bhi.n	801b130 <decode_key_v2+0xd8>
 801b070:	a201      	add	r2, pc, #4	; (adr r2, 801b078 <decode_key_v2+0x20>)
 801b072:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801b076:	bf00      	nop
 801b078:	0801b089 	.word	0x0801b089
 801b07c:	0801b0b3 	.word	0x0801b0b3
 801b080:	0801b0dd 	.word	0x0801b0dd
 801b084:	0801b107 	.word	0x0801b107
		case(1):
			if (col==1) key=1;
 801b088:	79bb      	ldrb	r3, [r7, #6]
 801b08a:	2b01      	cmp	r3, #1
 801b08c:	d101      	bne.n	801b092 <decode_key_v2+0x3a>
 801b08e:	2301      	movs	r3, #1
 801b090:	73fb      	strb	r3, [r7, #15]
			if (col==2) key=2;
 801b092:	79bb      	ldrb	r3, [r7, #6]
 801b094:	2b02      	cmp	r3, #2
 801b096:	d101      	bne.n	801b09c <decode_key_v2+0x44>
 801b098:	2302      	movs	r3, #2
 801b09a:	73fb      	strb	r3, [r7, #15]
			if (col==3) key=3;
 801b09c:	79bb      	ldrb	r3, [r7, #6]
 801b09e:	2b03      	cmp	r3, #3
 801b0a0:	d101      	bne.n	801b0a6 <decode_key_v2+0x4e>
 801b0a2:	2303      	movs	r3, #3
 801b0a4:	73fb      	strb	r3, [r7, #15]
			if (col==4) key=10;
 801b0a6:	79bb      	ldrb	r3, [r7, #6]
 801b0a8:	2b04      	cmp	r3, #4
 801b0aa:	d144      	bne.n	801b136 <decode_key_v2+0xde>
 801b0ac:	230a      	movs	r3, #10
 801b0ae:	73fb      	strb	r3, [r7, #15]
			break;
 801b0b0:	e041      	b.n	801b136 <decode_key_v2+0xde>
		case(2):
			if (col==1) key=4;
 801b0b2:	79bb      	ldrb	r3, [r7, #6]
 801b0b4:	2b01      	cmp	r3, #1
 801b0b6:	d101      	bne.n	801b0bc <decode_key_v2+0x64>
 801b0b8:	2304      	movs	r3, #4
 801b0ba:	73fb      	strb	r3, [r7, #15]
			if (col==2) key=5;
 801b0bc:	79bb      	ldrb	r3, [r7, #6]
 801b0be:	2b02      	cmp	r3, #2
 801b0c0:	d101      	bne.n	801b0c6 <decode_key_v2+0x6e>
 801b0c2:	2305      	movs	r3, #5
 801b0c4:	73fb      	strb	r3, [r7, #15]
			if (col==3) key=6;
 801b0c6:	79bb      	ldrb	r3, [r7, #6]
 801b0c8:	2b03      	cmp	r3, #3
 801b0ca:	d101      	bne.n	801b0d0 <decode_key_v2+0x78>
 801b0cc:	2306      	movs	r3, #6
 801b0ce:	73fb      	strb	r3, [r7, #15]
			if (col==4) key=20;
 801b0d0:	79bb      	ldrb	r3, [r7, #6]
 801b0d2:	2b04      	cmp	r3, #4
 801b0d4:	d131      	bne.n	801b13a <decode_key_v2+0xe2>
 801b0d6:	2314      	movs	r3, #20
 801b0d8:	73fb      	strb	r3, [r7, #15]
			break;
 801b0da:	e02e      	b.n	801b13a <decode_key_v2+0xe2>
		case(3):
			if (col==1) key=7;
 801b0dc:	79bb      	ldrb	r3, [r7, #6]
 801b0de:	2b01      	cmp	r3, #1
 801b0e0:	d101      	bne.n	801b0e6 <decode_key_v2+0x8e>
 801b0e2:	2307      	movs	r3, #7
 801b0e4:	73fb      	strb	r3, [r7, #15]
			if (col==2) key=8;
 801b0e6:	79bb      	ldrb	r3, [r7, #6]
 801b0e8:	2b02      	cmp	r3, #2
 801b0ea:	d101      	bne.n	801b0f0 <decode_key_v2+0x98>
 801b0ec:	2308      	movs	r3, #8
 801b0ee:	73fb      	strb	r3, [r7, #15]
			if (col==3) key=9;
 801b0f0:	79bb      	ldrb	r3, [r7, #6]
 801b0f2:	2b03      	cmp	r3, #3
 801b0f4:	d101      	bne.n	801b0fa <decode_key_v2+0xa2>
 801b0f6:	2309      	movs	r3, #9
 801b0f8:	73fb      	strb	r3, [r7, #15]
			if (col==4) key=30;
 801b0fa:	79bb      	ldrb	r3, [r7, #6]
 801b0fc:	2b04      	cmp	r3, #4
 801b0fe:	d11e      	bne.n	801b13e <decode_key_v2+0xe6>
 801b100:	231e      	movs	r3, #30
 801b102:	73fb      	strb	r3, [r7, #15]
			break;
 801b104:	e01b      	b.n	801b13e <decode_key_v2+0xe6>
		case(4):
			if (col==1) key=40;
 801b106:	79bb      	ldrb	r3, [r7, #6]
 801b108:	2b01      	cmp	r3, #1
 801b10a:	d101      	bne.n	801b110 <decode_key_v2+0xb8>
 801b10c:	2328      	movs	r3, #40	; 0x28
 801b10e:	73fb      	strb	r3, [r7, #15]
			if (col==2) key=0;
 801b110:	79bb      	ldrb	r3, [r7, #6]
 801b112:	2b02      	cmp	r3, #2
 801b114:	d101      	bne.n	801b11a <decode_key_v2+0xc2>
 801b116:	2300      	movs	r3, #0
 801b118:	73fb      	strb	r3, [r7, #15]
			if (col==3) key=50;
 801b11a:	79bb      	ldrb	r3, [r7, #6]
 801b11c:	2b03      	cmp	r3, #3
 801b11e:	d101      	bne.n	801b124 <decode_key_v2+0xcc>
 801b120:	2332      	movs	r3, #50	; 0x32
 801b122:	73fb      	strb	r3, [r7, #15]
			if (col==4) key=60;
 801b124:	79bb      	ldrb	r3, [r7, #6]
 801b126:	2b04      	cmp	r3, #4
 801b128:	d10b      	bne.n	801b142 <decode_key_v2+0xea>
 801b12a:	233c      	movs	r3, #60	; 0x3c
 801b12c:	73fb      	strb	r3, [r7, #15]
			break;
 801b12e:	e008      	b.n	801b142 <decode_key_v2+0xea>
		default:
			key=99;
 801b130:	2363      	movs	r3, #99	; 0x63
 801b132:	73fb      	strb	r3, [r7, #15]
			break;
 801b134:	e006      	b.n	801b144 <decode_key_v2+0xec>
			break;
 801b136:	bf00      	nop
 801b138:	e004      	b.n	801b144 <decode_key_v2+0xec>
			break;
 801b13a:	bf00      	nop
 801b13c:	e002      	b.n	801b144 <decode_key_v2+0xec>
			break;
 801b13e:	bf00      	nop
 801b140:	e000      	b.n	801b144 <decode_key_v2+0xec>
			break;
 801b142:	bf00      	nop
	}

	return key;
 801b144:	7bfb      	ldrb	r3, [r7, #15]
}
 801b146:	4618      	mov	r0, r3
 801b148:	3714      	adds	r7, #20
 801b14a:	46bd      	mov	sp, r7
 801b14c:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b150:	4770      	bx	lr
 801b152:	bf00      	nop

0801b154 <read_key_v2>:


// Perform a polling on each row in order to detect the selection of a key
uint8_t read_key_v2(){
 801b154:	b580      	push	{r7, lr}
 801b156:	b082      	sub	sp, #8
 801b158:	af00      	add	r7, sp, #0

	uint8_t key = 99;     		// 99 is the DISCARD number
 801b15a:	2363      	movs	r3, #99	; 0x63
 801b15c:	71fb      	strb	r3, [r7, #7]
	uint8_t col_read = 99;
 801b15e:	2363      	movs	r3, #99	; 0x63
 801b160:	71bb      	strb	r3, [r7, #6]

	// stay in polling and wait for a button to be pressed
	while(true){

		// *** FIRST row
		write_GPIO(1);						// write 4 status of row GPIO (enable GPIO of row1)
 801b162:	2001      	movs	r0, #1
 801b164:	f7ff ff2e 	bl	801afc4 <write_GPIO>
		col_read = read_GPIO();				// read 4 status of col GPIO
 801b168:	f7ff fedc 	bl	801af24 <read_GPIO>
 801b16c:	4603      	mov	r3, r0
 801b16e:	71bb      	strb	r3, [r7, #6]
		if(col_read != 99) {
 801b170:	79bb      	ldrb	r3, [r7, #6]
 801b172:	2b63      	cmp	r3, #99	; 0x63
 801b174:	d008      	beq.n	801b188 <read_key_v2+0x34>
			key = decode_key_v2(1, col_read);		// decode which button has been pressed
 801b176:	79bb      	ldrb	r3, [r7, #6]
 801b178:	4619      	mov	r1, r3
 801b17a:	2001      	movs	r0, #1
 801b17c:	f7ff ff6c 	bl	801b058 <decode_key_v2>
 801b180:	4603      	mov	r3, r0
 801b182:	71fb      	strb	r3, [r7, #7]
			return key;
 801b184:	79fb      	ldrb	r3, [r7, #7]
 801b186:	e037      	b.n	801b1f8 <read_key_v2+0xa4>
		}

		// *** SECOND row
		write_GPIO(2);
 801b188:	2002      	movs	r0, #2
 801b18a:	f7ff ff1b 	bl	801afc4 <write_GPIO>
		col_read = read_GPIO();
 801b18e:	f7ff fec9 	bl	801af24 <read_GPIO>
 801b192:	4603      	mov	r3, r0
 801b194:	71bb      	strb	r3, [r7, #6]
		if(col_read != 99){
 801b196:	79bb      	ldrb	r3, [r7, #6]
 801b198:	2b63      	cmp	r3, #99	; 0x63
 801b19a:	d008      	beq.n	801b1ae <read_key_v2+0x5a>
			key = decode_key_v2(2, col_read);
 801b19c:	79bb      	ldrb	r3, [r7, #6]
 801b19e:	4619      	mov	r1, r3
 801b1a0:	2002      	movs	r0, #2
 801b1a2:	f7ff ff59 	bl	801b058 <decode_key_v2>
 801b1a6:	4603      	mov	r3, r0
 801b1a8:	71fb      	strb	r3, [r7, #7]
			return key;
 801b1aa:	79fb      	ldrb	r3, [r7, #7]
 801b1ac:	e024      	b.n	801b1f8 <read_key_v2+0xa4>
		}

		// *** THIRD row
		write_GPIO(3);
 801b1ae:	2003      	movs	r0, #3
 801b1b0:	f7ff ff08 	bl	801afc4 <write_GPIO>
		col_read = read_GPIO();
 801b1b4:	f7ff feb6 	bl	801af24 <read_GPIO>
 801b1b8:	4603      	mov	r3, r0
 801b1ba:	71bb      	strb	r3, [r7, #6]
		if(col_read != 99){
 801b1bc:	79bb      	ldrb	r3, [r7, #6]
 801b1be:	2b63      	cmp	r3, #99	; 0x63
 801b1c0:	d008      	beq.n	801b1d4 <read_key_v2+0x80>
			key = decode_key_v2(3, col_read);
 801b1c2:	79bb      	ldrb	r3, [r7, #6]
 801b1c4:	4619      	mov	r1, r3
 801b1c6:	2003      	movs	r0, #3
 801b1c8:	f7ff ff46 	bl	801b058 <decode_key_v2>
 801b1cc:	4603      	mov	r3, r0
 801b1ce:	71fb      	strb	r3, [r7, #7]
			return key;
 801b1d0:	79fb      	ldrb	r3, [r7, #7]
 801b1d2:	e011      	b.n	801b1f8 <read_key_v2+0xa4>
		}

		// *** FORTH row
		write_GPIO(4);
 801b1d4:	2004      	movs	r0, #4
 801b1d6:	f7ff fef5 	bl	801afc4 <write_GPIO>
		col_read = read_GPIO();
 801b1da:	f7ff fea3 	bl	801af24 <read_GPIO>
 801b1de:	4603      	mov	r3, r0
 801b1e0:	71bb      	strb	r3, [r7, #6]
		if(col_read != 99){
 801b1e2:	79bb      	ldrb	r3, [r7, #6]
 801b1e4:	2b63      	cmp	r3, #99	; 0x63
 801b1e6:	d0bc      	beq.n	801b162 <read_key_v2+0xe>
			key = decode_key_v2(4, col_read);
 801b1e8:	79bb      	ldrb	r3, [r7, #6]
 801b1ea:	4619      	mov	r1, r3
 801b1ec:	2004      	movs	r0, #4
 801b1ee:	f7ff ff33 	bl	801b058 <decode_key_v2>
 801b1f2:	4603      	mov	r3, r0
 801b1f4:	71fb      	strb	r3, [r7, #7]
			return key;
 801b1f6:	79fb      	ldrb	r3, [r7, #7]
		}
	}

	return 99;
}
 801b1f8:	4618      	mov	r0, r3
 801b1fa:	3708      	adds	r7, #8
 801b1fc:	46bd      	mov	sp, r7
 801b1fe:	bd80      	pop	{r7, pc}

0801b200 <keypad_getNumber_v2>:


uint32_t keypad_getNumber_v2(){
 801b200:	b5f0      	push	{r4, r5, r6, r7, lr}
 801b202:	b0a1      	sub	sp, #132	; 0x84
 801b204:	af00      	add	r7, sp, #0

	uint8_t inputDigit[10];
	uint32_t number=0;
 801b206:	2300      	movs	r3, #0
 801b208:	67fb      	str	r3, [r7, #124]	; 0x7c
	uint8_t key;
	uint8_t i=0;
 801b20a:	2300      	movs	r3, #0
 801b20c:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b

	char msg[100];
	int msg_len;

	PRINTF("\n\r The digits selected are: ");
 801b210:	487b      	ldr	r0, [pc, #492]	; (801b400 <keypad_getNumber_v2+0x200>)
 801b212:	f7ff fba7 	bl	801a964 <PRINTF>
	lcd16x2_i2c_printf("ID:  ");
 801b216:	487b      	ldr	r0, [pc, #492]	; (801b404 <keypad_getNumber_v2+0x204>)
 801b218:	f7ff fe54 	bl	801aec4 <lcd16x2_i2c_printf>
	// until I press the ENTER button do:
	while(true){

		key = read_key_v2();		// returns the digit input
 801b21c:	f7ff ff9a 	bl	801b154 <read_key_v2>
 801b220:	4603      	mov	r3, r0
 801b222:	f887 3073 	strb.w	r3, [r7, #115]	; 0x73

		if(key==99){
 801b226:	f897 3073 	ldrb.w	r3, [r7, #115]	; 0x73
 801b22a:	2b63      	cmp	r3, #99	; 0x63
 801b22c:	d106      	bne.n	801b23c <keypad_getNumber_v2+0x3c>
			lcd16x2_i2c_printf("Error...");
 801b22e:	4876      	ldr	r0, [pc, #472]	; (801b408 <keypad_getNumber_v2+0x208>)
 801b230:	f7ff fe48 	bl	801aec4 <lcd16x2_i2c_printf>
			PRINTF("\n\r     Something went wrong");
 801b234:	4875      	ldr	r0, [pc, #468]	; (801b40c <keypad_getNumber_v2+0x20c>)
 801b236:	f7ff fb95 	bl	801a964 <PRINTF>
 801b23a:	e078      	b.n	801b32e <keypad_getNumber_v2+0x12e>
		}else if(key==10){			// A, exit insertion number
 801b23c:	f897 3073 	ldrb.w	r3, [r7, #115]	; 0x73
 801b240:	2b0a      	cmp	r3, #10
 801b242:	d10a      	bne.n	801b25a <keypad_getNumber_v2+0x5a>
			lcd16x2_i2c_printf(";");
 801b244:	4872      	ldr	r0, [pc, #456]	; (801b410 <keypad_getNumber_v2+0x210>)
 801b246:	f7ff fe3d 	bl	801aec4 <lcd16x2_i2c_printf>
			PRINTF("A-->end input mode");
 801b24a:	4872      	ldr	r0, [pc, #456]	; (801b414 <keypad_getNumber_v2+0x214>)
 801b24c:	f7ff fb8a 	bl	801a964 <PRINTF>
			break;
 801b250:	bf00      	nop

		//HAL_Delay(1000);		// To avoid long press error
	}

	// Transform the array in number
	for(int j=i; j>0; j--){
 801b252:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 801b256:	677b      	str	r3, [r7, #116]	; 0x74
 801b258:	e0a8      	b.n	801b3ac <keypad_getNumber_v2+0x1ac>
		}else if(key==20){		// B, nothing
 801b25a:	f897 3073 	ldrb.w	r3, [r7, #115]	; 0x73
 801b25e:	2b14      	cmp	r3, #20
 801b260:	d106      	bne.n	801b270 <keypad_getNumber_v2+0x70>
			lcd16x2_i2c_printf("B");
 801b262:	486d      	ldr	r0, [pc, #436]	; (801b418 <keypad_getNumber_v2+0x218>)
 801b264:	f7ff fe2e 	bl	801aec4 <lcd16x2_i2c_printf>
			PRINTF("B");
 801b268:	486b      	ldr	r0, [pc, #428]	; (801b418 <keypad_getNumber_v2+0x218>)
 801b26a:	f7ff fb7b 	bl	801a964 <PRINTF>
 801b26e:	e05e      	b.n	801b32e <keypad_getNumber_v2+0x12e>
		}else if(key==30){		// C, nothing
 801b270:	f897 3073 	ldrb.w	r3, [r7, #115]	; 0x73
 801b274:	2b1e      	cmp	r3, #30
 801b276:	d106      	bne.n	801b286 <keypad_getNumber_v2+0x86>
			lcd16x2_i2c_printf("C");
 801b278:	4868      	ldr	r0, [pc, #416]	; (801b41c <keypad_getNumber_v2+0x21c>)
 801b27a:	f7ff fe23 	bl	801aec4 <lcd16x2_i2c_printf>
			PRINTF("C ");
 801b27e:	4868      	ldr	r0, [pc, #416]	; (801b420 <keypad_getNumber_v2+0x220>)
 801b280:	f7ff fb70 	bl	801a964 <PRINTF>
 801b284:	e053      	b.n	801b32e <keypad_getNumber_v2+0x12e>
		}else if(key==40){		// *, nothing
 801b286:	f897 3073 	ldrb.w	r3, [r7, #115]	; 0x73
 801b28a:	2b28      	cmp	r3, #40	; 0x28
 801b28c:	d106      	bne.n	801b29c <keypad_getNumber_v2+0x9c>
			lcd16x2_i2c_printf("*");
 801b28e:	4865      	ldr	r0, [pc, #404]	; (801b424 <keypad_getNumber_v2+0x224>)
 801b290:	f7ff fe18 	bl	801aec4 <lcd16x2_i2c_printf>
			PRINTF("* ");
 801b294:	4864      	ldr	r0, [pc, #400]	; (801b428 <keypad_getNumber_v2+0x228>)
 801b296:	f7ff fb65 	bl	801a964 <PRINTF>
 801b29a:	e048      	b.n	801b32e <keypad_getNumber_v2+0x12e>
		}else if(key==50){		// #, nothing
 801b29c:	f897 3073 	ldrb.w	r3, [r7, #115]	; 0x73
 801b2a0:	2b32      	cmp	r3, #50	; 0x32
 801b2a2:	d106      	bne.n	801b2b2 <keypad_getNumber_v2+0xb2>
			lcd16x2_i2c_printf("#");
 801b2a4:	4861      	ldr	r0, [pc, #388]	; (801b42c <keypad_getNumber_v2+0x22c>)
 801b2a6:	f7ff fe0d 	bl	801aec4 <lcd16x2_i2c_printf>
			PRINTF("# ");
 801b2aa:	4861      	ldr	r0, [pc, #388]	; (801b430 <keypad_getNumber_v2+0x230>)
 801b2ac:	f7ff fb5a 	bl	801a964 <PRINTF>
 801b2b0:	e03d      	b.n	801b32e <keypad_getNumber_v2+0x12e>
		}else if(key==60){		// D, delete last digit
 801b2b2:	f897 3073 	ldrb.w	r3, [r7, #115]	; 0x73
 801b2b6:	2b3c      	cmp	r3, #60	; 0x3c
 801b2b8:	d111      	bne.n	801b2de <keypad_getNumber_v2+0xde>
			i=-1;
 801b2ba:	23ff      	movs	r3, #255	; 0xff
 801b2bc:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
			inputDigit[i] = 0;
 801b2c0:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 801b2c4:	f107 0280 	add.w	r2, r7, #128	; 0x80
 801b2c8:	4413      	add	r3, r2
 801b2ca:	2200      	movs	r2, #0
 801b2cc:	f803 2c18 	strb.w	r2, [r3, #-24]
			lcd16x2_i2c_printf("del");
 801b2d0:	4858      	ldr	r0, [pc, #352]	; (801b434 <keypad_getNumber_v2+0x234>)
 801b2d2:	f7ff fdf7 	bl	801aec4 <lcd16x2_i2c_printf>
			PRINTF("DEL");
 801b2d6:	4858      	ldr	r0, [pc, #352]	; (801b438 <keypad_getNumber_v2+0x238>)
 801b2d8:	f7ff fb44 	bl	801a964 <PRINTF>
 801b2dc:	e027      	b.n	801b32e <keypad_getNumber_v2+0x12e>
		}else if(key>=0 && key<=9){	// number keys
 801b2de:	f897 3073 	ldrb.w	r3, [r7, #115]	; 0x73
 801b2e2:	2b09      	cmp	r3, #9
 801b2e4:	d823      	bhi.n	801b32e <keypad_getNumber_v2+0x12e>
			inputDigit[i] = key;
 801b2e6:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 801b2ea:	f107 0280 	add.w	r2, r7, #128	; 0x80
 801b2ee:	4413      	add	r3, r2
 801b2f0:	f897 2073 	ldrb.w	r2, [r7, #115]	; 0x73
 801b2f4:	f803 2c18 	strb.w	r2, [r3, #-24]
			lcd16x2_i2c_printf("%d", inputDigit[i]);
 801b2f8:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 801b2fc:	f107 0280 	add.w	r2, r7, #128	; 0x80
 801b300:	4413      	add	r3, r2
 801b302:	f813 3c18 	ldrb.w	r3, [r3, #-24]
 801b306:	4619      	mov	r1, r3
 801b308:	484c      	ldr	r0, [pc, #304]	; (801b43c <keypad_getNumber_v2+0x23c>)
 801b30a:	f7ff fddb 	bl	801aec4 <lcd16x2_i2c_printf>
			PRINTF8("%d ", inputDigit[i]);
 801b30e:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 801b312:	f107 0280 	add.w	r2, r7, #128	; 0x80
 801b316:	4413      	add	r3, r2
 801b318:	f813 3c18 	ldrb.w	r3, [r3, #-24]
 801b31c:	4619      	mov	r1, r3
 801b31e:	4848      	ldr	r0, [pc, #288]	; (801b440 <keypad_getNumber_v2+0x240>)
 801b320:	f7ff fb3a 	bl	801a998 <PRINTF8>
			i+=1;
 801b324:	f897 307b 	ldrb.w	r3, [r7, #123]	; 0x7b
 801b328:	3301      	adds	r3, #1
 801b32a:	f887 307b 	strb.w	r3, [r7, #123]	; 0x7b
		key=99;
 801b32e:	2363      	movs	r3, #99	; 0x63
 801b330:	f887 3073 	strb.w	r3, [r7, #115]	; 0x73
		key = read_key_v2();		// returns the digit input
 801b334:	e772      	b.n	801b21c <keypad_getNumber_v2+0x1c>
		number += pow(10, j-1)*inputDigit[i-j];
 801b336:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 801b338:	3b01      	subs	r3, #1
 801b33a:	4618      	mov	r0, r3
 801b33c:	f7e5 f8fa 	bl	8000534 <__aeabi_i2d>
 801b340:	4603      	mov	r3, r0
 801b342:	460c      	mov	r4, r1
 801b344:	ec44 3b11 	vmov	d1, r3, r4
 801b348:	ed9f 0b2b 	vldr	d0, [pc, #172]	; 801b3f8 <keypad_getNumber_v2+0x1f8>
 801b34c:	f004 f9e4 	bl	801f718 <pow>
 801b350:	ec56 5b10 	vmov	r5, r6, d0
 801b354:	f897 207b 	ldrb.w	r2, [r7, #123]	; 0x7b
 801b358:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 801b35a:	1ad3      	subs	r3, r2, r3
 801b35c:	f107 0280 	add.w	r2, r7, #128	; 0x80
 801b360:	4413      	add	r3, r2
 801b362:	f813 3c18 	ldrb.w	r3, [r3, #-24]
 801b366:	4618      	mov	r0, r3
 801b368:	f7e5 f8e4 	bl	8000534 <__aeabi_i2d>
 801b36c:	4603      	mov	r3, r0
 801b36e:	460c      	mov	r4, r1
 801b370:	461a      	mov	r2, r3
 801b372:	4623      	mov	r3, r4
 801b374:	4628      	mov	r0, r5
 801b376:	4631      	mov	r1, r6
 801b378:	f7e5 f946 	bl	8000608 <__aeabi_dmul>
 801b37c:	4603      	mov	r3, r0
 801b37e:	460c      	mov	r4, r1
 801b380:	4625      	mov	r5, r4
 801b382:	461c      	mov	r4, r3
 801b384:	6ff8      	ldr	r0, [r7, #124]	; 0x7c
 801b386:	f7e5 f8c5 	bl	8000514 <__aeabi_ui2d>
 801b38a:	4602      	mov	r2, r0
 801b38c:	460b      	mov	r3, r1
 801b38e:	4620      	mov	r0, r4
 801b390:	4629      	mov	r1, r5
 801b392:	f7e4 ff83 	bl	800029c <__adddf3>
 801b396:	4603      	mov	r3, r0
 801b398:	460c      	mov	r4, r1
 801b39a:	4618      	mov	r0, r3
 801b39c:	4621      	mov	r1, r4
 801b39e:	f7e5 fbe3 	bl	8000b68 <__aeabi_d2uiz>
 801b3a2:	4603      	mov	r3, r0
 801b3a4:	67fb      	str	r3, [r7, #124]	; 0x7c
	for(int j=i; j>0; j--){
 801b3a6:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 801b3a8:	3b01      	subs	r3, #1
 801b3aa:	677b      	str	r3, [r7, #116]	; 0x74
 801b3ac:	6f7b      	ldr	r3, [r7, #116]	; 0x74
 801b3ae:	2b00      	cmp	r3, #0
 801b3b0:	dcc1      	bgt.n	801b336 <keypad_getNumber_v2+0x136>
	}


	PRINTF32("\n\r     Final number obtained is: %d", number);
 801b3b2:	6ff9      	ldr	r1, [r7, #124]	; 0x7c
 801b3b4:	4823      	ldr	r0, [pc, #140]	; (801b444 <keypad_getNumber_v2+0x244>)
 801b3b6:	f7ff fb0d 	bl	801a9d4 <PRINTF32>
	HAL_GPIO_WritePin(GPIOC, GPIO_PIN_7, GPIO_PIN_RESET);
 801b3ba:	2200      	movs	r2, #0
 801b3bc:	2180      	movs	r1, #128	; 0x80
 801b3be:	4822      	ldr	r0, [pc, #136]	; (801b448 <keypad_getNumber_v2+0x248>)
 801b3c0:	f001 f9b2 	bl	801c728 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_RESET);
 801b3c4:	2200      	movs	r2, #0
 801b3c6:	f44f 7100 	mov.w	r1, #512	; 0x200
 801b3ca:	4820      	ldr	r0, [pc, #128]	; (801b44c <keypad_getNumber_v2+0x24c>)
 801b3cc:	f001 f9ac 	bl	801c728 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_8, GPIO_PIN_RESET);
 801b3d0:	2200      	movs	r2, #0
 801b3d2:	f44f 7180 	mov.w	r1, #256	; 0x100
 801b3d6:	481d      	ldr	r0, [pc, #116]	; (801b44c <keypad_getNumber_v2+0x24c>)
 801b3d8:	f001 f9a6 	bl	801c728 <HAL_GPIO_WritePin>
	HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, GPIO_PIN_RESET);
 801b3dc:	2200      	movs	r2, #0
 801b3de:	f44f 6180 	mov.w	r1, #1024	; 0x400
 801b3e2:	481b      	ldr	r0, [pc, #108]	; (801b450 <keypad_getNumber_v2+0x250>)
 801b3e4:	f001 f9a0 	bl	801c728 <HAL_GPIO_WritePin>
	return number;
 801b3e8:	6ffb      	ldr	r3, [r7, #124]	; 0x7c
}
 801b3ea:	4618      	mov	r0, r3
 801b3ec:	3784      	adds	r7, #132	; 0x84
 801b3ee:	46bd      	mov	sp, r7
 801b3f0:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801b3f2:	bf00      	nop
 801b3f4:	f3af 8000 	nop.w
 801b3f8:	00000000 	.word	0x00000000
 801b3fc:	40240000 	.word	0x40240000
 801b400:	08029e84 	.word	0x08029e84
 801b404:	08029ea4 	.word	0x08029ea4
 801b408:	08029eac 	.word	0x08029eac
 801b40c:	08029eb8 	.word	0x08029eb8
 801b410:	08029ed4 	.word	0x08029ed4
 801b414:	08029ed8 	.word	0x08029ed8
 801b418:	08029eec 	.word	0x08029eec
 801b41c:	08029ef0 	.word	0x08029ef0
 801b420:	08029ef4 	.word	0x08029ef4
 801b424:	08029ef8 	.word	0x08029ef8
 801b428:	08029efc 	.word	0x08029efc
 801b42c:	08029f00 	.word	0x08029f00
 801b430:	08029f04 	.word	0x08029f04
 801b434:	08029f08 	.word	0x08029f08
 801b438:	08029f0c 	.word	0x08029f0c
 801b43c:	08029f10 	.word	0x08029f10
 801b440:	08029f14 	.word	0x08029f14
 801b444:	08029f18 	.word	0x08029f18
 801b448:	40020800 	.word	0x40020800
 801b44c:	40020000 	.word	0x40020000
 801b450:	40020400 	.word	0x40020400

0801b454 <main>:
/**
  * @brief  The application entry point.
  * @retval int
  */
int main(void)
{
 801b454:	b580      	push	{r7, lr}
 801b456:	f5ad 7d06 	sub.w	sp, sp, #536	; 0x218
 801b45a:	af00      	add	r7, sp, #0
  /* USER CODE END 1 */

  /* MCU Configuration--------------------------------------------------------*/

  /* Reset of all peripherals, Initializes the Flash interface and the Systick. */
  HAL_Init();
 801b45c:	f000 fb3c 	bl	801bad8 <HAL_Init>
  /* USER CODE BEGIN Init */

  /* USER CODE END Init */

  /* Configure the system clock */
  SystemClock_Config();
 801b460:	f000 f85e 	bl	801b520 <SystemClock_Config>
  /* USER CODE BEGIN SysInit */

  /* USER CODE END SysInit */

  /* Initialize all configured peripherals */
  MX_GPIO_Init();
 801b464:	f7ff faf2 	bl	801aa4c <MX_GPIO_Init>
  MX_DMA_Init();
 801b468:	f7ff fad0 	bl	801aa0c <MX_DMA_Init>
  MX_USART2_UART_Init();
 801b46c:	f000 fa98 	bl	801b9a0 <MX_USART2_UART_Init>
  MX_TIM2_Init();
 801b470:	f000 f998 	bl	801b7a4 <MX_TIM2_Init>
  MX_I2C1_Init();
 801b474:	f7ff fba6 	bl	801abc4 <MX_I2C1_Init>
  /* USER CODE BEGIN 2 */

  // turn on LED if LCD screen is properly connected to i2c
  if(lcd16x2_i2c_init(&hi2c1)){
 801b478:	4822      	ldr	r0, [pc, #136]	; (801b504 <main+0xb0>)
 801b47a:	f7ff fc81 	bl	801ad80 <lcd16x2_i2c_init>
 801b47e:	4603      	mov	r3, r0
 801b480:	2b00      	cmp	r3, #0
 801b482:	d004      	beq.n	801b48e <main+0x3a>
 	  HAL_GPIO_WritePin(GPIOA, GPIO_PIN_5, GPIO_PIN_SET);
 801b484:	2201      	movs	r2, #1
 801b486:	2120      	movs	r1, #32
 801b488:	481f      	ldr	r0, [pc, #124]	; (801b508 <main+0xb4>)
 801b48a:	f001 f94d 	bl	801c728 <HAL_GPIO_WritePin>
   }
   lcd16x2_i2c_clear();
 801b48e:	f7ff fd0f 	bl	801aeb0 <lcd16x2_i2c_clear>
   lcd16x2_i2c_2ndLine();
 801b492:	f7ff fd05 	bl	801aea0 <lcd16x2_i2c_2ndLine>
   lcd16x2_i2c_clear();
 801b496:	f7ff fd0b 	bl	801aeb0 <lcd16x2_i2c_clear>

   lcd16x2_i2c_printf("Train hard,");
 801b49a:	481c      	ldr	r0, [pc, #112]	; (801b50c <main+0xb8>)
 801b49c:	f7ff fd12 	bl	801aec4 <lcd16x2_i2c_printf>
   lcd16x2_i2c_2ndLine();
 801b4a0:	f7ff fcfe 	bl	801aea0 <lcd16x2_i2c_2ndLine>
   lcd16x2_i2c_printf("climb harder");
 801b4a4:	481a      	ldr	r0, [pc, #104]	; (801b510 <main+0xbc>)
 801b4a6:	f7ff fd0d 	bl	801aec4 <lcd16x2_i2c_printf>

  struct ProblemInfo problem;
  uint32_t problemID = 0;
 801b4aa:	2300      	movs	r3, #0
 801b4ac:	f8c7 3214 	str.w	r3, [r7, #532]	; 0x214
  /* Infinite loop */
  /* USER CODE BEGIN WHILE */
  while (1)
  {

	  if(BLUE_BUTTON){
 801b4b0:	4b18      	ldr	r3, [pc, #96]	; (801b514 <main+0xc0>)
 801b4b2:	781b      	ldrb	r3, [r3, #0]
 801b4b4:	2b00      	cmp	r3, #0
 801b4b6:	d0fb      	beq.n	801b4b0 <main+0x5c>
		  lcd16x2_i2c_clear();
 801b4b8:	f7ff fcfa 	bl	801aeb0 <lcd16x2_i2c_clear>
		  problemID = keypad_getNumber_v2();
 801b4bc:	f7ff fea0 	bl	801b200 <keypad_getNumber_v2>
 801b4c0:	f8c7 0214 	str.w	r0, [r7, #532]	; 0x214
		  //problem_genArray(problemID, &problem);
		  //char* problemName = "boulder1";
		  //char* problemGrade = "7A+ light";

		  struct Problem p;
		  createProblem(&p,problemID);
 801b4c4:	f8d7 2214 	ldr.w	r2, [r7, #532]	; 0x214
 801b4c8:	1d3b      	adds	r3, r7, #4
 801b4ca:	4611      	mov	r1, r2
 801b4cc:	4618      	mov	r0, r3
 801b4ce:	f7e5 fceb 	bl	8000ea8 <createProblem>

		  lcd16x2_i2c_clear();
 801b4d2:	f7ff fced 	bl	801aeb0 <lcd16x2_i2c_clear>
		  lcd16x2_i2c_printf("Name:");
 801b4d6:	4810      	ldr	r0, [pc, #64]	; (801b518 <main+0xc4>)
 801b4d8:	f7ff fcf4 	bl	801aec4 <lcd16x2_i2c_printf>
		  lcd16x2_i2c_printf(p.name);
 801b4dc:	1d3b      	adds	r3, r7, #4
 801b4de:	337c      	adds	r3, #124	; 0x7c
 801b4e0:	4618      	mov	r0, r3
 801b4e2:	f7ff fcef 	bl	801aec4 <lcd16x2_i2c_printf>
		  lcd16x2_i2c_2ndLine();
 801b4e6:	f7ff fcdb 	bl	801aea0 <lcd16x2_i2c_2ndLine>
		  lcd16x2_i2c_printf("Grad:");
 801b4ea:	480c      	ldr	r0, [pc, #48]	; (801b51c <main+0xc8>)
 801b4ec:	f7ff fcea 	bl	801aec4 <lcd16x2_i2c_printf>
		  lcd16x2_i2c_printf(p.grade);
 801b4f0:	1d3b      	adds	r3, r7, #4
 801b4f2:	33cc      	adds	r3, #204	; 0xcc
 801b4f4:	4618      	mov	r0, r3
 801b4f6:	f7ff fce5 	bl	801aec4 <lcd16x2_i2c_printf>



		  //WS2811_Send();

		  BLUE_BUTTON = false;
 801b4fa:	4b06      	ldr	r3, [pc, #24]	; (801b514 <main+0xc0>)
 801b4fc:	2200      	movs	r2, #0
 801b4fe:	701a      	strb	r2, [r3, #0]
	  if(BLUE_BUTTON){
 801b500:	e7d6      	b.n	801b4b0 <main+0x5c>
 801b502:	bf00      	nop
 801b504:	200000a4 	.word	0x200000a4
 801b508:	40020000 	.word	0x40020000
 801b50c:	08029f3c 	.word	0x08029f3c
 801b510:	08029f48 	.word	0x08029f48
 801b514:	20000095 	.word	0x20000095
 801b518:	08029f58 	.word	0x08029f58
 801b51c:	08029f60 	.word	0x08029f60

0801b520 <SystemClock_Config>:
/**
  * @brief System Clock Configuration
  * @retval None
  */
void SystemClock_Config(void)
{
 801b520:	b580      	push	{r7, lr}
 801b522:	b094      	sub	sp, #80	; 0x50
 801b524:	af00      	add	r7, sp, #0
  RCC_OscInitTypeDef RCC_OscInitStruct = {0};
 801b526:	f107 0320 	add.w	r3, r7, #32
 801b52a:	2230      	movs	r2, #48	; 0x30
 801b52c:	2100      	movs	r1, #0
 801b52e:	4618      	mov	r0, r3
 801b530:	f003 fcc4 	bl	801eebc <memset>
  RCC_ClkInitTypeDef RCC_ClkInitStruct = {0};
 801b534:	f107 030c 	add.w	r3, r7, #12
 801b538:	2200      	movs	r2, #0
 801b53a:	601a      	str	r2, [r3, #0]
 801b53c:	605a      	str	r2, [r3, #4]
 801b53e:	609a      	str	r2, [r3, #8]
 801b540:	60da      	str	r2, [r3, #12]
 801b542:	611a      	str	r2, [r3, #16]

  /** Configure the main internal regulator output voltage
  */
  __HAL_RCC_PWR_CLK_ENABLE();
 801b544:	2300      	movs	r3, #0
 801b546:	60bb      	str	r3, [r7, #8]
 801b548:	4b28      	ldr	r3, [pc, #160]	; (801b5ec <SystemClock_Config+0xcc>)
 801b54a:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801b54c:	4a27      	ldr	r2, [pc, #156]	; (801b5ec <SystemClock_Config+0xcc>)
 801b54e:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801b552:	6413      	str	r3, [r2, #64]	; 0x40
 801b554:	4b25      	ldr	r3, [pc, #148]	; (801b5ec <SystemClock_Config+0xcc>)
 801b556:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801b558:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801b55c:	60bb      	str	r3, [r7, #8]
 801b55e:	68bb      	ldr	r3, [r7, #8]
  __HAL_PWR_VOLTAGESCALING_CONFIG(PWR_REGULATOR_VOLTAGE_SCALE2);
 801b560:	2300      	movs	r3, #0
 801b562:	607b      	str	r3, [r7, #4]
 801b564:	4b22      	ldr	r3, [pc, #136]	; (801b5f0 <SystemClock_Config+0xd0>)
 801b566:	681b      	ldr	r3, [r3, #0]
 801b568:	f423 4340 	bic.w	r3, r3, #49152	; 0xc000
 801b56c:	4a20      	ldr	r2, [pc, #128]	; (801b5f0 <SystemClock_Config+0xd0>)
 801b56e:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 801b572:	6013      	str	r3, [r2, #0]
 801b574:	4b1e      	ldr	r3, [pc, #120]	; (801b5f0 <SystemClock_Config+0xd0>)
 801b576:	681b      	ldr	r3, [r3, #0]
 801b578:	f403 4340 	and.w	r3, r3, #49152	; 0xc000
 801b57c:	607b      	str	r3, [r7, #4]
 801b57e:	687b      	ldr	r3, [r7, #4]
  /** Initializes the RCC Oscillators according to the specified parameters
  * in the RCC_OscInitTypeDef structure.
  */
  RCC_OscInitStruct.OscillatorType = RCC_OSCILLATORTYPE_HSI;
 801b580:	2302      	movs	r3, #2
 801b582:	623b      	str	r3, [r7, #32]
  RCC_OscInitStruct.HSIState = RCC_HSI_ON;
 801b584:	2301      	movs	r3, #1
 801b586:	62fb      	str	r3, [r7, #44]	; 0x2c
  RCC_OscInitStruct.HSICalibrationValue = RCC_HSICALIBRATION_DEFAULT;
 801b588:	2310      	movs	r3, #16
 801b58a:	633b      	str	r3, [r7, #48]	; 0x30
  RCC_OscInitStruct.PLL.PLLState = RCC_PLL_ON;
 801b58c:	2302      	movs	r3, #2
 801b58e:	63bb      	str	r3, [r7, #56]	; 0x38
  RCC_OscInitStruct.PLL.PLLSource = RCC_PLLSOURCE_HSI;
 801b590:	2300      	movs	r3, #0
 801b592:	63fb      	str	r3, [r7, #60]	; 0x3c
  RCC_OscInitStruct.PLL.PLLM = 8;
 801b594:	2308      	movs	r3, #8
 801b596:	643b      	str	r3, [r7, #64]	; 0x40
  RCC_OscInitStruct.PLL.PLLN = 72;
 801b598:	2348      	movs	r3, #72	; 0x48
 801b59a:	647b      	str	r3, [r7, #68]	; 0x44
  RCC_OscInitStruct.PLL.PLLP = RCC_PLLP_DIV2;
 801b59c:	2302      	movs	r3, #2
 801b59e:	64bb      	str	r3, [r7, #72]	; 0x48
  RCC_OscInitStruct.PLL.PLLQ = 7;
 801b5a0:	2307      	movs	r3, #7
 801b5a2:	64fb      	str	r3, [r7, #76]	; 0x4c
  if (HAL_RCC_OscConfig(&RCC_OscInitStruct) != HAL_OK)
 801b5a4:	f107 0320 	add.w	r3, r7, #32
 801b5a8:	4618      	mov	r0, r3
 801b5aa:	f001 fe5d 	bl	801d268 <HAL_RCC_OscConfig>
 801b5ae:	4603      	mov	r3, r0
 801b5b0:	2b00      	cmp	r3, #0
 801b5b2:	d001      	beq.n	801b5b8 <SystemClock_Config+0x98>
  {
    Error_Handler();
 801b5b4:	f000 f832 	bl	801b61c <Error_Handler>
  }
  /** Initializes the CPU, AHB and APB buses clocks
  */
  RCC_ClkInitStruct.ClockType = RCC_CLOCKTYPE_HCLK|RCC_CLOCKTYPE_SYSCLK
 801b5b8:	230f      	movs	r3, #15
 801b5ba:	60fb      	str	r3, [r7, #12]
                              |RCC_CLOCKTYPE_PCLK1|RCC_CLOCKTYPE_PCLK2;
  RCC_ClkInitStruct.SYSCLKSource = RCC_SYSCLKSOURCE_PLLCLK;
 801b5bc:	2302      	movs	r3, #2
 801b5be:	613b      	str	r3, [r7, #16]
  RCC_ClkInitStruct.AHBCLKDivider = RCC_SYSCLK_DIV1;
 801b5c0:	2300      	movs	r3, #0
 801b5c2:	617b      	str	r3, [r7, #20]
  RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 801b5c4:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801b5c8:	61bb      	str	r3, [r7, #24]
  RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
 801b5ca:	2300      	movs	r3, #0
 801b5cc:	61fb      	str	r3, [r7, #28]

  if (HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2) != HAL_OK)
 801b5ce:	f107 030c 	add.w	r3, r7, #12
 801b5d2:	2102      	movs	r1, #2
 801b5d4:	4618      	mov	r0, r3
 801b5d6:	f002 f8b7 	bl	801d748 <HAL_RCC_ClockConfig>
 801b5da:	4603      	mov	r3, r0
 801b5dc:	2b00      	cmp	r3, #0
 801b5de:	d001      	beq.n	801b5e4 <SystemClock_Config+0xc4>
  {
    Error_Handler();
 801b5e0:	f000 f81c 	bl	801b61c <Error_Handler>
  }
}
 801b5e4:	bf00      	nop
 801b5e6:	3750      	adds	r7, #80	; 0x50
 801b5e8:	46bd      	mov	sp, r7
 801b5ea:	bd80      	pop	{r7, pc}
 801b5ec:	40023800 	.word	0x40023800
 801b5f0:	40007000 	.word	0x40007000

0801b5f4 <HAL_GPIO_EXTI_Callback>:

/* USER CODE BEGIN 4 */
void HAL_GPIO_EXTI_Callback(uint16_t GPIO_Pin){
 801b5f4:	b480      	push	{r7}
 801b5f6:	b083      	sub	sp, #12
 801b5f8:	af00      	add	r7, sp, #0
 801b5fa:	4603      	mov	r3, r0
 801b5fc:	80fb      	strh	r3, [r7, #6]

	// interrupt blue button
	if(GPIO_Pin==B1_Pin){
 801b5fe:	88fb      	ldrh	r3, [r7, #6]
 801b600:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 801b604:	d102      	bne.n	801b60c <HAL_GPIO_EXTI_Callback+0x18>
		BLUE_BUTTON = true;
 801b606:	4b04      	ldr	r3, [pc, #16]	; (801b618 <HAL_GPIO_EXTI_Callback+0x24>)
 801b608:	2201      	movs	r2, #1
 801b60a:	701a      	strb	r2, [r3, #0]
	}
}
 801b60c:	bf00      	nop
 801b60e:	370c      	adds	r7, #12
 801b610:	46bd      	mov	sp, r7
 801b612:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b616:	4770      	bx	lr
 801b618:	20000095 	.word	0x20000095

0801b61c <Error_Handler>:
/**
  * @brief  This function is executed in case of error occurrence.
  * @retval None
  */
void Error_Handler(void)
{
 801b61c:	b480      	push	{r7}
 801b61e:	af00      	add	r7, sp, #0
  \details Disables IRQ interrupts by setting the I-bit in the CPSR.
           Can only be executed in Privileged modes.
 */
__STATIC_FORCEINLINE void __disable_irq(void)
{
  __ASM volatile ("cpsid i" : : : "memory");
 801b620:	b672      	cpsid	i
  /* USER CODE BEGIN Error_Handler_Debug */
  /* User can add his own implementation to report the HAL error return state */
  __disable_irq();
  while (1)
 801b622:	e7fe      	b.n	801b622 <Error_Handler+0x6>

0801b624 <HAL_MspInit>:
/* USER CODE END 0 */
/**
  * Initializes the Global MSP.
  */
void HAL_MspInit(void)
{
 801b624:	b580      	push	{r7, lr}
 801b626:	b082      	sub	sp, #8
 801b628:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MspInit 0 */

  /* USER CODE END MspInit 0 */

  __HAL_RCC_SYSCFG_CLK_ENABLE();
 801b62a:	2300      	movs	r3, #0
 801b62c:	607b      	str	r3, [r7, #4]
 801b62e:	4b14      	ldr	r3, [pc, #80]	; (801b680 <HAL_MspInit+0x5c>)
 801b630:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801b632:	4a13      	ldr	r2, [pc, #76]	; (801b680 <HAL_MspInit+0x5c>)
 801b634:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801b638:	6453      	str	r3, [r2, #68]	; 0x44
 801b63a:	4b11      	ldr	r3, [pc, #68]	; (801b680 <HAL_MspInit+0x5c>)
 801b63c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801b63e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 801b642:	607b      	str	r3, [r7, #4]
 801b644:	687b      	ldr	r3, [r7, #4]
  __HAL_RCC_PWR_CLK_ENABLE();
 801b646:	2300      	movs	r3, #0
 801b648:	603b      	str	r3, [r7, #0]
 801b64a:	4b0d      	ldr	r3, [pc, #52]	; (801b680 <HAL_MspInit+0x5c>)
 801b64c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801b64e:	4a0c      	ldr	r2, [pc, #48]	; (801b680 <HAL_MspInit+0x5c>)
 801b650:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801b654:	6413      	str	r3, [r2, #64]	; 0x40
 801b656:	4b0a      	ldr	r3, [pc, #40]	; (801b680 <HAL_MspInit+0x5c>)
 801b658:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801b65a:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801b65e:	603b      	str	r3, [r7, #0]
 801b660:	683b      	ldr	r3, [r7, #0]

  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_0);
 801b662:	2007      	movs	r0, #7
 801b664:	f000 fb9c 	bl	801bda0 <HAL_NVIC_SetPriorityGrouping>

  /* System interrupt init*/

  /* Peripheral interrupt init */
  /* FPU_IRQn interrupt configuration */
  HAL_NVIC_SetPriority(FPU_IRQn, 0, 0);
 801b668:	2200      	movs	r2, #0
 801b66a:	2100      	movs	r1, #0
 801b66c:	2051      	movs	r0, #81	; 0x51
 801b66e:	f000 fba2 	bl	801bdb6 <HAL_NVIC_SetPriority>
  HAL_NVIC_EnableIRQ(FPU_IRQn);
 801b672:	2051      	movs	r0, #81	; 0x51
 801b674:	f000 fbbb 	bl	801bdee <HAL_NVIC_EnableIRQ>

  /* USER CODE BEGIN MspInit 1 */

  /* USER CODE END MspInit 1 */
}
 801b678:	bf00      	nop
 801b67a:	3708      	adds	r7, #8
 801b67c:	46bd      	mov	sp, r7
 801b67e:	bd80      	pop	{r7, pc}
 801b680:	40023800 	.word	0x40023800

0801b684 <NMI_Handler>:
/******************************************************************************/
/**
  * @brief This function handles Non maskable interrupt.
  */
void NMI_Handler(void)
{
 801b684:	b480      	push	{r7}
 801b686:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN NonMaskableInt_IRQn 0 */

  /* USER CODE END NonMaskableInt_IRQn 0 */
  /* USER CODE BEGIN NonMaskableInt_IRQn 1 */
  while (1)
 801b688:	e7fe      	b.n	801b688 <NMI_Handler+0x4>

0801b68a <HardFault_Handler>:

/**
  * @brief This function handles Hard fault interrupt.
  */
void HardFault_Handler(void)
{
 801b68a:	b480      	push	{r7}
 801b68c:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN HardFault_IRQn 0 */

  /* USER CODE END HardFault_IRQn 0 */
  while (1)
 801b68e:	e7fe      	b.n	801b68e <HardFault_Handler+0x4>

0801b690 <MemManage_Handler>:

/**
  * @brief This function handles Memory management fault.
  */
void MemManage_Handler(void)
{
 801b690:	b480      	push	{r7}
 801b692:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN MemoryManagement_IRQn 0 */

  /* USER CODE END MemoryManagement_IRQn 0 */
  while (1)
 801b694:	e7fe      	b.n	801b694 <MemManage_Handler+0x4>

0801b696 <BusFault_Handler>:

/**
  * @brief This function handles Pre-fetch fault, memory access fault.
  */
void BusFault_Handler(void)
{
 801b696:	b480      	push	{r7}
 801b698:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN BusFault_IRQn 0 */

  /* USER CODE END BusFault_IRQn 0 */
  while (1)
 801b69a:	e7fe      	b.n	801b69a <BusFault_Handler+0x4>

0801b69c <UsageFault_Handler>:

/**
  * @brief This function handles Undefined instruction or illegal state.
  */
void UsageFault_Handler(void)
{
 801b69c:	b480      	push	{r7}
 801b69e:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN UsageFault_IRQn 0 */

  /* USER CODE END UsageFault_IRQn 0 */
  while (1)
 801b6a0:	e7fe      	b.n	801b6a0 <UsageFault_Handler+0x4>

0801b6a2 <SVC_Handler>:

/**
  * @brief This function handles System service call via SWI instruction.
  */
void SVC_Handler(void)
{
 801b6a2:	b480      	push	{r7}
 801b6a4:	af00      	add	r7, sp, #0

  /* USER CODE END SVCall_IRQn 0 */
  /* USER CODE BEGIN SVCall_IRQn 1 */

  /* USER CODE END SVCall_IRQn 1 */
}
 801b6a6:	bf00      	nop
 801b6a8:	46bd      	mov	sp, r7
 801b6aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b6ae:	4770      	bx	lr

0801b6b0 <DebugMon_Handler>:

/**
  * @brief This function handles Debug monitor.
  */
void DebugMon_Handler(void)
{
 801b6b0:	b480      	push	{r7}
 801b6b2:	af00      	add	r7, sp, #0

  /* USER CODE END DebugMonitor_IRQn 0 */
  /* USER CODE BEGIN DebugMonitor_IRQn 1 */

  /* USER CODE END DebugMonitor_IRQn 1 */
}
 801b6b4:	bf00      	nop
 801b6b6:	46bd      	mov	sp, r7
 801b6b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b6bc:	4770      	bx	lr

0801b6be <PendSV_Handler>:

/**
  * @brief This function handles Pendable request for system service.
  */
void PendSV_Handler(void)
{
 801b6be:	b480      	push	{r7}
 801b6c0:	af00      	add	r7, sp, #0

  /* USER CODE END PendSV_IRQn 0 */
  /* USER CODE BEGIN PendSV_IRQn 1 */

  /* USER CODE END PendSV_IRQn 1 */
}
 801b6c2:	bf00      	nop
 801b6c4:	46bd      	mov	sp, r7
 801b6c6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b6ca:	4770      	bx	lr

0801b6cc <SysTick_Handler>:

/**
  * @brief This function handles System tick timer.
  */
void SysTick_Handler(void)
{
 801b6cc:	b580      	push	{r7, lr}
 801b6ce:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN SysTick_IRQn 0 */

  /* USER CODE END SysTick_IRQn 0 */
  HAL_IncTick();
 801b6d0:	f000 fa54 	bl	801bb7c <HAL_IncTick>
  /* USER CODE BEGIN SysTick_IRQn 1 */

  /* USER CODE END SysTick_IRQn 1 */
}
 801b6d4:	bf00      	nop
 801b6d6:	bd80      	pop	{r7, pc}

0801b6d8 <DMA1_Stream5_IRQHandler>:

/**
  * @brief This function handles DMA1 stream5 global interrupt.
  */
void DMA1_Stream5_IRQHandler(void)
{
 801b6d8:	b580      	push	{r7, lr}
 801b6da:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN DMA1_Stream5_IRQn 0 */

  /* USER CODE END DMA1_Stream5_IRQn 0 */
  HAL_DMA_IRQHandler(&hdma_tim2_ch1);
 801b6dc:	4802      	ldr	r0, [pc, #8]	; (801b6e8 <DMA1_Stream5_IRQHandler+0x10>)
 801b6de:	f000 fc4f 	bl	801bf80 <HAL_DMA_IRQHandler>
  /* USER CODE BEGIN DMA1_Stream5_IRQn 1 */

  /* USER CODE END DMA1_Stream5_IRQn 1 */
}
 801b6e2:	bf00      	nop
 801b6e4:	bd80      	pop	{r7, pc}
 801b6e6:	bf00      	nop
 801b6e8:	200000f8 	.word	0x200000f8

0801b6ec <EXTI15_10_IRQHandler>:

/**
  * @brief This function handles EXTI line[15:10] interrupts.
  */
void EXTI15_10_IRQHandler(void)
{
 801b6ec:	b580      	push	{r7, lr}
 801b6ee:	af00      	add	r7, sp, #0
  /* USER CODE BEGIN EXTI15_10_IRQn 0 */

  /* USER CODE END EXTI15_10_IRQn 0 */
  HAL_GPIO_EXTI_IRQHandler(GPIO_PIN_13);
 801b6f0:	f44f 5000 	mov.w	r0, #8192	; 0x2000
 801b6f4:	f001 f832 	bl	801c75c <HAL_GPIO_EXTI_IRQHandler>
  /* USER CODE BEGIN EXTI15_10_IRQn 1 */

  /* USER CODE END EXTI15_10_IRQn 1 */
}
 801b6f8:	bf00      	nop
 801b6fa:	bd80      	pop	{r7, pc}

0801b6fc <FPU_IRQHandler>:

/**
  * @brief This function handles FPU global interrupt.
  */
void FPU_IRQHandler(void)
{
 801b6fc:	b480      	push	{r7}
 801b6fe:	af00      	add	r7, sp, #0

  /* USER CODE END FPU_IRQn 0 */
  /* USER CODE BEGIN FPU_IRQn 1 */

  /* USER CODE END FPU_IRQn 1 */
}
 801b700:	bf00      	nop
 801b702:	46bd      	mov	sp, r7
 801b704:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b708:	4770      	bx	lr
	...

0801b70c <_sbrk>:
 *
 * @param incr Memory size
 * @return Pointer to allocated memory
 */
void *_sbrk(ptrdiff_t incr)
{
 801b70c:	b580      	push	{r7, lr}
 801b70e:	b086      	sub	sp, #24
 801b710:	af00      	add	r7, sp, #0
 801b712:	6078      	str	r0, [r7, #4]
  extern uint8_t _end; /* Symbol defined in the linker script */
  extern uint8_t _estack; /* Symbol defined in the linker script */
  extern uint32_t _Min_Stack_Size; /* Symbol defined in the linker script */
  const uint32_t stack_limit = (uint32_t)&_estack - (uint32_t)&_Min_Stack_Size;
 801b714:	4a14      	ldr	r2, [pc, #80]	; (801b768 <_sbrk+0x5c>)
 801b716:	4b15      	ldr	r3, [pc, #84]	; (801b76c <_sbrk+0x60>)
 801b718:	1ad3      	subs	r3, r2, r3
 801b71a:	617b      	str	r3, [r7, #20]
  const uint8_t *max_heap = (uint8_t *)stack_limit;
 801b71c:	697b      	ldr	r3, [r7, #20]
 801b71e:	613b      	str	r3, [r7, #16]
  uint8_t *prev_heap_end;

  /* Initialize heap end at first call */
  if (NULL == __sbrk_heap_end)
 801b720:	4b13      	ldr	r3, [pc, #76]	; (801b770 <_sbrk+0x64>)
 801b722:	681b      	ldr	r3, [r3, #0]
 801b724:	2b00      	cmp	r3, #0
 801b726:	d102      	bne.n	801b72e <_sbrk+0x22>
  {
    __sbrk_heap_end = &_end;
 801b728:	4b11      	ldr	r3, [pc, #68]	; (801b770 <_sbrk+0x64>)
 801b72a:	4a12      	ldr	r2, [pc, #72]	; (801b774 <_sbrk+0x68>)
 801b72c:	601a      	str	r2, [r3, #0]
  }

  /* Protect heap from growing into the reserved MSP stack */
  if (__sbrk_heap_end + incr > max_heap)
 801b72e:	4b10      	ldr	r3, [pc, #64]	; (801b770 <_sbrk+0x64>)
 801b730:	681a      	ldr	r2, [r3, #0]
 801b732:	687b      	ldr	r3, [r7, #4]
 801b734:	4413      	add	r3, r2
 801b736:	693a      	ldr	r2, [r7, #16]
 801b738:	429a      	cmp	r2, r3
 801b73a:	d207      	bcs.n	801b74c <_sbrk+0x40>
  {
    errno = ENOMEM;
 801b73c:	f003 fb94 	bl	801ee68 <__errno>
 801b740:	4602      	mov	r2, r0
 801b742:	230c      	movs	r3, #12
 801b744:	6013      	str	r3, [r2, #0]
    return (void *)-1;
 801b746:	f04f 33ff 	mov.w	r3, #4294967295
 801b74a:	e009      	b.n	801b760 <_sbrk+0x54>
  }

  prev_heap_end = __sbrk_heap_end;
 801b74c:	4b08      	ldr	r3, [pc, #32]	; (801b770 <_sbrk+0x64>)
 801b74e:	681b      	ldr	r3, [r3, #0]
 801b750:	60fb      	str	r3, [r7, #12]
  __sbrk_heap_end += incr;
 801b752:	4b07      	ldr	r3, [pc, #28]	; (801b770 <_sbrk+0x64>)
 801b754:	681a      	ldr	r2, [r3, #0]
 801b756:	687b      	ldr	r3, [r7, #4]
 801b758:	4413      	add	r3, r2
 801b75a:	4a05      	ldr	r2, [pc, #20]	; (801b770 <_sbrk+0x64>)
 801b75c:	6013      	str	r3, [r2, #0]

  return (void *)prev_heap_end;
 801b75e:	68fb      	ldr	r3, [r7, #12]
}
 801b760:	4618      	mov	r0, r3
 801b762:	3718      	adds	r7, #24
 801b764:	46bd      	mov	sp, r7
 801b766:	bd80      	pop	{r7, pc}
 801b768:	20018000 	.word	0x20018000
 801b76c:	00000400 	.word	0x00000400
 801b770:	20000098 	.word	0x20000098
 801b774:	200001e0 	.word	0x200001e0

0801b778 <SystemInit>:
  *         configuration.
  * @param  None
  * @retval None
  */
void SystemInit(void)
{
 801b778:	b480      	push	{r7}
 801b77a:	af00      	add	r7, sp, #0
  /* FPU settings ------------------------------------------------------------*/
  #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
    SCB->CPACR |= ((3UL << 10*2)|(3UL << 11*2));  /* set CP10 and CP11 Full Access */
 801b77c:	4b08      	ldr	r3, [pc, #32]	; (801b7a0 <SystemInit+0x28>)
 801b77e:	f8d3 3088 	ldr.w	r3, [r3, #136]	; 0x88
 801b782:	4a07      	ldr	r2, [pc, #28]	; (801b7a0 <SystemInit+0x28>)
 801b784:	f443 0370 	orr.w	r3, r3, #15728640	; 0xf00000
 801b788:	f8c2 3088 	str.w	r3, [r2, #136]	; 0x88

  /* Configure the Vector Table location add offset address ------------------*/
#ifdef VECT_TAB_SRAM
  SCB->VTOR = SRAM_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal SRAM */
#else
  SCB->VTOR = FLASH_BASE | VECT_TAB_OFFSET; /* Vector Table Relocation in Internal FLASH */
 801b78c:	4b04      	ldr	r3, [pc, #16]	; (801b7a0 <SystemInit+0x28>)
 801b78e:	f04f 6200 	mov.w	r2, #134217728	; 0x8000000
 801b792:	609a      	str	r2, [r3, #8]
#endif
}
 801b794:	bf00      	nop
 801b796:	46bd      	mov	sp, r7
 801b798:	f85d 7b04 	ldr.w	r7, [sp], #4
 801b79c:	4770      	bx	lr
 801b79e:	bf00      	nop
 801b7a0:	e000ed00 	.word	0xe000ed00

0801b7a4 <MX_TIM2_Init>:
TIM_HandleTypeDef htim2;
DMA_HandleTypeDef hdma_tim2_ch1;

/* TIM2 init function */
void MX_TIM2_Init(void)
{
 801b7a4:	b580      	push	{r7, lr}
 801b7a6:	b08e      	sub	sp, #56	; 0x38
 801b7a8:	af00      	add	r7, sp, #0
  TIM_ClockConfigTypeDef sClockSourceConfig = {0};
 801b7aa:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801b7ae:	2200      	movs	r2, #0
 801b7b0:	601a      	str	r2, [r3, #0]
 801b7b2:	605a      	str	r2, [r3, #4]
 801b7b4:	609a      	str	r2, [r3, #8]
 801b7b6:	60da      	str	r2, [r3, #12]
  TIM_MasterConfigTypeDef sMasterConfig = {0};
 801b7b8:	f107 0320 	add.w	r3, r7, #32
 801b7bc:	2200      	movs	r2, #0
 801b7be:	601a      	str	r2, [r3, #0]
 801b7c0:	605a      	str	r2, [r3, #4]
  TIM_OC_InitTypeDef sConfigOC = {0};
 801b7c2:	1d3b      	adds	r3, r7, #4
 801b7c4:	2200      	movs	r2, #0
 801b7c6:	601a      	str	r2, [r3, #0]
 801b7c8:	605a      	str	r2, [r3, #4]
 801b7ca:	609a      	str	r2, [r3, #8]
 801b7cc:	60da      	str	r2, [r3, #12]
 801b7ce:	611a      	str	r2, [r3, #16]
 801b7d0:	615a      	str	r2, [r3, #20]
 801b7d2:	619a      	str	r2, [r3, #24]

  htim2.Instance = TIM2;
 801b7d4:	4b2c      	ldr	r3, [pc, #176]	; (801b888 <MX_TIM2_Init+0xe4>)
 801b7d6:	f04f 4280 	mov.w	r2, #1073741824	; 0x40000000
 801b7da:	601a      	str	r2, [r3, #0]
  htim2.Init.Prescaler = 1-1;
 801b7dc:	4b2a      	ldr	r3, [pc, #168]	; (801b888 <MX_TIM2_Init+0xe4>)
 801b7de:	2200      	movs	r2, #0
 801b7e0:	605a      	str	r2, [r3, #4]
  htim2.Init.CounterMode = TIM_COUNTERMODE_UP;
 801b7e2:	4b29      	ldr	r3, [pc, #164]	; (801b888 <MX_TIM2_Init+0xe4>)
 801b7e4:	2200      	movs	r2, #0
 801b7e6:	609a      	str	r2, [r3, #8]
  htim2.Init.Period = 90-1;
 801b7e8:	4b27      	ldr	r3, [pc, #156]	; (801b888 <MX_TIM2_Init+0xe4>)
 801b7ea:	2259      	movs	r2, #89	; 0x59
 801b7ec:	60da      	str	r2, [r3, #12]
  htim2.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 801b7ee:	4b26      	ldr	r3, [pc, #152]	; (801b888 <MX_TIM2_Init+0xe4>)
 801b7f0:	2200      	movs	r2, #0
 801b7f2:	611a      	str	r2, [r3, #16]
  htim2.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 801b7f4:	4b24      	ldr	r3, [pc, #144]	; (801b888 <MX_TIM2_Init+0xe4>)
 801b7f6:	2200      	movs	r2, #0
 801b7f8:	619a      	str	r2, [r3, #24]
  if (HAL_TIM_Base_Init(&htim2) != HAL_OK)
 801b7fa:	4823      	ldr	r0, [pc, #140]	; (801b888 <MX_TIM2_Init+0xe4>)
 801b7fc:	f002 f996 	bl	801db2c <HAL_TIM_Base_Init>
 801b800:	4603      	mov	r3, r0
 801b802:	2b00      	cmp	r3, #0
 801b804:	d001      	beq.n	801b80a <MX_TIM2_Init+0x66>
  {
    Error_Handler();
 801b806:	f7ff ff09 	bl	801b61c <Error_Handler>
  }
  sClockSourceConfig.ClockSource = TIM_CLOCKSOURCE_INTERNAL;
 801b80a:	f44f 5380 	mov.w	r3, #4096	; 0x1000
 801b80e:	62bb      	str	r3, [r7, #40]	; 0x28
  if (HAL_TIM_ConfigClockSource(&htim2, &sClockSourceConfig) != HAL_OK)
 801b810:	f107 0328 	add.w	r3, r7, #40	; 0x28
 801b814:	4619      	mov	r1, r3
 801b816:	481c      	ldr	r0, [pc, #112]	; (801b888 <MX_TIM2_Init+0xe4>)
 801b818:	f002 faae 	bl	801dd78 <HAL_TIM_ConfigClockSource>
 801b81c:	4603      	mov	r3, r0
 801b81e:	2b00      	cmp	r3, #0
 801b820:	d001      	beq.n	801b826 <MX_TIM2_Init+0x82>
  {
    Error_Handler();
 801b822:	f7ff fefb 	bl	801b61c <Error_Handler>
  }
  if (HAL_TIM_PWM_Init(&htim2) != HAL_OK)
 801b826:	4818      	ldr	r0, [pc, #96]	; (801b888 <MX_TIM2_Init+0xe4>)
 801b828:	f002 f9ab 	bl	801db82 <HAL_TIM_PWM_Init>
 801b82c:	4603      	mov	r3, r0
 801b82e:	2b00      	cmp	r3, #0
 801b830:	d001      	beq.n	801b836 <MX_TIM2_Init+0x92>
  {
    Error_Handler();
 801b832:	f7ff fef3 	bl	801b61c <Error_Handler>
  }
  sMasterConfig.MasterOutputTrigger = TIM_TRGO_RESET;
 801b836:	2300      	movs	r3, #0
 801b838:	623b      	str	r3, [r7, #32]
  sMasterConfig.MasterSlaveMode = TIM_MASTERSLAVEMODE_DISABLE;
 801b83a:	2300      	movs	r3, #0
 801b83c:	627b      	str	r3, [r7, #36]	; 0x24
  if (HAL_TIMEx_MasterConfigSynchronization(&htim2, &sMasterConfig) != HAL_OK)
 801b83e:	f107 0320 	add.w	r3, r7, #32
 801b842:	4619      	mov	r1, r3
 801b844:	4810      	ldr	r0, [pc, #64]	; (801b888 <MX_TIM2_Init+0xe4>)
 801b846:	f002 fdf5 	bl	801e434 <HAL_TIMEx_MasterConfigSynchronization>
 801b84a:	4603      	mov	r3, r0
 801b84c:	2b00      	cmp	r3, #0
 801b84e:	d001      	beq.n	801b854 <MX_TIM2_Init+0xb0>
  {
    Error_Handler();
 801b850:	f7ff fee4 	bl	801b61c <Error_Handler>
  }
  sConfigOC.OCMode = TIM_OCMODE_PWM1;
 801b854:	2360      	movs	r3, #96	; 0x60
 801b856:	607b      	str	r3, [r7, #4]
  sConfigOC.Pulse = 67;
 801b858:	2343      	movs	r3, #67	; 0x43
 801b85a:	60bb      	str	r3, [r7, #8]
  sConfigOC.OCPolarity = TIM_OCPOLARITY_HIGH;
 801b85c:	2300      	movs	r3, #0
 801b85e:	60fb      	str	r3, [r7, #12]
  sConfigOC.OCFastMode = TIM_OCFAST_DISABLE;
 801b860:	2300      	movs	r3, #0
 801b862:	617b      	str	r3, [r7, #20]
  if (HAL_TIM_PWM_ConfigChannel(&htim2, &sConfigOC, TIM_CHANNEL_1) != HAL_OK)
 801b864:	1d3b      	adds	r3, r7, #4
 801b866:	2200      	movs	r2, #0
 801b868:	4619      	mov	r1, r3
 801b86a:	4807      	ldr	r0, [pc, #28]	; (801b888 <MX_TIM2_Init+0xe4>)
 801b86c:	f002 f9be 	bl	801dbec <HAL_TIM_PWM_ConfigChannel>
 801b870:	4603      	mov	r3, r0
 801b872:	2b00      	cmp	r3, #0
 801b874:	d001      	beq.n	801b87a <MX_TIM2_Init+0xd6>
  {
    Error_Handler();
 801b876:	f7ff fed1 	bl	801b61c <Error_Handler>
  }
  HAL_TIM_MspPostInit(&htim2);
 801b87a:	4803      	ldr	r0, [pc, #12]	; (801b888 <MX_TIM2_Init+0xe4>)
 801b87c:	f000 f858 	bl	801b930 <HAL_TIM_MspPostInit>

}
 801b880:	bf00      	nop
 801b882:	3738      	adds	r7, #56	; 0x38
 801b884:	46bd      	mov	sp, r7
 801b886:	bd80      	pop	{r7, pc}
 801b888:	20000158 	.word	0x20000158

0801b88c <HAL_TIM_Base_MspInit>:

void HAL_TIM_Base_MspInit(TIM_HandleTypeDef* tim_baseHandle)
{
 801b88c:	b580      	push	{r7, lr}
 801b88e:	b084      	sub	sp, #16
 801b890:	af00      	add	r7, sp, #0
 801b892:	6078      	str	r0, [r7, #4]

  if(tim_baseHandle->Instance==TIM2)
 801b894:	687b      	ldr	r3, [r7, #4]
 801b896:	681b      	ldr	r3, [r3, #0]
 801b898:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 801b89c:	d13d      	bne.n	801b91a <HAL_TIM_Base_MspInit+0x8e>
  {
  /* USER CODE BEGIN TIM2_MspInit 0 */

  /* USER CODE END TIM2_MspInit 0 */
    /* TIM2 clock enable */
    __HAL_RCC_TIM2_CLK_ENABLE();
 801b89e:	2300      	movs	r3, #0
 801b8a0:	60fb      	str	r3, [r7, #12]
 801b8a2:	4b20      	ldr	r3, [pc, #128]	; (801b924 <HAL_TIM_Base_MspInit+0x98>)
 801b8a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801b8a6:	4a1f      	ldr	r2, [pc, #124]	; (801b924 <HAL_TIM_Base_MspInit+0x98>)
 801b8a8:	f043 0301 	orr.w	r3, r3, #1
 801b8ac:	6413      	str	r3, [r2, #64]	; 0x40
 801b8ae:	4b1d      	ldr	r3, [pc, #116]	; (801b924 <HAL_TIM_Base_MspInit+0x98>)
 801b8b0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801b8b2:	f003 0301 	and.w	r3, r3, #1
 801b8b6:	60fb      	str	r3, [r7, #12]
 801b8b8:	68fb      	ldr	r3, [r7, #12]

    /* TIM2 DMA Init */
    /* TIM2_CH1 Init */
    hdma_tim2_ch1.Instance = DMA1_Stream5;
 801b8ba:	4b1b      	ldr	r3, [pc, #108]	; (801b928 <HAL_TIM_Base_MspInit+0x9c>)
 801b8bc:	4a1b      	ldr	r2, [pc, #108]	; (801b92c <HAL_TIM_Base_MspInit+0xa0>)
 801b8be:	601a      	str	r2, [r3, #0]
    hdma_tim2_ch1.Init.Channel = DMA_CHANNEL_3;
 801b8c0:	4b19      	ldr	r3, [pc, #100]	; (801b928 <HAL_TIM_Base_MspInit+0x9c>)
 801b8c2:	f04f 62c0 	mov.w	r2, #100663296	; 0x6000000
 801b8c6:	605a      	str	r2, [r3, #4]
    hdma_tim2_ch1.Init.Direction = DMA_MEMORY_TO_PERIPH;
 801b8c8:	4b17      	ldr	r3, [pc, #92]	; (801b928 <HAL_TIM_Base_MspInit+0x9c>)
 801b8ca:	2240      	movs	r2, #64	; 0x40
 801b8cc:	609a      	str	r2, [r3, #8]
    hdma_tim2_ch1.Init.PeriphInc = DMA_PINC_DISABLE;
 801b8ce:	4b16      	ldr	r3, [pc, #88]	; (801b928 <HAL_TIM_Base_MspInit+0x9c>)
 801b8d0:	2200      	movs	r2, #0
 801b8d2:	60da      	str	r2, [r3, #12]
    hdma_tim2_ch1.Init.MemInc = DMA_MINC_ENABLE;
 801b8d4:	4b14      	ldr	r3, [pc, #80]	; (801b928 <HAL_TIM_Base_MspInit+0x9c>)
 801b8d6:	f44f 6280 	mov.w	r2, #1024	; 0x400
 801b8da:	611a      	str	r2, [r3, #16]
    hdma_tim2_ch1.Init.PeriphDataAlignment = DMA_PDATAALIGN_HALFWORD;
 801b8dc:	4b12      	ldr	r3, [pc, #72]	; (801b928 <HAL_TIM_Base_MspInit+0x9c>)
 801b8de:	f44f 6200 	mov.w	r2, #2048	; 0x800
 801b8e2:	615a      	str	r2, [r3, #20]
    hdma_tim2_ch1.Init.MemDataAlignment = DMA_MDATAALIGN_HALFWORD;
 801b8e4:	4b10      	ldr	r3, [pc, #64]	; (801b928 <HAL_TIM_Base_MspInit+0x9c>)
 801b8e6:	f44f 5200 	mov.w	r2, #8192	; 0x2000
 801b8ea:	619a      	str	r2, [r3, #24]
    hdma_tim2_ch1.Init.Mode = DMA_NORMAL;
 801b8ec:	4b0e      	ldr	r3, [pc, #56]	; (801b928 <HAL_TIM_Base_MspInit+0x9c>)
 801b8ee:	2200      	movs	r2, #0
 801b8f0:	61da      	str	r2, [r3, #28]
    hdma_tim2_ch1.Init.Priority = DMA_PRIORITY_LOW;
 801b8f2:	4b0d      	ldr	r3, [pc, #52]	; (801b928 <HAL_TIM_Base_MspInit+0x9c>)
 801b8f4:	2200      	movs	r2, #0
 801b8f6:	621a      	str	r2, [r3, #32]
    hdma_tim2_ch1.Init.FIFOMode = DMA_FIFOMODE_DISABLE;
 801b8f8:	4b0b      	ldr	r3, [pc, #44]	; (801b928 <HAL_TIM_Base_MspInit+0x9c>)
 801b8fa:	2200      	movs	r2, #0
 801b8fc:	625a      	str	r2, [r3, #36]	; 0x24
    if (HAL_DMA_Init(&hdma_tim2_ch1) != HAL_OK)
 801b8fe:	480a      	ldr	r0, [pc, #40]	; (801b928 <HAL_TIM_Base_MspInit+0x9c>)
 801b900:	f000 fa90 	bl	801be24 <HAL_DMA_Init>
 801b904:	4603      	mov	r3, r0
 801b906:	2b00      	cmp	r3, #0
 801b908:	d001      	beq.n	801b90e <HAL_TIM_Base_MspInit+0x82>
    {
      Error_Handler();
 801b90a:	f7ff fe87 	bl	801b61c <Error_Handler>
    }

    __HAL_LINKDMA(tim_baseHandle,hdma[TIM_DMA_ID_CC1],hdma_tim2_ch1);
 801b90e:	687b      	ldr	r3, [r7, #4]
 801b910:	4a05      	ldr	r2, [pc, #20]	; (801b928 <HAL_TIM_Base_MspInit+0x9c>)
 801b912:	625a      	str	r2, [r3, #36]	; 0x24
 801b914:	4a04      	ldr	r2, [pc, #16]	; (801b928 <HAL_TIM_Base_MspInit+0x9c>)
 801b916:	687b      	ldr	r3, [r7, #4]
 801b918:	6393      	str	r3, [r2, #56]	; 0x38

  /* USER CODE BEGIN TIM2_MspInit 1 */

  /* USER CODE END TIM2_MspInit 1 */
  }
}
 801b91a:	bf00      	nop
 801b91c:	3710      	adds	r7, #16
 801b91e:	46bd      	mov	sp, r7
 801b920:	bd80      	pop	{r7, pc}
 801b922:	bf00      	nop
 801b924:	40023800 	.word	0x40023800
 801b928:	200000f8 	.word	0x200000f8
 801b92c:	40026088 	.word	0x40026088

0801b930 <HAL_TIM_MspPostInit>:
void HAL_TIM_MspPostInit(TIM_HandleTypeDef* timHandle)
{
 801b930:	b580      	push	{r7, lr}
 801b932:	b088      	sub	sp, #32
 801b934:	af00      	add	r7, sp, #0
 801b936:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 801b938:	f107 030c 	add.w	r3, r7, #12
 801b93c:	2200      	movs	r2, #0
 801b93e:	601a      	str	r2, [r3, #0]
 801b940:	605a      	str	r2, [r3, #4]
 801b942:	609a      	str	r2, [r3, #8]
 801b944:	60da      	str	r2, [r3, #12]
 801b946:	611a      	str	r2, [r3, #16]
  if(timHandle->Instance==TIM2)
 801b948:	687b      	ldr	r3, [r7, #4]
 801b94a:	681b      	ldr	r3, [r3, #0]
 801b94c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 801b950:	d11d      	bne.n	801b98e <HAL_TIM_MspPostInit+0x5e>
  {
  /* USER CODE BEGIN TIM2_MspPostInit 0 */

  /* USER CODE END TIM2_MspPostInit 0 */

    __HAL_RCC_GPIOA_CLK_ENABLE();
 801b952:	2300      	movs	r3, #0
 801b954:	60bb      	str	r3, [r7, #8]
 801b956:	4b10      	ldr	r3, [pc, #64]	; (801b998 <HAL_TIM_MspPostInit+0x68>)
 801b958:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b95a:	4a0f      	ldr	r2, [pc, #60]	; (801b998 <HAL_TIM_MspPostInit+0x68>)
 801b95c:	f043 0301 	orr.w	r3, r3, #1
 801b960:	6313      	str	r3, [r2, #48]	; 0x30
 801b962:	4b0d      	ldr	r3, [pc, #52]	; (801b998 <HAL_TIM_MspPostInit+0x68>)
 801b964:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801b966:	f003 0301 	and.w	r3, r3, #1
 801b96a:	60bb      	str	r3, [r7, #8]
 801b96c:	68bb      	ldr	r3, [r7, #8]
    /**TIM2 GPIO Configuration
    PA5     ------> TIM2_CH1
    */
    GPIO_InitStruct.Pin = GPIO_PIN_5;
 801b96e:	2320      	movs	r3, #32
 801b970:	60fb      	str	r3, [r7, #12]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 801b972:	2302      	movs	r3, #2
 801b974:	613b      	str	r3, [r7, #16]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 801b976:	2300      	movs	r3, #0
 801b978:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 801b97a:	2300      	movs	r3, #0
 801b97c:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Alternate = GPIO_AF1_TIM2;
 801b97e:	2301      	movs	r3, #1
 801b980:	61fb      	str	r3, [r7, #28]
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 801b982:	f107 030c 	add.w	r3, r7, #12
 801b986:	4619      	mov	r1, r3
 801b988:	4804      	ldr	r0, [pc, #16]	; (801b99c <HAL_TIM_MspPostInit+0x6c>)
 801b98a:	f000 fd33 	bl	801c3f4 <HAL_GPIO_Init>
  /* USER CODE BEGIN TIM2_MspPostInit 1 */

  /* USER CODE END TIM2_MspPostInit 1 */
  }

}
 801b98e:	bf00      	nop
 801b990:	3720      	adds	r7, #32
 801b992:	46bd      	mov	sp, r7
 801b994:	bd80      	pop	{r7, pc}
 801b996:	bf00      	nop
 801b998:	40023800 	.word	0x40023800
 801b99c:	40020000 	.word	0x40020000

0801b9a0 <MX_USART2_UART_Init>:
UART_HandleTypeDef huart2;

/* USART2 init function */

void MX_USART2_UART_Init(void)
{
 801b9a0:	b580      	push	{r7, lr}
 801b9a2:	af00      	add	r7, sp, #0

  huart2.Instance = USART2;
 801b9a4:	4b11      	ldr	r3, [pc, #68]	; (801b9ec <MX_USART2_UART_Init+0x4c>)
 801b9a6:	4a12      	ldr	r2, [pc, #72]	; (801b9f0 <MX_USART2_UART_Init+0x50>)
 801b9a8:	601a      	str	r2, [r3, #0]
  huart2.Init.BaudRate = 115200;
 801b9aa:	4b10      	ldr	r3, [pc, #64]	; (801b9ec <MX_USART2_UART_Init+0x4c>)
 801b9ac:	f44f 32e1 	mov.w	r2, #115200	; 0x1c200
 801b9b0:	605a      	str	r2, [r3, #4]
  huart2.Init.WordLength = UART_WORDLENGTH_8B;
 801b9b2:	4b0e      	ldr	r3, [pc, #56]	; (801b9ec <MX_USART2_UART_Init+0x4c>)
 801b9b4:	2200      	movs	r2, #0
 801b9b6:	609a      	str	r2, [r3, #8]
  huart2.Init.StopBits = UART_STOPBITS_1;
 801b9b8:	4b0c      	ldr	r3, [pc, #48]	; (801b9ec <MX_USART2_UART_Init+0x4c>)
 801b9ba:	2200      	movs	r2, #0
 801b9bc:	60da      	str	r2, [r3, #12]
  huart2.Init.Parity = UART_PARITY_NONE;
 801b9be:	4b0b      	ldr	r3, [pc, #44]	; (801b9ec <MX_USART2_UART_Init+0x4c>)
 801b9c0:	2200      	movs	r2, #0
 801b9c2:	611a      	str	r2, [r3, #16]
  huart2.Init.Mode = UART_MODE_TX_RX;
 801b9c4:	4b09      	ldr	r3, [pc, #36]	; (801b9ec <MX_USART2_UART_Init+0x4c>)
 801b9c6:	220c      	movs	r2, #12
 801b9c8:	615a      	str	r2, [r3, #20]
  huart2.Init.HwFlowCtl = UART_HWCONTROL_NONE;
 801b9ca:	4b08      	ldr	r3, [pc, #32]	; (801b9ec <MX_USART2_UART_Init+0x4c>)
 801b9cc:	2200      	movs	r2, #0
 801b9ce:	619a      	str	r2, [r3, #24]
  huart2.Init.OverSampling = UART_OVERSAMPLING_16;
 801b9d0:	4b06      	ldr	r3, [pc, #24]	; (801b9ec <MX_USART2_UART_Init+0x4c>)
 801b9d2:	2200      	movs	r2, #0
 801b9d4:	61da      	str	r2, [r3, #28]
  if (HAL_UART_Init(&huart2) != HAL_OK)
 801b9d6:	4805      	ldr	r0, [pc, #20]	; (801b9ec <MX_USART2_UART_Init+0x4c>)
 801b9d8:	f002 fd9a 	bl	801e510 <HAL_UART_Init>
 801b9dc:	4603      	mov	r3, r0
 801b9de:	2b00      	cmp	r3, #0
 801b9e0:	d001      	beq.n	801b9e6 <MX_USART2_UART_Init+0x46>
  {
    Error_Handler();
 801b9e2:	f7ff fe1b 	bl	801b61c <Error_Handler>
  }

}
 801b9e6:	bf00      	nop
 801b9e8:	bd80      	pop	{r7, pc}
 801b9ea:	bf00      	nop
 801b9ec:	20000198 	.word	0x20000198
 801b9f0:	40004400 	.word	0x40004400

0801b9f4 <HAL_UART_MspInit>:

void HAL_UART_MspInit(UART_HandleTypeDef* uartHandle)
{
 801b9f4:	b580      	push	{r7, lr}
 801b9f6:	b08a      	sub	sp, #40	; 0x28
 801b9f8:	af00      	add	r7, sp, #0
 801b9fa:	6078      	str	r0, [r7, #4]

  GPIO_InitTypeDef GPIO_InitStruct = {0};
 801b9fc:	f107 0314 	add.w	r3, r7, #20
 801ba00:	2200      	movs	r2, #0
 801ba02:	601a      	str	r2, [r3, #0]
 801ba04:	605a      	str	r2, [r3, #4]
 801ba06:	609a      	str	r2, [r3, #8]
 801ba08:	60da      	str	r2, [r3, #12]
 801ba0a:	611a      	str	r2, [r3, #16]
  if(uartHandle->Instance==USART2)
 801ba0c:	687b      	ldr	r3, [r7, #4]
 801ba0e:	681b      	ldr	r3, [r3, #0]
 801ba10:	4a19      	ldr	r2, [pc, #100]	; (801ba78 <HAL_UART_MspInit+0x84>)
 801ba12:	4293      	cmp	r3, r2
 801ba14:	d12b      	bne.n	801ba6e <HAL_UART_MspInit+0x7a>
  {
  /* USER CODE BEGIN USART2_MspInit 0 */

  /* USER CODE END USART2_MspInit 0 */
    /* USART2 clock enable */
    __HAL_RCC_USART2_CLK_ENABLE();
 801ba16:	2300      	movs	r3, #0
 801ba18:	613b      	str	r3, [r7, #16]
 801ba1a:	4b18      	ldr	r3, [pc, #96]	; (801ba7c <HAL_UART_MspInit+0x88>)
 801ba1c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801ba1e:	4a17      	ldr	r2, [pc, #92]	; (801ba7c <HAL_UART_MspInit+0x88>)
 801ba20:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 801ba24:	6413      	str	r3, [r2, #64]	; 0x40
 801ba26:	4b15      	ldr	r3, [pc, #84]	; (801ba7c <HAL_UART_MspInit+0x88>)
 801ba28:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801ba2a:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801ba2e:	613b      	str	r3, [r7, #16]
 801ba30:	693b      	ldr	r3, [r7, #16]

    __HAL_RCC_GPIOA_CLK_ENABLE();
 801ba32:	2300      	movs	r3, #0
 801ba34:	60fb      	str	r3, [r7, #12]
 801ba36:	4b11      	ldr	r3, [pc, #68]	; (801ba7c <HAL_UART_MspInit+0x88>)
 801ba38:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ba3a:	4a10      	ldr	r2, [pc, #64]	; (801ba7c <HAL_UART_MspInit+0x88>)
 801ba3c:	f043 0301 	orr.w	r3, r3, #1
 801ba40:	6313      	str	r3, [r2, #48]	; 0x30
 801ba42:	4b0e      	ldr	r3, [pc, #56]	; (801ba7c <HAL_UART_MspInit+0x88>)
 801ba44:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ba46:	f003 0301 	and.w	r3, r3, #1
 801ba4a:	60fb      	str	r3, [r7, #12]
 801ba4c:	68fb      	ldr	r3, [r7, #12]
    /**USART2 GPIO Configuration
    PA2     ------> USART2_TX
    PA3     ------> USART2_RX
    */
    GPIO_InitStruct.Pin = USART_TX_Pin|USART_RX_Pin;
 801ba4e:	230c      	movs	r3, #12
 801ba50:	617b      	str	r3, [r7, #20]
    GPIO_InitStruct.Mode = GPIO_MODE_AF_PP;
 801ba52:	2302      	movs	r3, #2
 801ba54:	61bb      	str	r3, [r7, #24]
    GPIO_InitStruct.Pull = GPIO_NOPULL;
 801ba56:	2300      	movs	r3, #0
 801ba58:	61fb      	str	r3, [r7, #28]
    GPIO_InitStruct.Speed = GPIO_SPEED_FREQ_LOW;
 801ba5a:	2300      	movs	r3, #0
 801ba5c:	623b      	str	r3, [r7, #32]
    GPIO_InitStruct.Alternate = GPIO_AF7_USART2;
 801ba5e:	2307      	movs	r3, #7
 801ba60:	627b      	str	r3, [r7, #36]	; 0x24
    HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 801ba62:	f107 0314 	add.w	r3, r7, #20
 801ba66:	4619      	mov	r1, r3
 801ba68:	4805      	ldr	r0, [pc, #20]	; (801ba80 <HAL_UART_MspInit+0x8c>)
 801ba6a:	f000 fcc3 	bl	801c3f4 <HAL_GPIO_Init>

  /* USER CODE BEGIN USART2_MspInit 1 */

  /* USER CODE END USART2_MspInit 1 */
  }
}
 801ba6e:	bf00      	nop
 801ba70:	3728      	adds	r7, #40	; 0x28
 801ba72:	46bd      	mov	sp, r7
 801ba74:	bd80      	pop	{r7, pc}
 801ba76:	bf00      	nop
 801ba78:	40004400 	.word	0x40004400
 801ba7c:	40023800 	.word	0x40023800
 801ba80:	40020000 	.word	0x40020000

0801ba84 <Reset_Handler>:

    .section  .text.Reset_Handler
  .weak  Reset_Handler
  .type  Reset_Handler, %function
Reset_Handler:  
  ldr   sp, =_estack    		 /* set stack pointer */
 801ba84:	f8df d034 	ldr.w	sp, [pc, #52]	; 801babc <LoopFillZerobss+0x14>

/* Copy the data segment initializers from flash to SRAM */  
  movs  r1, #0
 801ba88:	2100      	movs	r1, #0
  b  LoopCopyDataInit
 801ba8a:	e003      	b.n	801ba94 <LoopCopyDataInit>

0801ba8c <CopyDataInit>:

CopyDataInit:
  ldr  r3, =_sidata
 801ba8c:	4b0c      	ldr	r3, [pc, #48]	; (801bac0 <LoopFillZerobss+0x18>)
  ldr  r3, [r3, r1]
 801ba8e:	585b      	ldr	r3, [r3, r1]
  str  r3, [r0, r1]
 801ba90:	5043      	str	r3, [r0, r1]
  adds  r1, r1, #4
 801ba92:	3104      	adds	r1, #4

0801ba94 <LoopCopyDataInit>:
    
LoopCopyDataInit:
  ldr  r0, =_sdata
 801ba94:	480b      	ldr	r0, [pc, #44]	; (801bac4 <LoopFillZerobss+0x1c>)
  ldr  r3, =_edata
 801ba96:	4b0c      	ldr	r3, [pc, #48]	; (801bac8 <LoopFillZerobss+0x20>)
  adds  r2, r0, r1
 801ba98:	1842      	adds	r2, r0, r1
  cmp  r2, r3
 801ba9a:	429a      	cmp	r2, r3
  bcc  CopyDataInit
 801ba9c:	d3f6      	bcc.n	801ba8c <CopyDataInit>
  ldr  r2, =_sbss
 801ba9e:	4a0b      	ldr	r2, [pc, #44]	; (801bacc <LoopFillZerobss+0x24>)
  b  LoopFillZerobss
 801baa0:	e002      	b.n	801baa8 <LoopFillZerobss>

0801baa2 <FillZerobss>:
/* Zero fill the bss segment. */  
FillZerobss:
  movs  r3, #0
 801baa2:	2300      	movs	r3, #0
  str  r3, [r2], #4
 801baa4:	f842 3b04 	str.w	r3, [r2], #4

0801baa8 <LoopFillZerobss>:
    
LoopFillZerobss:
  ldr  r3, = _ebss
 801baa8:	4b09      	ldr	r3, [pc, #36]	; (801bad0 <LoopFillZerobss+0x28>)
  cmp  r2, r3
 801baaa:	429a      	cmp	r2, r3
  bcc  FillZerobss
 801baac:	d3f9      	bcc.n	801baa2 <FillZerobss>

/* Call the clock system intitialization function.*/
  bl  SystemInit   
 801baae:	f7ff fe63 	bl	801b778 <SystemInit>
/* Call static constructors */
    bl __libc_init_array
 801bab2:	f003 f9df 	bl	801ee74 <__libc_init_array>
/* Call the application's entry point.*/
  bl  main
 801bab6:	f7ff fccd 	bl	801b454 <main>
  bx  lr    
 801baba:	4770      	bx	lr
  ldr   sp, =_estack    		 /* set stack pointer */
 801babc:	20018000 	.word	0x20018000
  ldr  r3, =_sidata
 801bac0:	0802a010 	.word	0x0802a010
  ldr  r0, =_sdata
 801bac4:	20000000 	.word	0x20000000
  ldr  r3, =_edata
 801bac8:	20000074 	.word	0x20000074
  ldr  r2, =_sbss
 801bacc:	20000074 	.word	0x20000074
  ldr  r3, = _ebss
 801bad0:	200001e0 	.word	0x200001e0

0801bad4 <ADC_IRQHandler>:
 * @retval None       
*/
    .section  .text.Default_Handler,"ax",%progbits
Default_Handler:
Infinite_Loop:
  b  Infinite_Loop
 801bad4:	e7fe      	b.n	801bad4 <ADC_IRQHandler>
	...

0801bad8 <HAL_Init>:
  *         need to ensure that the SysTick time base is always set to 1 millisecond
  *         to have correct HAL operation.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_Init(void)
{
 801bad8:	b580      	push	{r7, lr}
 801bada:	af00      	add	r7, sp, #0
  /* Configure Flash prefetch, Instruction cache, Data cache */ 
#if (INSTRUCTION_CACHE_ENABLE != 0U)
  __HAL_FLASH_INSTRUCTION_CACHE_ENABLE();
 801badc:	4b0e      	ldr	r3, [pc, #56]	; (801bb18 <HAL_Init+0x40>)
 801bade:	681b      	ldr	r3, [r3, #0]
 801bae0:	4a0d      	ldr	r2, [pc, #52]	; (801bb18 <HAL_Init+0x40>)
 801bae2:	f443 7300 	orr.w	r3, r3, #512	; 0x200
 801bae6:	6013      	str	r3, [r2, #0]
#endif /* INSTRUCTION_CACHE_ENABLE */

#if (DATA_CACHE_ENABLE != 0U)
  __HAL_FLASH_DATA_CACHE_ENABLE();
 801bae8:	4b0b      	ldr	r3, [pc, #44]	; (801bb18 <HAL_Init+0x40>)
 801baea:	681b      	ldr	r3, [r3, #0]
 801baec:	4a0a      	ldr	r2, [pc, #40]	; (801bb18 <HAL_Init+0x40>)
 801baee:	f443 6380 	orr.w	r3, r3, #1024	; 0x400
 801baf2:	6013      	str	r3, [r2, #0]
#endif /* DATA_CACHE_ENABLE */

#if (PREFETCH_ENABLE != 0U)
  __HAL_FLASH_PREFETCH_BUFFER_ENABLE();
 801baf4:	4b08      	ldr	r3, [pc, #32]	; (801bb18 <HAL_Init+0x40>)
 801baf6:	681b      	ldr	r3, [r3, #0]
 801baf8:	4a07      	ldr	r2, [pc, #28]	; (801bb18 <HAL_Init+0x40>)
 801bafa:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 801bafe:	6013      	str	r3, [r2, #0]
#endif /* PREFETCH_ENABLE */

  /* Set Interrupt Group Priority */
  HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 801bb00:	2003      	movs	r0, #3
 801bb02:	f000 f94d 	bl	801bda0 <HAL_NVIC_SetPriorityGrouping>

  /* Use systick as time base source and configure 1ms tick (default clock after Reset is HSI) */
  HAL_InitTick(TICK_INT_PRIORITY);
 801bb06:	2000      	movs	r0, #0
 801bb08:	f000 f808 	bl	801bb1c <HAL_InitTick>

  /* Init the low level hardware */
  HAL_MspInit();
 801bb0c:	f7ff fd8a 	bl	801b624 <HAL_MspInit>

  /* Return function status */
  return HAL_OK;
 801bb10:	2300      	movs	r3, #0
}
 801bb12:	4618      	mov	r0, r3
 801bb14:	bd80      	pop	{r7, pc}
 801bb16:	bf00      	nop
 801bb18:	40023c00 	.word	0x40023c00

0801bb1c <HAL_InitTick>:
  *       implementation  in user file.
  * @param TickPriority Tick interrupt priority.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_InitTick(uint32_t TickPriority)
{
 801bb1c:	b580      	push	{r7, lr}
 801bb1e:	b082      	sub	sp, #8
 801bb20:	af00      	add	r7, sp, #0
 801bb22:	6078      	str	r0, [r7, #4]
  /* Configure the SysTick to have interrupt in 1ms time basis*/
  if (HAL_SYSTICK_Config(SystemCoreClock / (1000U / uwTickFreq)) > 0U)
 801bb24:	4b12      	ldr	r3, [pc, #72]	; (801bb70 <HAL_InitTick+0x54>)
 801bb26:	681a      	ldr	r2, [r3, #0]
 801bb28:	4b12      	ldr	r3, [pc, #72]	; (801bb74 <HAL_InitTick+0x58>)
 801bb2a:	781b      	ldrb	r3, [r3, #0]
 801bb2c:	4619      	mov	r1, r3
 801bb2e:	f44f 737a 	mov.w	r3, #1000	; 0x3e8
 801bb32:	fbb3 f3f1 	udiv	r3, r3, r1
 801bb36:	fbb2 f3f3 	udiv	r3, r2, r3
 801bb3a:	4618      	mov	r0, r3
 801bb3c:	f000 f965 	bl	801be0a <HAL_SYSTICK_Config>
 801bb40:	4603      	mov	r3, r0
 801bb42:	2b00      	cmp	r3, #0
 801bb44:	d001      	beq.n	801bb4a <HAL_InitTick+0x2e>
  {
    return HAL_ERROR;
 801bb46:	2301      	movs	r3, #1
 801bb48:	e00e      	b.n	801bb68 <HAL_InitTick+0x4c>
  }

  /* Configure the SysTick IRQ priority */
  if (TickPriority < (1UL << __NVIC_PRIO_BITS))
 801bb4a:	687b      	ldr	r3, [r7, #4]
 801bb4c:	2b0f      	cmp	r3, #15
 801bb4e:	d80a      	bhi.n	801bb66 <HAL_InitTick+0x4a>
  {
    HAL_NVIC_SetPriority(SysTick_IRQn, TickPriority, 0U);
 801bb50:	2200      	movs	r2, #0
 801bb52:	6879      	ldr	r1, [r7, #4]
 801bb54:	f04f 30ff 	mov.w	r0, #4294967295
 801bb58:	f000 f92d 	bl	801bdb6 <HAL_NVIC_SetPriority>
    uwTickPrio = TickPriority;
 801bb5c:	4a06      	ldr	r2, [pc, #24]	; (801bb78 <HAL_InitTick+0x5c>)
 801bb5e:	687b      	ldr	r3, [r7, #4]
 801bb60:	6013      	str	r3, [r2, #0]
  {
    return HAL_ERROR;
  }

  /* Return function status */
  return HAL_OK;
 801bb62:	2300      	movs	r3, #0
 801bb64:	e000      	b.n	801bb68 <HAL_InitTick+0x4c>
    return HAL_ERROR;
 801bb66:	2301      	movs	r3, #1
}
 801bb68:	4618      	mov	r0, r3
 801bb6a:	3708      	adds	r7, #8
 801bb6c:	46bd      	mov	sp, r7
 801bb6e:	bd80      	pop	{r7, pc}
 801bb70:	20000000 	.word	0x20000000
 801bb74:	20000008 	.word	0x20000008
 801bb78:	20000004 	.word	0x20000004

0801bb7c <HAL_IncTick>:
 * @note This function is declared as __weak to be overwritten in case of other 
  *      implementations in user file.
  * @retval None
  */
__weak void HAL_IncTick(void)
{
 801bb7c:	b480      	push	{r7}
 801bb7e:	af00      	add	r7, sp, #0
  uwTick += uwTickFreq;
 801bb80:	4b06      	ldr	r3, [pc, #24]	; (801bb9c <HAL_IncTick+0x20>)
 801bb82:	781b      	ldrb	r3, [r3, #0]
 801bb84:	461a      	mov	r2, r3
 801bb86:	4b06      	ldr	r3, [pc, #24]	; (801bba0 <HAL_IncTick+0x24>)
 801bb88:	681b      	ldr	r3, [r3, #0]
 801bb8a:	4413      	add	r3, r2
 801bb8c:	4a04      	ldr	r2, [pc, #16]	; (801bba0 <HAL_IncTick+0x24>)
 801bb8e:	6013      	str	r3, [r2, #0]
}
 801bb90:	bf00      	nop
 801bb92:	46bd      	mov	sp, r7
 801bb94:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bb98:	4770      	bx	lr
 801bb9a:	bf00      	nop
 801bb9c:	20000008 	.word	0x20000008
 801bba0:	200001d8 	.word	0x200001d8

0801bba4 <HAL_GetTick>:
  * @note This function is declared as __weak to be overwritten in case of other 
  *       implementations in user file.
  * @retval tick value
  */
__weak uint32_t HAL_GetTick(void)
{
 801bba4:	b480      	push	{r7}
 801bba6:	af00      	add	r7, sp, #0
  return uwTick;
 801bba8:	4b03      	ldr	r3, [pc, #12]	; (801bbb8 <HAL_GetTick+0x14>)
 801bbaa:	681b      	ldr	r3, [r3, #0]
}
 801bbac:	4618      	mov	r0, r3
 801bbae:	46bd      	mov	sp, r7
 801bbb0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bbb4:	4770      	bx	lr
 801bbb6:	bf00      	nop
 801bbb8:	200001d8 	.word	0x200001d8

0801bbbc <HAL_Delay>:
  *       implementations in user file.
  * @param Delay specifies the delay time length, in milliseconds.
  * @retval None
  */
__weak void HAL_Delay(uint32_t Delay)
{
 801bbbc:	b580      	push	{r7, lr}
 801bbbe:	b084      	sub	sp, #16
 801bbc0:	af00      	add	r7, sp, #0
 801bbc2:	6078      	str	r0, [r7, #4]
  uint32_t tickstart = HAL_GetTick();
 801bbc4:	f7ff ffee 	bl	801bba4 <HAL_GetTick>
 801bbc8:	60b8      	str	r0, [r7, #8]
  uint32_t wait = Delay;
 801bbca:	687b      	ldr	r3, [r7, #4]
 801bbcc:	60fb      	str	r3, [r7, #12]

  /* Add a freq to guarantee minimum wait */
  if (wait < HAL_MAX_DELAY)
 801bbce:	68fb      	ldr	r3, [r7, #12]
 801bbd0:	f1b3 3fff 	cmp.w	r3, #4294967295
 801bbd4:	d005      	beq.n	801bbe2 <HAL_Delay+0x26>
  {
    wait += (uint32_t)(uwTickFreq);
 801bbd6:	4b09      	ldr	r3, [pc, #36]	; (801bbfc <HAL_Delay+0x40>)
 801bbd8:	781b      	ldrb	r3, [r3, #0]
 801bbda:	461a      	mov	r2, r3
 801bbdc:	68fb      	ldr	r3, [r7, #12]
 801bbde:	4413      	add	r3, r2
 801bbe0:	60fb      	str	r3, [r7, #12]
  }

  while((HAL_GetTick() - tickstart) < wait)
 801bbe2:	bf00      	nop
 801bbe4:	f7ff ffde 	bl	801bba4 <HAL_GetTick>
 801bbe8:	4602      	mov	r2, r0
 801bbea:	68bb      	ldr	r3, [r7, #8]
 801bbec:	1ad3      	subs	r3, r2, r3
 801bbee:	68fa      	ldr	r2, [r7, #12]
 801bbf0:	429a      	cmp	r2, r3
 801bbf2:	d8f7      	bhi.n	801bbe4 <HAL_Delay+0x28>
  {
  }
}
 801bbf4:	bf00      	nop
 801bbf6:	3710      	adds	r7, #16
 801bbf8:	46bd      	mov	sp, r7
 801bbfa:	bd80      	pop	{r7, pc}
 801bbfc:	20000008 	.word	0x20000008

0801bc00 <__NVIC_SetPriorityGrouping>:
           In case of a conflict between priority grouping and available
           priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
  \param [in]      PriorityGroup  Priority grouping field.
 */
__STATIC_INLINE void __NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 801bc00:	b480      	push	{r7}
 801bc02:	b085      	sub	sp, #20
 801bc04:	af00      	add	r7, sp, #0
 801bc06:	6078      	str	r0, [r7, #4]
  uint32_t reg_value;
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 are used          */
 801bc08:	687b      	ldr	r3, [r7, #4]
 801bc0a:	f003 0307 	and.w	r3, r3, #7
 801bc0e:	60fb      	str	r3, [r7, #12]

  reg_value  =  SCB->AIRCR;                                                   /* read old register configuration    */
 801bc10:	4b0c      	ldr	r3, [pc, #48]	; (801bc44 <__NVIC_SetPriorityGrouping+0x44>)
 801bc12:	68db      	ldr	r3, [r3, #12]
 801bc14:	60bb      	str	r3, [r7, #8]
  reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to change               */
 801bc16:	68ba      	ldr	r2, [r7, #8]
 801bc18:	f64f 03ff 	movw	r3, #63743	; 0xf8ff
 801bc1c:	4013      	ands	r3, r2
 801bc1e:	60bb      	str	r3, [r7, #8]
  reg_value  =  (reg_value                                   |
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
                (PriorityGroupTmp << SCB_AIRCR_PRIGROUP_Pos)  );              /* Insert write key and priority group */
 801bc20:	68fb      	ldr	r3, [r7, #12]
 801bc22:	021a      	lsls	r2, r3, #8
                ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
 801bc24:	68bb      	ldr	r3, [r7, #8]
 801bc26:	4313      	orrs	r3, r2
  reg_value  =  (reg_value                                   |
 801bc28:	f043 63bf 	orr.w	r3, r3, #100139008	; 0x5f80000
 801bc2c:	f443 3300 	orr.w	r3, r3, #131072	; 0x20000
 801bc30:	60bb      	str	r3, [r7, #8]
  SCB->AIRCR =  reg_value;
 801bc32:	4a04      	ldr	r2, [pc, #16]	; (801bc44 <__NVIC_SetPriorityGrouping+0x44>)
 801bc34:	68bb      	ldr	r3, [r7, #8]
 801bc36:	60d3      	str	r3, [r2, #12]
}
 801bc38:	bf00      	nop
 801bc3a:	3714      	adds	r7, #20
 801bc3c:	46bd      	mov	sp, r7
 801bc3e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bc42:	4770      	bx	lr
 801bc44:	e000ed00 	.word	0xe000ed00

0801bc48 <__NVIC_GetPriorityGrouping>:
  \brief   Get Priority Grouping
  \details Reads the priority grouping field from the NVIC Interrupt Controller.
  \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
 */
__STATIC_INLINE uint32_t __NVIC_GetPriorityGrouping(void)
{
 801bc48:	b480      	push	{r7}
 801bc4a:	af00      	add	r7, sp, #0
  return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
 801bc4c:	4b04      	ldr	r3, [pc, #16]	; (801bc60 <__NVIC_GetPriorityGrouping+0x18>)
 801bc4e:	68db      	ldr	r3, [r3, #12]
 801bc50:	0a1b      	lsrs	r3, r3, #8
 801bc52:	f003 0307 	and.w	r3, r3, #7
}
 801bc56:	4618      	mov	r0, r3
 801bc58:	46bd      	mov	sp, r7
 801bc5a:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bc5e:	4770      	bx	lr
 801bc60:	e000ed00 	.word	0xe000ed00

0801bc64 <__NVIC_EnableIRQ>:
  \details Enables a device specific interrupt in the NVIC interrupt controller.
  \param [in]      IRQn  Device specific interrupt number.
  \note    IRQn must not be negative.
 */
__STATIC_INLINE void __NVIC_EnableIRQ(IRQn_Type IRQn)
{
 801bc64:	b480      	push	{r7}
 801bc66:	b083      	sub	sp, #12
 801bc68:	af00      	add	r7, sp, #0
 801bc6a:	4603      	mov	r3, r0
 801bc6c:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 801bc6e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801bc72:	2b00      	cmp	r3, #0
 801bc74:	db0b      	blt.n	801bc8e <__NVIC_EnableIRQ+0x2a>
  {
    NVIC->ISER[(((uint32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)IRQn) & 0x1FUL));
 801bc76:	79fb      	ldrb	r3, [r7, #7]
 801bc78:	f003 021f 	and.w	r2, r3, #31
 801bc7c:	4907      	ldr	r1, [pc, #28]	; (801bc9c <__NVIC_EnableIRQ+0x38>)
 801bc7e:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801bc82:	095b      	lsrs	r3, r3, #5
 801bc84:	2001      	movs	r0, #1
 801bc86:	fa00 f202 	lsl.w	r2, r0, r2
 801bc8a:	f841 2023 	str.w	r2, [r1, r3, lsl #2]
  }
}
 801bc8e:	bf00      	nop
 801bc90:	370c      	adds	r7, #12
 801bc92:	46bd      	mov	sp, r7
 801bc94:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bc98:	4770      	bx	lr
 801bc9a:	bf00      	nop
 801bc9c:	e000e100 	.word	0xe000e100

0801bca0 <__NVIC_SetPriority>:
  \param [in]      IRQn  Interrupt number.
  \param [in]  priority  Priority to set.
  \note    The priority cannot be set for every processor exception.
 */
__STATIC_INLINE void __NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
{
 801bca0:	b480      	push	{r7}
 801bca2:	b083      	sub	sp, #12
 801bca4:	af00      	add	r7, sp, #0
 801bca6:	4603      	mov	r3, r0
 801bca8:	6039      	str	r1, [r7, #0]
 801bcaa:	71fb      	strb	r3, [r7, #7]
  if ((int32_t)(IRQn) >= 0)
 801bcac:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801bcb0:	2b00      	cmp	r3, #0
 801bcb2:	db0a      	blt.n	801bcca <__NVIC_SetPriority+0x2a>
  {
    NVIC->IP[((uint32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801bcb4:	683b      	ldr	r3, [r7, #0]
 801bcb6:	b2da      	uxtb	r2, r3
 801bcb8:	490c      	ldr	r1, [pc, #48]	; (801bcec <__NVIC_SetPriority+0x4c>)
 801bcba:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801bcbe:	0112      	lsls	r2, r2, #4
 801bcc0:	b2d2      	uxtb	r2, r2
 801bcc2:	440b      	add	r3, r1
 801bcc4:	f883 2300 	strb.w	r2, [r3, #768]	; 0x300
  }
  else
  {
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
  }
}
 801bcc8:	e00a      	b.n	801bce0 <__NVIC_SetPriority+0x40>
    SCB->SHP[(((uint32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BITS)) & (uint32_t)0xFFUL);
 801bcca:	683b      	ldr	r3, [r7, #0]
 801bccc:	b2da      	uxtb	r2, r3
 801bcce:	4908      	ldr	r1, [pc, #32]	; (801bcf0 <__NVIC_SetPriority+0x50>)
 801bcd0:	79fb      	ldrb	r3, [r7, #7]
 801bcd2:	f003 030f 	and.w	r3, r3, #15
 801bcd6:	3b04      	subs	r3, #4
 801bcd8:	0112      	lsls	r2, r2, #4
 801bcda:	b2d2      	uxtb	r2, r2
 801bcdc:	440b      	add	r3, r1
 801bcde:	761a      	strb	r2, [r3, #24]
}
 801bce0:	bf00      	nop
 801bce2:	370c      	adds	r7, #12
 801bce4:	46bd      	mov	sp, r7
 801bce6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bcea:	4770      	bx	lr
 801bcec:	e000e100 	.word	0xe000e100
 801bcf0:	e000ed00 	.word	0xe000ed00

0801bcf4 <NVIC_EncodePriority>:
  \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
  \param [in]       SubPriority  Subpriority value (starting from 0).
  \return                        Encoded priority. Value can be used in the function \ref NVIC_SetPriority().
 */
__STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uint32_t SubPriority)
{
 801bcf4:	b480      	push	{r7}
 801bcf6:	b089      	sub	sp, #36	; 0x24
 801bcf8:	af00      	add	r7, sp, #0
 801bcfa:	60f8      	str	r0, [r7, #12]
 801bcfc:	60b9      	str	r1, [r7, #8]
 801bcfe:	607a      	str	r2, [r7, #4]
  uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used          */
 801bd00:	68fb      	ldr	r3, [r7, #12]
 801bd02:	f003 0307 	and.w	r3, r3, #7
 801bd06:	61fb      	str	r3, [r7, #28]
  uint32_t PreemptPriorityBits;
  uint32_t SubPriorityBits;

  PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NVIC_PRIO_BITS) : (uint32_t)(7UL - PriorityGroupTmp);
 801bd08:	69fb      	ldr	r3, [r7, #28]
 801bd0a:	f1c3 0307 	rsb	r3, r3, #7
 801bd0e:	2b04      	cmp	r3, #4
 801bd10:	bf28      	it	cs
 801bd12:	2304      	movcs	r3, #4
 801bd14:	61bb      	str	r3, [r7, #24]
  SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint32_t)0UL : (uint32_t)((PriorityGroupTmp - 7UL) + (uint32_t)(__NVIC_PRIO_BITS));
 801bd16:	69fb      	ldr	r3, [r7, #28]
 801bd18:	3304      	adds	r3, #4
 801bd1a:	2b06      	cmp	r3, #6
 801bd1c:	d902      	bls.n	801bd24 <NVIC_EncodePriority+0x30>
 801bd1e:	69fb      	ldr	r3, [r7, #28]
 801bd20:	3b03      	subs	r3, #3
 801bd22:	e000      	b.n	801bd26 <NVIC_EncodePriority+0x32>
 801bd24:	2300      	movs	r3, #0
 801bd26:	617b      	str	r3, [r7, #20]

  return (
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 801bd28:	f04f 32ff 	mov.w	r2, #4294967295
 801bd2c:	69bb      	ldr	r3, [r7, #24]
 801bd2e:	fa02 f303 	lsl.w	r3, r2, r3
 801bd32:	43da      	mvns	r2, r3
 801bd34:	68bb      	ldr	r3, [r7, #8]
 801bd36:	401a      	ands	r2, r3
 801bd38:	697b      	ldr	r3, [r7, #20]
 801bd3a:	409a      	lsls	r2, r3
           ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 801bd3c:	f04f 31ff 	mov.w	r1, #4294967295
 801bd40:	697b      	ldr	r3, [r7, #20]
 801bd42:	fa01 f303 	lsl.w	r3, r1, r3
 801bd46:	43d9      	mvns	r1, r3
 801bd48:	687b      	ldr	r3, [r7, #4]
 801bd4a:	400b      	ands	r3, r1
           ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits) |
 801bd4c:	4313      	orrs	r3, r2
         );
}
 801bd4e:	4618      	mov	r0, r3
 801bd50:	3724      	adds	r7, #36	; 0x24
 801bd52:	46bd      	mov	sp, r7
 801bd54:	f85d 7b04 	ldr.w	r7, [sp], #4
 801bd58:	4770      	bx	lr
	...

0801bd5c <SysTick_Config>:
  \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
           function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.h</b>
           must contain a vendor-specific implementation of this function.
 */
__STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
{
 801bd5c:	b580      	push	{r7, lr}
 801bd5e:	b082      	sub	sp, #8
 801bd60:	af00      	add	r7, sp, #0
 801bd62:	6078      	str	r0, [r7, #4]
  if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 801bd64:	687b      	ldr	r3, [r7, #4]
 801bd66:	3b01      	subs	r3, #1
 801bd68:	f1b3 7f80 	cmp.w	r3, #16777216	; 0x1000000
 801bd6c:	d301      	bcc.n	801bd72 <SysTick_Config+0x16>
  {
    return (1UL);                                                   /* Reload value impossible */
 801bd6e:	2301      	movs	r3, #1
 801bd70:	e00f      	b.n	801bd92 <SysTick_Config+0x36>
  }

  SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 801bd72:	4a0a      	ldr	r2, [pc, #40]	; (801bd9c <SysTick_Config+0x40>)
 801bd74:	687b      	ldr	r3, [r7, #4]
 801bd76:	3b01      	subs	r3, #1
 801bd78:	6053      	str	r3, [r2, #4]
  NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Interrupt */
 801bd7a:	210f      	movs	r1, #15
 801bd7c:	f04f 30ff 	mov.w	r0, #4294967295
 801bd80:	f7ff ff8e 	bl	801bca0 <__NVIC_SetPriority>
  SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Value */
 801bd84:	4b05      	ldr	r3, [pc, #20]	; (801bd9c <SysTick_Config+0x40>)
 801bd86:	2200      	movs	r2, #0
 801bd88:	609a      	str	r2, [r3, #8]
  SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 801bd8a:	4b04      	ldr	r3, [pc, #16]	; (801bd9c <SysTick_Config+0x40>)
 801bd8c:	2207      	movs	r2, #7
 801bd8e:	601a      	str	r2, [r3, #0]
                   SysTick_CTRL_TICKINT_Msk   |
                   SysTick_CTRL_ENABLE_Msk;                         /* Enable SysTick IRQ and SysTick Timer */
  return (0UL);                                                     /* Function successful */
 801bd90:	2300      	movs	r3, #0
}
 801bd92:	4618      	mov	r0, r3
 801bd94:	3708      	adds	r7, #8
 801bd96:	46bd      	mov	sp, r7
 801bd98:	bd80      	pop	{r7, pc}
 801bd9a:	bf00      	nop
 801bd9c:	e000e010 	.word	0xe000e010

0801bda0 <HAL_NVIC_SetPriorityGrouping>:
  * @note   When the NVIC_PriorityGroup_0 is selected, IRQ preemption is no more possible. 
  *         The pending IRQ priority will be managed only by the subpriority. 
  * @retval None
  */
void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
{
 801bda0:	b580      	push	{r7, lr}
 801bda2:	b082      	sub	sp, #8
 801bda4:	af00      	add	r7, sp, #0
 801bda6:	6078      	str	r0, [r7, #4]
  /* Check the parameters */
  assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
  
  /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
  NVIC_SetPriorityGrouping(PriorityGroup);
 801bda8:	6878      	ldr	r0, [r7, #4]
 801bdaa:	f7ff ff29 	bl	801bc00 <__NVIC_SetPriorityGrouping>
}
 801bdae:	bf00      	nop
 801bdb0:	3708      	adds	r7, #8
 801bdb2:	46bd      	mov	sp, r7
 801bdb4:	bd80      	pop	{r7, pc}

0801bdb6 <HAL_NVIC_SetPriority>:
  *         This parameter can be a value between 0 and 15
  *         A lower priority value indicates a higher priority.          
  * @retval None
  */
void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
{ 
 801bdb6:	b580      	push	{r7, lr}
 801bdb8:	b086      	sub	sp, #24
 801bdba:	af00      	add	r7, sp, #0
 801bdbc:	4603      	mov	r3, r0
 801bdbe:	60b9      	str	r1, [r7, #8]
 801bdc0:	607a      	str	r2, [r7, #4]
 801bdc2:	73fb      	strb	r3, [r7, #15]
  uint32_t prioritygroup = 0x00U;
 801bdc4:	2300      	movs	r3, #0
 801bdc6:	617b      	str	r3, [r7, #20]
  
  /* Check the parameters */
  assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
  assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
  
  prioritygroup = NVIC_GetPriorityGrouping();
 801bdc8:	f7ff ff3e 	bl	801bc48 <__NVIC_GetPriorityGrouping>
 801bdcc:	6178      	str	r0, [r7, #20]
  
  NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 801bdce:	687a      	ldr	r2, [r7, #4]
 801bdd0:	68b9      	ldr	r1, [r7, #8]
 801bdd2:	6978      	ldr	r0, [r7, #20]
 801bdd4:	f7ff ff8e 	bl	801bcf4 <NVIC_EncodePriority>
 801bdd8:	4602      	mov	r2, r0
 801bdda:	f997 300f 	ldrsb.w	r3, [r7, #15]
 801bdde:	4611      	mov	r1, r2
 801bde0:	4618      	mov	r0, r3
 801bde2:	f7ff ff5d 	bl	801bca0 <__NVIC_SetPriority>
}
 801bde6:	bf00      	nop
 801bde8:	3718      	adds	r7, #24
 801bdea:	46bd      	mov	sp, r7
 801bdec:	bd80      	pop	{r7, pc}

0801bdee <HAL_NVIC_EnableIRQ>:
  *         This parameter can be an enumerator of IRQn_Type enumeration
  *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSIS device file (stm32f4xxxx.h))
  * @retval None
  */
void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
{
 801bdee:	b580      	push	{r7, lr}
 801bdf0:	b082      	sub	sp, #8
 801bdf2:	af00      	add	r7, sp, #0
 801bdf4:	4603      	mov	r3, r0
 801bdf6:	71fb      	strb	r3, [r7, #7]
  /* Check the parameters */
  assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
  
  /* Enable interrupt */
  NVIC_EnableIRQ(IRQn);
 801bdf8:	f997 3007 	ldrsb.w	r3, [r7, #7]
 801bdfc:	4618      	mov	r0, r3
 801bdfe:	f7ff ff31 	bl	801bc64 <__NVIC_EnableIRQ>
}
 801be02:	bf00      	nop
 801be04:	3708      	adds	r7, #8
 801be06:	46bd      	mov	sp, r7
 801be08:	bd80      	pop	{r7, pc}

0801be0a <HAL_SYSTICK_Config>:
  * @param  TicksNumb Specifies the ticks Number of ticks between two interrupts.
  * @retval status:  - 0  Function succeeded.
  *                  - 1  Function failed.
  */
uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
{
 801be0a:	b580      	push	{r7, lr}
 801be0c:	b082      	sub	sp, #8
 801be0e:	af00      	add	r7, sp, #0
 801be10:	6078      	str	r0, [r7, #4]
   return SysTick_Config(TicksNumb);
 801be12:	6878      	ldr	r0, [r7, #4]
 801be14:	f7ff ffa2 	bl	801bd5c <SysTick_Config>
 801be18:	4603      	mov	r3, r0
}
 801be1a:	4618      	mov	r0, r3
 801be1c:	3708      	adds	r7, #8
 801be1e:	46bd      	mov	sp, r7
 801be20:	bd80      	pop	{r7, pc}
	...

0801be24 <HAL_DMA_Init>:
  * @param  hdma Pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_DMA_Init(DMA_HandleTypeDef *hdma)
{
 801be24:	b580      	push	{r7, lr}
 801be26:	b086      	sub	sp, #24
 801be28:	af00      	add	r7, sp, #0
 801be2a:	6078      	str	r0, [r7, #4]
  uint32_t tmp = 0U;
 801be2c:	2300      	movs	r3, #0
 801be2e:	617b      	str	r3, [r7, #20]
  uint32_t tickstart = HAL_GetTick();
 801be30:	f7ff feb8 	bl	801bba4 <HAL_GetTick>
 801be34:	6138      	str	r0, [r7, #16]
  DMA_Base_Registers *regs;

  /* Check the DMA peripheral state */
  if(hdma == NULL)
 801be36:	687b      	ldr	r3, [r7, #4]
 801be38:	2b00      	cmp	r3, #0
 801be3a:	d101      	bne.n	801be40 <HAL_DMA_Init+0x1c>
  {
    return HAL_ERROR;
 801be3c:	2301      	movs	r3, #1
 801be3e:	e099      	b.n	801bf74 <HAL_DMA_Init+0x150>
    assert_param(IS_DMA_MEMORY_BURST(hdma->Init.MemBurst));
    assert_param(IS_DMA_PERIPHERAL_BURST(hdma->Init.PeriphBurst));
  }
  
  /* Allocate lock resource */
  __HAL_UNLOCK(hdma);
 801be40:	687b      	ldr	r3, [r7, #4]
 801be42:	2200      	movs	r2, #0
 801be44:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

  /* Change DMA peripheral state */
  hdma->State = HAL_DMA_STATE_BUSY;
 801be48:	687b      	ldr	r3, [r7, #4]
 801be4a:	2202      	movs	r2, #2
 801be4c:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
  
  /* Disable the peripheral */
  __HAL_DMA_DISABLE(hdma);
 801be50:	687b      	ldr	r3, [r7, #4]
 801be52:	681b      	ldr	r3, [r3, #0]
 801be54:	681a      	ldr	r2, [r3, #0]
 801be56:	687b      	ldr	r3, [r7, #4]
 801be58:	681b      	ldr	r3, [r3, #0]
 801be5a:	f022 0201 	bic.w	r2, r2, #1
 801be5e:	601a      	str	r2, [r3, #0]
  
  /* Check if the DMA Stream is effectively disabled */
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 801be60:	e00f      	b.n	801be82 <HAL_DMA_Init+0x5e>
  {
    /* Check for the Timeout */
    if((HAL_GetTick() - tickstart ) > HAL_TIMEOUT_DMA_ABORT)
 801be62:	f7ff fe9f 	bl	801bba4 <HAL_GetTick>
 801be66:	4602      	mov	r2, r0
 801be68:	693b      	ldr	r3, [r7, #16]
 801be6a:	1ad3      	subs	r3, r2, r3
 801be6c:	2b05      	cmp	r3, #5
 801be6e:	d908      	bls.n	801be82 <HAL_DMA_Init+0x5e>
    {
      /* Update error code */
      hdma->ErrorCode = HAL_DMA_ERROR_TIMEOUT;
 801be70:	687b      	ldr	r3, [r7, #4]
 801be72:	2220      	movs	r2, #32
 801be74:	655a      	str	r2, [r3, #84]	; 0x54
      
      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_TIMEOUT;
 801be76:	687b      	ldr	r3, [r7, #4]
 801be78:	2203      	movs	r2, #3
 801be7a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
      
      return HAL_TIMEOUT;
 801be7e:	2303      	movs	r3, #3
 801be80:	e078      	b.n	801bf74 <HAL_DMA_Init+0x150>
  while((hdma->Instance->CR & DMA_SxCR_EN) != RESET)
 801be82:	687b      	ldr	r3, [r7, #4]
 801be84:	681b      	ldr	r3, [r3, #0]
 801be86:	681b      	ldr	r3, [r3, #0]
 801be88:	f003 0301 	and.w	r3, r3, #1
 801be8c:	2b00      	cmp	r3, #0
 801be8e:	d1e8      	bne.n	801be62 <HAL_DMA_Init+0x3e>
    }
  }
  
  /* Get the CR register value */
  tmp = hdma->Instance->CR;
 801be90:	687b      	ldr	r3, [r7, #4]
 801be92:	681b      	ldr	r3, [r3, #0]
 801be94:	681b      	ldr	r3, [r3, #0]
 801be96:	617b      	str	r3, [r7, #20]

  /* Clear CHSEL, MBURST, PBURST, PL, MSIZE, PSIZE, MINC, PINC, CIRC, DIR, CT and DBM bits */
  tmp &= ((uint32_t)~(DMA_SxCR_CHSEL | DMA_SxCR_MBURST | DMA_SxCR_PBURST | \
 801be98:	697a      	ldr	r2, [r7, #20]
 801be9a:	4b38      	ldr	r3, [pc, #224]	; (801bf7c <HAL_DMA_Init+0x158>)
 801be9c:	4013      	ands	r3, r2
 801be9e:	617b      	str	r3, [r7, #20]
                      DMA_SxCR_PL    | DMA_SxCR_MSIZE  | DMA_SxCR_PSIZE  | \
                      DMA_SxCR_MINC  | DMA_SxCR_PINC   | DMA_SxCR_CIRC   | \
                      DMA_SxCR_DIR   | DMA_SxCR_CT     | DMA_SxCR_DBM));

  /* Prepare the DMA Stream configuration */
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 801bea0:	687b      	ldr	r3, [r7, #4]
 801bea2:	685a      	ldr	r2, [r3, #4]
 801bea4:	687b      	ldr	r3, [r7, #4]
 801bea6:	689b      	ldr	r3, [r3, #8]
 801bea8:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 801beaa:	687b      	ldr	r3, [r7, #4]
 801beac:	68db      	ldr	r3, [r3, #12]
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 801beae:	431a      	orrs	r2, r3
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 801beb0:	687b      	ldr	r3, [r7, #4]
 801beb2:	691b      	ldr	r3, [r3, #16]
 801beb4:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 801beb6:	687b      	ldr	r3, [r7, #4]
 801beb8:	695b      	ldr	r3, [r3, #20]
          hdma->Init.PeriphInc           | hdma->Init.MemInc           |
 801beba:	431a      	orrs	r2, r3
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 801bebc:	687b      	ldr	r3, [r7, #4]
 801bebe:	699b      	ldr	r3, [r3, #24]
 801bec0:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 801bec2:	687b      	ldr	r3, [r7, #4]
 801bec4:	69db      	ldr	r3, [r3, #28]
          hdma->Init.PeriphDataAlignment | hdma->Init.MemDataAlignment |
 801bec6:	431a      	orrs	r2, r3
          hdma->Init.Mode                | hdma->Init.Priority;
 801bec8:	687b      	ldr	r3, [r7, #4]
 801beca:	6a1b      	ldr	r3, [r3, #32]
 801becc:	4313      	orrs	r3, r2
  tmp |=  hdma->Init.Channel             | hdma->Init.Direction        |
 801bece:	697a      	ldr	r2, [r7, #20]
 801bed0:	4313      	orrs	r3, r2
 801bed2:	617b      	str	r3, [r7, #20]

  /* the Memory burst and peripheral burst are not used when the FIFO is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 801bed4:	687b      	ldr	r3, [r7, #4]
 801bed6:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801bed8:	2b04      	cmp	r3, #4
 801beda:	d107      	bne.n	801beec <HAL_DMA_Init+0xc8>
  {
    /* Get memory burst and peripheral burst */
    tmp |=  hdma->Init.MemBurst | hdma->Init.PeriphBurst;
 801bedc:	687b      	ldr	r3, [r7, #4]
 801bede:	6ada      	ldr	r2, [r3, #44]	; 0x2c
 801bee0:	687b      	ldr	r3, [r7, #4]
 801bee2:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801bee4:	4313      	orrs	r3, r2
 801bee6:	697a      	ldr	r2, [r7, #20]
 801bee8:	4313      	orrs	r3, r2
 801beea:	617b      	str	r3, [r7, #20]
  }
  
  /* Write to DMA Stream CR register */
  hdma->Instance->CR = tmp;  
 801beec:	687b      	ldr	r3, [r7, #4]
 801beee:	681b      	ldr	r3, [r3, #0]
 801bef0:	697a      	ldr	r2, [r7, #20]
 801bef2:	601a      	str	r2, [r3, #0]

  /* Get the FCR register value */
  tmp = hdma->Instance->FCR;
 801bef4:	687b      	ldr	r3, [r7, #4]
 801bef6:	681b      	ldr	r3, [r3, #0]
 801bef8:	695b      	ldr	r3, [r3, #20]
 801befa:	617b      	str	r3, [r7, #20]

  /* Clear Direct mode and FIFO threshold bits */
  tmp &= (uint32_t)~(DMA_SxFCR_DMDIS | DMA_SxFCR_FTH);
 801befc:	697b      	ldr	r3, [r7, #20]
 801befe:	f023 0307 	bic.w	r3, r3, #7
 801bf02:	617b      	str	r3, [r7, #20]

  /* Prepare the DMA Stream FIFO configuration */
  tmp |= hdma->Init.FIFOMode;
 801bf04:	687b      	ldr	r3, [r7, #4]
 801bf06:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801bf08:	697a      	ldr	r2, [r7, #20]
 801bf0a:	4313      	orrs	r3, r2
 801bf0c:	617b      	str	r3, [r7, #20]

  /* The FIFO threshold is not used when the FIFO mode is disabled */
  if(hdma->Init.FIFOMode == DMA_FIFOMODE_ENABLE)
 801bf0e:	687b      	ldr	r3, [r7, #4]
 801bf10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801bf12:	2b04      	cmp	r3, #4
 801bf14:	d117      	bne.n	801bf46 <HAL_DMA_Init+0x122>
  {
    /* Get the FIFO threshold */
    tmp |= hdma->Init.FIFOThreshold;
 801bf16:	687b      	ldr	r3, [r7, #4]
 801bf18:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801bf1a:	697a      	ldr	r2, [r7, #20]
 801bf1c:	4313      	orrs	r3, r2
 801bf1e:	617b      	str	r3, [r7, #20]
    
    /* Check compatibility between FIFO threshold level and size of the memory burst */
    /* for INCR4, INCR8, INCR16 bursts */
    if (hdma->Init.MemBurst != DMA_MBURST_SINGLE)
 801bf20:	687b      	ldr	r3, [r7, #4]
 801bf22:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801bf24:	2b00      	cmp	r3, #0
 801bf26:	d00e      	beq.n	801bf46 <HAL_DMA_Init+0x122>
    {
      if (DMA_CheckFifoParam(hdma) != HAL_OK)
 801bf28:	6878      	ldr	r0, [r7, #4]
 801bf2a:	f000 f9e9 	bl	801c300 <DMA_CheckFifoParam>
 801bf2e:	4603      	mov	r3, r0
 801bf30:	2b00      	cmp	r3, #0
 801bf32:	d008      	beq.n	801bf46 <HAL_DMA_Init+0x122>
      {
        /* Update error code */
        hdma->ErrorCode = HAL_DMA_ERROR_PARAM;
 801bf34:	687b      	ldr	r3, [r7, #4]
 801bf36:	2240      	movs	r2, #64	; 0x40
 801bf38:	655a      	str	r2, [r3, #84]	; 0x54
        
        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 801bf3a:	687b      	ldr	r3, [r7, #4]
 801bf3c:	2201      	movs	r2, #1
 801bf3e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        
        return HAL_ERROR; 
 801bf42:	2301      	movs	r3, #1
 801bf44:	e016      	b.n	801bf74 <HAL_DMA_Init+0x150>
      }
    }
  }
  
  /* Write to DMA Stream FCR */
  hdma->Instance->FCR = tmp;
 801bf46:	687b      	ldr	r3, [r7, #4]
 801bf48:	681b      	ldr	r3, [r3, #0]
 801bf4a:	697a      	ldr	r2, [r7, #20]
 801bf4c:	615a      	str	r2, [r3, #20]

  /* Initialize StreamBaseAddress and StreamIndex parameters to be used to calculate
     DMA steam Base Address needed by HAL_DMA_IRQHandler() and HAL_DMA_PollForTransfer() */
  regs = (DMA_Base_Registers *)DMA_CalcBaseAndBitshift(hdma);
 801bf4e:	6878      	ldr	r0, [r7, #4]
 801bf50:	f000 f9a0 	bl	801c294 <DMA_CalcBaseAndBitshift>
 801bf54:	4603      	mov	r3, r0
 801bf56:	60fb      	str	r3, [r7, #12]
  
  /* Clear all interrupt flags */
  regs->IFCR = 0x3FU << hdma->StreamIndex;
 801bf58:	687b      	ldr	r3, [r7, #4]
 801bf5a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801bf5c:	223f      	movs	r2, #63	; 0x3f
 801bf5e:	409a      	lsls	r2, r3
 801bf60:	68fb      	ldr	r3, [r7, #12]
 801bf62:	609a      	str	r2, [r3, #8]

  /* Initialize the error code */
  hdma->ErrorCode = HAL_DMA_ERROR_NONE;
 801bf64:	687b      	ldr	r3, [r7, #4]
 801bf66:	2200      	movs	r2, #0
 801bf68:	655a      	str	r2, [r3, #84]	; 0x54
                                                                                     
  /* Initialize the DMA state */
  hdma->State = HAL_DMA_STATE_READY;
 801bf6a:	687b      	ldr	r3, [r7, #4]
 801bf6c:	2201      	movs	r2, #1
 801bf6e:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

  return HAL_OK;
 801bf72:	2300      	movs	r3, #0
}
 801bf74:	4618      	mov	r0, r3
 801bf76:	3718      	adds	r7, #24
 801bf78:	46bd      	mov	sp, r7
 801bf7a:	bd80      	pop	{r7, pc}
 801bf7c:	f010803f 	.word	0xf010803f

0801bf80 <HAL_DMA_IRQHandler>:
  * @param  hdma pointer to a DMA_HandleTypeDef structure that contains
  *               the configuration information for the specified DMA Stream.  
  * @retval None
  */
void HAL_DMA_IRQHandler(DMA_HandleTypeDef *hdma)
{
 801bf80:	b580      	push	{r7, lr}
 801bf82:	b086      	sub	sp, #24
 801bf84:	af00      	add	r7, sp, #0
 801bf86:	6078      	str	r0, [r7, #4]
  uint32_t tmpisr;
  __IO uint32_t count = 0U;
 801bf88:	2300      	movs	r3, #0
 801bf8a:	60bb      	str	r3, [r7, #8]
  uint32_t timeout = SystemCoreClock / 9600U;
 801bf8c:	4b92      	ldr	r3, [pc, #584]	; (801c1d8 <HAL_DMA_IRQHandler+0x258>)
 801bf8e:	681b      	ldr	r3, [r3, #0]
 801bf90:	4a92      	ldr	r2, [pc, #584]	; (801c1dc <HAL_DMA_IRQHandler+0x25c>)
 801bf92:	fba2 2303 	umull	r2, r3, r2, r3
 801bf96:	0a9b      	lsrs	r3, r3, #10
 801bf98:	617b      	str	r3, [r7, #20]

  /* calculate DMA base and stream number */
  DMA_Base_Registers *regs = (DMA_Base_Registers *)hdma->StreamBaseAddress;
 801bf9a:	687b      	ldr	r3, [r7, #4]
 801bf9c:	6d9b      	ldr	r3, [r3, #88]	; 0x58
 801bf9e:	613b      	str	r3, [r7, #16]

  tmpisr = regs->ISR;
 801bfa0:	693b      	ldr	r3, [r7, #16]
 801bfa2:	681b      	ldr	r3, [r3, #0]
 801bfa4:	60fb      	str	r3, [r7, #12]

  /* Transfer Error Interrupt management ***************************************/
  if ((tmpisr & (DMA_FLAG_TEIF0_4 << hdma->StreamIndex)) != RESET)
 801bfa6:	687b      	ldr	r3, [r7, #4]
 801bfa8:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801bfaa:	2208      	movs	r2, #8
 801bfac:	409a      	lsls	r2, r3
 801bfae:	68fb      	ldr	r3, [r7, #12]
 801bfb0:	4013      	ands	r3, r2
 801bfb2:	2b00      	cmp	r3, #0
 801bfb4:	d01a      	beq.n	801bfec <HAL_DMA_IRQHandler+0x6c>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TE) != RESET)
 801bfb6:	687b      	ldr	r3, [r7, #4]
 801bfb8:	681b      	ldr	r3, [r3, #0]
 801bfba:	681b      	ldr	r3, [r3, #0]
 801bfbc:	f003 0304 	and.w	r3, r3, #4
 801bfc0:	2b00      	cmp	r3, #0
 801bfc2:	d013      	beq.n	801bfec <HAL_DMA_IRQHandler+0x6c>
    {
      /* Disable the transfer error interrupt */
      hdma->Instance->CR  &= ~(DMA_IT_TE);
 801bfc4:	687b      	ldr	r3, [r7, #4]
 801bfc6:	681b      	ldr	r3, [r3, #0]
 801bfc8:	681a      	ldr	r2, [r3, #0]
 801bfca:	687b      	ldr	r3, [r7, #4]
 801bfcc:	681b      	ldr	r3, [r3, #0]
 801bfce:	f022 0204 	bic.w	r2, r2, #4
 801bfd2:	601a      	str	r2, [r3, #0]
      
      /* Clear the transfer error flag */
      regs->IFCR = DMA_FLAG_TEIF0_4 << hdma->StreamIndex;
 801bfd4:	687b      	ldr	r3, [r7, #4]
 801bfd6:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801bfd8:	2208      	movs	r2, #8
 801bfda:	409a      	lsls	r2, r3
 801bfdc:	693b      	ldr	r3, [r7, #16]
 801bfde:	609a      	str	r2, [r3, #8]
      
      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_TE;
 801bfe0:	687b      	ldr	r3, [r7, #4]
 801bfe2:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801bfe4:	f043 0201 	orr.w	r2, r3, #1
 801bfe8:	687b      	ldr	r3, [r7, #4]
 801bfea:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* FIFO Error Interrupt management ******************************************/
  if ((tmpisr & (DMA_FLAG_FEIF0_4 << hdma->StreamIndex)) != RESET)
 801bfec:	687b      	ldr	r3, [r7, #4]
 801bfee:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801bff0:	2201      	movs	r2, #1
 801bff2:	409a      	lsls	r2, r3
 801bff4:	68fb      	ldr	r3, [r7, #12]
 801bff6:	4013      	ands	r3, r2
 801bff8:	2b00      	cmp	r3, #0
 801bffa:	d012      	beq.n	801c022 <HAL_DMA_IRQHandler+0xa2>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_FE) != RESET)
 801bffc:	687b      	ldr	r3, [r7, #4]
 801bffe:	681b      	ldr	r3, [r3, #0]
 801c000:	695b      	ldr	r3, [r3, #20]
 801c002:	f003 0380 	and.w	r3, r3, #128	; 0x80
 801c006:	2b00      	cmp	r3, #0
 801c008:	d00b      	beq.n	801c022 <HAL_DMA_IRQHandler+0xa2>
    {
      /* Clear the FIFO error flag */
      regs->IFCR = DMA_FLAG_FEIF0_4 << hdma->StreamIndex;
 801c00a:	687b      	ldr	r3, [r7, #4]
 801c00c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c00e:	2201      	movs	r2, #1
 801c010:	409a      	lsls	r2, r3
 801c012:	693b      	ldr	r3, [r7, #16]
 801c014:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_FE;
 801c016:	687b      	ldr	r3, [r7, #4]
 801c018:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801c01a:	f043 0202 	orr.w	r2, r3, #2
 801c01e:	687b      	ldr	r3, [r7, #4]
 801c020:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* Direct Mode Error Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_DMEIF0_4 << hdma->StreamIndex)) != RESET)
 801c022:	687b      	ldr	r3, [r7, #4]
 801c024:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c026:	2204      	movs	r2, #4
 801c028:	409a      	lsls	r2, r3
 801c02a:	68fb      	ldr	r3, [r7, #12]
 801c02c:	4013      	ands	r3, r2
 801c02e:	2b00      	cmp	r3, #0
 801c030:	d012      	beq.n	801c058 <HAL_DMA_IRQHandler+0xd8>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_DME) != RESET)
 801c032:	687b      	ldr	r3, [r7, #4]
 801c034:	681b      	ldr	r3, [r3, #0]
 801c036:	681b      	ldr	r3, [r3, #0]
 801c038:	f003 0302 	and.w	r3, r3, #2
 801c03c:	2b00      	cmp	r3, #0
 801c03e:	d00b      	beq.n	801c058 <HAL_DMA_IRQHandler+0xd8>
    {
      /* Clear the direct mode error flag */
      regs->IFCR = DMA_FLAG_DMEIF0_4 << hdma->StreamIndex;
 801c040:	687b      	ldr	r3, [r7, #4]
 801c042:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c044:	2204      	movs	r2, #4
 801c046:	409a      	lsls	r2, r3
 801c048:	693b      	ldr	r3, [r7, #16]
 801c04a:	609a      	str	r2, [r3, #8]

      /* Update error code */
      hdma->ErrorCode |= HAL_DMA_ERROR_DME;
 801c04c:	687b      	ldr	r3, [r7, #4]
 801c04e:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801c050:	f043 0204 	orr.w	r2, r3, #4
 801c054:	687b      	ldr	r3, [r7, #4]
 801c056:	655a      	str	r2, [r3, #84]	; 0x54
    }
  }
  /* Half Transfer Complete Interrupt management ******************************/
  if ((tmpisr & (DMA_FLAG_HTIF0_4 << hdma->StreamIndex)) != RESET)
 801c058:	687b      	ldr	r3, [r7, #4]
 801c05a:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c05c:	2210      	movs	r2, #16
 801c05e:	409a      	lsls	r2, r3
 801c060:	68fb      	ldr	r3, [r7, #12]
 801c062:	4013      	ands	r3, r2
 801c064:	2b00      	cmp	r3, #0
 801c066:	d043      	beq.n	801c0f0 <HAL_DMA_IRQHandler+0x170>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_HT) != RESET)
 801c068:	687b      	ldr	r3, [r7, #4]
 801c06a:	681b      	ldr	r3, [r3, #0]
 801c06c:	681b      	ldr	r3, [r3, #0]
 801c06e:	f003 0308 	and.w	r3, r3, #8
 801c072:	2b00      	cmp	r3, #0
 801c074:	d03c      	beq.n	801c0f0 <HAL_DMA_IRQHandler+0x170>
    {
      /* Clear the half transfer complete flag */
      regs->IFCR = DMA_FLAG_HTIF0_4 << hdma->StreamIndex;
 801c076:	687b      	ldr	r3, [r7, #4]
 801c078:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c07a:	2210      	movs	r2, #16
 801c07c:	409a      	lsls	r2, r3
 801c07e:	693b      	ldr	r3, [r7, #16]
 801c080:	609a      	str	r2, [r3, #8]
      
      /* Multi_Buffering mode enabled */
      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 801c082:	687b      	ldr	r3, [r7, #4]
 801c084:	681b      	ldr	r3, [r3, #0]
 801c086:	681b      	ldr	r3, [r3, #0]
 801c088:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 801c08c:	2b00      	cmp	r3, #0
 801c08e:	d018      	beq.n	801c0c2 <HAL_DMA_IRQHandler+0x142>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 801c090:	687b      	ldr	r3, [r7, #4]
 801c092:	681b      	ldr	r3, [r3, #0]
 801c094:	681b      	ldr	r3, [r3, #0]
 801c096:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 801c09a:	2b00      	cmp	r3, #0
 801c09c:	d108      	bne.n	801c0b0 <HAL_DMA_IRQHandler+0x130>
        {
          if(hdma->XferHalfCpltCallback != NULL)
 801c09e:	687b      	ldr	r3, [r7, #4]
 801c0a0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c0a2:	2b00      	cmp	r3, #0
 801c0a4:	d024      	beq.n	801c0f0 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferHalfCpltCallback(hdma);
 801c0a6:	687b      	ldr	r3, [r7, #4]
 801c0a8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c0aa:	6878      	ldr	r0, [r7, #4]
 801c0ac:	4798      	blx	r3
 801c0ae:	e01f      	b.n	801c0f0 <HAL_DMA_IRQHandler+0x170>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferM1HalfCpltCallback != NULL)
 801c0b0:	687b      	ldr	r3, [r7, #4]
 801c0b2:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801c0b4:	2b00      	cmp	r3, #0
 801c0b6:	d01b      	beq.n	801c0f0 <HAL_DMA_IRQHandler+0x170>
          {
            /* Half transfer callback */
            hdma->XferM1HalfCpltCallback(hdma);
 801c0b8:	687b      	ldr	r3, [r7, #4]
 801c0ba:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801c0bc:	6878      	ldr	r0, [r7, #4]
 801c0be:	4798      	blx	r3
 801c0c0:	e016      	b.n	801c0f0 <HAL_DMA_IRQHandler+0x170>
        }
      }
      else
      {
        /* Disable the half transfer interrupt if the DMA mode is not CIRCULAR */
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 801c0c2:	687b      	ldr	r3, [r7, #4]
 801c0c4:	681b      	ldr	r3, [r3, #0]
 801c0c6:	681b      	ldr	r3, [r3, #0]
 801c0c8:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801c0cc:	2b00      	cmp	r3, #0
 801c0ce:	d107      	bne.n	801c0e0 <HAL_DMA_IRQHandler+0x160>
        {
          /* Disable the half transfer interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 801c0d0:	687b      	ldr	r3, [r7, #4]
 801c0d2:	681b      	ldr	r3, [r3, #0]
 801c0d4:	681a      	ldr	r2, [r3, #0]
 801c0d6:	687b      	ldr	r3, [r7, #4]
 801c0d8:	681b      	ldr	r3, [r3, #0]
 801c0da:	f022 0208 	bic.w	r2, r2, #8
 801c0de:	601a      	str	r2, [r3, #0]
        }
        
        if(hdma->XferHalfCpltCallback != NULL)
 801c0e0:	687b      	ldr	r3, [r7, #4]
 801c0e2:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c0e4:	2b00      	cmp	r3, #0
 801c0e6:	d003      	beq.n	801c0f0 <HAL_DMA_IRQHandler+0x170>
        {
          /* Half transfer callback */
          hdma->XferHalfCpltCallback(hdma);
 801c0e8:	687b      	ldr	r3, [r7, #4]
 801c0ea:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c0ec:	6878      	ldr	r0, [r7, #4]
 801c0ee:	4798      	blx	r3
        }
      }
    }
  }
  /* Transfer Complete Interrupt management ***********************************/
  if ((tmpisr & (DMA_FLAG_TCIF0_4 << hdma->StreamIndex)) != RESET)
 801c0f0:	687b      	ldr	r3, [r7, #4]
 801c0f2:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c0f4:	2220      	movs	r2, #32
 801c0f6:	409a      	lsls	r2, r3
 801c0f8:	68fb      	ldr	r3, [r7, #12]
 801c0fa:	4013      	ands	r3, r2
 801c0fc:	2b00      	cmp	r3, #0
 801c0fe:	f000 808e 	beq.w	801c21e <HAL_DMA_IRQHandler+0x29e>
  {
    if(__HAL_DMA_GET_IT_SOURCE(hdma, DMA_IT_TC) != RESET)
 801c102:	687b      	ldr	r3, [r7, #4]
 801c104:	681b      	ldr	r3, [r3, #0]
 801c106:	681b      	ldr	r3, [r3, #0]
 801c108:	f003 0310 	and.w	r3, r3, #16
 801c10c:	2b00      	cmp	r3, #0
 801c10e:	f000 8086 	beq.w	801c21e <HAL_DMA_IRQHandler+0x29e>
    {
      /* Clear the transfer complete flag */
      regs->IFCR = DMA_FLAG_TCIF0_4 << hdma->StreamIndex;
 801c112:	687b      	ldr	r3, [r7, #4]
 801c114:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c116:	2220      	movs	r2, #32
 801c118:	409a      	lsls	r2, r3
 801c11a:	693b      	ldr	r3, [r7, #16]
 801c11c:	609a      	str	r2, [r3, #8]
      
      if(HAL_DMA_STATE_ABORT == hdma->State)
 801c11e:	687b      	ldr	r3, [r7, #4]
 801c120:	f893 3035 	ldrb.w	r3, [r3, #53]	; 0x35
 801c124:	b2db      	uxtb	r3, r3
 801c126:	2b05      	cmp	r3, #5
 801c128:	d136      	bne.n	801c198 <HAL_DMA_IRQHandler+0x218>
      {
        /* Disable all the transfer interrupts */
        hdma->Instance->CR  &= ~(DMA_IT_TC | DMA_IT_TE | DMA_IT_DME);
 801c12a:	687b      	ldr	r3, [r7, #4]
 801c12c:	681b      	ldr	r3, [r3, #0]
 801c12e:	681a      	ldr	r2, [r3, #0]
 801c130:	687b      	ldr	r3, [r7, #4]
 801c132:	681b      	ldr	r3, [r3, #0]
 801c134:	f022 0216 	bic.w	r2, r2, #22
 801c138:	601a      	str	r2, [r3, #0]
        hdma->Instance->FCR &= ~(DMA_IT_FE);
 801c13a:	687b      	ldr	r3, [r7, #4]
 801c13c:	681b      	ldr	r3, [r3, #0]
 801c13e:	695a      	ldr	r2, [r3, #20]
 801c140:	687b      	ldr	r3, [r7, #4]
 801c142:	681b      	ldr	r3, [r3, #0]
 801c144:	f022 0280 	bic.w	r2, r2, #128	; 0x80
 801c148:	615a      	str	r2, [r3, #20]
        
        if((hdma->XferHalfCpltCallback != NULL) || (hdma->XferM1HalfCpltCallback != NULL))
 801c14a:	687b      	ldr	r3, [r7, #4]
 801c14c:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801c14e:	2b00      	cmp	r3, #0
 801c150:	d103      	bne.n	801c15a <HAL_DMA_IRQHandler+0x1da>
 801c152:	687b      	ldr	r3, [r7, #4]
 801c154:	6c9b      	ldr	r3, [r3, #72]	; 0x48
 801c156:	2b00      	cmp	r3, #0
 801c158:	d007      	beq.n	801c16a <HAL_DMA_IRQHandler+0x1ea>
        {
          hdma->Instance->CR  &= ~(DMA_IT_HT);
 801c15a:	687b      	ldr	r3, [r7, #4]
 801c15c:	681b      	ldr	r3, [r3, #0]
 801c15e:	681a      	ldr	r2, [r3, #0]
 801c160:	687b      	ldr	r3, [r7, #4]
 801c162:	681b      	ldr	r3, [r3, #0]
 801c164:	f022 0208 	bic.w	r2, r2, #8
 801c168:	601a      	str	r2, [r3, #0]
        }

        /* Clear all interrupt flags at correct offset within the register */
        regs->IFCR = 0x3FU << hdma->StreamIndex;
 801c16a:	687b      	ldr	r3, [r7, #4]
 801c16c:	6ddb      	ldr	r3, [r3, #92]	; 0x5c
 801c16e:	223f      	movs	r2, #63	; 0x3f
 801c170:	409a      	lsls	r2, r3
 801c172:	693b      	ldr	r3, [r7, #16]
 801c174:	609a      	str	r2, [r3, #8]

        /* Process Unlocked */
        __HAL_UNLOCK(hdma);
 801c176:	687b      	ldr	r3, [r7, #4]
 801c178:	2200      	movs	r2, #0
 801c17a:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

        /* Change the DMA state */
        hdma->State = HAL_DMA_STATE_READY;
 801c17e:	687b      	ldr	r3, [r7, #4]
 801c180:	2201      	movs	r2, #1
 801c182:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

        if(hdma->XferAbortCallback != NULL)
 801c186:	687b      	ldr	r3, [r7, #4]
 801c188:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801c18a:	2b00      	cmp	r3, #0
 801c18c:	d07d      	beq.n	801c28a <HAL_DMA_IRQHandler+0x30a>
        {
          hdma->XferAbortCallback(hdma);
 801c18e:	687b      	ldr	r3, [r7, #4]
 801c190:	6d1b      	ldr	r3, [r3, #80]	; 0x50
 801c192:	6878      	ldr	r0, [r7, #4]
 801c194:	4798      	blx	r3
        }
        return;
 801c196:	e078      	b.n	801c28a <HAL_DMA_IRQHandler+0x30a>
      }

      if(((hdma->Instance->CR) & (uint32_t)(DMA_SxCR_DBM)) != RESET)
 801c198:	687b      	ldr	r3, [r7, #4]
 801c19a:	681b      	ldr	r3, [r3, #0]
 801c19c:	681b      	ldr	r3, [r3, #0]
 801c19e:	f403 2380 	and.w	r3, r3, #262144	; 0x40000
 801c1a2:	2b00      	cmp	r3, #0
 801c1a4:	d01c      	beq.n	801c1e0 <HAL_DMA_IRQHandler+0x260>
      {
        /* Current memory buffer used is Memory 0 */
        if((hdma->Instance->CR & DMA_SxCR_CT) == RESET)
 801c1a6:	687b      	ldr	r3, [r7, #4]
 801c1a8:	681b      	ldr	r3, [r3, #0]
 801c1aa:	681b      	ldr	r3, [r3, #0]
 801c1ac:	f403 2300 	and.w	r3, r3, #524288	; 0x80000
 801c1b0:	2b00      	cmp	r3, #0
 801c1b2:	d108      	bne.n	801c1c6 <HAL_DMA_IRQHandler+0x246>
        {
          if(hdma->XferM1CpltCallback != NULL)
 801c1b4:	687b      	ldr	r3, [r7, #4]
 801c1b6:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801c1b8:	2b00      	cmp	r3, #0
 801c1ba:	d030      	beq.n	801c21e <HAL_DMA_IRQHandler+0x29e>
          {
            /* Transfer complete Callback for memory1 */
            hdma->XferM1CpltCallback(hdma);
 801c1bc:	687b      	ldr	r3, [r7, #4]
 801c1be:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801c1c0:	6878      	ldr	r0, [r7, #4]
 801c1c2:	4798      	blx	r3
 801c1c4:	e02b      	b.n	801c21e <HAL_DMA_IRQHandler+0x29e>
          }
        }
        /* Current memory buffer used is Memory 1 */
        else
        {
          if(hdma->XferCpltCallback != NULL)
 801c1c6:	687b      	ldr	r3, [r7, #4]
 801c1c8:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801c1ca:	2b00      	cmp	r3, #0
 801c1cc:	d027      	beq.n	801c21e <HAL_DMA_IRQHandler+0x29e>
          {
            /* Transfer complete Callback for memory0 */
            hdma->XferCpltCallback(hdma);
 801c1ce:	687b      	ldr	r3, [r7, #4]
 801c1d0:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801c1d2:	6878      	ldr	r0, [r7, #4]
 801c1d4:	4798      	blx	r3
 801c1d6:	e022      	b.n	801c21e <HAL_DMA_IRQHandler+0x29e>
 801c1d8:	20000000 	.word	0x20000000
 801c1dc:	1b4e81b5 	.word	0x1b4e81b5
        }
      }
      /* Disable the transfer complete interrupt if the DMA mode is not CIRCULAR */
      else
      {
        if((hdma->Instance->CR & DMA_SxCR_CIRC) == RESET)
 801c1e0:	687b      	ldr	r3, [r7, #4]
 801c1e2:	681b      	ldr	r3, [r3, #0]
 801c1e4:	681b      	ldr	r3, [r3, #0]
 801c1e6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801c1ea:	2b00      	cmp	r3, #0
 801c1ec:	d10f      	bne.n	801c20e <HAL_DMA_IRQHandler+0x28e>
        {
          /* Disable the transfer complete interrupt */
          hdma->Instance->CR  &= ~(DMA_IT_TC);
 801c1ee:	687b      	ldr	r3, [r7, #4]
 801c1f0:	681b      	ldr	r3, [r3, #0]
 801c1f2:	681a      	ldr	r2, [r3, #0]
 801c1f4:	687b      	ldr	r3, [r7, #4]
 801c1f6:	681b      	ldr	r3, [r3, #0]
 801c1f8:	f022 0210 	bic.w	r2, r2, #16
 801c1fc:	601a      	str	r2, [r3, #0]

          /* Process Unlocked */
          __HAL_UNLOCK(hdma);
 801c1fe:	687b      	ldr	r3, [r7, #4]
 801c200:	2200      	movs	r2, #0
 801c202:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

          /* Change the DMA state */
          hdma->State = HAL_DMA_STATE_READY;
 801c206:	687b      	ldr	r3, [r7, #4]
 801c208:	2201      	movs	r2, #1
 801c20a:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
        }

        if(hdma->XferCpltCallback != NULL)
 801c20e:	687b      	ldr	r3, [r7, #4]
 801c210:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801c212:	2b00      	cmp	r3, #0
 801c214:	d003      	beq.n	801c21e <HAL_DMA_IRQHandler+0x29e>
        {
          /* Transfer complete callback */
          hdma->XferCpltCallback(hdma);
 801c216:	687b      	ldr	r3, [r7, #4]
 801c218:	6bdb      	ldr	r3, [r3, #60]	; 0x3c
 801c21a:	6878      	ldr	r0, [r7, #4]
 801c21c:	4798      	blx	r3
      }
    }
  }
  
  /* manage error case */
  if(hdma->ErrorCode != HAL_DMA_ERROR_NONE)
 801c21e:	687b      	ldr	r3, [r7, #4]
 801c220:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801c222:	2b00      	cmp	r3, #0
 801c224:	d032      	beq.n	801c28c <HAL_DMA_IRQHandler+0x30c>
  {
    if((hdma->ErrorCode & HAL_DMA_ERROR_TE) != RESET)
 801c226:	687b      	ldr	r3, [r7, #4]
 801c228:	6d5b      	ldr	r3, [r3, #84]	; 0x54
 801c22a:	f003 0301 	and.w	r3, r3, #1
 801c22e:	2b00      	cmp	r3, #0
 801c230:	d022      	beq.n	801c278 <HAL_DMA_IRQHandler+0x2f8>
    {
      hdma->State = HAL_DMA_STATE_ABORT;
 801c232:	687b      	ldr	r3, [r7, #4]
 801c234:	2205      	movs	r2, #5
 801c236:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35

      /* Disable the stream */
      __HAL_DMA_DISABLE(hdma);
 801c23a:	687b      	ldr	r3, [r7, #4]
 801c23c:	681b      	ldr	r3, [r3, #0]
 801c23e:	681a      	ldr	r2, [r3, #0]
 801c240:	687b      	ldr	r3, [r7, #4]
 801c242:	681b      	ldr	r3, [r3, #0]
 801c244:	f022 0201 	bic.w	r2, r2, #1
 801c248:	601a      	str	r2, [r3, #0]

      do
      {
        if (++count > timeout)
 801c24a:	68bb      	ldr	r3, [r7, #8]
 801c24c:	3301      	adds	r3, #1
 801c24e:	60bb      	str	r3, [r7, #8]
 801c250:	697a      	ldr	r2, [r7, #20]
 801c252:	429a      	cmp	r2, r3
 801c254:	d307      	bcc.n	801c266 <HAL_DMA_IRQHandler+0x2e6>
        {
          break;
        }
      }
      while((hdma->Instance->CR & DMA_SxCR_EN) != RESET);
 801c256:	687b      	ldr	r3, [r7, #4]
 801c258:	681b      	ldr	r3, [r3, #0]
 801c25a:	681b      	ldr	r3, [r3, #0]
 801c25c:	f003 0301 	and.w	r3, r3, #1
 801c260:	2b00      	cmp	r3, #0
 801c262:	d1f2      	bne.n	801c24a <HAL_DMA_IRQHandler+0x2ca>
 801c264:	e000      	b.n	801c268 <HAL_DMA_IRQHandler+0x2e8>
          break;
 801c266:	bf00      	nop

      /* Process Unlocked */
      __HAL_UNLOCK(hdma);
 801c268:	687b      	ldr	r3, [r7, #4]
 801c26a:	2200      	movs	r2, #0
 801c26c:	f883 2034 	strb.w	r2, [r3, #52]	; 0x34

      /* Change the DMA state */
      hdma->State = HAL_DMA_STATE_READY;
 801c270:	687b      	ldr	r3, [r7, #4]
 801c272:	2201      	movs	r2, #1
 801c274:	f883 2035 	strb.w	r2, [r3, #53]	; 0x35
    }

    if(hdma->XferErrorCallback != NULL)
 801c278:	687b      	ldr	r3, [r7, #4]
 801c27a:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801c27c:	2b00      	cmp	r3, #0
 801c27e:	d005      	beq.n	801c28c <HAL_DMA_IRQHandler+0x30c>
    {
      /* Transfer error callback */
      hdma->XferErrorCallback(hdma);
 801c280:	687b      	ldr	r3, [r7, #4]
 801c282:	6cdb      	ldr	r3, [r3, #76]	; 0x4c
 801c284:	6878      	ldr	r0, [r7, #4]
 801c286:	4798      	blx	r3
 801c288:	e000      	b.n	801c28c <HAL_DMA_IRQHandler+0x30c>
        return;
 801c28a:	bf00      	nop
    }
  }
}
 801c28c:	3718      	adds	r7, #24
 801c28e:	46bd      	mov	sp, r7
 801c290:	bd80      	pop	{r7, pc}
 801c292:	bf00      	nop

0801c294 <DMA_CalcBaseAndBitshift>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval Stream base address
  */
static uint32_t DMA_CalcBaseAndBitshift(DMA_HandleTypeDef *hdma)
{
 801c294:	b480      	push	{r7}
 801c296:	b085      	sub	sp, #20
 801c298:	af00      	add	r7, sp, #0
 801c29a:	6078      	str	r0, [r7, #4]
  uint32_t stream_number = (((uint32_t)hdma->Instance & 0xFFU) - 16U) / 24U;
 801c29c:	687b      	ldr	r3, [r7, #4]
 801c29e:	681b      	ldr	r3, [r3, #0]
 801c2a0:	b2db      	uxtb	r3, r3
 801c2a2:	3b10      	subs	r3, #16
 801c2a4:	4a14      	ldr	r2, [pc, #80]	; (801c2f8 <DMA_CalcBaseAndBitshift+0x64>)
 801c2a6:	fba2 2303 	umull	r2, r3, r2, r3
 801c2aa:	091b      	lsrs	r3, r3, #4
 801c2ac:	60fb      	str	r3, [r7, #12]
  
  /* lookup table for necessary bitshift of flags within status registers */
  static const uint8_t flagBitshiftOffset[8U] = {0U, 6U, 16U, 22U, 0U, 6U, 16U, 22U};
  hdma->StreamIndex = flagBitshiftOffset[stream_number];
 801c2ae:	4a13      	ldr	r2, [pc, #76]	; (801c2fc <DMA_CalcBaseAndBitshift+0x68>)
 801c2b0:	68fb      	ldr	r3, [r7, #12]
 801c2b2:	4413      	add	r3, r2
 801c2b4:	781b      	ldrb	r3, [r3, #0]
 801c2b6:	461a      	mov	r2, r3
 801c2b8:	687b      	ldr	r3, [r7, #4]
 801c2ba:	65da      	str	r2, [r3, #92]	; 0x5c
  
  if (stream_number > 3U)
 801c2bc:	68fb      	ldr	r3, [r7, #12]
 801c2be:	2b03      	cmp	r3, #3
 801c2c0:	d909      	bls.n	801c2d6 <DMA_CalcBaseAndBitshift+0x42>
  {
    /* return pointer to HISR and HIFCR */
    hdma->StreamBaseAddress = (((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU)) + 4U);
 801c2c2:	687b      	ldr	r3, [r7, #4]
 801c2c4:	681b      	ldr	r3, [r3, #0]
 801c2c6:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 801c2ca:	f023 0303 	bic.w	r3, r3, #3
 801c2ce:	1d1a      	adds	r2, r3, #4
 801c2d0:	687b      	ldr	r3, [r7, #4]
 801c2d2:	659a      	str	r2, [r3, #88]	; 0x58
 801c2d4:	e007      	b.n	801c2e6 <DMA_CalcBaseAndBitshift+0x52>
  }
  else
  {
    /* return pointer to LISR and LIFCR */
    hdma->StreamBaseAddress = ((uint32_t)hdma->Instance & (uint32_t)(~0x3FFU));
 801c2d6:	687b      	ldr	r3, [r7, #4]
 801c2d8:	681b      	ldr	r3, [r3, #0]
 801c2da:	f423 737f 	bic.w	r3, r3, #1020	; 0x3fc
 801c2de:	f023 0303 	bic.w	r3, r3, #3
 801c2e2:	687a      	ldr	r2, [r7, #4]
 801c2e4:	6593      	str	r3, [r2, #88]	; 0x58
  }
  
  return hdma->StreamBaseAddress;
 801c2e6:	687b      	ldr	r3, [r7, #4]
 801c2e8:	6d9b      	ldr	r3, [r3, #88]	; 0x58
}
 801c2ea:	4618      	mov	r0, r3
 801c2ec:	3714      	adds	r7, #20
 801c2ee:	46bd      	mov	sp, r7
 801c2f0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c2f4:	4770      	bx	lr
 801c2f6:	bf00      	nop
 801c2f8:	aaaaaaab 	.word	0xaaaaaaab
 801c2fc:	08029f80 	.word	0x08029f80

0801c300 <DMA_CheckFifoParam>:
  * @param  hdma       pointer to a DMA_HandleTypeDef structure that contains
  *                     the configuration information for the specified DMA Stream. 
  * @retval HAL status
  */
static HAL_StatusTypeDef DMA_CheckFifoParam(DMA_HandleTypeDef *hdma)
{
 801c300:	b480      	push	{r7}
 801c302:	b085      	sub	sp, #20
 801c304:	af00      	add	r7, sp, #0
 801c306:	6078      	str	r0, [r7, #4]
  HAL_StatusTypeDef status = HAL_OK;
 801c308:	2300      	movs	r3, #0
 801c30a:	73fb      	strb	r3, [r7, #15]
  uint32_t tmp = hdma->Init.FIFOThreshold;
 801c30c:	687b      	ldr	r3, [r7, #4]
 801c30e:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801c310:	60bb      	str	r3, [r7, #8]
  
  /* Memory Data size equal to Byte */
  if(hdma->Init.MemDataAlignment == DMA_MDATAALIGN_BYTE)
 801c312:	687b      	ldr	r3, [r7, #4]
 801c314:	699b      	ldr	r3, [r3, #24]
 801c316:	2b00      	cmp	r3, #0
 801c318:	d11f      	bne.n	801c35a <DMA_CheckFifoParam+0x5a>
  {
    switch (tmp)
 801c31a:	68bb      	ldr	r3, [r7, #8]
 801c31c:	2b03      	cmp	r3, #3
 801c31e:	d855      	bhi.n	801c3cc <DMA_CheckFifoParam+0xcc>
 801c320:	a201      	add	r2, pc, #4	; (adr r2, 801c328 <DMA_CheckFifoParam+0x28>)
 801c322:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801c326:	bf00      	nop
 801c328:	0801c339 	.word	0x0801c339
 801c32c:	0801c34b 	.word	0x0801c34b
 801c330:	0801c339 	.word	0x0801c339
 801c334:	0801c3cd 	.word	0x0801c3cd
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 801c338:	687b      	ldr	r3, [r7, #4]
 801c33a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c33c:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 801c340:	2b00      	cmp	r3, #0
 801c342:	d045      	beq.n	801c3d0 <DMA_CheckFifoParam+0xd0>
      {
        status = HAL_ERROR;
 801c344:	2301      	movs	r3, #1
 801c346:	73fb      	strb	r3, [r7, #15]
      }
      break;
 801c348:	e042      	b.n	801c3d0 <DMA_CheckFifoParam+0xd0>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 801c34a:	687b      	ldr	r3, [r7, #4]
 801c34c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c34e:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 801c352:	d13f      	bne.n	801c3d4 <DMA_CheckFifoParam+0xd4>
      {
        status = HAL_ERROR;
 801c354:	2301      	movs	r3, #1
 801c356:	73fb      	strb	r3, [r7, #15]
      }
      break;
 801c358:	e03c      	b.n	801c3d4 <DMA_CheckFifoParam+0xd4>
      break;
    }
  }
  
  /* Memory Data size equal to Half-Word */
  else if (hdma->Init.MemDataAlignment == DMA_MDATAALIGN_HALFWORD)
 801c35a:	687b      	ldr	r3, [r7, #4]
 801c35c:	699b      	ldr	r3, [r3, #24]
 801c35e:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 801c362:	d121      	bne.n	801c3a8 <DMA_CheckFifoParam+0xa8>
  {
    switch (tmp)
 801c364:	68bb      	ldr	r3, [r7, #8]
 801c366:	2b03      	cmp	r3, #3
 801c368:	d836      	bhi.n	801c3d8 <DMA_CheckFifoParam+0xd8>
 801c36a:	a201      	add	r2, pc, #4	; (adr r2, 801c370 <DMA_CheckFifoParam+0x70>)
 801c36c:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801c370:	0801c381 	.word	0x0801c381
 801c374:	0801c387 	.word	0x0801c387
 801c378:	0801c381 	.word	0x0801c381
 801c37c:	0801c399 	.word	0x0801c399
    {
    case DMA_FIFO_THRESHOLD_1QUARTERFULL:
    case DMA_FIFO_THRESHOLD_3QUARTERSFULL:
      status = HAL_ERROR;
 801c380:	2301      	movs	r3, #1
 801c382:	73fb      	strb	r3, [r7, #15]
      break;
 801c384:	e02f      	b.n	801c3e6 <DMA_CheckFifoParam+0xe6>
    case DMA_FIFO_THRESHOLD_HALFFULL:
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 801c386:	687b      	ldr	r3, [r7, #4]
 801c388:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c38a:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 801c38e:	2b00      	cmp	r3, #0
 801c390:	d024      	beq.n	801c3dc <DMA_CheckFifoParam+0xdc>
      {
        status = HAL_ERROR;
 801c392:	2301      	movs	r3, #1
 801c394:	73fb      	strb	r3, [r7, #15]
      }
      break;
 801c396:	e021      	b.n	801c3dc <DMA_CheckFifoParam+0xdc>
    case DMA_FIFO_THRESHOLD_FULL:
      if (hdma->Init.MemBurst == DMA_MBURST_INC16)
 801c398:	687b      	ldr	r3, [r7, #4]
 801c39a:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c39c:	f1b3 7fc0 	cmp.w	r3, #25165824	; 0x1800000
 801c3a0:	d11e      	bne.n	801c3e0 <DMA_CheckFifoParam+0xe0>
      {
        status = HAL_ERROR;
 801c3a2:	2301      	movs	r3, #1
 801c3a4:	73fb      	strb	r3, [r7, #15]
      }
      break;   
 801c3a6:	e01b      	b.n	801c3e0 <DMA_CheckFifoParam+0xe0>
  }
  
  /* Memory Data size equal to Word */
  else
  {
    switch (tmp)
 801c3a8:	68bb      	ldr	r3, [r7, #8]
 801c3aa:	2b02      	cmp	r3, #2
 801c3ac:	d902      	bls.n	801c3b4 <DMA_CheckFifoParam+0xb4>
 801c3ae:	2b03      	cmp	r3, #3
 801c3b0:	d003      	beq.n	801c3ba <DMA_CheckFifoParam+0xba>
      {
        status = HAL_ERROR;
      }
      break;
    default:
      break;
 801c3b2:	e018      	b.n	801c3e6 <DMA_CheckFifoParam+0xe6>
      status = HAL_ERROR;
 801c3b4:	2301      	movs	r3, #1
 801c3b6:	73fb      	strb	r3, [r7, #15]
      break;
 801c3b8:	e015      	b.n	801c3e6 <DMA_CheckFifoParam+0xe6>
      if ((hdma->Init.MemBurst & DMA_SxCR_MBURST_1) == DMA_SxCR_MBURST_1)
 801c3ba:	687b      	ldr	r3, [r7, #4]
 801c3bc:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801c3be:	f003 7380 	and.w	r3, r3, #16777216	; 0x1000000
 801c3c2:	2b00      	cmp	r3, #0
 801c3c4:	d00e      	beq.n	801c3e4 <DMA_CheckFifoParam+0xe4>
        status = HAL_ERROR;
 801c3c6:	2301      	movs	r3, #1
 801c3c8:	73fb      	strb	r3, [r7, #15]
      break;
 801c3ca:	e00b      	b.n	801c3e4 <DMA_CheckFifoParam+0xe4>
      break;
 801c3cc:	bf00      	nop
 801c3ce:	e00a      	b.n	801c3e6 <DMA_CheckFifoParam+0xe6>
      break;
 801c3d0:	bf00      	nop
 801c3d2:	e008      	b.n	801c3e6 <DMA_CheckFifoParam+0xe6>
      break;
 801c3d4:	bf00      	nop
 801c3d6:	e006      	b.n	801c3e6 <DMA_CheckFifoParam+0xe6>
      break;
 801c3d8:	bf00      	nop
 801c3da:	e004      	b.n	801c3e6 <DMA_CheckFifoParam+0xe6>
      break;
 801c3dc:	bf00      	nop
 801c3de:	e002      	b.n	801c3e6 <DMA_CheckFifoParam+0xe6>
      break;   
 801c3e0:	bf00      	nop
 801c3e2:	e000      	b.n	801c3e6 <DMA_CheckFifoParam+0xe6>
      break;
 801c3e4:	bf00      	nop
    }
  } 
  
  return status; 
 801c3e6:	7bfb      	ldrb	r3, [r7, #15]
}
 801c3e8:	4618      	mov	r0, r3
 801c3ea:	3714      	adds	r7, #20
 801c3ec:	46bd      	mov	sp, r7
 801c3ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c3f2:	4770      	bx	lr

0801c3f4 <HAL_GPIO_Init>:
  * @param  GPIO_Init pointer to a GPIO_InitTypeDef structure that contains
  *         the configuration information for the specified GPIO peripheral.
  * @retval None
  */
void HAL_GPIO_Init(GPIO_TypeDef  *GPIOx, GPIO_InitTypeDef *GPIO_Init)
{
 801c3f4:	b480      	push	{r7}
 801c3f6:	b089      	sub	sp, #36	; 0x24
 801c3f8:	af00      	add	r7, sp, #0
 801c3fa:	6078      	str	r0, [r7, #4]
 801c3fc:	6039      	str	r1, [r7, #0]
  uint32_t position;
  uint32_t ioposition = 0x00U;
 801c3fe:	2300      	movs	r3, #0
 801c400:	617b      	str	r3, [r7, #20]
  uint32_t iocurrent = 0x00U;
 801c402:	2300      	movs	r3, #0
 801c404:	613b      	str	r3, [r7, #16]
  uint32_t temp = 0x00U;
 801c406:	2300      	movs	r3, #0
 801c408:	61bb      	str	r3, [r7, #24]
  assert_param(IS_GPIO_PIN(GPIO_Init->Pin));
  assert_param(IS_GPIO_MODE(GPIO_Init->Mode));
  assert_param(IS_GPIO_PULL(GPIO_Init->Pull));

  /* Configure the port pins */
  for(position = 0U; position < GPIO_NUMBER; position++)
 801c40a:	2300      	movs	r3, #0
 801c40c:	61fb      	str	r3, [r7, #28]
 801c40e:	e159      	b.n	801c6c4 <HAL_GPIO_Init+0x2d0>
  {
    /* Get the IO position */
    ioposition = 0x01U << position;
 801c410:	2201      	movs	r2, #1
 801c412:	69fb      	ldr	r3, [r7, #28]
 801c414:	fa02 f303 	lsl.w	r3, r2, r3
 801c418:	617b      	str	r3, [r7, #20]
    /* Get the current IO position */
    iocurrent = (uint32_t)(GPIO_Init->Pin) & ioposition;
 801c41a:	683b      	ldr	r3, [r7, #0]
 801c41c:	681b      	ldr	r3, [r3, #0]
 801c41e:	697a      	ldr	r2, [r7, #20]
 801c420:	4013      	ands	r3, r2
 801c422:	613b      	str	r3, [r7, #16]

    if(iocurrent == ioposition)
 801c424:	693a      	ldr	r2, [r7, #16]
 801c426:	697b      	ldr	r3, [r7, #20]
 801c428:	429a      	cmp	r2, r3
 801c42a:	f040 8148 	bne.w	801c6be <HAL_GPIO_Init+0x2ca>
    {
      /*--------------------- GPIO Mode Configuration ------------------------*/
      /* In case of Output or Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 801c42e:	683b      	ldr	r3, [r7, #0]
 801c430:	685b      	ldr	r3, [r3, #4]
 801c432:	2b01      	cmp	r3, #1
 801c434:	d00b      	beq.n	801c44e <HAL_GPIO_Init+0x5a>
 801c436:	683b      	ldr	r3, [r7, #0]
 801c438:	685b      	ldr	r3, [r3, #4]
 801c43a:	2b02      	cmp	r3, #2
 801c43c:	d007      	beq.n	801c44e <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 801c43e:	683b      	ldr	r3, [r7, #0]
 801c440:	685b      	ldr	r3, [r3, #4]
      if((GPIO_Init->Mode == GPIO_MODE_OUTPUT_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_PP) ||
 801c442:	2b11      	cmp	r3, #17
 801c444:	d003      	beq.n	801c44e <HAL_GPIO_Init+0x5a>
         (GPIO_Init->Mode == GPIO_MODE_OUTPUT_OD) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 801c446:	683b      	ldr	r3, [r7, #0]
 801c448:	685b      	ldr	r3, [r3, #4]
 801c44a:	2b12      	cmp	r3, #18
 801c44c:	d130      	bne.n	801c4b0 <HAL_GPIO_Init+0xbc>
      {
        /* Check the Speed parameter */
        assert_param(IS_GPIO_SPEED(GPIO_Init->Speed));
        /* Configure the IO Speed */
        temp = GPIOx->OSPEEDR; 
 801c44e:	687b      	ldr	r3, [r7, #4]
 801c450:	689b      	ldr	r3, [r3, #8]
 801c452:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OSPEEDER_OSPEEDR0 << (position * 2U));
 801c454:	69fb      	ldr	r3, [r7, #28]
 801c456:	005b      	lsls	r3, r3, #1
 801c458:	2203      	movs	r2, #3
 801c45a:	fa02 f303 	lsl.w	r3, r2, r3
 801c45e:	43db      	mvns	r3, r3
 801c460:	69ba      	ldr	r2, [r7, #24]
 801c462:	4013      	ands	r3, r2
 801c464:	61bb      	str	r3, [r7, #24]
        temp |= (GPIO_Init->Speed << (position * 2U));
 801c466:	683b      	ldr	r3, [r7, #0]
 801c468:	68da      	ldr	r2, [r3, #12]
 801c46a:	69fb      	ldr	r3, [r7, #28]
 801c46c:	005b      	lsls	r3, r3, #1
 801c46e:	fa02 f303 	lsl.w	r3, r2, r3
 801c472:	69ba      	ldr	r2, [r7, #24]
 801c474:	4313      	orrs	r3, r2
 801c476:	61bb      	str	r3, [r7, #24]
        GPIOx->OSPEEDR = temp;
 801c478:	687b      	ldr	r3, [r7, #4]
 801c47a:	69ba      	ldr	r2, [r7, #24]
 801c47c:	609a      	str	r2, [r3, #8]

        /* Configure the IO Output Type */
        temp = GPIOx->OTYPER;
 801c47e:	687b      	ldr	r3, [r7, #4]
 801c480:	685b      	ldr	r3, [r3, #4]
 801c482:	61bb      	str	r3, [r7, #24]
        temp &= ~(GPIO_OTYPER_OT_0 << position) ;
 801c484:	2201      	movs	r2, #1
 801c486:	69fb      	ldr	r3, [r7, #28]
 801c488:	fa02 f303 	lsl.w	r3, r2, r3
 801c48c:	43db      	mvns	r3, r3
 801c48e:	69ba      	ldr	r2, [r7, #24]
 801c490:	4013      	ands	r3, r2
 801c492:	61bb      	str	r3, [r7, #24]
        temp |= (((GPIO_Init->Mode & GPIO_OUTPUT_TYPE) >> 4U) << position);
 801c494:	683b      	ldr	r3, [r7, #0]
 801c496:	685b      	ldr	r3, [r3, #4]
 801c498:	091b      	lsrs	r3, r3, #4
 801c49a:	f003 0201 	and.w	r2, r3, #1
 801c49e:	69fb      	ldr	r3, [r7, #28]
 801c4a0:	fa02 f303 	lsl.w	r3, r2, r3
 801c4a4:	69ba      	ldr	r2, [r7, #24]
 801c4a6:	4313      	orrs	r3, r2
 801c4a8:	61bb      	str	r3, [r7, #24]
        GPIOx->OTYPER = temp;
 801c4aa:	687b      	ldr	r3, [r7, #4]
 801c4ac:	69ba      	ldr	r2, [r7, #24]
 801c4ae:	605a      	str	r2, [r3, #4]
       }

      /* Activate the Pull-up or Pull down resistor for the current IO */
      temp = GPIOx->PUPDR;
 801c4b0:	687b      	ldr	r3, [r7, #4]
 801c4b2:	68db      	ldr	r3, [r3, #12]
 801c4b4:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_PUPDR_PUPDR0 << (position * 2U));
 801c4b6:	69fb      	ldr	r3, [r7, #28]
 801c4b8:	005b      	lsls	r3, r3, #1
 801c4ba:	2203      	movs	r2, #3
 801c4bc:	fa02 f303 	lsl.w	r3, r2, r3
 801c4c0:	43db      	mvns	r3, r3
 801c4c2:	69ba      	ldr	r2, [r7, #24]
 801c4c4:	4013      	ands	r3, r2
 801c4c6:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Pull) << (position * 2U));
 801c4c8:	683b      	ldr	r3, [r7, #0]
 801c4ca:	689a      	ldr	r2, [r3, #8]
 801c4cc:	69fb      	ldr	r3, [r7, #28]
 801c4ce:	005b      	lsls	r3, r3, #1
 801c4d0:	fa02 f303 	lsl.w	r3, r2, r3
 801c4d4:	69ba      	ldr	r2, [r7, #24]
 801c4d6:	4313      	orrs	r3, r2
 801c4d8:	61bb      	str	r3, [r7, #24]
      GPIOx->PUPDR = temp;
 801c4da:	687b      	ldr	r3, [r7, #4]
 801c4dc:	69ba      	ldr	r2, [r7, #24]
 801c4de:	60da      	str	r2, [r3, #12]

      /* In case of Alternate function mode selection */
      if((GPIO_Init->Mode == GPIO_MODE_AF_PP) || (GPIO_Init->Mode == GPIO_MODE_AF_OD))
 801c4e0:	683b      	ldr	r3, [r7, #0]
 801c4e2:	685b      	ldr	r3, [r3, #4]
 801c4e4:	2b02      	cmp	r3, #2
 801c4e6:	d003      	beq.n	801c4f0 <HAL_GPIO_Init+0xfc>
 801c4e8:	683b      	ldr	r3, [r7, #0]
 801c4ea:	685b      	ldr	r3, [r3, #4]
 801c4ec:	2b12      	cmp	r3, #18
 801c4ee:	d123      	bne.n	801c538 <HAL_GPIO_Init+0x144>
      {
        /* Check the Alternate function parameter */
        assert_param(IS_GPIO_AF(GPIO_Init->Alternate));
        /* Configure Alternate function mapped with the current IO */
        temp = GPIOx->AFR[position >> 3U];
 801c4f0:	69fb      	ldr	r3, [r7, #28]
 801c4f2:	08da      	lsrs	r2, r3, #3
 801c4f4:	687b      	ldr	r3, [r7, #4]
 801c4f6:	3208      	adds	r2, #8
 801c4f8:	f853 3022 	ldr.w	r3, [r3, r2, lsl #2]
 801c4fc:	61bb      	str	r3, [r7, #24]
        temp &= ~(0xFU << ((uint32_t)(position & 0x07U) * 4U)) ;
 801c4fe:	69fb      	ldr	r3, [r7, #28]
 801c500:	f003 0307 	and.w	r3, r3, #7
 801c504:	009b      	lsls	r3, r3, #2
 801c506:	220f      	movs	r2, #15
 801c508:	fa02 f303 	lsl.w	r3, r2, r3
 801c50c:	43db      	mvns	r3, r3
 801c50e:	69ba      	ldr	r2, [r7, #24]
 801c510:	4013      	ands	r3, r2
 801c512:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_Init->Alternate) << (((uint32_t)position & 0x07U) * 4U));
 801c514:	683b      	ldr	r3, [r7, #0]
 801c516:	691a      	ldr	r2, [r3, #16]
 801c518:	69fb      	ldr	r3, [r7, #28]
 801c51a:	f003 0307 	and.w	r3, r3, #7
 801c51e:	009b      	lsls	r3, r3, #2
 801c520:	fa02 f303 	lsl.w	r3, r2, r3
 801c524:	69ba      	ldr	r2, [r7, #24]
 801c526:	4313      	orrs	r3, r2
 801c528:	61bb      	str	r3, [r7, #24]
        GPIOx->AFR[position >> 3U] = temp;
 801c52a:	69fb      	ldr	r3, [r7, #28]
 801c52c:	08da      	lsrs	r2, r3, #3
 801c52e:	687b      	ldr	r3, [r7, #4]
 801c530:	3208      	adds	r2, #8
 801c532:	69b9      	ldr	r1, [r7, #24]
 801c534:	f843 1022 	str.w	r1, [r3, r2, lsl #2]
      }

      /* Configure IO Direction mode (Input, Output, Alternate or Analog) */
      temp = GPIOx->MODER;
 801c538:	687b      	ldr	r3, [r7, #4]
 801c53a:	681b      	ldr	r3, [r3, #0]
 801c53c:	61bb      	str	r3, [r7, #24]
      temp &= ~(GPIO_MODER_MODER0 << (position * 2U));
 801c53e:	69fb      	ldr	r3, [r7, #28]
 801c540:	005b      	lsls	r3, r3, #1
 801c542:	2203      	movs	r2, #3
 801c544:	fa02 f303 	lsl.w	r3, r2, r3
 801c548:	43db      	mvns	r3, r3
 801c54a:	69ba      	ldr	r2, [r7, #24]
 801c54c:	4013      	ands	r3, r2
 801c54e:	61bb      	str	r3, [r7, #24]
      temp |= ((GPIO_Init->Mode & GPIO_MODE) << (position * 2U));
 801c550:	683b      	ldr	r3, [r7, #0]
 801c552:	685b      	ldr	r3, [r3, #4]
 801c554:	f003 0203 	and.w	r2, r3, #3
 801c558:	69fb      	ldr	r3, [r7, #28]
 801c55a:	005b      	lsls	r3, r3, #1
 801c55c:	fa02 f303 	lsl.w	r3, r2, r3
 801c560:	69ba      	ldr	r2, [r7, #24]
 801c562:	4313      	orrs	r3, r2
 801c564:	61bb      	str	r3, [r7, #24]
      GPIOx->MODER = temp;
 801c566:	687b      	ldr	r3, [r7, #4]
 801c568:	69ba      	ldr	r2, [r7, #24]
 801c56a:	601a      	str	r2, [r3, #0]

      /*--------------------- EXTI Mode Configuration ------------------------*/
      /* Configure the External Interrupt or event for the current IO */
      if((GPIO_Init->Mode & EXTI_MODE) == EXTI_MODE)
 801c56c:	683b      	ldr	r3, [r7, #0]
 801c56e:	685b      	ldr	r3, [r3, #4]
 801c570:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801c574:	2b00      	cmp	r3, #0
 801c576:	f000 80a2 	beq.w	801c6be <HAL_GPIO_Init+0x2ca>
      {
        /* Enable SYSCFG Clock */
        __HAL_RCC_SYSCFG_CLK_ENABLE();
 801c57a:	2300      	movs	r3, #0
 801c57c:	60fb      	str	r3, [r7, #12]
 801c57e:	4b56      	ldr	r3, [pc, #344]	; (801c6d8 <HAL_GPIO_Init+0x2e4>)
 801c580:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801c582:	4a55      	ldr	r2, [pc, #340]	; (801c6d8 <HAL_GPIO_Init+0x2e4>)
 801c584:	f443 4380 	orr.w	r3, r3, #16384	; 0x4000
 801c588:	6453      	str	r3, [r2, #68]	; 0x44
 801c58a:	4b53      	ldr	r3, [pc, #332]	; (801c6d8 <HAL_GPIO_Init+0x2e4>)
 801c58c:	6c5b      	ldr	r3, [r3, #68]	; 0x44
 801c58e:	f403 4380 	and.w	r3, r3, #16384	; 0x4000
 801c592:	60fb      	str	r3, [r7, #12]
 801c594:	68fb      	ldr	r3, [r7, #12]

        temp = SYSCFG->EXTICR[position >> 2U];
 801c596:	4a51      	ldr	r2, [pc, #324]	; (801c6dc <HAL_GPIO_Init+0x2e8>)
 801c598:	69fb      	ldr	r3, [r7, #28]
 801c59a:	089b      	lsrs	r3, r3, #2
 801c59c:	3302      	adds	r3, #2
 801c59e:	f852 3023 	ldr.w	r3, [r2, r3, lsl #2]
 801c5a2:	61bb      	str	r3, [r7, #24]
        temp &= ~(0x0FU << (4U * (position & 0x03U)));
 801c5a4:	69fb      	ldr	r3, [r7, #28]
 801c5a6:	f003 0303 	and.w	r3, r3, #3
 801c5aa:	009b      	lsls	r3, r3, #2
 801c5ac:	220f      	movs	r2, #15
 801c5ae:	fa02 f303 	lsl.w	r3, r2, r3
 801c5b2:	43db      	mvns	r3, r3
 801c5b4:	69ba      	ldr	r2, [r7, #24]
 801c5b6:	4013      	ands	r3, r2
 801c5b8:	61bb      	str	r3, [r7, #24]
        temp |= ((uint32_t)(GPIO_GET_INDEX(GPIOx)) << (4U * (position & 0x03U)));
 801c5ba:	687b      	ldr	r3, [r7, #4]
 801c5bc:	4a48      	ldr	r2, [pc, #288]	; (801c6e0 <HAL_GPIO_Init+0x2ec>)
 801c5be:	4293      	cmp	r3, r2
 801c5c0:	d019      	beq.n	801c5f6 <HAL_GPIO_Init+0x202>
 801c5c2:	687b      	ldr	r3, [r7, #4]
 801c5c4:	4a47      	ldr	r2, [pc, #284]	; (801c6e4 <HAL_GPIO_Init+0x2f0>)
 801c5c6:	4293      	cmp	r3, r2
 801c5c8:	d013      	beq.n	801c5f2 <HAL_GPIO_Init+0x1fe>
 801c5ca:	687b      	ldr	r3, [r7, #4]
 801c5cc:	4a46      	ldr	r2, [pc, #280]	; (801c6e8 <HAL_GPIO_Init+0x2f4>)
 801c5ce:	4293      	cmp	r3, r2
 801c5d0:	d00d      	beq.n	801c5ee <HAL_GPIO_Init+0x1fa>
 801c5d2:	687b      	ldr	r3, [r7, #4]
 801c5d4:	4a45      	ldr	r2, [pc, #276]	; (801c6ec <HAL_GPIO_Init+0x2f8>)
 801c5d6:	4293      	cmp	r3, r2
 801c5d8:	d007      	beq.n	801c5ea <HAL_GPIO_Init+0x1f6>
 801c5da:	687b      	ldr	r3, [r7, #4]
 801c5dc:	4a44      	ldr	r2, [pc, #272]	; (801c6f0 <HAL_GPIO_Init+0x2fc>)
 801c5de:	4293      	cmp	r3, r2
 801c5e0:	d101      	bne.n	801c5e6 <HAL_GPIO_Init+0x1f2>
 801c5e2:	2304      	movs	r3, #4
 801c5e4:	e008      	b.n	801c5f8 <HAL_GPIO_Init+0x204>
 801c5e6:	2307      	movs	r3, #7
 801c5e8:	e006      	b.n	801c5f8 <HAL_GPIO_Init+0x204>
 801c5ea:	2303      	movs	r3, #3
 801c5ec:	e004      	b.n	801c5f8 <HAL_GPIO_Init+0x204>
 801c5ee:	2302      	movs	r3, #2
 801c5f0:	e002      	b.n	801c5f8 <HAL_GPIO_Init+0x204>
 801c5f2:	2301      	movs	r3, #1
 801c5f4:	e000      	b.n	801c5f8 <HAL_GPIO_Init+0x204>
 801c5f6:	2300      	movs	r3, #0
 801c5f8:	69fa      	ldr	r2, [r7, #28]
 801c5fa:	f002 0203 	and.w	r2, r2, #3
 801c5fe:	0092      	lsls	r2, r2, #2
 801c600:	4093      	lsls	r3, r2
 801c602:	69ba      	ldr	r2, [r7, #24]
 801c604:	4313      	orrs	r3, r2
 801c606:	61bb      	str	r3, [r7, #24]
        SYSCFG->EXTICR[position >> 2U] = temp;
 801c608:	4934      	ldr	r1, [pc, #208]	; (801c6dc <HAL_GPIO_Init+0x2e8>)
 801c60a:	69fb      	ldr	r3, [r7, #28]
 801c60c:	089b      	lsrs	r3, r3, #2
 801c60e:	3302      	adds	r3, #2
 801c610:	69ba      	ldr	r2, [r7, #24]
 801c612:	f841 2023 	str.w	r2, [r1, r3, lsl #2]

        /* Clear EXTI line configuration */
        temp = EXTI->IMR;
 801c616:	4b37      	ldr	r3, [pc, #220]	; (801c6f4 <HAL_GPIO_Init+0x300>)
 801c618:	681b      	ldr	r3, [r3, #0]
 801c61a:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 801c61c:	693b      	ldr	r3, [r7, #16]
 801c61e:	43db      	mvns	r3, r3
 801c620:	69ba      	ldr	r2, [r7, #24]
 801c622:	4013      	ands	r3, r2
 801c624:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_IT) == GPIO_MODE_IT)
 801c626:	683b      	ldr	r3, [r7, #0]
 801c628:	685b      	ldr	r3, [r3, #4]
 801c62a:	f403 3380 	and.w	r3, r3, #65536	; 0x10000
 801c62e:	2b00      	cmp	r3, #0
 801c630:	d003      	beq.n	801c63a <HAL_GPIO_Init+0x246>
        {
          temp |= iocurrent;
 801c632:	69ba      	ldr	r2, [r7, #24]
 801c634:	693b      	ldr	r3, [r7, #16]
 801c636:	4313      	orrs	r3, r2
 801c638:	61bb      	str	r3, [r7, #24]
        }
        EXTI->IMR = temp;
 801c63a:	4a2e      	ldr	r2, [pc, #184]	; (801c6f4 <HAL_GPIO_Init+0x300>)
 801c63c:	69bb      	ldr	r3, [r7, #24]
 801c63e:	6013      	str	r3, [r2, #0]

        temp = EXTI->EMR;
 801c640:	4b2c      	ldr	r3, [pc, #176]	; (801c6f4 <HAL_GPIO_Init+0x300>)
 801c642:	685b      	ldr	r3, [r3, #4]
 801c644:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 801c646:	693b      	ldr	r3, [r7, #16]
 801c648:	43db      	mvns	r3, r3
 801c64a:	69ba      	ldr	r2, [r7, #24]
 801c64c:	4013      	ands	r3, r2
 801c64e:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & GPIO_MODE_EVT) == GPIO_MODE_EVT)
 801c650:	683b      	ldr	r3, [r7, #0]
 801c652:	685b      	ldr	r3, [r3, #4]
 801c654:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801c658:	2b00      	cmp	r3, #0
 801c65a:	d003      	beq.n	801c664 <HAL_GPIO_Init+0x270>
        {
          temp |= iocurrent;
 801c65c:	69ba      	ldr	r2, [r7, #24]
 801c65e:	693b      	ldr	r3, [r7, #16]
 801c660:	4313      	orrs	r3, r2
 801c662:	61bb      	str	r3, [r7, #24]
        }
        EXTI->EMR = temp;
 801c664:	4a23      	ldr	r2, [pc, #140]	; (801c6f4 <HAL_GPIO_Init+0x300>)
 801c666:	69bb      	ldr	r3, [r7, #24]
 801c668:	6053      	str	r3, [r2, #4]

        /* Clear Rising Falling edge configuration */
        temp = EXTI->RTSR;
 801c66a:	4b22      	ldr	r3, [pc, #136]	; (801c6f4 <HAL_GPIO_Init+0x300>)
 801c66c:	689b      	ldr	r3, [r3, #8]
 801c66e:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 801c670:	693b      	ldr	r3, [r7, #16]
 801c672:	43db      	mvns	r3, r3
 801c674:	69ba      	ldr	r2, [r7, #24]
 801c676:	4013      	ands	r3, r2
 801c678:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & RISING_EDGE) == RISING_EDGE)
 801c67a:	683b      	ldr	r3, [r7, #0]
 801c67c:	685b      	ldr	r3, [r3, #4]
 801c67e:	f403 1380 	and.w	r3, r3, #1048576	; 0x100000
 801c682:	2b00      	cmp	r3, #0
 801c684:	d003      	beq.n	801c68e <HAL_GPIO_Init+0x29a>
        {
          temp |= iocurrent;
 801c686:	69ba      	ldr	r2, [r7, #24]
 801c688:	693b      	ldr	r3, [r7, #16]
 801c68a:	4313      	orrs	r3, r2
 801c68c:	61bb      	str	r3, [r7, #24]
        }
        EXTI->RTSR = temp;
 801c68e:	4a19      	ldr	r2, [pc, #100]	; (801c6f4 <HAL_GPIO_Init+0x300>)
 801c690:	69bb      	ldr	r3, [r7, #24]
 801c692:	6093      	str	r3, [r2, #8]

        temp = EXTI->FTSR;
 801c694:	4b17      	ldr	r3, [pc, #92]	; (801c6f4 <HAL_GPIO_Init+0x300>)
 801c696:	68db      	ldr	r3, [r3, #12]
 801c698:	61bb      	str	r3, [r7, #24]
        temp &= ~((uint32_t)iocurrent);
 801c69a:	693b      	ldr	r3, [r7, #16]
 801c69c:	43db      	mvns	r3, r3
 801c69e:	69ba      	ldr	r2, [r7, #24]
 801c6a0:	4013      	ands	r3, r2
 801c6a2:	61bb      	str	r3, [r7, #24]
        if((GPIO_Init->Mode & FALLING_EDGE) == FALLING_EDGE)
 801c6a4:	683b      	ldr	r3, [r7, #0]
 801c6a6:	685b      	ldr	r3, [r3, #4]
 801c6a8:	f403 1300 	and.w	r3, r3, #2097152	; 0x200000
 801c6ac:	2b00      	cmp	r3, #0
 801c6ae:	d003      	beq.n	801c6b8 <HAL_GPIO_Init+0x2c4>
        {
          temp |= iocurrent;
 801c6b0:	69ba      	ldr	r2, [r7, #24]
 801c6b2:	693b      	ldr	r3, [r7, #16]
 801c6b4:	4313      	orrs	r3, r2
 801c6b6:	61bb      	str	r3, [r7, #24]
        }
        EXTI->FTSR = temp;
 801c6b8:	4a0e      	ldr	r2, [pc, #56]	; (801c6f4 <HAL_GPIO_Init+0x300>)
 801c6ba:	69bb      	ldr	r3, [r7, #24]
 801c6bc:	60d3      	str	r3, [r2, #12]
  for(position = 0U; position < GPIO_NUMBER; position++)
 801c6be:	69fb      	ldr	r3, [r7, #28]
 801c6c0:	3301      	adds	r3, #1
 801c6c2:	61fb      	str	r3, [r7, #28]
 801c6c4:	69fb      	ldr	r3, [r7, #28]
 801c6c6:	2b0f      	cmp	r3, #15
 801c6c8:	f67f aea2 	bls.w	801c410 <HAL_GPIO_Init+0x1c>
      }
    }
  }
}
 801c6cc:	bf00      	nop
 801c6ce:	3724      	adds	r7, #36	; 0x24
 801c6d0:	46bd      	mov	sp, r7
 801c6d2:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c6d6:	4770      	bx	lr
 801c6d8:	40023800 	.word	0x40023800
 801c6dc:	40013800 	.word	0x40013800
 801c6e0:	40020000 	.word	0x40020000
 801c6e4:	40020400 	.word	0x40020400
 801c6e8:	40020800 	.word	0x40020800
 801c6ec:	40020c00 	.word	0x40020c00
 801c6f0:	40021000 	.word	0x40021000
 801c6f4:	40013c00 	.word	0x40013c00

0801c6f8 <HAL_GPIO_ReadPin>:
  * @param  GPIO_Pin specifies the port bit to read.
  *         This parameter can be GPIO_PIN_x where x can be (0..15).
  * @retval The input port pin value.
  */
GPIO_PinState HAL_GPIO_ReadPin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin)
{
 801c6f8:	b480      	push	{r7}
 801c6fa:	b085      	sub	sp, #20
 801c6fc:	af00      	add	r7, sp, #0
 801c6fe:	6078      	str	r0, [r7, #4]
 801c700:	460b      	mov	r3, r1
 801c702:	807b      	strh	r3, [r7, #2]
  GPIO_PinState bitstatus;

  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));

  if((GPIOx->IDR & GPIO_Pin) != (uint32_t)GPIO_PIN_RESET)
 801c704:	687b      	ldr	r3, [r7, #4]
 801c706:	691a      	ldr	r2, [r3, #16]
 801c708:	887b      	ldrh	r3, [r7, #2]
 801c70a:	4013      	ands	r3, r2
 801c70c:	2b00      	cmp	r3, #0
 801c70e:	d002      	beq.n	801c716 <HAL_GPIO_ReadPin+0x1e>
  {
    bitstatus = GPIO_PIN_SET;
 801c710:	2301      	movs	r3, #1
 801c712:	73fb      	strb	r3, [r7, #15]
 801c714:	e001      	b.n	801c71a <HAL_GPIO_ReadPin+0x22>
  }
  else
  {
    bitstatus = GPIO_PIN_RESET;
 801c716:	2300      	movs	r3, #0
 801c718:	73fb      	strb	r3, [r7, #15]
  }
  return bitstatus;
 801c71a:	7bfb      	ldrb	r3, [r7, #15]
}
 801c71c:	4618      	mov	r0, r3
 801c71e:	3714      	adds	r7, #20
 801c720:	46bd      	mov	sp, r7
 801c722:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c726:	4770      	bx	lr

0801c728 <HAL_GPIO_WritePin>:
  *            @arg GPIO_PIN_RESET: to clear the port pin
  *            @arg GPIO_PIN_SET: to set the port pin
  * @retval None
  */
void HAL_GPIO_WritePin(GPIO_TypeDef* GPIOx, uint16_t GPIO_Pin, GPIO_PinState PinState)
{
 801c728:	b480      	push	{r7}
 801c72a:	b083      	sub	sp, #12
 801c72c:	af00      	add	r7, sp, #0
 801c72e:	6078      	str	r0, [r7, #4]
 801c730:	460b      	mov	r3, r1
 801c732:	807b      	strh	r3, [r7, #2]
 801c734:	4613      	mov	r3, r2
 801c736:	707b      	strb	r3, [r7, #1]
  /* Check the parameters */
  assert_param(IS_GPIO_PIN(GPIO_Pin));
  assert_param(IS_GPIO_PIN_ACTION(PinState));

  if(PinState != GPIO_PIN_RESET)
 801c738:	787b      	ldrb	r3, [r7, #1]
 801c73a:	2b00      	cmp	r3, #0
 801c73c:	d003      	beq.n	801c746 <HAL_GPIO_WritePin+0x1e>
  {
    GPIOx->BSRR = GPIO_Pin;
 801c73e:	887a      	ldrh	r2, [r7, #2]
 801c740:	687b      	ldr	r3, [r7, #4]
 801c742:	619a      	str	r2, [r3, #24]
  }
  else
  {
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
  }
}
 801c744:	e003      	b.n	801c74e <HAL_GPIO_WritePin+0x26>
    GPIOx->BSRR = (uint32_t)GPIO_Pin << 16U;
 801c746:	887b      	ldrh	r3, [r7, #2]
 801c748:	041a      	lsls	r2, r3, #16
 801c74a:	687b      	ldr	r3, [r7, #4]
 801c74c:	619a      	str	r2, [r3, #24]
}
 801c74e:	bf00      	nop
 801c750:	370c      	adds	r7, #12
 801c752:	46bd      	mov	sp, r7
 801c754:	f85d 7b04 	ldr.w	r7, [sp], #4
 801c758:	4770      	bx	lr
	...

0801c75c <HAL_GPIO_EXTI_IRQHandler>:
  * @brief  This function handles EXTI interrupt request.
  * @param  GPIO_Pin Specifies the pins connected EXTI line
  * @retval None
  */
void HAL_GPIO_EXTI_IRQHandler(uint16_t GPIO_Pin)
{
 801c75c:	b580      	push	{r7, lr}
 801c75e:	b082      	sub	sp, #8
 801c760:	af00      	add	r7, sp, #0
 801c762:	4603      	mov	r3, r0
 801c764:	80fb      	strh	r3, [r7, #6]
  /* EXTI line interrupt detected */
  if(__HAL_GPIO_EXTI_GET_IT(GPIO_Pin) != RESET)
 801c766:	4b08      	ldr	r3, [pc, #32]	; (801c788 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 801c768:	695a      	ldr	r2, [r3, #20]
 801c76a:	88fb      	ldrh	r3, [r7, #6]
 801c76c:	4013      	ands	r3, r2
 801c76e:	2b00      	cmp	r3, #0
 801c770:	d006      	beq.n	801c780 <HAL_GPIO_EXTI_IRQHandler+0x24>
  {
    __HAL_GPIO_EXTI_CLEAR_IT(GPIO_Pin);
 801c772:	4a05      	ldr	r2, [pc, #20]	; (801c788 <HAL_GPIO_EXTI_IRQHandler+0x2c>)
 801c774:	88fb      	ldrh	r3, [r7, #6]
 801c776:	6153      	str	r3, [r2, #20]
    HAL_GPIO_EXTI_Callback(GPIO_Pin);
 801c778:	88fb      	ldrh	r3, [r7, #6]
 801c77a:	4618      	mov	r0, r3
 801c77c:	f7fe ff3a 	bl	801b5f4 <HAL_GPIO_EXTI_Callback>
  }
}
 801c780:	bf00      	nop
 801c782:	3708      	adds	r7, #8
 801c784:	46bd      	mov	sp, r7
 801c786:	bd80      	pop	{r7, pc}
 801c788:	40013c00 	.word	0x40013c00

0801c78c <HAL_I2C_Init>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Init(I2C_HandleTypeDef *hi2c)
{
 801c78c:	b580      	push	{r7, lr}
 801c78e:	b084      	sub	sp, #16
 801c790:	af00      	add	r7, sp, #0
 801c792:	6078      	str	r0, [r7, #4]
  uint32_t freqrange;
  uint32_t pclk1;

  /* Check the I2C handle allocation */
  if (hi2c == NULL)
 801c794:	687b      	ldr	r3, [r7, #4]
 801c796:	2b00      	cmp	r3, #0
 801c798:	d101      	bne.n	801c79e <HAL_I2C_Init+0x12>
  {
    return HAL_ERROR;
 801c79a:	2301      	movs	r3, #1
 801c79c:	e11f      	b.n	801c9de <HAL_I2C_Init+0x252>
  assert_param(IS_I2C_DUAL_ADDRESS(hi2c->Init.DualAddressMode));
  assert_param(IS_I2C_OWN_ADDRESS2(hi2c->Init.OwnAddress2));
  assert_param(IS_I2C_GENERAL_CALL(hi2c->Init.GeneralCallMode));
  assert_param(IS_I2C_NO_STRETCH(hi2c->Init.NoStretchMode));

  if (hi2c->State == HAL_I2C_STATE_RESET)
 801c79e:	687b      	ldr	r3, [r7, #4]
 801c7a0:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 801c7a4:	b2db      	uxtb	r3, r3
 801c7a6:	2b00      	cmp	r3, #0
 801c7a8:	d106      	bne.n	801c7b8 <HAL_I2C_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    hi2c->Lock = HAL_UNLOCKED;
 801c7aa:	687b      	ldr	r3, [r7, #4]
 801c7ac:	2200      	movs	r2, #0
 801c7ae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    hi2c->MspInitCallback(hi2c);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_I2C_MspInit(hi2c);
 801c7b2:	6878      	ldr	r0, [r7, #4]
 801c7b4:	f7fe fa34 	bl	801ac20 <HAL_I2C_MspInit>
#endif /* USE_HAL_I2C_REGISTER_CALLBACKS */
  }

  hi2c->State = HAL_I2C_STATE_BUSY;
 801c7b8:	687b      	ldr	r3, [r7, #4]
 801c7ba:	2224      	movs	r2, #36	; 0x24
 801c7bc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Disable the selected I2C peripheral */
  __HAL_I2C_DISABLE(hi2c);
 801c7c0:	687b      	ldr	r3, [r7, #4]
 801c7c2:	681b      	ldr	r3, [r3, #0]
 801c7c4:	681a      	ldr	r2, [r3, #0]
 801c7c6:	687b      	ldr	r3, [r7, #4]
 801c7c8:	681b      	ldr	r3, [r3, #0]
 801c7ca:	f022 0201 	bic.w	r2, r2, #1
 801c7ce:	601a      	str	r2, [r3, #0]

  /*Reset I2C*/
  hi2c->Instance->CR1 |= I2C_CR1_SWRST;
 801c7d0:	687b      	ldr	r3, [r7, #4]
 801c7d2:	681b      	ldr	r3, [r3, #0]
 801c7d4:	681a      	ldr	r2, [r3, #0]
 801c7d6:	687b      	ldr	r3, [r7, #4]
 801c7d8:	681b      	ldr	r3, [r3, #0]
 801c7da:	f442 4200 	orr.w	r2, r2, #32768	; 0x8000
 801c7de:	601a      	str	r2, [r3, #0]
  hi2c->Instance->CR1 &= ~I2C_CR1_SWRST;
 801c7e0:	687b      	ldr	r3, [r7, #4]
 801c7e2:	681b      	ldr	r3, [r3, #0]
 801c7e4:	681a      	ldr	r2, [r3, #0]
 801c7e6:	687b      	ldr	r3, [r7, #4]
 801c7e8:	681b      	ldr	r3, [r3, #0]
 801c7ea:	f422 4200 	bic.w	r2, r2, #32768	; 0x8000
 801c7ee:	601a      	str	r2, [r3, #0]

  /* Get PCLK1 frequency */
  pclk1 = HAL_RCC_GetPCLK1Freq();
 801c7f0:	f001 f974 	bl	801dadc <HAL_RCC_GetPCLK1Freq>
 801c7f4:	60f8      	str	r0, [r7, #12]

  /* Check the minimum allowed PCLK1 frequency */
  if (I2C_MIN_PCLK_FREQ(pclk1, hi2c->Init.ClockSpeed) == 1U)
 801c7f6:	687b      	ldr	r3, [r7, #4]
 801c7f8:	685b      	ldr	r3, [r3, #4]
 801c7fa:	4a7b      	ldr	r2, [pc, #492]	; (801c9e8 <HAL_I2C_Init+0x25c>)
 801c7fc:	4293      	cmp	r3, r2
 801c7fe:	d807      	bhi.n	801c810 <HAL_I2C_Init+0x84>
 801c800:	68fb      	ldr	r3, [r7, #12]
 801c802:	4a7a      	ldr	r2, [pc, #488]	; (801c9ec <HAL_I2C_Init+0x260>)
 801c804:	4293      	cmp	r3, r2
 801c806:	bf94      	ite	ls
 801c808:	2301      	movls	r3, #1
 801c80a:	2300      	movhi	r3, #0
 801c80c:	b2db      	uxtb	r3, r3
 801c80e:	e006      	b.n	801c81e <HAL_I2C_Init+0x92>
 801c810:	68fb      	ldr	r3, [r7, #12]
 801c812:	4a77      	ldr	r2, [pc, #476]	; (801c9f0 <HAL_I2C_Init+0x264>)
 801c814:	4293      	cmp	r3, r2
 801c816:	bf94      	ite	ls
 801c818:	2301      	movls	r3, #1
 801c81a:	2300      	movhi	r3, #0
 801c81c:	b2db      	uxtb	r3, r3
 801c81e:	2b00      	cmp	r3, #0
 801c820:	d001      	beq.n	801c826 <HAL_I2C_Init+0x9a>
  {
    return HAL_ERROR;
 801c822:	2301      	movs	r3, #1
 801c824:	e0db      	b.n	801c9de <HAL_I2C_Init+0x252>
  }

  /* Calculate frequency range */
  freqrange = I2C_FREQRANGE(pclk1);
 801c826:	68fb      	ldr	r3, [r7, #12]
 801c828:	4a72      	ldr	r2, [pc, #456]	; (801c9f4 <HAL_I2C_Init+0x268>)
 801c82a:	fba2 2303 	umull	r2, r3, r2, r3
 801c82e:	0c9b      	lsrs	r3, r3, #18
 801c830:	60bb      	str	r3, [r7, #8]

  /*---------------------------- I2Cx CR2 Configuration ----------------------*/
  /* Configure I2Cx: Frequency range */
  MODIFY_REG(hi2c->Instance->CR2, I2C_CR2_FREQ, freqrange);
 801c832:	687b      	ldr	r3, [r7, #4]
 801c834:	681b      	ldr	r3, [r3, #0]
 801c836:	685b      	ldr	r3, [r3, #4]
 801c838:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 801c83c:	687b      	ldr	r3, [r7, #4]
 801c83e:	681b      	ldr	r3, [r3, #0]
 801c840:	68ba      	ldr	r2, [r7, #8]
 801c842:	430a      	orrs	r2, r1
 801c844:	605a      	str	r2, [r3, #4]

  /*---------------------------- I2Cx TRISE Configuration --------------------*/
  /* Configure I2Cx: Rise Time */
  MODIFY_REG(hi2c->Instance->TRISE, I2C_TRISE_TRISE, I2C_RISE_TIME(freqrange, hi2c->Init.ClockSpeed));
 801c846:	687b      	ldr	r3, [r7, #4]
 801c848:	681b      	ldr	r3, [r3, #0]
 801c84a:	6a1b      	ldr	r3, [r3, #32]
 801c84c:	f023 013f 	bic.w	r1, r3, #63	; 0x3f
 801c850:	687b      	ldr	r3, [r7, #4]
 801c852:	685b      	ldr	r3, [r3, #4]
 801c854:	4a64      	ldr	r2, [pc, #400]	; (801c9e8 <HAL_I2C_Init+0x25c>)
 801c856:	4293      	cmp	r3, r2
 801c858:	d802      	bhi.n	801c860 <HAL_I2C_Init+0xd4>
 801c85a:	68bb      	ldr	r3, [r7, #8]
 801c85c:	3301      	adds	r3, #1
 801c85e:	e009      	b.n	801c874 <HAL_I2C_Init+0xe8>
 801c860:	68bb      	ldr	r3, [r7, #8]
 801c862:	f44f 7296 	mov.w	r2, #300	; 0x12c
 801c866:	fb02 f303 	mul.w	r3, r2, r3
 801c86a:	4a63      	ldr	r2, [pc, #396]	; (801c9f8 <HAL_I2C_Init+0x26c>)
 801c86c:	fba2 2303 	umull	r2, r3, r2, r3
 801c870:	099b      	lsrs	r3, r3, #6
 801c872:	3301      	adds	r3, #1
 801c874:	687a      	ldr	r2, [r7, #4]
 801c876:	6812      	ldr	r2, [r2, #0]
 801c878:	430b      	orrs	r3, r1
 801c87a:	6213      	str	r3, [r2, #32]

  /*---------------------------- I2Cx CCR Configuration ----------------------*/
  /* Configure I2Cx: Speed */
  MODIFY_REG(hi2c->Instance->CCR, (I2C_CCR_FS | I2C_CCR_DUTY | I2C_CCR_CCR), I2C_SPEED(pclk1, hi2c->Init.ClockSpeed, hi2c->Init.DutyCycle));
 801c87c:	687b      	ldr	r3, [r7, #4]
 801c87e:	681b      	ldr	r3, [r3, #0]
 801c880:	69db      	ldr	r3, [r3, #28]
 801c882:	f423 424f 	bic.w	r2, r3, #52992	; 0xcf00
 801c886:	f022 02ff 	bic.w	r2, r2, #255	; 0xff
 801c88a:	687b      	ldr	r3, [r7, #4]
 801c88c:	685b      	ldr	r3, [r3, #4]
 801c88e:	4956      	ldr	r1, [pc, #344]	; (801c9e8 <HAL_I2C_Init+0x25c>)
 801c890:	428b      	cmp	r3, r1
 801c892:	d80d      	bhi.n	801c8b0 <HAL_I2C_Init+0x124>
 801c894:	68fb      	ldr	r3, [r7, #12]
 801c896:	1e59      	subs	r1, r3, #1
 801c898:	687b      	ldr	r3, [r7, #4]
 801c89a:	685b      	ldr	r3, [r3, #4]
 801c89c:	005b      	lsls	r3, r3, #1
 801c89e:	fbb1 f3f3 	udiv	r3, r1, r3
 801c8a2:	3301      	adds	r3, #1
 801c8a4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801c8a8:	2b04      	cmp	r3, #4
 801c8aa:	bf38      	it	cc
 801c8ac:	2304      	movcc	r3, #4
 801c8ae:	e04f      	b.n	801c950 <HAL_I2C_Init+0x1c4>
 801c8b0:	687b      	ldr	r3, [r7, #4]
 801c8b2:	689b      	ldr	r3, [r3, #8]
 801c8b4:	2b00      	cmp	r3, #0
 801c8b6:	d111      	bne.n	801c8dc <HAL_I2C_Init+0x150>
 801c8b8:	68fb      	ldr	r3, [r7, #12]
 801c8ba:	1e58      	subs	r0, r3, #1
 801c8bc:	687b      	ldr	r3, [r7, #4]
 801c8be:	6859      	ldr	r1, [r3, #4]
 801c8c0:	460b      	mov	r3, r1
 801c8c2:	005b      	lsls	r3, r3, #1
 801c8c4:	440b      	add	r3, r1
 801c8c6:	fbb0 f3f3 	udiv	r3, r0, r3
 801c8ca:	3301      	adds	r3, #1
 801c8cc:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801c8d0:	2b00      	cmp	r3, #0
 801c8d2:	bf0c      	ite	eq
 801c8d4:	2301      	moveq	r3, #1
 801c8d6:	2300      	movne	r3, #0
 801c8d8:	b2db      	uxtb	r3, r3
 801c8da:	e012      	b.n	801c902 <HAL_I2C_Init+0x176>
 801c8dc:	68fb      	ldr	r3, [r7, #12]
 801c8de:	1e58      	subs	r0, r3, #1
 801c8e0:	687b      	ldr	r3, [r7, #4]
 801c8e2:	6859      	ldr	r1, [r3, #4]
 801c8e4:	460b      	mov	r3, r1
 801c8e6:	009b      	lsls	r3, r3, #2
 801c8e8:	440b      	add	r3, r1
 801c8ea:	0099      	lsls	r1, r3, #2
 801c8ec:	440b      	add	r3, r1
 801c8ee:	fbb0 f3f3 	udiv	r3, r0, r3
 801c8f2:	3301      	adds	r3, #1
 801c8f4:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801c8f8:	2b00      	cmp	r3, #0
 801c8fa:	bf0c      	ite	eq
 801c8fc:	2301      	moveq	r3, #1
 801c8fe:	2300      	movne	r3, #0
 801c900:	b2db      	uxtb	r3, r3
 801c902:	2b00      	cmp	r3, #0
 801c904:	d001      	beq.n	801c90a <HAL_I2C_Init+0x17e>
 801c906:	2301      	movs	r3, #1
 801c908:	e022      	b.n	801c950 <HAL_I2C_Init+0x1c4>
 801c90a:	687b      	ldr	r3, [r7, #4]
 801c90c:	689b      	ldr	r3, [r3, #8]
 801c90e:	2b00      	cmp	r3, #0
 801c910:	d10e      	bne.n	801c930 <HAL_I2C_Init+0x1a4>
 801c912:	68fb      	ldr	r3, [r7, #12]
 801c914:	1e58      	subs	r0, r3, #1
 801c916:	687b      	ldr	r3, [r7, #4]
 801c918:	6859      	ldr	r1, [r3, #4]
 801c91a:	460b      	mov	r3, r1
 801c91c:	005b      	lsls	r3, r3, #1
 801c91e:	440b      	add	r3, r1
 801c920:	fbb0 f3f3 	udiv	r3, r0, r3
 801c924:	3301      	adds	r3, #1
 801c926:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801c92a:	f443 4300 	orr.w	r3, r3, #32768	; 0x8000
 801c92e:	e00f      	b.n	801c950 <HAL_I2C_Init+0x1c4>
 801c930:	68fb      	ldr	r3, [r7, #12]
 801c932:	1e58      	subs	r0, r3, #1
 801c934:	687b      	ldr	r3, [r7, #4]
 801c936:	6859      	ldr	r1, [r3, #4]
 801c938:	460b      	mov	r3, r1
 801c93a:	009b      	lsls	r3, r3, #2
 801c93c:	440b      	add	r3, r1
 801c93e:	0099      	lsls	r1, r3, #2
 801c940:	440b      	add	r3, r1
 801c942:	fbb0 f3f3 	udiv	r3, r0, r3
 801c946:	3301      	adds	r3, #1
 801c948:	f3c3 030b 	ubfx	r3, r3, #0, #12
 801c94c:	f443 4340 	orr.w	r3, r3, #49152	; 0xc000
 801c950:	6879      	ldr	r1, [r7, #4]
 801c952:	6809      	ldr	r1, [r1, #0]
 801c954:	4313      	orrs	r3, r2
 801c956:	61cb      	str	r3, [r1, #28]

  /*---------------------------- I2Cx CR1 Configuration ----------------------*/
  /* Configure I2Cx: Generalcall and NoStretch mode */
  MODIFY_REG(hi2c->Instance->CR1, (I2C_CR1_ENGC | I2C_CR1_NOSTRETCH), (hi2c->Init.GeneralCallMode | hi2c->Init.NoStretchMode));
 801c958:	687b      	ldr	r3, [r7, #4]
 801c95a:	681b      	ldr	r3, [r3, #0]
 801c95c:	681b      	ldr	r3, [r3, #0]
 801c95e:	f023 01c0 	bic.w	r1, r3, #192	; 0xc0
 801c962:	687b      	ldr	r3, [r7, #4]
 801c964:	69da      	ldr	r2, [r3, #28]
 801c966:	687b      	ldr	r3, [r7, #4]
 801c968:	6a1b      	ldr	r3, [r3, #32]
 801c96a:	431a      	orrs	r2, r3
 801c96c:	687b      	ldr	r3, [r7, #4]
 801c96e:	681b      	ldr	r3, [r3, #0]
 801c970:	430a      	orrs	r2, r1
 801c972:	601a      	str	r2, [r3, #0]

  /*---------------------------- I2Cx OAR1 Configuration ---------------------*/
  /* Configure I2Cx: Own Address1 and addressing mode */
  MODIFY_REG(hi2c->Instance->OAR1, (I2C_OAR1_ADDMODE | I2C_OAR1_ADD8_9 | I2C_OAR1_ADD1_7 | I2C_OAR1_ADD0), (hi2c->Init.AddressingMode | hi2c->Init.OwnAddress1));
 801c974:	687b      	ldr	r3, [r7, #4]
 801c976:	681b      	ldr	r3, [r3, #0]
 801c978:	689b      	ldr	r3, [r3, #8]
 801c97a:	f423 4303 	bic.w	r3, r3, #33536	; 0x8300
 801c97e:	f023 03ff 	bic.w	r3, r3, #255	; 0xff
 801c982:	687a      	ldr	r2, [r7, #4]
 801c984:	6911      	ldr	r1, [r2, #16]
 801c986:	687a      	ldr	r2, [r7, #4]
 801c988:	68d2      	ldr	r2, [r2, #12]
 801c98a:	4311      	orrs	r1, r2
 801c98c:	687a      	ldr	r2, [r7, #4]
 801c98e:	6812      	ldr	r2, [r2, #0]
 801c990:	430b      	orrs	r3, r1
 801c992:	6093      	str	r3, [r2, #8]

  /*---------------------------- I2Cx OAR2 Configuration ---------------------*/
  /* Configure I2Cx: Dual mode and Own Address2 */
  MODIFY_REG(hi2c->Instance->OAR2, (I2C_OAR2_ENDUAL | I2C_OAR2_ADD2), (hi2c->Init.DualAddressMode | hi2c->Init.OwnAddress2));
 801c994:	687b      	ldr	r3, [r7, #4]
 801c996:	681b      	ldr	r3, [r3, #0]
 801c998:	68db      	ldr	r3, [r3, #12]
 801c99a:	f023 01ff 	bic.w	r1, r3, #255	; 0xff
 801c99e:	687b      	ldr	r3, [r7, #4]
 801c9a0:	695a      	ldr	r2, [r3, #20]
 801c9a2:	687b      	ldr	r3, [r7, #4]
 801c9a4:	699b      	ldr	r3, [r3, #24]
 801c9a6:	431a      	orrs	r2, r3
 801c9a8:	687b      	ldr	r3, [r7, #4]
 801c9aa:	681b      	ldr	r3, [r3, #0]
 801c9ac:	430a      	orrs	r2, r1
 801c9ae:	60da      	str	r2, [r3, #12]

  /* Enable the selected I2C peripheral */
  __HAL_I2C_ENABLE(hi2c);
 801c9b0:	687b      	ldr	r3, [r7, #4]
 801c9b2:	681b      	ldr	r3, [r3, #0]
 801c9b4:	681a      	ldr	r2, [r3, #0]
 801c9b6:	687b      	ldr	r3, [r7, #4]
 801c9b8:	681b      	ldr	r3, [r3, #0]
 801c9ba:	f042 0201 	orr.w	r2, r2, #1
 801c9be:	601a      	str	r2, [r3, #0]

  hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 801c9c0:	687b      	ldr	r3, [r7, #4]
 801c9c2:	2200      	movs	r2, #0
 801c9c4:	641a      	str	r2, [r3, #64]	; 0x40
  hi2c->State = HAL_I2C_STATE_READY;
 801c9c6:	687b      	ldr	r3, [r7, #4]
 801c9c8:	2220      	movs	r2, #32
 801c9ca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
  hi2c->PreviousState = I2C_STATE_NONE;
 801c9ce:	687b      	ldr	r3, [r7, #4]
 801c9d0:	2200      	movs	r2, #0
 801c9d2:	631a      	str	r2, [r3, #48]	; 0x30
  hi2c->Mode = HAL_I2C_MODE_NONE;
 801c9d4:	687b      	ldr	r3, [r7, #4]
 801c9d6:	2200      	movs	r2, #0
 801c9d8:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

  return HAL_OK;
 801c9dc:	2300      	movs	r3, #0
}
 801c9de:	4618      	mov	r0, r3
 801c9e0:	3710      	adds	r7, #16
 801c9e2:	46bd      	mov	sp, r7
 801c9e4:	bd80      	pop	{r7, pc}
 801c9e6:	bf00      	nop
 801c9e8:	000186a0 	.word	0x000186a0
 801c9ec:	001e847f 	.word	0x001e847f
 801c9f0:	003d08ff 	.word	0x003d08ff
 801c9f4:	431bde83 	.word	0x431bde83
 801c9f8:	10624dd3 	.word	0x10624dd3

0801c9fc <HAL_I2C_Master_Transmit>:
  * @param  Size Amount of data to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_Master_Transmit(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 801c9fc:	b580      	push	{r7, lr}
 801c9fe:	b088      	sub	sp, #32
 801ca00:	af02      	add	r7, sp, #8
 801ca02:	60f8      	str	r0, [r7, #12]
 801ca04:	607a      	str	r2, [r7, #4]
 801ca06:	461a      	mov	r2, r3
 801ca08:	460b      	mov	r3, r1
 801ca0a:	817b      	strh	r3, [r7, #10]
 801ca0c:	4613      	mov	r3, r2
 801ca0e:	813b      	strh	r3, [r7, #8]
  /* Init tickstart for timeout management*/
  uint32_t tickstart = HAL_GetTick();
 801ca10:	f7ff f8c8 	bl	801bba4 <HAL_GetTick>
 801ca14:	6178      	str	r0, [r7, #20]

  if (hi2c->State == HAL_I2C_STATE_READY)
 801ca16:	68fb      	ldr	r3, [r7, #12]
 801ca18:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 801ca1c:	b2db      	uxtb	r3, r3
 801ca1e:	2b20      	cmp	r3, #32
 801ca20:	f040 80e0 	bne.w	801cbe4 <HAL_I2C_Master_Transmit+0x1e8>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 801ca24:	697b      	ldr	r3, [r7, #20]
 801ca26:	9300      	str	r3, [sp, #0]
 801ca28:	2319      	movs	r3, #25
 801ca2a:	2201      	movs	r2, #1
 801ca2c:	4970      	ldr	r1, [pc, #448]	; (801cbf0 <HAL_I2C_Master_Transmit+0x1f4>)
 801ca2e:	68f8      	ldr	r0, [r7, #12]
 801ca30:	f000 fa92 	bl	801cf58 <I2C_WaitOnFlagUntilTimeout>
 801ca34:	4603      	mov	r3, r0
 801ca36:	2b00      	cmp	r3, #0
 801ca38:	d001      	beq.n	801ca3e <HAL_I2C_Master_Transmit+0x42>
    {
      return HAL_BUSY;
 801ca3a:	2302      	movs	r3, #2
 801ca3c:	e0d3      	b.n	801cbe6 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 801ca3e:	68fb      	ldr	r3, [r7, #12]
 801ca40:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 801ca44:	2b01      	cmp	r3, #1
 801ca46:	d101      	bne.n	801ca4c <HAL_I2C_Master_Transmit+0x50>
 801ca48:	2302      	movs	r3, #2
 801ca4a:	e0cc      	b.n	801cbe6 <HAL_I2C_Master_Transmit+0x1ea>
 801ca4c:	68fb      	ldr	r3, [r7, #12]
 801ca4e:	2201      	movs	r2, #1
 801ca50:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 801ca54:	68fb      	ldr	r3, [r7, #12]
 801ca56:	681b      	ldr	r3, [r3, #0]
 801ca58:	681b      	ldr	r3, [r3, #0]
 801ca5a:	f003 0301 	and.w	r3, r3, #1
 801ca5e:	2b01      	cmp	r3, #1
 801ca60:	d007      	beq.n	801ca72 <HAL_I2C_Master_Transmit+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 801ca62:	68fb      	ldr	r3, [r7, #12]
 801ca64:	681b      	ldr	r3, [r3, #0]
 801ca66:	681a      	ldr	r2, [r3, #0]
 801ca68:	68fb      	ldr	r3, [r7, #12]
 801ca6a:	681b      	ldr	r3, [r3, #0]
 801ca6c:	f042 0201 	orr.w	r2, r2, #1
 801ca70:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 801ca72:	68fb      	ldr	r3, [r7, #12]
 801ca74:	681b      	ldr	r3, [r3, #0]
 801ca76:	681a      	ldr	r2, [r3, #0]
 801ca78:	68fb      	ldr	r3, [r7, #12]
 801ca7a:	681b      	ldr	r3, [r3, #0]
 801ca7c:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 801ca80:	601a      	str	r2, [r3, #0]

    hi2c->State       = HAL_I2C_STATE_BUSY_TX;
 801ca82:	68fb      	ldr	r3, [r7, #12]
 801ca84:	2221      	movs	r2, #33	; 0x21
 801ca86:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode        = HAL_I2C_MODE_MASTER;
 801ca8a:	68fb      	ldr	r3, [r7, #12]
 801ca8c:	2210      	movs	r2, #16
 801ca8e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode   = HAL_I2C_ERROR_NONE;
 801ca92:	68fb      	ldr	r3, [r7, #12]
 801ca94:	2200      	movs	r2, #0
 801ca96:	641a      	str	r2, [r3, #64]	; 0x40

    /* Prepare transfer parameters */
    hi2c->pBuffPtr    = pData;
 801ca98:	68fb      	ldr	r3, [r7, #12]
 801ca9a:	687a      	ldr	r2, [r7, #4]
 801ca9c:	625a      	str	r2, [r3, #36]	; 0x24
    hi2c->XferCount   = Size;
 801ca9e:	68fb      	ldr	r3, [r7, #12]
 801caa0:	893a      	ldrh	r2, [r7, #8]
 801caa2:	855a      	strh	r2, [r3, #42]	; 0x2a
    hi2c->XferSize    = hi2c->XferCount;
 801caa4:	68fb      	ldr	r3, [r7, #12]
 801caa6:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 801caa8:	b29a      	uxth	r2, r3
 801caaa:	68fb      	ldr	r3, [r7, #12]
 801caac:	851a      	strh	r2, [r3, #40]	; 0x28
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 801caae:	68fb      	ldr	r3, [r7, #12]
 801cab0:	4a50      	ldr	r2, [pc, #320]	; (801cbf4 <HAL_I2C_Master_Transmit+0x1f8>)
 801cab2:	62da      	str	r2, [r3, #44]	; 0x2c

    /* Send Slave Address */
    if (I2C_MasterRequestWrite(hi2c, DevAddress, Timeout, tickstart) != HAL_OK)
 801cab4:	8979      	ldrh	r1, [r7, #10]
 801cab6:	697b      	ldr	r3, [r7, #20]
 801cab8:	6a3a      	ldr	r2, [r7, #32]
 801caba:	68f8      	ldr	r0, [r7, #12]
 801cabc:	f000 f9ca 	bl	801ce54 <I2C_MasterRequestWrite>
 801cac0:	4603      	mov	r3, r0
 801cac2:	2b00      	cmp	r3, #0
 801cac4:	d001      	beq.n	801caca <HAL_I2C_Master_Transmit+0xce>
    {
      return HAL_ERROR;
 801cac6:	2301      	movs	r3, #1
 801cac8:	e08d      	b.n	801cbe6 <HAL_I2C_Master_Transmit+0x1ea>
    }

    /* Clear ADDR flag */
    __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 801caca:	2300      	movs	r3, #0
 801cacc:	613b      	str	r3, [r7, #16]
 801cace:	68fb      	ldr	r3, [r7, #12]
 801cad0:	681b      	ldr	r3, [r3, #0]
 801cad2:	695b      	ldr	r3, [r3, #20]
 801cad4:	613b      	str	r3, [r7, #16]
 801cad6:	68fb      	ldr	r3, [r7, #12]
 801cad8:	681b      	ldr	r3, [r3, #0]
 801cada:	699b      	ldr	r3, [r3, #24]
 801cadc:	613b      	str	r3, [r7, #16]
 801cade:	693b      	ldr	r3, [r7, #16]

    while (hi2c->XferSize > 0U)
 801cae0:	e066      	b.n	801cbb0 <HAL_I2C_Master_Transmit+0x1b4>
    {
      /* Wait until TXE flag is set */
      if (I2C_WaitOnTXEFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 801cae2:	697a      	ldr	r2, [r7, #20]
 801cae4:	6a39      	ldr	r1, [r7, #32]
 801cae6:	68f8      	ldr	r0, [r7, #12]
 801cae8:	f000 fb0c 	bl	801d104 <I2C_WaitOnTXEFlagUntilTimeout>
 801caec:	4603      	mov	r3, r0
 801caee:	2b00      	cmp	r3, #0
 801caf0:	d00d      	beq.n	801cb0e <HAL_I2C_Master_Transmit+0x112>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 801caf2:	68fb      	ldr	r3, [r7, #12]
 801caf4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801caf6:	2b04      	cmp	r3, #4
 801caf8:	d107      	bne.n	801cb0a <HAL_I2C_Master_Transmit+0x10e>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 801cafa:	68fb      	ldr	r3, [r7, #12]
 801cafc:	681b      	ldr	r3, [r3, #0]
 801cafe:	681a      	ldr	r2, [r3, #0]
 801cb00:	68fb      	ldr	r3, [r7, #12]
 801cb02:	681b      	ldr	r3, [r3, #0]
 801cb04:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 801cb08:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 801cb0a:	2301      	movs	r3, #1
 801cb0c:	e06b      	b.n	801cbe6 <HAL_I2C_Master_Transmit+0x1ea>
      }

      /* Write data to DR */
      hi2c->Instance->DR = *hi2c->pBuffPtr;
 801cb0e:	68fb      	ldr	r3, [r7, #12]
 801cb10:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801cb12:	781a      	ldrb	r2, [r3, #0]
 801cb14:	68fb      	ldr	r3, [r7, #12]
 801cb16:	681b      	ldr	r3, [r3, #0]
 801cb18:	611a      	str	r2, [r3, #16]

      /* Increment Buffer pointer */
      hi2c->pBuffPtr++;
 801cb1a:	68fb      	ldr	r3, [r7, #12]
 801cb1c:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801cb1e:	1c5a      	adds	r2, r3, #1
 801cb20:	68fb      	ldr	r3, [r7, #12]
 801cb22:	625a      	str	r2, [r3, #36]	; 0x24

      /* Update counter */
      hi2c->XferCount--;
 801cb24:	68fb      	ldr	r3, [r7, #12]
 801cb26:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 801cb28:	b29b      	uxth	r3, r3
 801cb2a:	3b01      	subs	r3, #1
 801cb2c:	b29a      	uxth	r2, r3
 801cb2e:	68fb      	ldr	r3, [r7, #12]
 801cb30:	855a      	strh	r2, [r3, #42]	; 0x2a
      hi2c->XferSize--;
 801cb32:	68fb      	ldr	r3, [r7, #12]
 801cb34:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 801cb36:	3b01      	subs	r3, #1
 801cb38:	b29a      	uxth	r2, r3
 801cb3a:	68fb      	ldr	r3, [r7, #12]
 801cb3c:	851a      	strh	r2, [r3, #40]	; 0x28

      if ((__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == SET) && (hi2c->XferSize != 0U))
 801cb3e:	68fb      	ldr	r3, [r7, #12]
 801cb40:	681b      	ldr	r3, [r3, #0]
 801cb42:	695b      	ldr	r3, [r3, #20]
 801cb44:	f003 0304 	and.w	r3, r3, #4
 801cb48:	2b04      	cmp	r3, #4
 801cb4a:	d11b      	bne.n	801cb84 <HAL_I2C_Master_Transmit+0x188>
 801cb4c:	68fb      	ldr	r3, [r7, #12]
 801cb4e:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 801cb50:	2b00      	cmp	r3, #0
 801cb52:	d017      	beq.n	801cb84 <HAL_I2C_Master_Transmit+0x188>
      {
        /* Write data to DR */
        hi2c->Instance->DR = *hi2c->pBuffPtr;
 801cb54:	68fb      	ldr	r3, [r7, #12]
 801cb56:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801cb58:	781a      	ldrb	r2, [r3, #0]
 801cb5a:	68fb      	ldr	r3, [r7, #12]
 801cb5c:	681b      	ldr	r3, [r3, #0]
 801cb5e:	611a      	str	r2, [r3, #16]

        /* Increment Buffer pointer */
        hi2c->pBuffPtr++;
 801cb60:	68fb      	ldr	r3, [r7, #12]
 801cb62:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801cb64:	1c5a      	adds	r2, r3, #1
 801cb66:	68fb      	ldr	r3, [r7, #12]
 801cb68:	625a      	str	r2, [r3, #36]	; 0x24

        /* Update counter */
        hi2c->XferCount--;
 801cb6a:	68fb      	ldr	r3, [r7, #12]
 801cb6c:	8d5b      	ldrh	r3, [r3, #42]	; 0x2a
 801cb6e:	b29b      	uxth	r3, r3
 801cb70:	3b01      	subs	r3, #1
 801cb72:	b29a      	uxth	r2, r3
 801cb74:	68fb      	ldr	r3, [r7, #12]
 801cb76:	855a      	strh	r2, [r3, #42]	; 0x2a
        hi2c->XferSize--;
 801cb78:	68fb      	ldr	r3, [r7, #12]
 801cb7a:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 801cb7c:	3b01      	subs	r3, #1
 801cb7e:	b29a      	uxth	r2, r3
 801cb80:	68fb      	ldr	r3, [r7, #12]
 801cb82:	851a      	strh	r2, [r3, #40]	; 0x28
      }

      /* Wait until BTF flag is set */
      if (I2C_WaitOnBTFFlagUntilTimeout(hi2c, Timeout, tickstart) != HAL_OK)
 801cb84:	697a      	ldr	r2, [r7, #20]
 801cb86:	6a39      	ldr	r1, [r7, #32]
 801cb88:	68f8      	ldr	r0, [r7, #12]
 801cb8a:	f000 fafc 	bl	801d186 <I2C_WaitOnBTFFlagUntilTimeout>
 801cb8e:	4603      	mov	r3, r0
 801cb90:	2b00      	cmp	r3, #0
 801cb92:	d00d      	beq.n	801cbb0 <HAL_I2C_Master_Transmit+0x1b4>
      {
        if (hi2c->ErrorCode == HAL_I2C_ERROR_AF)
 801cb94:	68fb      	ldr	r3, [r7, #12]
 801cb96:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801cb98:	2b04      	cmp	r3, #4
 801cb9a:	d107      	bne.n	801cbac <HAL_I2C_Master_Transmit+0x1b0>
        {
          /* Generate Stop */
          SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 801cb9c:	68fb      	ldr	r3, [r7, #12]
 801cb9e:	681b      	ldr	r3, [r3, #0]
 801cba0:	681a      	ldr	r2, [r3, #0]
 801cba2:	68fb      	ldr	r3, [r7, #12]
 801cba4:	681b      	ldr	r3, [r3, #0]
 801cba6:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 801cbaa:	601a      	str	r2, [r3, #0]
        }
        return HAL_ERROR;
 801cbac:	2301      	movs	r3, #1
 801cbae:	e01a      	b.n	801cbe6 <HAL_I2C_Master_Transmit+0x1ea>
    while (hi2c->XferSize > 0U)
 801cbb0:	68fb      	ldr	r3, [r7, #12]
 801cbb2:	8d1b      	ldrh	r3, [r3, #40]	; 0x28
 801cbb4:	2b00      	cmp	r3, #0
 801cbb6:	d194      	bne.n	801cae2 <HAL_I2C_Master_Transmit+0xe6>
      }
    }

    /* Generate Stop */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 801cbb8:	68fb      	ldr	r3, [r7, #12]
 801cbba:	681b      	ldr	r3, [r3, #0]
 801cbbc:	681a      	ldr	r2, [r3, #0]
 801cbbe:	68fb      	ldr	r3, [r7, #12]
 801cbc0:	681b      	ldr	r3, [r3, #0]
 801cbc2:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 801cbc6:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_READY;
 801cbc8:	68fb      	ldr	r3, [r7, #12]
 801cbca:	2220      	movs	r2, #32
 801cbcc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode = HAL_I2C_MODE_NONE;
 801cbd0:	68fb      	ldr	r3, [r7, #12]
 801cbd2:	2200      	movs	r2, #0
 801cbd4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 801cbd8:	68fb      	ldr	r3, [r7, #12]
 801cbda:	2200      	movs	r2, #0
 801cbdc:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_OK;
 801cbe0:	2300      	movs	r3, #0
 801cbe2:	e000      	b.n	801cbe6 <HAL_I2C_Master_Transmit+0x1ea>
  }
  else
  {
    return HAL_BUSY;
 801cbe4:	2302      	movs	r3, #2
  }
}
 801cbe6:	4618      	mov	r0, r3
 801cbe8:	3718      	adds	r7, #24
 801cbea:	46bd      	mov	sp, r7
 801cbec:	bd80      	pop	{r7, pc}
 801cbee:	bf00      	nop
 801cbf0:	00100002 	.word	0x00100002
 801cbf4:	ffff0000 	.word	0xffff0000

0801cbf8 <HAL_I2C_IsDeviceReady>:
  * @param  Trials Number of trials
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_I2C_IsDeviceReady(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Trials, uint32_t Timeout)
{
 801cbf8:	b580      	push	{r7, lr}
 801cbfa:	b08a      	sub	sp, #40	; 0x28
 801cbfc:	af02      	add	r7, sp, #8
 801cbfe:	60f8      	str	r0, [r7, #12]
 801cc00:	607a      	str	r2, [r7, #4]
 801cc02:	603b      	str	r3, [r7, #0]
 801cc04:	460b      	mov	r3, r1
 801cc06:	817b      	strh	r3, [r7, #10]
  /* Get tick */
  uint32_t tickstart = HAL_GetTick();
 801cc08:	f7fe ffcc 	bl	801bba4 <HAL_GetTick>
 801cc0c:	61f8      	str	r0, [r7, #28]
  uint32_t I2C_Trials = 1U;
 801cc0e:	2301      	movs	r3, #1
 801cc10:	61bb      	str	r3, [r7, #24]
  FlagStatus tmp1;
  FlagStatus tmp2;

  if (hi2c->State == HAL_I2C_STATE_READY)
 801cc12:	68fb      	ldr	r3, [r7, #12]
 801cc14:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 801cc18:	b2db      	uxtb	r3, r3
 801cc1a:	2b20      	cmp	r3, #32
 801cc1c:	f040 8111 	bne.w	801ce42 <HAL_I2C_IsDeviceReady+0x24a>
  {
    /* Wait until BUSY flag is reset */
    if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 801cc20:	69fb      	ldr	r3, [r7, #28]
 801cc22:	9300      	str	r3, [sp, #0]
 801cc24:	2319      	movs	r3, #25
 801cc26:	2201      	movs	r2, #1
 801cc28:	4988      	ldr	r1, [pc, #544]	; (801ce4c <HAL_I2C_IsDeviceReady+0x254>)
 801cc2a:	68f8      	ldr	r0, [r7, #12]
 801cc2c:	f000 f994 	bl	801cf58 <I2C_WaitOnFlagUntilTimeout>
 801cc30:	4603      	mov	r3, r0
 801cc32:	2b00      	cmp	r3, #0
 801cc34:	d001      	beq.n	801cc3a <HAL_I2C_IsDeviceReady+0x42>
    {
      return HAL_BUSY;
 801cc36:	2302      	movs	r3, #2
 801cc38:	e104      	b.n	801ce44 <HAL_I2C_IsDeviceReady+0x24c>
    }

    /* Process Locked */
    __HAL_LOCK(hi2c);
 801cc3a:	68fb      	ldr	r3, [r7, #12]
 801cc3c:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 801cc40:	2b01      	cmp	r3, #1
 801cc42:	d101      	bne.n	801cc48 <HAL_I2C_IsDeviceReady+0x50>
 801cc44:	2302      	movs	r3, #2
 801cc46:	e0fd      	b.n	801ce44 <HAL_I2C_IsDeviceReady+0x24c>
 801cc48:	68fb      	ldr	r3, [r7, #12]
 801cc4a:	2201      	movs	r2, #1
 801cc4c:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    /* Check if the I2C is already enabled */
    if ((hi2c->Instance->CR1 & I2C_CR1_PE) != I2C_CR1_PE)
 801cc50:	68fb      	ldr	r3, [r7, #12]
 801cc52:	681b      	ldr	r3, [r3, #0]
 801cc54:	681b      	ldr	r3, [r3, #0]
 801cc56:	f003 0301 	and.w	r3, r3, #1
 801cc5a:	2b01      	cmp	r3, #1
 801cc5c:	d007      	beq.n	801cc6e <HAL_I2C_IsDeviceReady+0x76>
    {
      /* Enable I2C peripheral */
      __HAL_I2C_ENABLE(hi2c);
 801cc5e:	68fb      	ldr	r3, [r7, #12]
 801cc60:	681b      	ldr	r3, [r3, #0]
 801cc62:	681a      	ldr	r2, [r3, #0]
 801cc64:	68fb      	ldr	r3, [r7, #12]
 801cc66:	681b      	ldr	r3, [r3, #0]
 801cc68:	f042 0201 	orr.w	r2, r2, #1
 801cc6c:	601a      	str	r2, [r3, #0]
    }

    /* Disable Pos */
    CLEAR_BIT(hi2c->Instance->CR1, I2C_CR1_POS);
 801cc6e:	68fb      	ldr	r3, [r7, #12]
 801cc70:	681b      	ldr	r3, [r3, #0]
 801cc72:	681a      	ldr	r2, [r3, #0]
 801cc74:	68fb      	ldr	r3, [r7, #12]
 801cc76:	681b      	ldr	r3, [r3, #0]
 801cc78:	f422 6200 	bic.w	r2, r2, #2048	; 0x800
 801cc7c:	601a      	str	r2, [r3, #0]

    hi2c->State = HAL_I2C_STATE_BUSY;
 801cc7e:	68fb      	ldr	r3, [r7, #12]
 801cc80:	2224      	movs	r2, #36	; 0x24
 801cc82:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->ErrorCode = HAL_I2C_ERROR_NONE;
 801cc86:	68fb      	ldr	r3, [r7, #12]
 801cc88:	2200      	movs	r2, #0
 801cc8a:	641a      	str	r2, [r3, #64]	; 0x40
    hi2c->XferOptions = I2C_NO_OPTION_FRAME;
 801cc8c:	68fb      	ldr	r3, [r7, #12]
 801cc8e:	4a70      	ldr	r2, [pc, #448]	; (801ce50 <HAL_I2C_IsDeviceReady+0x258>)
 801cc90:	62da      	str	r2, [r3, #44]	; 0x2c

    do
    {
      /* Generate Start */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 801cc92:	68fb      	ldr	r3, [r7, #12]
 801cc94:	681b      	ldr	r3, [r3, #0]
 801cc96:	681a      	ldr	r2, [r3, #0]
 801cc98:	68fb      	ldr	r3, [r7, #12]
 801cc9a:	681b      	ldr	r3, [r3, #0]
 801cc9c:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 801cca0:	601a      	str	r2, [r3, #0]

      /* Wait until SB flag is set */
      if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, tickstart) != HAL_OK)
 801cca2:	69fb      	ldr	r3, [r7, #28]
 801cca4:	9300      	str	r3, [sp, #0]
 801cca6:	683b      	ldr	r3, [r7, #0]
 801cca8:	2200      	movs	r2, #0
 801ccaa:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 801ccae:	68f8      	ldr	r0, [r7, #12]
 801ccb0:	f000 f952 	bl	801cf58 <I2C_WaitOnFlagUntilTimeout>
 801ccb4:	4603      	mov	r3, r0
 801ccb6:	2b00      	cmp	r3, #0
 801ccb8:	d00d      	beq.n	801ccd6 <HAL_I2C_IsDeviceReady+0xde>
      {
        if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 801ccba:	68fb      	ldr	r3, [r7, #12]
 801ccbc:	681b      	ldr	r3, [r3, #0]
 801ccbe:	681b      	ldr	r3, [r3, #0]
 801ccc0:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801ccc4:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801ccc8:	d103      	bne.n	801ccd2 <HAL_I2C_IsDeviceReady+0xda>
        {
          hi2c->ErrorCode = HAL_I2C_WRONG_START;
 801ccca:	68fb      	ldr	r3, [r7, #12]
 801cccc:	f44f 7200 	mov.w	r2, #512	; 0x200
 801ccd0:	641a      	str	r2, [r3, #64]	; 0x40
        }
        return HAL_TIMEOUT;
 801ccd2:	2303      	movs	r3, #3
 801ccd4:	e0b6      	b.n	801ce44 <HAL_I2C_IsDeviceReady+0x24c>
      }

      /* Send slave address */
      hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 801ccd6:	897b      	ldrh	r3, [r7, #10]
 801ccd8:	b2db      	uxtb	r3, r3
 801ccda:	461a      	mov	r2, r3
 801ccdc:	68fb      	ldr	r3, [r7, #12]
 801ccde:	681b      	ldr	r3, [r3, #0]
 801cce0:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 801cce4:	611a      	str	r2, [r3, #16]

      /* Wait until ADDR or AF flag are set */
      /* Get tick */
      tickstart = HAL_GetTick();
 801cce6:	f7fe ff5d 	bl	801bba4 <HAL_GetTick>
 801ccea:	61f8      	str	r0, [r7, #28]

      tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR);
 801ccec:	68fb      	ldr	r3, [r7, #12]
 801ccee:	681b      	ldr	r3, [r3, #0]
 801ccf0:	695b      	ldr	r3, [r3, #20]
 801ccf2:	f003 0302 	and.w	r3, r3, #2
 801ccf6:	2b02      	cmp	r3, #2
 801ccf8:	bf0c      	ite	eq
 801ccfa:	2301      	moveq	r3, #1
 801ccfc:	2300      	movne	r3, #0
 801ccfe:	b2db      	uxtb	r3, r3
 801cd00:	75fb      	strb	r3, [r7, #23]
      tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 801cd02:	68fb      	ldr	r3, [r7, #12]
 801cd04:	681b      	ldr	r3, [r3, #0]
 801cd06:	695b      	ldr	r3, [r3, #20]
 801cd08:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 801cd0c:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801cd10:	bf0c      	ite	eq
 801cd12:	2301      	moveq	r3, #1
 801cd14:	2300      	movne	r3, #0
 801cd16:	b2db      	uxtb	r3, r3
 801cd18:	75bb      	strb	r3, [r7, #22]
      while ((hi2c->State != HAL_I2C_STATE_TIMEOUT) && (tmp1 == RESET) && (tmp2 == RESET))
 801cd1a:	e025      	b.n	801cd68 <HAL_I2C_IsDeviceReady+0x170>
      {
        if (((HAL_GetTick() - tickstart) > Timeout) || (Timeout == 0U))
 801cd1c:	f7fe ff42 	bl	801bba4 <HAL_GetTick>
 801cd20:	4602      	mov	r2, r0
 801cd22:	69fb      	ldr	r3, [r7, #28]
 801cd24:	1ad3      	subs	r3, r2, r3
 801cd26:	683a      	ldr	r2, [r7, #0]
 801cd28:	429a      	cmp	r2, r3
 801cd2a:	d302      	bcc.n	801cd32 <HAL_I2C_IsDeviceReady+0x13a>
 801cd2c:	683b      	ldr	r3, [r7, #0]
 801cd2e:	2b00      	cmp	r3, #0
 801cd30:	d103      	bne.n	801cd3a <HAL_I2C_IsDeviceReady+0x142>
        {
          hi2c->State = HAL_I2C_STATE_TIMEOUT;
 801cd32:	68fb      	ldr	r3, [r7, #12]
 801cd34:	22a0      	movs	r2, #160	; 0xa0
 801cd36:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        }
        tmp1 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR);
 801cd3a:	68fb      	ldr	r3, [r7, #12]
 801cd3c:	681b      	ldr	r3, [r3, #0]
 801cd3e:	695b      	ldr	r3, [r3, #20]
 801cd40:	f003 0302 	and.w	r3, r3, #2
 801cd44:	2b02      	cmp	r3, #2
 801cd46:	bf0c      	ite	eq
 801cd48:	2301      	moveq	r3, #1
 801cd4a:	2300      	movne	r3, #0
 801cd4c:	b2db      	uxtb	r3, r3
 801cd4e:	75fb      	strb	r3, [r7, #23]
        tmp2 = __HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF);
 801cd50:	68fb      	ldr	r3, [r7, #12]
 801cd52:	681b      	ldr	r3, [r3, #0]
 801cd54:	695b      	ldr	r3, [r3, #20]
 801cd56:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 801cd5a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801cd5e:	bf0c      	ite	eq
 801cd60:	2301      	moveq	r3, #1
 801cd62:	2300      	movne	r3, #0
 801cd64:	b2db      	uxtb	r3, r3
 801cd66:	75bb      	strb	r3, [r7, #22]
      while ((hi2c->State != HAL_I2C_STATE_TIMEOUT) && (tmp1 == RESET) && (tmp2 == RESET))
 801cd68:	68fb      	ldr	r3, [r7, #12]
 801cd6a:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 801cd6e:	b2db      	uxtb	r3, r3
 801cd70:	2ba0      	cmp	r3, #160	; 0xa0
 801cd72:	d005      	beq.n	801cd80 <HAL_I2C_IsDeviceReady+0x188>
 801cd74:	7dfb      	ldrb	r3, [r7, #23]
 801cd76:	2b00      	cmp	r3, #0
 801cd78:	d102      	bne.n	801cd80 <HAL_I2C_IsDeviceReady+0x188>
 801cd7a:	7dbb      	ldrb	r3, [r7, #22]
 801cd7c:	2b00      	cmp	r3, #0
 801cd7e:	d0cd      	beq.n	801cd1c <HAL_I2C_IsDeviceReady+0x124>
      }

      hi2c->State = HAL_I2C_STATE_READY;
 801cd80:	68fb      	ldr	r3, [r7, #12]
 801cd82:	2220      	movs	r2, #32
 801cd84:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

      /* Check if the ADDR flag has been set */
      if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_ADDR) == SET)
 801cd88:	68fb      	ldr	r3, [r7, #12]
 801cd8a:	681b      	ldr	r3, [r3, #0]
 801cd8c:	695b      	ldr	r3, [r3, #20]
 801cd8e:	f003 0302 	and.w	r3, r3, #2
 801cd92:	2b02      	cmp	r3, #2
 801cd94:	d129      	bne.n	801cdea <HAL_I2C_IsDeviceReady+0x1f2>
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 801cd96:	68fb      	ldr	r3, [r7, #12]
 801cd98:	681b      	ldr	r3, [r3, #0]
 801cd9a:	681a      	ldr	r2, [r3, #0]
 801cd9c:	68fb      	ldr	r3, [r7, #12]
 801cd9e:	681b      	ldr	r3, [r3, #0]
 801cda0:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 801cda4:	601a      	str	r2, [r3, #0]

        /* Clear ADDR Flag */
        __HAL_I2C_CLEAR_ADDRFLAG(hi2c);
 801cda6:	2300      	movs	r3, #0
 801cda8:	613b      	str	r3, [r7, #16]
 801cdaa:	68fb      	ldr	r3, [r7, #12]
 801cdac:	681b      	ldr	r3, [r3, #0]
 801cdae:	695b      	ldr	r3, [r3, #20]
 801cdb0:	613b      	str	r3, [r7, #16]
 801cdb2:	68fb      	ldr	r3, [r7, #12]
 801cdb4:	681b      	ldr	r3, [r3, #0]
 801cdb6:	699b      	ldr	r3, [r3, #24]
 801cdb8:	613b      	str	r3, [r7, #16]
 801cdba:	693b      	ldr	r3, [r7, #16]

        /* Wait until BUSY flag is reset */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 801cdbc:	69fb      	ldr	r3, [r7, #28]
 801cdbe:	9300      	str	r3, [sp, #0]
 801cdc0:	2319      	movs	r3, #25
 801cdc2:	2201      	movs	r2, #1
 801cdc4:	4921      	ldr	r1, [pc, #132]	; (801ce4c <HAL_I2C_IsDeviceReady+0x254>)
 801cdc6:	68f8      	ldr	r0, [r7, #12]
 801cdc8:	f000 f8c6 	bl	801cf58 <I2C_WaitOnFlagUntilTimeout>
 801cdcc:	4603      	mov	r3, r0
 801cdce:	2b00      	cmp	r3, #0
 801cdd0:	d001      	beq.n	801cdd6 <HAL_I2C_IsDeviceReady+0x1de>
        {
          return HAL_ERROR;
 801cdd2:	2301      	movs	r3, #1
 801cdd4:	e036      	b.n	801ce44 <HAL_I2C_IsDeviceReady+0x24c>
        }

        hi2c->State = HAL_I2C_STATE_READY;
 801cdd6:	68fb      	ldr	r3, [r7, #12]
 801cdd8:	2220      	movs	r2, #32
 801cdda:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 801cdde:	68fb      	ldr	r3, [r7, #12]
 801cde0:	2200      	movs	r2, #0
 801cde2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_OK;
 801cde6:	2300      	movs	r3, #0
 801cde8:	e02c      	b.n	801ce44 <HAL_I2C_IsDeviceReady+0x24c>
      }
      else
      {
        /* Generate Stop */
        SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 801cdea:	68fb      	ldr	r3, [r7, #12]
 801cdec:	681b      	ldr	r3, [r3, #0]
 801cdee:	681a      	ldr	r2, [r3, #0]
 801cdf0:	68fb      	ldr	r3, [r7, #12]
 801cdf2:	681b      	ldr	r3, [r3, #0]
 801cdf4:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 801cdf8:	601a      	str	r2, [r3, #0]

        /* Clear AF Flag */
        __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 801cdfa:	68fb      	ldr	r3, [r7, #12]
 801cdfc:	681b      	ldr	r3, [r3, #0]
 801cdfe:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 801ce02:	615a      	str	r2, [r3, #20]

        /* Wait until BUSY flag is reset */
        if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_BUSY, SET, I2C_TIMEOUT_BUSY_FLAG, tickstart) != HAL_OK)
 801ce04:	69fb      	ldr	r3, [r7, #28]
 801ce06:	9300      	str	r3, [sp, #0]
 801ce08:	2319      	movs	r3, #25
 801ce0a:	2201      	movs	r2, #1
 801ce0c:	490f      	ldr	r1, [pc, #60]	; (801ce4c <HAL_I2C_IsDeviceReady+0x254>)
 801ce0e:	68f8      	ldr	r0, [r7, #12]
 801ce10:	f000 f8a2 	bl	801cf58 <I2C_WaitOnFlagUntilTimeout>
 801ce14:	4603      	mov	r3, r0
 801ce16:	2b00      	cmp	r3, #0
 801ce18:	d001      	beq.n	801ce1e <HAL_I2C_IsDeviceReady+0x226>
        {
          return HAL_ERROR;
 801ce1a:	2301      	movs	r3, #1
 801ce1c:	e012      	b.n	801ce44 <HAL_I2C_IsDeviceReady+0x24c>
        }
      }

      /* Increment Trials */
      I2C_Trials++;
 801ce1e:	69bb      	ldr	r3, [r7, #24]
 801ce20:	3301      	adds	r3, #1
 801ce22:	61bb      	str	r3, [r7, #24]
    }
    while (I2C_Trials < Trials);
 801ce24:	69ba      	ldr	r2, [r7, #24]
 801ce26:	687b      	ldr	r3, [r7, #4]
 801ce28:	429a      	cmp	r2, r3
 801ce2a:	f4ff af32 	bcc.w	801cc92 <HAL_I2C_IsDeviceReady+0x9a>

    hi2c->State = HAL_I2C_STATE_READY;
 801ce2e:	68fb      	ldr	r3, [r7, #12]
 801ce30:	2220      	movs	r2, #32
 801ce32:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 801ce36:	68fb      	ldr	r3, [r7, #12]
 801ce38:	2200      	movs	r2, #0
 801ce3a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_ERROR;
 801ce3e:	2301      	movs	r3, #1
 801ce40:	e000      	b.n	801ce44 <HAL_I2C_IsDeviceReady+0x24c>
  }
  else
  {
    return HAL_BUSY;
 801ce42:	2302      	movs	r3, #2
  }
}
 801ce44:	4618      	mov	r0, r3
 801ce46:	3720      	adds	r7, #32
 801ce48:	46bd      	mov	sp, r7
 801ce4a:	bd80      	pop	{r7, pc}
 801ce4c:	00100002 	.word	0x00100002
 801ce50:	ffff0000 	.word	0xffff0000

0801ce54 <I2C_MasterRequestWrite>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_MasterRequestWrite(I2C_HandleTypeDef *hi2c, uint16_t DevAddress, uint32_t Timeout, uint32_t Tickstart)
{
 801ce54:	b580      	push	{r7, lr}
 801ce56:	b088      	sub	sp, #32
 801ce58:	af02      	add	r7, sp, #8
 801ce5a:	60f8      	str	r0, [r7, #12]
 801ce5c:	607a      	str	r2, [r7, #4]
 801ce5e:	603b      	str	r3, [r7, #0]
 801ce60:	460b      	mov	r3, r1
 801ce62:	817b      	strh	r3, [r7, #10]
  /* Declaration of temporary variable to prevent undefined behavior of volatile usage */
  uint32_t CurrentXferOptions = hi2c->XferOptions;
 801ce64:	68fb      	ldr	r3, [r7, #12]
 801ce66:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801ce68:	617b      	str	r3, [r7, #20]

  /* Generate Start condition if first transfer */
  if ((CurrentXferOptions == I2C_FIRST_AND_LAST_FRAME) || (CurrentXferOptions == I2C_FIRST_FRAME) || (CurrentXferOptions == I2C_NO_OPTION_FRAME))
 801ce6a:	697b      	ldr	r3, [r7, #20]
 801ce6c:	2b08      	cmp	r3, #8
 801ce6e:	d006      	beq.n	801ce7e <I2C_MasterRequestWrite+0x2a>
 801ce70:	697b      	ldr	r3, [r7, #20]
 801ce72:	2b01      	cmp	r3, #1
 801ce74:	d003      	beq.n	801ce7e <I2C_MasterRequestWrite+0x2a>
 801ce76:	697b      	ldr	r3, [r7, #20]
 801ce78:	f513 3f80 	cmn.w	r3, #65536	; 0x10000
 801ce7c:	d108      	bne.n	801ce90 <I2C_MasterRequestWrite+0x3c>
  {
    /* Generate Start */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 801ce7e:	68fb      	ldr	r3, [r7, #12]
 801ce80:	681b      	ldr	r3, [r3, #0]
 801ce82:	681a      	ldr	r2, [r3, #0]
 801ce84:	68fb      	ldr	r3, [r7, #12]
 801ce86:	681b      	ldr	r3, [r3, #0]
 801ce88:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 801ce8c:	601a      	str	r2, [r3, #0]
 801ce8e:	e00b      	b.n	801cea8 <I2C_MasterRequestWrite+0x54>
  }
  else if (hi2c->PreviousState == I2C_STATE_MASTER_BUSY_RX)
 801ce90:	68fb      	ldr	r3, [r7, #12]
 801ce92:	6b1b      	ldr	r3, [r3, #48]	; 0x30
 801ce94:	2b12      	cmp	r3, #18
 801ce96:	d107      	bne.n	801cea8 <I2C_MasterRequestWrite+0x54>
  {
    /* Generate ReStart */
    SET_BIT(hi2c->Instance->CR1, I2C_CR1_START);
 801ce98:	68fb      	ldr	r3, [r7, #12]
 801ce9a:	681b      	ldr	r3, [r3, #0]
 801ce9c:	681a      	ldr	r2, [r3, #0]
 801ce9e:	68fb      	ldr	r3, [r7, #12]
 801cea0:	681b      	ldr	r3, [r3, #0]
 801cea2:	f442 7280 	orr.w	r2, r2, #256	; 0x100
 801cea6:	601a      	str	r2, [r3, #0]
  {
    /* Do nothing */
  }

  /* Wait until SB flag is set */
  if (I2C_WaitOnFlagUntilTimeout(hi2c, I2C_FLAG_SB, RESET, Timeout, Tickstart) != HAL_OK)
 801cea8:	683b      	ldr	r3, [r7, #0]
 801ceaa:	9300      	str	r3, [sp, #0]
 801ceac:	687b      	ldr	r3, [r7, #4]
 801ceae:	2200      	movs	r2, #0
 801ceb0:	f04f 1101 	mov.w	r1, #65537	; 0x10001
 801ceb4:	68f8      	ldr	r0, [r7, #12]
 801ceb6:	f000 f84f 	bl	801cf58 <I2C_WaitOnFlagUntilTimeout>
 801ceba:	4603      	mov	r3, r0
 801cebc:	2b00      	cmp	r3, #0
 801cebe:	d00d      	beq.n	801cedc <I2C_MasterRequestWrite+0x88>
  {
    if (READ_BIT(hi2c->Instance->CR1, I2C_CR1_START) == I2C_CR1_START)
 801cec0:	68fb      	ldr	r3, [r7, #12]
 801cec2:	681b      	ldr	r3, [r3, #0]
 801cec4:	681b      	ldr	r3, [r3, #0]
 801cec6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801ceca:	f5b3 7f80 	cmp.w	r3, #256	; 0x100
 801cece:	d103      	bne.n	801ced8 <I2C_MasterRequestWrite+0x84>
    {
      hi2c->ErrorCode = HAL_I2C_WRONG_START;
 801ced0:	68fb      	ldr	r3, [r7, #12]
 801ced2:	f44f 7200 	mov.w	r2, #512	; 0x200
 801ced6:	641a      	str	r2, [r3, #64]	; 0x40
    }
    return HAL_TIMEOUT;
 801ced8:	2303      	movs	r3, #3
 801ceda:	e035      	b.n	801cf48 <I2C_MasterRequestWrite+0xf4>
  }

  if (hi2c->Init.AddressingMode == I2C_ADDRESSINGMODE_7BIT)
 801cedc:	68fb      	ldr	r3, [r7, #12]
 801cede:	691b      	ldr	r3, [r3, #16]
 801cee0:	f5b3 4f80 	cmp.w	r3, #16384	; 0x4000
 801cee4:	d108      	bne.n	801cef8 <I2C_MasterRequestWrite+0xa4>
  {
    /* Send slave address */
    hi2c->Instance->DR = I2C_7BIT_ADD_WRITE(DevAddress);
 801cee6:	897b      	ldrh	r3, [r7, #10]
 801cee8:	b2db      	uxtb	r3, r3
 801ceea:	461a      	mov	r2, r3
 801ceec:	68fb      	ldr	r3, [r7, #12]
 801ceee:	681b      	ldr	r3, [r3, #0]
 801cef0:	f002 02fe 	and.w	r2, r2, #254	; 0xfe
 801cef4:	611a      	str	r2, [r3, #16]
 801cef6:	e01b      	b.n	801cf30 <I2C_MasterRequestWrite+0xdc>
  }
  else
  {
    /* Send header of slave address */
    hi2c->Instance->DR = I2C_10BIT_HEADER_WRITE(DevAddress);
 801cef8:	897b      	ldrh	r3, [r7, #10]
 801cefa:	11db      	asrs	r3, r3, #7
 801cefc:	b2db      	uxtb	r3, r3
 801cefe:	f003 0306 	and.w	r3, r3, #6
 801cf02:	b2db      	uxtb	r3, r3
 801cf04:	f063 030f 	orn	r3, r3, #15
 801cf08:	b2da      	uxtb	r2, r3
 801cf0a:	68fb      	ldr	r3, [r7, #12]
 801cf0c:	681b      	ldr	r3, [r3, #0]
 801cf0e:	611a      	str	r2, [r3, #16]

    /* Wait until ADD10 flag is set */
    if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADD10, Timeout, Tickstart) != HAL_OK)
 801cf10:	683b      	ldr	r3, [r7, #0]
 801cf12:	687a      	ldr	r2, [r7, #4]
 801cf14:	490e      	ldr	r1, [pc, #56]	; (801cf50 <I2C_MasterRequestWrite+0xfc>)
 801cf16:	68f8      	ldr	r0, [r7, #12]
 801cf18:	f000 f875 	bl	801d006 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 801cf1c:	4603      	mov	r3, r0
 801cf1e:	2b00      	cmp	r3, #0
 801cf20:	d001      	beq.n	801cf26 <I2C_MasterRequestWrite+0xd2>
    {
      return HAL_ERROR;
 801cf22:	2301      	movs	r3, #1
 801cf24:	e010      	b.n	801cf48 <I2C_MasterRequestWrite+0xf4>
    }

    /* Send slave address */
    hi2c->Instance->DR = I2C_10BIT_ADDRESS(DevAddress);
 801cf26:	897b      	ldrh	r3, [r7, #10]
 801cf28:	b2da      	uxtb	r2, r3
 801cf2a:	68fb      	ldr	r3, [r7, #12]
 801cf2c:	681b      	ldr	r3, [r3, #0]
 801cf2e:	611a      	str	r2, [r3, #16]
  }

  /* Wait until ADDR flag is set */
  if (I2C_WaitOnMasterAddressFlagUntilTimeout(hi2c, I2C_FLAG_ADDR, Timeout, Tickstart) != HAL_OK)
 801cf30:	683b      	ldr	r3, [r7, #0]
 801cf32:	687a      	ldr	r2, [r7, #4]
 801cf34:	4907      	ldr	r1, [pc, #28]	; (801cf54 <I2C_MasterRequestWrite+0x100>)
 801cf36:	68f8      	ldr	r0, [r7, #12]
 801cf38:	f000 f865 	bl	801d006 <I2C_WaitOnMasterAddressFlagUntilTimeout>
 801cf3c:	4603      	mov	r3, r0
 801cf3e:	2b00      	cmp	r3, #0
 801cf40:	d001      	beq.n	801cf46 <I2C_MasterRequestWrite+0xf2>
  {
    return HAL_ERROR;
 801cf42:	2301      	movs	r3, #1
 801cf44:	e000      	b.n	801cf48 <I2C_MasterRequestWrite+0xf4>
  }

  return HAL_OK;
 801cf46:	2300      	movs	r3, #0
}
 801cf48:	4618      	mov	r0, r3
 801cf4a:	3718      	adds	r7, #24
 801cf4c:	46bd      	mov	sp, r7
 801cf4e:	bd80      	pop	{r7, pc}
 801cf50:	00010008 	.word	0x00010008
 801cf54:	00010002 	.word	0x00010002

0801cf58 <I2C_WaitOnFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, FlagStatus Status, uint32_t Timeout, uint32_t Tickstart)
{
 801cf58:	b580      	push	{r7, lr}
 801cf5a:	b084      	sub	sp, #16
 801cf5c:	af00      	add	r7, sp, #0
 801cf5e:	60f8      	str	r0, [r7, #12]
 801cf60:	60b9      	str	r1, [r7, #8]
 801cf62:	603b      	str	r3, [r7, #0]
 801cf64:	4613      	mov	r3, r2
 801cf66:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 801cf68:	e025      	b.n	801cfb6 <I2C_WaitOnFlagUntilTimeout+0x5e>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 801cf6a:	683b      	ldr	r3, [r7, #0]
 801cf6c:	f1b3 3fff 	cmp.w	r3, #4294967295
 801cf70:	d021      	beq.n	801cfb6 <I2C_WaitOnFlagUntilTimeout+0x5e>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 801cf72:	f7fe fe17 	bl	801bba4 <HAL_GetTick>
 801cf76:	4602      	mov	r2, r0
 801cf78:	69bb      	ldr	r3, [r7, #24]
 801cf7a:	1ad3      	subs	r3, r2, r3
 801cf7c:	683a      	ldr	r2, [r7, #0]
 801cf7e:	429a      	cmp	r2, r3
 801cf80:	d302      	bcc.n	801cf88 <I2C_WaitOnFlagUntilTimeout+0x30>
 801cf82:	683b      	ldr	r3, [r7, #0]
 801cf84:	2b00      	cmp	r3, #0
 801cf86:	d116      	bne.n	801cfb6 <I2C_WaitOnFlagUntilTimeout+0x5e>
      {
        hi2c->PreviousState     = I2C_STATE_NONE;
 801cf88:	68fb      	ldr	r3, [r7, #12]
 801cf8a:	2200      	movs	r2, #0
 801cf8c:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State             = HAL_I2C_STATE_READY;
 801cf8e:	68fb      	ldr	r3, [r7, #12]
 801cf90:	2220      	movs	r2, #32
 801cf92:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode              = HAL_I2C_MODE_NONE;
 801cf96:	68fb      	ldr	r3, [r7, #12]
 801cf98:	2200      	movs	r2, #0
 801cf9a:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode         |= HAL_I2C_ERROR_TIMEOUT;
 801cf9e:	68fb      	ldr	r3, [r7, #12]
 801cfa0:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801cfa2:	f043 0220 	orr.w	r2, r3, #32
 801cfa6:	68fb      	ldr	r3, [r7, #12]
 801cfa8:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 801cfaa:	68fb      	ldr	r3, [r7, #12]
 801cfac:	2200      	movs	r2, #0
 801cfae:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 801cfb2:	2301      	movs	r3, #1
 801cfb4:	e023      	b.n	801cffe <I2C_WaitOnFlagUntilTimeout+0xa6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == Status)
 801cfb6:	68bb      	ldr	r3, [r7, #8]
 801cfb8:	0c1b      	lsrs	r3, r3, #16
 801cfba:	b2db      	uxtb	r3, r3
 801cfbc:	2b01      	cmp	r3, #1
 801cfbe:	d10d      	bne.n	801cfdc <I2C_WaitOnFlagUntilTimeout+0x84>
 801cfc0:	68fb      	ldr	r3, [r7, #12]
 801cfc2:	681b      	ldr	r3, [r3, #0]
 801cfc4:	695b      	ldr	r3, [r3, #20]
 801cfc6:	43da      	mvns	r2, r3
 801cfc8:	68bb      	ldr	r3, [r7, #8]
 801cfca:	4013      	ands	r3, r2
 801cfcc:	b29b      	uxth	r3, r3
 801cfce:	2b00      	cmp	r3, #0
 801cfd0:	bf0c      	ite	eq
 801cfd2:	2301      	moveq	r3, #1
 801cfd4:	2300      	movne	r3, #0
 801cfd6:	b2db      	uxtb	r3, r3
 801cfd8:	461a      	mov	r2, r3
 801cfda:	e00c      	b.n	801cff6 <I2C_WaitOnFlagUntilTimeout+0x9e>
 801cfdc:	68fb      	ldr	r3, [r7, #12]
 801cfde:	681b      	ldr	r3, [r3, #0]
 801cfe0:	699b      	ldr	r3, [r3, #24]
 801cfe2:	43da      	mvns	r2, r3
 801cfe4:	68bb      	ldr	r3, [r7, #8]
 801cfe6:	4013      	ands	r3, r2
 801cfe8:	b29b      	uxth	r3, r3
 801cfea:	2b00      	cmp	r3, #0
 801cfec:	bf0c      	ite	eq
 801cfee:	2301      	moveq	r3, #1
 801cff0:	2300      	movne	r3, #0
 801cff2:	b2db      	uxtb	r3, r3
 801cff4:	461a      	mov	r2, r3
 801cff6:	79fb      	ldrb	r3, [r7, #7]
 801cff8:	429a      	cmp	r2, r3
 801cffa:	d0b6      	beq.n	801cf6a <I2C_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 801cffc:	2300      	movs	r3, #0
}
 801cffe:	4618      	mov	r0, r3
 801d000:	3710      	adds	r7, #16
 801d002:	46bd      	mov	sp, r7
 801d004:	bd80      	pop	{r7, pc}

0801d006 <I2C_WaitOnMasterAddressFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnMasterAddressFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Flag, uint32_t Timeout, uint32_t Tickstart)
{
 801d006:	b580      	push	{r7, lr}
 801d008:	b084      	sub	sp, #16
 801d00a:	af00      	add	r7, sp, #0
 801d00c:	60f8      	str	r0, [r7, #12]
 801d00e:	60b9      	str	r1, [r7, #8]
 801d010:	607a      	str	r2, [r7, #4]
 801d012:	603b      	str	r3, [r7, #0]
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 801d014:	e051      	b.n	801d0ba <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
  {
    if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 801d016:	68fb      	ldr	r3, [r7, #12]
 801d018:	681b      	ldr	r3, [r3, #0]
 801d01a:	695b      	ldr	r3, [r3, #20]
 801d01c:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 801d020:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d024:	d123      	bne.n	801d06e <I2C_WaitOnMasterAddressFlagUntilTimeout+0x68>
    {
      /* Generate Stop */
      SET_BIT(hi2c->Instance->CR1, I2C_CR1_STOP);
 801d026:	68fb      	ldr	r3, [r7, #12]
 801d028:	681b      	ldr	r3, [r3, #0]
 801d02a:	681a      	ldr	r2, [r3, #0]
 801d02c:	68fb      	ldr	r3, [r7, #12]
 801d02e:	681b      	ldr	r3, [r3, #0]
 801d030:	f442 7200 	orr.w	r2, r2, #512	; 0x200
 801d034:	601a      	str	r2, [r3, #0]

      /* Clear AF Flag */
      __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 801d036:	68fb      	ldr	r3, [r7, #12]
 801d038:	681b      	ldr	r3, [r3, #0]
 801d03a:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 801d03e:	615a      	str	r2, [r3, #20]

      hi2c->PreviousState       = I2C_STATE_NONE;
 801d040:	68fb      	ldr	r3, [r7, #12]
 801d042:	2200      	movs	r2, #0
 801d044:	631a      	str	r2, [r3, #48]	; 0x30
      hi2c->State               = HAL_I2C_STATE_READY;
 801d046:	68fb      	ldr	r3, [r7, #12]
 801d048:	2220      	movs	r2, #32
 801d04a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
      hi2c->Mode                = HAL_I2C_MODE_NONE;
 801d04e:	68fb      	ldr	r3, [r7, #12]
 801d050:	2200      	movs	r2, #0
 801d052:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
      hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 801d056:	68fb      	ldr	r3, [r7, #12]
 801d058:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801d05a:	f043 0204 	orr.w	r2, r3, #4
 801d05e:	68fb      	ldr	r3, [r7, #12]
 801d060:	641a      	str	r2, [r3, #64]	; 0x40

      /* Process Unlocked */
      __HAL_UNLOCK(hi2c);
 801d062:	68fb      	ldr	r3, [r7, #12]
 801d064:	2200      	movs	r2, #0
 801d066:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

      return HAL_ERROR;
 801d06a:	2301      	movs	r3, #1
 801d06c:	e046      	b.n	801d0fc <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 801d06e:	687b      	ldr	r3, [r7, #4]
 801d070:	f1b3 3fff 	cmp.w	r3, #4294967295
 801d074:	d021      	beq.n	801d0ba <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 801d076:	f7fe fd95 	bl	801bba4 <HAL_GetTick>
 801d07a:	4602      	mov	r2, r0
 801d07c:	683b      	ldr	r3, [r7, #0]
 801d07e:	1ad3      	subs	r3, r2, r3
 801d080:	687a      	ldr	r2, [r7, #4]
 801d082:	429a      	cmp	r2, r3
 801d084:	d302      	bcc.n	801d08c <I2C_WaitOnMasterAddressFlagUntilTimeout+0x86>
 801d086:	687b      	ldr	r3, [r7, #4]
 801d088:	2b00      	cmp	r3, #0
 801d08a:	d116      	bne.n	801d0ba <I2C_WaitOnMasterAddressFlagUntilTimeout+0xb4>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 801d08c:	68fb      	ldr	r3, [r7, #12]
 801d08e:	2200      	movs	r2, #0
 801d090:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 801d092:	68fb      	ldr	r3, [r7, #12]
 801d094:	2220      	movs	r2, #32
 801d096:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 801d09a:	68fb      	ldr	r3, [r7, #12]
 801d09c:	2200      	movs	r2, #0
 801d09e:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 801d0a2:	68fb      	ldr	r3, [r7, #12]
 801d0a4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801d0a6:	f043 0220 	orr.w	r2, r3, #32
 801d0aa:	68fb      	ldr	r3, [r7, #12]
 801d0ac:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 801d0ae:	68fb      	ldr	r3, [r7, #12]
 801d0b0:	2200      	movs	r2, #0
 801d0b2:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 801d0b6:	2301      	movs	r3, #1
 801d0b8:	e020      	b.n	801d0fc <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf6>
  while (__HAL_I2C_GET_FLAG(hi2c, Flag) == RESET)
 801d0ba:	68bb      	ldr	r3, [r7, #8]
 801d0bc:	0c1b      	lsrs	r3, r3, #16
 801d0be:	b2db      	uxtb	r3, r3
 801d0c0:	2b01      	cmp	r3, #1
 801d0c2:	d10c      	bne.n	801d0de <I2C_WaitOnMasterAddressFlagUntilTimeout+0xd8>
 801d0c4:	68fb      	ldr	r3, [r7, #12]
 801d0c6:	681b      	ldr	r3, [r3, #0]
 801d0c8:	695b      	ldr	r3, [r3, #20]
 801d0ca:	43da      	mvns	r2, r3
 801d0cc:	68bb      	ldr	r3, [r7, #8]
 801d0ce:	4013      	ands	r3, r2
 801d0d0:	b29b      	uxth	r3, r3
 801d0d2:	2b00      	cmp	r3, #0
 801d0d4:	bf14      	ite	ne
 801d0d6:	2301      	movne	r3, #1
 801d0d8:	2300      	moveq	r3, #0
 801d0da:	b2db      	uxtb	r3, r3
 801d0dc:	e00b      	b.n	801d0f6 <I2C_WaitOnMasterAddressFlagUntilTimeout+0xf0>
 801d0de:	68fb      	ldr	r3, [r7, #12]
 801d0e0:	681b      	ldr	r3, [r3, #0]
 801d0e2:	699b      	ldr	r3, [r3, #24]
 801d0e4:	43da      	mvns	r2, r3
 801d0e6:	68bb      	ldr	r3, [r7, #8]
 801d0e8:	4013      	ands	r3, r2
 801d0ea:	b29b      	uxth	r3, r3
 801d0ec:	2b00      	cmp	r3, #0
 801d0ee:	bf14      	ite	ne
 801d0f0:	2301      	movne	r3, #1
 801d0f2:	2300      	moveq	r3, #0
 801d0f4:	b2db      	uxtb	r3, r3
 801d0f6:	2b00      	cmp	r3, #0
 801d0f8:	d18d      	bne.n	801d016 <I2C_WaitOnMasterAddressFlagUntilTimeout+0x10>
      }
    }
  }
  return HAL_OK;
 801d0fa:	2300      	movs	r3, #0
}
 801d0fc:	4618      	mov	r0, r3
 801d0fe:	3710      	adds	r7, #16
 801d100:	46bd      	mov	sp, r7
 801d102:	bd80      	pop	{r7, pc}

0801d104 <I2C_WaitOnTXEFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnTXEFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 801d104:	b580      	push	{r7, lr}
 801d106:	b084      	sub	sp, #16
 801d108:	af00      	add	r7, sp, #0
 801d10a:	60f8      	str	r0, [r7, #12]
 801d10c:	60b9      	str	r1, [r7, #8]
 801d10e:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 801d110:	e02d      	b.n	801d16e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 801d112:	68f8      	ldr	r0, [r7, #12]
 801d114:	f000 f878 	bl	801d208 <I2C_IsAcknowledgeFailed>
 801d118:	4603      	mov	r3, r0
 801d11a:	2b00      	cmp	r3, #0
 801d11c:	d001      	beq.n	801d122 <I2C_WaitOnTXEFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 801d11e:	2301      	movs	r3, #1
 801d120:	e02d      	b.n	801d17e <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 801d122:	68bb      	ldr	r3, [r7, #8]
 801d124:	f1b3 3fff 	cmp.w	r3, #4294967295
 801d128:	d021      	beq.n	801d16e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 801d12a:	f7fe fd3b 	bl	801bba4 <HAL_GetTick>
 801d12e:	4602      	mov	r2, r0
 801d130:	687b      	ldr	r3, [r7, #4]
 801d132:	1ad3      	subs	r3, r2, r3
 801d134:	68ba      	ldr	r2, [r7, #8]
 801d136:	429a      	cmp	r2, r3
 801d138:	d302      	bcc.n	801d140 <I2C_WaitOnTXEFlagUntilTimeout+0x3c>
 801d13a:	68bb      	ldr	r3, [r7, #8]
 801d13c:	2b00      	cmp	r3, #0
 801d13e:	d116      	bne.n	801d16e <I2C_WaitOnTXEFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 801d140:	68fb      	ldr	r3, [r7, #12]
 801d142:	2200      	movs	r2, #0
 801d144:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 801d146:	68fb      	ldr	r3, [r7, #12]
 801d148:	2220      	movs	r2, #32
 801d14a:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 801d14e:	68fb      	ldr	r3, [r7, #12]
 801d150:	2200      	movs	r2, #0
 801d152:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 801d156:	68fb      	ldr	r3, [r7, #12]
 801d158:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801d15a:	f043 0220 	orr.w	r2, r3, #32
 801d15e:	68fb      	ldr	r3, [r7, #12]
 801d160:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 801d162:	68fb      	ldr	r3, [r7, #12]
 801d164:	2200      	movs	r2, #0
 801d166:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 801d16a:	2301      	movs	r3, #1
 801d16c:	e007      	b.n	801d17e <I2C_WaitOnTXEFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_TXE) == RESET)
 801d16e:	68fb      	ldr	r3, [r7, #12]
 801d170:	681b      	ldr	r3, [r3, #0]
 801d172:	695b      	ldr	r3, [r3, #20]
 801d174:	f003 0380 	and.w	r3, r3, #128	; 0x80
 801d178:	2b80      	cmp	r3, #128	; 0x80
 801d17a:	d1ca      	bne.n	801d112 <I2C_WaitOnTXEFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 801d17c:	2300      	movs	r3, #0
}
 801d17e:	4618      	mov	r0, r3
 801d180:	3710      	adds	r7, #16
 801d182:	46bd      	mov	sp, r7
 801d184:	bd80      	pop	{r7, pc}

0801d186 <I2C_WaitOnBTFFlagUntilTimeout>:
  * @param  Timeout Timeout duration
  * @param  Tickstart Tick start value
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_WaitOnBTFFlagUntilTimeout(I2C_HandleTypeDef *hi2c, uint32_t Timeout, uint32_t Tickstart)
{
 801d186:	b580      	push	{r7, lr}
 801d188:	b084      	sub	sp, #16
 801d18a:	af00      	add	r7, sp, #0
 801d18c:	60f8      	str	r0, [r7, #12]
 801d18e:	60b9      	str	r1, [r7, #8]
 801d190:	607a      	str	r2, [r7, #4]
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 801d192:	e02d      	b.n	801d1f0 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
  {
    /* Check if a NACK is detected */
    if (I2C_IsAcknowledgeFailed(hi2c) != HAL_OK)
 801d194:	68f8      	ldr	r0, [r7, #12]
 801d196:	f000 f837 	bl	801d208 <I2C_IsAcknowledgeFailed>
 801d19a:	4603      	mov	r3, r0
 801d19c:	2b00      	cmp	r3, #0
 801d19e:	d001      	beq.n	801d1a4 <I2C_WaitOnBTFFlagUntilTimeout+0x1e>
    {
      return HAL_ERROR;
 801d1a0:	2301      	movs	r3, #1
 801d1a2:	e02d      	b.n	801d200 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
    }

    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 801d1a4:	68bb      	ldr	r3, [r7, #8]
 801d1a6:	f1b3 3fff 	cmp.w	r3, #4294967295
 801d1aa:	d021      	beq.n	801d1f0 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
    {
      if (((HAL_GetTick() - Tickstart) > Timeout) || (Timeout == 0U))
 801d1ac:	f7fe fcfa 	bl	801bba4 <HAL_GetTick>
 801d1b0:	4602      	mov	r2, r0
 801d1b2:	687b      	ldr	r3, [r7, #4]
 801d1b4:	1ad3      	subs	r3, r2, r3
 801d1b6:	68ba      	ldr	r2, [r7, #8]
 801d1b8:	429a      	cmp	r2, r3
 801d1ba:	d302      	bcc.n	801d1c2 <I2C_WaitOnBTFFlagUntilTimeout+0x3c>
 801d1bc:	68bb      	ldr	r3, [r7, #8]
 801d1be:	2b00      	cmp	r3, #0
 801d1c0:	d116      	bne.n	801d1f0 <I2C_WaitOnBTFFlagUntilTimeout+0x6a>
      {
        hi2c->PreviousState       = I2C_STATE_NONE;
 801d1c2:	68fb      	ldr	r3, [r7, #12]
 801d1c4:	2200      	movs	r2, #0
 801d1c6:	631a      	str	r2, [r3, #48]	; 0x30
        hi2c->State               = HAL_I2C_STATE_READY;
 801d1c8:	68fb      	ldr	r3, [r7, #12]
 801d1ca:	2220      	movs	r2, #32
 801d1cc:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
        hi2c->Mode                = HAL_I2C_MODE_NONE;
 801d1d0:	68fb      	ldr	r3, [r7, #12]
 801d1d2:	2200      	movs	r2, #0
 801d1d4:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
        hi2c->ErrorCode           |= HAL_I2C_ERROR_TIMEOUT;
 801d1d8:	68fb      	ldr	r3, [r7, #12]
 801d1da:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801d1dc:	f043 0220 	orr.w	r2, r3, #32
 801d1e0:	68fb      	ldr	r3, [r7, #12]
 801d1e2:	641a      	str	r2, [r3, #64]	; 0x40

        /* Process Unlocked */
        __HAL_UNLOCK(hi2c);
 801d1e4:	68fb      	ldr	r3, [r7, #12]
 801d1e6:	2200      	movs	r2, #0
 801d1e8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

        return HAL_ERROR;
 801d1ec:	2301      	movs	r3, #1
 801d1ee:	e007      	b.n	801d200 <I2C_WaitOnBTFFlagUntilTimeout+0x7a>
  while (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_BTF) == RESET)
 801d1f0:	68fb      	ldr	r3, [r7, #12]
 801d1f2:	681b      	ldr	r3, [r3, #0]
 801d1f4:	695b      	ldr	r3, [r3, #20]
 801d1f6:	f003 0304 	and.w	r3, r3, #4
 801d1fa:	2b04      	cmp	r3, #4
 801d1fc:	d1ca      	bne.n	801d194 <I2C_WaitOnBTFFlagUntilTimeout+0xe>
      }
    }
  }
  return HAL_OK;
 801d1fe:	2300      	movs	r3, #0
}
 801d200:	4618      	mov	r0, r3
 801d202:	3710      	adds	r7, #16
 801d204:	46bd      	mov	sp, r7
 801d206:	bd80      	pop	{r7, pc}

0801d208 <I2C_IsAcknowledgeFailed>:
  * @param  hi2c Pointer to a I2C_HandleTypeDef structure that contains
  *                the configuration information for the specified I2C.
  * @retval HAL status
  */
static HAL_StatusTypeDef I2C_IsAcknowledgeFailed(I2C_HandleTypeDef *hi2c)
{
 801d208:	b480      	push	{r7}
 801d20a:	b083      	sub	sp, #12
 801d20c:	af00      	add	r7, sp, #0
 801d20e:	6078      	str	r0, [r7, #4]
  if (__HAL_I2C_GET_FLAG(hi2c, I2C_FLAG_AF) == SET)
 801d210:	687b      	ldr	r3, [r7, #4]
 801d212:	681b      	ldr	r3, [r3, #0]
 801d214:	695b      	ldr	r3, [r3, #20]
 801d216:	f403 6380 	and.w	r3, r3, #1024	; 0x400
 801d21a:	f5b3 6f80 	cmp.w	r3, #1024	; 0x400
 801d21e:	d11b      	bne.n	801d258 <I2C_IsAcknowledgeFailed+0x50>
  {
    /* Clear NACKF Flag */
    __HAL_I2C_CLEAR_FLAG(hi2c, I2C_FLAG_AF);
 801d220:	687b      	ldr	r3, [r7, #4]
 801d222:	681b      	ldr	r3, [r3, #0]
 801d224:	f46f 6280 	mvn.w	r2, #1024	; 0x400
 801d228:	615a      	str	r2, [r3, #20]

    hi2c->PreviousState       = I2C_STATE_NONE;
 801d22a:	687b      	ldr	r3, [r7, #4]
 801d22c:	2200      	movs	r2, #0
 801d22e:	631a      	str	r2, [r3, #48]	; 0x30
    hi2c->State               = HAL_I2C_STATE_READY;
 801d230:	687b      	ldr	r3, [r7, #4]
 801d232:	2220      	movs	r2, #32
 801d234:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d
    hi2c->Mode                = HAL_I2C_MODE_NONE;
 801d238:	687b      	ldr	r3, [r7, #4]
 801d23a:	2200      	movs	r2, #0
 801d23c:	f883 203e 	strb.w	r2, [r3, #62]	; 0x3e
    hi2c->ErrorCode           |= HAL_I2C_ERROR_AF;
 801d240:	687b      	ldr	r3, [r7, #4]
 801d242:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801d244:	f043 0204 	orr.w	r2, r3, #4
 801d248:	687b      	ldr	r3, [r7, #4]
 801d24a:	641a      	str	r2, [r3, #64]	; 0x40

    /* Process Unlocked */
    __HAL_UNLOCK(hi2c);
 801d24c:	687b      	ldr	r3, [r7, #4]
 801d24e:	2200      	movs	r2, #0
 801d250:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

    return HAL_ERROR;
 801d254:	2301      	movs	r3, #1
 801d256:	e000      	b.n	801d25a <I2C_IsAcknowledgeFailed+0x52>
  }
  return HAL_OK;
 801d258:	2300      	movs	r3, #0
}
 801d25a:	4618      	mov	r0, r3
 801d25c:	370c      	adds	r7, #12
 801d25e:	46bd      	mov	sp, r7
 801d260:	f85d 7b04 	ldr.w	r7, [sp], #4
 801d264:	4770      	bx	lr
	...

0801d268 <HAL_RCC_OscConfig>:
  *         supported by this API. User should request a transition to HSE Off
  *         first and then HSE On or HSE Bypass.
  * @retval HAL status
  */
__weak HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
{
 801d268:	b580      	push	{r7, lr}
 801d26a:	b086      	sub	sp, #24
 801d26c:	af00      	add	r7, sp, #0
 801d26e:	6078      	str	r0, [r7, #4]
  uint32_t tickstart, pll_config;

  /* Check Null pointer */
  if(RCC_OscInitStruct == NULL)
 801d270:	687b      	ldr	r3, [r7, #4]
 801d272:	2b00      	cmp	r3, #0
 801d274:	d101      	bne.n	801d27a <HAL_RCC_OscConfig+0x12>
  {
    return HAL_ERROR;
 801d276:	2301      	movs	r3, #1
 801d278:	e25b      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
  }

  /* Check the parameters */
  assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
  /*------------------------------- HSE Configuration ------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 801d27a:	687b      	ldr	r3, [r7, #4]
 801d27c:	681b      	ldr	r3, [r3, #0]
 801d27e:	f003 0301 	and.w	r3, r3, #1
 801d282:	2b00      	cmp	r3, #0
 801d284:	d075      	beq.n	801d372 <HAL_RCC_OscConfig+0x10a>
  {
    /* Check the parameters */
    assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
    /* When the HSE is used as system clock or clock source for PLL in these cases HSE will not disabled */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 801d286:	4ba3      	ldr	r3, [pc, #652]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d288:	689b      	ldr	r3, [r3, #8]
 801d28a:	f003 030c 	and.w	r3, r3, #12
 801d28e:	2b04      	cmp	r3, #4
 801d290:	d00c      	beq.n	801d2ac <HAL_RCC_OscConfig+0x44>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 801d292:	4ba0      	ldr	r3, [pc, #640]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d294:	689b      	ldr	r3, [r3, #8]
 801d296:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSE) ||\
 801d29a:	2b08      	cmp	r3, #8
 801d29c:	d112      	bne.n	801d2c4 <HAL_RCC_OscConfig+0x5c>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSE)))
 801d29e:	4b9d      	ldr	r3, [pc, #628]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d2a0:	685b      	ldr	r3, [r3, #4]
 801d2a2:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 801d2a6:	f5b3 0f80 	cmp.w	r3, #4194304	; 0x400000
 801d2aa:	d10b      	bne.n	801d2c4 <HAL_RCC_OscConfig+0x5c>
    {
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 801d2ac:	4b99      	ldr	r3, [pc, #612]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d2ae:	681b      	ldr	r3, [r3, #0]
 801d2b0:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801d2b4:	2b00      	cmp	r3, #0
 801d2b6:	d05b      	beq.n	801d370 <HAL_RCC_OscConfig+0x108>
 801d2b8:	687b      	ldr	r3, [r7, #4]
 801d2ba:	685b      	ldr	r3, [r3, #4]
 801d2bc:	2b00      	cmp	r3, #0
 801d2be:	d157      	bne.n	801d370 <HAL_RCC_OscConfig+0x108>
      {
        return HAL_ERROR;
 801d2c0:	2301      	movs	r3, #1
 801d2c2:	e236      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
      }
    }
    else
    {
      /* Set the new HSE configuration ---------------------------------------*/
      __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 801d2c4:	687b      	ldr	r3, [r7, #4]
 801d2c6:	685b      	ldr	r3, [r3, #4]
 801d2c8:	f5b3 3f80 	cmp.w	r3, #65536	; 0x10000
 801d2cc:	d106      	bne.n	801d2dc <HAL_RCC_OscConfig+0x74>
 801d2ce:	4b91      	ldr	r3, [pc, #580]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d2d0:	681b      	ldr	r3, [r3, #0]
 801d2d2:	4a90      	ldr	r2, [pc, #576]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d2d4:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 801d2d8:	6013      	str	r3, [r2, #0]
 801d2da:	e01d      	b.n	801d318 <HAL_RCC_OscConfig+0xb0>
 801d2dc:	687b      	ldr	r3, [r7, #4]
 801d2de:	685b      	ldr	r3, [r3, #4]
 801d2e0:	f5b3 2fa0 	cmp.w	r3, #327680	; 0x50000
 801d2e4:	d10c      	bne.n	801d300 <HAL_RCC_OscConfig+0x98>
 801d2e6:	4b8b      	ldr	r3, [pc, #556]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d2e8:	681b      	ldr	r3, [r3, #0]
 801d2ea:	4a8a      	ldr	r2, [pc, #552]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d2ec:	f443 2380 	orr.w	r3, r3, #262144	; 0x40000
 801d2f0:	6013      	str	r3, [r2, #0]
 801d2f2:	4b88      	ldr	r3, [pc, #544]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d2f4:	681b      	ldr	r3, [r3, #0]
 801d2f6:	4a87      	ldr	r2, [pc, #540]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d2f8:	f443 3380 	orr.w	r3, r3, #65536	; 0x10000
 801d2fc:	6013      	str	r3, [r2, #0]
 801d2fe:	e00b      	b.n	801d318 <HAL_RCC_OscConfig+0xb0>
 801d300:	4b84      	ldr	r3, [pc, #528]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d302:	681b      	ldr	r3, [r3, #0]
 801d304:	4a83      	ldr	r2, [pc, #524]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d306:	f423 3380 	bic.w	r3, r3, #65536	; 0x10000
 801d30a:	6013      	str	r3, [r2, #0]
 801d30c:	4b81      	ldr	r3, [pc, #516]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d30e:	681b      	ldr	r3, [r3, #0]
 801d310:	4a80      	ldr	r2, [pc, #512]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d312:	f423 2380 	bic.w	r3, r3, #262144	; 0x40000
 801d316:	6013      	str	r3, [r2, #0]

      /* Check the HSE State */
      if((RCC_OscInitStruct->HSEState) != RCC_HSE_OFF)
 801d318:	687b      	ldr	r3, [r7, #4]
 801d31a:	685b      	ldr	r3, [r3, #4]
 801d31c:	2b00      	cmp	r3, #0
 801d31e:	d013      	beq.n	801d348 <HAL_RCC_OscConfig+0xe0>
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 801d320:	f7fe fc40 	bl	801bba4 <HAL_GetTick>
 801d324:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 801d326:	e008      	b.n	801d33a <HAL_RCC_OscConfig+0xd2>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 801d328:	f7fe fc3c 	bl	801bba4 <HAL_GetTick>
 801d32c:	4602      	mov	r2, r0
 801d32e:	693b      	ldr	r3, [r7, #16]
 801d330:	1ad3      	subs	r3, r2, r3
 801d332:	2b64      	cmp	r3, #100	; 0x64
 801d334:	d901      	bls.n	801d33a <HAL_RCC_OscConfig+0xd2>
          {
            return HAL_TIMEOUT;
 801d336:	2303      	movs	r3, #3
 801d338:	e1fb      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 801d33a:	4b76      	ldr	r3, [pc, #472]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d33c:	681b      	ldr	r3, [r3, #0]
 801d33e:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801d342:	2b00      	cmp	r3, #0
 801d344:	d0f0      	beq.n	801d328 <HAL_RCC_OscConfig+0xc0>
 801d346:	e014      	b.n	801d372 <HAL_RCC_OscConfig+0x10a>
        }
      }
      else
      {
        /* Get Start Tick */
        tickstart = HAL_GetTick();
 801d348:	f7fe fc2c 	bl	801bba4 <HAL_GetTick>
 801d34c:	6138      	str	r0, [r7, #16]

        /* Wait till HSE is bypassed or disabled */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 801d34e:	e008      	b.n	801d362 <HAL_RCC_OscConfig+0xfa>
        {
          if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 801d350:	f7fe fc28 	bl	801bba4 <HAL_GetTick>
 801d354:	4602      	mov	r2, r0
 801d356:	693b      	ldr	r3, [r7, #16]
 801d358:	1ad3      	subs	r3, r2, r3
 801d35a:	2b64      	cmp	r3, #100	; 0x64
 801d35c:	d901      	bls.n	801d362 <HAL_RCC_OscConfig+0xfa>
          {
            return HAL_TIMEOUT;
 801d35e:	2303      	movs	r3, #3
 801d360:	e1e7      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 801d362:	4b6c      	ldr	r3, [pc, #432]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d364:	681b      	ldr	r3, [r3, #0]
 801d366:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801d36a:	2b00      	cmp	r3, #0
 801d36c:	d1f0      	bne.n	801d350 <HAL_RCC_OscConfig+0xe8>
 801d36e:	e000      	b.n	801d372 <HAL_RCC_OscConfig+0x10a>
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_OFF))
 801d370:	bf00      	nop
        }
      }
    }
  }
  /*----------------------------- HSI Configuration --------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 801d372:	687b      	ldr	r3, [r7, #4]
 801d374:	681b      	ldr	r3, [r3, #0]
 801d376:	f003 0302 	and.w	r3, r3, #2
 801d37a:	2b00      	cmp	r3, #0
 801d37c:	d063      	beq.n	801d446 <HAL_RCC_OscConfig+0x1de>
    /* Check the parameters */
    assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
    assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));

    /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock */
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 801d37e:	4b65      	ldr	r3, [pc, #404]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d380:	689b      	ldr	r3, [r3, #8]
 801d382:	f003 030c 	and.w	r3, r3, #12
 801d386:	2b00      	cmp	r3, #0
 801d388:	d00b      	beq.n	801d3a2 <HAL_RCC_OscConfig+0x13a>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 801d38a:	4b62      	ldr	r3, [pc, #392]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d38c:	689b      	ldr	r3, [r3, #8]
 801d38e:	f003 030c 	and.w	r3, r3, #12
    if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_HSI) ||\
 801d392:	2b08      	cmp	r3, #8
 801d394:	d11c      	bne.n	801d3d0 <HAL_RCC_OscConfig+0x168>
      ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_CFGR_SWS_PLL) && ((RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC) == RCC_PLLCFGR_PLLSRC_HSI)))
 801d396:	4b5f      	ldr	r3, [pc, #380]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d398:	685b      	ldr	r3, [r3, #4]
 801d39a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 801d39e:	2b00      	cmp	r3, #0
 801d3a0:	d116      	bne.n	801d3d0 <HAL_RCC_OscConfig+0x168>
    {
      /* When HSI is used as system clock it will not disabled */
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 801d3a2:	4b5c      	ldr	r3, [pc, #368]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d3a4:	681b      	ldr	r3, [r3, #0]
 801d3a6:	f003 0302 	and.w	r3, r3, #2
 801d3aa:	2b00      	cmp	r3, #0
 801d3ac:	d005      	beq.n	801d3ba <HAL_RCC_OscConfig+0x152>
 801d3ae:	687b      	ldr	r3, [r7, #4]
 801d3b0:	68db      	ldr	r3, [r3, #12]
 801d3b2:	2b01      	cmp	r3, #1
 801d3b4:	d001      	beq.n	801d3ba <HAL_RCC_OscConfig+0x152>
      {
        return HAL_ERROR;
 801d3b6:	2301      	movs	r3, #1
 801d3b8:	e1bb      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
      }
      /* Otherwise, just the calibration is allowed */
      else
      {
        /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 801d3ba:	4b56      	ldr	r3, [pc, #344]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d3bc:	681b      	ldr	r3, [r3, #0]
 801d3be:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 801d3c2:	687b      	ldr	r3, [r7, #4]
 801d3c4:	691b      	ldr	r3, [r3, #16]
 801d3c6:	00db      	lsls	r3, r3, #3
 801d3c8:	4952      	ldr	r1, [pc, #328]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d3ca:	4313      	orrs	r3, r2
 801d3cc:	600b      	str	r3, [r1, #0]
      if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_ON))
 801d3ce:	e03a      	b.n	801d446 <HAL_RCC_OscConfig+0x1de>
      }
    }
    else
    {
      /* Check the HSI State */
      if((RCC_OscInitStruct->HSIState)!= RCC_HSI_OFF)
 801d3d0:	687b      	ldr	r3, [r7, #4]
 801d3d2:	68db      	ldr	r3, [r3, #12]
 801d3d4:	2b00      	cmp	r3, #0
 801d3d6:	d020      	beq.n	801d41a <HAL_RCC_OscConfig+0x1b2>
      {
        /* Enable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_ENABLE();
 801d3d8:	4b4f      	ldr	r3, [pc, #316]	; (801d518 <HAL_RCC_OscConfig+0x2b0>)
 801d3da:	2201      	movs	r2, #1
 801d3dc:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 801d3de:	f7fe fbe1 	bl	801bba4 <HAL_GetTick>
 801d3e2:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 801d3e4:	e008      	b.n	801d3f8 <HAL_RCC_OscConfig+0x190>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 801d3e6:	f7fe fbdd 	bl	801bba4 <HAL_GetTick>
 801d3ea:	4602      	mov	r2, r0
 801d3ec:	693b      	ldr	r3, [r7, #16]
 801d3ee:	1ad3      	subs	r3, r2, r3
 801d3f0:	2b02      	cmp	r3, #2
 801d3f2:	d901      	bls.n	801d3f8 <HAL_RCC_OscConfig+0x190>
          {
            return HAL_TIMEOUT;
 801d3f4:	2303      	movs	r3, #3
 801d3f6:	e19c      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 801d3f8:	4b46      	ldr	r3, [pc, #280]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d3fa:	681b      	ldr	r3, [r3, #0]
 801d3fc:	f003 0302 	and.w	r3, r3, #2
 801d400:	2b00      	cmp	r3, #0
 801d402:	d0f0      	beq.n	801d3e6 <HAL_RCC_OscConfig+0x17e>
          }
        }

        /* Adjusts the Internal High Speed oscillator (HSI) calibration value. */
        __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 801d404:	4b43      	ldr	r3, [pc, #268]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d406:	681b      	ldr	r3, [r3, #0]
 801d408:	f023 02f8 	bic.w	r2, r3, #248	; 0xf8
 801d40c:	687b      	ldr	r3, [r7, #4]
 801d40e:	691b      	ldr	r3, [r3, #16]
 801d410:	00db      	lsls	r3, r3, #3
 801d412:	4940      	ldr	r1, [pc, #256]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d414:	4313      	orrs	r3, r2
 801d416:	600b      	str	r3, [r1, #0]
 801d418:	e015      	b.n	801d446 <HAL_RCC_OscConfig+0x1de>
      }
      else
      {
        /* Disable the Internal High Speed oscillator (HSI). */
        __HAL_RCC_HSI_DISABLE();
 801d41a:	4b3f      	ldr	r3, [pc, #252]	; (801d518 <HAL_RCC_OscConfig+0x2b0>)
 801d41c:	2200      	movs	r2, #0
 801d41e:	601a      	str	r2, [r3, #0]

        /* Get Start Tick*/
        tickstart = HAL_GetTick();
 801d420:	f7fe fbc0 	bl	801bba4 <HAL_GetTick>
 801d424:	6138      	str	r0, [r7, #16]

        /* Wait till HSI is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 801d426:	e008      	b.n	801d43a <HAL_RCC_OscConfig+0x1d2>
        {
          if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 801d428:	f7fe fbbc 	bl	801bba4 <HAL_GetTick>
 801d42c:	4602      	mov	r2, r0
 801d42e:	693b      	ldr	r3, [r7, #16]
 801d430:	1ad3      	subs	r3, r2, r3
 801d432:	2b02      	cmp	r3, #2
 801d434:	d901      	bls.n	801d43a <HAL_RCC_OscConfig+0x1d2>
          {
            return HAL_TIMEOUT;
 801d436:	2303      	movs	r3, #3
 801d438:	e17b      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 801d43a:	4b36      	ldr	r3, [pc, #216]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d43c:	681b      	ldr	r3, [r3, #0]
 801d43e:	f003 0302 	and.w	r3, r3, #2
 801d442:	2b00      	cmp	r3, #0
 801d444:	d1f0      	bne.n	801d428 <HAL_RCC_OscConfig+0x1c0>
        }
      }
    }
  }
  /*------------------------------ LSI Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 801d446:	687b      	ldr	r3, [r7, #4]
 801d448:	681b      	ldr	r3, [r3, #0]
 801d44a:	f003 0308 	and.w	r3, r3, #8
 801d44e:	2b00      	cmp	r3, #0
 801d450:	d030      	beq.n	801d4b4 <HAL_RCC_OscConfig+0x24c>
  {
    /* Check the parameters */
    assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));

    /* Check the LSI State */
    if((RCC_OscInitStruct->LSIState)!= RCC_LSI_OFF)
 801d452:	687b      	ldr	r3, [r7, #4]
 801d454:	695b      	ldr	r3, [r3, #20]
 801d456:	2b00      	cmp	r3, #0
 801d458:	d016      	beq.n	801d488 <HAL_RCC_OscConfig+0x220>
    {
      /* Enable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_ENABLE();
 801d45a:	4b30      	ldr	r3, [pc, #192]	; (801d51c <HAL_RCC_OscConfig+0x2b4>)
 801d45c:	2201      	movs	r2, #1
 801d45e:	601a      	str	r2, [r3, #0]

      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 801d460:	f7fe fba0 	bl	801bba4 <HAL_GetTick>
 801d464:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 801d466:	e008      	b.n	801d47a <HAL_RCC_OscConfig+0x212>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 801d468:	f7fe fb9c 	bl	801bba4 <HAL_GetTick>
 801d46c:	4602      	mov	r2, r0
 801d46e:	693b      	ldr	r3, [r7, #16]
 801d470:	1ad3      	subs	r3, r2, r3
 801d472:	2b02      	cmp	r3, #2
 801d474:	d901      	bls.n	801d47a <HAL_RCC_OscConfig+0x212>
        {
          return HAL_TIMEOUT;
 801d476:	2303      	movs	r3, #3
 801d478:	e15b      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 801d47a:	4b26      	ldr	r3, [pc, #152]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d47c:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801d47e:	f003 0302 	and.w	r3, r3, #2
 801d482:	2b00      	cmp	r3, #0
 801d484:	d0f0      	beq.n	801d468 <HAL_RCC_OscConfig+0x200>
 801d486:	e015      	b.n	801d4b4 <HAL_RCC_OscConfig+0x24c>
      }
    }
    else
    {
      /* Disable the Internal Low Speed oscillator (LSI). */
      __HAL_RCC_LSI_DISABLE();
 801d488:	4b24      	ldr	r3, [pc, #144]	; (801d51c <HAL_RCC_OscConfig+0x2b4>)
 801d48a:	2200      	movs	r2, #0
 801d48c:	601a      	str	r2, [r3, #0]

      /* Get Start Tick */
      tickstart = HAL_GetTick();
 801d48e:	f7fe fb89 	bl	801bba4 <HAL_GetTick>
 801d492:	6138      	str	r0, [r7, #16]

      /* Wait till LSI is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 801d494:	e008      	b.n	801d4a8 <HAL_RCC_OscConfig+0x240>
      {
        if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 801d496:	f7fe fb85 	bl	801bba4 <HAL_GetTick>
 801d49a:	4602      	mov	r2, r0
 801d49c:	693b      	ldr	r3, [r7, #16]
 801d49e:	1ad3      	subs	r3, r2, r3
 801d4a0:	2b02      	cmp	r3, #2
 801d4a2:	d901      	bls.n	801d4a8 <HAL_RCC_OscConfig+0x240>
        {
          return HAL_TIMEOUT;
 801d4a4:	2303      	movs	r3, #3
 801d4a6:	e144      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 801d4a8:	4b1a      	ldr	r3, [pc, #104]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d4aa:	6f5b      	ldr	r3, [r3, #116]	; 0x74
 801d4ac:	f003 0302 	and.w	r3, r3, #2
 801d4b0:	2b00      	cmp	r3, #0
 801d4b2:	d1f0      	bne.n	801d496 <HAL_RCC_OscConfig+0x22e>
        }
      }
    }
  }
  /*------------------------------ LSE Configuration -------------------------*/
  if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 801d4b4:	687b      	ldr	r3, [r7, #4]
 801d4b6:	681b      	ldr	r3, [r3, #0]
 801d4b8:	f003 0304 	and.w	r3, r3, #4
 801d4bc:	2b00      	cmp	r3, #0
 801d4be:	f000 80a0 	beq.w	801d602 <HAL_RCC_OscConfig+0x39a>
  {
    FlagStatus       pwrclkchanged = RESET;
 801d4c2:	2300      	movs	r3, #0
 801d4c4:	75fb      	strb	r3, [r7, #23]
    /* Check the parameters */
    assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));

    /* Update LSE configuration in Backup Domain control register    */
    /* Requires to enable write access to Backup Domain of necessary */
    if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 801d4c6:	4b13      	ldr	r3, [pc, #76]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d4c8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801d4ca:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801d4ce:	2b00      	cmp	r3, #0
 801d4d0:	d10f      	bne.n	801d4f2 <HAL_RCC_OscConfig+0x28a>
    {
      __HAL_RCC_PWR_CLK_ENABLE();
 801d4d2:	2300      	movs	r3, #0
 801d4d4:	60bb      	str	r3, [r7, #8]
 801d4d6:	4b0f      	ldr	r3, [pc, #60]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d4d8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801d4da:	4a0e      	ldr	r2, [pc, #56]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d4dc:	f043 5380 	orr.w	r3, r3, #268435456	; 0x10000000
 801d4e0:	6413      	str	r3, [r2, #64]	; 0x40
 801d4e2:	4b0c      	ldr	r3, [pc, #48]	; (801d514 <HAL_RCC_OscConfig+0x2ac>)
 801d4e4:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801d4e6:	f003 5380 	and.w	r3, r3, #268435456	; 0x10000000
 801d4ea:	60bb      	str	r3, [r7, #8]
 801d4ec:	68bb      	ldr	r3, [r7, #8]
      pwrclkchanged = SET;
 801d4ee:	2301      	movs	r3, #1
 801d4f0:	75fb      	strb	r3, [r7, #23]
    }

    if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 801d4f2:	4b0b      	ldr	r3, [pc, #44]	; (801d520 <HAL_RCC_OscConfig+0x2b8>)
 801d4f4:	681b      	ldr	r3, [r3, #0]
 801d4f6:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801d4fa:	2b00      	cmp	r3, #0
 801d4fc:	d121      	bne.n	801d542 <HAL_RCC_OscConfig+0x2da>
    {
      /* Enable write access to Backup domain */
      SET_BIT(PWR->CR, PWR_CR_DBP);
 801d4fe:	4b08      	ldr	r3, [pc, #32]	; (801d520 <HAL_RCC_OscConfig+0x2b8>)
 801d500:	681b      	ldr	r3, [r3, #0]
 801d502:	4a07      	ldr	r2, [pc, #28]	; (801d520 <HAL_RCC_OscConfig+0x2b8>)
 801d504:	f443 7380 	orr.w	r3, r3, #256	; 0x100
 801d508:	6013      	str	r3, [r2, #0]

      /* Wait for Backup domain Write protection disable */
      tickstart = HAL_GetTick();
 801d50a:	f7fe fb4b 	bl	801bba4 <HAL_GetTick>
 801d50e:	6138      	str	r0, [r7, #16]

      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 801d510:	e011      	b.n	801d536 <HAL_RCC_OscConfig+0x2ce>
 801d512:	bf00      	nop
 801d514:	40023800 	.word	0x40023800
 801d518:	42470000 	.word	0x42470000
 801d51c:	42470e80 	.word	0x42470e80
 801d520:	40007000 	.word	0x40007000
      {
        if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 801d524:	f7fe fb3e 	bl	801bba4 <HAL_GetTick>
 801d528:	4602      	mov	r2, r0
 801d52a:	693b      	ldr	r3, [r7, #16]
 801d52c:	1ad3      	subs	r3, r2, r3
 801d52e:	2b02      	cmp	r3, #2
 801d530:	d901      	bls.n	801d536 <HAL_RCC_OscConfig+0x2ce>
        {
          return HAL_TIMEOUT;
 801d532:	2303      	movs	r3, #3
 801d534:	e0fd      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
      while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 801d536:	4b81      	ldr	r3, [pc, #516]	; (801d73c <HAL_RCC_OscConfig+0x4d4>)
 801d538:	681b      	ldr	r3, [r3, #0]
 801d53a:	f403 7380 	and.w	r3, r3, #256	; 0x100
 801d53e:	2b00      	cmp	r3, #0
 801d540:	d0f0      	beq.n	801d524 <HAL_RCC_OscConfig+0x2bc>
        }
      }
    }

    /* Set the new LSE configuration -----------------------------------------*/
    __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 801d542:	687b      	ldr	r3, [r7, #4]
 801d544:	689b      	ldr	r3, [r3, #8]
 801d546:	2b01      	cmp	r3, #1
 801d548:	d106      	bne.n	801d558 <HAL_RCC_OscConfig+0x2f0>
 801d54a:	4b7d      	ldr	r3, [pc, #500]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d54c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801d54e:	4a7c      	ldr	r2, [pc, #496]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d550:	f043 0301 	orr.w	r3, r3, #1
 801d554:	6713      	str	r3, [r2, #112]	; 0x70
 801d556:	e01c      	b.n	801d592 <HAL_RCC_OscConfig+0x32a>
 801d558:	687b      	ldr	r3, [r7, #4]
 801d55a:	689b      	ldr	r3, [r3, #8]
 801d55c:	2b05      	cmp	r3, #5
 801d55e:	d10c      	bne.n	801d57a <HAL_RCC_OscConfig+0x312>
 801d560:	4b77      	ldr	r3, [pc, #476]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d562:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801d564:	4a76      	ldr	r2, [pc, #472]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d566:	f043 0304 	orr.w	r3, r3, #4
 801d56a:	6713      	str	r3, [r2, #112]	; 0x70
 801d56c:	4b74      	ldr	r3, [pc, #464]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d56e:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801d570:	4a73      	ldr	r2, [pc, #460]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d572:	f043 0301 	orr.w	r3, r3, #1
 801d576:	6713      	str	r3, [r2, #112]	; 0x70
 801d578:	e00b      	b.n	801d592 <HAL_RCC_OscConfig+0x32a>
 801d57a:	4b71      	ldr	r3, [pc, #452]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d57c:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801d57e:	4a70      	ldr	r2, [pc, #448]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d580:	f023 0301 	bic.w	r3, r3, #1
 801d584:	6713      	str	r3, [r2, #112]	; 0x70
 801d586:	4b6e      	ldr	r3, [pc, #440]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d588:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801d58a:	4a6d      	ldr	r2, [pc, #436]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d58c:	f023 0304 	bic.w	r3, r3, #4
 801d590:	6713      	str	r3, [r2, #112]	; 0x70
    /* Check the LSE State */
    if((RCC_OscInitStruct->LSEState) != RCC_LSE_OFF)
 801d592:	687b      	ldr	r3, [r7, #4]
 801d594:	689b      	ldr	r3, [r3, #8]
 801d596:	2b00      	cmp	r3, #0
 801d598:	d015      	beq.n	801d5c6 <HAL_RCC_OscConfig+0x35e>
    {
      /* Get Start Tick*/
      tickstart = HAL_GetTick();
 801d59a:	f7fe fb03 	bl	801bba4 <HAL_GetTick>
 801d59e:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 801d5a0:	e00a      	b.n	801d5b8 <HAL_RCC_OscConfig+0x350>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 801d5a2:	f7fe faff 	bl	801bba4 <HAL_GetTick>
 801d5a6:	4602      	mov	r2, r0
 801d5a8:	693b      	ldr	r3, [r7, #16]
 801d5aa:	1ad3      	subs	r3, r2, r3
 801d5ac:	f241 3288 	movw	r2, #5000	; 0x1388
 801d5b0:	4293      	cmp	r3, r2
 801d5b2:	d901      	bls.n	801d5b8 <HAL_RCC_OscConfig+0x350>
        {
          return HAL_TIMEOUT;
 801d5b4:	2303      	movs	r3, #3
 801d5b6:	e0bc      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 801d5b8:	4b61      	ldr	r3, [pc, #388]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d5ba:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801d5bc:	f003 0302 	and.w	r3, r3, #2
 801d5c0:	2b00      	cmp	r3, #0
 801d5c2:	d0ee      	beq.n	801d5a2 <HAL_RCC_OscConfig+0x33a>
 801d5c4:	e014      	b.n	801d5f0 <HAL_RCC_OscConfig+0x388>
      }
    }
    else
    {
      /* Get Start Tick */
      tickstart = HAL_GetTick();
 801d5c6:	f7fe faed 	bl	801bba4 <HAL_GetTick>
 801d5ca:	6138      	str	r0, [r7, #16]

      /* Wait till LSE is ready */
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 801d5cc:	e00a      	b.n	801d5e4 <HAL_RCC_OscConfig+0x37c>
      {
        if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 801d5ce:	f7fe fae9 	bl	801bba4 <HAL_GetTick>
 801d5d2:	4602      	mov	r2, r0
 801d5d4:	693b      	ldr	r3, [r7, #16]
 801d5d6:	1ad3      	subs	r3, r2, r3
 801d5d8:	f241 3288 	movw	r2, #5000	; 0x1388
 801d5dc:	4293      	cmp	r3, r2
 801d5de:	d901      	bls.n	801d5e4 <HAL_RCC_OscConfig+0x37c>
        {
          return HAL_TIMEOUT;
 801d5e0:	2303      	movs	r3, #3
 801d5e2:	e0a6      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
      while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 801d5e4:	4b56      	ldr	r3, [pc, #344]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d5e6:	6f1b      	ldr	r3, [r3, #112]	; 0x70
 801d5e8:	f003 0302 	and.w	r3, r3, #2
 801d5ec:	2b00      	cmp	r3, #0
 801d5ee:	d1ee      	bne.n	801d5ce <HAL_RCC_OscConfig+0x366>
        }
      }
    }

    /* Restore clock configuration if changed */
    if(pwrclkchanged == SET)
 801d5f0:	7dfb      	ldrb	r3, [r7, #23]
 801d5f2:	2b01      	cmp	r3, #1
 801d5f4:	d105      	bne.n	801d602 <HAL_RCC_OscConfig+0x39a>
    {
      __HAL_RCC_PWR_CLK_DISABLE();
 801d5f6:	4b52      	ldr	r3, [pc, #328]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d5f8:	6c1b      	ldr	r3, [r3, #64]	; 0x40
 801d5fa:	4a51      	ldr	r2, [pc, #324]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d5fc:	f023 5380 	bic.w	r3, r3, #268435456	; 0x10000000
 801d600:	6413      	str	r3, [r2, #64]	; 0x40
    }
  }
  /*-------------------------------- PLL Configuration -----------------------*/
  /* Check the parameters */
  assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
  if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 801d602:	687b      	ldr	r3, [r7, #4]
 801d604:	699b      	ldr	r3, [r3, #24]
 801d606:	2b00      	cmp	r3, #0
 801d608:	f000 8092 	beq.w	801d730 <HAL_RCC_OscConfig+0x4c8>
  {
    /* Check if the PLL is used as system clock or not */
    if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_CFGR_SWS_PLL)
 801d60c:	4b4c      	ldr	r3, [pc, #304]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d60e:	689b      	ldr	r3, [r3, #8]
 801d610:	f003 030c 	and.w	r3, r3, #12
 801d614:	2b08      	cmp	r3, #8
 801d616:	d05c      	beq.n	801d6d2 <HAL_RCC_OscConfig+0x46a>
    {
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 801d618:	687b      	ldr	r3, [r7, #4]
 801d61a:	699b      	ldr	r3, [r3, #24]
 801d61c:	2b02      	cmp	r3, #2
 801d61e:	d141      	bne.n	801d6a4 <HAL_RCC_OscConfig+0x43c>
        assert_param(IS_RCC_PLLN_VALUE(RCC_OscInitStruct->PLL.PLLN));
        assert_param(IS_RCC_PLLP_VALUE(RCC_OscInitStruct->PLL.PLLP));
        assert_param(IS_RCC_PLLQ_VALUE(RCC_OscInitStruct->PLL.PLLQ));

        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 801d620:	4b48      	ldr	r3, [pc, #288]	; (801d744 <HAL_RCC_OscConfig+0x4dc>)
 801d622:	2200      	movs	r2, #0
 801d624:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 801d626:	f7fe fabd 	bl	801bba4 <HAL_GetTick>
 801d62a:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 801d62c:	e008      	b.n	801d640 <HAL_RCC_OscConfig+0x3d8>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 801d62e:	f7fe fab9 	bl	801bba4 <HAL_GetTick>
 801d632:	4602      	mov	r2, r0
 801d634:	693b      	ldr	r3, [r7, #16]
 801d636:	1ad3      	subs	r3, r2, r3
 801d638:	2b02      	cmp	r3, #2
 801d63a:	d901      	bls.n	801d640 <HAL_RCC_OscConfig+0x3d8>
          {
            return HAL_TIMEOUT;
 801d63c:	2303      	movs	r3, #3
 801d63e:	e078      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 801d640:	4b3f      	ldr	r3, [pc, #252]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d642:	681b      	ldr	r3, [r3, #0]
 801d644:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 801d648:	2b00      	cmp	r3, #0
 801d64a:	d1f0      	bne.n	801d62e <HAL_RCC_OscConfig+0x3c6>
          }
        }

        /* Configure the main PLL clock source, multiplication and division factors. */
        WRITE_REG(RCC->PLLCFGR, (RCC_OscInitStruct->PLL.PLLSource                                            | \
 801d64c:	687b      	ldr	r3, [r7, #4]
 801d64e:	69da      	ldr	r2, [r3, #28]
 801d650:	687b      	ldr	r3, [r7, #4]
 801d652:	6a1b      	ldr	r3, [r3, #32]
 801d654:	431a      	orrs	r2, r3
 801d656:	687b      	ldr	r3, [r7, #4]
 801d658:	6a5b      	ldr	r3, [r3, #36]	; 0x24
 801d65a:	019b      	lsls	r3, r3, #6
 801d65c:	431a      	orrs	r2, r3
 801d65e:	687b      	ldr	r3, [r7, #4]
 801d660:	6a9b      	ldr	r3, [r3, #40]	; 0x28
 801d662:	085b      	lsrs	r3, r3, #1
 801d664:	3b01      	subs	r3, #1
 801d666:	041b      	lsls	r3, r3, #16
 801d668:	431a      	orrs	r2, r3
 801d66a:	687b      	ldr	r3, [r7, #4]
 801d66c:	6adb      	ldr	r3, [r3, #44]	; 0x2c
 801d66e:	061b      	lsls	r3, r3, #24
 801d670:	4933      	ldr	r1, [pc, #204]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d672:	4313      	orrs	r3, r2
 801d674:	604b      	str	r3, [r1, #4]
                                 RCC_OscInitStruct->PLL.PLLM                                                 | \
                                 (RCC_OscInitStruct->PLL.PLLN << RCC_PLLCFGR_PLLN_Pos)             | \
                                 (((RCC_OscInitStruct->PLL.PLLP >> 1U) - 1U) << RCC_PLLCFGR_PLLP_Pos) | \
                                 (RCC_OscInitStruct->PLL.PLLQ << RCC_PLLCFGR_PLLQ_Pos)));
        /* Enable the main PLL. */
        __HAL_RCC_PLL_ENABLE();
 801d676:	4b33      	ldr	r3, [pc, #204]	; (801d744 <HAL_RCC_OscConfig+0x4dc>)
 801d678:	2201      	movs	r2, #1
 801d67a:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 801d67c:	f7fe fa92 	bl	801bba4 <HAL_GetTick>
 801d680:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 801d682:	e008      	b.n	801d696 <HAL_RCC_OscConfig+0x42e>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 801d684:	f7fe fa8e 	bl	801bba4 <HAL_GetTick>
 801d688:	4602      	mov	r2, r0
 801d68a:	693b      	ldr	r3, [r7, #16]
 801d68c:	1ad3      	subs	r3, r2, r3
 801d68e:	2b02      	cmp	r3, #2
 801d690:	d901      	bls.n	801d696 <HAL_RCC_OscConfig+0x42e>
          {
            return HAL_TIMEOUT;
 801d692:	2303      	movs	r3, #3
 801d694:	e04d      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 801d696:	4b2a      	ldr	r3, [pc, #168]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d698:	681b      	ldr	r3, [r3, #0]
 801d69a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 801d69e:	2b00      	cmp	r3, #0
 801d6a0:	d0f0      	beq.n	801d684 <HAL_RCC_OscConfig+0x41c>
 801d6a2:	e045      	b.n	801d730 <HAL_RCC_OscConfig+0x4c8>
        }
      }
      else
      {
        /* Disable the main PLL. */
        __HAL_RCC_PLL_DISABLE();
 801d6a4:	4b27      	ldr	r3, [pc, #156]	; (801d744 <HAL_RCC_OscConfig+0x4dc>)
 801d6a6:	2200      	movs	r2, #0
 801d6a8:	601a      	str	r2, [r3, #0]

        /* Get Start Tick */
        tickstart = HAL_GetTick();
 801d6aa:	f7fe fa7b 	bl	801bba4 <HAL_GetTick>
 801d6ae:	6138      	str	r0, [r7, #16]

        /* Wait till PLL is ready */
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 801d6b0:	e008      	b.n	801d6c4 <HAL_RCC_OscConfig+0x45c>
        {
          if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 801d6b2:	f7fe fa77 	bl	801bba4 <HAL_GetTick>
 801d6b6:	4602      	mov	r2, r0
 801d6b8:	693b      	ldr	r3, [r7, #16]
 801d6ba:	1ad3      	subs	r3, r2, r3
 801d6bc:	2b02      	cmp	r3, #2
 801d6be:	d901      	bls.n	801d6c4 <HAL_RCC_OscConfig+0x45c>
          {
            return HAL_TIMEOUT;
 801d6c0:	2303      	movs	r3, #3
 801d6c2:	e036      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
        while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) != RESET)
 801d6c4:	4b1e      	ldr	r3, [pc, #120]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d6c6:	681b      	ldr	r3, [r3, #0]
 801d6c8:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 801d6cc:	2b00      	cmp	r3, #0
 801d6ce:	d1f0      	bne.n	801d6b2 <HAL_RCC_OscConfig+0x44a>
 801d6d0:	e02e      	b.n	801d730 <HAL_RCC_OscConfig+0x4c8>
      }
    }
    else
    {
      /* Check if there is a request to disable the PLL used as System clock source */
      if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_OFF)
 801d6d2:	687b      	ldr	r3, [r7, #4]
 801d6d4:	699b      	ldr	r3, [r3, #24]
 801d6d6:	2b01      	cmp	r3, #1
 801d6d8:	d101      	bne.n	801d6de <HAL_RCC_OscConfig+0x476>
      {
        return HAL_ERROR;
 801d6da:	2301      	movs	r3, #1
 801d6dc:	e029      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
      }
      else
      {
        /* Do not return HAL_ERROR if request repeats the current configuration */
        pll_config = RCC->PLLCFGR;
 801d6de:	4b18      	ldr	r3, [pc, #96]	; (801d740 <HAL_RCC_OscConfig+0x4d8>)
 801d6e0:	685b      	ldr	r3, [r3, #4]
 801d6e2:	60fb      	str	r3, [r7, #12]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 801d6e4:	68fb      	ldr	r3, [r7, #12]
 801d6e6:	f403 0280 	and.w	r2, r3, #4194304	; 0x400000
 801d6ea:	687b      	ldr	r3, [r7, #4]
 801d6ec:	69db      	ldr	r3, [r3, #28]
 801d6ee:	429a      	cmp	r2, r3
 801d6f0:	d11c      	bne.n	801d72c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 801d6f2:	68fb      	ldr	r3, [r7, #12]
 801d6f4:	f003 023f 	and.w	r2, r3, #63	; 0x3f
 801d6f8:	687b      	ldr	r3, [r7, #4]
 801d6fa:	6a1b      	ldr	r3, [r3, #32]
        if((READ_BIT(pll_config, RCC_PLLCFGR_PLLSRC) != RCC_OscInitStruct->PLL.PLLSource) ||
 801d6fc:	429a      	cmp	r2, r3
 801d6fe:	d115      	bne.n	801d72c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 801d700:	68fa      	ldr	r2, [r7, #12]
 801d702:	f647 73c0 	movw	r3, #32704	; 0x7fc0
 801d706:	4013      	ands	r3, r2
 801d708:	687a      	ldr	r2, [r7, #4]
 801d70a:	6a52      	ldr	r2, [r2, #36]	; 0x24
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLM) != RCC_OscInitStruct->PLL.PLLM) ||
 801d70c:	4293      	cmp	r3, r2
 801d70e:	d10d      	bne.n	801d72c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 801d710:	68fb      	ldr	r3, [r7, #12]
 801d712:	f403 3240 	and.w	r2, r3, #196608	; 0x30000
 801d716:	687b      	ldr	r3, [r7, #4]
 801d718:	6a9b      	ldr	r3, [r3, #40]	; 0x28
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLN) != RCC_OscInitStruct->PLL.PLLN) ||
 801d71a:	429a      	cmp	r2, r3
 801d71c:	d106      	bne.n	801d72c <HAL_RCC_OscConfig+0x4c4>
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLQ) != RCC_OscInitStruct->PLL.PLLQ))
 801d71e:	68fb      	ldr	r3, [r7, #12]
 801d720:	f003 6270 	and.w	r2, r3, #251658240	; 0xf000000
 801d724:	687b      	ldr	r3, [r7, #4]
 801d726:	6adb      	ldr	r3, [r3, #44]	; 0x2c
           (READ_BIT(pll_config, RCC_PLLCFGR_PLLP) != RCC_OscInitStruct->PLL.PLLP) ||
 801d728:	429a      	cmp	r2, r3
 801d72a:	d001      	beq.n	801d730 <HAL_RCC_OscConfig+0x4c8>
        {
          return HAL_ERROR;
 801d72c:	2301      	movs	r3, #1
 801d72e:	e000      	b.n	801d732 <HAL_RCC_OscConfig+0x4ca>
        }
      }
    }
  }
  return HAL_OK;
 801d730:	2300      	movs	r3, #0
}
 801d732:	4618      	mov	r0, r3
 801d734:	3718      	adds	r7, #24
 801d736:	46bd      	mov	sp, r7
 801d738:	bd80      	pop	{r7, pc}
 801d73a:	bf00      	nop
 801d73c:	40007000 	.word	0x40007000
 801d740:	40023800 	.word	0x40023800
 801d744:	42470060 	.word	0x42470060

0801d748 <HAL_RCC_ClockConfig>:
  *         HPRE[3:0] bits to ensure that HCLK not exceed the maximum allowed frequency
  *         (for more details refer to section above "Initialization/de-initialization functions")
  * @retval None
  */
HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
{
 801d748:	b580      	push	{r7, lr}
 801d74a:	b084      	sub	sp, #16
 801d74c:	af00      	add	r7, sp, #0
 801d74e:	6078      	str	r0, [r7, #4]
 801d750:	6039      	str	r1, [r7, #0]
  uint32_t tickstart;

  /* Check Null pointer */
  if(RCC_ClkInitStruct == NULL)
 801d752:	687b      	ldr	r3, [r7, #4]
 801d754:	2b00      	cmp	r3, #0
 801d756:	d101      	bne.n	801d75c <HAL_RCC_ClockConfig+0x14>
  {
    return HAL_ERROR;
 801d758:	2301      	movs	r3, #1
 801d75a:	e0cc      	b.n	801d8f6 <HAL_RCC_ClockConfig+0x1ae>
  /* To correctly read data from FLASH memory, the number of wait states (LATENCY)
    must be correctly programmed according to the frequency of the CPU clock
    (HCLK) and the supply voltage of the device. */

  /* Increasing the number of wait states because of higher CPU frequency */
  if(FLatency > __HAL_FLASH_GET_LATENCY())
 801d75c:	4b68      	ldr	r3, [pc, #416]	; (801d900 <HAL_RCC_ClockConfig+0x1b8>)
 801d75e:	681b      	ldr	r3, [r3, #0]
 801d760:	f003 030f 	and.w	r3, r3, #15
 801d764:	683a      	ldr	r2, [r7, #0]
 801d766:	429a      	cmp	r2, r3
 801d768:	d90c      	bls.n	801d784 <HAL_RCC_ClockConfig+0x3c>
  {
    /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 801d76a:	4b65      	ldr	r3, [pc, #404]	; (801d900 <HAL_RCC_ClockConfig+0x1b8>)
 801d76c:	683a      	ldr	r2, [r7, #0]
 801d76e:	b2d2      	uxtb	r2, r2
 801d770:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 801d772:	4b63      	ldr	r3, [pc, #396]	; (801d900 <HAL_RCC_ClockConfig+0x1b8>)
 801d774:	681b      	ldr	r3, [r3, #0]
 801d776:	f003 030f 	and.w	r3, r3, #15
 801d77a:	683a      	ldr	r2, [r7, #0]
 801d77c:	429a      	cmp	r2, r3
 801d77e:	d001      	beq.n	801d784 <HAL_RCC_ClockConfig+0x3c>
    {
      return HAL_ERROR;
 801d780:	2301      	movs	r3, #1
 801d782:	e0b8      	b.n	801d8f6 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- HCLK Configuration --------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 801d784:	687b      	ldr	r3, [r7, #4]
 801d786:	681b      	ldr	r3, [r3, #0]
 801d788:	f003 0302 	and.w	r3, r3, #2
 801d78c:	2b00      	cmp	r3, #0
 801d78e:	d020      	beq.n	801d7d2 <HAL_RCC_ClockConfig+0x8a>
  {
    /* Set the highest APBx dividers in order to ensure that we do not go through
       a non-spec phase whatever we decrease or increase HCLK. */
    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 801d790:	687b      	ldr	r3, [r7, #4]
 801d792:	681b      	ldr	r3, [r3, #0]
 801d794:	f003 0304 	and.w	r3, r3, #4
 801d798:	2b00      	cmp	r3, #0
 801d79a:	d005      	beq.n	801d7a8 <HAL_RCC_ClockConfig+0x60>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_HCLK_DIV16);
 801d79c:	4b59      	ldr	r3, [pc, #356]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d79e:	689b      	ldr	r3, [r3, #8]
 801d7a0:	4a58      	ldr	r2, [pc, #352]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d7a2:	f443 53e0 	orr.w	r3, r3, #7168	; 0x1c00
 801d7a6:	6093      	str	r3, [r2, #8]
    }

    if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 801d7a8:	687b      	ldr	r3, [r7, #4]
 801d7aa:	681b      	ldr	r3, [r3, #0]
 801d7ac:	f003 0308 	and.w	r3, r3, #8
 801d7b0:	2b00      	cmp	r3, #0
 801d7b2:	d005      	beq.n	801d7c0 <HAL_RCC_ClockConfig+0x78>
    {
      MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, (RCC_HCLK_DIV16 << 3));
 801d7b4:	4b53      	ldr	r3, [pc, #332]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d7b6:	689b      	ldr	r3, [r3, #8]
 801d7b8:	4a52      	ldr	r2, [pc, #328]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d7ba:	f443 4360 	orr.w	r3, r3, #57344	; 0xe000
 801d7be:	6093      	str	r3, [r2, #8]
    }

    assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 801d7c0:	4b50      	ldr	r3, [pc, #320]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d7c2:	689b      	ldr	r3, [r3, #8]
 801d7c4:	f023 02f0 	bic.w	r2, r3, #240	; 0xf0
 801d7c8:	687b      	ldr	r3, [r7, #4]
 801d7ca:	689b      	ldr	r3, [r3, #8]
 801d7cc:	494d      	ldr	r1, [pc, #308]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d7ce:	4313      	orrs	r3, r2
 801d7d0:	608b      	str	r3, [r1, #8]
  }

  /*------------------------- SYSCLK Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 801d7d2:	687b      	ldr	r3, [r7, #4]
 801d7d4:	681b      	ldr	r3, [r3, #0]
 801d7d6:	f003 0301 	and.w	r3, r3, #1
 801d7da:	2b00      	cmp	r3, #0
 801d7dc:	d044      	beq.n	801d868 <HAL_RCC_ClockConfig+0x120>
  {
    assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));

    /* HSE is selected as System Clock Source */
    if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 801d7de:	687b      	ldr	r3, [r7, #4]
 801d7e0:	685b      	ldr	r3, [r3, #4]
 801d7e2:	2b01      	cmp	r3, #1
 801d7e4:	d107      	bne.n	801d7f6 <HAL_RCC_ClockConfig+0xae>
    {
      /* Check the HSE ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 801d7e6:	4b47      	ldr	r3, [pc, #284]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d7e8:	681b      	ldr	r3, [r3, #0]
 801d7ea:	f403 3300 	and.w	r3, r3, #131072	; 0x20000
 801d7ee:	2b00      	cmp	r3, #0
 801d7f0:	d119      	bne.n	801d826 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 801d7f2:	2301      	movs	r3, #1
 801d7f4:	e07f      	b.n	801d8f6 <HAL_RCC_ClockConfig+0x1ae>
      }
    }
    /* PLL is selected as System Clock Source */
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 801d7f6:	687b      	ldr	r3, [r7, #4]
 801d7f8:	685b      	ldr	r3, [r3, #4]
 801d7fa:	2b02      	cmp	r3, #2
 801d7fc:	d003      	beq.n	801d806 <HAL_RCC_ClockConfig+0xbe>
            (RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLRCLK))
 801d7fe:	687b      	ldr	r3, [r7, #4]
 801d800:	685b      	ldr	r3, [r3, #4]
    else if((RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)   ||
 801d802:	2b03      	cmp	r3, #3
 801d804:	d107      	bne.n	801d816 <HAL_RCC_ClockConfig+0xce>
    {
      /* Check the PLL ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 801d806:	4b3f      	ldr	r3, [pc, #252]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d808:	681b      	ldr	r3, [r3, #0]
 801d80a:	f003 7300 	and.w	r3, r3, #33554432	; 0x2000000
 801d80e:	2b00      	cmp	r3, #0
 801d810:	d109      	bne.n	801d826 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 801d812:	2301      	movs	r3, #1
 801d814:	e06f      	b.n	801d8f6 <HAL_RCC_ClockConfig+0x1ae>
    }
    /* HSI is selected as System Clock Source */
    else
    {
      /* Check the HSI ready flag */
      if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 801d816:	4b3b      	ldr	r3, [pc, #236]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d818:	681b      	ldr	r3, [r3, #0]
 801d81a:	f003 0302 	and.w	r3, r3, #2
 801d81e:	2b00      	cmp	r3, #0
 801d820:	d101      	bne.n	801d826 <HAL_RCC_ClockConfig+0xde>
      {
        return HAL_ERROR;
 801d822:	2301      	movs	r3, #1
 801d824:	e067      	b.n	801d8f6 <HAL_RCC_ClockConfig+0x1ae>
      }
    }

    __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 801d826:	4b37      	ldr	r3, [pc, #220]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d828:	689b      	ldr	r3, [r3, #8]
 801d82a:	f023 0203 	bic.w	r2, r3, #3
 801d82e:	687b      	ldr	r3, [r7, #4]
 801d830:	685b      	ldr	r3, [r3, #4]
 801d832:	4934      	ldr	r1, [pc, #208]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d834:	4313      	orrs	r3, r2
 801d836:	608b      	str	r3, [r1, #8]

    /* Get Start Tick */
    tickstart = HAL_GetTick();
 801d838:	f7fe f9b4 	bl	801bba4 <HAL_GetTick>
 801d83c:	60f8      	str	r0, [r7, #12]

    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 801d83e:	e00a      	b.n	801d856 <HAL_RCC_ClockConfig+0x10e>
    {
      if ((HAL_GetTick() - tickstart) > CLOCKSWITCH_TIMEOUT_VALUE)
 801d840:	f7fe f9b0 	bl	801bba4 <HAL_GetTick>
 801d844:	4602      	mov	r2, r0
 801d846:	68fb      	ldr	r3, [r7, #12]
 801d848:	1ad3      	subs	r3, r2, r3
 801d84a:	f241 3288 	movw	r2, #5000	; 0x1388
 801d84e:	4293      	cmp	r3, r2
 801d850:	d901      	bls.n	801d856 <HAL_RCC_ClockConfig+0x10e>
      {
        return HAL_TIMEOUT;
 801d852:	2303      	movs	r3, #3
 801d854:	e04f      	b.n	801d8f6 <HAL_RCC_ClockConfig+0x1ae>
    while (__HAL_RCC_GET_SYSCLK_SOURCE() != (RCC_ClkInitStruct->SYSCLKSource << RCC_CFGR_SWS_Pos))
 801d856:	4b2b      	ldr	r3, [pc, #172]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d858:	689b      	ldr	r3, [r3, #8]
 801d85a:	f003 020c 	and.w	r2, r3, #12
 801d85e:	687b      	ldr	r3, [r7, #4]
 801d860:	685b      	ldr	r3, [r3, #4]
 801d862:	009b      	lsls	r3, r3, #2
 801d864:	429a      	cmp	r2, r3
 801d866:	d1eb      	bne.n	801d840 <HAL_RCC_ClockConfig+0xf8>
      }
    }
  }

  /* Decreasing the number of wait states because of lower CPU frequency */
  if(FLatency < __HAL_FLASH_GET_LATENCY())
 801d868:	4b25      	ldr	r3, [pc, #148]	; (801d900 <HAL_RCC_ClockConfig+0x1b8>)
 801d86a:	681b      	ldr	r3, [r3, #0]
 801d86c:	f003 030f 	and.w	r3, r3, #15
 801d870:	683a      	ldr	r2, [r7, #0]
 801d872:	429a      	cmp	r2, r3
 801d874:	d20c      	bcs.n	801d890 <HAL_RCC_ClockConfig+0x148>
  {
     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
    __HAL_FLASH_SET_LATENCY(FLatency);
 801d876:	4b22      	ldr	r3, [pc, #136]	; (801d900 <HAL_RCC_ClockConfig+0x1b8>)
 801d878:	683a      	ldr	r2, [r7, #0]
 801d87a:	b2d2      	uxtb	r2, r2
 801d87c:	701a      	strb	r2, [r3, #0]

    /* Check that the new number of wait states is taken into account to access the Flash
    memory by reading the FLASH_ACR register */
    if(__HAL_FLASH_GET_LATENCY() != FLatency)
 801d87e:	4b20      	ldr	r3, [pc, #128]	; (801d900 <HAL_RCC_ClockConfig+0x1b8>)
 801d880:	681b      	ldr	r3, [r3, #0]
 801d882:	f003 030f 	and.w	r3, r3, #15
 801d886:	683a      	ldr	r2, [r7, #0]
 801d888:	429a      	cmp	r2, r3
 801d88a:	d001      	beq.n	801d890 <HAL_RCC_ClockConfig+0x148>
    {
      return HAL_ERROR;
 801d88c:	2301      	movs	r3, #1
 801d88e:	e032      	b.n	801d8f6 <HAL_RCC_ClockConfig+0x1ae>
    }
  }

  /*-------------------------- PCLK1 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 801d890:	687b      	ldr	r3, [r7, #4]
 801d892:	681b      	ldr	r3, [r3, #0]
 801d894:	f003 0304 	and.w	r3, r3, #4
 801d898:	2b00      	cmp	r3, #0
 801d89a:	d008      	beq.n	801d8ae <HAL_RCC_ClockConfig+0x166>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 801d89c:	4b19      	ldr	r3, [pc, #100]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d89e:	689b      	ldr	r3, [r3, #8]
 801d8a0:	f423 52e0 	bic.w	r2, r3, #7168	; 0x1c00
 801d8a4:	687b      	ldr	r3, [r7, #4]
 801d8a6:	68db      	ldr	r3, [r3, #12]
 801d8a8:	4916      	ldr	r1, [pc, #88]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d8aa:	4313      	orrs	r3, r2
 801d8ac:	608b      	str	r3, [r1, #8]
  }

  /*-------------------------- PCLK2 Configuration ---------------------------*/
  if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 801d8ae:	687b      	ldr	r3, [r7, #4]
 801d8b0:	681b      	ldr	r3, [r3, #0]
 801d8b2:	f003 0308 	and.w	r3, r3, #8
 801d8b6:	2b00      	cmp	r3, #0
 801d8b8:	d009      	beq.n	801d8ce <HAL_RCC_ClockConfig+0x186>
  {
    assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
    MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3U));
 801d8ba:	4b12      	ldr	r3, [pc, #72]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d8bc:	689b      	ldr	r3, [r3, #8]
 801d8be:	f423 4260 	bic.w	r2, r3, #57344	; 0xe000
 801d8c2:	687b      	ldr	r3, [r7, #4]
 801d8c4:	691b      	ldr	r3, [r3, #16]
 801d8c6:	00db      	lsls	r3, r3, #3
 801d8c8:	490e      	ldr	r1, [pc, #56]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d8ca:	4313      	orrs	r3, r2
 801d8cc:	608b      	str	r3, [r1, #8]
  }

  /* Update the SystemCoreClock global variable */
  SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CFGR_HPRE_Pos];
 801d8ce:	f000 f821 	bl	801d914 <HAL_RCC_GetSysClockFreq>
 801d8d2:	4601      	mov	r1, r0
 801d8d4:	4b0b      	ldr	r3, [pc, #44]	; (801d904 <HAL_RCC_ClockConfig+0x1bc>)
 801d8d6:	689b      	ldr	r3, [r3, #8]
 801d8d8:	091b      	lsrs	r3, r3, #4
 801d8da:	f003 030f 	and.w	r3, r3, #15
 801d8de:	4a0a      	ldr	r2, [pc, #40]	; (801d908 <HAL_RCC_ClockConfig+0x1c0>)
 801d8e0:	5cd3      	ldrb	r3, [r2, r3]
 801d8e2:	fa21 f303 	lsr.w	r3, r1, r3
 801d8e6:	4a09      	ldr	r2, [pc, #36]	; (801d90c <HAL_RCC_ClockConfig+0x1c4>)
 801d8e8:	6013      	str	r3, [r2, #0]

  /* Configure the source of time base considering new system clocks settings */
  HAL_InitTick (uwTickPrio);
 801d8ea:	4b09      	ldr	r3, [pc, #36]	; (801d910 <HAL_RCC_ClockConfig+0x1c8>)
 801d8ec:	681b      	ldr	r3, [r3, #0]
 801d8ee:	4618      	mov	r0, r3
 801d8f0:	f7fe f914 	bl	801bb1c <HAL_InitTick>

  return HAL_OK;
 801d8f4:	2300      	movs	r3, #0
}
 801d8f6:	4618      	mov	r0, r3
 801d8f8:	3710      	adds	r7, #16
 801d8fa:	46bd      	mov	sp, r7
 801d8fc:	bd80      	pop	{r7, pc}
 801d8fe:	bf00      	nop
 801d900:	40023c00 	.word	0x40023c00
 801d904:	40023800 	.word	0x40023800
 801d908:	08029f68 	.word	0x08029f68
 801d90c:	20000000 	.word	0x20000000
 801d910:	20000004 	.word	0x20000004

0801d914 <HAL_RCC_GetSysClockFreq>:
  *
  *
  * @retval SYSCLK frequency
  */
__weak uint32_t HAL_RCC_GetSysClockFreq(void)
{
 801d914:	b5f0      	push	{r4, r5, r6, r7, lr}
 801d916:	b085      	sub	sp, #20
 801d918:	af00      	add	r7, sp, #0
  uint32_t pllm = 0U, pllvco = 0U, pllp = 0U;
 801d91a:	2300      	movs	r3, #0
 801d91c:	607b      	str	r3, [r7, #4]
 801d91e:	2300      	movs	r3, #0
 801d920:	60fb      	str	r3, [r7, #12]
 801d922:	2300      	movs	r3, #0
 801d924:	603b      	str	r3, [r7, #0]
  uint32_t sysclockfreq = 0U;
 801d926:	2300      	movs	r3, #0
 801d928:	60bb      	str	r3, [r7, #8]

  /* Get SYSCLK source -------------------------------------------------------*/
  switch (RCC->CFGR & RCC_CFGR_SWS)
 801d92a:	4b63      	ldr	r3, [pc, #396]	; (801dab8 <HAL_RCC_GetSysClockFreq+0x1a4>)
 801d92c:	689b      	ldr	r3, [r3, #8]
 801d92e:	f003 030c 	and.w	r3, r3, #12
 801d932:	2b04      	cmp	r3, #4
 801d934:	d007      	beq.n	801d946 <HAL_RCC_GetSysClockFreq+0x32>
 801d936:	2b08      	cmp	r3, #8
 801d938:	d008      	beq.n	801d94c <HAL_RCC_GetSysClockFreq+0x38>
 801d93a:	2b00      	cmp	r3, #0
 801d93c:	f040 80b4 	bne.w	801daa8 <HAL_RCC_GetSysClockFreq+0x194>
  {
    case RCC_CFGR_SWS_HSI:  /* HSI used as system clock source */
    {
      sysclockfreq = HSI_VALUE;
 801d940:	4b5e      	ldr	r3, [pc, #376]	; (801dabc <HAL_RCC_GetSysClockFreq+0x1a8>)
 801d942:	60bb      	str	r3, [r7, #8]
       break;
 801d944:	e0b3      	b.n	801daae <HAL_RCC_GetSysClockFreq+0x19a>
    }
    case RCC_CFGR_SWS_HSE:  /* HSE used as system clock  source */
    {
      sysclockfreq = HSE_VALUE;
 801d946:	4b5e      	ldr	r3, [pc, #376]	; (801dac0 <HAL_RCC_GetSysClockFreq+0x1ac>)
 801d948:	60bb      	str	r3, [r7, #8]
      break;
 801d94a:	e0b0      	b.n	801daae <HAL_RCC_GetSysClockFreq+0x19a>
    }
    case RCC_CFGR_SWS_PLL:  /* PLL used as system clock  source */
    {
      /* PLL_VCO = (HSE_VALUE or HSI_VALUE / PLLM) * PLLN
      SYSCLK = PLL_VCO / PLLP */
      pllm = RCC->PLLCFGR & RCC_PLLCFGR_PLLM;
 801d94c:	4b5a      	ldr	r3, [pc, #360]	; (801dab8 <HAL_RCC_GetSysClockFreq+0x1a4>)
 801d94e:	685b      	ldr	r3, [r3, #4]
 801d950:	f003 033f 	and.w	r3, r3, #63	; 0x3f
 801d954:	607b      	str	r3, [r7, #4]
      if(__HAL_RCC_GET_PLL_OSCSOURCE() != RCC_PLLSOURCE_HSI)
 801d956:	4b58      	ldr	r3, [pc, #352]	; (801dab8 <HAL_RCC_GetSysClockFreq+0x1a4>)
 801d958:	685b      	ldr	r3, [r3, #4]
 801d95a:	f403 0380 	and.w	r3, r3, #4194304	; 0x400000
 801d95e:	2b00      	cmp	r3, #0
 801d960:	d04a      	beq.n	801d9f8 <HAL_RCC_GetSysClockFreq+0xe4>
      {
        /* HSE used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSE_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 801d962:	4b55      	ldr	r3, [pc, #340]	; (801dab8 <HAL_RCC_GetSysClockFreq+0x1a4>)
 801d964:	685b      	ldr	r3, [r3, #4]
 801d966:	099b      	lsrs	r3, r3, #6
 801d968:	f04f 0400 	mov.w	r4, #0
 801d96c:	f240 11ff 	movw	r1, #511	; 0x1ff
 801d970:	f04f 0200 	mov.w	r2, #0
 801d974:	ea03 0501 	and.w	r5, r3, r1
 801d978:	ea04 0602 	and.w	r6, r4, r2
 801d97c:	4629      	mov	r1, r5
 801d97e:	4632      	mov	r2, r6
 801d980:	f04f 0300 	mov.w	r3, #0
 801d984:	f04f 0400 	mov.w	r4, #0
 801d988:	0154      	lsls	r4, r2, #5
 801d98a:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 801d98e:	014b      	lsls	r3, r1, #5
 801d990:	4619      	mov	r1, r3
 801d992:	4622      	mov	r2, r4
 801d994:	1b49      	subs	r1, r1, r5
 801d996:	eb62 0206 	sbc.w	r2, r2, r6
 801d99a:	f04f 0300 	mov.w	r3, #0
 801d99e:	f04f 0400 	mov.w	r4, #0
 801d9a2:	0194      	lsls	r4, r2, #6
 801d9a4:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 801d9a8:	018b      	lsls	r3, r1, #6
 801d9aa:	1a5b      	subs	r3, r3, r1
 801d9ac:	eb64 0402 	sbc.w	r4, r4, r2
 801d9b0:	f04f 0100 	mov.w	r1, #0
 801d9b4:	f04f 0200 	mov.w	r2, #0
 801d9b8:	00e2      	lsls	r2, r4, #3
 801d9ba:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 801d9be:	00d9      	lsls	r1, r3, #3
 801d9c0:	460b      	mov	r3, r1
 801d9c2:	4614      	mov	r4, r2
 801d9c4:	195b      	adds	r3, r3, r5
 801d9c6:	eb44 0406 	adc.w	r4, r4, r6
 801d9ca:	f04f 0100 	mov.w	r1, #0
 801d9ce:	f04f 0200 	mov.w	r2, #0
 801d9d2:	0262      	lsls	r2, r4, #9
 801d9d4:	ea42 52d3 	orr.w	r2, r2, r3, lsr #23
 801d9d8:	0259      	lsls	r1, r3, #9
 801d9da:	460b      	mov	r3, r1
 801d9dc:	4614      	mov	r4, r2
 801d9de:	4618      	mov	r0, r3
 801d9e0:	4621      	mov	r1, r4
 801d9e2:	687b      	ldr	r3, [r7, #4]
 801d9e4:	f04f 0400 	mov.w	r4, #0
 801d9e8:	461a      	mov	r2, r3
 801d9ea:	4623      	mov	r3, r4
 801d9ec:	f7e3 f8dc 	bl	8000ba8 <__aeabi_uldivmod>
 801d9f0:	4603      	mov	r3, r0
 801d9f2:	460c      	mov	r4, r1
 801d9f4:	60fb      	str	r3, [r7, #12]
 801d9f6:	e049      	b.n	801da8c <HAL_RCC_GetSysClockFreq+0x178>
      }
      else
      {
        /* HSI used as PLL clock source */
        pllvco = (uint32_t) ((((uint64_t) HSI_VALUE * ((uint64_t) ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos)))) / (uint64_t)pllm);
 801d9f8:	4b2f      	ldr	r3, [pc, #188]	; (801dab8 <HAL_RCC_GetSysClockFreq+0x1a4>)
 801d9fa:	685b      	ldr	r3, [r3, #4]
 801d9fc:	099b      	lsrs	r3, r3, #6
 801d9fe:	f04f 0400 	mov.w	r4, #0
 801da02:	f240 11ff 	movw	r1, #511	; 0x1ff
 801da06:	f04f 0200 	mov.w	r2, #0
 801da0a:	ea03 0501 	and.w	r5, r3, r1
 801da0e:	ea04 0602 	and.w	r6, r4, r2
 801da12:	4629      	mov	r1, r5
 801da14:	4632      	mov	r2, r6
 801da16:	f04f 0300 	mov.w	r3, #0
 801da1a:	f04f 0400 	mov.w	r4, #0
 801da1e:	0154      	lsls	r4, r2, #5
 801da20:	ea44 64d1 	orr.w	r4, r4, r1, lsr #27
 801da24:	014b      	lsls	r3, r1, #5
 801da26:	4619      	mov	r1, r3
 801da28:	4622      	mov	r2, r4
 801da2a:	1b49      	subs	r1, r1, r5
 801da2c:	eb62 0206 	sbc.w	r2, r2, r6
 801da30:	f04f 0300 	mov.w	r3, #0
 801da34:	f04f 0400 	mov.w	r4, #0
 801da38:	0194      	lsls	r4, r2, #6
 801da3a:	ea44 6491 	orr.w	r4, r4, r1, lsr #26
 801da3e:	018b      	lsls	r3, r1, #6
 801da40:	1a5b      	subs	r3, r3, r1
 801da42:	eb64 0402 	sbc.w	r4, r4, r2
 801da46:	f04f 0100 	mov.w	r1, #0
 801da4a:	f04f 0200 	mov.w	r2, #0
 801da4e:	00e2      	lsls	r2, r4, #3
 801da50:	ea42 7253 	orr.w	r2, r2, r3, lsr #29
 801da54:	00d9      	lsls	r1, r3, #3
 801da56:	460b      	mov	r3, r1
 801da58:	4614      	mov	r4, r2
 801da5a:	195b      	adds	r3, r3, r5
 801da5c:	eb44 0406 	adc.w	r4, r4, r6
 801da60:	f04f 0100 	mov.w	r1, #0
 801da64:	f04f 0200 	mov.w	r2, #0
 801da68:	02a2      	lsls	r2, r4, #10
 801da6a:	ea42 5293 	orr.w	r2, r2, r3, lsr #22
 801da6e:	0299      	lsls	r1, r3, #10
 801da70:	460b      	mov	r3, r1
 801da72:	4614      	mov	r4, r2
 801da74:	4618      	mov	r0, r3
 801da76:	4621      	mov	r1, r4
 801da78:	687b      	ldr	r3, [r7, #4]
 801da7a:	f04f 0400 	mov.w	r4, #0
 801da7e:	461a      	mov	r2, r3
 801da80:	4623      	mov	r3, r4
 801da82:	f7e3 f891 	bl	8000ba8 <__aeabi_uldivmod>
 801da86:	4603      	mov	r3, r0
 801da88:	460c      	mov	r4, r1
 801da8a:	60fb      	str	r3, [r7, #12]
      }
      pllp = ((((RCC->PLLCFGR & RCC_PLLCFGR_PLLP) >> RCC_PLLCFGR_PLLP_Pos) + 1U) *2U);
 801da8c:	4b0a      	ldr	r3, [pc, #40]	; (801dab8 <HAL_RCC_GetSysClockFreq+0x1a4>)
 801da8e:	685b      	ldr	r3, [r3, #4]
 801da90:	0c1b      	lsrs	r3, r3, #16
 801da92:	f003 0303 	and.w	r3, r3, #3
 801da96:	3301      	adds	r3, #1
 801da98:	005b      	lsls	r3, r3, #1
 801da9a:	603b      	str	r3, [r7, #0]

      sysclockfreq = pllvco/pllp;
 801da9c:	68fa      	ldr	r2, [r7, #12]
 801da9e:	683b      	ldr	r3, [r7, #0]
 801daa0:	fbb2 f3f3 	udiv	r3, r2, r3
 801daa4:	60bb      	str	r3, [r7, #8]
      break;
 801daa6:	e002      	b.n	801daae <HAL_RCC_GetSysClockFreq+0x19a>
    }
    default:
    {
      sysclockfreq = HSI_VALUE;
 801daa8:	4b04      	ldr	r3, [pc, #16]	; (801dabc <HAL_RCC_GetSysClockFreq+0x1a8>)
 801daaa:	60bb      	str	r3, [r7, #8]
      break;
 801daac:	bf00      	nop
    }
  }
  return sysclockfreq;
 801daae:	68bb      	ldr	r3, [r7, #8]
}
 801dab0:	4618      	mov	r0, r3
 801dab2:	3714      	adds	r7, #20
 801dab4:	46bd      	mov	sp, r7
 801dab6:	bdf0      	pop	{r4, r5, r6, r7, pc}
 801dab8:	40023800 	.word	0x40023800
 801dabc:	00f42400 	.word	0x00f42400
 801dac0:	007a1200 	.word	0x007a1200

0801dac4 <HAL_RCC_GetHCLKFreq>:
  * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency
  *         and updated within this function
  * @retval HCLK frequency
  */
uint32_t HAL_RCC_GetHCLKFreq(void)
{
 801dac4:	b480      	push	{r7}
 801dac6:	af00      	add	r7, sp, #0
  return SystemCoreClock;
 801dac8:	4b03      	ldr	r3, [pc, #12]	; (801dad8 <HAL_RCC_GetHCLKFreq+0x14>)
 801daca:	681b      	ldr	r3, [r3, #0]
}
 801dacc:	4618      	mov	r0, r3
 801dace:	46bd      	mov	sp, r7
 801dad0:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dad4:	4770      	bx	lr
 801dad6:	bf00      	nop
 801dad8:	20000000 	.word	0x20000000

0801dadc <HAL_RCC_GetPCLK1Freq>:
  * @note   Each time PCLK1 changes, this function must be called to update the
  *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK1 frequency
  */
uint32_t HAL_RCC_GetPCLK1Freq(void)
{
 801dadc:	b580      	push	{r7, lr}
 801dade:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1)>> RCC_CFGR_PPRE1_Pos]);
 801dae0:	f7ff fff0 	bl	801dac4 <HAL_RCC_GetHCLKFreq>
 801dae4:	4601      	mov	r1, r0
 801dae6:	4b05      	ldr	r3, [pc, #20]	; (801dafc <HAL_RCC_GetPCLK1Freq+0x20>)
 801dae8:	689b      	ldr	r3, [r3, #8]
 801daea:	0a9b      	lsrs	r3, r3, #10
 801daec:	f003 0307 	and.w	r3, r3, #7
 801daf0:	4a03      	ldr	r2, [pc, #12]	; (801db00 <HAL_RCC_GetPCLK1Freq+0x24>)
 801daf2:	5cd3      	ldrb	r3, [r2, r3]
 801daf4:	fa21 f303 	lsr.w	r3, r1, r3
}
 801daf8:	4618      	mov	r0, r3
 801dafa:	bd80      	pop	{r7, pc}
 801dafc:	40023800 	.word	0x40023800
 801db00:	08029f78 	.word	0x08029f78

0801db04 <HAL_RCC_GetPCLK2Freq>:
  * @note   Each time PCLK2 changes, this function must be called to update the
  *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrect.
  * @retval PCLK2 frequency
  */
uint32_t HAL_RCC_GetPCLK2Freq(void)
{
 801db04:	b580      	push	{r7, lr}
 801db06:	af00      	add	r7, sp, #0
  /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
  return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2)>> RCC_CFGR_PPRE2_Pos]);
 801db08:	f7ff ffdc 	bl	801dac4 <HAL_RCC_GetHCLKFreq>
 801db0c:	4601      	mov	r1, r0
 801db0e:	4b05      	ldr	r3, [pc, #20]	; (801db24 <HAL_RCC_GetPCLK2Freq+0x20>)
 801db10:	689b      	ldr	r3, [r3, #8]
 801db12:	0b5b      	lsrs	r3, r3, #13
 801db14:	f003 0307 	and.w	r3, r3, #7
 801db18:	4a03      	ldr	r2, [pc, #12]	; (801db28 <HAL_RCC_GetPCLK2Freq+0x24>)
 801db1a:	5cd3      	ldrb	r3, [r2, r3]
 801db1c:	fa21 f303 	lsr.w	r3, r1, r3
}
 801db20:	4618      	mov	r0, r3
 801db22:	bd80      	pop	{r7, pc}
 801db24:	40023800 	.word	0x40023800
 801db28:	08029f78 	.word	0x08029f78

0801db2c <HAL_TIM_Base_Init>:
  *         Ex: call @ref HAL_TIM_Base_DeInit() before HAL_TIM_Base_Init()
  * @param  htim TIM Base handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_Base_Init(TIM_HandleTypeDef *htim)
{
 801db2c:	b580      	push	{r7, lr}
 801db2e:	b082      	sub	sp, #8
 801db30:	af00      	add	r7, sp, #0
 801db32:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 801db34:	687b      	ldr	r3, [r7, #4]
 801db36:	2b00      	cmp	r3, #0
 801db38:	d101      	bne.n	801db3e <HAL_TIM_Base_Init+0x12>
  {
    return HAL_ERROR;
 801db3a:	2301      	movs	r3, #1
 801db3c:	e01d      	b.n	801db7a <HAL_TIM_Base_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 801db3e:	687b      	ldr	r3, [r7, #4]
 801db40:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 801db44:	b2db      	uxtb	r3, r3
 801db46:	2b00      	cmp	r3, #0
 801db48:	d106      	bne.n	801db58 <HAL_TIM_Base_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 801db4a:	687b      	ldr	r3, [r7, #4]
 801db4c:	2200      	movs	r2, #0
 801db4e:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->Base_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    HAL_TIM_Base_MspInit(htim);
 801db52:	6878      	ldr	r0, [r7, #4]
 801db54:	f7fd fe9a 	bl	801b88c <HAL_TIM_Base_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 801db58:	687b      	ldr	r3, [r7, #4]
 801db5a:	2202      	movs	r2, #2
 801db5c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Set the Time Base configuration */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 801db60:	687b      	ldr	r3, [r7, #4]
 801db62:	681a      	ldr	r2, [r3, #0]
 801db64:	687b      	ldr	r3, [r7, #4]
 801db66:	3304      	adds	r3, #4
 801db68:	4619      	mov	r1, r3
 801db6a:	4610      	mov	r0, r2
 801db6c:	f000 f9bc 	bl	801dee8 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 801db70:	687b      	ldr	r3, [r7, #4]
 801db72:	2201      	movs	r2, #1
 801db74:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 801db78:	2300      	movs	r3, #0
}
 801db7a:	4618      	mov	r0, r3
 801db7c:	3708      	adds	r7, #8
 801db7e:	46bd      	mov	sp, r7
 801db80:	bd80      	pop	{r7, pc}

0801db82 <HAL_TIM_PWM_Init>:
  *         Ex: call @ref HAL_TIM_PWM_DeInit() before HAL_TIM_PWM_Init()
  * @param  htim TIM PWM handle
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_Init(TIM_HandleTypeDef *htim)
{
 801db82:	b580      	push	{r7, lr}
 801db84:	b082      	sub	sp, #8
 801db86:	af00      	add	r7, sp, #0
 801db88:	6078      	str	r0, [r7, #4]
  /* Check the TIM handle allocation */
  if (htim == NULL)
 801db8a:	687b      	ldr	r3, [r7, #4]
 801db8c:	2b00      	cmp	r3, #0
 801db8e:	d101      	bne.n	801db94 <HAL_TIM_PWM_Init+0x12>
  {
    return HAL_ERROR;
 801db90:	2301      	movs	r3, #1
 801db92:	e01d      	b.n	801dbd0 <HAL_TIM_PWM_Init+0x4e>
  assert_param(IS_TIM_INSTANCE(htim->Instance));
  assert_param(IS_TIM_COUNTER_MODE(htim->Init.CounterMode));
  assert_param(IS_TIM_CLOCKDIVISION_DIV(htim->Init.ClockDivision));
  assert_param(IS_TIM_AUTORELOAD_PRELOAD(htim->Init.AutoReloadPreload));

  if (htim->State == HAL_TIM_STATE_RESET)
 801db94:	687b      	ldr	r3, [r7, #4]
 801db96:	f893 303d 	ldrb.w	r3, [r3, #61]	; 0x3d
 801db9a:	b2db      	uxtb	r3, r3
 801db9c:	2b00      	cmp	r3, #0
 801db9e:	d106      	bne.n	801dbae <HAL_TIM_PWM_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    htim->Lock = HAL_UNLOCKED;
 801dba0:	687b      	ldr	r3, [r7, #4]
 801dba2:	2200      	movs	r2, #0
 801dba4:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c
    }
    /* Init the low level hardware : GPIO, CLOCK, NVIC */
    htim->PWM_MspInitCallback(htim);
#else
    /* Init the low level hardware : GPIO, CLOCK, NVIC and DMA */
    HAL_TIM_PWM_MspInit(htim);
 801dba8:	6878      	ldr	r0, [r7, #4]
 801dbaa:	f000 f815 	bl	801dbd8 <HAL_TIM_PWM_MspInit>
#endif /* USE_HAL_TIM_REGISTER_CALLBACKS */
  }

  /* Set the TIM state */
  htim->State = HAL_TIM_STATE_BUSY;
 801dbae:	687b      	ldr	r3, [r7, #4]
 801dbb0:	2202      	movs	r2, #2
 801dbb2:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Init the base time for the PWM */
  TIM_Base_SetConfig(htim->Instance, &htim->Init);
 801dbb6:	687b      	ldr	r3, [r7, #4]
 801dbb8:	681a      	ldr	r2, [r3, #0]
 801dbba:	687b      	ldr	r3, [r7, #4]
 801dbbc:	3304      	adds	r3, #4
 801dbbe:	4619      	mov	r1, r3
 801dbc0:	4610      	mov	r0, r2
 801dbc2:	f000 f991 	bl	801dee8 <TIM_Base_SetConfig>

  /* Initialize the TIM state*/
  htim->State = HAL_TIM_STATE_READY;
 801dbc6:	687b      	ldr	r3, [r7, #4]
 801dbc8:	2201      	movs	r2, #1
 801dbca:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  return HAL_OK;
 801dbce:	2300      	movs	r3, #0
}
 801dbd0:	4618      	mov	r0, r3
 801dbd2:	3708      	adds	r7, #8
 801dbd4:	46bd      	mov	sp, r7
 801dbd6:	bd80      	pop	{r7, pc}

0801dbd8 <HAL_TIM_PWM_MspInit>:
  * @brief  Initializes the TIM PWM MSP.
  * @param  htim TIM PWM handle
  * @retval None
  */
__weak void HAL_TIM_PWM_MspInit(TIM_HandleTypeDef *htim)
{
 801dbd8:	b480      	push	{r7}
 801dbda:	b083      	sub	sp, #12
 801dbdc:	af00      	add	r7, sp, #0
 801dbde:	6078      	str	r0, [r7, #4]
  UNUSED(htim);

  /* NOTE : This function should not be modified, when the callback is needed,
            the HAL_TIM_PWM_MspInit could be implemented in the user file
   */
}
 801dbe0:	bf00      	nop
 801dbe2:	370c      	adds	r7, #12
 801dbe4:	46bd      	mov	sp, r7
 801dbe6:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dbea:	4770      	bx	lr

0801dbec <HAL_TIM_PWM_ConfigChannel>:
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_PWM_ConfigChannel(TIM_HandleTypeDef *htim,
                                            TIM_OC_InitTypeDef *sConfig,
                                            uint32_t Channel)
{
 801dbec:	b580      	push	{r7, lr}
 801dbee:	b084      	sub	sp, #16
 801dbf0:	af00      	add	r7, sp, #0
 801dbf2:	60f8      	str	r0, [r7, #12]
 801dbf4:	60b9      	str	r1, [r7, #8]
 801dbf6:	607a      	str	r2, [r7, #4]
  assert_param(IS_TIM_PWM_MODE(sConfig->OCMode));
  assert_param(IS_TIM_OC_POLARITY(sConfig->OCPolarity));
  assert_param(IS_TIM_FAST_STATE(sConfig->OCFastMode));

  /* Process Locked */
  __HAL_LOCK(htim);
 801dbf8:	68fb      	ldr	r3, [r7, #12]
 801dbfa:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 801dbfe:	2b01      	cmp	r3, #1
 801dc00:	d101      	bne.n	801dc06 <HAL_TIM_PWM_ConfigChannel+0x1a>
 801dc02:	2302      	movs	r3, #2
 801dc04:	e0b4      	b.n	801dd70 <HAL_TIM_PWM_ConfigChannel+0x184>
 801dc06:	68fb      	ldr	r3, [r7, #12]
 801dc08:	2201      	movs	r2, #1
 801dc0a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 801dc0e:	68fb      	ldr	r3, [r7, #12]
 801dc10:	2202      	movs	r2, #2
 801dc12:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  switch (Channel)
 801dc16:	687b      	ldr	r3, [r7, #4]
 801dc18:	2b0c      	cmp	r3, #12
 801dc1a:	f200 809f 	bhi.w	801dd5c <HAL_TIM_PWM_ConfigChannel+0x170>
 801dc1e:	a201      	add	r2, pc, #4	; (adr r2, 801dc24 <HAL_TIM_PWM_ConfigChannel+0x38>)
 801dc20:	f852 f023 	ldr.w	pc, [r2, r3, lsl #2]
 801dc24:	0801dc59 	.word	0x0801dc59
 801dc28:	0801dd5d 	.word	0x0801dd5d
 801dc2c:	0801dd5d 	.word	0x0801dd5d
 801dc30:	0801dd5d 	.word	0x0801dd5d
 801dc34:	0801dc99 	.word	0x0801dc99
 801dc38:	0801dd5d 	.word	0x0801dd5d
 801dc3c:	0801dd5d 	.word	0x0801dd5d
 801dc40:	0801dd5d 	.word	0x0801dd5d
 801dc44:	0801dcdb 	.word	0x0801dcdb
 801dc48:	0801dd5d 	.word	0x0801dd5d
 801dc4c:	0801dd5d 	.word	0x0801dd5d
 801dc50:	0801dd5d 	.word	0x0801dd5d
 801dc54:	0801dd1b 	.word	0x0801dd1b
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC1_INSTANCE(htim->Instance));

      /* Configure the Channel 1 in PWM mode */
      TIM_OC1_SetConfig(htim->Instance, sConfig);
 801dc58:	68fb      	ldr	r3, [r7, #12]
 801dc5a:	681b      	ldr	r3, [r3, #0]
 801dc5c:	68b9      	ldr	r1, [r7, #8]
 801dc5e:	4618      	mov	r0, r3
 801dc60:	f000 f9c2 	bl	801dfe8 <TIM_OC1_SetConfig>

      /* Set the Preload enable bit for channel1 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC1PE;
 801dc64:	68fb      	ldr	r3, [r7, #12]
 801dc66:	681b      	ldr	r3, [r3, #0]
 801dc68:	699a      	ldr	r2, [r3, #24]
 801dc6a:	68fb      	ldr	r3, [r7, #12]
 801dc6c:	681b      	ldr	r3, [r3, #0]
 801dc6e:	f042 0208 	orr.w	r2, r2, #8
 801dc72:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC1FE;
 801dc74:	68fb      	ldr	r3, [r7, #12]
 801dc76:	681b      	ldr	r3, [r3, #0]
 801dc78:	699a      	ldr	r2, [r3, #24]
 801dc7a:	68fb      	ldr	r3, [r7, #12]
 801dc7c:	681b      	ldr	r3, [r3, #0]
 801dc7e:	f022 0204 	bic.w	r2, r2, #4
 801dc82:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode;
 801dc84:	68fb      	ldr	r3, [r7, #12]
 801dc86:	681b      	ldr	r3, [r3, #0]
 801dc88:	6999      	ldr	r1, [r3, #24]
 801dc8a:	68bb      	ldr	r3, [r7, #8]
 801dc8c:	691a      	ldr	r2, [r3, #16]
 801dc8e:	68fb      	ldr	r3, [r7, #12]
 801dc90:	681b      	ldr	r3, [r3, #0]
 801dc92:	430a      	orrs	r2, r1
 801dc94:	619a      	str	r2, [r3, #24]
      break;
 801dc96:	e062      	b.n	801dd5e <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC2_INSTANCE(htim->Instance));

      /* Configure the Channel 2 in PWM mode */
      TIM_OC2_SetConfig(htim->Instance, sConfig);
 801dc98:	68fb      	ldr	r3, [r7, #12]
 801dc9a:	681b      	ldr	r3, [r3, #0]
 801dc9c:	68b9      	ldr	r1, [r7, #8]
 801dc9e:	4618      	mov	r0, r3
 801dca0:	f000 fa08 	bl	801e0b4 <TIM_OC2_SetConfig>

      /* Set the Preload enable bit for channel2 */
      htim->Instance->CCMR1 |= TIM_CCMR1_OC2PE;
 801dca4:	68fb      	ldr	r3, [r7, #12]
 801dca6:	681b      	ldr	r3, [r3, #0]
 801dca8:	699a      	ldr	r2, [r3, #24]
 801dcaa:	68fb      	ldr	r3, [r7, #12]
 801dcac:	681b      	ldr	r3, [r3, #0]
 801dcae:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 801dcb2:	619a      	str	r2, [r3, #24]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR1 &= ~TIM_CCMR1_OC2FE;
 801dcb4:	68fb      	ldr	r3, [r7, #12]
 801dcb6:	681b      	ldr	r3, [r3, #0]
 801dcb8:	699a      	ldr	r2, [r3, #24]
 801dcba:	68fb      	ldr	r3, [r7, #12]
 801dcbc:	681b      	ldr	r3, [r3, #0]
 801dcbe:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 801dcc2:	619a      	str	r2, [r3, #24]
      htim->Instance->CCMR1 |= sConfig->OCFastMode << 8U;
 801dcc4:	68fb      	ldr	r3, [r7, #12]
 801dcc6:	681b      	ldr	r3, [r3, #0]
 801dcc8:	6999      	ldr	r1, [r3, #24]
 801dcca:	68bb      	ldr	r3, [r7, #8]
 801dccc:	691b      	ldr	r3, [r3, #16]
 801dcce:	021a      	lsls	r2, r3, #8
 801dcd0:	68fb      	ldr	r3, [r7, #12]
 801dcd2:	681b      	ldr	r3, [r3, #0]
 801dcd4:	430a      	orrs	r2, r1
 801dcd6:	619a      	str	r2, [r3, #24]
      break;
 801dcd8:	e041      	b.n	801dd5e <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC3_INSTANCE(htim->Instance));

      /* Configure the Channel 3 in PWM mode */
      TIM_OC3_SetConfig(htim->Instance, sConfig);
 801dcda:	68fb      	ldr	r3, [r7, #12]
 801dcdc:	681b      	ldr	r3, [r3, #0]
 801dcde:	68b9      	ldr	r1, [r7, #8]
 801dce0:	4618      	mov	r0, r3
 801dce2:	f000 fa53 	bl	801e18c <TIM_OC3_SetConfig>

      /* Set the Preload enable bit for channel3 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC3PE;
 801dce6:	68fb      	ldr	r3, [r7, #12]
 801dce8:	681b      	ldr	r3, [r3, #0]
 801dcea:	69da      	ldr	r2, [r3, #28]
 801dcec:	68fb      	ldr	r3, [r7, #12]
 801dcee:	681b      	ldr	r3, [r3, #0]
 801dcf0:	f042 0208 	orr.w	r2, r2, #8
 801dcf4:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC3FE;
 801dcf6:	68fb      	ldr	r3, [r7, #12]
 801dcf8:	681b      	ldr	r3, [r3, #0]
 801dcfa:	69da      	ldr	r2, [r3, #28]
 801dcfc:	68fb      	ldr	r3, [r7, #12]
 801dcfe:	681b      	ldr	r3, [r3, #0]
 801dd00:	f022 0204 	bic.w	r2, r2, #4
 801dd04:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode;
 801dd06:	68fb      	ldr	r3, [r7, #12]
 801dd08:	681b      	ldr	r3, [r3, #0]
 801dd0a:	69d9      	ldr	r1, [r3, #28]
 801dd0c:	68bb      	ldr	r3, [r7, #8]
 801dd0e:	691a      	ldr	r2, [r3, #16]
 801dd10:	68fb      	ldr	r3, [r7, #12]
 801dd12:	681b      	ldr	r3, [r3, #0]
 801dd14:	430a      	orrs	r2, r1
 801dd16:	61da      	str	r2, [r3, #28]
      break;
 801dd18:	e021      	b.n	801dd5e <HAL_TIM_PWM_ConfigChannel+0x172>
    {
      /* Check the parameters */
      assert_param(IS_TIM_CC4_INSTANCE(htim->Instance));

      /* Configure the Channel 4 in PWM mode */
      TIM_OC4_SetConfig(htim->Instance, sConfig);
 801dd1a:	68fb      	ldr	r3, [r7, #12]
 801dd1c:	681b      	ldr	r3, [r3, #0]
 801dd1e:	68b9      	ldr	r1, [r7, #8]
 801dd20:	4618      	mov	r0, r3
 801dd22:	f000 fa9d 	bl	801e260 <TIM_OC4_SetConfig>

      /* Set the Preload enable bit for channel4 */
      htim->Instance->CCMR2 |= TIM_CCMR2_OC4PE;
 801dd26:	68fb      	ldr	r3, [r7, #12]
 801dd28:	681b      	ldr	r3, [r3, #0]
 801dd2a:	69da      	ldr	r2, [r3, #28]
 801dd2c:	68fb      	ldr	r3, [r7, #12]
 801dd2e:	681b      	ldr	r3, [r3, #0]
 801dd30:	f442 6200 	orr.w	r2, r2, #2048	; 0x800
 801dd34:	61da      	str	r2, [r3, #28]

      /* Configure the Output Fast mode */
      htim->Instance->CCMR2 &= ~TIM_CCMR2_OC4FE;
 801dd36:	68fb      	ldr	r3, [r7, #12]
 801dd38:	681b      	ldr	r3, [r3, #0]
 801dd3a:	69da      	ldr	r2, [r3, #28]
 801dd3c:	68fb      	ldr	r3, [r7, #12]
 801dd3e:	681b      	ldr	r3, [r3, #0]
 801dd40:	f422 6280 	bic.w	r2, r2, #1024	; 0x400
 801dd44:	61da      	str	r2, [r3, #28]
      htim->Instance->CCMR2 |= sConfig->OCFastMode << 8U;
 801dd46:	68fb      	ldr	r3, [r7, #12]
 801dd48:	681b      	ldr	r3, [r3, #0]
 801dd4a:	69d9      	ldr	r1, [r3, #28]
 801dd4c:	68bb      	ldr	r3, [r7, #8]
 801dd4e:	691b      	ldr	r3, [r3, #16]
 801dd50:	021a      	lsls	r2, r3, #8
 801dd52:	68fb      	ldr	r3, [r7, #12]
 801dd54:	681b      	ldr	r3, [r3, #0]
 801dd56:	430a      	orrs	r2, r1
 801dd58:	61da      	str	r2, [r3, #28]
      break;
 801dd5a:	e000      	b.n	801dd5e <HAL_TIM_PWM_ConfigChannel+0x172>
    }

    default:
      break;
 801dd5c:	bf00      	nop
  }

  htim->State = HAL_TIM_STATE_READY;
 801dd5e:	68fb      	ldr	r3, [r7, #12]
 801dd60:	2201      	movs	r2, #1
 801dd62:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 801dd66:	68fb      	ldr	r3, [r7, #12]
 801dd68:	2200      	movs	r2, #0
 801dd6a:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 801dd6e:	2300      	movs	r3, #0
}
 801dd70:	4618      	mov	r0, r3
 801dd72:	3710      	adds	r7, #16
 801dd74:	46bd      	mov	sp, r7
 801dd76:	bd80      	pop	{r7, pc}

0801dd78 <HAL_TIM_ConfigClockSource>:
  * @param  sClockSourceConfig pointer to a TIM_ClockConfigTypeDef structure that
  *         contains the clock source information for the TIM peripheral.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIM_ConfigClockSource(TIM_HandleTypeDef *htim, TIM_ClockConfigTypeDef *sClockSourceConfig)
{
 801dd78:	b580      	push	{r7, lr}
 801dd7a:	b084      	sub	sp, #16
 801dd7c:	af00      	add	r7, sp, #0
 801dd7e:	6078      	str	r0, [r7, #4]
 801dd80:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Process Locked */
  __HAL_LOCK(htim);
 801dd82:	687b      	ldr	r3, [r7, #4]
 801dd84:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 801dd88:	2b01      	cmp	r3, #1
 801dd8a:	d101      	bne.n	801dd90 <HAL_TIM_ConfigClockSource+0x18>
 801dd8c:	2302      	movs	r3, #2
 801dd8e:	e0a6      	b.n	801dede <HAL_TIM_ConfigClockSource+0x166>
 801dd90:	687b      	ldr	r3, [r7, #4]
 801dd92:	2201      	movs	r2, #1
 801dd94:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  htim->State = HAL_TIM_STATE_BUSY;
 801dd98:	687b      	ldr	r3, [r7, #4]
 801dd9a:	2202      	movs	r2, #2
 801dd9c:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Check the parameters */
  assert_param(IS_TIM_CLOCKSOURCE(sClockSourceConfig->ClockSource));

  /* Reset the SMS, TS, ECE, ETPS and ETRF bits */
  tmpsmcr = htim->Instance->SMCR;
 801dda0:	687b      	ldr	r3, [r7, #4]
 801dda2:	681b      	ldr	r3, [r3, #0]
 801dda4:	689b      	ldr	r3, [r3, #8]
 801dda6:	60fb      	str	r3, [r7, #12]
  tmpsmcr &= ~(TIM_SMCR_SMS | TIM_SMCR_TS);
 801dda8:	68fb      	ldr	r3, [r7, #12]
 801ddaa:	f023 0377 	bic.w	r3, r3, #119	; 0x77
 801ddae:	60fb      	str	r3, [r7, #12]
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 801ddb0:	68fb      	ldr	r3, [r7, #12]
 801ddb2:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 801ddb6:	60fb      	str	r3, [r7, #12]
  htim->Instance->SMCR = tmpsmcr;
 801ddb8:	687b      	ldr	r3, [r7, #4]
 801ddba:	681b      	ldr	r3, [r3, #0]
 801ddbc:	68fa      	ldr	r2, [r7, #12]
 801ddbe:	609a      	str	r2, [r3, #8]

  switch (sClockSourceConfig->ClockSource)
 801ddc0:	683b      	ldr	r3, [r7, #0]
 801ddc2:	681b      	ldr	r3, [r3, #0]
 801ddc4:	2b40      	cmp	r3, #64	; 0x40
 801ddc6:	d067      	beq.n	801de98 <HAL_TIM_ConfigClockSource+0x120>
 801ddc8:	2b40      	cmp	r3, #64	; 0x40
 801ddca:	d80b      	bhi.n	801dde4 <HAL_TIM_ConfigClockSource+0x6c>
 801ddcc:	2b10      	cmp	r3, #16
 801ddce:	d073      	beq.n	801deb8 <HAL_TIM_ConfigClockSource+0x140>
 801ddd0:	2b10      	cmp	r3, #16
 801ddd2:	d802      	bhi.n	801ddda <HAL_TIM_ConfigClockSource+0x62>
 801ddd4:	2b00      	cmp	r3, #0
 801ddd6:	d06f      	beq.n	801deb8 <HAL_TIM_ConfigClockSource+0x140>
      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
      break;
    }

    default:
      break;
 801ddd8:	e078      	b.n	801decc <HAL_TIM_ConfigClockSource+0x154>
  switch (sClockSourceConfig->ClockSource)
 801ddda:	2b20      	cmp	r3, #32
 801dddc:	d06c      	beq.n	801deb8 <HAL_TIM_ConfigClockSource+0x140>
 801ddde:	2b30      	cmp	r3, #48	; 0x30
 801dde0:	d06a      	beq.n	801deb8 <HAL_TIM_ConfigClockSource+0x140>
      break;
 801dde2:	e073      	b.n	801decc <HAL_TIM_ConfigClockSource+0x154>
  switch (sClockSourceConfig->ClockSource)
 801dde4:	2b70      	cmp	r3, #112	; 0x70
 801dde6:	d00d      	beq.n	801de04 <HAL_TIM_ConfigClockSource+0x8c>
 801dde8:	2b70      	cmp	r3, #112	; 0x70
 801ddea:	d804      	bhi.n	801ddf6 <HAL_TIM_ConfigClockSource+0x7e>
 801ddec:	2b50      	cmp	r3, #80	; 0x50
 801ddee:	d033      	beq.n	801de58 <HAL_TIM_ConfigClockSource+0xe0>
 801ddf0:	2b60      	cmp	r3, #96	; 0x60
 801ddf2:	d041      	beq.n	801de78 <HAL_TIM_ConfigClockSource+0x100>
      break;
 801ddf4:	e06a      	b.n	801decc <HAL_TIM_ConfigClockSource+0x154>
  switch (sClockSourceConfig->ClockSource)
 801ddf6:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 801ddfa:	d066      	beq.n	801deca <HAL_TIM_ConfigClockSource+0x152>
 801ddfc:	f5b3 5f00 	cmp.w	r3, #8192	; 0x2000
 801de00:	d017      	beq.n	801de32 <HAL_TIM_ConfigClockSource+0xba>
      break;
 801de02:	e063      	b.n	801decc <HAL_TIM_ConfigClockSource+0x154>
      TIM_ETR_SetConfig(htim->Instance,
 801de04:	687b      	ldr	r3, [r7, #4]
 801de06:	6818      	ldr	r0, [r3, #0]
 801de08:	683b      	ldr	r3, [r7, #0]
 801de0a:	6899      	ldr	r1, [r3, #8]
 801de0c:	683b      	ldr	r3, [r7, #0]
 801de0e:	685a      	ldr	r2, [r3, #4]
 801de10:	683b      	ldr	r3, [r7, #0]
 801de12:	68db      	ldr	r3, [r3, #12]
 801de14:	f000 faee 	bl	801e3f4 <TIM_ETR_SetConfig>
      tmpsmcr = htim->Instance->SMCR;
 801de18:	687b      	ldr	r3, [r7, #4]
 801de1a:	681b      	ldr	r3, [r3, #0]
 801de1c:	689b      	ldr	r3, [r3, #8]
 801de1e:	60fb      	str	r3, [r7, #12]
      tmpsmcr |= (TIM_SLAVEMODE_EXTERNAL1 | TIM_CLOCKSOURCE_ETRMODE1);
 801de20:	68fb      	ldr	r3, [r7, #12]
 801de22:	f043 0377 	orr.w	r3, r3, #119	; 0x77
 801de26:	60fb      	str	r3, [r7, #12]
      htim->Instance->SMCR = tmpsmcr;
 801de28:	687b      	ldr	r3, [r7, #4]
 801de2a:	681b      	ldr	r3, [r3, #0]
 801de2c:	68fa      	ldr	r2, [r7, #12]
 801de2e:	609a      	str	r2, [r3, #8]
      break;
 801de30:	e04c      	b.n	801decc <HAL_TIM_ConfigClockSource+0x154>
      TIM_ETR_SetConfig(htim->Instance,
 801de32:	687b      	ldr	r3, [r7, #4]
 801de34:	6818      	ldr	r0, [r3, #0]
 801de36:	683b      	ldr	r3, [r7, #0]
 801de38:	6899      	ldr	r1, [r3, #8]
 801de3a:	683b      	ldr	r3, [r7, #0]
 801de3c:	685a      	ldr	r2, [r3, #4]
 801de3e:	683b      	ldr	r3, [r7, #0]
 801de40:	68db      	ldr	r3, [r3, #12]
 801de42:	f000 fad7 	bl	801e3f4 <TIM_ETR_SetConfig>
      htim->Instance->SMCR |= TIM_SMCR_ECE;
 801de46:	687b      	ldr	r3, [r7, #4]
 801de48:	681b      	ldr	r3, [r3, #0]
 801de4a:	689a      	ldr	r2, [r3, #8]
 801de4c:	687b      	ldr	r3, [r7, #4]
 801de4e:	681b      	ldr	r3, [r3, #0]
 801de50:	f442 4280 	orr.w	r2, r2, #16384	; 0x4000
 801de54:	609a      	str	r2, [r3, #8]
      break;
 801de56:	e039      	b.n	801decc <HAL_TIM_ConfigClockSource+0x154>
      TIM_TI1_ConfigInputStage(htim->Instance,
 801de58:	687b      	ldr	r3, [r7, #4]
 801de5a:	6818      	ldr	r0, [r3, #0]
 801de5c:	683b      	ldr	r3, [r7, #0]
 801de5e:	6859      	ldr	r1, [r3, #4]
 801de60:	683b      	ldr	r3, [r7, #0]
 801de62:	68db      	ldr	r3, [r3, #12]
 801de64:	461a      	mov	r2, r3
 801de66:	f000 fa4b 	bl	801e300 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1);
 801de6a:	687b      	ldr	r3, [r7, #4]
 801de6c:	681b      	ldr	r3, [r3, #0]
 801de6e:	2150      	movs	r1, #80	; 0x50
 801de70:	4618      	mov	r0, r3
 801de72:	f000 faa4 	bl	801e3be <TIM_ITRx_SetConfig>
      break;
 801de76:	e029      	b.n	801decc <HAL_TIM_ConfigClockSource+0x154>
      TIM_TI2_ConfigInputStage(htim->Instance,
 801de78:	687b      	ldr	r3, [r7, #4]
 801de7a:	6818      	ldr	r0, [r3, #0]
 801de7c:	683b      	ldr	r3, [r7, #0]
 801de7e:	6859      	ldr	r1, [r3, #4]
 801de80:	683b      	ldr	r3, [r7, #0]
 801de82:	68db      	ldr	r3, [r3, #12]
 801de84:	461a      	mov	r2, r3
 801de86:	f000 fa6a 	bl	801e35e <TIM_TI2_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI2);
 801de8a:	687b      	ldr	r3, [r7, #4]
 801de8c:	681b      	ldr	r3, [r3, #0]
 801de8e:	2160      	movs	r1, #96	; 0x60
 801de90:	4618      	mov	r0, r3
 801de92:	f000 fa94 	bl	801e3be <TIM_ITRx_SetConfig>
      break;
 801de96:	e019      	b.n	801decc <HAL_TIM_ConfigClockSource+0x154>
      TIM_TI1_ConfigInputStage(htim->Instance,
 801de98:	687b      	ldr	r3, [r7, #4]
 801de9a:	6818      	ldr	r0, [r3, #0]
 801de9c:	683b      	ldr	r3, [r7, #0]
 801de9e:	6859      	ldr	r1, [r3, #4]
 801dea0:	683b      	ldr	r3, [r7, #0]
 801dea2:	68db      	ldr	r3, [r3, #12]
 801dea4:	461a      	mov	r2, r3
 801dea6:	f000 fa2b 	bl	801e300 <TIM_TI1_ConfigInputStage>
      TIM_ITRx_SetConfig(htim->Instance, TIM_CLOCKSOURCE_TI1ED);
 801deaa:	687b      	ldr	r3, [r7, #4]
 801deac:	681b      	ldr	r3, [r3, #0]
 801deae:	2140      	movs	r1, #64	; 0x40
 801deb0:	4618      	mov	r0, r3
 801deb2:	f000 fa84 	bl	801e3be <TIM_ITRx_SetConfig>
      break;
 801deb6:	e009      	b.n	801decc <HAL_TIM_ConfigClockSource+0x154>
      TIM_ITRx_SetConfig(htim->Instance, sClockSourceConfig->ClockSource);
 801deb8:	687b      	ldr	r3, [r7, #4]
 801deba:	681a      	ldr	r2, [r3, #0]
 801debc:	683b      	ldr	r3, [r7, #0]
 801debe:	681b      	ldr	r3, [r3, #0]
 801dec0:	4619      	mov	r1, r3
 801dec2:	4610      	mov	r0, r2
 801dec4:	f000 fa7b 	bl	801e3be <TIM_ITRx_SetConfig>
      break;
 801dec8:	e000      	b.n	801decc <HAL_TIM_ConfigClockSource+0x154>
      break;
 801deca:	bf00      	nop
  }
  htim->State = HAL_TIM_STATE_READY;
 801decc:	687b      	ldr	r3, [r7, #4]
 801dece:	2201      	movs	r2, #1
 801ded0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 801ded4:	687b      	ldr	r3, [r7, #4]
 801ded6:	2200      	movs	r2, #0
 801ded8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 801dedc:	2300      	movs	r3, #0
}
 801dede:	4618      	mov	r0, r3
 801dee0:	3710      	adds	r7, #16
 801dee2:	46bd      	mov	sp, r7
 801dee4:	bd80      	pop	{r7, pc}
	...

0801dee8 <TIM_Base_SetConfig>:
  * @param  TIMx TIM peripheral
  * @param  Structure TIM Base configuration structure
  * @retval None
  */
void TIM_Base_SetConfig(TIM_TypeDef *TIMx, TIM_Base_InitTypeDef *Structure)
{
 801dee8:	b480      	push	{r7}
 801deea:	b085      	sub	sp, #20
 801deec:	af00      	add	r7, sp, #0
 801deee:	6078      	str	r0, [r7, #4]
 801def0:	6039      	str	r1, [r7, #0]
  uint32_t tmpcr1;
  tmpcr1 = TIMx->CR1;
 801def2:	687b      	ldr	r3, [r7, #4]
 801def4:	681b      	ldr	r3, [r3, #0]
 801def6:	60fb      	str	r3, [r7, #12]

  /* Set TIM Time Base Unit parameters ---------------------------------------*/
  if (IS_TIM_COUNTER_MODE_SELECT_INSTANCE(TIMx))
 801def8:	687b      	ldr	r3, [r7, #4]
 801defa:	4a34      	ldr	r2, [pc, #208]	; (801dfcc <TIM_Base_SetConfig+0xe4>)
 801defc:	4293      	cmp	r3, r2
 801defe:	d00f      	beq.n	801df20 <TIM_Base_SetConfig+0x38>
 801df00:	687b      	ldr	r3, [r7, #4]
 801df02:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 801df06:	d00b      	beq.n	801df20 <TIM_Base_SetConfig+0x38>
 801df08:	687b      	ldr	r3, [r7, #4]
 801df0a:	4a31      	ldr	r2, [pc, #196]	; (801dfd0 <TIM_Base_SetConfig+0xe8>)
 801df0c:	4293      	cmp	r3, r2
 801df0e:	d007      	beq.n	801df20 <TIM_Base_SetConfig+0x38>
 801df10:	687b      	ldr	r3, [r7, #4]
 801df12:	4a30      	ldr	r2, [pc, #192]	; (801dfd4 <TIM_Base_SetConfig+0xec>)
 801df14:	4293      	cmp	r3, r2
 801df16:	d003      	beq.n	801df20 <TIM_Base_SetConfig+0x38>
 801df18:	687b      	ldr	r3, [r7, #4]
 801df1a:	4a2f      	ldr	r2, [pc, #188]	; (801dfd8 <TIM_Base_SetConfig+0xf0>)
 801df1c:	4293      	cmp	r3, r2
 801df1e:	d108      	bne.n	801df32 <TIM_Base_SetConfig+0x4a>
  {
    /* Select the Counter Mode */
    tmpcr1 &= ~(TIM_CR1_DIR | TIM_CR1_CMS);
 801df20:	68fb      	ldr	r3, [r7, #12]
 801df22:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801df26:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= Structure->CounterMode;
 801df28:	683b      	ldr	r3, [r7, #0]
 801df2a:	685b      	ldr	r3, [r3, #4]
 801df2c:	68fa      	ldr	r2, [r7, #12]
 801df2e:	4313      	orrs	r3, r2
 801df30:	60fb      	str	r3, [r7, #12]
  }

  if (IS_TIM_CLOCK_DIVISION_INSTANCE(TIMx))
 801df32:	687b      	ldr	r3, [r7, #4]
 801df34:	4a25      	ldr	r2, [pc, #148]	; (801dfcc <TIM_Base_SetConfig+0xe4>)
 801df36:	4293      	cmp	r3, r2
 801df38:	d01b      	beq.n	801df72 <TIM_Base_SetConfig+0x8a>
 801df3a:	687b      	ldr	r3, [r7, #4]
 801df3c:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 801df40:	d017      	beq.n	801df72 <TIM_Base_SetConfig+0x8a>
 801df42:	687b      	ldr	r3, [r7, #4]
 801df44:	4a22      	ldr	r2, [pc, #136]	; (801dfd0 <TIM_Base_SetConfig+0xe8>)
 801df46:	4293      	cmp	r3, r2
 801df48:	d013      	beq.n	801df72 <TIM_Base_SetConfig+0x8a>
 801df4a:	687b      	ldr	r3, [r7, #4]
 801df4c:	4a21      	ldr	r2, [pc, #132]	; (801dfd4 <TIM_Base_SetConfig+0xec>)
 801df4e:	4293      	cmp	r3, r2
 801df50:	d00f      	beq.n	801df72 <TIM_Base_SetConfig+0x8a>
 801df52:	687b      	ldr	r3, [r7, #4]
 801df54:	4a20      	ldr	r2, [pc, #128]	; (801dfd8 <TIM_Base_SetConfig+0xf0>)
 801df56:	4293      	cmp	r3, r2
 801df58:	d00b      	beq.n	801df72 <TIM_Base_SetConfig+0x8a>
 801df5a:	687b      	ldr	r3, [r7, #4]
 801df5c:	4a1f      	ldr	r2, [pc, #124]	; (801dfdc <TIM_Base_SetConfig+0xf4>)
 801df5e:	4293      	cmp	r3, r2
 801df60:	d007      	beq.n	801df72 <TIM_Base_SetConfig+0x8a>
 801df62:	687b      	ldr	r3, [r7, #4]
 801df64:	4a1e      	ldr	r2, [pc, #120]	; (801dfe0 <TIM_Base_SetConfig+0xf8>)
 801df66:	4293      	cmp	r3, r2
 801df68:	d003      	beq.n	801df72 <TIM_Base_SetConfig+0x8a>
 801df6a:	687b      	ldr	r3, [r7, #4]
 801df6c:	4a1d      	ldr	r2, [pc, #116]	; (801dfe4 <TIM_Base_SetConfig+0xfc>)
 801df6e:	4293      	cmp	r3, r2
 801df70:	d108      	bne.n	801df84 <TIM_Base_SetConfig+0x9c>
  {
    /* Set the clock division */
    tmpcr1 &= ~TIM_CR1_CKD;
 801df72:	68fb      	ldr	r3, [r7, #12]
 801df74:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 801df78:	60fb      	str	r3, [r7, #12]
    tmpcr1 |= (uint32_t)Structure->ClockDivision;
 801df7a:	683b      	ldr	r3, [r7, #0]
 801df7c:	68db      	ldr	r3, [r3, #12]
 801df7e:	68fa      	ldr	r2, [r7, #12]
 801df80:	4313      	orrs	r3, r2
 801df82:	60fb      	str	r3, [r7, #12]
  }

  /* Set the auto-reload preload */
  MODIFY_REG(tmpcr1, TIM_CR1_ARPE, Structure->AutoReloadPreload);
 801df84:	68fb      	ldr	r3, [r7, #12]
 801df86:	f023 0280 	bic.w	r2, r3, #128	; 0x80
 801df8a:	683b      	ldr	r3, [r7, #0]
 801df8c:	695b      	ldr	r3, [r3, #20]
 801df8e:	4313      	orrs	r3, r2
 801df90:	60fb      	str	r3, [r7, #12]

  TIMx->CR1 = tmpcr1;
 801df92:	687b      	ldr	r3, [r7, #4]
 801df94:	68fa      	ldr	r2, [r7, #12]
 801df96:	601a      	str	r2, [r3, #0]

  /* Set the Autoreload value */
  TIMx->ARR = (uint32_t)Structure->Period ;
 801df98:	683b      	ldr	r3, [r7, #0]
 801df9a:	689a      	ldr	r2, [r3, #8]
 801df9c:	687b      	ldr	r3, [r7, #4]
 801df9e:	62da      	str	r2, [r3, #44]	; 0x2c

  /* Set the Prescaler value */
  TIMx->PSC = Structure->Prescaler;
 801dfa0:	683b      	ldr	r3, [r7, #0]
 801dfa2:	681a      	ldr	r2, [r3, #0]
 801dfa4:	687b      	ldr	r3, [r7, #4]
 801dfa6:	629a      	str	r2, [r3, #40]	; 0x28

  if (IS_TIM_REPETITION_COUNTER_INSTANCE(TIMx))
 801dfa8:	687b      	ldr	r3, [r7, #4]
 801dfaa:	4a08      	ldr	r2, [pc, #32]	; (801dfcc <TIM_Base_SetConfig+0xe4>)
 801dfac:	4293      	cmp	r3, r2
 801dfae:	d103      	bne.n	801dfb8 <TIM_Base_SetConfig+0xd0>
  {
    /* Set the Repetition Counter value */
    TIMx->RCR = Structure->RepetitionCounter;
 801dfb0:	683b      	ldr	r3, [r7, #0]
 801dfb2:	691a      	ldr	r2, [r3, #16]
 801dfb4:	687b      	ldr	r3, [r7, #4]
 801dfb6:	631a      	str	r2, [r3, #48]	; 0x30
  }

  /* Generate an update event to reload the Prescaler
     and the repetition counter (only for advanced timer) value immediately */
  TIMx->EGR = TIM_EGR_UG;
 801dfb8:	687b      	ldr	r3, [r7, #4]
 801dfba:	2201      	movs	r2, #1
 801dfbc:	615a      	str	r2, [r3, #20]
}
 801dfbe:	bf00      	nop
 801dfc0:	3714      	adds	r7, #20
 801dfc2:	46bd      	mov	sp, r7
 801dfc4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801dfc8:	4770      	bx	lr
 801dfca:	bf00      	nop
 801dfcc:	40010000 	.word	0x40010000
 801dfd0:	40000400 	.word	0x40000400
 801dfd4:	40000800 	.word	0x40000800
 801dfd8:	40000c00 	.word	0x40000c00
 801dfdc:	40014000 	.word	0x40014000
 801dfe0:	40014400 	.word	0x40014400
 801dfe4:	40014800 	.word	0x40014800

0801dfe8 <TIM_OC1_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC1_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 801dfe8:	b480      	push	{r7}
 801dfea:	b087      	sub	sp, #28
 801dfec:	af00      	add	r7, sp, #0
 801dfee:	6078      	str	r0, [r7, #4]
 801dff0:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 1: Reset the CC1E Bit */
  TIMx->CCER &= ~TIM_CCER_CC1E;
 801dff2:	687b      	ldr	r3, [r7, #4]
 801dff4:	6a1b      	ldr	r3, [r3, #32]
 801dff6:	f023 0201 	bic.w	r2, r3, #1
 801dffa:	687b      	ldr	r3, [r7, #4]
 801dffc:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 801dffe:	687b      	ldr	r3, [r7, #4]
 801e000:	6a1b      	ldr	r3, [r3, #32]
 801e002:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 801e004:	687b      	ldr	r3, [r7, #4]
 801e006:	685b      	ldr	r3, [r3, #4]
 801e008:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 801e00a:	687b      	ldr	r3, [r7, #4]
 801e00c:	699b      	ldr	r3, [r3, #24]
 801e00e:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare Mode Bits */
  tmpccmrx &= ~TIM_CCMR1_OC1M;
 801e010:	68fb      	ldr	r3, [r7, #12]
 801e012:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801e016:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC1S;
 801e018:	68fb      	ldr	r3, [r7, #12]
 801e01a:	f023 0303 	bic.w	r3, r3, #3
 801e01e:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 801e020:	683b      	ldr	r3, [r7, #0]
 801e022:	681b      	ldr	r3, [r3, #0]
 801e024:	68fa      	ldr	r2, [r7, #12]
 801e026:	4313      	orrs	r3, r2
 801e028:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC1P;
 801e02a:	697b      	ldr	r3, [r7, #20]
 801e02c:	f023 0302 	bic.w	r3, r3, #2
 801e030:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= OC_Config->OCPolarity;
 801e032:	683b      	ldr	r3, [r7, #0]
 801e034:	689b      	ldr	r3, [r3, #8]
 801e036:	697a      	ldr	r2, [r7, #20]
 801e038:	4313      	orrs	r3, r2
 801e03a:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_1))
 801e03c:	687b      	ldr	r3, [r7, #4]
 801e03e:	4a1c      	ldr	r2, [pc, #112]	; (801e0b0 <TIM_OC1_SetConfig+0xc8>)
 801e040:	4293      	cmp	r3, r2
 801e042:	d10c      	bne.n	801e05e <TIM_OC1_SetConfig+0x76>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC1NP;
 801e044:	697b      	ldr	r3, [r7, #20]
 801e046:	f023 0308 	bic.w	r3, r3, #8
 801e04a:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= OC_Config->OCNPolarity;
 801e04c:	683b      	ldr	r3, [r7, #0]
 801e04e:	68db      	ldr	r3, [r3, #12]
 801e050:	697a      	ldr	r2, [r7, #20]
 801e052:	4313      	orrs	r3, r2
 801e054:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC1NE;
 801e056:	697b      	ldr	r3, [r7, #20]
 801e058:	f023 0304 	bic.w	r3, r3, #4
 801e05c:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 801e05e:	687b      	ldr	r3, [r7, #4]
 801e060:	4a13      	ldr	r2, [pc, #76]	; (801e0b0 <TIM_OC1_SetConfig+0xc8>)
 801e062:	4293      	cmp	r3, r2
 801e064:	d111      	bne.n	801e08a <TIM_OC1_SetConfig+0xa2>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS1;
 801e066:	693b      	ldr	r3, [r7, #16]
 801e068:	f423 7380 	bic.w	r3, r3, #256	; 0x100
 801e06c:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS1N;
 801e06e:	693b      	ldr	r3, [r7, #16]
 801e070:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 801e074:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= OC_Config->OCIdleState;
 801e076:	683b      	ldr	r3, [r7, #0]
 801e078:	695b      	ldr	r3, [r3, #20]
 801e07a:	693a      	ldr	r2, [r7, #16]
 801e07c:	4313      	orrs	r3, r2
 801e07e:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= OC_Config->OCNIdleState;
 801e080:	683b      	ldr	r3, [r7, #0]
 801e082:	699b      	ldr	r3, [r3, #24]
 801e084:	693a      	ldr	r2, [r7, #16]
 801e086:	4313      	orrs	r3, r2
 801e088:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 801e08a:	687b      	ldr	r3, [r7, #4]
 801e08c:	693a      	ldr	r2, [r7, #16]
 801e08e:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 801e090:	687b      	ldr	r3, [r7, #4]
 801e092:	68fa      	ldr	r2, [r7, #12]
 801e094:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR1 = OC_Config->Pulse;
 801e096:	683b      	ldr	r3, [r7, #0]
 801e098:	685a      	ldr	r2, [r3, #4]
 801e09a:	687b      	ldr	r3, [r7, #4]
 801e09c:	635a      	str	r2, [r3, #52]	; 0x34

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 801e09e:	687b      	ldr	r3, [r7, #4]
 801e0a0:	697a      	ldr	r2, [r7, #20]
 801e0a2:	621a      	str	r2, [r3, #32]
}
 801e0a4:	bf00      	nop
 801e0a6:	371c      	adds	r7, #28
 801e0a8:	46bd      	mov	sp, r7
 801e0aa:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e0ae:	4770      	bx	lr
 801e0b0:	40010000 	.word	0x40010000

0801e0b4 <TIM_OC2_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
void TIM_OC2_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 801e0b4:	b480      	push	{r7}
 801e0b6:	b087      	sub	sp, #28
 801e0b8:	af00      	add	r7, sp, #0
 801e0ba:	6078      	str	r0, [r7, #4]
 801e0bc:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 801e0be:	687b      	ldr	r3, [r7, #4]
 801e0c0:	6a1b      	ldr	r3, [r3, #32]
 801e0c2:	f023 0210 	bic.w	r2, r3, #16
 801e0c6:	687b      	ldr	r3, [r7, #4]
 801e0c8:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 801e0ca:	687b      	ldr	r3, [r7, #4]
 801e0cc:	6a1b      	ldr	r3, [r3, #32]
 801e0ce:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 801e0d0:	687b      	ldr	r3, [r7, #4]
 801e0d2:	685b      	ldr	r3, [r3, #4]
 801e0d4:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR1 register value */
  tmpccmrx = TIMx->CCMR1;
 801e0d6:	687b      	ldr	r3, [r7, #4]
 801e0d8:	699b      	ldr	r3, [r3, #24]
 801e0da:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR1_OC2M;
 801e0dc:	68fb      	ldr	r3, [r7, #12]
 801e0de:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 801e0e2:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR1_CC2S;
 801e0e4:	68fb      	ldr	r3, [r7, #12]
 801e0e6:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 801e0ea:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 801e0ec:	683b      	ldr	r3, [r7, #0]
 801e0ee:	681b      	ldr	r3, [r3, #0]
 801e0f0:	021b      	lsls	r3, r3, #8
 801e0f2:	68fa      	ldr	r2, [r7, #12]
 801e0f4:	4313      	orrs	r3, r2
 801e0f6:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC2P;
 801e0f8:	697b      	ldr	r3, [r7, #20]
 801e0fa:	f023 0320 	bic.w	r3, r3, #32
 801e0fe:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 4U);
 801e100:	683b      	ldr	r3, [r7, #0]
 801e102:	689b      	ldr	r3, [r3, #8]
 801e104:	011b      	lsls	r3, r3, #4
 801e106:	697a      	ldr	r2, [r7, #20]
 801e108:	4313      	orrs	r3, r2
 801e10a:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_2))
 801e10c:	687b      	ldr	r3, [r7, #4]
 801e10e:	4a1e      	ldr	r2, [pc, #120]	; (801e188 <TIM_OC2_SetConfig+0xd4>)
 801e110:	4293      	cmp	r3, r2
 801e112:	d10d      	bne.n	801e130 <TIM_OC2_SetConfig+0x7c>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC2NP;
 801e114:	697b      	ldr	r3, [r7, #20]
 801e116:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 801e11a:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 4U);
 801e11c:	683b      	ldr	r3, [r7, #0]
 801e11e:	68db      	ldr	r3, [r3, #12]
 801e120:	011b      	lsls	r3, r3, #4
 801e122:	697a      	ldr	r2, [r7, #20]
 801e124:	4313      	orrs	r3, r2
 801e126:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC2NE;
 801e128:	697b      	ldr	r3, [r7, #20]
 801e12a:	f023 0340 	bic.w	r3, r3, #64	; 0x40
 801e12e:	617b      	str	r3, [r7, #20]

  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 801e130:	687b      	ldr	r3, [r7, #4]
 801e132:	4a15      	ldr	r2, [pc, #84]	; (801e188 <TIM_OC2_SetConfig+0xd4>)
 801e134:	4293      	cmp	r3, r2
 801e136:	d113      	bne.n	801e160 <TIM_OC2_SetConfig+0xac>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS2;
 801e138:	693b      	ldr	r3, [r7, #16]
 801e13a:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801e13e:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS2N;
 801e140:	693b      	ldr	r3, [r7, #16]
 801e142:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801e146:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 2U);
 801e148:	683b      	ldr	r3, [r7, #0]
 801e14a:	695b      	ldr	r3, [r3, #20]
 801e14c:	009b      	lsls	r3, r3, #2
 801e14e:	693a      	ldr	r2, [r7, #16]
 801e150:	4313      	orrs	r3, r2
 801e152:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 2U);
 801e154:	683b      	ldr	r3, [r7, #0]
 801e156:	699b      	ldr	r3, [r3, #24]
 801e158:	009b      	lsls	r3, r3, #2
 801e15a:	693a      	ldr	r2, [r7, #16]
 801e15c:	4313      	orrs	r3, r2
 801e15e:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 801e160:	687b      	ldr	r3, [r7, #4]
 801e162:	693a      	ldr	r2, [r7, #16]
 801e164:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR1 */
  TIMx->CCMR1 = tmpccmrx;
 801e166:	687b      	ldr	r3, [r7, #4]
 801e168:	68fa      	ldr	r2, [r7, #12]
 801e16a:	619a      	str	r2, [r3, #24]

  /* Set the Capture Compare Register value */
  TIMx->CCR2 = OC_Config->Pulse;
 801e16c:	683b      	ldr	r3, [r7, #0]
 801e16e:	685a      	ldr	r2, [r3, #4]
 801e170:	687b      	ldr	r3, [r7, #4]
 801e172:	639a      	str	r2, [r3, #56]	; 0x38

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 801e174:	687b      	ldr	r3, [r7, #4]
 801e176:	697a      	ldr	r2, [r7, #20]
 801e178:	621a      	str	r2, [r3, #32]
}
 801e17a:	bf00      	nop
 801e17c:	371c      	adds	r7, #28
 801e17e:	46bd      	mov	sp, r7
 801e180:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e184:	4770      	bx	lr
 801e186:	bf00      	nop
 801e188:	40010000 	.word	0x40010000

0801e18c <TIM_OC3_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC3_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 801e18c:	b480      	push	{r7}
 801e18e:	b087      	sub	sp, #28
 801e190:	af00      	add	r7, sp, #0
 801e192:	6078      	str	r0, [r7, #4]
 801e194:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 3: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC3E;
 801e196:	687b      	ldr	r3, [r7, #4]
 801e198:	6a1b      	ldr	r3, [r3, #32]
 801e19a:	f423 7280 	bic.w	r2, r3, #256	; 0x100
 801e19e:	687b      	ldr	r3, [r7, #4]
 801e1a0:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 801e1a2:	687b      	ldr	r3, [r7, #4]
 801e1a4:	6a1b      	ldr	r3, [r3, #32]
 801e1a6:	617b      	str	r3, [r7, #20]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 801e1a8:	687b      	ldr	r3, [r7, #4]
 801e1aa:	685b      	ldr	r3, [r3, #4]
 801e1ac:	613b      	str	r3, [r7, #16]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 801e1ae:	687b      	ldr	r3, [r7, #4]
 801e1b0:	69db      	ldr	r3, [r3, #28]
 801e1b2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC3M;
 801e1b4:	68fb      	ldr	r3, [r7, #12]
 801e1b6:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801e1ba:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC3S;
 801e1bc:	68fb      	ldr	r3, [r7, #12]
 801e1be:	f023 0303 	bic.w	r3, r3, #3
 801e1c2:	60fb      	str	r3, [r7, #12]
  /* Select the Output Compare Mode */
  tmpccmrx |= OC_Config->OCMode;
 801e1c4:	683b      	ldr	r3, [r7, #0]
 801e1c6:	681b      	ldr	r3, [r3, #0]
 801e1c8:	68fa      	ldr	r2, [r7, #12]
 801e1ca:	4313      	orrs	r3, r2
 801e1cc:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC3P;
 801e1ce:	697b      	ldr	r3, [r7, #20]
 801e1d0:	f423 7300 	bic.w	r3, r3, #512	; 0x200
 801e1d4:	617b      	str	r3, [r7, #20]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 8U);
 801e1d6:	683b      	ldr	r3, [r7, #0]
 801e1d8:	689b      	ldr	r3, [r3, #8]
 801e1da:	021b      	lsls	r3, r3, #8
 801e1dc:	697a      	ldr	r2, [r7, #20]
 801e1de:	4313      	orrs	r3, r2
 801e1e0:	617b      	str	r3, [r7, #20]

  if (IS_TIM_CCXN_INSTANCE(TIMx, TIM_CHANNEL_3))
 801e1e2:	687b      	ldr	r3, [r7, #4]
 801e1e4:	4a1d      	ldr	r2, [pc, #116]	; (801e25c <TIM_OC3_SetConfig+0xd0>)
 801e1e6:	4293      	cmp	r3, r2
 801e1e8:	d10d      	bne.n	801e206 <TIM_OC3_SetConfig+0x7a>
  {
    assert_param(IS_TIM_OCN_POLARITY(OC_Config->OCNPolarity));

    /* Reset the Output N Polarity level */
    tmpccer &= ~TIM_CCER_CC3NP;
 801e1ea:	697b      	ldr	r3, [r7, #20]
 801e1ec:	f423 6300 	bic.w	r3, r3, #2048	; 0x800
 801e1f0:	617b      	str	r3, [r7, #20]
    /* Set the Output N Polarity */
    tmpccer |= (OC_Config->OCNPolarity << 8U);
 801e1f2:	683b      	ldr	r3, [r7, #0]
 801e1f4:	68db      	ldr	r3, [r3, #12]
 801e1f6:	021b      	lsls	r3, r3, #8
 801e1f8:	697a      	ldr	r2, [r7, #20]
 801e1fa:	4313      	orrs	r3, r2
 801e1fc:	617b      	str	r3, [r7, #20]
    /* Reset the Output N State */
    tmpccer &= ~TIM_CCER_CC3NE;
 801e1fe:	697b      	ldr	r3, [r7, #20]
 801e200:	f423 6380 	bic.w	r3, r3, #1024	; 0x400
 801e204:	617b      	str	r3, [r7, #20]
  }

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 801e206:	687b      	ldr	r3, [r7, #4]
 801e208:	4a14      	ldr	r2, [pc, #80]	; (801e25c <TIM_OC3_SetConfig+0xd0>)
 801e20a:	4293      	cmp	r3, r2
 801e20c:	d113      	bne.n	801e236 <TIM_OC3_SetConfig+0xaa>
    /* Check parameters */
    assert_param(IS_TIM_OCNIDLE_STATE(OC_Config->OCNIdleState));
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare and Output Compare N IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS3;
 801e20e:	693b      	ldr	r3, [r7, #16]
 801e210:	f423 5380 	bic.w	r3, r3, #4096	; 0x1000
 801e214:	613b      	str	r3, [r7, #16]
    tmpcr2 &= ~TIM_CR2_OIS3N;
 801e216:	693b      	ldr	r3, [r7, #16]
 801e218:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 801e21c:	613b      	str	r3, [r7, #16]
    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 4U);
 801e21e:	683b      	ldr	r3, [r7, #0]
 801e220:	695b      	ldr	r3, [r3, #20]
 801e222:	011b      	lsls	r3, r3, #4
 801e224:	693a      	ldr	r2, [r7, #16]
 801e226:	4313      	orrs	r3, r2
 801e228:	613b      	str	r3, [r7, #16]
    /* Set the Output N Idle state */
    tmpcr2 |= (OC_Config->OCNIdleState << 4U);
 801e22a:	683b      	ldr	r3, [r7, #0]
 801e22c:	699b      	ldr	r3, [r3, #24]
 801e22e:	011b      	lsls	r3, r3, #4
 801e230:	693a      	ldr	r2, [r7, #16]
 801e232:	4313      	orrs	r3, r2
 801e234:	613b      	str	r3, [r7, #16]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 801e236:	687b      	ldr	r3, [r7, #4]
 801e238:	693a      	ldr	r2, [r7, #16]
 801e23a:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 801e23c:	687b      	ldr	r3, [r7, #4]
 801e23e:	68fa      	ldr	r2, [r7, #12]
 801e240:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR3 = OC_Config->Pulse;
 801e242:	683b      	ldr	r3, [r7, #0]
 801e244:	685a      	ldr	r2, [r3, #4]
 801e246:	687b      	ldr	r3, [r7, #4]
 801e248:	63da      	str	r2, [r3, #60]	; 0x3c

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 801e24a:	687b      	ldr	r3, [r7, #4]
 801e24c:	697a      	ldr	r2, [r7, #20]
 801e24e:	621a      	str	r2, [r3, #32]
}
 801e250:	bf00      	nop
 801e252:	371c      	adds	r7, #28
 801e254:	46bd      	mov	sp, r7
 801e256:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e25a:	4770      	bx	lr
 801e25c:	40010000 	.word	0x40010000

0801e260 <TIM_OC4_SetConfig>:
  * @param  TIMx to select the TIM peripheral
  * @param  OC_Config The ouput configuration structure
  * @retval None
  */
static void TIM_OC4_SetConfig(TIM_TypeDef *TIMx, TIM_OC_InitTypeDef *OC_Config)
{
 801e260:	b480      	push	{r7}
 801e262:	b087      	sub	sp, #28
 801e264:	af00      	add	r7, sp, #0
 801e266:	6078      	str	r0, [r7, #4]
 801e268:	6039      	str	r1, [r7, #0]
  uint32_t tmpccmrx;
  uint32_t tmpccer;
  uint32_t tmpcr2;

  /* Disable the Channel 4: Reset the CC4E Bit */
  TIMx->CCER &= ~TIM_CCER_CC4E;
 801e26a:	687b      	ldr	r3, [r7, #4]
 801e26c:	6a1b      	ldr	r3, [r3, #32]
 801e26e:	f423 5280 	bic.w	r2, r3, #4096	; 0x1000
 801e272:	687b      	ldr	r3, [r7, #4]
 801e274:	621a      	str	r2, [r3, #32]

  /* Get the TIMx CCER register value */
  tmpccer = TIMx->CCER;
 801e276:	687b      	ldr	r3, [r7, #4]
 801e278:	6a1b      	ldr	r3, [r3, #32]
 801e27a:	613b      	str	r3, [r7, #16]
  /* Get the TIMx CR2 register value */
  tmpcr2 =  TIMx->CR2;
 801e27c:	687b      	ldr	r3, [r7, #4]
 801e27e:	685b      	ldr	r3, [r3, #4]
 801e280:	617b      	str	r3, [r7, #20]

  /* Get the TIMx CCMR2 register value */
  tmpccmrx = TIMx->CCMR2;
 801e282:	687b      	ldr	r3, [r7, #4]
 801e284:	69db      	ldr	r3, [r3, #28]
 801e286:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Compare mode and Capture/Compare selection Bits */
  tmpccmrx &= ~TIM_CCMR2_OC4M;
 801e288:	68fb      	ldr	r3, [r7, #12]
 801e28a:	f423 43e0 	bic.w	r3, r3, #28672	; 0x7000
 801e28e:	60fb      	str	r3, [r7, #12]
  tmpccmrx &= ~TIM_CCMR2_CC4S;
 801e290:	68fb      	ldr	r3, [r7, #12]
 801e292:	f423 7340 	bic.w	r3, r3, #768	; 0x300
 801e296:	60fb      	str	r3, [r7, #12]

  /* Select the Output Compare Mode */
  tmpccmrx |= (OC_Config->OCMode << 8U);
 801e298:	683b      	ldr	r3, [r7, #0]
 801e29a:	681b      	ldr	r3, [r3, #0]
 801e29c:	021b      	lsls	r3, r3, #8
 801e29e:	68fa      	ldr	r2, [r7, #12]
 801e2a0:	4313      	orrs	r3, r2
 801e2a2:	60fb      	str	r3, [r7, #12]

  /* Reset the Output Polarity level */
  tmpccer &= ~TIM_CCER_CC4P;
 801e2a4:	693b      	ldr	r3, [r7, #16]
 801e2a6:	f423 5300 	bic.w	r3, r3, #8192	; 0x2000
 801e2aa:	613b      	str	r3, [r7, #16]
  /* Set the Output Compare Polarity */
  tmpccer |= (OC_Config->OCPolarity << 12U);
 801e2ac:	683b      	ldr	r3, [r7, #0]
 801e2ae:	689b      	ldr	r3, [r3, #8]
 801e2b0:	031b      	lsls	r3, r3, #12
 801e2b2:	693a      	ldr	r2, [r7, #16]
 801e2b4:	4313      	orrs	r3, r2
 801e2b6:	613b      	str	r3, [r7, #16]

  if (IS_TIM_BREAK_INSTANCE(TIMx))
 801e2b8:	687b      	ldr	r3, [r7, #4]
 801e2ba:	4a10      	ldr	r2, [pc, #64]	; (801e2fc <TIM_OC4_SetConfig+0x9c>)
 801e2bc:	4293      	cmp	r3, r2
 801e2be:	d109      	bne.n	801e2d4 <TIM_OC4_SetConfig+0x74>
  {
    /* Check parameters */
    assert_param(IS_TIM_OCIDLE_STATE(OC_Config->OCIdleState));

    /* Reset the Output Compare IDLE State */
    tmpcr2 &= ~TIM_CR2_OIS4;
 801e2c0:	697b      	ldr	r3, [r7, #20]
 801e2c2:	f423 4380 	bic.w	r3, r3, #16384	; 0x4000
 801e2c6:	617b      	str	r3, [r7, #20]

    /* Set the Output Idle state */
    tmpcr2 |= (OC_Config->OCIdleState << 6U);
 801e2c8:	683b      	ldr	r3, [r7, #0]
 801e2ca:	695b      	ldr	r3, [r3, #20]
 801e2cc:	019b      	lsls	r3, r3, #6
 801e2ce:	697a      	ldr	r2, [r7, #20]
 801e2d0:	4313      	orrs	r3, r2
 801e2d2:	617b      	str	r3, [r7, #20]
  }

  /* Write to TIMx CR2 */
  TIMx->CR2 = tmpcr2;
 801e2d4:	687b      	ldr	r3, [r7, #4]
 801e2d6:	697a      	ldr	r2, [r7, #20]
 801e2d8:	605a      	str	r2, [r3, #4]

  /* Write to TIMx CCMR2 */
  TIMx->CCMR2 = tmpccmrx;
 801e2da:	687b      	ldr	r3, [r7, #4]
 801e2dc:	68fa      	ldr	r2, [r7, #12]
 801e2de:	61da      	str	r2, [r3, #28]

  /* Set the Capture Compare Register value */
  TIMx->CCR4 = OC_Config->Pulse;
 801e2e0:	683b      	ldr	r3, [r7, #0]
 801e2e2:	685a      	ldr	r2, [r3, #4]
 801e2e4:	687b      	ldr	r3, [r7, #4]
 801e2e6:	641a      	str	r2, [r3, #64]	; 0x40

  /* Write to TIMx CCER */
  TIMx->CCER = tmpccer;
 801e2e8:	687b      	ldr	r3, [r7, #4]
 801e2ea:	693a      	ldr	r2, [r7, #16]
 801e2ec:	621a      	str	r2, [r3, #32]
}
 801e2ee:	bf00      	nop
 801e2f0:	371c      	adds	r7, #28
 801e2f2:	46bd      	mov	sp, r7
 801e2f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e2f8:	4770      	bx	lr
 801e2fa:	bf00      	nop
 801e2fc:	40010000 	.word	0x40010000

0801e300 <TIM_TI1_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI1_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 801e300:	b480      	push	{r7}
 801e302:	b087      	sub	sp, #28
 801e304:	af00      	add	r7, sp, #0
 801e306:	60f8      	str	r0, [r7, #12]
 801e308:	60b9      	str	r1, [r7, #8]
 801e30a:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 1: Reset the CC1E Bit */
  tmpccer = TIMx->CCER;
 801e30c:	68fb      	ldr	r3, [r7, #12]
 801e30e:	6a1b      	ldr	r3, [r3, #32]
 801e310:	617b      	str	r3, [r7, #20]
  TIMx->CCER &= ~TIM_CCER_CC1E;
 801e312:	68fb      	ldr	r3, [r7, #12]
 801e314:	6a1b      	ldr	r3, [r3, #32]
 801e316:	f023 0201 	bic.w	r2, r3, #1
 801e31a:	68fb      	ldr	r3, [r7, #12]
 801e31c:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 801e31e:	68fb      	ldr	r3, [r7, #12]
 801e320:	699b      	ldr	r3, [r3, #24]
 801e322:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC1F;
 801e324:	693b      	ldr	r3, [r7, #16]
 801e326:	f023 03f0 	bic.w	r3, r3, #240	; 0xf0
 801e32a:	613b      	str	r3, [r7, #16]
  tmpccmr1 |= (TIM_ICFilter << 4U);
 801e32c:	687b      	ldr	r3, [r7, #4]
 801e32e:	011b      	lsls	r3, r3, #4
 801e330:	693a      	ldr	r2, [r7, #16]
 801e332:	4313      	orrs	r3, r2
 801e334:	613b      	str	r3, [r7, #16]

  /* Select the Polarity and set the CC1E Bit */
  tmpccer &= ~(TIM_CCER_CC1P | TIM_CCER_CC1NP);
 801e336:	697b      	ldr	r3, [r7, #20]
 801e338:	f023 030a 	bic.w	r3, r3, #10
 801e33c:	617b      	str	r3, [r7, #20]
  tmpccer |= TIM_ICPolarity;
 801e33e:	697a      	ldr	r2, [r7, #20]
 801e340:	68bb      	ldr	r3, [r7, #8]
 801e342:	4313      	orrs	r3, r2
 801e344:	617b      	str	r3, [r7, #20]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1;
 801e346:	68fb      	ldr	r3, [r7, #12]
 801e348:	693a      	ldr	r2, [r7, #16]
 801e34a:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 801e34c:	68fb      	ldr	r3, [r7, #12]
 801e34e:	697a      	ldr	r2, [r7, #20]
 801e350:	621a      	str	r2, [r3, #32]
}
 801e352:	bf00      	nop
 801e354:	371c      	adds	r7, #28
 801e356:	46bd      	mov	sp, r7
 801e358:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e35c:	4770      	bx	lr

0801e35e <TIM_TI2_ConfigInputStage>:
  * @param  TIM_ICFilter Specifies the Input Capture Filter.
  *          This parameter must be a value between 0x00 and 0x0F.
  * @retval None
  */
static void TIM_TI2_ConfigInputStage(TIM_TypeDef *TIMx, uint32_t TIM_ICPolarity, uint32_t TIM_ICFilter)
{
 801e35e:	b480      	push	{r7}
 801e360:	b087      	sub	sp, #28
 801e362:	af00      	add	r7, sp, #0
 801e364:	60f8      	str	r0, [r7, #12]
 801e366:	60b9      	str	r1, [r7, #8]
 801e368:	607a      	str	r2, [r7, #4]
  uint32_t tmpccmr1;
  uint32_t tmpccer;

  /* Disable the Channel 2: Reset the CC2E Bit */
  TIMx->CCER &= ~TIM_CCER_CC2E;
 801e36a:	68fb      	ldr	r3, [r7, #12]
 801e36c:	6a1b      	ldr	r3, [r3, #32]
 801e36e:	f023 0210 	bic.w	r2, r3, #16
 801e372:	68fb      	ldr	r3, [r7, #12]
 801e374:	621a      	str	r2, [r3, #32]
  tmpccmr1 = TIMx->CCMR1;
 801e376:	68fb      	ldr	r3, [r7, #12]
 801e378:	699b      	ldr	r3, [r3, #24]
 801e37a:	617b      	str	r3, [r7, #20]
  tmpccer = TIMx->CCER;
 801e37c:	68fb      	ldr	r3, [r7, #12]
 801e37e:	6a1b      	ldr	r3, [r3, #32]
 801e380:	613b      	str	r3, [r7, #16]

  /* Set the filter */
  tmpccmr1 &= ~TIM_CCMR1_IC2F;
 801e382:	697b      	ldr	r3, [r7, #20]
 801e384:	f423 4370 	bic.w	r3, r3, #61440	; 0xf000
 801e388:	617b      	str	r3, [r7, #20]
  tmpccmr1 |= (TIM_ICFilter << 12U);
 801e38a:	687b      	ldr	r3, [r7, #4]
 801e38c:	031b      	lsls	r3, r3, #12
 801e38e:	697a      	ldr	r2, [r7, #20]
 801e390:	4313      	orrs	r3, r2
 801e392:	617b      	str	r3, [r7, #20]

  /* Select the Polarity and set the CC2E Bit */
  tmpccer &= ~(TIM_CCER_CC2P | TIM_CCER_CC2NP);
 801e394:	693b      	ldr	r3, [r7, #16]
 801e396:	f023 03a0 	bic.w	r3, r3, #160	; 0xa0
 801e39a:	613b      	str	r3, [r7, #16]
  tmpccer |= (TIM_ICPolarity << 4U);
 801e39c:	68bb      	ldr	r3, [r7, #8]
 801e39e:	011b      	lsls	r3, r3, #4
 801e3a0:	693a      	ldr	r2, [r7, #16]
 801e3a2:	4313      	orrs	r3, r2
 801e3a4:	613b      	str	r3, [r7, #16]

  /* Write to TIMx CCMR1 and CCER registers */
  TIMx->CCMR1 = tmpccmr1 ;
 801e3a6:	68fb      	ldr	r3, [r7, #12]
 801e3a8:	697a      	ldr	r2, [r7, #20]
 801e3aa:	619a      	str	r2, [r3, #24]
  TIMx->CCER = tmpccer;
 801e3ac:	68fb      	ldr	r3, [r7, #12]
 801e3ae:	693a      	ldr	r2, [r7, #16]
 801e3b0:	621a      	str	r2, [r3, #32]
}
 801e3b2:	bf00      	nop
 801e3b4:	371c      	adds	r7, #28
 801e3b6:	46bd      	mov	sp, r7
 801e3b8:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e3bc:	4770      	bx	lr

0801e3be <TIM_ITRx_SetConfig>:
  *            @arg TIM_TS_TI2FP2: Filtered Timer Input 2
  *            @arg TIM_TS_ETRF: External Trigger input
  * @retval None
  */
static void TIM_ITRx_SetConfig(TIM_TypeDef *TIMx, uint32_t InputTriggerSource)
{
 801e3be:	b480      	push	{r7}
 801e3c0:	b085      	sub	sp, #20
 801e3c2:	af00      	add	r7, sp, #0
 801e3c4:	6078      	str	r0, [r7, #4]
 801e3c6:	6039      	str	r1, [r7, #0]
  uint32_t tmpsmcr;

  /* Get the TIMx SMCR register value */
  tmpsmcr = TIMx->SMCR;
 801e3c8:	687b      	ldr	r3, [r7, #4]
 801e3ca:	689b      	ldr	r3, [r3, #8]
 801e3cc:	60fb      	str	r3, [r7, #12]
  /* Reset the TS Bits */
  tmpsmcr &= ~TIM_SMCR_TS;
 801e3ce:	68fb      	ldr	r3, [r7, #12]
 801e3d0:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801e3d4:	60fb      	str	r3, [r7, #12]
  /* Set the Input Trigger source and the slave mode*/
  tmpsmcr |= (InputTriggerSource | TIM_SLAVEMODE_EXTERNAL1);
 801e3d6:	683a      	ldr	r2, [r7, #0]
 801e3d8:	68fb      	ldr	r3, [r7, #12]
 801e3da:	4313      	orrs	r3, r2
 801e3dc:	f043 0307 	orr.w	r3, r3, #7
 801e3e0:	60fb      	str	r3, [r7, #12]
  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 801e3e2:	687b      	ldr	r3, [r7, #4]
 801e3e4:	68fa      	ldr	r2, [r7, #12]
 801e3e6:	609a      	str	r2, [r3, #8]
}
 801e3e8:	bf00      	nop
 801e3ea:	3714      	adds	r7, #20
 801e3ec:	46bd      	mov	sp, r7
 801e3ee:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e3f2:	4770      	bx	lr

0801e3f4 <TIM_ETR_SetConfig>:
  *          This parameter must be a value between 0x00 and 0x0F
  * @retval None
  */
void TIM_ETR_SetConfig(TIM_TypeDef *TIMx, uint32_t TIM_ExtTRGPrescaler,
                       uint32_t TIM_ExtTRGPolarity, uint32_t ExtTRGFilter)
{
 801e3f4:	b480      	push	{r7}
 801e3f6:	b087      	sub	sp, #28
 801e3f8:	af00      	add	r7, sp, #0
 801e3fa:	60f8      	str	r0, [r7, #12]
 801e3fc:	60b9      	str	r1, [r7, #8]
 801e3fe:	607a      	str	r2, [r7, #4]
 801e400:	603b      	str	r3, [r7, #0]
  uint32_t tmpsmcr;

  tmpsmcr = TIMx->SMCR;
 801e402:	68fb      	ldr	r3, [r7, #12]
 801e404:	689b      	ldr	r3, [r3, #8]
 801e406:	617b      	str	r3, [r7, #20]

  /* Reset the ETR Bits */
  tmpsmcr &= ~(TIM_SMCR_ETF | TIM_SMCR_ETPS | TIM_SMCR_ECE | TIM_SMCR_ETP);
 801e408:	697b      	ldr	r3, [r7, #20]
 801e40a:	f423 437f 	bic.w	r3, r3, #65280	; 0xff00
 801e40e:	617b      	str	r3, [r7, #20]

  /* Set the Prescaler, the Filter value and the Polarity */
  tmpsmcr |= (uint32_t)(TIM_ExtTRGPrescaler | (TIM_ExtTRGPolarity | (ExtTRGFilter << 8U)));
 801e410:	683b      	ldr	r3, [r7, #0]
 801e412:	021a      	lsls	r2, r3, #8
 801e414:	687b      	ldr	r3, [r7, #4]
 801e416:	431a      	orrs	r2, r3
 801e418:	68bb      	ldr	r3, [r7, #8]
 801e41a:	4313      	orrs	r3, r2
 801e41c:	697a      	ldr	r2, [r7, #20]
 801e41e:	4313      	orrs	r3, r2
 801e420:	617b      	str	r3, [r7, #20]

  /* Write to TIMx SMCR */
  TIMx->SMCR = tmpsmcr;
 801e422:	68fb      	ldr	r3, [r7, #12]
 801e424:	697a      	ldr	r2, [r7, #20]
 801e426:	609a      	str	r2, [r3, #8]
}
 801e428:	bf00      	nop
 801e42a:	371c      	adds	r7, #28
 801e42c:	46bd      	mov	sp, r7
 801e42e:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e432:	4770      	bx	lr

0801e434 <HAL_TIMEx_MasterConfigSynchronization>:
  *         mode.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_TIMEx_MasterConfigSynchronization(TIM_HandleTypeDef *htim,
                                                        TIM_MasterConfigTypeDef *sMasterConfig)
{
 801e434:	b480      	push	{r7}
 801e436:	b085      	sub	sp, #20
 801e438:	af00      	add	r7, sp, #0
 801e43a:	6078      	str	r0, [r7, #4]
 801e43c:	6039      	str	r1, [r7, #0]
  assert_param(IS_TIM_MASTER_INSTANCE(htim->Instance));
  assert_param(IS_TIM_TRGO_SOURCE(sMasterConfig->MasterOutputTrigger));
  assert_param(IS_TIM_MSM_STATE(sMasterConfig->MasterSlaveMode));

  /* Check input state */
  __HAL_LOCK(htim);
 801e43e:	687b      	ldr	r3, [r7, #4]
 801e440:	f893 303c 	ldrb.w	r3, [r3, #60]	; 0x3c
 801e444:	2b01      	cmp	r3, #1
 801e446:	d101      	bne.n	801e44c <HAL_TIMEx_MasterConfigSynchronization+0x18>
 801e448:	2302      	movs	r3, #2
 801e44a:	e050      	b.n	801e4ee <HAL_TIMEx_MasterConfigSynchronization+0xba>
 801e44c:	687b      	ldr	r3, [r7, #4]
 801e44e:	2201      	movs	r2, #1
 801e450:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  /* Change the handler state */
  htim->State = HAL_TIM_STATE_BUSY;
 801e454:	687b      	ldr	r3, [r7, #4]
 801e456:	2202      	movs	r2, #2
 801e458:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  /* Get the TIMx CR2 register value */
  tmpcr2 = htim->Instance->CR2;
 801e45c:	687b      	ldr	r3, [r7, #4]
 801e45e:	681b      	ldr	r3, [r3, #0]
 801e460:	685b      	ldr	r3, [r3, #4]
 801e462:	60fb      	str	r3, [r7, #12]

  /* Get the TIMx SMCR register value */
  tmpsmcr = htim->Instance->SMCR;
 801e464:	687b      	ldr	r3, [r7, #4]
 801e466:	681b      	ldr	r3, [r3, #0]
 801e468:	689b      	ldr	r3, [r3, #8]
 801e46a:	60bb      	str	r3, [r7, #8]

  /* Reset the MMS Bits */
  tmpcr2 &= ~TIM_CR2_MMS;
 801e46c:	68fb      	ldr	r3, [r7, #12]
 801e46e:	f023 0370 	bic.w	r3, r3, #112	; 0x70
 801e472:	60fb      	str	r3, [r7, #12]
  /* Select the TRGO source */
  tmpcr2 |=  sMasterConfig->MasterOutputTrigger;
 801e474:	683b      	ldr	r3, [r7, #0]
 801e476:	681b      	ldr	r3, [r3, #0]
 801e478:	68fa      	ldr	r2, [r7, #12]
 801e47a:	4313      	orrs	r3, r2
 801e47c:	60fb      	str	r3, [r7, #12]

  /* Update TIMx CR2 */
  htim->Instance->CR2 = tmpcr2;
 801e47e:	687b      	ldr	r3, [r7, #4]
 801e480:	681b      	ldr	r3, [r3, #0]
 801e482:	68fa      	ldr	r2, [r7, #12]
 801e484:	605a      	str	r2, [r3, #4]

  if (IS_TIM_SLAVE_INSTANCE(htim->Instance))
 801e486:	687b      	ldr	r3, [r7, #4]
 801e488:	681b      	ldr	r3, [r3, #0]
 801e48a:	4a1c      	ldr	r2, [pc, #112]	; (801e4fc <HAL_TIMEx_MasterConfigSynchronization+0xc8>)
 801e48c:	4293      	cmp	r3, r2
 801e48e:	d018      	beq.n	801e4c2 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 801e490:	687b      	ldr	r3, [r7, #4]
 801e492:	681b      	ldr	r3, [r3, #0]
 801e494:	f1b3 4f80 	cmp.w	r3, #1073741824	; 0x40000000
 801e498:	d013      	beq.n	801e4c2 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 801e49a:	687b      	ldr	r3, [r7, #4]
 801e49c:	681b      	ldr	r3, [r3, #0]
 801e49e:	4a18      	ldr	r2, [pc, #96]	; (801e500 <HAL_TIMEx_MasterConfigSynchronization+0xcc>)
 801e4a0:	4293      	cmp	r3, r2
 801e4a2:	d00e      	beq.n	801e4c2 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 801e4a4:	687b      	ldr	r3, [r7, #4]
 801e4a6:	681b      	ldr	r3, [r3, #0]
 801e4a8:	4a16      	ldr	r2, [pc, #88]	; (801e504 <HAL_TIMEx_MasterConfigSynchronization+0xd0>)
 801e4aa:	4293      	cmp	r3, r2
 801e4ac:	d009      	beq.n	801e4c2 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 801e4ae:	687b      	ldr	r3, [r7, #4]
 801e4b0:	681b      	ldr	r3, [r3, #0]
 801e4b2:	4a15      	ldr	r2, [pc, #84]	; (801e508 <HAL_TIMEx_MasterConfigSynchronization+0xd4>)
 801e4b4:	4293      	cmp	r3, r2
 801e4b6:	d004      	beq.n	801e4c2 <HAL_TIMEx_MasterConfigSynchronization+0x8e>
 801e4b8:	687b      	ldr	r3, [r7, #4]
 801e4ba:	681b      	ldr	r3, [r3, #0]
 801e4bc:	4a13      	ldr	r2, [pc, #76]	; (801e50c <HAL_TIMEx_MasterConfigSynchronization+0xd8>)
 801e4be:	4293      	cmp	r3, r2
 801e4c0:	d10c      	bne.n	801e4dc <HAL_TIMEx_MasterConfigSynchronization+0xa8>
  {
    /* Reset the MSM Bit */
    tmpsmcr &= ~TIM_SMCR_MSM;
 801e4c2:	68bb      	ldr	r3, [r7, #8]
 801e4c4:	f023 0380 	bic.w	r3, r3, #128	; 0x80
 801e4c8:	60bb      	str	r3, [r7, #8]
    /* Set master mode */
    tmpsmcr |= sMasterConfig->MasterSlaveMode;
 801e4ca:	683b      	ldr	r3, [r7, #0]
 801e4cc:	685b      	ldr	r3, [r3, #4]
 801e4ce:	68ba      	ldr	r2, [r7, #8]
 801e4d0:	4313      	orrs	r3, r2
 801e4d2:	60bb      	str	r3, [r7, #8]

    /* Update TIMx SMCR */
    htim->Instance->SMCR = tmpsmcr;
 801e4d4:	687b      	ldr	r3, [r7, #4]
 801e4d6:	681b      	ldr	r3, [r3, #0]
 801e4d8:	68ba      	ldr	r2, [r7, #8]
 801e4da:	609a      	str	r2, [r3, #8]
  }

  /* Change the htim state */
  htim->State = HAL_TIM_STATE_READY;
 801e4dc:	687b      	ldr	r3, [r7, #4]
 801e4de:	2201      	movs	r2, #1
 801e4e0:	f883 203d 	strb.w	r2, [r3, #61]	; 0x3d

  __HAL_UNLOCK(htim);
 801e4e4:	687b      	ldr	r3, [r7, #4]
 801e4e6:	2200      	movs	r2, #0
 801e4e8:	f883 203c 	strb.w	r2, [r3, #60]	; 0x3c

  return HAL_OK;
 801e4ec:	2300      	movs	r3, #0
}
 801e4ee:	4618      	mov	r0, r3
 801e4f0:	3714      	adds	r7, #20
 801e4f2:	46bd      	mov	sp, r7
 801e4f4:	f85d 7b04 	ldr.w	r7, [sp], #4
 801e4f8:	4770      	bx	lr
 801e4fa:	bf00      	nop
 801e4fc:	40010000 	.word	0x40010000
 801e500:	40000400 	.word	0x40000400
 801e504:	40000800 	.word	0x40000800
 801e508:	40000c00 	.word	0x40000c00
 801e50c:	40014000 	.word	0x40014000

0801e510 <HAL_UART_Init>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Init(UART_HandleTypeDef *huart)
{
 801e510:	b580      	push	{r7, lr}
 801e512:	b082      	sub	sp, #8
 801e514:	af00      	add	r7, sp, #0
 801e516:	6078      	str	r0, [r7, #4]
  /* Check the UART handle allocation */
  if (huart == NULL)
 801e518:	687b      	ldr	r3, [r7, #4]
 801e51a:	2b00      	cmp	r3, #0
 801e51c:	d101      	bne.n	801e522 <HAL_UART_Init+0x12>
  {
    return HAL_ERROR;
 801e51e:	2301      	movs	r3, #1
 801e520:	e03f      	b.n	801e5a2 <HAL_UART_Init+0x92>
    assert_param(IS_UART_INSTANCE(huart->Instance));
  }
  assert_param(IS_UART_WORD_LENGTH(huart->Init.WordLength));
  assert_param(IS_UART_OVERSAMPLING(huart->Init.OverSampling));

  if (huart->gState == HAL_UART_STATE_RESET)
 801e522:	687b      	ldr	r3, [r7, #4]
 801e524:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 801e528:	b2db      	uxtb	r3, r3
 801e52a:	2b00      	cmp	r3, #0
 801e52c:	d106      	bne.n	801e53c <HAL_UART_Init+0x2c>
  {
    /* Allocate lock resource and initialize it */
    huart->Lock = HAL_UNLOCKED;
 801e52e:	687b      	ldr	r3, [r7, #4]
 801e530:	2200      	movs	r2, #0
 801e532:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    /* Init the low level hardware */
    huart->MspInitCallback(huart);
#else
    /* Init the low level hardware : GPIO, CLOCK */
    HAL_UART_MspInit(huart);
 801e536:	6878      	ldr	r0, [r7, #4]
 801e538:	f7fd fa5c 	bl	801b9f4 <HAL_UART_MspInit>
#endif /* (USE_HAL_UART_REGISTER_CALLBACKS) */
  }

  huart->gState = HAL_UART_STATE_BUSY;
 801e53c:	687b      	ldr	r3, [r7, #4]
 801e53e:	2224      	movs	r2, #36	; 0x24
 801e540:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

  /* Disable the peripheral */
  __HAL_UART_DISABLE(huart);
 801e544:	687b      	ldr	r3, [r7, #4]
 801e546:	681b      	ldr	r3, [r3, #0]
 801e548:	68da      	ldr	r2, [r3, #12]
 801e54a:	687b      	ldr	r3, [r7, #4]
 801e54c:	681b      	ldr	r3, [r3, #0]
 801e54e:	f422 5200 	bic.w	r2, r2, #8192	; 0x2000
 801e552:	60da      	str	r2, [r3, #12]

  /* Set the UART Communication parameters */
  UART_SetConfig(huart);
 801e554:	6878      	ldr	r0, [r7, #4]
 801e556:	f000 f90b 	bl	801e770 <UART_SetConfig>

  /* In asynchronous mode, the following bits must be kept cleared:
     - LINEN and CLKEN bits in the USART_CR2 register,
     - SCEN, HDSEL and IREN  bits in the USART_CR3 register.*/
  CLEAR_BIT(huart->Instance->CR2, (USART_CR2_LINEN | USART_CR2_CLKEN));
 801e55a:	687b      	ldr	r3, [r7, #4]
 801e55c:	681b      	ldr	r3, [r3, #0]
 801e55e:	691a      	ldr	r2, [r3, #16]
 801e560:	687b      	ldr	r3, [r7, #4]
 801e562:	681b      	ldr	r3, [r3, #0]
 801e564:	f422 4290 	bic.w	r2, r2, #18432	; 0x4800
 801e568:	611a      	str	r2, [r3, #16]
  CLEAR_BIT(huart->Instance->CR3, (USART_CR3_SCEN | USART_CR3_HDSEL | USART_CR3_IREN));
 801e56a:	687b      	ldr	r3, [r7, #4]
 801e56c:	681b      	ldr	r3, [r3, #0]
 801e56e:	695a      	ldr	r2, [r3, #20]
 801e570:	687b      	ldr	r3, [r7, #4]
 801e572:	681b      	ldr	r3, [r3, #0]
 801e574:	f022 022a 	bic.w	r2, r2, #42	; 0x2a
 801e578:	615a      	str	r2, [r3, #20]

  /* Enable the peripheral */
  __HAL_UART_ENABLE(huart);
 801e57a:	687b      	ldr	r3, [r7, #4]
 801e57c:	681b      	ldr	r3, [r3, #0]
 801e57e:	68da      	ldr	r2, [r3, #12]
 801e580:	687b      	ldr	r3, [r7, #4]
 801e582:	681b      	ldr	r3, [r3, #0]
 801e584:	f442 5200 	orr.w	r2, r2, #8192	; 0x2000
 801e588:	60da      	str	r2, [r3, #12]

  /* Initialize the UART state */
  huart->ErrorCode = HAL_UART_ERROR_NONE;
 801e58a:	687b      	ldr	r3, [r7, #4]
 801e58c:	2200      	movs	r2, #0
 801e58e:	63da      	str	r2, [r3, #60]	; 0x3c
  huart->gState = HAL_UART_STATE_READY;
 801e590:	687b      	ldr	r3, [r7, #4]
 801e592:	2220      	movs	r2, #32
 801e594:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
  huart->RxState = HAL_UART_STATE_READY;
 801e598:	687b      	ldr	r3, [r7, #4]
 801e59a:	2220      	movs	r2, #32
 801e59c:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

  return HAL_OK;
 801e5a0:	2300      	movs	r3, #0
}
 801e5a2:	4618      	mov	r0, r3
 801e5a4:	3708      	adds	r7, #8
 801e5a6:	46bd      	mov	sp, r7
 801e5a8:	bd80      	pop	{r7, pc}

0801e5aa <HAL_UART_Transmit>:
  * @param  Size  Amount of data elements (u8 or u16) to be sent
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
HAL_StatusTypeDef HAL_UART_Transmit(UART_HandleTypeDef *huart, uint8_t *pData, uint16_t Size, uint32_t Timeout)
{
 801e5aa:	b580      	push	{r7, lr}
 801e5ac:	b088      	sub	sp, #32
 801e5ae:	af02      	add	r7, sp, #8
 801e5b0:	60f8      	str	r0, [r7, #12]
 801e5b2:	60b9      	str	r1, [r7, #8]
 801e5b4:	603b      	str	r3, [r7, #0]
 801e5b6:	4613      	mov	r3, r2
 801e5b8:	80fb      	strh	r3, [r7, #6]
  uint16_t *tmp;
  uint32_t tickstart = 0U;
 801e5ba:	2300      	movs	r3, #0
 801e5bc:	617b      	str	r3, [r7, #20]

  /* Check that a Tx process is not already ongoing */
  if (huart->gState == HAL_UART_STATE_READY)
 801e5be:	68fb      	ldr	r3, [r7, #12]
 801e5c0:	f893 3039 	ldrb.w	r3, [r3, #57]	; 0x39
 801e5c4:	b2db      	uxtb	r3, r3
 801e5c6:	2b20      	cmp	r3, #32
 801e5c8:	f040 8083 	bne.w	801e6d2 <HAL_UART_Transmit+0x128>
  {
    if ((pData == NULL) || (Size == 0U))
 801e5cc:	68bb      	ldr	r3, [r7, #8]
 801e5ce:	2b00      	cmp	r3, #0
 801e5d0:	d002      	beq.n	801e5d8 <HAL_UART_Transmit+0x2e>
 801e5d2:	88fb      	ldrh	r3, [r7, #6]
 801e5d4:	2b00      	cmp	r3, #0
 801e5d6:	d101      	bne.n	801e5dc <HAL_UART_Transmit+0x32>
    {
      return  HAL_ERROR;
 801e5d8:	2301      	movs	r3, #1
 801e5da:	e07b      	b.n	801e6d4 <HAL_UART_Transmit+0x12a>
    }

    /* Process Locked */
    __HAL_LOCK(huart);
 801e5dc:	68fb      	ldr	r3, [r7, #12]
 801e5de:	f893 3038 	ldrb.w	r3, [r3, #56]	; 0x38
 801e5e2:	2b01      	cmp	r3, #1
 801e5e4:	d101      	bne.n	801e5ea <HAL_UART_Transmit+0x40>
 801e5e6:	2302      	movs	r3, #2
 801e5e8:	e074      	b.n	801e6d4 <HAL_UART_Transmit+0x12a>
 801e5ea:	68fb      	ldr	r3, [r7, #12]
 801e5ec:	2201      	movs	r2, #1
 801e5ee:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    huart->ErrorCode = HAL_UART_ERROR_NONE;
 801e5f2:	68fb      	ldr	r3, [r7, #12]
 801e5f4:	2200      	movs	r2, #0
 801e5f6:	63da      	str	r2, [r3, #60]	; 0x3c
    huart->gState = HAL_UART_STATE_BUSY_TX;
 801e5f8:	68fb      	ldr	r3, [r7, #12]
 801e5fa:	2221      	movs	r2, #33	; 0x21
 801e5fc:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    /* Init tickstart for timeout managment */
    tickstart = HAL_GetTick();
 801e600:	f7fd fad0 	bl	801bba4 <HAL_GetTick>
 801e604:	6178      	str	r0, [r7, #20]

    huart->TxXferSize = Size;
 801e606:	68fb      	ldr	r3, [r7, #12]
 801e608:	88fa      	ldrh	r2, [r7, #6]
 801e60a:	849a      	strh	r2, [r3, #36]	; 0x24
    huart->TxXferCount = Size;
 801e60c:	68fb      	ldr	r3, [r7, #12]
 801e60e:	88fa      	ldrh	r2, [r7, #6]
 801e610:	84da      	strh	r2, [r3, #38]	; 0x26

    /* Process Unlocked */
    __HAL_UNLOCK(huart);
 801e612:	68fb      	ldr	r3, [r7, #12]
 801e614:	2200      	movs	r2, #0
 801e616:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

    while (huart->TxXferCount > 0U)
 801e61a:	e042      	b.n	801e6a2 <HAL_UART_Transmit+0xf8>
    {
      huart->TxXferCount--;
 801e61c:	68fb      	ldr	r3, [r7, #12]
 801e61e:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 801e620:	b29b      	uxth	r3, r3
 801e622:	3b01      	subs	r3, #1
 801e624:	b29a      	uxth	r2, r3
 801e626:	68fb      	ldr	r3, [r7, #12]
 801e628:	84da      	strh	r2, [r3, #38]	; 0x26
      if (huart->Init.WordLength == UART_WORDLENGTH_9B)
 801e62a:	68fb      	ldr	r3, [r7, #12]
 801e62c:	689b      	ldr	r3, [r3, #8]
 801e62e:	f5b3 5f80 	cmp.w	r3, #4096	; 0x1000
 801e632:	d122      	bne.n	801e67a <HAL_UART_Transmit+0xd0>
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 801e634:	683b      	ldr	r3, [r7, #0]
 801e636:	9300      	str	r3, [sp, #0]
 801e638:	697b      	ldr	r3, [r7, #20]
 801e63a:	2200      	movs	r2, #0
 801e63c:	2180      	movs	r1, #128	; 0x80
 801e63e:	68f8      	ldr	r0, [r7, #12]
 801e640:	f000 f84c 	bl	801e6dc <UART_WaitOnFlagUntilTimeout>
 801e644:	4603      	mov	r3, r0
 801e646:	2b00      	cmp	r3, #0
 801e648:	d001      	beq.n	801e64e <HAL_UART_Transmit+0xa4>
        {
          return HAL_TIMEOUT;
 801e64a:	2303      	movs	r3, #3
 801e64c:	e042      	b.n	801e6d4 <HAL_UART_Transmit+0x12a>
        }
        tmp = (uint16_t *) pData;
 801e64e:	68bb      	ldr	r3, [r7, #8]
 801e650:	613b      	str	r3, [r7, #16]
        huart->Instance->DR = (*tmp & (uint16_t)0x01FF);
 801e652:	693b      	ldr	r3, [r7, #16]
 801e654:	881b      	ldrh	r3, [r3, #0]
 801e656:	461a      	mov	r2, r3
 801e658:	68fb      	ldr	r3, [r7, #12]
 801e65a:	681b      	ldr	r3, [r3, #0]
 801e65c:	f3c2 0208 	ubfx	r2, r2, #0, #9
 801e660:	605a      	str	r2, [r3, #4]
        if (huart->Init.Parity == UART_PARITY_NONE)
 801e662:	68fb      	ldr	r3, [r7, #12]
 801e664:	691b      	ldr	r3, [r3, #16]
 801e666:	2b00      	cmp	r3, #0
 801e668:	d103      	bne.n	801e672 <HAL_UART_Transmit+0xc8>
        {
          pData += 2U;
 801e66a:	68bb      	ldr	r3, [r7, #8]
 801e66c:	3302      	adds	r3, #2
 801e66e:	60bb      	str	r3, [r7, #8]
 801e670:	e017      	b.n	801e6a2 <HAL_UART_Transmit+0xf8>
        }
        else
        {
          pData += 1U;
 801e672:	68bb      	ldr	r3, [r7, #8]
 801e674:	3301      	adds	r3, #1
 801e676:	60bb      	str	r3, [r7, #8]
 801e678:	e013      	b.n	801e6a2 <HAL_UART_Transmit+0xf8>
        }
      }
      else
      {
        if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TXE, RESET, tickstart, Timeout) != HAL_OK)
 801e67a:	683b      	ldr	r3, [r7, #0]
 801e67c:	9300      	str	r3, [sp, #0]
 801e67e:	697b      	ldr	r3, [r7, #20]
 801e680:	2200      	movs	r2, #0
 801e682:	2180      	movs	r1, #128	; 0x80
 801e684:	68f8      	ldr	r0, [r7, #12]
 801e686:	f000 f829 	bl	801e6dc <UART_WaitOnFlagUntilTimeout>
 801e68a:	4603      	mov	r3, r0
 801e68c:	2b00      	cmp	r3, #0
 801e68e:	d001      	beq.n	801e694 <HAL_UART_Transmit+0xea>
        {
          return HAL_TIMEOUT;
 801e690:	2303      	movs	r3, #3
 801e692:	e01f      	b.n	801e6d4 <HAL_UART_Transmit+0x12a>
        }
        huart->Instance->DR = (*pData++ & (uint8_t)0xFF);
 801e694:	68bb      	ldr	r3, [r7, #8]
 801e696:	1c5a      	adds	r2, r3, #1
 801e698:	60ba      	str	r2, [r7, #8]
 801e69a:	781a      	ldrb	r2, [r3, #0]
 801e69c:	68fb      	ldr	r3, [r7, #12]
 801e69e:	681b      	ldr	r3, [r3, #0]
 801e6a0:	605a      	str	r2, [r3, #4]
    while (huart->TxXferCount > 0U)
 801e6a2:	68fb      	ldr	r3, [r7, #12]
 801e6a4:	8cdb      	ldrh	r3, [r3, #38]	; 0x26
 801e6a6:	b29b      	uxth	r3, r3
 801e6a8:	2b00      	cmp	r3, #0
 801e6aa:	d1b7      	bne.n	801e61c <HAL_UART_Transmit+0x72>
      }
    }

    if (UART_WaitOnFlagUntilTimeout(huart, UART_FLAG_TC, RESET, tickstart, Timeout) != HAL_OK)
 801e6ac:	683b      	ldr	r3, [r7, #0]
 801e6ae:	9300      	str	r3, [sp, #0]
 801e6b0:	697b      	ldr	r3, [r7, #20]
 801e6b2:	2200      	movs	r2, #0
 801e6b4:	2140      	movs	r1, #64	; 0x40
 801e6b6:	68f8      	ldr	r0, [r7, #12]
 801e6b8:	f000 f810 	bl	801e6dc <UART_WaitOnFlagUntilTimeout>
 801e6bc:	4603      	mov	r3, r0
 801e6be:	2b00      	cmp	r3, #0
 801e6c0:	d001      	beq.n	801e6c6 <HAL_UART_Transmit+0x11c>
    {
      return HAL_TIMEOUT;
 801e6c2:	2303      	movs	r3, #3
 801e6c4:	e006      	b.n	801e6d4 <HAL_UART_Transmit+0x12a>
    }

    /* At end of Tx process, restore huart->gState to Ready */
    huart->gState = HAL_UART_STATE_READY;
 801e6c6:	68fb      	ldr	r3, [r7, #12]
 801e6c8:	2220      	movs	r2, #32
 801e6ca:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39

    return HAL_OK;
 801e6ce:	2300      	movs	r3, #0
 801e6d0:	e000      	b.n	801e6d4 <HAL_UART_Transmit+0x12a>
  }
  else
  {
    return HAL_BUSY;
 801e6d2:	2302      	movs	r3, #2
  }
}
 801e6d4:	4618      	mov	r0, r3
 801e6d6:	3718      	adds	r7, #24
 801e6d8:	46bd      	mov	sp, r7
 801e6da:	bd80      	pop	{r7, pc}

0801e6dc <UART_WaitOnFlagUntilTimeout>:
  * @param  Tickstart Tick start value
  * @param  Timeout Timeout duration
  * @retval HAL status
  */
static HAL_StatusTypeDef UART_WaitOnFlagUntilTimeout(UART_HandleTypeDef *huart, uint32_t Flag, FlagStatus Status, uint32_t Tickstart, uint32_t Timeout)
{
 801e6dc:	b580      	push	{r7, lr}
 801e6de:	b084      	sub	sp, #16
 801e6e0:	af00      	add	r7, sp, #0
 801e6e2:	60f8      	str	r0, [r7, #12]
 801e6e4:	60b9      	str	r1, [r7, #8]
 801e6e6:	603b      	str	r3, [r7, #0]
 801e6e8:	4613      	mov	r3, r2
 801e6ea:	71fb      	strb	r3, [r7, #7]
  /* Wait until flag is set */
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 801e6ec:	e02c      	b.n	801e748 <UART_WaitOnFlagUntilTimeout+0x6c>
  {
    /* Check for the Timeout */
    if (Timeout != HAL_MAX_DELAY)
 801e6ee:	69bb      	ldr	r3, [r7, #24]
 801e6f0:	f1b3 3fff 	cmp.w	r3, #4294967295
 801e6f4:	d028      	beq.n	801e748 <UART_WaitOnFlagUntilTimeout+0x6c>
    {
      if ((Timeout == 0U) || ((HAL_GetTick() - Tickstart) > Timeout))
 801e6f6:	69bb      	ldr	r3, [r7, #24]
 801e6f8:	2b00      	cmp	r3, #0
 801e6fa:	d007      	beq.n	801e70c <UART_WaitOnFlagUntilTimeout+0x30>
 801e6fc:	f7fd fa52 	bl	801bba4 <HAL_GetTick>
 801e700:	4602      	mov	r2, r0
 801e702:	683b      	ldr	r3, [r7, #0]
 801e704:	1ad3      	subs	r3, r2, r3
 801e706:	69ba      	ldr	r2, [r7, #24]
 801e708:	429a      	cmp	r2, r3
 801e70a:	d21d      	bcs.n	801e748 <UART_WaitOnFlagUntilTimeout+0x6c>
      {
        /* Disable TXE, RXNE, PE and ERR (Frame error, noise error, overrun error) interrupts for the interrupt process */
        CLEAR_BIT(huart->Instance->CR1, (USART_CR1_RXNEIE | USART_CR1_PEIE | USART_CR1_TXEIE));
 801e70c:	68fb      	ldr	r3, [r7, #12]
 801e70e:	681b      	ldr	r3, [r3, #0]
 801e710:	68da      	ldr	r2, [r3, #12]
 801e712:	68fb      	ldr	r3, [r7, #12]
 801e714:	681b      	ldr	r3, [r3, #0]
 801e716:	f422 72d0 	bic.w	r2, r2, #416	; 0x1a0
 801e71a:	60da      	str	r2, [r3, #12]
        CLEAR_BIT(huart->Instance->CR3, USART_CR3_EIE);
 801e71c:	68fb      	ldr	r3, [r7, #12]
 801e71e:	681b      	ldr	r3, [r3, #0]
 801e720:	695a      	ldr	r2, [r3, #20]
 801e722:	68fb      	ldr	r3, [r7, #12]
 801e724:	681b      	ldr	r3, [r3, #0]
 801e726:	f022 0201 	bic.w	r2, r2, #1
 801e72a:	615a      	str	r2, [r3, #20]

        huart->gState  = HAL_UART_STATE_READY;
 801e72c:	68fb      	ldr	r3, [r7, #12]
 801e72e:	2220      	movs	r2, #32
 801e730:	f883 2039 	strb.w	r2, [r3, #57]	; 0x39
        huart->RxState = HAL_UART_STATE_READY;
 801e734:	68fb      	ldr	r3, [r7, #12]
 801e736:	2220      	movs	r2, #32
 801e738:	f883 203a 	strb.w	r2, [r3, #58]	; 0x3a

        /* Process Unlocked */
        __HAL_UNLOCK(huart);
 801e73c:	68fb      	ldr	r3, [r7, #12]
 801e73e:	2200      	movs	r2, #0
 801e740:	f883 2038 	strb.w	r2, [r3, #56]	; 0x38

        return HAL_TIMEOUT;
 801e744:	2303      	movs	r3, #3
 801e746:	e00f      	b.n	801e768 <UART_WaitOnFlagUntilTimeout+0x8c>
  while ((__HAL_UART_GET_FLAG(huart, Flag) ? SET : RESET) == Status)
 801e748:	68fb      	ldr	r3, [r7, #12]
 801e74a:	681b      	ldr	r3, [r3, #0]
 801e74c:	681a      	ldr	r2, [r3, #0]
 801e74e:	68bb      	ldr	r3, [r7, #8]
 801e750:	4013      	ands	r3, r2
 801e752:	68ba      	ldr	r2, [r7, #8]
 801e754:	429a      	cmp	r2, r3
 801e756:	bf0c      	ite	eq
 801e758:	2301      	moveq	r3, #1
 801e75a:	2300      	movne	r3, #0
 801e75c:	b2db      	uxtb	r3, r3
 801e75e:	461a      	mov	r2, r3
 801e760:	79fb      	ldrb	r3, [r7, #7]
 801e762:	429a      	cmp	r2, r3
 801e764:	d0c3      	beq.n	801e6ee <UART_WaitOnFlagUntilTimeout+0x12>
      }
    }
  }
  return HAL_OK;
 801e766:	2300      	movs	r3, #0
}
 801e768:	4618      	mov	r0, r3
 801e76a:	3710      	adds	r7, #16
 801e76c:	46bd      	mov	sp, r7
 801e76e:	bd80      	pop	{r7, pc}

0801e770 <UART_SetConfig>:
  * @param  huart  Pointer to a UART_HandleTypeDef structure that contains
  *                the configuration information for the specified UART module.
  * @retval None
  */
static void UART_SetConfig(UART_HandleTypeDef *huart)
{
 801e770:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801e774:	b085      	sub	sp, #20
 801e776:	af00      	add	r7, sp, #0
 801e778:	6078      	str	r0, [r7, #4]
  assert_param(IS_UART_MODE(huart->Init.Mode));

  /*-------------------------- USART CR2 Configuration -----------------------*/
  /* Configure the UART Stop Bits: Set STOP[13:12] bits
     according to huart->Init.StopBits value */
  MODIFY_REG(huart->Instance->CR2, USART_CR2_STOP, huart->Init.StopBits);
 801e77a:	687b      	ldr	r3, [r7, #4]
 801e77c:	681b      	ldr	r3, [r3, #0]
 801e77e:	691b      	ldr	r3, [r3, #16]
 801e780:	f423 5140 	bic.w	r1, r3, #12288	; 0x3000
 801e784:	687b      	ldr	r3, [r7, #4]
 801e786:	68da      	ldr	r2, [r3, #12]
 801e788:	687b      	ldr	r3, [r7, #4]
 801e78a:	681b      	ldr	r3, [r3, #0]
 801e78c:	430a      	orrs	r2, r1
 801e78e:	611a      	str	r2, [r3, #16]
     Set the M bits according to huart->Init.WordLength value
     Set PCE and PS bits according to huart->Init.Parity value
     Set TE and RE bits according to huart->Init.Mode value
     Set OVER8 bit according to huart->Init.OverSampling value */

  tmpreg = (uint32_t)huart->Init.WordLength | huart->Init.Parity | huart->Init.Mode | huart->Init.OverSampling;
 801e790:	687b      	ldr	r3, [r7, #4]
 801e792:	689a      	ldr	r2, [r3, #8]
 801e794:	687b      	ldr	r3, [r7, #4]
 801e796:	691b      	ldr	r3, [r3, #16]
 801e798:	431a      	orrs	r2, r3
 801e79a:	687b      	ldr	r3, [r7, #4]
 801e79c:	695b      	ldr	r3, [r3, #20]
 801e79e:	431a      	orrs	r2, r3
 801e7a0:	687b      	ldr	r3, [r7, #4]
 801e7a2:	69db      	ldr	r3, [r3, #28]
 801e7a4:	4313      	orrs	r3, r2
 801e7a6:	60fb      	str	r3, [r7, #12]
  MODIFY_REG(huart->Instance->CR1,
 801e7a8:	687b      	ldr	r3, [r7, #4]
 801e7aa:	681b      	ldr	r3, [r3, #0]
 801e7ac:	68db      	ldr	r3, [r3, #12]
 801e7ae:	f423 4316 	bic.w	r3, r3, #38400	; 0x9600
 801e7b2:	f023 030c 	bic.w	r3, r3, #12
 801e7b6:	687a      	ldr	r2, [r7, #4]
 801e7b8:	6812      	ldr	r2, [r2, #0]
 801e7ba:	68f9      	ldr	r1, [r7, #12]
 801e7bc:	430b      	orrs	r3, r1
 801e7be:	60d3      	str	r3, [r2, #12]
             (uint32_t)(USART_CR1_M | USART_CR1_PCE | USART_CR1_PS | USART_CR1_TE | USART_CR1_RE | USART_CR1_OVER8),
             tmpreg);

  /*-------------------------- USART CR3 Configuration -----------------------*/
  /* Configure the UART HFC: Set CTSE and RTSE bits according to huart->Init.HwFlowCtl value */
  MODIFY_REG(huart->Instance->CR3, (USART_CR3_RTSE | USART_CR3_CTSE), huart->Init.HwFlowCtl);
 801e7c0:	687b      	ldr	r3, [r7, #4]
 801e7c2:	681b      	ldr	r3, [r3, #0]
 801e7c4:	695b      	ldr	r3, [r3, #20]
 801e7c6:	f423 7140 	bic.w	r1, r3, #768	; 0x300
 801e7ca:	687b      	ldr	r3, [r7, #4]
 801e7cc:	699a      	ldr	r2, [r3, #24]
 801e7ce:	687b      	ldr	r3, [r7, #4]
 801e7d0:	681b      	ldr	r3, [r3, #0]
 801e7d2:	430a      	orrs	r2, r1
 801e7d4:	615a      	str	r2, [r3, #20]

  /* Check the Over Sampling */
  if (huart->Init.OverSampling == UART_OVERSAMPLING_8)
 801e7d6:	687b      	ldr	r3, [r7, #4]
 801e7d8:	69db      	ldr	r3, [r3, #28]
 801e7da:	f5b3 4f00 	cmp.w	r3, #32768	; 0x8000
 801e7de:	f040 818b 	bne.w	801eaf8 <UART_SetConfig+0x388>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#elif defined(USART6)
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 801e7e2:	687b      	ldr	r3, [r7, #4]
 801e7e4:	681b      	ldr	r3, [r3, #0]
 801e7e6:	4ac1      	ldr	r2, [pc, #772]	; (801eaec <UART_SetConfig+0x37c>)
 801e7e8:	4293      	cmp	r3, r2
 801e7ea:	d005      	beq.n	801e7f8 <UART_SetConfig+0x88>
 801e7ec:	687b      	ldr	r3, [r7, #4]
 801e7ee:	681b      	ldr	r3, [r3, #0]
 801e7f0:	4abf      	ldr	r2, [pc, #764]	; (801eaf0 <UART_SetConfig+0x380>)
 801e7f2:	4293      	cmp	r3, r2
 801e7f4:	f040 80bd 	bne.w	801e972 <UART_SetConfig+0x202>
    {
      pclk = HAL_RCC_GetPCLK2Freq();
 801e7f8:	f7ff f984 	bl	801db04 <HAL_RCC_GetPCLK2Freq>
 801e7fc:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 801e7fe:	68bb      	ldr	r3, [r7, #8]
 801e800:	461d      	mov	r5, r3
 801e802:	f04f 0600 	mov.w	r6, #0
 801e806:	46a8      	mov	r8, r5
 801e808:	46b1      	mov	r9, r6
 801e80a:	eb18 0308 	adds.w	r3, r8, r8
 801e80e:	eb49 0409 	adc.w	r4, r9, r9
 801e812:	4698      	mov	r8, r3
 801e814:	46a1      	mov	r9, r4
 801e816:	eb18 0805 	adds.w	r8, r8, r5
 801e81a:	eb49 0906 	adc.w	r9, r9, r6
 801e81e:	f04f 0100 	mov.w	r1, #0
 801e822:	f04f 0200 	mov.w	r2, #0
 801e826:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 801e82a:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 801e82e:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801e832:	4688      	mov	r8, r1
 801e834:	4691      	mov	r9, r2
 801e836:	eb18 0005 	adds.w	r0, r8, r5
 801e83a:	eb49 0106 	adc.w	r1, r9, r6
 801e83e:	687b      	ldr	r3, [r7, #4]
 801e840:	685b      	ldr	r3, [r3, #4]
 801e842:	461d      	mov	r5, r3
 801e844:	f04f 0600 	mov.w	r6, #0
 801e848:	196b      	adds	r3, r5, r5
 801e84a:	eb46 0406 	adc.w	r4, r6, r6
 801e84e:	461a      	mov	r2, r3
 801e850:	4623      	mov	r3, r4
 801e852:	f7e2 f9a9 	bl	8000ba8 <__aeabi_uldivmod>
 801e856:	4603      	mov	r3, r0
 801e858:	460c      	mov	r4, r1
 801e85a:	461a      	mov	r2, r3
 801e85c:	4ba5      	ldr	r3, [pc, #660]	; (801eaf4 <UART_SetConfig+0x384>)
 801e85e:	fba3 2302 	umull	r2, r3, r3, r2
 801e862:	095b      	lsrs	r3, r3, #5
 801e864:	ea4f 1803 	mov.w	r8, r3, lsl #4
 801e868:	68bb      	ldr	r3, [r7, #8]
 801e86a:	461d      	mov	r5, r3
 801e86c:	f04f 0600 	mov.w	r6, #0
 801e870:	46a9      	mov	r9, r5
 801e872:	46b2      	mov	sl, r6
 801e874:	eb19 0309 	adds.w	r3, r9, r9
 801e878:	eb4a 040a 	adc.w	r4, sl, sl
 801e87c:	4699      	mov	r9, r3
 801e87e:	46a2      	mov	sl, r4
 801e880:	eb19 0905 	adds.w	r9, r9, r5
 801e884:	eb4a 0a06 	adc.w	sl, sl, r6
 801e888:	f04f 0100 	mov.w	r1, #0
 801e88c:	f04f 0200 	mov.w	r2, #0
 801e890:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 801e894:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 801e898:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 801e89c:	4689      	mov	r9, r1
 801e89e:	4692      	mov	sl, r2
 801e8a0:	eb19 0005 	adds.w	r0, r9, r5
 801e8a4:	eb4a 0106 	adc.w	r1, sl, r6
 801e8a8:	687b      	ldr	r3, [r7, #4]
 801e8aa:	685b      	ldr	r3, [r3, #4]
 801e8ac:	461d      	mov	r5, r3
 801e8ae:	f04f 0600 	mov.w	r6, #0
 801e8b2:	196b      	adds	r3, r5, r5
 801e8b4:	eb46 0406 	adc.w	r4, r6, r6
 801e8b8:	461a      	mov	r2, r3
 801e8ba:	4623      	mov	r3, r4
 801e8bc:	f7e2 f974 	bl	8000ba8 <__aeabi_uldivmod>
 801e8c0:	4603      	mov	r3, r0
 801e8c2:	460c      	mov	r4, r1
 801e8c4:	461a      	mov	r2, r3
 801e8c6:	4b8b      	ldr	r3, [pc, #556]	; (801eaf4 <UART_SetConfig+0x384>)
 801e8c8:	fba3 1302 	umull	r1, r3, r3, r2
 801e8cc:	095b      	lsrs	r3, r3, #5
 801e8ce:	2164      	movs	r1, #100	; 0x64
 801e8d0:	fb01 f303 	mul.w	r3, r1, r3
 801e8d4:	1ad3      	subs	r3, r2, r3
 801e8d6:	00db      	lsls	r3, r3, #3
 801e8d8:	3332      	adds	r3, #50	; 0x32
 801e8da:	4a86      	ldr	r2, [pc, #536]	; (801eaf4 <UART_SetConfig+0x384>)
 801e8dc:	fba2 2303 	umull	r2, r3, r2, r3
 801e8e0:	095b      	lsrs	r3, r3, #5
 801e8e2:	005b      	lsls	r3, r3, #1
 801e8e4:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 801e8e8:	4498      	add	r8, r3
 801e8ea:	68bb      	ldr	r3, [r7, #8]
 801e8ec:	461d      	mov	r5, r3
 801e8ee:	f04f 0600 	mov.w	r6, #0
 801e8f2:	46a9      	mov	r9, r5
 801e8f4:	46b2      	mov	sl, r6
 801e8f6:	eb19 0309 	adds.w	r3, r9, r9
 801e8fa:	eb4a 040a 	adc.w	r4, sl, sl
 801e8fe:	4699      	mov	r9, r3
 801e900:	46a2      	mov	sl, r4
 801e902:	eb19 0905 	adds.w	r9, r9, r5
 801e906:	eb4a 0a06 	adc.w	sl, sl, r6
 801e90a:	f04f 0100 	mov.w	r1, #0
 801e90e:	f04f 0200 	mov.w	r2, #0
 801e912:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 801e916:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 801e91a:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 801e91e:	4689      	mov	r9, r1
 801e920:	4692      	mov	sl, r2
 801e922:	eb19 0005 	adds.w	r0, r9, r5
 801e926:	eb4a 0106 	adc.w	r1, sl, r6
 801e92a:	687b      	ldr	r3, [r7, #4]
 801e92c:	685b      	ldr	r3, [r3, #4]
 801e92e:	461d      	mov	r5, r3
 801e930:	f04f 0600 	mov.w	r6, #0
 801e934:	196b      	adds	r3, r5, r5
 801e936:	eb46 0406 	adc.w	r4, r6, r6
 801e93a:	461a      	mov	r2, r3
 801e93c:	4623      	mov	r3, r4
 801e93e:	f7e2 f933 	bl	8000ba8 <__aeabi_uldivmod>
 801e942:	4603      	mov	r3, r0
 801e944:	460c      	mov	r4, r1
 801e946:	461a      	mov	r2, r3
 801e948:	4b6a      	ldr	r3, [pc, #424]	; (801eaf4 <UART_SetConfig+0x384>)
 801e94a:	fba3 1302 	umull	r1, r3, r3, r2
 801e94e:	095b      	lsrs	r3, r3, #5
 801e950:	2164      	movs	r1, #100	; 0x64
 801e952:	fb01 f303 	mul.w	r3, r1, r3
 801e956:	1ad3      	subs	r3, r2, r3
 801e958:	00db      	lsls	r3, r3, #3
 801e95a:	3332      	adds	r3, #50	; 0x32
 801e95c:	4a65      	ldr	r2, [pc, #404]	; (801eaf4 <UART_SetConfig+0x384>)
 801e95e:	fba2 2303 	umull	r2, r3, r2, r3
 801e962:	095b      	lsrs	r3, r3, #5
 801e964:	f003 0207 	and.w	r2, r3, #7
 801e968:	687b      	ldr	r3, [r7, #4]
 801e96a:	681b      	ldr	r3, [r3, #0]
 801e96c:	4442      	add	r2, r8
 801e96e:	609a      	str	r2, [r3, #8]
 801e970:	e26f      	b.n	801ee52 <UART_SetConfig+0x6e2>
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
    }
#endif /* USART6 */
    else
    {
      pclk = HAL_RCC_GetPCLK1Freq();
 801e972:	f7ff f8b3 	bl	801dadc <HAL_RCC_GetPCLK1Freq>
 801e976:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING8(pclk, huart->Init.BaudRate);
 801e978:	68bb      	ldr	r3, [r7, #8]
 801e97a:	461d      	mov	r5, r3
 801e97c:	f04f 0600 	mov.w	r6, #0
 801e980:	46a8      	mov	r8, r5
 801e982:	46b1      	mov	r9, r6
 801e984:	eb18 0308 	adds.w	r3, r8, r8
 801e988:	eb49 0409 	adc.w	r4, r9, r9
 801e98c:	4698      	mov	r8, r3
 801e98e:	46a1      	mov	r9, r4
 801e990:	eb18 0805 	adds.w	r8, r8, r5
 801e994:	eb49 0906 	adc.w	r9, r9, r6
 801e998:	f04f 0100 	mov.w	r1, #0
 801e99c:	f04f 0200 	mov.w	r2, #0
 801e9a0:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 801e9a4:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 801e9a8:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801e9ac:	4688      	mov	r8, r1
 801e9ae:	4691      	mov	r9, r2
 801e9b0:	eb18 0005 	adds.w	r0, r8, r5
 801e9b4:	eb49 0106 	adc.w	r1, r9, r6
 801e9b8:	687b      	ldr	r3, [r7, #4]
 801e9ba:	685b      	ldr	r3, [r3, #4]
 801e9bc:	461d      	mov	r5, r3
 801e9be:	f04f 0600 	mov.w	r6, #0
 801e9c2:	196b      	adds	r3, r5, r5
 801e9c4:	eb46 0406 	adc.w	r4, r6, r6
 801e9c8:	461a      	mov	r2, r3
 801e9ca:	4623      	mov	r3, r4
 801e9cc:	f7e2 f8ec 	bl	8000ba8 <__aeabi_uldivmod>
 801e9d0:	4603      	mov	r3, r0
 801e9d2:	460c      	mov	r4, r1
 801e9d4:	461a      	mov	r2, r3
 801e9d6:	4b47      	ldr	r3, [pc, #284]	; (801eaf4 <UART_SetConfig+0x384>)
 801e9d8:	fba3 2302 	umull	r2, r3, r3, r2
 801e9dc:	095b      	lsrs	r3, r3, #5
 801e9de:	ea4f 1803 	mov.w	r8, r3, lsl #4
 801e9e2:	68bb      	ldr	r3, [r7, #8]
 801e9e4:	461d      	mov	r5, r3
 801e9e6:	f04f 0600 	mov.w	r6, #0
 801e9ea:	46a9      	mov	r9, r5
 801e9ec:	46b2      	mov	sl, r6
 801e9ee:	eb19 0309 	adds.w	r3, r9, r9
 801e9f2:	eb4a 040a 	adc.w	r4, sl, sl
 801e9f6:	4699      	mov	r9, r3
 801e9f8:	46a2      	mov	sl, r4
 801e9fa:	eb19 0905 	adds.w	r9, r9, r5
 801e9fe:	eb4a 0a06 	adc.w	sl, sl, r6
 801ea02:	f04f 0100 	mov.w	r1, #0
 801ea06:	f04f 0200 	mov.w	r2, #0
 801ea0a:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 801ea0e:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 801ea12:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 801ea16:	4689      	mov	r9, r1
 801ea18:	4692      	mov	sl, r2
 801ea1a:	eb19 0005 	adds.w	r0, r9, r5
 801ea1e:	eb4a 0106 	adc.w	r1, sl, r6
 801ea22:	687b      	ldr	r3, [r7, #4]
 801ea24:	685b      	ldr	r3, [r3, #4]
 801ea26:	461d      	mov	r5, r3
 801ea28:	f04f 0600 	mov.w	r6, #0
 801ea2c:	196b      	adds	r3, r5, r5
 801ea2e:	eb46 0406 	adc.w	r4, r6, r6
 801ea32:	461a      	mov	r2, r3
 801ea34:	4623      	mov	r3, r4
 801ea36:	f7e2 f8b7 	bl	8000ba8 <__aeabi_uldivmod>
 801ea3a:	4603      	mov	r3, r0
 801ea3c:	460c      	mov	r4, r1
 801ea3e:	461a      	mov	r2, r3
 801ea40:	4b2c      	ldr	r3, [pc, #176]	; (801eaf4 <UART_SetConfig+0x384>)
 801ea42:	fba3 1302 	umull	r1, r3, r3, r2
 801ea46:	095b      	lsrs	r3, r3, #5
 801ea48:	2164      	movs	r1, #100	; 0x64
 801ea4a:	fb01 f303 	mul.w	r3, r1, r3
 801ea4e:	1ad3      	subs	r3, r2, r3
 801ea50:	00db      	lsls	r3, r3, #3
 801ea52:	3332      	adds	r3, #50	; 0x32
 801ea54:	4a27      	ldr	r2, [pc, #156]	; (801eaf4 <UART_SetConfig+0x384>)
 801ea56:	fba2 2303 	umull	r2, r3, r2, r3
 801ea5a:	095b      	lsrs	r3, r3, #5
 801ea5c:	005b      	lsls	r3, r3, #1
 801ea5e:	f403 73f8 	and.w	r3, r3, #496	; 0x1f0
 801ea62:	4498      	add	r8, r3
 801ea64:	68bb      	ldr	r3, [r7, #8]
 801ea66:	461d      	mov	r5, r3
 801ea68:	f04f 0600 	mov.w	r6, #0
 801ea6c:	46a9      	mov	r9, r5
 801ea6e:	46b2      	mov	sl, r6
 801ea70:	eb19 0309 	adds.w	r3, r9, r9
 801ea74:	eb4a 040a 	adc.w	r4, sl, sl
 801ea78:	4699      	mov	r9, r3
 801ea7a:	46a2      	mov	sl, r4
 801ea7c:	eb19 0905 	adds.w	r9, r9, r5
 801ea80:	eb4a 0a06 	adc.w	sl, sl, r6
 801ea84:	f04f 0100 	mov.w	r1, #0
 801ea88:	f04f 0200 	mov.w	r2, #0
 801ea8c:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 801ea90:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 801ea94:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 801ea98:	4689      	mov	r9, r1
 801ea9a:	4692      	mov	sl, r2
 801ea9c:	eb19 0005 	adds.w	r0, r9, r5
 801eaa0:	eb4a 0106 	adc.w	r1, sl, r6
 801eaa4:	687b      	ldr	r3, [r7, #4]
 801eaa6:	685b      	ldr	r3, [r3, #4]
 801eaa8:	461d      	mov	r5, r3
 801eaaa:	f04f 0600 	mov.w	r6, #0
 801eaae:	196b      	adds	r3, r5, r5
 801eab0:	eb46 0406 	adc.w	r4, r6, r6
 801eab4:	461a      	mov	r2, r3
 801eab6:	4623      	mov	r3, r4
 801eab8:	f7e2 f876 	bl	8000ba8 <__aeabi_uldivmod>
 801eabc:	4603      	mov	r3, r0
 801eabe:	460c      	mov	r4, r1
 801eac0:	461a      	mov	r2, r3
 801eac2:	4b0c      	ldr	r3, [pc, #48]	; (801eaf4 <UART_SetConfig+0x384>)
 801eac4:	fba3 1302 	umull	r1, r3, r3, r2
 801eac8:	095b      	lsrs	r3, r3, #5
 801eaca:	2164      	movs	r1, #100	; 0x64
 801eacc:	fb01 f303 	mul.w	r3, r1, r3
 801ead0:	1ad3      	subs	r3, r2, r3
 801ead2:	00db      	lsls	r3, r3, #3
 801ead4:	3332      	adds	r3, #50	; 0x32
 801ead6:	4a07      	ldr	r2, [pc, #28]	; (801eaf4 <UART_SetConfig+0x384>)
 801ead8:	fba2 2303 	umull	r2, r3, r2, r3
 801eadc:	095b      	lsrs	r3, r3, #5
 801eade:	f003 0207 	and.w	r2, r3, #7
 801eae2:	687b      	ldr	r3, [r7, #4]
 801eae4:	681b      	ldr	r3, [r3, #0]
 801eae6:	4442      	add	r2, r8
 801eae8:	609a      	str	r2, [r3, #8]
    {
      pclk = HAL_RCC_GetPCLK1Freq();
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
    }
  }
}
 801eaea:	e1b2      	b.n	801ee52 <UART_SetConfig+0x6e2>
 801eaec:	40011000 	.word	0x40011000
 801eaf0:	40011400 	.word	0x40011400
 801eaf4:	51eb851f 	.word	0x51eb851f
    if ((huart->Instance == USART1) || (huart->Instance == USART6))
 801eaf8:	687b      	ldr	r3, [r7, #4]
 801eafa:	681b      	ldr	r3, [r3, #0]
 801eafc:	4ad7      	ldr	r2, [pc, #860]	; (801ee5c <UART_SetConfig+0x6ec>)
 801eafe:	4293      	cmp	r3, r2
 801eb00:	d005      	beq.n	801eb0e <UART_SetConfig+0x39e>
 801eb02:	687b      	ldr	r3, [r7, #4]
 801eb04:	681b      	ldr	r3, [r3, #0]
 801eb06:	4ad6      	ldr	r2, [pc, #856]	; (801ee60 <UART_SetConfig+0x6f0>)
 801eb08:	4293      	cmp	r3, r2
 801eb0a:	f040 80d1 	bne.w	801ecb0 <UART_SetConfig+0x540>
      pclk = HAL_RCC_GetPCLK2Freq();
 801eb0e:	f7fe fff9 	bl	801db04 <HAL_RCC_GetPCLK2Freq>
 801eb12:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 801eb14:	68bb      	ldr	r3, [r7, #8]
 801eb16:	469a      	mov	sl, r3
 801eb18:	f04f 0b00 	mov.w	fp, #0
 801eb1c:	46d0      	mov	r8, sl
 801eb1e:	46d9      	mov	r9, fp
 801eb20:	eb18 0308 	adds.w	r3, r8, r8
 801eb24:	eb49 0409 	adc.w	r4, r9, r9
 801eb28:	4698      	mov	r8, r3
 801eb2a:	46a1      	mov	r9, r4
 801eb2c:	eb18 080a 	adds.w	r8, r8, sl
 801eb30:	eb49 090b 	adc.w	r9, r9, fp
 801eb34:	f04f 0100 	mov.w	r1, #0
 801eb38:	f04f 0200 	mov.w	r2, #0
 801eb3c:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 801eb40:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 801eb44:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801eb48:	4688      	mov	r8, r1
 801eb4a:	4691      	mov	r9, r2
 801eb4c:	eb1a 0508 	adds.w	r5, sl, r8
 801eb50:	eb4b 0609 	adc.w	r6, fp, r9
 801eb54:	687b      	ldr	r3, [r7, #4]
 801eb56:	685b      	ldr	r3, [r3, #4]
 801eb58:	4619      	mov	r1, r3
 801eb5a:	f04f 0200 	mov.w	r2, #0
 801eb5e:	f04f 0300 	mov.w	r3, #0
 801eb62:	f04f 0400 	mov.w	r4, #0
 801eb66:	0094      	lsls	r4, r2, #2
 801eb68:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 801eb6c:	008b      	lsls	r3, r1, #2
 801eb6e:	461a      	mov	r2, r3
 801eb70:	4623      	mov	r3, r4
 801eb72:	4628      	mov	r0, r5
 801eb74:	4631      	mov	r1, r6
 801eb76:	f7e2 f817 	bl	8000ba8 <__aeabi_uldivmod>
 801eb7a:	4603      	mov	r3, r0
 801eb7c:	460c      	mov	r4, r1
 801eb7e:	461a      	mov	r2, r3
 801eb80:	4bb8      	ldr	r3, [pc, #736]	; (801ee64 <UART_SetConfig+0x6f4>)
 801eb82:	fba3 2302 	umull	r2, r3, r3, r2
 801eb86:	095b      	lsrs	r3, r3, #5
 801eb88:	ea4f 1803 	mov.w	r8, r3, lsl #4
 801eb8c:	68bb      	ldr	r3, [r7, #8]
 801eb8e:	469b      	mov	fp, r3
 801eb90:	f04f 0c00 	mov.w	ip, #0
 801eb94:	46d9      	mov	r9, fp
 801eb96:	46e2      	mov	sl, ip
 801eb98:	eb19 0309 	adds.w	r3, r9, r9
 801eb9c:	eb4a 040a 	adc.w	r4, sl, sl
 801eba0:	4699      	mov	r9, r3
 801eba2:	46a2      	mov	sl, r4
 801eba4:	eb19 090b 	adds.w	r9, r9, fp
 801eba8:	eb4a 0a0c 	adc.w	sl, sl, ip
 801ebac:	f04f 0100 	mov.w	r1, #0
 801ebb0:	f04f 0200 	mov.w	r2, #0
 801ebb4:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 801ebb8:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 801ebbc:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 801ebc0:	4689      	mov	r9, r1
 801ebc2:	4692      	mov	sl, r2
 801ebc4:	eb1b 0509 	adds.w	r5, fp, r9
 801ebc8:	eb4c 060a 	adc.w	r6, ip, sl
 801ebcc:	687b      	ldr	r3, [r7, #4]
 801ebce:	685b      	ldr	r3, [r3, #4]
 801ebd0:	4619      	mov	r1, r3
 801ebd2:	f04f 0200 	mov.w	r2, #0
 801ebd6:	f04f 0300 	mov.w	r3, #0
 801ebda:	f04f 0400 	mov.w	r4, #0
 801ebde:	0094      	lsls	r4, r2, #2
 801ebe0:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 801ebe4:	008b      	lsls	r3, r1, #2
 801ebe6:	461a      	mov	r2, r3
 801ebe8:	4623      	mov	r3, r4
 801ebea:	4628      	mov	r0, r5
 801ebec:	4631      	mov	r1, r6
 801ebee:	f7e1 ffdb 	bl	8000ba8 <__aeabi_uldivmod>
 801ebf2:	4603      	mov	r3, r0
 801ebf4:	460c      	mov	r4, r1
 801ebf6:	461a      	mov	r2, r3
 801ebf8:	4b9a      	ldr	r3, [pc, #616]	; (801ee64 <UART_SetConfig+0x6f4>)
 801ebfa:	fba3 1302 	umull	r1, r3, r3, r2
 801ebfe:	095b      	lsrs	r3, r3, #5
 801ec00:	2164      	movs	r1, #100	; 0x64
 801ec02:	fb01 f303 	mul.w	r3, r1, r3
 801ec06:	1ad3      	subs	r3, r2, r3
 801ec08:	011b      	lsls	r3, r3, #4
 801ec0a:	3332      	adds	r3, #50	; 0x32
 801ec0c:	4a95      	ldr	r2, [pc, #596]	; (801ee64 <UART_SetConfig+0x6f4>)
 801ec0e:	fba2 2303 	umull	r2, r3, r2, r3
 801ec12:	095b      	lsrs	r3, r3, #5
 801ec14:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 801ec18:	4498      	add	r8, r3
 801ec1a:	68bb      	ldr	r3, [r7, #8]
 801ec1c:	469b      	mov	fp, r3
 801ec1e:	f04f 0c00 	mov.w	ip, #0
 801ec22:	46d9      	mov	r9, fp
 801ec24:	46e2      	mov	sl, ip
 801ec26:	eb19 0309 	adds.w	r3, r9, r9
 801ec2a:	eb4a 040a 	adc.w	r4, sl, sl
 801ec2e:	4699      	mov	r9, r3
 801ec30:	46a2      	mov	sl, r4
 801ec32:	eb19 090b 	adds.w	r9, r9, fp
 801ec36:	eb4a 0a0c 	adc.w	sl, sl, ip
 801ec3a:	f04f 0100 	mov.w	r1, #0
 801ec3e:	f04f 0200 	mov.w	r2, #0
 801ec42:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 801ec46:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 801ec4a:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 801ec4e:	4689      	mov	r9, r1
 801ec50:	4692      	mov	sl, r2
 801ec52:	eb1b 0509 	adds.w	r5, fp, r9
 801ec56:	eb4c 060a 	adc.w	r6, ip, sl
 801ec5a:	687b      	ldr	r3, [r7, #4]
 801ec5c:	685b      	ldr	r3, [r3, #4]
 801ec5e:	4619      	mov	r1, r3
 801ec60:	f04f 0200 	mov.w	r2, #0
 801ec64:	f04f 0300 	mov.w	r3, #0
 801ec68:	f04f 0400 	mov.w	r4, #0
 801ec6c:	0094      	lsls	r4, r2, #2
 801ec6e:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 801ec72:	008b      	lsls	r3, r1, #2
 801ec74:	461a      	mov	r2, r3
 801ec76:	4623      	mov	r3, r4
 801ec78:	4628      	mov	r0, r5
 801ec7a:	4631      	mov	r1, r6
 801ec7c:	f7e1 ff94 	bl	8000ba8 <__aeabi_uldivmod>
 801ec80:	4603      	mov	r3, r0
 801ec82:	460c      	mov	r4, r1
 801ec84:	461a      	mov	r2, r3
 801ec86:	4b77      	ldr	r3, [pc, #476]	; (801ee64 <UART_SetConfig+0x6f4>)
 801ec88:	fba3 1302 	umull	r1, r3, r3, r2
 801ec8c:	095b      	lsrs	r3, r3, #5
 801ec8e:	2164      	movs	r1, #100	; 0x64
 801ec90:	fb01 f303 	mul.w	r3, r1, r3
 801ec94:	1ad3      	subs	r3, r2, r3
 801ec96:	011b      	lsls	r3, r3, #4
 801ec98:	3332      	adds	r3, #50	; 0x32
 801ec9a:	4a72      	ldr	r2, [pc, #456]	; (801ee64 <UART_SetConfig+0x6f4>)
 801ec9c:	fba2 2303 	umull	r2, r3, r2, r3
 801eca0:	095b      	lsrs	r3, r3, #5
 801eca2:	f003 020f 	and.w	r2, r3, #15
 801eca6:	687b      	ldr	r3, [r7, #4]
 801eca8:	681b      	ldr	r3, [r3, #0]
 801ecaa:	4442      	add	r2, r8
 801ecac:	609a      	str	r2, [r3, #8]
 801ecae:	e0d0      	b.n	801ee52 <UART_SetConfig+0x6e2>
      pclk = HAL_RCC_GetPCLK1Freq();
 801ecb0:	f7fe ff14 	bl	801dadc <HAL_RCC_GetPCLK1Freq>
 801ecb4:	60b8      	str	r0, [r7, #8]
      huart->Instance->BRR = UART_BRR_SAMPLING16(pclk, huart->Init.BaudRate);
 801ecb6:	68bb      	ldr	r3, [r7, #8]
 801ecb8:	469a      	mov	sl, r3
 801ecba:	f04f 0b00 	mov.w	fp, #0
 801ecbe:	46d0      	mov	r8, sl
 801ecc0:	46d9      	mov	r9, fp
 801ecc2:	eb18 0308 	adds.w	r3, r8, r8
 801ecc6:	eb49 0409 	adc.w	r4, r9, r9
 801ecca:	4698      	mov	r8, r3
 801eccc:	46a1      	mov	r9, r4
 801ecce:	eb18 080a 	adds.w	r8, r8, sl
 801ecd2:	eb49 090b 	adc.w	r9, r9, fp
 801ecd6:	f04f 0100 	mov.w	r1, #0
 801ecda:	f04f 0200 	mov.w	r2, #0
 801ecde:	ea4f 02c9 	mov.w	r2, r9, lsl #3
 801ece2:	ea42 7258 	orr.w	r2, r2, r8, lsr #29
 801ece6:	ea4f 01c8 	mov.w	r1, r8, lsl #3
 801ecea:	4688      	mov	r8, r1
 801ecec:	4691      	mov	r9, r2
 801ecee:	eb1a 0508 	adds.w	r5, sl, r8
 801ecf2:	eb4b 0609 	adc.w	r6, fp, r9
 801ecf6:	687b      	ldr	r3, [r7, #4]
 801ecf8:	685b      	ldr	r3, [r3, #4]
 801ecfa:	4619      	mov	r1, r3
 801ecfc:	f04f 0200 	mov.w	r2, #0
 801ed00:	f04f 0300 	mov.w	r3, #0
 801ed04:	f04f 0400 	mov.w	r4, #0
 801ed08:	0094      	lsls	r4, r2, #2
 801ed0a:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 801ed0e:	008b      	lsls	r3, r1, #2
 801ed10:	461a      	mov	r2, r3
 801ed12:	4623      	mov	r3, r4
 801ed14:	4628      	mov	r0, r5
 801ed16:	4631      	mov	r1, r6
 801ed18:	f7e1 ff46 	bl	8000ba8 <__aeabi_uldivmod>
 801ed1c:	4603      	mov	r3, r0
 801ed1e:	460c      	mov	r4, r1
 801ed20:	461a      	mov	r2, r3
 801ed22:	4b50      	ldr	r3, [pc, #320]	; (801ee64 <UART_SetConfig+0x6f4>)
 801ed24:	fba3 2302 	umull	r2, r3, r3, r2
 801ed28:	095b      	lsrs	r3, r3, #5
 801ed2a:	ea4f 1803 	mov.w	r8, r3, lsl #4
 801ed2e:	68bb      	ldr	r3, [r7, #8]
 801ed30:	469b      	mov	fp, r3
 801ed32:	f04f 0c00 	mov.w	ip, #0
 801ed36:	46d9      	mov	r9, fp
 801ed38:	46e2      	mov	sl, ip
 801ed3a:	eb19 0309 	adds.w	r3, r9, r9
 801ed3e:	eb4a 040a 	adc.w	r4, sl, sl
 801ed42:	4699      	mov	r9, r3
 801ed44:	46a2      	mov	sl, r4
 801ed46:	eb19 090b 	adds.w	r9, r9, fp
 801ed4a:	eb4a 0a0c 	adc.w	sl, sl, ip
 801ed4e:	f04f 0100 	mov.w	r1, #0
 801ed52:	f04f 0200 	mov.w	r2, #0
 801ed56:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 801ed5a:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 801ed5e:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 801ed62:	4689      	mov	r9, r1
 801ed64:	4692      	mov	sl, r2
 801ed66:	eb1b 0509 	adds.w	r5, fp, r9
 801ed6a:	eb4c 060a 	adc.w	r6, ip, sl
 801ed6e:	687b      	ldr	r3, [r7, #4]
 801ed70:	685b      	ldr	r3, [r3, #4]
 801ed72:	4619      	mov	r1, r3
 801ed74:	f04f 0200 	mov.w	r2, #0
 801ed78:	f04f 0300 	mov.w	r3, #0
 801ed7c:	f04f 0400 	mov.w	r4, #0
 801ed80:	0094      	lsls	r4, r2, #2
 801ed82:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 801ed86:	008b      	lsls	r3, r1, #2
 801ed88:	461a      	mov	r2, r3
 801ed8a:	4623      	mov	r3, r4
 801ed8c:	4628      	mov	r0, r5
 801ed8e:	4631      	mov	r1, r6
 801ed90:	f7e1 ff0a 	bl	8000ba8 <__aeabi_uldivmod>
 801ed94:	4603      	mov	r3, r0
 801ed96:	460c      	mov	r4, r1
 801ed98:	461a      	mov	r2, r3
 801ed9a:	4b32      	ldr	r3, [pc, #200]	; (801ee64 <UART_SetConfig+0x6f4>)
 801ed9c:	fba3 1302 	umull	r1, r3, r3, r2
 801eda0:	095b      	lsrs	r3, r3, #5
 801eda2:	2164      	movs	r1, #100	; 0x64
 801eda4:	fb01 f303 	mul.w	r3, r1, r3
 801eda8:	1ad3      	subs	r3, r2, r3
 801edaa:	011b      	lsls	r3, r3, #4
 801edac:	3332      	adds	r3, #50	; 0x32
 801edae:	4a2d      	ldr	r2, [pc, #180]	; (801ee64 <UART_SetConfig+0x6f4>)
 801edb0:	fba2 2303 	umull	r2, r3, r2, r3
 801edb4:	095b      	lsrs	r3, r3, #5
 801edb6:	f003 03f0 	and.w	r3, r3, #240	; 0xf0
 801edba:	4498      	add	r8, r3
 801edbc:	68bb      	ldr	r3, [r7, #8]
 801edbe:	469b      	mov	fp, r3
 801edc0:	f04f 0c00 	mov.w	ip, #0
 801edc4:	46d9      	mov	r9, fp
 801edc6:	46e2      	mov	sl, ip
 801edc8:	eb19 0309 	adds.w	r3, r9, r9
 801edcc:	eb4a 040a 	adc.w	r4, sl, sl
 801edd0:	4699      	mov	r9, r3
 801edd2:	46a2      	mov	sl, r4
 801edd4:	eb19 090b 	adds.w	r9, r9, fp
 801edd8:	eb4a 0a0c 	adc.w	sl, sl, ip
 801eddc:	f04f 0100 	mov.w	r1, #0
 801ede0:	f04f 0200 	mov.w	r2, #0
 801ede4:	ea4f 02ca 	mov.w	r2, sl, lsl #3
 801ede8:	ea42 7259 	orr.w	r2, r2, r9, lsr #29
 801edec:	ea4f 01c9 	mov.w	r1, r9, lsl #3
 801edf0:	4689      	mov	r9, r1
 801edf2:	4692      	mov	sl, r2
 801edf4:	eb1b 0509 	adds.w	r5, fp, r9
 801edf8:	eb4c 060a 	adc.w	r6, ip, sl
 801edfc:	687b      	ldr	r3, [r7, #4]
 801edfe:	685b      	ldr	r3, [r3, #4]
 801ee00:	4619      	mov	r1, r3
 801ee02:	f04f 0200 	mov.w	r2, #0
 801ee06:	f04f 0300 	mov.w	r3, #0
 801ee0a:	f04f 0400 	mov.w	r4, #0
 801ee0e:	0094      	lsls	r4, r2, #2
 801ee10:	ea44 7491 	orr.w	r4, r4, r1, lsr #30
 801ee14:	008b      	lsls	r3, r1, #2
 801ee16:	461a      	mov	r2, r3
 801ee18:	4623      	mov	r3, r4
 801ee1a:	4628      	mov	r0, r5
 801ee1c:	4631      	mov	r1, r6
 801ee1e:	f7e1 fec3 	bl	8000ba8 <__aeabi_uldivmod>
 801ee22:	4603      	mov	r3, r0
 801ee24:	460c      	mov	r4, r1
 801ee26:	461a      	mov	r2, r3
 801ee28:	4b0e      	ldr	r3, [pc, #56]	; (801ee64 <UART_SetConfig+0x6f4>)
 801ee2a:	fba3 1302 	umull	r1, r3, r3, r2
 801ee2e:	095b      	lsrs	r3, r3, #5
 801ee30:	2164      	movs	r1, #100	; 0x64
 801ee32:	fb01 f303 	mul.w	r3, r1, r3
 801ee36:	1ad3      	subs	r3, r2, r3
 801ee38:	011b      	lsls	r3, r3, #4
 801ee3a:	3332      	adds	r3, #50	; 0x32
 801ee3c:	4a09      	ldr	r2, [pc, #36]	; (801ee64 <UART_SetConfig+0x6f4>)
 801ee3e:	fba2 2303 	umull	r2, r3, r2, r3
 801ee42:	095b      	lsrs	r3, r3, #5
 801ee44:	f003 020f 	and.w	r2, r3, #15
 801ee48:	687b      	ldr	r3, [r7, #4]
 801ee4a:	681b      	ldr	r3, [r3, #0]
 801ee4c:	4442      	add	r2, r8
 801ee4e:	609a      	str	r2, [r3, #8]
}
 801ee50:	e7ff      	b.n	801ee52 <UART_SetConfig+0x6e2>
 801ee52:	bf00      	nop
 801ee54:	3714      	adds	r7, #20
 801ee56:	46bd      	mov	sp, r7
 801ee58:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801ee5c:	40011000 	.word	0x40011000
 801ee60:	40011400 	.word	0x40011400
 801ee64:	51eb851f 	.word	0x51eb851f

0801ee68 <__errno>:
 801ee68:	4b01      	ldr	r3, [pc, #4]	; (801ee70 <__errno+0x8>)
 801ee6a:	6818      	ldr	r0, [r3, #0]
 801ee6c:	4770      	bx	lr
 801ee6e:	bf00      	nop
 801ee70:	2000000c 	.word	0x2000000c

0801ee74 <__libc_init_array>:
 801ee74:	b570      	push	{r4, r5, r6, lr}
 801ee76:	4e0d      	ldr	r6, [pc, #52]	; (801eeac <__libc_init_array+0x38>)
 801ee78:	4c0d      	ldr	r4, [pc, #52]	; (801eeb0 <__libc_init_array+0x3c>)
 801ee7a:	1ba4      	subs	r4, r4, r6
 801ee7c:	10a4      	asrs	r4, r4, #2
 801ee7e:	2500      	movs	r5, #0
 801ee80:	42a5      	cmp	r5, r4
 801ee82:	d109      	bne.n	801ee98 <__libc_init_array+0x24>
 801ee84:	4e0b      	ldr	r6, [pc, #44]	; (801eeb4 <__libc_init_array+0x40>)
 801ee86:	4c0c      	ldr	r4, [pc, #48]	; (801eeb8 <__libc_init_array+0x44>)
 801ee88:	f001 fc9c 	bl	80207c4 <_init>
 801ee8c:	1ba4      	subs	r4, r4, r6
 801ee8e:	10a4      	asrs	r4, r4, #2
 801ee90:	2500      	movs	r5, #0
 801ee92:	42a5      	cmp	r5, r4
 801ee94:	d105      	bne.n	801eea2 <__libc_init_array+0x2e>
 801ee96:	bd70      	pop	{r4, r5, r6, pc}
 801ee98:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801ee9c:	4798      	blx	r3
 801ee9e:	3501      	adds	r5, #1
 801eea0:	e7ee      	b.n	801ee80 <__libc_init_array+0xc>
 801eea2:	f856 3025 	ldr.w	r3, [r6, r5, lsl #2]
 801eea6:	4798      	blx	r3
 801eea8:	3501      	adds	r5, #1
 801eeaa:	e7f2      	b.n	801ee92 <__libc_init_array+0x1e>
 801eeac:	0802a008 	.word	0x0802a008
 801eeb0:	0802a008 	.word	0x0802a008
 801eeb4:	0802a008 	.word	0x0802a008
 801eeb8:	0802a00c 	.word	0x0802a00c

0801eebc <memset>:
 801eebc:	4402      	add	r2, r0
 801eebe:	4603      	mov	r3, r0
 801eec0:	4293      	cmp	r3, r2
 801eec2:	d100      	bne.n	801eec6 <memset+0xa>
 801eec4:	4770      	bx	lr
 801eec6:	f803 1b01 	strb.w	r1, [r3], #1
 801eeca:	e7f9      	b.n	801eec0 <memset+0x4>

0801eecc <siprintf>:
 801eecc:	b40e      	push	{r1, r2, r3}
 801eece:	b500      	push	{lr}
 801eed0:	b09c      	sub	sp, #112	; 0x70
 801eed2:	ab1d      	add	r3, sp, #116	; 0x74
 801eed4:	9002      	str	r0, [sp, #8]
 801eed6:	9006      	str	r0, [sp, #24]
 801eed8:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 801eedc:	4809      	ldr	r0, [pc, #36]	; (801ef04 <siprintf+0x38>)
 801eede:	9107      	str	r1, [sp, #28]
 801eee0:	9104      	str	r1, [sp, #16]
 801eee2:	4909      	ldr	r1, [pc, #36]	; (801ef08 <siprintf+0x3c>)
 801eee4:	f853 2b04 	ldr.w	r2, [r3], #4
 801eee8:	9105      	str	r1, [sp, #20]
 801eeea:	6800      	ldr	r0, [r0, #0]
 801eeec:	9301      	str	r3, [sp, #4]
 801eeee:	a902      	add	r1, sp, #8
 801eef0:	f000 f886 	bl	801f000 <_svfiprintf_r>
 801eef4:	9b02      	ldr	r3, [sp, #8]
 801eef6:	2200      	movs	r2, #0
 801eef8:	701a      	strb	r2, [r3, #0]
 801eefa:	b01c      	add	sp, #112	; 0x70
 801eefc:	f85d eb04 	ldr.w	lr, [sp], #4
 801ef00:	b003      	add	sp, #12
 801ef02:	4770      	bx	lr
 801ef04:	2000000c 	.word	0x2000000c
 801ef08:	ffff0208 	.word	0xffff0208

0801ef0c <_vsiprintf_r>:
 801ef0c:	b500      	push	{lr}
 801ef0e:	b09b      	sub	sp, #108	; 0x6c
 801ef10:	9100      	str	r1, [sp, #0]
 801ef12:	9104      	str	r1, [sp, #16]
 801ef14:	f06f 4100 	mvn.w	r1, #2147483648	; 0x80000000
 801ef18:	9105      	str	r1, [sp, #20]
 801ef1a:	9102      	str	r1, [sp, #8]
 801ef1c:	4905      	ldr	r1, [pc, #20]	; (801ef34 <_vsiprintf_r+0x28>)
 801ef1e:	9103      	str	r1, [sp, #12]
 801ef20:	4669      	mov	r1, sp
 801ef22:	f000 f86d 	bl	801f000 <_svfiprintf_r>
 801ef26:	9b00      	ldr	r3, [sp, #0]
 801ef28:	2200      	movs	r2, #0
 801ef2a:	701a      	strb	r2, [r3, #0]
 801ef2c:	b01b      	add	sp, #108	; 0x6c
 801ef2e:	f85d fb04 	ldr.w	pc, [sp], #4
 801ef32:	bf00      	nop
 801ef34:	ffff0208 	.word	0xffff0208

0801ef38 <vsiprintf>:
 801ef38:	4613      	mov	r3, r2
 801ef3a:	460a      	mov	r2, r1
 801ef3c:	4601      	mov	r1, r0
 801ef3e:	4802      	ldr	r0, [pc, #8]	; (801ef48 <vsiprintf+0x10>)
 801ef40:	6800      	ldr	r0, [r0, #0]
 801ef42:	f7ff bfe3 	b.w	801ef0c <_vsiprintf_r>
 801ef46:	bf00      	nop
 801ef48:	2000000c 	.word	0x2000000c

0801ef4c <__ssputs_r>:
 801ef4c:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801ef50:	688e      	ldr	r6, [r1, #8]
 801ef52:	429e      	cmp	r6, r3
 801ef54:	4682      	mov	sl, r0
 801ef56:	460c      	mov	r4, r1
 801ef58:	4690      	mov	r8, r2
 801ef5a:	4699      	mov	r9, r3
 801ef5c:	d837      	bhi.n	801efce <__ssputs_r+0x82>
 801ef5e:	898a      	ldrh	r2, [r1, #12]
 801ef60:	f412 6f90 	tst.w	r2, #1152	; 0x480
 801ef64:	d031      	beq.n	801efca <__ssputs_r+0x7e>
 801ef66:	6825      	ldr	r5, [r4, #0]
 801ef68:	6909      	ldr	r1, [r1, #16]
 801ef6a:	1a6f      	subs	r7, r5, r1
 801ef6c:	6965      	ldr	r5, [r4, #20]
 801ef6e:	2302      	movs	r3, #2
 801ef70:	eb05 0545 	add.w	r5, r5, r5, lsl #1
 801ef74:	fb95 f5f3 	sdiv	r5, r5, r3
 801ef78:	f109 0301 	add.w	r3, r9, #1
 801ef7c:	443b      	add	r3, r7
 801ef7e:	429d      	cmp	r5, r3
 801ef80:	bf38      	it	cc
 801ef82:	461d      	movcc	r5, r3
 801ef84:	0553      	lsls	r3, r2, #21
 801ef86:	d530      	bpl.n	801efea <__ssputs_r+0x9e>
 801ef88:	4629      	mov	r1, r5
 801ef8a:	f000 fb2b 	bl	801f5e4 <_malloc_r>
 801ef8e:	4606      	mov	r6, r0
 801ef90:	b950      	cbnz	r0, 801efa8 <__ssputs_r+0x5c>
 801ef92:	230c      	movs	r3, #12
 801ef94:	f8ca 3000 	str.w	r3, [sl]
 801ef98:	89a3      	ldrh	r3, [r4, #12]
 801ef9a:	f043 0340 	orr.w	r3, r3, #64	; 0x40
 801ef9e:	81a3      	strh	r3, [r4, #12]
 801efa0:	f04f 30ff 	mov.w	r0, #4294967295
 801efa4:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801efa8:	463a      	mov	r2, r7
 801efaa:	6921      	ldr	r1, [r4, #16]
 801efac:	f000 faa8 	bl	801f500 <memcpy>
 801efb0:	89a3      	ldrh	r3, [r4, #12]
 801efb2:	f423 6390 	bic.w	r3, r3, #1152	; 0x480
 801efb6:	f043 0380 	orr.w	r3, r3, #128	; 0x80
 801efba:	81a3      	strh	r3, [r4, #12]
 801efbc:	6126      	str	r6, [r4, #16]
 801efbe:	6165      	str	r5, [r4, #20]
 801efc0:	443e      	add	r6, r7
 801efc2:	1bed      	subs	r5, r5, r7
 801efc4:	6026      	str	r6, [r4, #0]
 801efc6:	60a5      	str	r5, [r4, #8]
 801efc8:	464e      	mov	r6, r9
 801efca:	454e      	cmp	r6, r9
 801efcc:	d900      	bls.n	801efd0 <__ssputs_r+0x84>
 801efce:	464e      	mov	r6, r9
 801efd0:	4632      	mov	r2, r6
 801efd2:	4641      	mov	r1, r8
 801efd4:	6820      	ldr	r0, [r4, #0]
 801efd6:	f000 fa9e 	bl	801f516 <memmove>
 801efda:	68a3      	ldr	r3, [r4, #8]
 801efdc:	1b9b      	subs	r3, r3, r6
 801efde:	60a3      	str	r3, [r4, #8]
 801efe0:	6823      	ldr	r3, [r4, #0]
 801efe2:	441e      	add	r6, r3
 801efe4:	6026      	str	r6, [r4, #0]
 801efe6:	2000      	movs	r0, #0
 801efe8:	e7dc      	b.n	801efa4 <__ssputs_r+0x58>
 801efea:	462a      	mov	r2, r5
 801efec:	f000 fb54 	bl	801f698 <_realloc_r>
 801eff0:	4606      	mov	r6, r0
 801eff2:	2800      	cmp	r0, #0
 801eff4:	d1e2      	bne.n	801efbc <__ssputs_r+0x70>
 801eff6:	6921      	ldr	r1, [r4, #16]
 801eff8:	4650      	mov	r0, sl
 801effa:	f000 faa5 	bl	801f548 <_free_r>
 801effe:	e7c8      	b.n	801ef92 <__ssputs_r+0x46>

0801f000 <_svfiprintf_r>:
 801f000:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f004:	461d      	mov	r5, r3
 801f006:	898b      	ldrh	r3, [r1, #12]
 801f008:	061f      	lsls	r7, r3, #24
 801f00a:	b09d      	sub	sp, #116	; 0x74
 801f00c:	4680      	mov	r8, r0
 801f00e:	460c      	mov	r4, r1
 801f010:	4616      	mov	r6, r2
 801f012:	d50f      	bpl.n	801f034 <_svfiprintf_r+0x34>
 801f014:	690b      	ldr	r3, [r1, #16]
 801f016:	b96b      	cbnz	r3, 801f034 <_svfiprintf_r+0x34>
 801f018:	2140      	movs	r1, #64	; 0x40
 801f01a:	f000 fae3 	bl	801f5e4 <_malloc_r>
 801f01e:	6020      	str	r0, [r4, #0]
 801f020:	6120      	str	r0, [r4, #16]
 801f022:	b928      	cbnz	r0, 801f030 <_svfiprintf_r+0x30>
 801f024:	230c      	movs	r3, #12
 801f026:	f8c8 3000 	str.w	r3, [r8]
 801f02a:	f04f 30ff 	mov.w	r0, #4294967295
 801f02e:	e0c8      	b.n	801f1c2 <_svfiprintf_r+0x1c2>
 801f030:	2340      	movs	r3, #64	; 0x40
 801f032:	6163      	str	r3, [r4, #20]
 801f034:	2300      	movs	r3, #0
 801f036:	9309      	str	r3, [sp, #36]	; 0x24
 801f038:	2320      	movs	r3, #32
 801f03a:	f88d 3029 	strb.w	r3, [sp, #41]	; 0x29
 801f03e:	2330      	movs	r3, #48	; 0x30
 801f040:	f88d 302a 	strb.w	r3, [sp, #42]	; 0x2a
 801f044:	9503      	str	r5, [sp, #12]
 801f046:	f04f 0b01 	mov.w	fp, #1
 801f04a:	4637      	mov	r7, r6
 801f04c:	463d      	mov	r5, r7
 801f04e:	f815 3b01 	ldrb.w	r3, [r5], #1
 801f052:	b10b      	cbz	r3, 801f058 <_svfiprintf_r+0x58>
 801f054:	2b25      	cmp	r3, #37	; 0x25
 801f056:	d13e      	bne.n	801f0d6 <_svfiprintf_r+0xd6>
 801f058:	ebb7 0a06 	subs.w	sl, r7, r6
 801f05c:	d00b      	beq.n	801f076 <_svfiprintf_r+0x76>
 801f05e:	4653      	mov	r3, sl
 801f060:	4632      	mov	r2, r6
 801f062:	4621      	mov	r1, r4
 801f064:	4640      	mov	r0, r8
 801f066:	f7ff ff71 	bl	801ef4c <__ssputs_r>
 801f06a:	3001      	adds	r0, #1
 801f06c:	f000 80a4 	beq.w	801f1b8 <_svfiprintf_r+0x1b8>
 801f070:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f072:	4453      	add	r3, sl
 801f074:	9309      	str	r3, [sp, #36]	; 0x24
 801f076:	783b      	ldrb	r3, [r7, #0]
 801f078:	2b00      	cmp	r3, #0
 801f07a:	f000 809d 	beq.w	801f1b8 <_svfiprintf_r+0x1b8>
 801f07e:	2300      	movs	r3, #0
 801f080:	f04f 32ff 	mov.w	r2, #4294967295
 801f084:	e9cd 2305 	strd	r2, r3, [sp, #20]
 801f088:	9304      	str	r3, [sp, #16]
 801f08a:	9307      	str	r3, [sp, #28]
 801f08c:	f88d 3053 	strb.w	r3, [sp, #83]	; 0x53
 801f090:	931a      	str	r3, [sp, #104]	; 0x68
 801f092:	462f      	mov	r7, r5
 801f094:	2205      	movs	r2, #5
 801f096:	f817 1b01 	ldrb.w	r1, [r7], #1
 801f09a:	4850      	ldr	r0, [pc, #320]	; (801f1dc <_svfiprintf_r+0x1dc>)
 801f09c:	f7e1 f8a8 	bl	80001f0 <memchr>
 801f0a0:	9b04      	ldr	r3, [sp, #16]
 801f0a2:	b9d0      	cbnz	r0, 801f0da <_svfiprintf_r+0xda>
 801f0a4:	06d9      	lsls	r1, r3, #27
 801f0a6:	bf44      	itt	mi
 801f0a8:	2220      	movmi	r2, #32
 801f0aa:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801f0ae:	071a      	lsls	r2, r3, #28
 801f0b0:	bf44      	itt	mi
 801f0b2:	222b      	movmi	r2, #43	; 0x2b
 801f0b4:	f88d 2053 	strbmi.w	r2, [sp, #83]	; 0x53
 801f0b8:	782a      	ldrb	r2, [r5, #0]
 801f0ba:	2a2a      	cmp	r2, #42	; 0x2a
 801f0bc:	d015      	beq.n	801f0ea <_svfiprintf_r+0xea>
 801f0be:	9a07      	ldr	r2, [sp, #28]
 801f0c0:	462f      	mov	r7, r5
 801f0c2:	2000      	movs	r0, #0
 801f0c4:	250a      	movs	r5, #10
 801f0c6:	4639      	mov	r1, r7
 801f0c8:	f811 3b01 	ldrb.w	r3, [r1], #1
 801f0cc:	3b30      	subs	r3, #48	; 0x30
 801f0ce:	2b09      	cmp	r3, #9
 801f0d0:	d94d      	bls.n	801f16e <_svfiprintf_r+0x16e>
 801f0d2:	b1b8      	cbz	r0, 801f104 <_svfiprintf_r+0x104>
 801f0d4:	e00f      	b.n	801f0f6 <_svfiprintf_r+0xf6>
 801f0d6:	462f      	mov	r7, r5
 801f0d8:	e7b8      	b.n	801f04c <_svfiprintf_r+0x4c>
 801f0da:	4a40      	ldr	r2, [pc, #256]	; (801f1dc <_svfiprintf_r+0x1dc>)
 801f0dc:	1a80      	subs	r0, r0, r2
 801f0de:	fa0b f000 	lsl.w	r0, fp, r0
 801f0e2:	4318      	orrs	r0, r3
 801f0e4:	9004      	str	r0, [sp, #16]
 801f0e6:	463d      	mov	r5, r7
 801f0e8:	e7d3      	b.n	801f092 <_svfiprintf_r+0x92>
 801f0ea:	9a03      	ldr	r2, [sp, #12]
 801f0ec:	1d11      	adds	r1, r2, #4
 801f0ee:	6812      	ldr	r2, [r2, #0]
 801f0f0:	9103      	str	r1, [sp, #12]
 801f0f2:	2a00      	cmp	r2, #0
 801f0f4:	db01      	blt.n	801f0fa <_svfiprintf_r+0xfa>
 801f0f6:	9207      	str	r2, [sp, #28]
 801f0f8:	e004      	b.n	801f104 <_svfiprintf_r+0x104>
 801f0fa:	4252      	negs	r2, r2
 801f0fc:	f043 0302 	orr.w	r3, r3, #2
 801f100:	9207      	str	r2, [sp, #28]
 801f102:	9304      	str	r3, [sp, #16]
 801f104:	783b      	ldrb	r3, [r7, #0]
 801f106:	2b2e      	cmp	r3, #46	; 0x2e
 801f108:	d10c      	bne.n	801f124 <_svfiprintf_r+0x124>
 801f10a:	787b      	ldrb	r3, [r7, #1]
 801f10c:	2b2a      	cmp	r3, #42	; 0x2a
 801f10e:	d133      	bne.n	801f178 <_svfiprintf_r+0x178>
 801f110:	9b03      	ldr	r3, [sp, #12]
 801f112:	1d1a      	adds	r2, r3, #4
 801f114:	681b      	ldr	r3, [r3, #0]
 801f116:	9203      	str	r2, [sp, #12]
 801f118:	2b00      	cmp	r3, #0
 801f11a:	bfb8      	it	lt
 801f11c:	f04f 33ff 	movlt.w	r3, #4294967295
 801f120:	3702      	adds	r7, #2
 801f122:	9305      	str	r3, [sp, #20]
 801f124:	4d2e      	ldr	r5, [pc, #184]	; (801f1e0 <_svfiprintf_r+0x1e0>)
 801f126:	7839      	ldrb	r1, [r7, #0]
 801f128:	2203      	movs	r2, #3
 801f12a:	4628      	mov	r0, r5
 801f12c:	f7e1 f860 	bl	80001f0 <memchr>
 801f130:	b138      	cbz	r0, 801f142 <_svfiprintf_r+0x142>
 801f132:	2340      	movs	r3, #64	; 0x40
 801f134:	1b40      	subs	r0, r0, r5
 801f136:	fa03 f000 	lsl.w	r0, r3, r0
 801f13a:	9b04      	ldr	r3, [sp, #16]
 801f13c:	4303      	orrs	r3, r0
 801f13e:	3701      	adds	r7, #1
 801f140:	9304      	str	r3, [sp, #16]
 801f142:	7839      	ldrb	r1, [r7, #0]
 801f144:	4827      	ldr	r0, [pc, #156]	; (801f1e4 <_svfiprintf_r+0x1e4>)
 801f146:	f88d 1028 	strb.w	r1, [sp, #40]	; 0x28
 801f14a:	2206      	movs	r2, #6
 801f14c:	1c7e      	adds	r6, r7, #1
 801f14e:	f7e1 f84f 	bl	80001f0 <memchr>
 801f152:	2800      	cmp	r0, #0
 801f154:	d038      	beq.n	801f1c8 <_svfiprintf_r+0x1c8>
 801f156:	4b24      	ldr	r3, [pc, #144]	; (801f1e8 <_svfiprintf_r+0x1e8>)
 801f158:	bb13      	cbnz	r3, 801f1a0 <_svfiprintf_r+0x1a0>
 801f15a:	9b03      	ldr	r3, [sp, #12]
 801f15c:	3307      	adds	r3, #7
 801f15e:	f023 0307 	bic.w	r3, r3, #7
 801f162:	3308      	adds	r3, #8
 801f164:	9303      	str	r3, [sp, #12]
 801f166:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801f168:	444b      	add	r3, r9
 801f16a:	9309      	str	r3, [sp, #36]	; 0x24
 801f16c:	e76d      	b.n	801f04a <_svfiprintf_r+0x4a>
 801f16e:	fb05 3202 	mla	r2, r5, r2, r3
 801f172:	2001      	movs	r0, #1
 801f174:	460f      	mov	r7, r1
 801f176:	e7a6      	b.n	801f0c6 <_svfiprintf_r+0xc6>
 801f178:	2300      	movs	r3, #0
 801f17a:	3701      	adds	r7, #1
 801f17c:	9305      	str	r3, [sp, #20]
 801f17e:	4619      	mov	r1, r3
 801f180:	250a      	movs	r5, #10
 801f182:	4638      	mov	r0, r7
 801f184:	f810 2b01 	ldrb.w	r2, [r0], #1
 801f188:	3a30      	subs	r2, #48	; 0x30
 801f18a:	2a09      	cmp	r2, #9
 801f18c:	d903      	bls.n	801f196 <_svfiprintf_r+0x196>
 801f18e:	2b00      	cmp	r3, #0
 801f190:	d0c8      	beq.n	801f124 <_svfiprintf_r+0x124>
 801f192:	9105      	str	r1, [sp, #20]
 801f194:	e7c6      	b.n	801f124 <_svfiprintf_r+0x124>
 801f196:	fb05 2101 	mla	r1, r5, r1, r2
 801f19a:	2301      	movs	r3, #1
 801f19c:	4607      	mov	r7, r0
 801f19e:	e7f0      	b.n	801f182 <_svfiprintf_r+0x182>
 801f1a0:	ab03      	add	r3, sp, #12
 801f1a2:	9300      	str	r3, [sp, #0]
 801f1a4:	4622      	mov	r2, r4
 801f1a6:	4b11      	ldr	r3, [pc, #68]	; (801f1ec <_svfiprintf_r+0x1ec>)
 801f1a8:	a904      	add	r1, sp, #16
 801f1aa:	4640      	mov	r0, r8
 801f1ac:	f3af 8000 	nop.w
 801f1b0:	f1b0 3fff 	cmp.w	r0, #4294967295
 801f1b4:	4681      	mov	r9, r0
 801f1b6:	d1d6      	bne.n	801f166 <_svfiprintf_r+0x166>
 801f1b8:	89a3      	ldrh	r3, [r4, #12]
 801f1ba:	065b      	lsls	r3, r3, #25
 801f1bc:	f53f af35 	bmi.w	801f02a <_svfiprintf_r+0x2a>
 801f1c0:	9809      	ldr	r0, [sp, #36]	; 0x24
 801f1c2:	b01d      	add	sp, #116	; 0x74
 801f1c4:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f1c8:	ab03      	add	r3, sp, #12
 801f1ca:	9300      	str	r3, [sp, #0]
 801f1cc:	4622      	mov	r2, r4
 801f1ce:	4b07      	ldr	r3, [pc, #28]	; (801f1ec <_svfiprintf_r+0x1ec>)
 801f1d0:	a904      	add	r1, sp, #16
 801f1d2:	4640      	mov	r0, r8
 801f1d4:	f000 f882 	bl	801f2dc <_printf_i>
 801f1d8:	e7ea      	b.n	801f1b0 <_svfiprintf_r+0x1b0>
 801f1da:	bf00      	nop
 801f1dc:	08029f88 	.word	0x08029f88
 801f1e0:	08029f8e 	.word	0x08029f8e
 801f1e4:	08029f92 	.word	0x08029f92
 801f1e8:	00000000 	.word	0x00000000
 801f1ec:	0801ef4d 	.word	0x0801ef4d

0801f1f0 <_printf_common>:
 801f1f0:	e92d 47f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, lr}
 801f1f4:	4691      	mov	r9, r2
 801f1f6:	461f      	mov	r7, r3
 801f1f8:	688a      	ldr	r2, [r1, #8]
 801f1fa:	690b      	ldr	r3, [r1, #16]
 801f1fc:	f8dd 8020 	ldr.w	r8, [sp, #32]
 801f200:	4293      	cmp	r3, r2
 801f202:	bfb8      	it	lt
 801f204:	4613      	movlt	r3, r2
 801f206:	f8c9 3000 	str.w	r3, [r9]
 801f20a:	f891 2043 	ldrb.w	r2, [r1, #67]	; 0x43
 801f20e:	4606      	mov	r6, r0
 801f210:	460c      	mov	r4, r1
 801f212:	b112      	cbz	r2, 801f21a <_printf_common+0x2a>
 801f214:	3301      	adds	r3, #1
 801f216:	f8c9 3000 	str.w	r3, [r9]
 801f21a:	6823      	ldr	r3, [r4, #0]
 801f21c:	0699      	lsls	r1, r3, #26
 801f21e:	bf42      	ittt	mi
 801f220:	f8d9 3000 	ldrmi.w	r3, [r9]
 801f224:	3302      	addmi	r3, #2
 801f226:	f8c9 3000 	strmi.w	r3, [r9]
 801f22a:	6825      	ldr	r5, [r4, #0]
 801f22c:	f015 0506 	ands.w	r5, r5, #6
 801f230:	d107      	bne.n	801f242 <_printf_common+0x52>
 801f232:	f104 0a19 	add.w	sl, r4, #25
 801f236:	68e3      	ldr	r3, [r4, #12]
 801f238:	f8d9 2000 	ldr.w	r2, [r9]
 801f23c:	1a9b      	subs	r3, r3, r2
 801f23e:	42ab      	cmp	r3, r5
 801f240:	dc28      	bgt.n	801f294 <_printf_common+0xa4>
 801f242:	f894 3043 	ldrb.w	r3, [r4, #67]	; 0x43
 801f246:	6822      	ldr	r2, [r4, #0]
 801f248:	3300      	adds	r3, #0
 801f24a:	bf18      	it	ne
 801f24c:	2301      	movne	r3, #1
 801f24e:	0692      	lsls	r2, r2, #26
 801f250:	d42d      	bmi.n	801f2ae <_printf_common+0xbe>
 801f252:	f104 0243 	add.w	r2, r4, #67	; 0x43
 801f256:	4639      	mov	r1, r7
 801f258:	4630      	mov	r0, r6
 801f25a:	47c0      	blx	r8
 801f25c:	3001      	adds	r0, #1
 801f25e:	d020      	beq.n	801f2a2 <_printf_common+0xb2>
 801f260:	6823      	ldr	r3, [r4, #0]
 801f262:	68e5      	ldr	r5, [r4, #12]
 801f264:	f8d9 2000 	ldr.w	r2, [r9]
 801f268:	f003 0306 	and.w	r3, r3, #6
 801f26c:	2b04      	cmp	r3, #4
 801f26e:	bf08      	it	eq
 801f270:	1aad      	subeq	r5, r5, r2
 801f272:	68a3      	ldr	r3, [r4, #8]
 801f274:	6922      	ldr	r2, [r4, #16]
 801f276:	bf0c      	ite	eq
 801f278:	ea25 75e5 	biceq.w	r5, r5, r5, asr #31
 801f27c:	2500      	movne	r5, #0
 801f27e:	4293      	cmp	r3, r2
 801f280:	bfc4      	itt	gt
 801f282:	1a9b      	subgt	r3, r3, r2
 801f284:	18ed      	addgt	r5, r5, r3
 801f286:	f04f 0900 	mov.w	r9, #0
 801f28a:	341a      	adds	r4, #26
 801f28c:	454d      	cmp	r5, r9
 801f28e:	d11a      	bne.n	801f2c6 <_printf_common+0xd6>
 801f290:	2000      	movs	r0, #0
 801f292:	e008      	b.n	801f2a6 <_printf_common+0xb6>
 801f294:	2301      	movs	r3, #1
 801f296:	4652      	mov	r2, sl
 801f298:	4639      	mov	r1, r7
 801f29a:	4630      	mov	r0, r6
 801f29c:	47c0      	blx	r8
 801f29e:	3001      	adds	r0, #1
 801f2a0:	d103      	bne.n	801f2aa <_printf_common+0xba>
 801f2a2:	f04f 30ff 	mov.w	r0, #4294967295
 801f2a6:	e8bd 87f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, pc}
 801f2aa:	3501      	adds	r5, #1
 801f2ac:	e7c3      	b.n	801f236 <_printf_common+0x46>
 801f2ae:	18e1      	adds	r1, r4, r3
 801f2b0:	1c5a      	adds	r2, r3, #1
 801f2b2:	2030      	movs	r0, #48	; 0x30
 801f2b4:	f881 0043 	strb.w	r0, [r1, #67]	; 0x43
 801f2b8:	4422      	add	r2, r4
 801f2ba:	f894 1045 	ldrb.w	r1, [r4, #69]	; 0x45
 801f2be:	f882 1043 	strb.w	r1, [r2, #67]	; 0x43
 801f2c2:	3302      	adds	r3, #2
 801f2c4:	e7c5      	b.n	801f252 <_printf_common+0x62>
 801f2c6:	2301      	movs	r3, #1
 801f2c8:	4622      	mov	r2, r4
 801f2ca:	4639      	mov	r1, r7
 801f2cc:	4630      	mov	r0, r6
 801f2ce:	47c0      	blx	r8
 801f2d0:	3001      	adds	r0, #1
 801f2d2:	d0e6      	beq.n	801f2a2 <_printf_common+0xb2>
 801f2d4:	f109 0901 	add.w	r9, r9, #1
 801f2d8:	e7d8      	b.n	801f28c <_printf_common+0x9c>
	...

0801f2dc <_printf_i>:
 801f2dc:	e92d 43f0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, lr}
 801f2e0:	f101 0c43 	add.w	ip, r1, #67	; 0x43
 801f2e4:	460c      	mov	r4, r1
 801f2e6:	7e09      	ldrb	r1, [r1, #24]
 801f2e8:	b085      	sub	sp, #20
 801f2ea:	296e      	cmp	r1, #110	; 0x6e
 801f2ec:	4617      	mov	r7, r2
 801f2ee:	4606      	mov	r6, r0
 801f2f0:	4698      	mov	r8, r3
 801f2f2:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801f2f4:	f000 80b3 	beq.w	801f45e <_printf_i+0x182>
 801f2f8:	d822      	bhi.n	801f340 <_printf_i+0x64>
 801f2fa:	2963      	cmp	r1, #99	; 0x63
 801f2fc:	d036      	beq.n	801f36c <_printf_i+0x90>
 801f2fe:	d80a      	bhi.n	801f316 <_printf_i+0x3a>
 801f300:	2900      	cmp	r1, #0
 801f302:	f000 80b9 	beq.w	801f478 <_printf_i+0x19c>
 801f306:	2958      	cmp	r1, #88	; 0x58
 801f308:	f000 8083 	beq.w	801f412 <_printf_i+0x136>
 801f30c:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801f310:	f884 1042 	strb.w	r1, [r4, #66]	; 0x42
 801f314:	e032      	b.n	801f37c <_printf_i+0xa0>
 801f316:	2964      	cmp	r1, #100	; 0x64
 801f318:	d001      	beq.n	801f31e <_printf_i+0x42>
 801f31a:	2969      	cmp	r1, #105	; 0x69
 801f31c:	d1f6      	bne.n	801f30c <_printf_i+0x30>
 801f31e:	6820      	ldr	r0, [r4, #0]
 801f320:	6813      	ldr	r3, [r2, #0]
 801f322:	0605      	lsls	r5, r0, #24
 801f324:	f103 0104 	add.w	r1, r3, #4
 801f328:	d52a      	bpl.n	801f380 <_printf_i+0xa4>
 801f32a:	681b      	ldr	r3, [r3, #0]
 801f32c:	6011      	str	r1, [r2, #0]
 801f32e:	2b00      	cmp	r3, #0
 801f330:	da03      	bge.n	801f33a <_printf_i+0x5e>
 801f332:	222d      	movs	r2, #45	; 0x2d
 801f334:	425b      	negs	r3, r3
 801f336:	f884 2043 	strb.w	r2, [r4, #67]	; 0x43
 801f33a:	486f      	ldr	r0, [pc, #444]	; (801f4f8 <_printf_i+0x21c>)
 801f33c:	220a      	movs	r2, #10
 801f33e:	e039      	b.n	801f3b4 <_printf_i+0xd8>
 801f340:	2973      	cmp	r1, #115	; 0x73
 801f342:	f000 809d 	beq.w	801f480 <_printf_i+0x1a4>
 801f346:	d808      	bhi.n	801f35a <_printf_i+0x7e>
 801f348:	296f      	cmp	r1, #111	; 0x6f
 801f34a:	d020      	beq.n	801f38e <_printf_i+0xb2>
 801f34c:	2970      	cmp	r1, #112	; 0x70
 801f34e:	d1dd      	bne.n	801f30c <_printf_i+0x30>
 801f350:	6823      	ldr	r3, [r4, #0]
 801f352:	f043 0320 	orr.w	r3, r3, #32
 801f356:	6023      	str	r3, [r4, #0]
 801f358:	e003      	b.n	801f362 <_printf_i+0x86>
 801f35a:	2975      	cmp	r1, #117	; 0x75
 801f35c:	d017      	beq.n	801f38e <_printf_i+0xb2>
 801f35e:	2978      	cmp	r1, #120	; 0x78
 801f360:	d1d4      	bne.n	801f30c <_printf_i+0x30>
 801f362:	2378      	movs	r3, #120	; 0x78
 801f364:	f884 3045 	strb.w	r3, [r4, #69]	; 0x45
 801f368:	4864      	ldr	r0, [pc, #400]	; (801f4fc <_printf_i+0x220>)
 801f36a:	e055      	b.n	801f418 <_printf_i+0x13c>
 801f36c:	6813      	ldr	r3, [r2, #0]
 801f36e:	1d19      	adds	r1, r3, #4
 801f370:	681b      	ldr	r3, [r3, #0]
 801f372:	6011      	str	r1, [r2, #0]
 801f374:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801f378:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801f37c:	2301      	movs	r3, #1
 801f37e:	e08c      	b.n	801f49a <_printf_i+0x1be>
 801f380:	681b      	ldr	r3, [r3, #0]
 801f382:	6011      	str	r1, [r2, #0]
 801f384:	f010 0f40 	tst.w	r0, #64	; 0x40
 801f388:	bf18      	it	ne
 801f38a:	b21b      	sxthne	r3, r3
 801f38c:	e7cf      	b.n	801f32e <_printf_i+0x52>
 801f38e:	6813      	ldr	r3, [r2, #0]
 801f390:	6825      	ldr	r5, [r4, #0]
 801f392:	1d18      	adds	r0, r3, #4
 801f394:	6010      	str	r0, [r2, #0]
 801f396:	0628      	lsls	r0, r5, #24
 801f398:	d501      	bpl.n	801f39e <_printf_i+0xc2>
 801f39a:	681b      	ldr	r3, [r3, #0]
 801f39c:	e002      	b.n	801f3a4 <_printf_i+0xc8>
 801f39e:	0668      	lsls	r0, r5, #25
 801f3a0:	d5fb      	bpl.n	801f39a <_printf_i+0xbe>
 801f3a2:	881b      	ldrh	r3, [r3, #0]
 801f3a4:	4854      	ldr	r0, [pc, #336]	; (801f4f8 <_printf_i+0x21c>)
 801f3a6:	296f      	cmp	r1, #111	; 0x6f
 801f3a8:	bf14      	ite	ne
 801f3aa:	220a      	movne	r2, #10
 801f3ac:	2208      	moveq	r2, #8
 801f3ae:	2100      	movs	r1, #0
 801f3b0:	f884 1043 	strb.w	r1, [r4, #67]	; 0x43
 801f3b4:	6865      	ldr	r5, [r4, #4]
 801f3b6:	60a5      	str	r5, [r4, #8]
 801f3b8:	2d00      	cmp	r5, #0
 801f3ba:	f2c0 8095 	blt.w	801f4e8 <_printf_i+0x20c>
 801f3be:	6821      	ldr	r1, [r4, #0]
 801f3c0:	f021 0104 	bic.w	r1, r1, #4
 801f3c4:	6021      	str	r1, [r4, #0]
 801f3c6:	2b00      	cmp	r3, #0
 801f3c8:	d13d      	bne.n	801f446 <_printf_i+0x16a>
 801f3ca:	2d00      	cmp	r5, #0
 801f3cc:	f040 808e 	bne.w	801f4ec <_printf_i+0x210>
 801f3d0:	4665      	mov	r5, ip
 801f3d2:	2a08      	cmp	r2, #8
 801f3d4:	d10b      	bne.n	801f3ee <_printf_i+0x112>
 801f3d6:	6823      	ldr	r3, [r4, #0]
 801f3d8:	07db      	lsls	r3, r3, #31
 801f3da:	d508      	bpl.n	801f3ee <_printf_i+0x112>
 801f3dc:	6923      	ldr	r3, [r4, #16]
 801f3de:	6862      	ldr	r2, [r4, #4]
 801f3e0:	429a      	cmp	r2, r3
 801f3e2:	bfde      	ittt	le
 801f3e4:	2330      	movle	r3, #48	; 0x30
 801f3e6:	f805 3c01 	strble.w	r3, [r5, #-1]
 801f3ea:	f105 35ff 	addle.w	r5, r5, #4294967295
 801f3ee:	ebac 0305 	sub.w	r3, ip, r5
 801f3f2:	6123      	str	r3, [r4, #16]
 801f3f4:	f8cd 8000 	str.w	r8, [sp]
 801f3f8:	463b      	mov	r3, r7
 801f3fa:	aa03      	add	r2, sp, #12
 801f3fc:	4621      	mov	r1, r4
 801f3fe:	4630      	mov	r0, r6
 801f400:	f7ff fef6 	bl	801f1f0 <_printf_common>
 801f404:	3001      	adds	r0, #1
 801f406:	d14d      	bne.n	801f4a4 <_printf_i+0x1c8>
 801f408:	f04f 30ff 	mov.w	r0, #4294967295
 801f40c:	b005      	add	sp, #20
 801f40e:	e8bd 83f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, pc}
 801f412:	4839      	ldr	r0, [pc, #228]	; (801f4f8 <_printf_i+0x21c>)
 801f414:	f884 1045 	strb.w	r1, [r4, #69]	; 0x45
 801f418:	6813      	ldr	r3, [r2, #0]
 801f41a:	6821      	ldr	r1, [r4, #0]
 801f41c:	1d1d      	adds	r5, r3, #4
 801f41e:	681b      	ldr	r3, [r3, #0]
 801f420:	6015      	str	r5, [r2, #0]
 801f422:	060a      	lsls	r2, r1, #24
 801f424:	d50b      	bpl.n	801f43e <_printf_i+0x162>
 801f426:	07ca      	lsls	r2, r1, #31
 801f428:	bf44      	itt	mi
 801f42a:	f041 0120 	orrmi.w	r1, r1, #32
 801f42e:	6021      	strmi	r1, [r4, #0]
 801f430:	b91b      	cbnz	r3, 801f43a <_printf_i+0x15e>
 801f432:	6822      	ldr	r2, [r4, #0]
 801f434:	f022 0220 	bic.w	r2, r2, #32
 801f438:	6022      	str	r2, [r4, #0]
 801f43a:	2210      	movs	r2, #16
 801f43c:	e7b7      	b.n	801f3ae <_printf_i+0xd2>
 801f43e:	064d      	lsls	r5, r1, #25
 801f440:	bf48      	it	mi
 801f442:	b29b      	uxthmi	r3, r3
 801f444:	e7ef      	b.n	801f426 <_printf_i+0x14a>
 801f446:	4665      	mov	r5, ip
 801f448:	fbb3 f1f2 	udiv	r1, r3, r2
 801f44c:	fb02 3311 	mls	r3, r2, r1, r3
 801f450:	5cc3      	ldrb	r3, [r0, r3]
 801f452:	f805 3d01 	strb.w	r3, [r5, #-1]!
 801f456:	460b      	mov	r3, r1
 801f458:	2900      	cmp	r1, #0
 801f45a:	d1f5      	bne.n	801f448 <_printf_i+0x16c>
 801f45c:	e7b9      	b.n	801f3d2 <_printf_i+0xf6>
 801f45e:	6813      	ldr	r3, [r2, #0]
 801f460:	6825      	ldr	r5, [r4, #0]
 801f462:	6961      	ldr	r1, [r4, #20]
 801f464:	1d18      	adds	r0, r3, #4
 801f466:	6010      	str	r0, [r2, #0]
 801f468:	0628      	lsls	r0, r5, #24
 801f46a:	681b      	ldr	r3, [r3, #0]
 801f46c:	d501      	bpl.n	801f472 <_printf_i+0x196>
 801f46e:	6019      	str	r1, [r3, #0]
 801f470:	e002      	b.n	801f478 <_printf_i+0x19c>
 801f472:	066a      	lsls	r2, r5, #25
 801f474:	d5fb      	bpl.n	801f46e <_printf_i+0x192>
 801f476:	8019      	strh	r1, [r3, #0]
 801f478:	2300      	movs	r3, #0
 801f47a:	6123      	str	r3, [r4, #16]
 801f47c:	4665      	mov	r5, ip
 801f47e:	e7b9      	b.n	801f3f4 <_printf_i+0x118>
 801f480:	6813      	ldr	r3, [r2, #0]
 801f482:	1d19      	adds	r1, r3, #4
 801f484:	6011      	str	r1, [r2, #0]
 801f486:	681d      	ldr	r5, [r3, #0]
 801f488:	6862      	ldr	r2, [r4, #4]
 801f48a:	2100      	movs	r1, #0
 801f48c:	4628      	mov	r0, r5
 801f48e:	f7e0 feaf 	bl	80001f0 <memchr>
 801f492:	b108      	cbz	r0, 801f498 <_printf_i+0x1bc>
 801f494:	1b40      	subs	r0, r0, r5
 801f496:	6060      	str	r0, [r4, #4]
 801f498:	6863      	ldr	r3, [r4, #4]
 801f49a:	6123      	str	r3, [r4, #16]
 801f49c:	2300      	movs	r3, #0
 801f49e:	f884 3043 	strb.w	r3, [r4, #67]	; 0x43
 801f4a2:	e7a7      	b.n	801f3f4 <_printf_i+0x118>
 801f4a4:	6923      	ldr	r3, [r4, #16]
 801f4a6:	462a      	mov	r2, r5
 801f4a8:	4639      	mov	r1, r7
 801f4aa:	4630      	mov	r0, r6
 801f4ac:	47c0      	blx	r8
 801f4ae:	3001      	adds	r0, #1
 801f4b0:	d0aa      	beq.n	801f408 <_printf_i+0x12c>
 801f4b2:	6823      	ldr	r3, [r4, #0]
 801f4b4:	079b      	lsls	r3, r3, #30
 801f4b6:	d413      	bmi.n	801f4e0 <_printf_i+0x204>
 801f4b8:	68e0      	ldr	r0, [r4, #12]
 801f4ba:	9b03      	ldr	r3, [sp, #12]
 801f4bc:	4298      	cmp	r0, r3
 801f4be:	bfb8      	it	lt
 801f4c0:	4618      	movlt	r0, r3
 801f4c2:	e7a3      	b.n	801f40c <_printf_i+0x130>
 801f4c4:	2301      	movs	r3, #1
 801f4c6:	464a      	mov	r2, r9
 801f4c8:	4639      	mov	r1, r7
 801f4ca:	4630      	mov	r0, r6
 801f4cc:	47c0      	blx	r8
 801f4ce:	3001      	adds	r0, #1
 801f4d0:	d09a      	beq.n	801f408 <_printf_i+0x12c>
 801f4d2:	3501      	adds	r5, #1
 801f4d4:	68e3      	ldr	r3, [r4, #12]
 801f4d6:	9a03      	ldr	r2, [sp, #12]
 801f4d8:	1a9b      	subs	r3, r3, r2
 801f4da:	42ab      	cmp	r3, r5
 801f4dc:	dcf2      	bgt.n	801f4c4 <_printf_i+0x1e8>
 801f4de:	e7eb      	b.n	801f4b8 <_printf_i+0x1dc>
 801f4e0:	2500      	movs	r5, #0
 801f4e2:	f104 0919 	add.w	r9, r4, #25
 801f4e6:	e7f5      	b.n	801f4d4 <_printf_i+0x1f8>
 801f4e8:	2b00      	cmp	r3, #0
 801f4ea:	d1ac      	bne.n	801f446 <_printf_i+0x16a>
 801f4ec:	7803      	ldrb	r3, [r0, #0]
 801f4ee:	f884 3042 	strb.w	r3, [r4, #66]	; 0x42
 801f4f2:	f104 0542 	add.w	r5, r4, #66	; 0x42
 801f4f6:	e76c      	b.n	801f3d2 <_printf_i+0xf6>
 801f4f8:	08029f99 	.word	0x08029f99
 801f4fc:	08029faa 	.word	0x08029faa

0801f500 <memcpy>:
 801f500:	b510      	push	{r4, lr}
 801f502:	1e43      	subs	r3, r0, #1
 801f504:	440a      	add	r2, r1
 801f506:	4291      	cmp	r1, r2
 801f508:	d100      	bne.n	801f50c <memcpy+0xc>
 801f50a:	bd10      	pop	{r4, pc}
 801f50c:	f811 4b01 	ldrb.w	r4, [r1], #1
 801f510:	f803 4f01 	strb.w	r4, [r3, #1]!
 801f514:	e7f7      	b.n	801f506 <memcpy+0x6>

0801f516 <memmove>:
 801f516:	4288      	cmp	r0, r1
 801f518:	b510      	push	{r4, lr}
 801f51a:	eb01 0302 	add.w	r3, r1, r2
 801f51e:	d807      	bhi.n	801f530 <memmove+0x1a>
 801f520:	1e42      	subs	r2, r0, #1
 801f522:	4299      	cmp	r1, r3
 801f524:	d00a      	beq.n	801f53c <memmove+0x26>
 801f526:	f811 4b01 	ldrb.w	r4, [r1], #1
 801f52a:	f802 4f01 	strb.w	r4, [r2, #1]!
 801f52e:	e7f8      	b.n	801f522 <memmove+0xc>
 801f530:	4283      	cmp	r3, r0
 801f532:	d9f5      	bls.n	801f520 <memmove+0xa>
 801f534:	1881      	adds	r1, r0, r2
 801f536:	1ad2      	subs	r2, r2, r3
 801f538:	42d3      	cmn	r3, r2
 801f53a:	d100      	bne.n	801f53e <memmove+0x28>
 801f53c:	bd10      	pop	{r4, pc}
 801f53e:	f813 4d01 	ldrb.w	r4, [r3, #-1]!
 801f542:	f801 4d01 	strb.w	r4, [r1, #-1]!
 801f546:	e7f7      	b.n	801f538 <memmove+0x22>

0801f548 <_free_r>:
 801f548:	b538      	push	{r3, r4, r5, lr}
 801f54a:	4605      	mov	r5, r0
 801f54c:	2900      	cmp	r1, #0
 801f54e:	d045      	beq.n	801f5dc <_free_r+0x94>
 801f550:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801f554:	1f0c      	subs	r4, r1, #4
 801f556:	2b00      	cmp	r3, #0
 801f558:	bfb8      	it	lt
 801f55a:	18e4      	addlt	r4, r4, r3
 801f55c:	f000 f8d2 	bl	801f704 <__malloc_lock>
 801f560:	4a1f      	ldr	r2, [pc, #124]	; (801f5e0 <_free_r+0x98>)
 801f562:	6813      	ldr	r3, [r2, #0]
 801f564:	4610      	mov	r0, r2
 801f566:	b933      	cbnz	r3, 801f576 <_free_r+0x2e>
 801f568:	6063      	str	r3, [r4, #4]
 801f56a:	6014      	str	r4, [r2, #0]
 801f56c:	4628      	mov	r0, r5
 801f56e:	e8bd 4038 	ldmia.w	sp!, {r3, r4, r5, lr}
 801f572:	f000 b8c8 	b.w	801f706 <__malloc_unlock>
 801f576:	42a3      	cmp	r3, r4
 801f578:	d90c      	bls.n	801f594 <_free_r+0x4c>
 801f57a:	6821      	ldr	r1, [r4, #0]
 801f57c:	1862      	adds	r2, r4, r1
 801f57e:	4293      	cmp	r3, r2
 801f580:	bf04      	itt	eq
 801f582:	681a      	ldreq	r2, [r3, #0]
 801f584:	685b      	ldreq	r3, [r3, #4]
 801f586:	6063      	str	r3, [r4, #4]
 801f588:	bf04      	itt	eq
 801f58a:	1852      	addeq	r2, r2, r1
 801f58c:	6022      	streq	r2, [r4, #0]
 801f58e:	6004      	str	r4, [r0, #0]
 801f590:	e7ec      	b.n	801f56c <_free_r+0x24>
 801f592:	4613      	mov	r3, r2
 801f594:	685a      	ldr	r2, [r3, #4]
 801f596:	b10a      	cbz	r2, 801f59c <_free_r+0x54>
 801f598:	42a2      	cmp	r2, r4
 801f59a:	d9fa      	bls.n	801f592 <_free_r+0x4a>
 801f59c:	6819      	ldr	r1, [r3, #0]
 801f59e:	1858      	adds	r0, r3, r1
 801f5a0:	42a0      	cmp	r0, r4
 801f5a2:	d10b      	bne.n	801f5bc <_free_r+0x74>
 801f5a4:	6820      	ldr	r0, [r4, #0]
 801f5a6:	4401      	add	r1, r0
 801f5a8:	1858      	adds	r0, r3, r1
 801f5aa:	4282      	cmp	r2, r0
 801f5ac:	6019      	str	r1, [r3, #0]
 801f5ae:	d1dd      	bne.n	801f56c <_free_r+0x24>
 801f5b0:	6810      	ldr	r0, [r2, #0]
 801f5b2:	6852      	ldr	r2, [r2, #4]
 801f5b4:	605a      	str	r2, [r3, #4]
 801f5b6:	4401      	add	r1, r0
 801f5b8:	6019      	str	r1, [r3, #0]
 801f5ba:	e7d7      	b.n	801f56c <_free_r+0x24>
 801f5bc:	d902      	bls.n	801f5c4 <_free_r+0x7c>
 801f5be:	230c      	movs	r3, #12
 801f5c0:	602b      	str	r3, [r5, #0]
 801f5c2:	e7d3      	b.n	801f56c <_free_r+0x24>
 801f5c4:	6820      	ldr	r0, [r4, #0]
 801f5c6:	1821      	adds	r1, r4, r0
 801f5c8:	428a      	cmp	r2, r1
 801f5ca:	bf04      	itt	eq
 801f5cc:	6811      	ldreq	r1, [r2, #0]
 801f5ce:	6852      	ldreq	r2, [r2, #4]
 801f5d0:	6062      	str	r2, [r4, #4]
 801f5d2:	bf04      	itt	eq
 801f5d4:	1809      	addeq	r1, r1, r0
 801f5d6:	6021      	streq	r1, [r4, #0]
 801f5d8:	605c      	str	r4, [r3, #4]
 801f5da:	e7c7      	b.n	801f56c <_free_r+0x24>
 801f5dc:	bd38      	pop	{r3, r4, r5, pc}
 801f5de:	bf00      	nop
 801f5e0:	2000009c 	.word	0x2000009c

0801f5e4 <_malloc_r>:
 801f5e4:	b570      	push	{r4, r5, r6, lr}
 801f5e6:	1ccd      	adds	r5, r1, #3
 801f5e8:	f025 0503 	bic.w	r5, r5, #3
 801f5ec:	3508      	adds	r5, #8
 801f5ee:	2d0c      	cmp	r5, #12
 801f5f0:	bf38      	it	cc
 801f5f2:	250c      	movcc	r5, #12
 801f5f4:	2d00      	cmp	r5, #0
 801f5f6:	4606      	mov	r6, r0
 801f5f8:	db01      	blt.n	801f5fe <_malloc_r+0x1a>
 801f5fa:	42a9      	cmp	r1, r5
 801f5fc:	d903      	bls.n	801f606 <_malloc_r+0x22>
 801f5fe:	230c      	movs	r3, #12
 801f600:	6033      	str	r3, [r6, #0]
 801f602:	2000      	movs	r0, #0
 801f604:	bd70      	pop	{r4, r5, r6, pc}
 801f606:	f000 f87d 	bl	801f704 <__malloc_lock>
 801f60a:	4a21      	ldr	r2, [pc, #132]	; (801f690 <_malloc_r+0xac>)
 801f60c:	6814      	ldr	r4, [r2, #0]
 801f60e:	4621      	mov	r1, r4
 801f610:	b991      	cbnz	r1, 801f638 <_malloc_r+0x54>
 801f612:	4c20      	ldr	r4, [pc, #128]	; (801f694 <_malloc_r+0xb0>)
 801f614:	6823      	ldr	r3, [r4, #0]
 801f616:	b91b      	cbnz	r3, 801f620 <_malloc_r+0x3c>
 801f618:	4630      	mov	r0, r6
 801f61a:	f000 f863 	bl	801f6e4 <_sbrk_r>
 801f61e:	6020      	str	r0, [r4, #0]
 801f620:	4629      	mov	r1, r5
 801f622:	4630      	mov	r0, r6
 801f624:	f000 f85e 	bl	801f6e4 <_sbrk_r>
 801f628:	1c43      	adds	r3, r0, #1
 801f62a:	d124      	bne.n	801f676 <_malloc_r+0x92>
 801f62c:	230c      	movs	r3, #12
 801f62e:	6033      	str	r3, [r6, #0]
 801f630:	4630      	mov	r0, r6
 801f632:	f000 f868 	bl	801f706 <__malloc_unlock>
 801f636:	e7e4      	b.n	801f602 <_malloc_r+0x1e>
 801f638:	680b      	ldr	r3, [r1, #0]
 801f63a:	1b5b      	subs	r3, r3, r5
 801f63c:	d418      	bmi.n	801f670 <_malloc_r+0x8c>
 801f63e:	2b0b      	cmp	r3, #11
 801f640:	d90f      	bls.n	801f662 <_malloc_r+0x7e>
 801f642:	600b      	str	r3, [r1, #0]
 801f644:	50cd      	str	r5, [r1, r3]
 801f646:	18cc      	adds	r4, r1, r3
 801f648:	4630      	mov	r0, r6
 801f64a:	f000 f85c 	bl	801f706 <__malloc_unlock>
 801f64e:	f104 000b 	add.w	r0, r4, #11
 801f652:	1d23      	adds	r3, r4, #4
 801f654:	f020 0007 	bic.w	r0, r0, #7
 801f658:	1ac3      	subs	r3, r0, r3
 801f65a:	d0d3      	beq.n	801f604 <_malloc_r+0x20>
 801f65c:	425a      	negs	r2, r3
 801f65e:	50e2      	str	r2, [r4, r3]
 801f660:	e7d0      	b.n	801f604 <_malloc_r+0x20>
 801f662:	428c      	cmp	r4, r1
 801f664:	684b      	ldr	r3, [r1, #4]
 801f666:	bf16      	itet	ne
 801f668:	6063      	strne	r3, [r4, #4]
 801f66a:	6013      	streq	r3, [r2, #0]
 801f66c:	460c      	movne	r4, r1
 801f66e:	e7eb      	b.n	801f648 <_malloc_r+0x64>
 801f670:	460c      	mov	r4, r1
 801f672:	6849      	ldr	r1, [r1, #4]
 801f674:	e7cc      	b.n	801f610 <_malloc_r+0x2c>
 801f676:	1cc4      	adds	r4, r0, #3
 801f678:	f024 0403 	bic.w	r4, r4, #3
 801f67c:	42a0      	cmp	r0, r4
 801f67e:	d005      	beq.n	801f68c <_malloc_r+0xa8>
 801f680:	1a21      	subs	r1, r4, r0
 801f682:	4630      	mov	r0, r6
 801f684:	f000 f82e 	bl	801f6e4 <_sbrk_r>
 801f688:	3001      	adds	r0, #1
 801f68a:	d0cf      	beq.n	801f62c <_malloc_r+0x48>
 801f68c:	6025      	str	r5, [r4, #0]
 801f68e:	e7db      	b.n	801f648 <_malloc_r+0x64>
 801f690:	2000009c 	.word	0x2000009c
 801f694:	200000a0 	.word	0x200000a0

0801f698 <_realloc_r>:
 801f698:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 801f69a:	4607      	mov	r7, r0
 801f69c:	4614      	mov	r4, r2
 801f69e:	460e      	mov	r6, r1
 801f6a0:	b921      	cbnz	r1, 801f6ac <_realloc_r+0x14>
 801f6a2:	4611      	mov	r1, r2
 801f6a4:	e8bd 40f8 	ldmia.w	sp!, {r3, r4, r5, r6, r7, lr}
 801f6a8:	f7ff bf9c 	b.w	801f5e4 <_malloc_r>
 801f6ac:	b922      	cbnz	r2, 801f6b8 <_realloc_r+0x20>
 801f6ae:	f7ff ff4b 	bl	801f548 <_free_r>
 801f6b2:	4625      	mov	r5, r4
 801f6b4:	4628      	mov	r0, r5
 801f6b6:	bdf8      	pop	{r3, r4, r5, r6, r7, pc}
 801f6b8:	f000 f826 	bl	801f708 <_malloc_usable_size_r>
 801f6bc:	42a0      	cmp	r0, r4
 801f6be:	d20f      	bcs.n	801f6e0 <_realloc_r+0x48>
 801f6c0:	4621      	mov	r1, r4
 801f6c2:	4638      	mov	r0, r7
 801f6c4:	f7ff ff8e 	bl	801f5e4 <_malloc_r>
 801f6c8:	4605      	mov	r5, r0
 801f6ca:	2800      	cmp	r0, #0
 801f6cc:	d0f2      	beq.n	801f6b4 <_realloc_r+0x1c>
 801f6ce:	4631      	mov	r1, r6
 801f6d0:	4622      	mov	r2, r4
 801f6d2:	f7ff ff15 	bl	801f500 <memcpy>
 801f6d6:	4631      	mov	r1, r6
 801f6d8:	4638      	mov	r0, r7
 801f6da:	f7ff ff35 	bl	801f548 <_free_r>
 801f6de:	e7e9      	b.n	801f6b4 <_realloc_r+0x1c>
 801f6e0:	4635      	mov	r5, r6
 801f6e2:	e7e7      	b.n	801f6b4 <_realloc_r+0x1c>

0801f6e4 <_sbrk_r>:
 801f6e4:	b538      	push	{r3, r4, r5, lr}
 801f6e6:	4c06      	ldr	r4, [pc, #24]	; (801f700 <_sbrk_r+0x1c>)
 801f6e8:	2300      	movs	r3, #0
 801f6ea:	4605      	mov	r5, r0
 801f6ec:	4608      	mov	r0, r1
 801f6ee:	6023      	str	r3, [r4, #0]
 801f6f0:	f7fc f80c 	bl	801b70c <_sbrk>
 801f6f4:	1c43      	adds	r3, r0, #1
 801f6f6:	d102      	bne.n	801f6fe <_sbrk_r+0x1a>
 801f6f8:	6823      	ldr	r3, [r4, #0]
 801f6fa:	b103      	cbz	r3, 801f6fe <_sbrk_r+0x1a>
 801f6fc:	602b      	str	r3, [r5, #0]
 801f6fe:	bd38      	pop	{r3, r4, r5, pc}
 801f700:	200001dc 	.word	0x200001dc

0801f704 <__malloc_lock>:
 801f704:	4770      	bx	lr

0801f706 <__malloc_unlock>:
 801f706:	4770      	bx	lr

0801f708 <_malloc_usable_size_r>:
 801f708:	f851 3c04 	ldr.w	r3, [r1, #-4]
 801f70c:	1f18      	subs	r0, r3, #4
 801f70e:	2b00      	cmp	r3, #0
 801f710:	bfbc      	itt	lt
 801f712:	580b      	ldrlt	r3, [r1, r0]
 801f714:	18c0      	addlt	r0, r0, r3
 801f716:	4770      	bx	lr

0801f718 <pow>:
 801f718:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f71c:	ed2d 8b04 	vpush	{d8-d9}
 801f720:	f8df 92d0 	ldr.w	r9, [pc, #720]	; 801f9f4 <pow+0x2dc>
 801f724:	b08d      	sub	sp, #52	; 0x34
 801f726:	ec57 6b10 	vmov	r6, r7, d0
 801f72a:	ec55 4b11 	vmov	r4, r5, d1
 801f72e:	f000 f963 	bl	801f9f8 <__ieee754_pow>
 801f732:	f999 3000 	ldrsb.w	r3, [r9]
 801f736:	9300      	str	r3, [sp, #0]
 801f738:	3301      	adds	r3, #1
 801f73a:	eeb0 8a40 	vmov.f32	s16, s0
 801f73e:	eef0 8a60 	vmov.f32	s17, s1
 801f742:	46c8      	mov	r8, r9
 801f744:	d05f      	beq.n	801f806 <pow+0xee>
 801f746:	4622      	mov	r2, r4
 801f748:	462b      	mov	r3, r5
 801f74a:	4620      	mov	r0, r4
 801f74c:	4629      	mov	r1, r5
 801f74e:	f7e1 f9f5 	bl	8000b3c <__aeabi_dcmpun>
 801f752:	4683      	mov	fp, r0
 801f754:	2800      	cmp	r0, #0
 801f756:	d156      	bne.n	801f806 <pow+0xee>
 801f758:	4632      	mov	r2, r6
 801f75a:	463b      	mov	r3, r7
 801f75c:	4630      	mov	r0, r6
 801f75e:	4639      	mov	r1, r7
 801f760:	f7e1 f9ec 	bl	8000b3c <__aeabi_dcmpun>
 801f764:	9001      	str	r0, [sp, #4]
 801f766:	b1e8      	cbz	r0, 801f7a4 <pow+0x8c>
 801f768:	2200      	movs	r2, #0
 801f76a:	2300      	movs	r3, #0
 801f76c:	4620      	mov	r0, r4
 801f76e:	4629      	mov	r1, r5
 801f770:	f7e1 f9b2 	bl	8000ad8 <__aeabi_dcmpeq>
 801f774:	2800      	cmp	r0, #0
 801f776:	d046      	beq.n	801f806 <pow+0xee>
 801f778:	2301      	movs	r3, #1
 801f77a:	9302      	str	r3, [sp, #8]
 801f77c:	4b96      	ldr	r3, [pc, #600]	; (801f9d8 <pow+0x2c0>)
 801f77e:	9303      	str	r3, [sp, #12]
 801f780:	4b96      	ldr	r3, [pc, #600]	; (801f9dc <pow+0x2c4>)
 801f782:	f8cd b028 	str.w	fp, [sp, #40]	; 0x28
 801f786:	2200      	movs	r2, #0
 801f788:	e9cd 2308 	strd	r2, r3, [sp, #32]
 801f78c:	9b00      	ldr	r3, [sp, #0]
 801f78e:	2b02      	cmp	r3, #2
 801f790:	e9cd 6704 	strd	r6, r7, [sp, #16]
 801f794:	e9cd 4506 	strd	r4, r5, [sp, #24]
 801f798:	d033      	beq.n	801f802 <pow+0xea>
 801f79a:	a802      	add	r0, sp, #8
 801f79c:	f000 fefb 	bl	8020596 <matherr>
 801f7a0:	bb48      	cbnz	r0, 801f7f6 <pow+0xde>
 801f7a2:	e05d      	b.n	801f860 <pow+0x148>
 801f7a4:	f04f 0a00 	mov.w	sl, #0
 801f7a8:	f04f 0b00 	mov.w	fp, #0
 801f7ac:	4652      	mov	r2, sl
 801f7ae:	465b      	mov	r3, fp
 801f7b0:	4630      	mov	r0, r6
 801f7b2:	4639      	mov	r1, r7
 801f7b4:	f7e1 f990 	bl	8000ad8 <__aeabi_dcmpeq>
 801f7b8:	ec4b ab19 	vmov	d9, sl, fp
 801f7bc:	2800      	cmp	r0, #0
 801f7be:	d054      	beq.n	801f86a <pow+0x152>
 801f7c0:	4652      	mov	r2, sl
 801f7c2:	465b      	mov	r3, fp
 801f7c4:	4620      	mov	r0, r4
 801f7c6:	4629      	mov	r1, r5
 801f7c8:	f7e1 f986 	bl	8000ad8 <__aeabi_dcmpeq>
 801f7cc:	4680      	mov	r8, r0
 801f7ce:	b318      	cbz	r0, 801f818 <pow+0x100>
 801f7d0:	2301      	movs	r3, #1
 801f7d2:	9302      	str	r3, [sp, #8]
 801f7d4:	4b80      	ldr	r3, [pc, #512]	; (801f9d8 <pow+0x2c0>)
 801f7d6:	9303      	str	r3, [sp, #12]
 801f7d8:	9b01      	ldr	r3, [sp, #4]
 801f7da:	930a      	str	r3, [sp, #40]	; 0x28
 801f7dc:	9b00      	ldr	r3, [sp, #0]
 801f7de:	e9cd 6704 	strd	r6, r7, [sp, #16]
 801f7e2:	e9cd 4506 	strd	r4, r5, [sp, #24]
 801f7e6:	e9cd ab08 	strd	sl, fp, [sp, #32]
 801f7ea:	2b00      	cmp	r3, #0
 801f7ec:	d0d5      	beq.n	801f79a <pow+0x82>
 801f7ee:	4b7b      	ldr	r3, [pc, #492]	; (801f9dc <pow+0x2c4>)
 801f7f0:	2200      	movs	r2, #0
 801f7f2:	e9cd 2308 	strd	r2, r3, [sp, #32]
 801f7f6:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f7f8:	b11b      	cbz	r3, 801f802 <pow+0xea>
 801f7fa:	f7ff fb35 	bl	801ee68 <__errno>
 801f7fe:	9b0a      	ldr	r3, [sp, #40]	; 0x28
 801f800:	6003      	str	r3, [r0, #0]
 801f802:	ed9d 8b08 	vldr	d8, [sp, #32]
 801f806:	eeb0 0a48 	vmov.f32	s0, s16
 801f80a:	eef0 0a68 	vmov.f32	s1, s17
 801f80e:	b00d      	add	sp, #52	; 0x34
 801f810:	ecbd 8b04 	vpop	{d8-d9}
 801f814:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801f818:	ec45 4b10 	vmov	d0, r4, r5
 801f81c:	f000 feb3 	bl	8020586 <finite>
 801f820:	2800      	cmp	r0, #0
 801f822:	d0f0      	beq.n	801f806 <pow+0xee>
 801f824:	4652      	mov	r2, sl
 801f826:	465b      	mov	r3, fp
 801f828:	4620      	mov	r0, r4
 801f82a:	4629      	mov	r1, r5
 801f82c:	f7e1 f95e 	bl	8000aec <__aeabi_dcmplt>
 801f830:	2800      	cmp	r0, #0
 801f832:	d0e8      	beq.n	801f806 <pow+0xee>
 801f834:	2301      	movs	r3, #1
 801f836:	9302      	str	r3, [sp, #8]
 801f838:	4b67      	ldr	r3, [pc, #412]	; (801f9d8 <pow+0x2c0>)
 801f83a:	9303      	str	r3, [sp, #12]
 801f83c:	f999 3000 	ldrsb.w	r3, [r9]
 801f840:	f8cd 8028 	str.w	r8, [sp, #40]	; 0x28
 801f844:	e9cd 6704 	strd	r6, r7, [sp, #16]
 801f848:	e9cd 4506 	strd	r4, r5, [sp, #24]
 801f84c:	b913      	cbnz	r3, 801f854 <pow+0x13c>
 801f84e:	e9cd ab08 	strd	sl, fp, [sp, #32]
 801f852:	e7a2      	b.n	801f79a <pow+0x82>
 801f854:	4962      	ldr	r1, [pc, #392]	; (801f9e0 <pow+0x2c8>)
 801f856:	2000      	movs	r0, #0
 801f858:	e9cd 0108 	strd	r0, r1, [sp, #32]
 801f85c:	2b02      	cmp	r3, #2
 801f85e:	d19c      	bne.n	801f79a <pow+0x82>
 801f860:	f7ff fb02 	bl	801ee68 <__errno>
 801f864:	2321      	movs	r3, #33	; 0x21
 801f866:	6003      	str	r3, [r0, #0]
 801f868:	e7c5      	b.n	801f7f6 <pow+0xde>
 801f86a:	eeb0 0a48 	vmov.f32	s0, s16
 801f86e:	eef0 0a68 	vmov.f32	s1, s17
 801f872:	f000 fe88 	bl	8020586 <finite>
 801f876:	9000      	str	r0, [sp, #0]
 801f878:	2800      	cmp	r0, #0
 801f87a:	f040 8081 	bne.w	801f980 <pow+0x268>
 801f87e:	ec47 6b10 	vmov	d0, r6, r7
 801f882:	f000 fe80 	bl	8020586 <finite>
 801f886:	2800      	cmp	r0, #0
 801f888:	d07a      	beq.n	801f980 <pow+0x268>
 801f88a:	ec45 4b10 	vmov	d0, r4, r5
 801f88e:	f000 fe7a 	bl	8020586 <finite>
 801f892:	2800      	cmp	r0, #0
 801f894:	d074      	beq.n	801f980 <pow+0x268>
 801f896:	ec53 2b18 	vmov	r2, r3, d8
 801f89a:	ee18 0a10 	vmov	r0, s16
 801f89e:	4619      	mov	r1, r3
 801f8a0:	f7e1 f94c 	bl	8000b3c <__aeabi_dcmpun>
 801f8a4:	f999 9000 	ldrsb.w	r9, [r9]
 801f8a8:	4b4b      	ldr	r3, [pc, #300]	; (801f9d8 <pow+0x2c0>)
 801f8aa:	b1b0      	cbz	r0, 801f8da <pow+0x1c2>
 801f8ac:	2201      	movs	r2, #1
 801f8ae:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801f8b2:	9b00      	ldr	r3, [sp, #0]
 801f8b4:	930a      	str	r3, [sp, #40]	; 0x28
 801f8b6:	e9cd 6704 	strd	r6, r7, [sp, #16]
 801f8ba:	e9cd 4506 	strd	r4, r5, [sp, #24]
 801f8be:	f1b9 0f00 	cmp.w	r9, #0
 801f8c2:	d0c4      	beq.n	801f84e <pow+0x136>
 801f8c4:	4652      	mov	r2, sl
 801f8c6:	465b      	mov	r3, fp
 801f8c8:	4650      	mov	r0, sl
 801f8ca:	4659      	mov	r1, fp
 801f8cc:	f7e0 ffc6 	bl	800085c <__aeabi_ddiv>
 801f8d0:	f1b9 0f02 	cmp.w	r9, #2
 801f8d4:	e9cd 0108 	strd	r0, r1, [sp, #32]
 801f8d8:	e7c1      	b.n	801f85e <pow+0x146>
 801f8da:	2203      	movs	r2, #3
 801f8dc:	e9cd 2302 	strd	r2, r3, [sp, #8]
 801f8e0:	900a      	str	r0, [sp, #40]	; 0x28
 801f8e2:	4629      	mov	r1, r5
 801f8e4:	4620      	mov	r0, r4
 801f8e6:	2200      	movs	r2, #0
 801f8e8:	4b3e      	ldr	r3, [pc, #248]	; (801f9e4 <pow+0x2cc>)
 801f8ea:	e9cd 4506 	strd	r4, r5, [sp, #24]
 801f8ee:	e9cd 6704 	strd	r6, r7, [sp, #16]
 801f8f2:	f7e0 fe89 	bl	8000608 <__aeabi_dmul>
 801f8f6:	4604      	mov	r4, r0
 801f8f8:	460d      	mov	r5, r1
 801f8fa:	f1b9 0f00 	cmp.w	r9, #0
 801f8fe:	d124      	bne.n	801f94a <pow+0x232>
 801f900:	4b39      	ldr	r3, [pc, #228]	; (801f9e8 <pow+0x2d0>)
 801f902:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 801f906:	e9cd 2308 	strd	r2, r3, [sp, #32]
 801f90a:	4630      	mov	r0, r6
 801f90c:	4652      	mov	r2, sl
 801f90e:	465b      	mov	r3, fp
 801f910:	4639      	mov	r1, r7
 801f912:	f7e1 f8eb 	bl	8000aec <__aeabi_dcmplt>
 801f916:	2800      	cmp	r0, #0
 801f918:	d056      	beq.n	801f9c8 <pow+0x2b0>
 801f91a:	ec45 4b10 	vmov	d0, r4, r5
 801f91e:	f000 fe47 	bl	80205b0 <rint>
 801f922:	4622      	mov	r2, r4
 801f924:	462b      	mov	r3, r5
 801f926:	ec51 0b10 	vmov	r0, r1, d0
 801f92a:	f7e1 f8d5 	bl	8000ad8 <__aeabi_dcmpeq>
 801f92e:	b920      	cbnz	r0, 801f93a <pow+0x222>
 801f930:	4b2e      	ldr	r3, [pc, #184]	; (801f9ec <pow+0x2d4>)
 801f932:	f04f 4260 	mov.w	r2, #3758096384	; 0xe0000000
 801f936:	e9cd 2308 	strd	r2, r3, [sp, #32]
 801f93a:	f998 3000 	ldrsb.w	r3, [r8]
 801f93e:	2b02      	cmp	r3, #2
 801f940:	d142      	bne.n	801f9c8 <pow+0x2b0>
 801f942:	f7ff fa91 	bl	801ee68 <__errno>
 801f946:	2322      	movs	r3, #34	; 0x22
 801f948:	e78d      	b.n	801f866 <pow+0x14e>
 801f94a:	4b29      	ldr	r3, [pc, #164]	; (801f9f0 <pow+0x2d8>)
 801f94c:	2200      	movs	r2, #0
 801f94e:	e9cd 2308 	strd	r2, r3, [sp, #32]
 801f952:	4630      	mov	r0, r6
 801f954:	4652      	mov	r2, sl
 801f956:	465b      	mov	r3, fp
 801f958:	4639      	mov	r1, r7
 801f95a:	f7e1 f8c7 	bl	8000aec <__aeabi_dcmplt>
 801f95e:	2800      	cmp	r0, #0
 801f960:	d0eb      	beq.n	801f93a <pow+0x222>
 801f962:	ec45 4b10 	vmov	d0, r4, r5
 801f966:	f000 fe23 	bl	80205b0 <rint>
 801f96a:	4622      	mov	r2, r4
 801f96c:	462b      	mov	r3, r5
 801f96e:	ec51 0b10 	vmov	r0, r1, d0
 801f972:	f7e1 f8b1 	bl	8000ad8 <__aeabi_dcmpeq>
 801f976:	2800      	cmp	r0, #0
 801f978:	d1df      	bne.n	801f93a <pow+0x222>
 801f97a:	2200      	movs	r2, #0
 801f97c:	4b18      	ldr	r3, [pc, #96]	; (801f9e0 <pow+0x2c8>)
 801f97e:	e7da      	b.n	801f936 <pow+0x21e>
 801f980:	2200      	movs	r2, #0
 801f982:	2300      	movs	r3, #0
 801f984:	ec51 0b18 	vmov	r0, r1, d8
 801f988:	f7e1 f8a6 	bl	8000ad8 <__aeabi_dcmpeq>
 801f98c:	2800      	cmp	r0, #0
 801f98e:	f43f af3a 	beq.w	801f806 <pow+0xee>
 801f992:	ec47 6b10 	vmov	d0, r6, r7
 801f996:	f000 fdf6 	bl	8020586 <finite>
 801f99a:	2800      	cmp	r0, #0
 801f99c:	f43f af33 	beq.w	801f806 <pow+0xee>
 801f9a0:	ec45 4b10 	vmov	d0, r4, r5
 801f9a4:	f000 fdef 	bl	8020586 <finite>
 801f9a8:	2800      	cmp	r0, #0
 801f9aa:	f43f af2c 	beq.w	801f806 <pow+0xee>
 801f9ae:	2304      	movs	r3, #4
 801f9b0:	9302      	str	r3, [sp, #8]
 801f9b2:	4b09      	ldr	r3, [pc, #36]	; (801f9d8 <pow+0x2c0>)
 801f9b4:	9303      	str	r3, [sp, #12]
 801f9b6:	2300      	movs	r3, #0
 801f9b8:	930a      	str	r3, [sp, #40]	; 0x28
 801f9ba:	e9cd 6704 	strd	r6, r7, [sp, #16]
 801f9be:	e9cd 4506 	strd	r4, r5, [sp, #24]
 801f9c2:	ed8d 9b08 	vstr	d9, [sp, #32]
 801f9c6:	e7b8      	b.n	801f93a <pow+0x222>
 801f9c8:	a802      	add	r0, sp, #8
 801f9ca:	f000 fde4 	bl	8020596 <matherr>
 801f9ce:	2800      	cmp	r0, #0
 801f9d0:	f47f af11 	bne.w	801f7f6 <pow+0xde>
 801f9d4:	e7b5      	b.n	801f942 <pow+0x22a>
 801f9d6:	bf00      	nop
 801f9d8:	08029fbb 	.word	0x08029fbb
 801f9dc:	3ff00000 	.word	0x3ff00000
 801f9e0:	fff00000 	.word	0xfff00000
 801f9e4:	3fe00000 	.word	0x3fe00000
 801f9e8:	47efffff 	.word	0x47efffff
 801f9ec:	c7efffff 	.word	0xc7efffff
 801f9f0:	7ff00000 	.word	0x7ff00000
 801f9f4:	20000070 	.word	0x20000070

0801f9f8 <__ieee754_pow>:
 801f9f8:	e92d 4ff0 	stmdb	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801f9fc:	b091      	sub	sp, #68	; 0x44
 801f9fe:	ed8d 1b00 	vstr	d1, [sp]
 801fa02:	e9dd 2900 	ldrd	r2, r9, [sp]
 801fa06:	f029 4800 	bic.w	r8, r9, #2147483648	; 0x80000000
 801fa0a:	ea58 0302 	orrs.w	r3, r8, r2
 801fa0e:	ec57 6b10 	vmov	r6, r7, d0
 801fa12:	f000 84be 	beq.w	8020392 <__ieee754_pow+0x99a>
 801fa16:	4b7a      	ldr	r3, [pc, #488]	; (801fc00 <__ieee754_pow+0x208>)
 801fa18:	f027 4400 	bic.w	r4, r7, #2147483648	; 0x80000000
 801fa1c:	429c      	cmp	r4, r3
 801fa1e:	463d      	mov	r5, r7
 801fa20:	ee10 aa10 	vmov	sl, s0
 801fa24:	dc09      	bgt.n	801fa3a <__ieee754_pow+0x42>
 801fa26:	d103      	bne.n	801fa30 <__ieee754_pow+0x38>
 801fa28:	b93e      	cbnz	r6, 801fa3a <__ieee754_pow+0x42>
 801fa2a:	45a0      	cmp	r8, r4
 801fa2c:	dc0d      	bgt.n	801fa4a <__ieee754_pow+0x52>
 801fa2e:	e001      	b.n	801fa34 <__ieee754_pow+0x3c>
 801fa30:	4598      	cmp	r8, r3
 801fa32:	dc02      	bgt.n	801fa3a <__ieee754_pow+0x42>
 801fa34:	4598      	cmp	r8, r3
 801fa36:	d10e      	bne.n	801fa56 <__ieee754_pow+0x5e>
 801fa38:	b16a      	cbz	r2, 801fa56 <__ieee754_pow+0x5e>
 801fa3a:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 801fa3e:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 801fa42:	ea54 030a 	orrs.w	r3, r4, sl
 801fa46:	f000 84a4 	beq.w	8020392 <__ieee754_pow+0x99a>
 801fa4a:	486e      	ldr	r0, [pc, #440]	; (801fc04 <__ieee754_pow+0x20c>)
 801fa4c:	b011      	add	sp, #68	; 0x44
 801fa4e:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fa52:	f000 bda5 	b.w	80205a0 <nan>
 801fa56:	2d00      	cmp	r5, #0
 801fa58:	da53      	bge.n	801fb02 <__ieee754_pow+0x10a>
 801fa5a:	4b6b      	ldr	r3, [pc, #428]	; (801fc08 <__ieee754_pow+0x210>)
 801fa5c:	4598      	cmp	r8, r3
 801fa5e:	dc4d      	bgt.n	801fafc <__ieee754_pow+0x104>
 801fa60:	f1a3 7354 	sub.w	r3, r3, #55574528	; 0x3500000
 801fa64:	4598      	cmp	r8, r3
 801fa66:	dd4c      	ble.n	801fb02 <__ieee754_pow+0x10a>
 801fa68:	ea4f 5328 	mov.w	r3, r8, asr #20
 801fa6c:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 801fa70:	2b14      	cmp	r3, #20
 801fa72:	dd26      	ble.n	801fac2 <__ieee754_pow+0xca>
 801fa74:	f1c3 0334 	rsb	r3, r3, #52	; 0x34
 801fa78:	fa22 f103 	lsr.w	r1, r2, r3
 801fa7c:	fa01 f303 	lsl.w	r3, r1, r3
 801fa80:	4293      	cmp	r3, r2
 801fa82:	d13e      	bne.n	801fb02 <__ieee754_pow+0x10a>
 801fa84:	f001 0101 	and.w	r1, r1, #1
 801fa88:	f1c1 0b02 	rsb	fp, r1, #2
 801fa8c:	2a00      	cmp	r2, #0
 801fa8e:	d15b      	bne.n	801fb48 <__ieee754_pow+0x150>
 801fa90:	4b5b      	ldr	r3, [pc, #364]	; (801fc00 <__ieee754_pow+0x208>)
 801fa92:	4598      	cmp	r8, r3
 801fa94:	d124      	bne.n	801fae0 <__ieee754_pow+0xe8>
 801fa96:	f104 4340 	add.w	r3, r4, #3221225472	; 0xc0000000
 801fa9a:	f503 1380 	add.w	r3, r3, #1048576	; 0x100000
 801fa9e:	ea53 030a 	orrs.w	r3, r3, sl
 801faa2:	f000 8476 	beq.w	8020392 <__ieee754_pow+0x99a>
 801faa6:	4b59      	ldr	r3, [pc, #356]	; (801fc0c <__ieee754_pow+0x214>)
 801faa8:	429c      	cmp	r4, r3
 801faaa:	dd2d      	ble.n	801fb08 <__ieee754_pow+0x110>
 801faac:	f1b9 0f00 	cmp.w	r9, #0
 801fab0:	f280 8473 	bge.w	802039a <__ieee754_pow+0x9a2>
 801fab4:	2000      	movs	r0, #0
 801fab6:	2100      	movs	r1, #0
 801fab8:	ec41 0b10 	vmov	d0, r0, r1
 801fabc:	b011      	add	sp, #68	; 0x44
 801fabe:	e8bd 8ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, pc}
 801fac2:	2a00      	cmp	r2, #0
 801fac4:	d13e      	bne.n	801fb44 <__ieee754_pow+0x14c>
 801fac6:	f1c3 0314 	rsb	r3, r3, #20
 801faca:	fa48 f103 	asr.w	r1, r8, r3
 801face:	fa01 f303 	lsl.w	r3, r1, r3
 801fad2:	4543      	cmp	r3, r8
 801fad4:	f040 8469 	bne.w	80203aa <__ieee754_pow+0x9b2>
 801fad8:	f001 0101 	and.w	r1, r1, #1
 801fadc:	f1c1 0b02 	rsb	fp, r1, #2
 801fae0:	4b4b      	ldr	r3, [pc, #300]	; (801fc10 <__ieee754_pow+0x218>)
 801fae2:	4598      	cmp	r8, r3
 801fae4:	d118      	bne.n	801fb18 <__ieee754_pow+0x120>
 801fae6:	f1b9 0f00 	cmp.w	r9, #0
 801faea:	f280 845a 	bge.w	80203a2 <__ieee754_pow+0x9aa>
 801faee:	4948      	ldr	r1, [pc, #288]	; (801fc10 <__ieee754_pow+0x218>)
 801faf0:	4632      	mov	r2, r6
 801faf2:	463b      	mov	r3, r7
 801faf4:	2000      	movs	r0, #0
 801faf6:	f7e0 feb1 	bl	800085c <__aeabi_ddiv>
 801fafa:	e7dd      	b.n	801fab8 <__ieee754_pow+0xc0>
 801fafc:	f04f 0b02 	mov.w	fp, #2
 801fb00:	e7c4      	b.n	801fa8c <__ieee754_pow+0x94>
 801fb02:	f04f 0b00 	mov.w	fp, #0
 801fb06:	e7c1      	b.n	801fa8c <__ieee754_pow+0x94>
 801fb08:	f1b9 0f00 	cmp.w	r9, #0
 801fb0c:	dad2      	bge.n	801fab4 <__ieee754_pow+0xbc>
 801fb0e:	e9dd 0300 	ldrd	r0, r3, [sp]
 801fb12:	f103 4100 	add.w	r1, r3, #2147483648	; 0x80000000
 801fb16:	e7cf      	b.n	801fab8 <__ieee754_pow+0xc0>
 801fb18:	f1b9 4f80 	cmp.w	r9, #1073741824	; 0x40000000
 801fb1c:	d106      	bne.n	801fb2c <__ieee754_pow+0x134>
 801fb1e:	4632      	mov	r2, r6
 801fb20:	463b      	mov	r3, r7
 801fb22:	4610      	mov	r0, r2
 801fb24:	4619      	mov	r1, r3
 801fb26:	f7e0 fd6f 	bl	8000608 <__aeabi_dmul>
 801fb2a:	e7c5      	b.n	801fab8 <__ieee754_pow+0xc0>
 801fb2c:	4b39      	ldr	r3, [pc, #228]	; (801fc14 <__ieee754_pow+0x21c>)
 801fb2e:	4599      	cmp	r9, r3
 801fb30:	d10a      	bne.n	801fb48 <__ieee754_pow+0x150>
 801fb32:	2d00      	cmp	r5, #0
 801fb34:	db08      	blt.n	801fb48 <__ieee754_pow+0x150>
 801fb36:	ec47 6b10 	vmov	d0, r6, r7
 801fb3a:	b011      	add	sp, #68	; 0x44
 801fb3c:	e8bd 4ff0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, r9, sl, fp, lr}
 801fb40:	f000 bc68 	b.w	8020414 <__ieee754_sqrt>
 801fb44:	f04f 0b00 	mov.w	fp, #0
 801fb48:	ec47 6b10 	vmov	d0, r6, r7
 801fb4c:	f000 fd12 	bl	8020574 <fabs>
 801fb50:	ec51 0b10 	vmov	r0, r1, d0
 801fb54:	f1ba 0f00 	cmp.w	sl, #0
 801fb58:	d127      	bne.n	801fbaa <__ieee754_pow+0x1b2>
 801fb5a:	b124      	cbz	r4, 801fb66 <__ieee754_pow+0x16e>
 801fb5c:	4b2c      	ldr	r3, [pc, #176]	; (801fc10 <__ieee754_pow+0x218>)
 801fb5e:	f025 4240 	bic.w	r2, r5, #3221225472	; 0xc0000000
 801fb62:	429a      	cmp	r2, r3
 801fb64:	d121      	bne.n	801fbaa <__ieee754_pow+0x1b2>
 801fb66:	f1b9 0f00 	cmp.w	r9, #0
 801fb6a:	da05      	bge.n	801fb78 <__ieee754_pow+0x180>
 801fb6c:	4602      	mov	r2, r0
 801fb6e:	460b      	mov	r3, r1
 801fb70:	2000      	movs	r0, #0
 801fb72:	4927      	ldr	r1, [pc, #156]	; (801fc10 <__ieee754_pow+0x218>)
 801fb74:	f7e0 fe72 	bl	800085c <__aeabi_ddiv>
 801fb78:	2d00      	cmp	r5, #0
 801fb7a:	da9d      	bge.n	801fab8 <__ieee754_pow+0xc0>
 801fb7c:	f104 4440 	add.w	r4, r4, #3221225472	; 0xc0000000
 801fb80:	f504 1480 	add.w	r4, r4, #1048576	; 0x100000
 801fb84:	ea54 030b 	orrs.w	r3, r4, fp
 801fb88:	d108      	bne.n	801fb9c <__ieee754_pow+0x1a4>
 801fb8a:	4602      	mov	r2, r0
 801fb8c:	460b      	mov	r3, r1
 801fb8e:	4610      	mov	r0, r2
 801fb90:	4619      	mov	r1, r3
 801fb92:	f7e0 fb81 	bl	8000298 <__aeabi_dsub>
 801fb96:	4602      	mov	r2, r0
 801fb98:	460b      	mov	r3, r1
 801fb9a:	e7ac      	b.n	801faf6 <__ieee754_pow+0xfe>
 801fb9c:	f1bb 0f01 	cmp.w	fp, #1
 801fba0:	d18a      	bne.n	801fab8 <__ieee754_pow+0xc0>
 801fba2:	f101 4300 	add.w	r3, r1, #2147483648	; 0x80000000
 801fba6:	4619      	mov	r1, r3
 801fba8:	e786      	b.n	801fab8 <__ieee754_pow+0xc0>
 801fbaa:	0fed      	lsrs	r5, r5, #31
 801fbac:	1e6b      	subs	r3, r5, #1
 801fbae:	930d      	str	r3, [sp, #52]	; 0x34
 801fbb0:	ea5b 0303 	orrs.w	r3, fp, r3
 801fbb4:	d102      	bne.n	801fbbc <__ieee754_pow+0x1c4>
 801fbb6:	4632      	mov	r2, r6
 801fbb8:	463b      	mov	r3, r7
 801fbba:	e7e8      	b.n	801fb8e <__ieee754_pow+0x196>
 801fbbc:	4b16      	ldr	r3, [pc, #88]	; (801fc18 <__ieee754_pow+0x220>)
 801fbbe:	4598      	cmp	r8, r3
 801fbc0:	f340 80fe 	ble.w	801fdc0 <__ieee754_pow+0x3c8>
 801fbc4:	f103 7304 	add.w	r3, r3, #34603008	; 0x2100000
 801fbc8:	4598      	cmp	r8, r3
 801fbca:	dd0a      	ble.n	801fbe2 <__ieee754_pow+0x1ea>
 801fbcc:	4b0f      	ldr	r3, [pc, #60]	; (801fc0c <__ieee754_pow+0x214>)
 801fbce:	429c      	cmp	r4, r3
 801fbd0:	dc0d      	bgt.n	801fbee <__ieee754_pow+0x1f6>
 801fbd2:	f1b9 0f00 	cmp.w	r9, #0
 801fbd6:	f6bf af6d 	bge.w	801fab4 <__ieee754_pow+0xbc>
 801fbda:	a307      	add	r3, pc, #28	; (adr r3, 801fbf8 <__ieee754_pow+0x200>)
 801fbdc:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fbe0:	e79f      	b.n	801fb22 <__ieee754_pow+0x12a>
 801fbe2:	4b0e      	ldr	r3, [pc, #56]	; (801fc1c <__ieee754_pow+0x224>)
 801fbe4:	429c      	cmp	r4, r3
 801fbe6:	ddf4      	ble.n	801fbd2 <__ieee754_pow+0x1da>
 801fbe8:	4b09      	ldr	r3, [pc, #36]	; (801fc10 <__ieee754_pow+0x218>)
 801fbea:	429c      	cmp	r4, r3
 801fbec:	dd18      	ble.n	801fc20 <__ieee754_pow+0x228>
 801fbee:	f1b9 0f00 	cmp.w	r9, #0
 801fbf2:	dcf2      	bgt.n	801fbda <__ieee754_pow+0x1e2>
 801fbf4:	e75e      	b.n	801fab4 <__ieee754_pow+0xbc>
 801fbf6:	bf00      	nop
 801fbf8:	8800759c 	.word	0x8800759c
 801fbfc:	7e37e43c 	.word	0x7e37e43c
 801fc00:	7ff00000 	.word	0x7ff00000
 801fc04:	08029f8d 	.word	0x08029f8d
 801fc08:	433fffff 	.word	0x433fffff
 801fc0c:	3fefffff 	.word	0x3fefffff
 801fc10:	3ff00000 	.word	0x3ff00000
 801fc14:	3fe00000 	.word	0x3fe00000
 801fc18:	41e00000 	.word	0x41e00000
 801fc1c:	3feffffe 	.word	0x3feffffe
 801fc20:	2200      	movs	r2, #0
 801fc22:	4b63      	ldr	r3, [pc, #396]	; (801fdb0 <__ieee754_pow+0x3b8>)
 801fc24:	f7e0 fb38 	bl	8000298 <__aeabi_dsub>
 801fc28:	a355      	add	r3, pc, #340	; (adr r3, 801fd80 <__ieee754_pow+0x388>)
 801fc2a:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fc2e:	4604      	mov	r4, r0
 801fc30:	460d      	mov	r5, r1
 801fc32:	f7e0 fce9 	bl	8000608 <__aeabi_dmul>
 801fc36:	a354      	add	r3, pc, #336	; (adr r3, 801fd88 <__ieee754_pow+0x390>)
 801fc38:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fc3c:	4606      	mov	r6, r0
 801fc3e:	460f      	mov	r7, r1
 801fc40:	4620      	mov	r0, r4
 801fc42:	4629      	mov	r1, r5
 801fc44:	f7e0 fce0 	bl	8000608 <__aeabi_dmul>
 801fc48:	2200      	movs	r2, #0
 801fc4a:	e9cd 0102 	strd	r0, r1, [sp, #8]
 801fc4e:	4b59      	ldr	r3, [pc, #356]	; (801fdb4 <__ieee754_pow+0x3bc>)
 801fc50:	4620      	mov	r0, r4
 801fc52:	4629      	mov	r1, r5
 801fc54:	f7e0 fcd8 	bl	8000608 <__aeabi_dmul>
 801fc58:	4602      	mov	r2, r0
 801fc5a:	460b      	mov	r3, r1
 801fc5c:	a14c      	add	r1, pc, #304	; (adr r1, 801fd90 <__ieee754_pow+0x398>)
 801fc5e:	e9d1 0100 	ldrd	r0, r1, [r1]
 801fc62:	f7e0 fb19 	bl	8000298 <__aeabi_dsub>
 801fc66:	4622      	mov	r2, r4
 801fc68:	462b      	mov	r3, r5
 801fc6a:	f7e0 fccd 	bl	8000608 <__aeabi_dmul>
 801fc6e:	4602      	mov	r2, r0
 801fc70:	460b      	mov	r3, r1
 801fc72:	2000      	movs	r0, #0
 801fc74:	4950      	ldr	r1, [pc, #320]	; (801fdb8 <__ieee754_pow+0x3c0>)
 801fc76:	f7e0 fb0f 	bl	8000298 <__aeabi_dsub>
 801fc7a:	4622      	mov	r2, r4
 801fc7c:	462b      	mov	r3, r5
 801fc7e:	4680      	mov	r8, r0
 801fc80:	4689      	mov	r9, r1
 801fc82:	4620      	mov	r0, r4
 801fc84:	4629      	mov	r1, r5
 801fc86:	f7e0 fcbf 	bl	8000608 <__aeabi_dmul>
 801fc8a:	4602      	mov	r2, r0
 801fc8c:	460b      	mov	r3, r1
 801fc8e:	4640      	mov	r0, r8
 801fc90:	4649      	mov	r1, r9
 801fc92:	f7e0 fcb9 	bl	8000608 <__aeabi_dmul>
 801fc96:	a340      	add	r3, pc, #256	; (adr r3, 801fd98 <__ieee754_pow+0x3a0>)
 801fc98:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fc9c:	f7e0 fcb4 	bl	8000608 <__aeabi_dmul>
 801fca0:	4602      	mov	r2, r0
 801fca2:	460b      	mov	r3, r1
 801fca4:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801fca8:	f7e0 faf6 	bl	8000298 <__aeabi_dsub>
 801fcac:	4602      	mov	r2, r0
 801fcae:	460b      	mov	r3, r1
 801fcb0:	4604      	mov	r4, r0
 801fcb2:	460d      	mov	r5, r1
 801fcb4:	4630      	mov	r0, r6
 801fcb6:	4639      	mov	r1, r7
 801fcb8:	f7e0 faf0 	bl	800029c <__adddf3>
 801fcbc:	2000      	movs	r0, #0
 801fcbe:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801fcc2:	4632      	mov	r2, r6
 801fcc4:	463b      	mov	r3, r7
 801fcc6:	f7e0 fae7 	bl	8000298 <__aeabi_dsub>
 801fcca:	4602      	mov	r2, r0
 801fccc:	460b      	mov	r3, r1
 801fcce:	4620      	mov	r0, r4
 801fcd0:	4629      	mov	r1, r5
 801fcd2:	f7e0 fae1 	bl	8000298 <__aeabi_dsub>
 801fcd6:	9a0d      	ldr	r2, [sp, #52]	; 0x34
 801fcd8:	f10b 33ff 	add.w	r3, fp, #4294967295
 801fcdc:	4313      	orrs	r3, r2
 801fcde:	4606      	mov	r6, r0
 801fce0:	460f      	mov	r7, r1
 801fce2:	f040 81eb 	bne.w	80200bc <__ieee754_pow+0x6c4>
 801fce6:	ed9f 7b2e 	vldr	d7, [pc, #184]	; 801fda0 <__ieee754_pow+0x3a8>
 801fcea:	e9dd 4500 	ldrd	r4, r5, [sp]
 801fcee:	2400      	movs	r4, #0
 801fcf0:	4622      	mov	r2, r4
 801fcf2:	462b      	mov	r3, r5
 801fcf4:	e9dd 0100 	ldrd	r0, r1, [sp]
 801fcf8:	ed8d 7b02 	vstr	d7, [sp, #8]
 801fcfc:	f7e0 facc 	bl	8000298 <__aeabi_dsub>
 801fd00:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 801fd04:	f7e0 fc80 	bl	8000608 <__aeabi_dmul>
 801fd08:	e9dd 2300 	ldrd	r2, r3, [sp]
 801fd0c:	4680      	mov	r8, r0
 801fd0e:	4689      	mov	r9, r1
 801fd10:	4630      	mov	r0, r6
 801fd12:	4639      	mov	r1, r7
 801fd14:	f7e0 fc78 	bl	8000608 <__aeabi_dmul>
 801fd18:	4602      	mov	r2, r0
 801fd1a:	460b      	mov	r3, r1
 801fd1c:	4640      	mov	r0, r8
 801fd1e:	4649      	mov	r1, r9
 801fd20:	f7e0 fabc 	bl	800029c <__adddf3>
 801fd24:	4622      	mov	r2, r4
 801fd26:	462b      	mov	r3, r5
 801fd28:	4680      	mov	r8, r0
 801fd2a:	4689      	mov	r9, r1
 801fd2c:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801fd30:	f7e0 fc6a 	bl	8000608 <__aeabi_dmul>
 801fd34:	460b      	mov	r3, r1
 801fd36:	4604      	mov	r4, r0
 801fd38:	460d      	mov	r5, r1
 801fd3a:	4602      	mov	r2, r0
 801fd3c:	4649      	mov	r1, r9
 801fd3e:	4640      	mov	r0, r8
 801fd40:	e9cd 4500 	strd	r4, r5, [sp]
 801fd44:	f7e0 faaa 	bl	800029c <__adddf3>
 801fd48:	4b1c      	ldr	r3, [pc, #112]	; (801fdbc <__ieee754_pow+0x3c4>)
 801fd4a:	4299      	cmp	r1, r3
 801fd4c:	4606      	mov	r6, r0
 801fd4e:	460f      	mov	r7, r1
 801fd50:	468b      	mov	fp, r1
 801fd52:	f340 82f7 	ble.w	8020344 <__ieee754_pow+0x94c>
 801fd56:	f101 433f 	add.w	r3, r1, #3204448256	; 0xbf000000
 801fd5a:	f503 03e0 	add.w	r3, r3, #7340032	; 0x700000
 801fd5e:	4303      	orrs	r3, r0
 801fd60:	f000 81ea 	beq.w	8020138 <__ieee754_pow+0x740>
 801fd64:	a310      	add	r3, pc, #64	; (adr r3, 801fda8 <__ieee754_pow+0x3b0>)
 801fd66:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fd6a:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 801fd6e:	f7e0 fc4b 	bl	8000608 <__aeabi_dmul>
 801fd72:	a30d      	add	r3, pc, #52	; (adr r3, 801fda8 <__ieee754_pow+0x3b0>)
 801fd74:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fd78:	e6d5      	b.n	801fb26 <__ieee754_pow+0x12e>
 801fd7a:	bf00      	nop
 801fd7c:	f3af 8000 	nop.w
 801fd80:	60000000 	.word	0x60000000
 801fd84:	3ff71547 	.word	0x3ff71547
 801fd88:	f85ddf44 	.word	0xf85ddf44
 801fd8c:	3e54ae0b 	.word	0x3e54ae0b
 801fd90:	55555555 	.word	0x55555555
 801fd94:	3fd55555 	.word	0x3fd55555
 801fd98:	652b82fe 	.word	0x652b82fe
 801fd9c:	3ff71547 	.word	0x3ff71547
 801fda0:	00000000 	.word	0x00000000
 801fda4:	bff00000 	.word	0xbff00000
 801fda8:	8800759c 	.word	0x8800759c
 801fdac:	7e37e43c 	.word	0x7e37e43c
 801fdb0:	3ff00000 	.word	0x3ff00000
 801fdb4:	3fd00000 	.word	0x3fd00000
 801fdb8:	3fe00000 	.word	0x3fe00000
 801fdbc:	408fffff 	.word	0x408fffff
 801fdc0:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 801fdc4:	f04f 0200 	mov.w	r2, #0
 801fdc8:	da05      	bge.n	801fdd6 <__ieee754_pow+0x3de>
 801fdca:	4bd3      	ldr	r3, [pc, #844]	; (8020118 <__ieee754_pow+0x720>)
 801fdcc:	f7e0 fc1c 	bl	8000608 <__aeabi_dmul>
 801fdd0:	f06f 0234 	mvn.w	r2, #52	; 0x34
 801fdd4:	460c      	mov	r4, r1
 801fdd6:	1523      	asrs	r3, r4, #20
 801fdd8:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 801fddc:	4413      	add	r3, r2
 801fdde:	9309      	str	r3, [sp, #36]	; 0x24
 801fde0:	4bce      	ldr	r3, [pc, #824]	; (802011c <__ieee754_pow+0x724>)
 801fde2:	f3c4 0413 	ubfx	r4, r4, #0, #20
 801fde6:	f044 557f 	orr.w	r5, r4, #1069547520	; 0x3fc00000
 801fdea:	429c      	cmp	r4, r3
 801fdec:	f445 1540 	orr.w	r5, r5, #3145728	; 0x300000
 801fdf0:	dd08      	ble.n	801fe04 <__ieee754_pow+0x40c>
 801fdf2:	4bcb      	ldr	r3, [pc, #812]	; (8020120 <__ieee754_pow+0x728>)
 801fdf4:	429c      	cmp	r4, r3
 801fdf6:	f340 815e 	ble.w	80200b6 <__ieee754_pow+0x6be>
 801fdfa:	9b09      	ldr	r3, [sp, #36]	; 0x24
 801fdfc:	3301      	adds	r3, #1
 801fdfe:	9309      	str	r3, [sp, #36]	; 0x24
 801fe00:	f5a5 1580 	sub.w	r5, r5, #1048576	; 0x100000
 801fe04:	f04f 0a00 	mov.w	sl, #0
 801fe08:	ea4f 03ca 	mov.w	r3, sl, lsl #3
 801fe0c:	930c      	str	r3, [sp, #48]	; 0x30
 801fe0e:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 801fe10:	4bc4      	ldr	r3, [pc, #784]	; (8020124 <__ieee754_pow+0x72c>)
 801fe12:	4413      	add	r3, r2
 801fe14:	ed93 7b00 	vldr	d7, [r3]
 801fe18:	4629      	mov	r1, r5
 801fe1a:	ec53 2b17 	vmov	r2, r3, d7
 801fe1e:	ed8d 7b06 	vstr	d7, [sp, #24]
 801fe22:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 801fe26:	f7e0 fa37 	bl	8000298 <__aeabi_dsub>
 801fe2a:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 801fe2e:	4606      	mov	r6, r0
 801fe30:	460f      	mov	r7, r1
 801fe32:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801fe36:	f7e0 fa31 	bl	800029c <__adddf3>
 801fe3a:	4602      	mov	r2, r0
 801fe3c:	460b      	mov	r3, r1
 801fe3e:	2000      	movs	r0, #0
 801fe40:	49b9      	ldr	r1, [pc, #740]	; (8020128 <__ieee754_pow+0x730>)
 801fe42:	f7e0 fd0b 	bl	800085c <__aeabi_ddiv>
 801fe46:	e9cd 010e 	strd	r0, r1, [sp, #56]	; 0x38
 801fe4a:	4602      	mov	r2, r0
 801fe4c:	460b      	mov	r3, r1
 801fe4e:	4630      	mov	r0, r6
 801fe50:	4639      	mov	r1, r7
 801fe52:	f7e0 fbd9 	bl	8000608 <__aeabi_dmul>
 801fe56:	e9cd 0104 	strd	r0, r1, [sp, #16]
 801fe5a:	e9dd 3404 	ldrd	r3, r4, [sp, #16]
 801fe5e:	e9cd 3402 	strd	r3, r4, [sp, #8]
 801fe62:	2300      	movs	r3, #0
 801fe64:	9302      	str	r3, [sp, #8]
 801fe66:	e9dd 8902 	ldrd	r8, r9, [sp, #8]
 801fe6a:	106d      	asrs	r5, r5, #1
 801fe6c:	f045 5500 	orr.w	r5, r5, #536870912	; 0x20000000
 801fe70:	f505 2500 	add.w	r5, r5, #524288	; 0x80000
 801fe74:	2200      	movs	r2, #0
 801fe76:	eb05 438a 	add.w	r3, r5, sl, lsl #18
 801fe7a:	4640      	mov	r0, r8
 801fe7c:	4649      	mov	r1, r9
 801fe7e:	4614      	mov	r4, r2
 801fe80:	461d      	mov	r5, r3
 801fe82:	f7e0 fbc1 	bl	8000608 <__aeabi_dmul>
 801fe86:	4602      	mov	r2, r0
 801fe88:	460b      	mov	r3, r1
 801fe8a:	4630      	mov	r0, r6
 801fe8c:	4639      	mov	r1, r7
 801fe8e:	f7e0 fa03 	bl	8000298 <__aeabi_dsub>
 801fe92:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801fe96:	4606      	mov	r6, r0
 801fe98:	460f      	mov	r7, r1
 801fe9a:	4620      	mov	r0, r4
 801fe9c:	4629      	mov	r1, r5
 801fe9e:	f7e0 f9fb 	bl	8000298 <__aeabi_dsub>
 801fea2:	4602      	mov	r2, r0
 801fea4:	460b      	mov	r3, r1
 801fea6:	e9dd 010a 	ldrd	r0, r1, [sp, #40]	; 0x28
 801feaa:	f7e0 f9f5 	bl	8000298 <__aeabi_dsub>
 801feae:	4642      	mov	r2, r8
 801feb0:	464b      	mov	r3, r9
 801feb2:	f7e0 fba9 	bl	8000608 <__aeabi_dmul>
 801feb6:	4602      	mov	r2, r0
 801feb8:	460b      	mov	r3, r1
 801feba:	4630      	mov	r0, r6
 801febc:	4639      	mov	r1, r7
 801febe:	f7e0 f9eb 	bl	8000298 <__aeabi_dsub>
 801fec2:	e9dd 230e 	ldrd	r2, r3, [sp, #56]	; 0x38
 801fec6:	f7e0 fb9f 	bl	8000608 <__aeabi_dmul>
 801feca:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 801fece:	e9cd 0106 	strd	r0, r1, [sp, #24]
 801fed2:	4610      	mov	r0, r2
 801fed4:	4619      	mov	r1, r3
 801fed6:	f7e0 fb97 	bl	8000608 <__aeabi_dmul>
 801feda:	a37b      	add	r3, pc, #492	; (adr r3, 80200c8 <__ieee754_pow+0x6d0>)
 801fedc:	e9d3 2300 	ldrd	r2, r3, [r3]
 801fee0:	4604      	mov	r4, r0
 801fee2:	460d      	mov	r5, r1
 801fee4:	f7e0 fb90 	bl	8000608 <__aeabi_dmul>
 801fee8:	a379      	add	r3, pc, #484	; (adr r3, 80200d0 <__ieee754_pow+0x6d8>)
 801feea:	e9d3 2300 	ldrd	r2, r3, [r3]
 801feee:	f7e0 f9d5 	bl	800029c <__adddf3>
 801fef2:	4622      	mov	r2, r4
 801fef4:	462b      	mov	r3, r5
 801fef6:	f7e0 fb87 	bl	8000608 <__aeabi_dmul>
 801fefa:	a377      	add	r3, pc, #476	; (adr r3, 80200d8 <__ieee754_pow+0x6e0>)
 801fefc:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ff00:	f7e0 f9cc 	bl	800029c <__adddf3>
 801ff04:	4622      	mov	r2, r4
 801ff06:	462b      	mov	r3, r5
 801ff08:	f7e0 fb7e 	bl	8000608 <__aeabi_dmul>
 801ff0c:	a374      	add	r3, pc, #464	; (adr r3, 80200e0 <__ieee754_pow+0x6e8>)
 801ff0e:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ff12:	f7e0 f9c3 	bl	800029c <__adddf3>
 801ff16:	4622      	mov	r2, r4
 801ff18:	462b      	mov	r3, r5
 801ff1a:	f7e0 fb75 	bl	8000608 <__aeabi_dmul>
 801ff1e:	a372      	add	r3, pc, #456	; (adr r3, 80200e8 <__ieee754_pow+0x6f0>)
 801ff20:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ff24:	f7e0 f9ba 	bl	800029c <__adddf3>
 801ff28:	4622      	mov	r2, r4
 801ff2a:	462b      	mov	r3, r5
 801ff2c:	f7e0 fb6c 	bl	8000608 <__aeabi_dmul>
 801ff30:	a36f      	add	r3, pc, #444	; (adr r3, 80200f0 <__ieee754_pow+0x6f8>)
 801ff32:	e9d3 2300 	ldrd	r2, r3, [r3]
 801ff36:	f7e0 f9b1 	bl	800029c <__adddf3>
 801ff3a:	4622      	mov	r2, r4
 801ff3c:	4606      	mov	r6, r0
 801ff3e:	460f      	mov	r7, r1
 801ff40:	462b      	mov	r3, r5
 801ff42:	4620      	mov	r0, r4
 801ff44:	4629      	mov	r1, r5
 801ff46:	f7e0 fb5f 	bl	8000608 <__aeabi_dmul>
 801ff4a:	4602      	mov	r2, r0
 801ff4c:	460b      	mov	r3, r1
 801ff4e:	4630      	mov	r0, r6
 801ff50:	4639      	mov	r1, r7
 801ff52:	f7e0 fb59 	bl	8000608 <__aeabi_dmul>
 801ff56:	4642      	mov	r2, r8
 801ff58:	4604      	mov	r4, r0
 801ff5a:	460d      	mov	r5, r1
 801ff5c:	464b      	mov	r3, r9
 801ff5e:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 801ff62:	f7e0 f99b 	bl	800029c <__adddf3>
 801ff66:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 801ff6a:	f7e0 fb4d 	bl	8000608 <__aeabi_dmul>
 801ff6e:	4622      	mov	r2, r4
 801ff70:	462b      	mov	r3, r5
 801ff72:	f7e0 f993 	bl	800029c <__adddf3>
 801ff76:	4642      	mov	r2, r8
 801ff78:	4606      	mov	r6, r0
 801ff7a:	460f      	mov	r7, r1
 801ff7c:	464b      	mov	r3, r9
 801ff7e:	4640      	mov	r0, r8
 801ff80:	4649      	mov	r1, r9
 801ff82:	f7e0 fb41 	bl	8000608 <__aeabi_dmul>
 801ff86:	2200      	movs	r2, #0
 801ff88:	4b68      	ldr	r3, [pc, #416]	; (802012c <__ieee754_pow+0x734>)
 801ff8a:	e9cd 010a 	strd	r0, r1, [sp, #40]	; 0x28
 801ff8e:	f7e0 f985 	bl	800029c <__adddf3>
 801ff92:	4632      	mov	r2, r6
 801ff94:	463b      	mov	r3, r7
 801ff96:	f7e0 f981 	bl	800029c <__adddf3>
 801ff9a:	9802      	ldr	r0, [sp, #8]
 801ff9c:	460d      	mov	r5, r1
 801ff9e:	4604      	mov	r4, r0
 801ffa0:	4602      	mov	r2, r0
 801ffa2:	460b      	mov	r3, r1
 801ffa4:	4640      	mov	r0, r8
 801ffa6:	4649      	mov	r1, r9
 801ffa8:	f7e0 fb2e 	bl	8000608 <__aeabi_dmul>
 801ffac:	2200      	movs	r2, #0
 801ffae:	4680      	mov	r8, r0
 801ffb0:	4689      	mov	r9, r1
 801ffb2:	4b5e      	ldr	r3, [pc, #376]	; (802012c <__ieee754_pow+0x734>)
 801ffb4:	4620      	mov	r0, r4
 801ffb6:	4629      	mov	r1, r5
 801ffb8:	f7e0 f96e 	bl	8000298 <__aeabi_dsub>
 801ffbc:	e9dd 230a 	ldrd	r2, r3, [sp, #40]	; 0x28
 801ffc0:	f7e0 f96a 	bl	8000298 <__aeabi_dsub>
 801ffc4:	4602      	mov	r2, r0
 801ffc6:	460b      	mov	r3, r1
 801ffc8:	4630      	mov	r0, r6
 801ffca:	4639      	mov	r1, r7
 801ffcc:	f7e0 f964 	bl	8000298 <__aeabi_dsub>
 801ffd0:	e9dd 2304 	ldrd	r2, r3, [sp, #16]
 801ffd4:	f7e0 fb18 	bl	8000608 <__aeabi_dmul>
 801ffd8:	4622      	mov	r2, r4
 801ffda:	4606      	mov	r6, r0
 801ffdc:	460f      	mov	r7, r1
 801ffde:	462b      	mov	r3, r5
 801ffe0:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 801ffe4:	f7e0 fb10 	bl	8000608 <__aeabi_dmul>
 801ffe8:	4602      	mov	r2, r0
 801ffea:	460b      	mov	r3, r1
 801ffec:	4630      	mov	r0, r6
 801ffee:	4639      	mov	r1, r7
 801fff0:	f7e0 f954 	bl	800029c <__adddf3>
 801fff4:	4606      	mov	r6, r0
 801fff6:	460f      	mov	r7, r1
 801fff8:	4602      	mov	r2, r0
 801fffa:	460b      	mov	r3, r1
 801fffc:	4640      	mov	r0, r8
 801fffe:	4649      	mov	r1, r9
 8020000:	f7e0 f94c 	bl	800029c <__adddf3>
 8020004:	9802      	ldr	r0, [sp, #8]
 8020006:	a33c      	add	r3, pc, #240	; (adr r3, 80200f8 <__ieee754_pow+0x700>)
 8020008:	e9d3 2300 	ldrd	r2, r3, [r3]
 802000c:	4604      	mov	r4, r0
 802000e:	460d      	mov	r5, r1
 8020010:	f7e0 fafa 	bl	8000608 <__aeabi_dmul>
 8020014:	4642      	mov	r2, r8
 8020016:	e9cd 0106 	strd	r0, r1, [sp, #24]
 802001a:	464b      	mov	r3, r9
 802001c:	4620      	mov	r0, r4
 802001e:	4629      	mov	r1, r5
 8020020:	f7e0 f93a 	bl	8000298 <__aeabi_dsub>
 8020024:	4602      	mov	r2, r0
 8020026:	460b      	mov	r3, r1
 8020028:	4630      	mov	r0, r6
 802002a:	4639      	mov	r1, r7
 802002c:	f7e0 f934 	bl	8000298 <__aeabi_dsub>
 8020030:	a333      	add	r3, pc, #204	; (adr r3, 8020100 <__ieee754_pow+0x708>)
 8020032:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020036:	f7e0 fae7 	bl	8000608 <__aeabi_dmul>
 802003a:	a333      	add	r3, pc, #204	; (adr r3, 8020108 <__ieee754_pow+0x710>)
 802003c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020040:	4606      	mov	r6, r0
 8020042:	460f      	mov	r7, r1
 8020044:	4620      	mov	r0, r4
 8020046:	4629      	mov	r1, r5
 8020048:	f7e0 fade 	bl	8000608 <__aeabi_dmul>
 802004c:	4602      	mov	r2, r0
 802004e:	460b      	mov	r3, r1
 8020050:	4630      	mov	r0, r6
 8020052:	4639      	mov	r1, r7
 8020054:	f7e0 f922 	bl	800029c <__adddf3>
 8020058:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 802005a:	4b35      	ldr	r3, [pc, #212]	; (8020130 <__ieee754_pow+0x738>)
 802005c:	4413      	add	r3, r2
 802005e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020062:	f7e0 f91b 	bl	800029c <__adddf3>
 8020066:	4604      	mov	r4, r0
 8020068:	9809      	ldr	r0, [sp, #36]	; 0x24
 802006a:	460d      	mov	r5, r1
 802006c:	f7e0 fa62 	bl	8000534 <__aeabi_i2d>
 8020070:	9a0c      	ldr	r2, [sp, #48]	; 0x30
 8020072:	4b30      	ldr	r3, [pc, #192]	; (8020134 <__ieee754_pow+0x73c>)
 8020074:	4413      	add	r3, r2
 8020076:	e9d3 8900 	ldrd	r8, r9, [r3]
 802007a:	4606      	mov	r6, r0
 802007c:	460f      	mov	r7, r1
 802007e:	4622      	mov	r2, r4
 8020080:	462b      	mov	r3, r5
 8020082:	e9dd 0106 	ldrd	r0, r1, [sp, #24]
 8020086:	f7e0 f909 	bl	800029c <__adddf3>
 802008a:	4642      	mov	r2, r8
 802008c:	464b      	mov	r3, r9
 802008e:	f7e0 f905 	bl	800029c <__adddf3>
 8020092:	4632      	mov	r2, r6
 8020094:	463b      	mov	r3, r7
 8020096:	f7e0 f901 	bl	800029c <__adddf3>
 802009a:	9802      	ldr	r0, [sp, #8]
 802009c:	4632      	mov	r2, r6
 802009e:	463b      	mov	r3, r7
 80200a0:	e9cd 0104 	strd	r0, r1, [sp, #16]
 80200a4:	f7e0 f8f8 	bl	8000298 <__aeabi_dsub>
 80200a8:	4642      	mov	r2, r8
 80200aa:	464b      	mov	r3, r9
 80200ac:	f7e0 f8f4 	bl	8000298 <__aeabi_dsub>
 80200b0:	e9dd 2306 	ldrd	r2, r3, [sp, #24]
 80200b4:	e607      	b.n	801fcc6 <__ieee754_pow+0x2ce>
 80200b6:	f04f 0a01 	mov.w	sl, #1
 80200ba:	e6a5      	b.n	801fe08 <__ieee754_pow+0x410>
 80200bc:	ed9f 7b14 	vldr	d7, [pc, #80]	; 8020110 <__ieee754_pow+0x718>
 80200c0:	e613      	b.n	801fcea <__ieee754_pow+0x2f2>
 80200c2:	bf00      	nop
 80200c4:	f3af 8000 	nop.w
 80200c8:	4a454eef 	.word	0x4a454eef
 80200cc:	3fca7e28 	.word	0x3fca7e28
 80200d0:	93c9db65 	.word	0x93c9db65
 80200d4:	3fcd864a 	.word	0x3fcd864a
 80200d8:	a91d4101 	.word	0xa91d4101
 80200dc:	3fd17460 	.word	0x3fd17460
 80200e0:	518f264d 	.word	0x518f264d
 80200e4:	3fd55555 	.word	0x3fd55555
 80200e8:	db6fabff 	.word	0xdb6fabff
 80200ec:	3fdb6db6 	.word	0x3fdb6db6
 80200f0:	33333303 	.word	0x33333303
 80200f4:	3fe33333 	.word	0x3fe33333
 80200f8:	e0000000 	.word	0xe0000000
 80200fc:	3feec709 	.word	0x3feec709
 8020100:	dc3a03fd 	.word	0xdc3a03fd
 8020104:	3feec709 	.word	0x3feec709
 8020108:	145b01f5 	.word	0x145b01f5
 802010c:	be3e2fe0 	.word	0xbe3e2fe0
 8020110:	00000000 	.word	0x00000000
 8020114:	3ff00000 	.word	0x3ff00000
 8020118:	43400000 	.word	0x43400000
 802011c:	0003988e 	.word	0x0003988e
 8020120:	000bb679 	.word	0x000bb679
 8020124:	08029fc0 	.word	0x08029fc0
 8020128:	3ff00000 	.word	0x3ff00000
 802012c:	40080000 	.word	0x40080000
 8020130:	08029fe0 	.word	0x08029fe0
 8020134:	08029fd0 	.word	0x08029fd0
 8020138:	a3b4      	add	r3, pc, #720	; (adr r3, 802040c <__ieee754_pow+0xa14>)
 802013a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802013e:	4640      	mov	r0, r8
 8020140:	4649      	mov	r1, r9
 8020142:	f7e0 f8ab 	bl	800029c <__adddf3>
 8020146:	4622      	mov	r2, r4
 8020148:	e9cd 0104 	strd	r0, r1, [sp, #16]
 802014c:	462b      	mov	r3, r5
 802014e:	4630      	mov	r0, r6
 8020150:	4639      	mov	r1, r7
 8020152:	f7e0 f8a1 	bl	8000298 <__aeabi_dsub>
 8020156:	4602      	mov	r2, r0
 8020158:	460b      	mov	r3, r1
 802015a:	e9dd 0104 	ldrd	r0, r1, [sp, #16]
 802015e:	f7e0 fce3 	bl	8000b28 <__aeabi_dcmpgt>
 8020162:	2800      	cmp	r0, #0
 8020164:	f47f adfe 	bne.w	801fd64 <__ieee754_pow+0x36c>
 8020168:	4aa3      	ldr	r2, [pc, #652]	; (80203f8 <__ieee754_pow+0xa00>)
 802016a:	f02b 4300 	bic.w	r3, fp, #2147483648	; 0x80000000
 802016e:	4293      	cmp	r3, r2
 8020170:	f340 810a 	ble.w	8020388 <__ieee754_pow+0x990>
 8020174:	151b      	asrs	r3, r3, #20
 8020176:	f44f 1a80 	mov.w	sl, #1048576	; 0x100000
 802017a:	f2a3 33fe 	subw	r3, r3, #1022	; 0x3fe
 802017e:	fa4a f303 	asr.w	r3, sl, r3
 8020182:	445b      	add	r3, fp
 8020184:	f3c3 520a 	ubfx	r2, r3, #20, #11
 8020188:	4e9c      	ldr	r6, [pc, #624]	; (80203fc <__ieee754_pow+0xa04>)
 802018a:	f2a2 32ff 	subw	r2, r2, #1023	; 0x3ff
 802018e:	4116      	asrs	r6, r2
 8020190:	f3c3 0a13 	ubfx	sl, r3, #0, #20
 8020194:	2000      	movs	r0, #0
 8020196:	ea23 0106 	bic.w	r1, r3, r6
 802019a:	f1c2 0214 	rsb	r2, r2, #20
 802019e:	f44a 1a80 	orr.w	sl, sl, #1048576	; 0x100000
 80201a2:	fa4a fa02 	asr.w	sl, sl, r2
 80201a6:	f1bb 0f00 	cmp.w	fp, #0
 80201aa:	4602      	mov	r2, r0
 80201ac:	460b      	mov	r3, r1
 80201ae:	4620      	mov	r0, r4
 80201b0:	4629      	mov	r1, r5
 80201b2:	bfb8      	it	lt
 80201b4:	f1ca 0a00 	rsblt	sl, sl, #0
 80201b8:	f7e0 f86e 	bl	8000298 <__aeabi_dsub>
 80201bc:	e9cd 0100 	strd	r0, r1, [sp]
 80201c0:	4642      	mov	r2, r8
 80201c2:	464b      	mov	r3, r9
 80201c4:	e9dd 0100 	ldrd	r0, r1, [sp]
 80201c8:	f7e0 f868 	bl	800029c <__adddf3>
 80201cc:	2000      	movs	r0, #0
 80201ce:	a378      	add	r3, pc, #480	; (adr r3, 80203b0 <__ieee754_pow+0x9b8>)
 80201d0:	e9d3 2300 	ldrd	r2, r3, [r3]
 80201d4:	4604      	mov	r4, r0
 80201d6:	460d      	mov	r5, r1
 80201d8:	f7e0 fa16 	bl	8000608 <__aeabi_dmul>
 80201dc:	e9dd 2300 	ldrd	r2, r3, [sp]
 80201e0:	4606      	mov	r6, r0
 80201e2:	460f      	mov	r7, r1
 80201e4:	4620      	mov	r0, r4
 80201e6:	4629      	mov	r1, r5
 80201e8:	f7e0 f856 	bl	8000298 <__aeabi_dsub>
 80201ec:	4602      	mov	r2, r0
 80201ee:	460b      	mov	r3, r1
 80201f0:	4640      	mov	r0, r8
 80201f2:	4649      	mov	r1, r9
 80201f4:	f7e0 f850 	bl	8000298 <__aeabi_dsub>
 80201f8:	a36f      	add	r3, pc, #444	; (adr r3, 80203b8 <__ieee754_pow+0x9c0>)
 80201fa:	e9d3 2300 	ldrd	r2, r3, [r3]
 80201fe:	f7e0 fa03 	bl	8000608 <__aeabi_dmul>
 8020202:	a36f      	add	r3, pc, #444	; (adr r3, 80203c0 <__ieee754_pow+0x9c8>)
 8020204:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020208:	4680      	mov	r8, r0
 802020a:	4689      	mov	r9, r1
 802020c:	4620      	mov	r0, r4
 802020e:	4629      	mov	r1, r5
 8020210:	f7e0 f9fa 	bl	8000608 <__aeabi_dmul>
 8020214:	4602      	mov	r2, r0
 8020216:	460b      	mov	r3, r1
 8020218:	4640      	mov	r0, r8
 802021a:	4649      	mov	r1, r9
 802021c:	f7e0 f83e 	bl	800029c <__adddf3>
 8020220:	4604      	mov	r4, r0
 8020222:	460d      	mov	r5, r1
 8020224:	4602      	mov	r2, r0
 8020226:	460b      	mov	r3, r1
 8020228:	4630      	mov	r0, r6
 802022a:	4639      	mov	r1, r7
 802022c:	f7e0 f836 	bl	800029c <__adddf3>
 8020230:	4632      	mov	r2, r6
 8020232:	463b      	mov	r3, r7
 8020234:	4680      	mov	r8, r0
 8020236:	4689      	mov	r9, r1
 8020238:	f7e0 f82e 	bl	8000298 <__aeabi_dsub>
 802023c:	4602      	mov	r2, r0
 802023e:	460b      	mov	r3, r1
 8020240:	4620      	mov	r0, r4
 8020242:	4629      	mov	r1, r5
 8020244:	f7e0 f828 	bl	8000298 <__aeabi_dsub>
 8020248:	4642      	mov	r2, r8
 802024a:	4606      	mov	r6, r0
 802024c:	460f      	mov	r7, r1
 802024e:	464b      	mov	r3, r9
 8020250:	4640      	mov	r0, r8
 8020252:	4649      	mov	r1, r9
 8020254:	f7e0 f9d8 	bl	8000608 <__aeabi_dmul>
 8020258:	a35b      	add	r3, pc, #364	; (adr r3, 80203c8 <__ieee754_pow+0x9d0>)
 802025a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802025e:	4604      	mov	r4, r0
 8020260:	460d      	mov	r5, r1
 8020262:	f7e0 f9d1 	bl	8000608 <__aeabi_dmul>
 8020266:	a35a      	add	r3, pc, #360	; (adr r3, 80203d0 <__ieee754_pow+0x9d8>)
 8020268:	e9d3 2300 	ldrd	r2, r3, [r3]
 802026c:	f7e0 f814 	bl	8000298 <__aeabi_dsub>
 8020270:	4622      	mov	r2, r4
 8020272:	462b      	mov	r3, r5
 8020274:	f7e0 f9c8 	bl	8000608 <__aeabi_dmul>
 8020278:	a357      	add	r3, pc, #348	; (adr r3, 80203d8 <__ieee754_pow+0x9e0>)
 802027a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802027e:	f7e0 f80d 	bl	800029c <__adddf3>
 8020282:	4622      	mov	r2, r4
 8020284:	462b      	mov	r3, r5
 8020286:	f7e0 f9bf 	bl	8000608 <__aeabi_dmul>
 802028a:	a355      	add	r3, pc, #340	; (adr r3, 80203e0 <__ieee754_pow+0x9e8>)
 802028c:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020290:	f7e0 f802 	bl	8000298 <__aeabi_dsub>
 8020294:	4622      	mov	r2, r4
 8020296:	462b      	mov	r3, r5
 8020298:	f7e0 f9b6 	bl	8000608 <__aeabi_dmul>
 802029c:	a352      	add	r3, pc, #328	; (adr r3, 80203e8 <__ieee754_pow+0x9f0>)
 802029e:	e9d3 2300 	ldrd	r2, r3, [r3]
 80202a2:	f7df fffb 	bl	800029c <__adddf3>
 80202a6:	4622      	mov	r2, r4
 80202a8:	462b      	mov	r3, r5
 80202aa:	f7e0 f9ad 	bl	8000608 <__aeabi_dmul>
 80202ae:	4602      	mov	r2, r0
 80202b0:	460b      	mov	r3, r1
 80202b2:	4640      	mov	r0, r8
 80202b4:	4649      	mov	r1, r9
 80202b6:	f7df ffef 	bl	8000298 <__aeabi_dsub>
 80202ba:	4604      	mov	r4, r0
 80202bc:	460d      	mov	r5, r1
 80202be:	4602      	mov	r2, r0
 80202c0:	460b      	mov	r3, r1
 80202c2:	4640      	mov	r0, r8
 80202c4:	4649      	mov	r1, r9
 80202c6:	f7e0 f99f 	bl	8000608 <__aeabi_dmul>
 80202ca:	2200      	movs	r2, #0
 80202cc:	e9cd 0100 	strd	r0, r1, [sp]
 80202d0:	f04f 4380 	mov.w	r3, #1073741824	; 0x40000000
 80202d4:	4620      	mov	r0, r4
 80202d6:	4629      	mov	r1, r5
 80202d8:	f7df ffde 	bl	8000298 <__aeabi_dsub>
 80202dc:	4602      	mov	r2, r0
 80202de:	460b      	mov	r3, r1
 80202e0:	e9dd 0100 	ldrd	r0, r1, [sp]
 80202e4:	f7e0 faba 	bl	800085c <__aeabi_ddiv>
 80202e8:	4632      	mov	r2, r6
 80202ea:	4604      	mov	r4, r0
 80202ec:	460d      	mov	r5, r1
 80202ee:	463b      	mov	r3, r7
 80202f0:	4640      	mov	r0, r8
 80202f2:	4649      	mov	r1, r9
 80202f4:	f7e0 f988 	bl	8000608 <__aeabi_dmul>
 80202f8:	4632      	mov	r2, r6
 80202fa:	463b      	mov	r3, r7
 80202fc:	f7df ffce 	bl	800029c <__adddf3>
 8020300:	4602      	mov	r2, r0
 8020302:	460b      	mov	r3, r1
 8020304:	4620      	mov	r0, r4
 8020306:	4629      	mov	r1, r5
 8020308:	f7df ffc6 	bl	8000298 <__aeabi_dsub>
 802030c:	4642      	mov	r2, r8
 802030e:	464b      	mov	r3, r9
 8020310:	f7df ffc2 	bl	8000298 <__aeabi_dsub>
 8020314:	4602      	mov	r2, r0
 8020316:	460b      	mov	r3, r1
 8020318:	2000      	movs	r0, #0
 802031a:	4939      	ldr	r1, [pc, #228]	; (8020400 <__ieee754_pow+0xa08>)
 802031c:	f7df ffbc 	bl	8000298 <__aeabi_dsub>
 8020320:	eb01 540a 	add.w	r4, r1, sl, lsl #20
 8020324:	f5b4 1f80 	cmp.w	r4, #1048576	; 0x100000
 8020328:	4602      	mov	r2, r0
 802032a:	460b      	mov	r3, r1
 802032c:	da2f      	bge.n	802038e <__ieee754_pow+0x996>
 802032e:	4650      	mov	r0, sl
 8020330:	ec43 2b10 	vmov	d0, r2, r3
 8020334:	f000 f9c0 	bl	80206b8 <scalbn>
 8020338:	ec51 0b10 	vmov	r0, r1, d0
 802033c:	e9dd 2302 	ldrd	r2, r3, [sp, #8]
 8020340:	f7ff bbf1 	b.w	801fb26 <__ieee754_pow+0x12e>
 8020344:	4b2f      	ldr	r3, [pc, #188]	; (8020404 <__ieee754_pow+0xa0c>)
 8020346:	f021 4600 	bic.w	r6, r1, #2147483648	; 0x80000000
 802034a:	429e      	cmp	r6, r3
 802034c:	f77f af0c 	ble.w	8020168 <__ieee754_pow+0x770>
 8020350:	4b2d      	ldr	r3, [pc, #180]	; (8020408 <__ieee754_pow+0xa10>)
 8020352:	440b      	add	r3, r1
 8020354:	4303      	orrs	r3, r0
 8020356:	d00b      	beq.n	8020370 <__ieee754_pow+0x978>
 8020358:	a325      	add	r3, pc, #148	; (adr r3, 80203f0 <__ieee754_pow+0x9f8>)
 802035a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802035e:	e9dd 0102 	ldrd	r0, r1, [sp, #8]
 8020362:	f7e0 f951 	bl	8000608 <__aeabi_dmul>
 8020366:	a322      	add	r3, pc, #136	; (adr r3, 80203f0 <__ieee754_pow+0x9f8>)
 8020368:	e9d3 2300 	ldrd	r2, r3, [r3]
 802036c:	f7ff bbdb 	b.w	801fb26 <__ieee754_pow+0x12e>
 8020370:	4622      	mov	r2, r4
 8020372:	462b      	mov	r3, r5
 8020374:	f7df ff90 	bl	8000298 <__aeabi_dsub>
 8020378:	4642      	mov	r2, r8
 802037a:	464b      	mov	r3, r9
 802037c:	f7e0 fbca 	bl	8000b14 <__aeabi_dcmpge>
 8020380:	2800      	cmp	r0, #0
 8020382:	f43f aef1 	beq.w	8020168 <__ieee754_pow+0x770>
 8020386:	e7e7      	b.n	8020358 <__ieee754_pow+0x960>
 8020388:	f04f 0a00 	mov.w	sl, #0
 802038c:	e718      	b.n	80201c0 <__ieee754_pow+0x7c8>
 802038e:	4621      	mov	r1, r4
 8020390:	e7d4      	b.n	802033c <__ieee754_pow+0x944>
 8020392:	2000      	movs	r0, #0
 8020394:	491a      	ldr	r1, [pc, #104]	; (8020400 <__ieee754_pow+0xa08>)
 8020396:	f7ff bb8f 	b.w	801fab8 <__ieee754_pow+0xc0>
 802039a:	e9dd 0100 	ldrd	r0, r1, [sp]
 802039e:	f7ff bb8b 	b.w	801fab8 <__ieee754_pow+0xc0>
 80203a2:	4630      	mov	r0, r6
 80203a4:	4639      	mov	r1, r7
 80203a6:	f7ff bb87 	b.w	801fab8 <__ieee754_pow+0xc0>
 80203aa:	4693      	mov	fp, r2
 80203ac:	f7ff bb98 	b.w	801fae0 <__ieee754_pow+0xe8>
 80203b0:	00000000 	.word	0x00000000
 80203b4:	3fe62e43 	.word	0x3fe62e43
 80203b8:	fefa39ef 	.word	0xfefa39ef
 80203bc:	3fe62e42 	.word	0x3fe62e42
 80203c0:	0ca86c39 	.word	0x0ca86c39
 80203c4:	be205c61 	.word	0xbe205c61
 80203c8:	72bea4d0 	.word	0x72bea4d0
 80203cc:	3e663769 	.word	0x3e663769
 80203d0:	c5d26bf1 	.word	0xc5d26bf1
 80203d4:	3ebbbd41 	.word	0x3ebbbd41
 80203d8:	af25de2c 	.word	0xaf25de2c
 80203dc:	3f11566a 	.word	0x3f11566a
 80203e0:	16bebd93 	.word	0x16bebd93
 80203e4:	3f66c16c 	.word	0x3f66c16c
 80203e8:	5555553e 	.word	0x5555553e
 80203ec:	3fc55555 	.word	0x3fc55555
 80203f0:	c2f8f359 	.word	0xc2f8f359
 80203f4:	01a56e1f 	.word	0x01a56e1f
 80203f8:	3fe00000 	.word	0x3fe00000
 80203fc:	000fffff 	.word	0x000fffff
 8020400:	3ff00000 	.word	0x3ff00000
 8020404:	4090cbff 	.word	0x4090cbff
 8020408:	3f6f3400 	.word	0x3f6f3400
 802040c:	652b82fe 	.word	0x652b82fe
 8020410:	3c971547 	.word	0x3c971547

08020414 <__ieee754_sqrt>:
 8020414:	e92d 41f0 	stmdb	sp!, {r4, r5, r6, r7, r8, lr}
 8020418:	4955      	ldr	r1, [pc, #340]	; (8020570 <__ieee754_sqrt+0x15c>)
 802041a:	ec55 4b10 	vmov	r4, r5, d0
 802041e:	43a9      	bics	r1, r5
 8020420:	462b      	mov	r3, r5
 8020422:	462a      	mov	r2, r5
 8020424:	d112      	bne.n	802044c <__ieee754_sqrt+0x38>
 8020426:	ee10 2a10 	vmov	r2, s0
 802042a:	ee10 0a10 	vmov	r0, s0
 802042e:	4629      	mov	r1, r5
 8020430:	f7e0 f8ea 	bl	8000608 <__aeabi_dmul>
 8020434:	4602      	mov	r2, r0
 8020436:	460b      	mov	r3, r1
 8020438:	4620      	mov	r0, r4
 802043a:	4629      	mov	r1, r5
 802043c:	f7df ff2e 	bl	800029c <__adddf3>
 8020440:	4604      	mov	r4, r0
 8020442:	460d      	mov	r5, r1
 8020444:	ec45 4b10 	vmov	d0, r4, r5
 8020448:	e8bd 81f0 	ldmia.w	sp!, {r4, r5, r6, r7, r8, pc}
 802044c:	2d00      	cmp	r5, #0
 802044e:	ee10 0a10 	vmov	r0, s0
 8020452:	4621      	mov	r1, r4
 8020454:	dc0f      	bgt.n	8020476 <__ieee754_sqrt+0x62>
 8020456:	f025 4600 	bic.w	r6, r5, #2147483648	; 0x80000000
 802045a:	4330      	orrs	r0, r6
 802045c:	d0f2      	beq.n	8020444 <__ieee754_sqrt+0x30>
 802045e:	b155      	cbz	r5, 8020476 <__ieee754_sqrt+0x62>
 8020460:	ee10 2a10 	vmov	r2, s0
 8020464:	4620      	mov	r0, r4
 8020466:	4629      	mov	r1, r5
 8020468:	f7df ff16 	bl	8000298 <__aeabi_dsub>
 802046c:	4602      	mov	r2, r0
 802046e:	460b      	mov	r3, r1
 8020470:	f7e0 f9f4 	bl	800085c <__aeabi_ddiv>
 8020474:	e7e4      	b.n	8020440 <__ieee754_sqrt+0x2c>
 8020476:	151b      	asrs	r3, r3, #20
 8020478:	d073      	beq.n	8020562 <__ieee754_sqrt+0x14e>
 802047a:	f2a3 33ff 	subw	r3, r3, #1023	; 0x3ff
 802047e:	07dd      	lsls	r5, r3, #31
 8020480:	f3c2 0213 	ubfx	r2, r2, #0, #20
 8020484:	bf48      	it	mi
 8020486:	0fc8      	lsrmi	r0, r1, #31
 8020488:	f442 1280 	orr.w	r2, r2, #1048576	; 0x100000
 802048c:	bf44      	itt	mi
 802048e:	0049      	lslmi	r1, r1, #1
 8020490:	eb00 0242 	addmi.w	r2, r0, r2, lsl #1
 8020494:	2500      	movs	r5, #0
 8020496:	1058      	asrs	r0, r3, #1
 8020498:	0fcb      	lsrs	r3, r1, #31
 802049a:	eb03 0242 	add.w	r2, r3, r2, lsl #1
 802049e:	0049      	lsls	r1, r1, #1
 80204a0:	2316      	movs	r3, #22
 80204a2:	462c      	mov	r4, r5
 80204a4:	f44f 1600 	mov.w	r6, #2097152	; 0x200000
 80204a8:	19a7      	adds	r7, r4, r6
 80204aa:	4297      	cmp	r7, r2
 80204ac:	bfde      	ittt	le
 80204ae:	19bc      	addle	r4, r7, r6
 80204b0:	1bd2      	suble	r2, r2, r7
 80204b2:	19ad      	addle	r5, r5, r6
 80204b4:	0fcf      	lsrs	r7, r1, #31
 80204b6:	3b01      	subs	r3, #1
 80204b8:	eb07 0242 	add.w	r2, r7, r2, lsl #1
 80204bc:	ea4f 0141 	mov.w	r1, r1, lsl #1
 80204c0:	ea4f 0656 	mov.w	r6, r6, lsr #1
 80204c4:	d1f0      	bne.n	80204a8 <__ieee754_sqrt+0x94>
 80204c6:	f04f 0c20 	mov.w	ip, #32
 80204ca:	469e      	mov	lr, r3
 80204cc:	f04f 4600 	mov.w	r6, #2147483648	; 0x80000000
 80204d0:	42a2      	cmp	r2, r4
 80204d2:	eb06 070e 	add.w	r7, r6, lr
 80204d6:	dc02      	bgt.n	80204de <__ieee754_sqrt+0xca>
 80204d8:	d112      	bne.n	8020500 <__ieee754_sqrt+0xec>
 80204da:	428f      	cmp	r7, r1
 80204dc:	d810      	bhi.n	8020500 <__ieee754_sqrt+0xec>
 80204de:	2f00      	cmp	r7, #0
 80204e0:	eb07 0e06 	add.w	lr, r7, r6
 80204e4:	da42      	bge.n	802056c <__ieee754_sqrt+0x158>
 80204e6:	f1be 0f00 	cmp.w	lr, #0
 80204ea:	db3f      	blt.n	802056c <__ieee754_sqrt+0x158>
 80204ec:	f104 0801 	add.w	r8, r4, #1
 80204f0:	1b12      	subs	r2, r2, r4
 80204f2:	428f      	cmp	r7, r1
 80204f4:	bf88      	it	hi
 80204f6:	f102 32ff 	addhi.w	r2, r2, #4294967295
 80204fa:	1bc9      	subs	r1, r1, r7
 80204fc:	4433      	add	r3, r6
 80204fe:	4644      	mov	r4, r8
 8020500:	0052      	lsls	r2, r2, #1
 8020502:	f1bc 0c01 	subs.w	ip, ip, #1
 8020506:	eb02 72d1 	add.w	r2, r2, r1, lsr #31
 802050a:	ea4f 0656 	mov.w	r6, r6, lsr #1
 802050e:	ea4f 0141 	mov.w	r1, r1, lsl #1
 8020512:	d1dd      	bne.n	80204d0 <__ieee754_sqrt+0xbc>
 8020514:	430a      	orrs	r2, r1
 8020516:	d006      	beq.n	8020526 <__ieee754_sqrt+0x112>
 8020518:	1c5c      	adds	r4, r3, #1
 802051a:	bf13      	iteet	ne
 802051c:	3301      	addne	r3, #1
 802051e:	3501      	addeq	r5, #1
 8020520:	4663      	moveq	r3, ip
 8020522:	f023 0301 	bicne.w	r3, r3, #1
 8020526:	106a      	asrs	r2, r5, #1
 8020528:	085b      	lsrs	r3, r3, #1
 802052a:	07e9      	lsls	r1, r5, #31
 802052c:	f102 527f 	add.w	r2, r2, #1069547520	; 0x3fc00000
 8020530:	f502 1200 	add.w	r2, r2, #2097152	; 0x200000
 8020534:	bf48      	it	mi
 8020536:	f043 4300 	orrmi.w	r3, r3, #2147483648	; 0x80000000
 802053a:	eb02 5500 	add.w	r5, r2, r0, lsl #20
 802053e:	461c      	mov	r4, r3
 8020540:	e780      	b.n	8020444 <__ieee754_sqrt+0x30>
 8020542:	0aca      	lsrs	r2, r1, #11
 8020544:	3815      	subs	r0, #21
 8020546:	0549      	lsls	r1, r1, #21
 8020548:	2a00      	cmp	r2, #0
 802054a:	d0fa      	beq.n	8020542 <__ieee754_sqrt+0x12e>
 802054c:	02d6      	lsls	r6, r2, #11
 802054e:	d50a      	bpl.n	8020566 <__ieee754_sqrt+0x152>
 8020550:	f1c3 0420 	rsb	r4, r3, #32
 8020554:	fa21 f404 	lsr.w	r4, r1, r4
 8020558:	1e5d      	subs	r5, r3, #1
 802055a:	4099      	lsls	r1, r3
 802055c:	4322      	orrs	r2, r4
 802055e:	1b43      	subs	r3, r0, r5
 8020560:	e78b      	b.n	802047a <__ieee754_sqrt+0x66>
 8020562:	4618      	mov	r0, r3
 8020564:	e7f0      	b.n	8020548 <__ieee754_sqrt+0x134>
 8020566:	0052      	lsls	r2, r2, #1
 8020568:	3301      	adds	r3, #1
 802056a:	e7ef      	b.n	802054c <__ieee754_sqrt+0x138>
 802056c:	46a0      	mov	r8, r4
 802056e:	e7bf      	b.n	80204f0 <__ieee754_sqrt+0xdc>
 8020570:	7ff00000 	.word	0x7ff00000

08020574 <fabs>:
 8020574:	ec51 0b10 	vmov	r0, r1, d0
 8020578:	ee10 2a10 	vmov	r2, s0
 802057c:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 8020580:	ec43 2b10 	vmov	d0, r2, r3
 8020584:	4770      	bx	lr

08020586 <finite>:
 8020586:	ee10 3a90 	vmov	r3, s1
 802058a:	f043 4000 	orr.w	r0, r3, #2147483648	; 0x80000000
 802058e:	f500 1080 	add.w	r0, r0, #1048576	; 0x100000
 8020592:	0fc0      	lsrs	r0, r0, #31
 8020594:	4770      	bx	lr

08020596 <matherr>:
 8020596:	2000      	movs	r0, #0
 8020598:	4770      	bx	lr
 802059a:	0000      	movs	r0, r0
 802059c:	0000      	movs	r0, r0
	...

080205a0 <nan>:
 80205a0:	ed9f 0b01 	vldr	d0, [pc, #4]	; 80205a8 <nan+0x8>
 80205a4:	4770      	bx	lr
 80205a6:	bf00      	nop
 80205a8:	00000000 	.word	0x00000000
 80205ac:	7ff80000 	.word	0x7ff80000

080205b0 <rint>:
 80205b0:	b5f7      	push	{r0, r1, r2, r4, r5, r6, r7, lr}
 80205b2:	ec51 0b10 	vmov	r0, r1, d0
 80205b6:	f3c1 520a 	ubfx	r2, r1, #20, #11
 80205ba:	f2a2 36ff 	subw	r6, r2, #1023	; 0x3ff
 80205be:	2e13      	cmp	r6, #19
 80205c0:	460b      	mov	r3, r1
 80205c2:	ee10 4a10 	vmov	r4, s0
 80205c6:	ea4f 75d1 	mov.w	r5, r1, lsr #31
 80205ca:	dc56      	bgt.n	802067a <rint+0xca>
 80205cc:	2e00      	cmp	r6, #0
 80205ce:	da2b      	bge.n	8020628 <rint+0x78>
 80205d0:	f021 4200 	bic.w	r2, r1, #2147483648	; 0x80000000
 80205d4:	4302      	orrs	r2, r0
 80205d6:	d023      	beq.n	8020620 <rint+0x70>
 80205d8:	f3c1 0213 	ubfx	r2, r1, #0, #20
 80205dc:	4302      	orrs	r2, r0
 80205de:	4254      	negs	r4, r2
 80205e0:	4314      	orrs	r4, r2
 80205e2:	0c4b      	lsrs	r3, r1, #17
 80205e4:	0b24      	lsrs	r4, r4, #12
 80205e6:	045b      	lsls	r3, r3, #17
 80205e8:	f404 2400 	and.w	r4, r4, #524288	; 0x80000
 80205ec:	ea44 0103 	orr.w	r1, r4, r3
 80205f0:	460b      	mov	r3, r1
 80205f2:	492f      	ldr	r1, [pc, #188]	; (80206b0 <rint+0x100>)
 80205f4:	eb01 01c5 	add.w	r1, r1, r5, lsl #3
 80205f8:	e9d1 6700 	ldrd	r6, r7, [r1]
 80205fc:	4602      	mov	r2, r0
 80205fe:	4639      	mov	r1, r7
 8020600:	4630      	mov	r0, r6
 8020602:	f7df fe4b 	bl	800029c <__adddf3>
 8020606:	e9cd 0100 	strd	r0, r1, [sp]
 802060a:	463b      	mov	r3, r7
 802060c:	4632      	mov	r2, r6
 802060e:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020612:	f7df fe41 	bl	8000298 <__aeabi_dsub>
 8020616:	f021 4300 	bic.w	r3, r1, #2147483648	; 0x80000000
 802061a:	ea43 77c5 	orr.w	r7, r3, r5, lsl #31
 802061e:	4639      	mov	r1, r7
 8020620:	ec41 0b10 	vmov	d0, r0, r1
 8020624:	b003      	add	sp, #12
 8020626:	bdf0      	pop	{r4, r5, r6, r7, pc}
 8020628:	4a22      	ldr	r2, [pc, #136]	; (80206b4 <rint+0x104>)
 802062a:	4132      	asrs	r2, r6
 802062c:	ea01 0702 	and.w	r7, r1, r2
 8020630:	4307      	orrs	r7, r0
 8020632:	d0f5      	beq.n	8020620 <rint+0x70>
 8020634:	0852      	lsrs	r2, r2, #1
 8020636:	4011      	ands	r1, r2
 8020638:	430c      	orrs	r4, r1
 802063a:	d00b      	beq.n	8020654 <rint+0xa4>
 802063c:	ea23 0202 	bic.w	r2, r3, r2
 8020640:	f44f 2380 	mov.w	r3, #262144	; 0x40000
 8020644:	2e13      	cmp	r6, #19
 8020646:	fa43 f306 	asr.w	r3, r3, r6
 802064a:	bf0c      	ite	eq
 802064c:	f04f 4400 	moveq.w	r4, #2147483648	; 0x80000000
 8020650:	2400      	movne	r4, #0
 8020652:	4313      	orrs	r3, r2
 8020654:	4916      	ldr	r1, [pc, #88]	; (80206b0 <rint+0x100>)
 8020656:	eb01 05c5 	add.w	r5, r1, r5, lsl #3
 802065a:	4622      	mov	r2, r4
 802065c:	e9d5 4500 	ldrd	r4, r5, [r5]
 8020660:	4620      	mov	r0, r4
 8020662:	4629      	mov	r1, r5
 8020664:	f7df fe1a 	bl	800029c <__adddf3>
 8020668:	e9cd 0100 	strd	r0, r1, [sp]
 802066c:	4622      	mov	r2, r4
 802066e:	462b      	mov	r3, r5
 8020670:	e9dd 0100 	ldrd	r0, r1, [sp]
 8020674:	f7df fe10 	bl	8000298 <__aeabi_dsub>
 8020678:	e7d2      	b.n	8020620 <rint+0x70>
 802067a:	2e33      	cmp	r6, #51	; 0x33
 802067c:	dd07      	ble.n	802068e <rint+0xde>
 802067e:	f5b6 6f80 	cmp.w	r6, #1024	; 0x400
 8020682:	d1cd      	bne.n	8020620 <rint+0x70>
 8020684:	ee10 2a10 	vmov	r2, s0
 8020688:	f7df fe08 	bl	800029c <__adddf3>
 802068c:	e7c8      	b.n	8020620 <rint+0x70>
 802068e:	f2a2 4613 	subw	r6, r2, #1043	; 0x413
 8020692:	f04f 32ff 	mov.w	r2, #4294967295
 8020696:	40f2      	lsrs	r2, r6
 8020698:	4210      	tst	r0, r2
 802069a:	d0c1      	beq.n	8020620 <rint+0x70>
 802069c:	0852      	lsrs	r2, r2, #1
 802069e:	4210      	tst	r0, r2
 80206a0:	bf1f      	itttt	ne
 80206a2:	f04f 4480 	movne.w	r4, #1073741824	; 0x40000000
 80206a6:	ea20 0202 	bicne.w	r2, r0, r2
 80206aa:	4134      	asrne	r4, r6
 80206ac:	4314      	orrne	r4, r2
 80206ae:	e7d1      	b.n	8020654 <rint+0xa4>
 80206b0:	08029ff0 	.word	0x08029ff0
 80206b4:	000fffff 	.word	0x000fffff

080206b8 <scalbn>:
 80206b8:	b570      	push	{r4, r5, r6, lr}
 80206ba:	ec55 4b10 	vmov	r4, r5, d0
 80206be:	f3c5 520a 	ubfx	r2, r5, #20, #11
 80206c2:	4606      	mov	r6, r0
 80206c4:	462b      	mov	r3, r5
 80206c6:	b9aa      	cbnz	r2, 80206f4 <scalbn+0x3c>
 80206c8:	f025 4300 	bic.w	r3, r5, #2147483648	; 0x80000000
 80206cc:	4323      	orrs	r3, r4
 80206ce:	d03b      	beq.n	8020748 <scalbn+0x90>
 80206d0:	4b31      	ldr	r3, [pc, #196]	; (8020798 <scalbn+0xe0>)
 80206d2:	4629      	mov	r1, r5
 80206d4:	2200      	movs	r2, #0
 80206d6:	ee10 0a10 	vmov	r0, s0
 80206da:	f7df ff95 	bl	8000608 <__aeabi_dmul>
 80206de:	4b2f      	ldr	r3, [pc, #188]	; (802079c <scalbn+0xe4>)
 80206e0:	429e      	cmp	r6, r3
 80206e2:	4604      	mov	r4, r0
 80206e4:	460d      	mov	r5, r1
 80206e6:	da12      	bge.n	802070e <scalbn+0x56>
 80206e8:	a327      	add	r3, pc, #156	; (adr r3, 8020788 <scalbn+0xd0>)
 80206ea:	e9d3 2300 	ldrd	r2, r3, [r3]
 80206ee:	f7df ff8b 	bl	8000608 <__aeabi_dmul>
 80206f2:	e009      	b.n	8020708 <scalbn+0x50>
 80206f4:	f240 71ff 	movw	r1, #2047	; 0x7ff
 80206f8:	428a      	cmp	r2, r1
 80206fa:	d10c      	bne.n	8020716 <scalbn+0x5e>
 80206fc:	ee10 2a10 	vmov	r2, s0
 8020700:	4620      	mov	r0, r4
 8020702:	4629      	mov	r1, r5
 8020704:	f7df fdca 	bl	800029c <__adddf3>
 8020708:	4604      	mov	r4, r0
 802070a:	460d      	mov	r5, r1
 802070c:	e01c      	b.n	8020748 <scalbn+0x90>
 802070e:	f3c1 520a 	ubfx	r2, r1, #20, #11
 8020712:	460b      	mov	r3, r1
 8020714:	3a36      	subs	r2, #54	; 0x36
 8020716:	4432      	add	r2, r6
 8020718:	f240 71fe 	movw	r1, #2046	; 0x7fe
 802071c:	428a      	cmp	r2, r1
 802071e:	dd0b      	ble.n	8020738 <scalbn+0x80>
 8020720:	ec45 4b11 	vmov	d1, r4, r5
 8020724:	ed9f 0b1a 	vldr	d0, [pc, #104]	; 8020790 <scalbn+0xd8>
 8020728:	f000 f83c 	bl	80207a4 <copysign>
 802072c:	a318      	add	r3, pc, #96	; (adr r3, 8020790 <scalbn+0xd8>)
 802072e:	e9d3 2300 	ldrd	r2, r3, [r3]
 8020732:	ec51 0b10 	vmov	r0, r1, d0
 8020736:	e7da      	b.n	80206ee <scalbn+0x36>
 8020738:	2a00      	cmp	r2, #0
 802073a:	dd08      	ble.n	802074e <scalbn+0x96>
 802073c:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8020740:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 8020744:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 8020748:	ec45 4b10 	vmov	d0, r4, r5
 802074c:	bd70      	pop	{r4, r5, r6, pc}
 802074e:	f112 0f35 	cmn.w	r2, #53	; 0x35
 8020752:	da0d      	bge.n	8020770 <scalbn+0xb8>
 8020754:	f24c 3350 	movw	r3, #50000	; 0xc350
 8020758:	429e      	cmp	r6, r3
 802075a:	ec45 4b11 	vmov	d1, r4, r5
 802075e:	dce1      	bgt.n	8020724 <scalbn+0x6c>
 8020760:	ed9f 0b09 	vldr	d0, [pc, #36]	; 8020788 <scalbn+0xd0>
 8020764:	f000 f81e 	bl	80207a4 <copysign>
 8020768:	a307      	add	r3, pc, #28	; (adr r3, 8020788 <scalbn+0xd0>)
 802076a:	e9d3 2300 	ldrd	r2, r3, [r3]
 802076e:	e7e0      	b.n	8020732 <scalbn+0x7a>
 8020770:	f023 43ff 	bic.w	r3, r3, #2139095040	; 0x7f800000
 8020774:	3236      	adds	r2, #54	; 0x36
 8020776:	f423 03e0 	bic.w	r3, r3, #7340032	; 0x700000
 802077a:	ea43 5502 	orr.w	r5, r3, r2, lsl #20
 802077e:	4620      	mov	r0, r4
 8020780:	4629      	mov	r1, r5
 8020782:	2200      	movs	r2, #0
 8020784:	4b06      	ldr	r3, [pc, #24]	; (80207a0 <scalbn+0xe8>)
 8020786:	e7b2      	b.n	80206ee <scalbn+0x36>
 8020788:	c2f8f359 	.word	0xc2f8f359
 802078c:	01a56e1f 	.word	0x01a56e1f
 8020790:	8800759c 	.word	0x8800759c
 8020794:	7e37e43c 	.word	0x7e37e43c
 8020798:	43500000 	.word	0x43500000
 802079c:	ffff3cb0 	.word	0xffff3cb0
 80207a0:	3c900000 	.word	0x3c900000

080207a4 <copysign>:
 80207a4:	ec51 0b10 	vmov	r0, r1, d0
 80207a8:	ee11 0a90 	vmov	r0, s3
 80207ac:	ee10 2a10 	vmov	r2, s0
 80207b0:	f021 4100 	bic.w	r1, r1, #2147483648	; 0x80000000
 80207b4:	f000 4000 	and.w	r0, r0, #2147483648	; 0x80000000
 80207b8:	ea41 0300 	orr.w	r3, r1, r0
 80207bc:	ec43 2b10 	vmov	d0, r2, r3
 80207c0:	4770      	bx	lr
	...

080207c4 <_init>:
 80207c4:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80207c6:	bf00      	nop
 80207c8:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80207ca:	bc08      	pop	{r3}
 80207cc:	469e      	mov	lr, r3
 80207ce:	4770      	bx	lr

080207d0 <_fini>:
 80207d0:	b5f8      	push	{r3, r4, r5, r6, r7, lr}
 80207d2:	bf00      	nop
 80207d4:	bcf8      	pop	{r3, r4, r5, r6, r7}
 80207d6:	bc08      	pop	{r3}
 80207d8:	469e      	mov	lr, r3
 80207da:	4770      	bx	lr
